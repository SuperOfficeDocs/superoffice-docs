### YamlMime:ManagedReference
items:
- uid: CRMScript.Native.HtmlElement
  commentId: T:CRMScript.Native.HtmlElement
  id: HtmlElement
  langs:
  - crmscript
  children:
  - CRMScript.Native.HtmlElement.clearValue()
  - CRMScript.Native.HtmlElement.getFieldValue(String)
  - CRMScript.Native.HtmlElement.getNextTabIndex()
  - CRMScript.Native.HtmlElement.getTabIndexString()
  - CRMScript.Native.HtmlElement.getTabIndexString(Bool)
  - CRMScript.Native.HtmlElement.getTypeName()
  - CRMScript.Native.HtmlElement.isEmpty()
  - CRMScript.Native.HtmlElement.setDisabled(Bool)
  - CRMScript.Native.HtmlElement.setErrorMessage(String)
  - CRMScript.Native.HtmlElement.setFieldValue(String,Map)
  - CRMScript.Native.HtmlElement.setFromCgi()
  - CRMScript.Native.HtmlElement.setInfoMessage(String)
  - CRMScript.Native.HtmlElement.setNotEditable(Bool)
  - CRMScript.Native.HtmlElement.setValue(String)
  - CRMScript.Native.HtmlElement.toBool()
  - CRMScript.Native.HtmlElement.toInteger()
  - CRMScript.Native.HtmlElement.toString()
  name: HtmlElement
  nameWithType: HtmlElement
  fullName: CRMScript.Native.HtmlElement
  type: Class
  summary: "\nRepresents HTML elements in the SuperOffice UI.\n"
  example: 
- uid: CRMScript.Native.HtmlElement.clearValue()
  commentId: M:CRMScript.Native.HtmlElement.clearValue()
  id: 'clearValue()'
  so.intellisense: HtmlElement.clearValue
  so.version: 7.1.0
  langs:
  - crmscript
  name: 'clearValue()'
  nameWithType: HtmlElement.clearValue()
  fullName: CRMScript.Native.HtmlElement.clearValue()
  type: Method
  summary: "\nClears any selected values from elements that support this property.\n"
  remarks: 
  syntax: 
    content: Void clearValue()
    parameters: []
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.Native.HtmlElement.getFieldValue(String)
  commentId: M:CRMScript.Native.HtmlElement.getFieldValue(String)
  id: 'getFieldValue(String)'
  so.intellisense: HtmlElement.getFieldValue
  langs:
  - crmscript
  name: 'getFieldValue(String)'
  nameWithType: HtmlElement.getFieldValue(String)
  fullName: CRMScript.Native.HtmlElement.getFieldValue(String)
  type: Method
  summary: "\nReturns the value of a specific field.\n"
  remarks: 
  syntax: 
    content: String getFieldValue(String field)
    parameters:
    - id: field
      type: CRMScript.Global.String
      description: "The name of the field to get."
    return:
      type: CRMScript.Global.String
      description: "The value of field."
  example: 
- uid: CRMScript.Native.HtmlElement.getNextTabIndex()
  commentId: M:CRMScript.Native.HtmlElement.getNextTabIndex()
  id: 'getNextTabIndex()'
  so.intellisense: HtmlElement.getNextTabIndex
  langs:
  - crmscript
  name: 'getNextTabIndex()'
  nameWithType: HtmlElement.getNextTabIndex()
  fullName: CRMScript.Native.HtmlElement.getNextTabIndex()
  type: Method
  summary: "\nIncrements the index counter and returns.\n"
  remarks: "\nThe HTML tabindex attribute specifies the tab order of an element. It determines the sequence of entering fields with Tab or Shift+Tab.\n"
  syntax: 
    content: Integer getNextTabIndex()
    parameters: []
    return:
      type: CRMScript.Global.Integer
      description: "The next valid tab index number."
  example: 
- uid: CRMScript.Native.HtmlElement.getTabIndexString()
  commentId: M:CRMScript.Native.HtmlElement.getTabIndexString()
  id: 'getTabIndexString()'
  so.intellisense: HtmlElement.getTabIndexString
  langs:
  - crmscript
  name: 'getTabIndexString()'
  nameWithType: HtmlElement.getTabIndexString()
  fullName: CRMScript.Native.HtmlElement.getTabIndexString()
  type: Method
  summary: "\nRetrieves the tabulator index string of the element<p></p>\nA variant of <code>getTabIndexString()</code> that omits element ID if it is the 1st element.\n"
  remarks: "\nThe HTML tabindex attribute specifies the tab order of an element. It determines the sequence of entering fields with Tab or Shift+Tab.\n"
  syntax: 
    content: String getTabIndexString()
    parameters: []
    return:
      type: CRMScript.Global.String
      description: "The tabulator index string of the element."
  example: 
- uid: CRMScript.Native.HtmlElement.getTabIndexString(Bool)
  commentId: M:CRMScript.Native.HtmlElement.getTabIndexString(Bool)
  id: 'getTabIndexString(Bool)'
  so.intellisense: HtmlElement.getTabIndexString
  langs:
  - crmscript
  name: 'getTabIndexString(Bool)'
  nameWithType: HtmlElement.getTabIndexString(Bool)
  fullName: CRMScript.Native.HtmlElement.getTabIndexString(Bool)
  type: Method
  summary: "\nRetrieves the tabulator index string of the element and omits element ID if it is the 1st element.\n"
  remarks: "\nThe HTML tabindex attribute specifies the tab order of an element. It determines the sequence of entering fields with Tab or Shift+Tab.\n"
  syntax: 
    content: String getTabIndexString(Bool noId)
    parameters:
    - id: noId
      type: CRMScript.Global.Bool
      description: "Omit element ID if it is the 1st element?"
    return:
      type: CRMScript.Global.String
      description: "The tabulator index string of the element."
  example:
- uid: CRMScript.Native.HtmlElement.getTypeName()
  commentId: M:CRMScript.Native.HtmlElement.getTypeName()
  id: 'getTypeName()'
  so.intellisense: HtmlElement.getTypeName
  so.version: 4.3.5
  langs:
  - crmscript
  name: 'getTypeName()'
  nameWithType: HtmlElement.getTypeName()
  fullName: CRMScript.Native.HtmlElement.getTypeName()
  type: Method
  summary: "\nReturns the element type. For example, HtmlAnchorLine or HtmlGrid.\n"
  remarks: "\nLook up specific elements in the bLogic screen element reference.\n"
  syntax: 
    content: String getTypeName()
    parameters: []
    return:
      type: CRMScript.Global.String
      description: "The element type."
  example: 
- uid: CRMScript.Native.HtmlElement.isEmpty()
  commentId: M:CRMScript.Native.HtmlElement.isEmpty()
  id: 'isEmpty()'
  so.intellisense: HtmlElement.isEmpty
  langs:
  - crmscript
  name: 'isEmpty()'
  nameWithType: HtmlElement.isEmpty()
  fullName: CRMScript.Native.HtmlElement.isEmpty()
  type: Method
  summary: "\nReturns true if the HtmlElement says it is empty.\n"
  remarks: "\nThat an element is empty means different things depending on the element type. For example, a list element should be empty if it has no rows, but a code element should be empty if it contains no text.\n"
  syntax: 
    content: Bool isEmpty()
    parameters: []
    return:
      type: CRMScript.Global.Bool
      description: "True if the HtmlElement says it is empty; otherwise, false."
  example: 
- uid: CRMScript.Native.HtmlElement.setDisabled(Bool)
  commentId: M:CRMScript.Native.HtmlElement.setDisabled(Bool)
  id: 'setDisabled(Bool)'
  so.intellisense: HtmlElement.setDisabled
  langs:
  - crmscript
  name: 'setDisabled(Bool)'
  nameWithType: HtmlElement.setDisabled(Bool)
  fullName: CRMScript.Native.HtmlElement.setDisabled(Bool)
  type: Method
  summary: "\nToggles whether the element is visible or invisible.\n"
  remarks: "\nCommonly used in combination with role-based access.\n"
  syntax: 
    content: Void setDisabled(Bool invisible)
    parameters:
    - id: invisible
      type: CRMScript.Global.Bool
      description: "True if the element should be invisible."
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.Native.HtmlElement.setErrorMessage(String)
  commentId: M:CRMScript.Native.HtmlElement.setErrorMessage(String)
  id: 'setErrorMessage(String)'
  so.intellisense: HtmlElement.setErrorMessage
  langs:
  - crmscript
  name: 'setErrorMessage(String)'
  nameWithType: HtmlElement.setErrorMessage(String)
  fullName: CRMScript.Native.HtmlElement.setErrorMessage(String)
  type: Method
  summary: "\nSets an error message above the element if the form is posted.\n"
  remarks: "\nUsed to inform users that something went wrong and attempt to help them out.\n"
  syntax: 
    content: Void setErrorMessage(String errorMessage)
    parameters:
    - id: errorMessage
      type: CRMScript.Global.String
      description: "The message to set."
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>HtmlElement page = getHtmlElement(&quot;HtmlPage&quot;);\npage.setErrorMessage(&quot;This page contains an error&quot;);</code></pre>\n"
- uid: CRMScript.Native.HtmlElement.setFieldValue(String,Map)
  commentId: M:CRMScript.Native.HtmlElement.setFieldValue(String,Map)
  id: 'setFieldValue(String,Map)'
  so.intellisense: HtmlElement.setFieldValue
  langs:
  - crmscript
  name: 'setFieldValue(String,Map)'
  nameWithType: HtmlElement.setFieldValue(String,Map)
  fullName: CRMScript.Native.HtmlElement.setFieldValue(String,Map)
  type: Method
  summary: "\nSets one or more field values on an element.\n"
  remarks: 
  syntax: 
    content: Void setFieldValue(String name, Map values)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: 
    - id: values
      type: CRMScript.Native.Map
      description: "Map of values."
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>HtmlElement formPage;\n\nMap m;\nm.insert(&quot;name&quot;, &quot;superButton&quot;);\nm.insert(&quot;label&quot;, &quot;Click me!&quot;);\nm.insert(&quot;style&quot;, &quot;StyleGreen&quot;);\n\nformPage.setFieldValue(&quot;addButton&quot;, m);</code></pre>\n"
- uid: CRMScript.Native.HtmlElement.setFromCgi()
  commentId: M:CRMScript.Native.HtmlElement.setFromCgi()
  id: 'setFromCgi()'
  so.intellisense: HtmlElement.setFromCgi
  so.version: 7.5
  langs:
  - crmscript
  name: 'setFromCgi()'
  nameWithType: HtmlElement.setFromCgi()
  fullName: CRMScript.Native.HtmlElement.setFromCgi()
  type: Method
  summary: "\nCalled when the element should find its values from the CGI variables.\n"
  remarks: "\nCommonly used for screens containing forms.\n"
  syntax: 
    content: Void setFromCgi()
    parameters: []
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.Native.HtmlElement.setInfoMessage(String)
  commentId: M:CRMScript.Native.HtmlElement.setInfoMessage(String)
  id: 'setInfoMessage(String)'
  so.intellisense: HtmlElement.setInfoMessage
  so.version: 4.2.12
  langs:
  - crmscript
  name: 'setInfoMessage(String)'
  nameWithType: HtmlElement.setInfoMessage(String)
  fullName: CRMScript.Native.HtmlElement.setInfoMessage(String)
  type: Method
  summary: "\nSets an info message above the element if the form is posted.\n"
  remarks: "\nUsed to display the text of a purely informative nature.\n"
  syntax: 
    content: Void setInfoMessage(String infoMessage)
    parameters:
    - id: infoMessage
      type: CRMScript.Global.String
      description: "The message."
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.Native.HtmlElement.setNotEditable(Bool)
  commentId: M:CRMScript.Native.HtmlElement.setNotEditable(Bool)
  id: 'setNotEditable(Bool)'
  so.intellisense: HtmlElement.setNotEditable
  so.version: 4.0.0
  langs:
  - crmscript
  name: 'setNotEditable(Bool)'
  nameWithType: HtmlElement.setNotEditable(Bool)
  fullName: CRMScript.Native.HtmlElement.setNotEditable(Bool)
  type: Method
  summary: "\nToggles whether the element can be edited (for those elements that support this property).\n"
  remarks: "\n Commonly used in combination with role-based access.<p></p>\nAvailable from 3.1.8.36\n"
  syntax: 
    content: Void setNotEditable(Bool canEdit)
    parameters:
    - id: canEdit
      type: CRMScript.Global.Bool
      description: "Can the element be edited?"
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.Native.HtmlElement.setValue(String)
  commentId: M:CRMScript.Native.HtmlElement.setValue(String)
  id: 'setValue(String)'
  so.intellisense: HtmlElement.setValue
  langs:
  - crmscript
  name: 'setValue(String)'
  nameWithType: HtmlElement.setValue(String)
  fullName: CRMScript.Native.HtmlElement.setValue(String)
  type: Method
  summary: "\nSets the value of a specific element.\n"
  remarks: 
  syntax: 
    content: Void setValue(String value)
    parameters:
    - id: value
      type: CRMScript.Global.String
      description: "Value of the element."
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>HtmlElement selectDate;\nselectDate.setValue(&quot;2020.09.10&quot;);</code></pre><pre><code>HtmlElement t;\nt.setValue(&quot;x_boolean&quot;, &quot;1&quot;)</code></pre>\n"
- uid: CRMScript.Native.HtmlElement.toBool()
  commentId: M:CRMScript.Native.HtmlElement.toBool()
  id: 'toBool()'
  so.intellisense: HtmlElement.toBool
  langs:
  - crmscript
  name: 'toBool()'
  nameWithType: HtmlElement.toBool()
  fullName: CRMScript.Native.HtmlElement.toBool()
  type: Method
  summary: "\nReturns the value of the element as a Bool.\n"
  remarks: 
  syntax: 
    content: Bool toBool()
    parameters: []
    return:
      type: CRMScript.Global.Bool
      description: "The boolean representation of the element."
  example: 
- uid: CRMScript.Native.HtmlElement.toInteger()
  commentId: M:CRMScript.Native.HtmlElement.toInteger()
  id: 'toInteger()'
  so.intellisense: HtmlElement.toInteger
  langs:
  - crmscript
  name: 'toInteger()'
  nameWithType: HtmlElement.toInteger()
  fullName: CRMScript.Native.HtmlElement.toInteger()
  type: Method
  summary: "\nReturns the element value as an integer.\n"
  remarks: 
  syntax: 
    content: Integer toInteger()
    parameters: []
    return:
      type: CRMScript.Global.Integer
      description: "The numeric representation of the element."
  example: 
- uid: CRMScript.Native.HtmlElement.toString()
  commentId: M:CRMScript.Native.HtmlElement.toString()
  id: 'toString()'
  so.intellisense: HtmlElement.toString
  langs:
  - crmscript
  name: 'toString()'
  nameWithType: HtmlElement.toString()
  fullName: CRMScript.Native.HtmlElement.toString()
  type: Method
  summary: "\nReturns the value of the element as a String.\n"
  remarks: 
  syntax: 
    content: String toString()
    parameters: []
    return:
      type: CRMScript.Global.String
      description: "The string representation of the element."
  example: 
references:
- uid: CRMScript.Native.HtmlElement
  commentId: T:CRMScript.Native.HtmlElement
  isExternal: true
  name: HtmlElement
  nameWithType: HtmlElement
  fullName: CRMScript.Native.HtmlElement
- uid: CRMScript.Global.Void
  commentId: T:CRMScript.Global.Void
  isExternal: true
  name: Void
  nameWithType: Void
  fullName: CRMScript.Global.Void
- uid: CRMScript.Global.String
  commentId: T:CRMScript.Global.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: CRMScript.Global.String
- uid: CRMScript.Global.Integer
  commentId: T:CRMScript.Global.Integer
  isExternal: true
  name: Integer
  nameWithType: Integer
  fullName: CRMScript.Global.Integer
- uid: CRMScript.Global.Bool
  commentId: T:CRMScript.Global.Bool
  isExternal: true
  name: Bool
  nameWithType: Bool
  fullName: CRMScript.Global.Bool
- uid: CRMScript.Native.Map
  commentId: T:CRMScript.Native.Map
  isExternal: true
  name: Map
  nameWithType: Map
  fullName: CRMScript.Native.Map