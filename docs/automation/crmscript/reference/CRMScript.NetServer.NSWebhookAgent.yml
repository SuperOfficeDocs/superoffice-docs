### YamlMime:ManagedReference
items:
- uid: CRMScript.NetServer.NSWebhookAgent
  commentId: T:CRMScript.NetServer.NSWebhookAgent
  id: NSWebhookAgent
  so.version: 8.2
  langs:
  - crmscript
  children:
  - CRMScript.NetServer.NSWebhookAgent.#ctor
  - CRMScript.NetServer.NSWebhookAgent.CreateDefaultWebhook()
  - CRMScript.NetServer.NSWebhookAgent.DeleteWebhook(Integer)
  - CRMScript.NetServer.NSWebhookAgent.GetAllWebhooks(String,String,Integer)
  - CRMScript.NetServer.NSWebhookAgent.GetLastError(Integer)
  - CRMScript.NetServer.NSWebhookAgent.GetWebhook(Integer)
  - CRMScript.NetServer.NSWebhookAgent.SaveWebhook(NSWebhook)
  - CRMScript.NetServer.NSWebhookAgent.SignalEvent(String,Integer,StringObjectDictionary)
  - CRMScript.NetServer.NSWebhookAgent.TestWebhook(NSWebhook)
  name: NSWebhookAgent
  nameWithType: NSWebhookAgent
  fullName: CRMScript.NetServer.NSWebhookAgent
  type: Class
  summary: "\nWebhook definitions* webhooks signal other systems about events inside NetServer.\n"
  example: 
  - "\n<pre><code>NSWebhookAgent agent;\nagent.callMethod(arg1, arg2);</code></pre>\n"
- uid: CRMScript.NetServer.NSWebhookAgent.#ctor
  commentId: M:CRMScript.NetServer.NSWebhookAgent.#ctor
  id: '#ctor'
  so.intellisense: Void.NSWebhookAgent
  langs:
  - crmscript
  name: NSWebhookAgent()
  nameWithType: NSWebhookAgent.#ctor
  fullName: CRMScript.NetServer.NSWebhookAgent.#ctor
  type: Constructor
  summary: # TODO
  remarks: 
  syntax: 
    content: NSWebhookAgent
  example: 
  - "\n<pre><code>NSWebhookAgent agent;\nagent.callMethod(arg1, arg2);</code></pre>\n"
- uid: CRMScript.NetServer.NSWebhookAgent.CreateDefaultWebhook()
  commentId: M:CRMScript.NetServer.NSWebhookAgent.CreateDefaultWebhook()
  id: 'CreateDefaultWebhook()'
  so.intellisense: NSWebhookAgent.CreateDefaultWebhook
  so.version: 8.2
  langs:
  - crmscript
  name: 'CreateDefaultWebhook()'
  nameWithType: NSWebhookAgent.CreateDefaultWebhook()
  fullName: CRMScript.NetServer.NSWebhookAgent.CreateDefaultWebhook()
  type: Method
  summary: "\nSets default values into a new NSWebhook.\n"
  remarks: "\nNetServer calculates default values (for example, Country) on the entity, which is required when creating/storing a new instance\n"
  syntax: 
    content: NSWebhook CreateDefaultWebhook()
    parameters: []
    return:
      type: CRMScript.NetServer.NSWebhook
      description: "A new NSWebhook with default values."
  example: 
  - "\n<pre><code>NSWebhookAgent agent;\nNSWebhook thing = agent.CreateDefaultWebhook();\nthing = agent.SaveWebhook(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSWebhookAgent.DeleteWebhook(Integer)
  commentId: M:CRMScript.NetServer.NSWebhookAgent.DeleteWebhook(Integer)
  id: 'DeleteWebhook(Integer)'
  so.intellisense: NSWebhookAgent.DeleteWebhook
  so.version: 8.2
  langs:
  - crmscript
  name: 'DeleteWebhook(Integer)'
  nameWithType: NSWebhookAgent.DeleteWebhook(Integer)
  fullName: CRMScript.NetServer.NSWebhookAgent.DeleteWebhook(Integer)
  type: Method
  summary: "\nDeletes the NSWebhook\n"
  remarks: 
  syntax: 
    content: DeleteWebhook(Integer webhook)
    parameters:
    - id: webhook
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>NSWebhookAgent agent;\nagent.DeleteWebhook(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSWebhookAgent.GetAllWebhooks(String,String,Integer)
  commentId: M:CRMScript.NetServer.NSWebhookAgent.GetAllWebhooks(String,String,Integer)
  id: 'GetAllWebhooks(String,String,Integer)'
  so.intellisense: NSWebhookAgent.GetAllWebhooks
  so.version: 8.2
  langs:
  - crmscript
  name: 'GetAllWebhooks(String,String,Integer)'
  nameWithType: NSWebhookAgent.GetAllWebhooks(String,String,Integer)
  fullName: CRMScript.NetServer.NSWebhookAgent.GetAllWebhooks(String,String,Integer)
  type: Method
  summary: "\nReturns all webhooks, according to filter criteria\n"
  remarks:
  syntax: 
    content: NSWebhook[] GetAllWebhooks(String nameFilter, String eventFilter, Integer statusFilter)
    parameters:
    - id: nameFilter
      type: CRMScript.Global.String
      description: 
    - id: eventFilter
      type: CRMScript.Global.String
      description: 
    - id: statusFilter
      type: CRMScript.Global.Integer
      description: "See <xref href=\"CRMScript.NetServer.WebhookState\" data-throw-if-not-resolved=\"false\"></xref>."
    return:
      type: CRMScript.NetServer.NSWebhook[]
  example: 
  - "\n<pre><code>NSWebhookAgent agent;\nString nameFilter;\nString eventFilter;\nInteger statusFilter;\nNSWebhook[] res = agent.GetAllWebhooks(nameFilter, eventFilter, statusFilter);</code></pre>\n"
- uid: CRMScript.NetServer.NSWebhookAgent.GetLastError(Integer)
  commentId: M:CRMScript.NetServer.NSWebhookAgent.GetLastError(Integer)
  id: 'GetLastError(Integer)'
  so.intellisense: NSWebhookAgent.GetLastError
  so.version: 8.2
  langs:
  - crmscript
  name: 'GetLastError(Integer)'
  nameWithType: NSWebhookAgent.GetLastError(Integer)
  fullName: CRMScript.NetServer.NSWebhookAgent.GetLastError(Integer)
  type: Method
  summary: "\nReturn the most recent error message received when calling this webhook.\n"
  remarks: 
  syntax: 
    content: String GetLastError(Integer webhookId)
    parameters:
    - id: webhookId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.Global.String
      description:
  example: 
  - "\n<pre><code>NSWebhookAgent agent;\nInteger webhookId;\nString res = agent.GetLastError(webhookId);</code></pre>\n"
- uid: CRMScript.NetServer.NSWebhookAgent.GetWebhook(Integer)
  commentId: M:CRMScript.NetServer.NSWebhookAgent.GetWebhook(Integer)
  id: 'GetWebhook(Integer)'
  so.intellisense: NSWebhookAgent.GetWebhook
  so.version: 8.2
  langs:
  - crmscript
  name: 'GetWebhook(Integer)'
  nameWithType: NSWebhookAgent.GetWebhook(Integer)
  fullName: CRMScript.NetServer.NSWebhookAgent.GetWebhook(Integer)
  type: Method
  summary: "\nGets an NSWebhook object.\n"
  remarks: 
  syntax: 
    content: NSWebhook GetWebhook(Integer webhookId)
    parameters:
    - id: webhookId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSWebhook
  example: 
  - "\n<pre><code>NSWebhookAgent agent;\nNSWebhook thing = agent.GetWebhook(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSWebhookAgent.SaveWebhook(NSWebhook)
  commentId: M:CRMScript.NetServer.NSWebhookAgent.SaveWebhook(NSWebhook)
  id: 'SaveWebhook(NSWebhook)'
  so.intellisense: NSWebhookAgent.SaveWebhook
  so.version: 8.2
  langs:
  - crmscript
  name: 'SaveWebhook(NSWebhook)'
  nameWithType: NSWebhookAgent.SaveWebhook(NSWebhook)
  fullName: CRMScript.NetServer.NSWebhookAgent.SaveWebhook(NSWebhook)
  type: Method
  summary: "\nUpdates the existing NSWebhook or creates a new NSWebhook if the id parameter is 0\n"
  remarks: 
  syntax: 
    content: NSWebhook SaveWebhook(NSWebhook webhook)
    parameters:
    - id: webhook
      type: CRMScript.NetServer.NSWebhook
      description: "The NSWebhook to save."
    return:
      type: CRMScript.NetServer.NSWebhook
  example: 
  - "\n<pre><code>NSWebhook  agent;\nNSWebhook thing = agent.CreateDefaultWebhook();\nthing = agent.SaveWebhook(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSWebhookAgent.SignalEvent(String,Integer,StringObjectDictionary)
  commentId: M:CRMScript.NetServer.NSWebhookAgent.SignalEvent(String,Integer,StringObjectDictionary)
  id: 'SignalEvent(String,Integer,StringObjectDictionary)'
  so.intellisense: NSWebhookAgent.SignalEvent
  langs:
  - crmscript
  name: 'SignalEvent(String,Integer,StringObjectDictionary)'
  nameWithType: NSWebhookAgent.SignalEvent(String,Integer,StringObjectDictionary)
  fullName: CRMScript.NetServer.NSWebhookAgent.SignalEvent(String,Integer,StringObjectDictionary)
  type: Method
  summary: "\nSignal webhooks that an event has occurred. All webhooks listening for the event will be notified.\n"
  remarks: 
  syntax: 
    content: Void SignalEvent(String eventName, Integer primaryKey, StringObjectDictionary data)
    parameters:
    - id: eventName
      type: CRMScript.Global.String
      description: 
    - id: primaryKey
      type: CRMScript.Global.Integer
      description: 
    - id: data
      type: CRMScript.Native.StringObjectDictionary
      description:
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>NSWebhookAgent agent;\nString eventName;\nInteger primaryKey;\nStringObjectDictionary data;\nagent.SignalEvent(eventName, primaryKey, data);</code></pre>\n"
- uid: CRMScript.NetServer.NSWebhookAgent.TestWebhook(NSWebhook)
  commentId: M:CRMScript.NetServer.NSWebhookAgent.TestWebhook(NSWebhook)
  id: 'TestWebhook(NSWebhook)'
  so.intellisense: NSWebhookAgent.TestWebhook
  so.version: 8.2
  langs:
  - crmscript
  name: 'TestWebhook(NSWebhook)'
  nameWithType: NSWebhookAgent.TestWebhook(NSWebhook)
  fullName: CRMScript.NetServer.NSWebhookAgent.TestWebhook(NSWebhook)
  type: Method
  summary: "\nPings a webhook with a 'test' event, returns SUCCESS(true) or FAILURE(false) + the response from the webhook target.\n"
  remarks: 
  syntax: 
    content: NSWebhookResult TestWebhook(NSWebhook webhook)
    parameters:
    - id: webhook
      type: CRMScript.NetServer.NSWebhook
      description: 
    return:
      type: CRMScript.NetServer.NSWebhookResult
  example: 
  - "\n<pre><code>NSWebhookAgent agent;\nNSWebhook webhook;\nNSWebhookResult res = agent.TestWebhook(webhook);</code></pre>\n"
references:
- uid: CRMScript.NetServer.NSWebhookAgent
  commentId: T:CRMScript.NetServer.NSWebhookAgent
  isExternal: true
  name: NSWebhookAgent
  nameWithType: NSWebhookAgent
  fullName: CRMScript.NetServer.NSWebhookAgent
- uid: CRMScript.NetServer.NSWebhook
  commentId: T:CRMScript.NetServer.NSWebhook
  isExternal: true
  name: NSWebhook
  nameWithType: NSWebhook
  fullName: CRMScript.NetServer.NSWebhook
- uid: CRMScript.Global.Integer
  commentId: T:CRMScript.Global.Integer
  isExternal: true
  name: Integer
  nameWithType: Integer
  fullName: CRMScript.Global.Integer
- uid: CRMScript.Global.String
  commentId: T:CRMScript.Global.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: CRMScript.Global.String
- uid: CRMScript.Native.StringObjectDictionary
  commentId: T:CRMScript.Native.StringObjectDictionary
  isExternal: true
  name: StringObjectDictionary
  nameWithType: StringObjectDictionary
  fullName: CRMScript.Native.StringObjectDictionary
- uid: CRMScript.NetServer.NSWebhook[]
  isExternal: true
  name: NSWebhook[]
  nameWithType: NSWebhook[]
  fullName: CRMScript.NetServer.NSWebhook[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSWebhook
    isExternal: true
    name: NSWebhook
    nameWithType: NSWebhook
    fullName: CRMScript.NetServer.NSWebhook
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.Global.Void
  commentId: T:CRMScript.Global.Void
  isExternal: true
  name: Void
  nameWithType: Void
  fullName: CRMScript.Global.Void
- uid: CRMScript.NetServer.NSWebhookResult
  commentId: T:CRMScript.NetServer.NSWebhookResult
  isExternal: true
  name: NSWebhookResult
  nameWithType: NSWebhookResult
  fullName: CRMScript.NetServer.NSWebhookResult
- uid: CRMScript.NetServer.WebhookState
  commentId: T:CRMScript.NetServer.WebhookState
  isExternal: true
  name: WebhookState
  nameWithType: WebhookState
  fullName: CRMScript.NetServer.WebhookState