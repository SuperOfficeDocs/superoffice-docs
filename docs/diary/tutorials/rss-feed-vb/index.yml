### YamlMime:Tutorial
uid: tutorial-rss-feed-vb
title: Tutorial - generate RSS feed in VB.Net
metadata:
  title:  Tutorial - generate RSS feed in VB.Net.
  description: In this tutorial, we will create a feed that displays all activities created by other users on the current userâ€™s contact. A feed displays information. Each item in the feed includes metadata about that item.
  audience: Developer
  level: Advanced
  so.topic: tutorial
  author: {github-id}
  so.date: 03.21.2022
  keywords: rss, diary
items:
- title: Introduction
  durationInMinutes: 2
  content: |
    The example handles user authentication with forms authentication mode with a custom login page. Based on the user credentials provided, the link to the RSS feed is generated.

    The second half explains how to generate the XML contents with the relevant activity information. How the formatting of the feed contents is handled will be addressed next, followed by an explanation of how to configure the feed in Outlook Express 2007 enabling Feed subscription through Outlook Express 2007.

    The code example uses the **SuperOffice.CRM.ArchiveLists.ActivityArchiveProvider** to retrieve the activities registered by another user on the current user's contact.

    **RSS** (Really Simple Syndication) is a web content syndication format. As specified in RSS 2.0 specification, "RSS is a dialect of XML. All RSS files must conform to the XML 1.0 [specification](http://www.w3.org/TR/REC-xml), as published on the World Wide Web Consortium (W3C) website."

    The format for the RSS Feed is predefined with a set of required and optional elements. The generated feed conforms to this format.

    Here is an example of how the base RSS feed template appears.

    ```xml
    <?xml-stylesheet type="text/xsl" href="rss.xsl" media="screen"?>
    <rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/">
      <channel>
        <title>SuperOffice Feed VB</title>
        <link><%= _url %></link>
        <description><%= _description %></description>
        <language>en-us</language>
        <copyright>Copyright 2006 SuperOffice</copyright>
        <pubDate><%= DateTime.Now.ToUniversalTime().ToString("R") %></pubDate>
        <generator>Late Night SuperOffice Hacker</generator>
        <%= _items %>
      </channel>
    </rss>
    ```

    An XML stylesheet formats how the feed is displayed. The stylesheet is referenced on the first line in the example above and will be discussed later.
- title: Authentication and how to create the link to the feed
  durationInMinutes: 2
  content: |
    The generated feed link uses the user credentials along with the user preference for the number of items displayed in Feed contents is read and appended to the feed URL.

    Then the logged-on user information is validated with the use of Authenticate method of SOSession. The user password has to be encrypted since it's sent along with the URL in plain text format. The support method Rot13 is used for this data conversion as shown in the following code segment.

    [!code-vb[VB](includes/rss-generate-link.vb)]
- title: Get the activity information
  durationInMinutes: 3
  content: |
    Let's take a look at how the activity is generated and passed to the feed.

    [!include[Content: get activity info](includes/steps/get-activity-info.md)]
- title: Generate the RSS feed
  durationInMinutes: 3
  content: |
    [!include[Content: generate RSS feed](includes/steps/generate-feed.md)]
- title: Formatting RSS in XSLT
  durationInMinutes: 3
  content: |
    Internet Explorer 7+ and Firefox 2+ browsers have the integrated RSS reading capability. Previous versions of these browsers display RSS as plain XML. To address this issue, we use XSLT style sheets to control how the Feed will be rendered in a browser. The XML stylesheet will be ignored depending on whether the RSS is recognized as an XML document or as an RSS feed by a browser.

    **XSLT style sheet:**

    ```html
    <div id="Content">
      <h1><xsl:value-of select="rss/channel/title"/></h1>
      <ol id="ItemList">
        <xsl:for-each select="rss/channel/item">
        <li class="ItemListItem">
          <h1>
            <a><xsl:attribute name="href"><xsl:value-of select="link"/></a>
          </h1>
          <div class="ItemListItemDetails">
            Published <xsl:value-of select="pubDate"/> by <xsl:value-of select="dc:creator" />
          </div>
        </li>
        </xsl:for-each>
      </ol>
    </div>
    ```
- title: Configure
  durationInMinutes: 3
  content: |
    [!include[Content: Configuration](includes/steps/config.md)]
- title: Summary
  durationInMinutes: 1
  content: |
    [!include[Content: RSS results](includes/steps/rss-results.md)]

    <a href="~/assets/downloads/api/rssfeedfinalvb.zip" download>Click to download source code (zip)</a>
