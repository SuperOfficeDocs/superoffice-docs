### YamlMime:ManagedReference
items:
- uid: SuperOffice.Cache.IViewStateProvider
  commentId: T:SuperOffice.Cache.IViewStateProvider
  id: IViewStateProvider
  parent: SuperOffice.Cache
  children:
  - SuperOffice.Cache.IViewStateProvider.GetCurrent(System.String,System.Boolean,System.Boolean)
  - SuperOffice.Cache.IViewStateProvider.GetNextCurrent(System.String)
  - SuperOffice.Cache.IViewStateProvider.GetPreviousCurrent(System.String)
  - SuperOffice.Cache.IViewStateProvider.SetCurrent(System.String,SuperOffice.Cache.HistoryItem,System.Boolean)
  langs:
  - csharp
  - vb
  name: IViewStateProvider
  nameWithType: IViewStateProvider
  fullName: SuperOffice.Cache.IViewStateProvider
  type: Interface
  source:
    path: SuperOffice.DCF
    isExternal: true
  assemblies:
  - SuperOffice.DCF
  namespace: SuperOffice.Cache
  syntax:
    content: public interface IViewStateProvider
    content.vb: Public Interface IViewStateProvider
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.Cache.IViewStateProvider.GetCurrent(System.String,System.Boolean,System.Boolean)
  commentId: M:SuperOffice.Cache.IViewStateProvider.GetCurrent(System.String,System.Boolean,System.Boolean)
  id: GetCurrent(System.String,System.Boolean,System.Boolean)
  parent: SuperOffice.Cache.IViewStateProvider
  langs:
  - csharp
  - vb
  name: GetCurrent(String, Boolean, Boolean)
  nameWithType: IViewStateProvider.GetCurrent(String, Boolean, Boolean)
  fullName: SuperOffice.Cache.IViewStateProvider.GetCurrent(System.String, System.Boolean, System.Boolean)
  type: Method
  source:
    path: SuperOffice.DCF
    isExternal: true
  assemblies:
  - SuperOffice.DCF
  namespace: SuperOffice.Cache
  summary: "\nGet the current history for an entity from cache or from database if not in cache\n"
  syntax:
    content: HistoryItem GetCurrent(string entityName, bool returnIfEmpty, bool setSpecifiedCurrentOnly)
    parameters:
    - id: entityName
      type: System.String
      description: The name of the entity
    - id: returnIfEmpty
      type: System.Boolean
    - id: setSpecifiedCurrentOnly
      type: System.Boolean
    return:
      type: SuperOffice.Cache.HistoryItem
      description: Current history value for a specific entity such as contact
    content.vb: Function GetCurrent(entityName As String, returnIfEmpty As Boolean, setSpecifiedCurrentOnly As Boolean) As HistoryItem
  overload: SuperOffice.Cache.IViewStateProvider.GetCurrent*
- uid: SuperOffice.Cache.IViewStateProvider.SetCurrent(System.String,SuperOffice.Cache.HistoryItem,System.Boolean)
  commentId: M:SuperOffice.Cache.IViewStateProvider.SetCurrent(System.String,SuperOffice.Cache.HistoryItem,System.Boolean)
  id: SetCurrent(System.String,SuperOffice.Cache.HistoryItem,System.Boolean)
  parent: SuperOffice.Cache.IViewStateProvider
  langs:
  - csharp
  - vb
  name: SetCurrent(String, HistoryItem, Boolean)
  nameWithType: IViewStateProvider.SetCurrent(String, HistoryItem, Boolean)
  fullName: SuperOffice.Cache.IViewStateProvider.SetCurrent(System.String, SuperOffice.Cache.HistoryItem, System.Boolean)
  type: Method
  source:
    path: SuperOffice.DCF
    isExternal: true
  assemblies:
  - SuperOffice.DCF
  namespace: SuperOffice.Cache
  summary: "\nSets a new current value for a given entity\n"
  syntax:
    content: void SetCurrent(string entityName, HistoryItem current, bool setSpecifiedCurrentOnly = false)
    parameters:
    - id: entityName
      type: System.String
      description: The name of the entity
    - id: current
      type: SuperOffice.Cache.HistoryItem
      description: The new current object
    - id: setSpecifiedCurrentOnly
      type: System.Boolean
    content.vb: Sub SetCurrent(entityName As String, current As HistoryItem, setSpecifiedCurrentOnly As Boolean = False)
  overload: SuperOffice.Cache.IViewStateProvider.SetCurrent*
- uid: SuperOffice.Cache.IViewStateProvider.GetNextCurrent(System.String)
  commentId: M:SuperOffice.Cache.IViewStateProvider.GetNextCurrent(System.String)
  id: GetNextCurrent(System.String)
  parent: SuperOffice.Cache.IViewStateProvider
  langs:
  - csharp
  - vb
  name: GetNextCurrent(String)
  nameWithType: IViewStateProvider.GetNextCurrent(String)
  fullName: SuperOffice.Cache.IViewStateProvider.GetNextCurrent(System.String)
  type: Method
  source:
    path: SuperOffice.DCF
    isExternal: true
  assemblies:
  - SuperOffice.DCF
  namespace: SuperOffice.Cache
  summary: "\nReturns the next item for the specific history list\n"
  syntax:
    content: HistoryItem GetNextCurrent(string entityName)
    parameters:
    - id: entityName
      type: System.String
      description: Name of the history list
    return:
      type: SuperOffice.Cache.HistoryItem
      description: HistoryItem with next item
    content.vb: Function GetNextCurrent(entityName As String) As HistoryItem
  overload: SuperOffice.Cache.IViewStateProvider.GetNextCurrent*
- uid: SuperOffice.Cache.IViewStateProvider.GetPreviousCurrent(System.String)
  commentId: M:SuperOffice.Cache.IViewStateProvider.GetPreviousCurrent(System.String)
  id: GetPreviousCurrent(System.String)
  parent: SuperOffice.Cache.IViewStateProvider
  langs:
  - csharp
  - vb
  name: GetPreviousCurrent(String)
  nameWithType: IViewStateProvider.GetPreviousCurrent(String)
  fullName: SuperOffice.Cache.IViewStateProvider.GetPreviousCurrent(System.String)
  type: Method
  source:
    path: SuperOffice.DCF
    isExternal: true
  assemblies:
  - SuperOffice.DCF
  namespace: SuperOffice.Cache
  summary: "\nReturns the previous item for the specific history list\n"
  syntax:
    content: HistoryItem GetPreviousCurrent(string entityName)
    parameters:
    - id: entityName
      type: System.String
      description: Name of the history list
    return:
      type: SuperOffice.Cache.HistoryItem
      description: HistoryItem with previous item
    content.vb: Function GetPreviousCurrent(entityName As String) As HistoryItem
  overload: SuperOffice.Cache.IViewStateProvider.GetPreviousCurrent*
references:
- uid: SuperOffice.Cache
  commentId: N:SuperOffice.Cache
  isExternal: true
  name: SuperOffice.Cache
  nameWithType: SuperOffice.Cache
  fullName: SuperOffice.Cache
- uid: SuperOffice.Cache.IViewStateProvider.GetCurrent*
  commentId: Overload:SuperOffice.Cache.IViewStateProvider.GetCurrent
  isExternal: true
  name: GetCurrent
  nameWithType: IViewStateProvider.GetCurrent
  fullName: SuperOffice.Cache.IViewStateProvider.GetCurrent
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.Cache.HistoryItem
  commentId: T:SuperOffice.Cache.HistoryItem
  parent: SuperOffice.Cache
  isExternal: true
  name: HistoryItem
  nameWithType: HistoryItem
  fullName: SuperOffice.Cache.HistoryItem
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Cache.IViewStateProvider.SetCurrent*
  commentId: Overload:SuperOffice.Cache.IViewStateProvider.SetCurrent
  isExternal: true
  name: SetCurrent
  nameWithType: IViewStateProvider.SetCurrent
  fullName: SuperOffice.Cache.IViewStateProvider.SetCurrent
- uid: SuperOffice.Cache.IViewStateProvider.GetNextCurrent*
  commentId: Overload:SuperOffice.Cache.IViewStateProvider.GetNextCurrent
  isExternal: true
  name: GetNextCurrent
  nameWithType: IViewStateProvider.GetNextCurrent
  fullName: SuperOffice.Cache.IViewStateProvider.GetNextCurrent
- uid: SuperOffice.Cache.IViewStateProvider.GetPreviousCurrent*
  commentId: Overload:SuperOffice.Cache.IViewStateProvider.GetPreviousCurrent
  isExternal: true
  name: GetPreviousCurrent
  nameWithType: IViewStateProvider.GetPreviousCurrent
  fullName: SuperOffice.Cache.IViewStateProvider.GetPreviousCurrent
