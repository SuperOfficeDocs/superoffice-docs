### YamlMime:ManagedReference
items:
- uid: SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder
  commentId: T:SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder
  id: ResourceCacheBuilder
  parent: SuperOffice.Web.ResourceHandlers
  children:
  - SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.#ctor(System.String)
  - SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.BuildCache(System.Collections.Generic.IEnumerable{System.String},System.Func{System.String,System.String},System.Func{System.String,System.Boolean,System.String},System.Collections.Generic.List{System.String}@)
  - SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.GetCandidate(System.String,System.Boolean,System.Func{System.String,System.Boolean})
  - SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.GetFileCandidate(System.String,System.Boolean)
  - SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.GetResourceCandidate(System.String,System.Boolean,System.String[])
  - SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.IsResourceReference(System.String)
  - SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.ReadResourceFromAssembly(System.String,System.String,System.Boolean,System.Func{System.String,System.String})
  langs:
  - csharp
  - vb
  name: ResourceCacheBuilder
  nameWithType: ResourceCacheBuilder
  fullName: SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder
  type: Class
  source:
    path: SuperOffice.DCFWeb
    isExternal: true
  assemblies:
  - SuperOffice.DCFWeb
  namespace: SuperOffice.Web.ResourceHandlers
  syntax:
    content: public class ResourceCacheBuilder
    content.vb: Public Class ResourceCacheBuilder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.#ctor(System.String)
  commentId: M:SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder
  langs:
  - csharp
  - vb
  name: ResourceCacheBuilder(String)
  nameWithType: ResourceCacheBuilder.ResourceCacheBuilder(String)
  fullName: SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.ResourceCacheBuilder(System.String)
  type: Constructor
  source:
    path: SuperOffice.DCFWeb
    isExternal: true
  assemblies:
  - SuperOffice.DCFWeb
  namespace: SuperOffice.Web.ResourceHandlers
  syntax:
    content: public ResourceCacheBuilder(string fileExtension)
    parameters:
    - id: fileExtension
      type: System.String
    content.vb: Public Sub New(fileExtension As String)
  overload: SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.BuildCache(System.Collections.Generic.IEnumerable{System.String},System.Func{System.String,System.String},System.Func{System.String,System.Boolean,System.String},System.Collections.Generic.List{System.String}@)
  commentId: M:SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.BuildCache(System.Collections.Generic.IEnumerable{System.String},System.Func{System.String,System.String},System.Func{System.String,System.Boolean,System.String},System.Collections.Generic.List{System.String}@)
  id: BuildCache(System.Collections.Generic.IEnumerable{System.String},System.Func{System.String,System.String},System.Func{System.String,System.Boolean,System.String},System.Collections.Generic.List{System.String}@)
  parent: SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder
  langs:
  - csharp
  - vb
  name: BuildCache(IEnumerable<String>, Func<String, String>, Func<String, Boolean, String>, out List<String>)
  nameWithType: ResourceCacheBuilder.BuildCache(IEnumerable<String>, Func<String, String>, Func<String, Boolean, String>, out List<String>)
  fullName: SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.BuildCache(System.Collections.Generic.IEnumerable<System.String>, System.Func<System.String, System.String>, System.Func<System.String, System.Boolean, System.String>, out System.Collections.Generic.List<System.String>)
  type: Method
  source:
    path: SuperOffice.DCFWeb
    isExternal: true
  assemblies:
  - SuperOffice.DCFWeb
  namespace: SuperOffice.Web.ResourceHandlers
  syntax:
    content: public string BuildCache(IEnumerable<string> paths, Func<string, string> resourceNameResolver, Func<string, bool, string> itemTransformer, out List<string> virtualPaths)
    parameters:
    - id: paths
      type: System.Collections.Generic.IEnumerable{System.String}
    - id: resourceNameResolver
      type: System.Func{System.String,System.String}
    - id: itemTransformer
      type: System.Func{System.String,System.Boolean,System.String}
    - id: virtualPaths
      type: System.Collections.Generic.List{System.String}
    return:
      type: System.String
    content.vb: Public Function BuildCache(paths As IEnumerable(Of String), resourceNameResolver As Func(Of String, String), itemTransformer As Func(Of String, Boolean, String), ByRef virtualPaths As List(Of String)) As String
  overload: SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.BuildCache*
  nameWithType.vb: ResourceCacheBuilder.BuildCache(IEnumerable(Of String), Func(Of String, String), Func(Of String, Boolean, String), ByRef List(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.BuildCache(System.Collections.Generic.IEnumerable(Of System.String), System.Func(Of System.String, System.String), System.Func(Of System.String, System.Boolean, System.String), ByRef System.Collections.Generic.List(Of System.String))
  name.vb: BuildCache(IEnumerable(Of String), Func(Of String, String), Func(Of String, Boolean, String), ByRef List(Of String))
- uid: SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.IsResourceReference(System.String)
  commentId: M:SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.IsResourceReference(System.String)
  id: IsResourceReference(System.String)
  parent: SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder
  langs:
  - csharp
  - vb
  name: IsResourceReference(String)
  nameWithType: ResourceCacheBuilder.IsResourceReference(String)
  fullName: SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.IsResourceReference(System.String)
  type: Method
  source:
    path: SuperOffice.DCFWeb
    isExternal: true
  assemblies:
  - SuperOffice.DCFWeb
  namespace: SuperOffice.Web.ResourceHandlers
  syntax:
    content: public static bool IsResourceReference(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsResourceReference(path As String) As Boolean
  overload: SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.IsResourceReference*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.ReadResourceFromAssembly(System.String,System.String,System.Boolean,System.Func{System.String,System.String})
  commentId: M:SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.ReadResourceFromAssembly(System.String,System.String,System.Boolean,System.Func{System.String,System.String})
  id: ReadResourceFromAssembly(System.String,System.String,System.Boolean,System.Func{System.String,System.String})
  parent: SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder
  langs:
  - csharp
  - vb
  name: ReadResourceFromAssembly(String, String, Boolean, Func<String, String>)
  nameWithType: ResourceCacheBuilder.ReadResourceFromAssembly(String, String, Boolean, Func<String, String>)
  fullName: SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.ReadResourceFromAssembly(System.String, System.String, System.Boolean, System.Func<System.String, System.String>)
  type: Method
  source:
    path: SuperOffice.DCFWeb
    isExternal: true
  assemblies:
  - SuperOffice.DCFWeb
  namespace: SuperOffice.Web.ResourceHandlers
  syntax:
    content: public static string ReadResourceFromAssembly(string path, string fileExtension, bool shouldMinify, Func<string, string> resourceCleaner = null)
    parameters:
    - id: path
      type: System.String
    - id: fileExtension
      type: System.String
    - id: shouldMinify
      type: System.Boolean
    - id: resourceCleaner
      type: System.Func{System.String,System.String}
    return:
      type: System.String
    content.vb: Public Shared Function ReadResourceFromAssembly(path As String, fileExtension As String, shouldMinify As Boolean, resourceCleaner As Func(Of String, String) = Nothing) As String
  overload: SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.ReadResourceFromAssembly*
  nameWithType.vb: ResourceCacheBuilder.ReadResourceFromAssembly(String, String, Boolean, Func(Of String, String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.ReadResourceFromAssembly(System.String, System.String, System.Boolean, System.Func(Of System.String, System.String))
  name.vb: ReadResourceFromAssembly(String, String, Boolean, Func(Of String, String))
- uid: SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.GetFileCandidate(System.String,System.Boolean)
  commentId: M:SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.GetFileCandidate(System.String,System.Boolean)
  id: GetFileCandidate(System.String,System.Boolean)
  parent: SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder
  langs:
  - csharp
  - vb
  name: GetFileCandidate(String, Boolean)
  nameWithType: ResourceCacheBuilder.GetFileCandidate(String, Boolean)
  fullName: SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.GetFileCandidate(System.String, System.Boolean)
  type: Method
  source:
    path: SuperOffice.DCFWeb
    isExternal: true
  assemblies:
  - SuperOffice.DCFWeb
  namespace: SuperOffice.Web.ResourceHandlers
  syntax:
    content: public static string GetFileCandidate(string resourceName, bool shouldMinify)
    parameters:
    - id: resourceName
      type: System.String
    - id: shouldMinify
      type: System.Boolean
    return:
      type: System.String
    content.vb: Public Shared Function GetFileCandidate(resourceName As String, shouldMinify As Boolean) As String
  overload: SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.GetFileCandidate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.GetResourceCandidate(System.String,System.Boolean,System.String[])
  commentId: M:SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.GetResourceCandidate(System.String,System.Boolean,System.String[])
  id: GetResourceCandidate(System.String,System.Boolean,System.String[])
  parent: SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder
  langs:
  - csharp
  - vb
  name: GetResourceCandidate(String, Boolean, String[])
  nameWithType: ResourceCacheBuilder.GetResourceCandidate(String, Boolean, String[])
  fullName: SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.GetResourceCandidate(System.String, System.Boolean, System.String[])
  type: Method
  source:
    path: SuperOffice.DCFWeb
    isExternal: true
  assemblies:
  - SuperOffice.DCFWeb
  namespace: SuperOffice.Web.ResourceHandlers
  syntax:
    content: public static string GetResourceCandidate(string resourceName, bool shouldMinify, string[] allResources)
    parameters:
    - id: resourceName
      type: System.String
    - id: shouldMinify
      type: System.Boolean
    - id: allResources
      type: System.String[]
    return:
      type: System.String
    content.vb: Public Shared Function GetResourceCandidate(resourceName As String, shouldMinify As Boolean, allResources As String()) As String
  overload: SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.GetResourceCandidate*
  nameWithType.vb: ResourceCacheBuilder.GetResourceCandidate(String, Boolean, String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.GetResourceCandidate(System.String, System.Boolean, System.String())
  name.vb: GetResourceCandidate(String, Boolean, String())
- uid: SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.GetCandidate(System.String,System.Boolean,System.Func{System.String,System.Boolean})
  commentId: M:SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.GetCandidate(System.String,System.Boolean,System.Func{System.String,System.Boolean})
  id: GetCandidate(System.String,System.Boolean,System.Func{System.String,System.Boolean})
  parent: SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder
  langs:
  - csharp
  - vb
  name: GetCandidate(String, Boolean, Func<String, Boolean>)
  nameWithType: ResourceCacheBuilder.GetCandidate(String, Boolean, Func<String, Boolean>)
  fullName: SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.GetCandidate(System.String, System.Boolean, System.Func<System.String, System.Boolean>)
  type: Method
  source:
    path: SuperOffice.DCFWeb
    isExternal: true
  assemblies:
  - SuperOffice.DCFWeb
  namespace: SuperOffice.Web.ResourceHandlers
  syntax:
    content: public static string GetCandidate(string resourceName, bool shouldMinify, Func<string, bool> existenceChecker)
    parameters:
    - id: resourceName
      type: System.String
    - id: shouldMinify
      type: System.Boolean
    - id: existenceChecker
      type: System.Func{System.String,System.Boolean}
    return:
      type: System.String
    content.vb: Public Shared Function GetCandidate(resourceName As String, shouldMinify As Boolean, existenceChecker As Func(Of String, Boolean)) As String
  overload: SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.GetCandidate*
  nameWithType.vb: ResourceCacheBuilder.GetCandidate(String, Boolean, Func(Of String, Boolean))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.GetCandidate(System.String, System.Boolean, System.Func(Of System.String, System.Boolean))
  name.vb: GetCandidate(String, Boolean, Func(Of String, Boolean))
references:
- uid: SuperOffice.Web.ResourceHandlers
  commentId: N:SuperOffice.Web.ResourceHandlers
  isExternal: true
  name: SuperOffice.Web.ResourceHandlers
  nameWithType: SuperOffice.Web.ResourceHandlers
  fullName: SuperOffice.Web.ResourceHandlers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.#ctor*
  commentId: Overload:SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.#ctor
  isExternal: true
  name: ResourceCacheBuilder
  nameWithType: ResourceCacheBuilder.ResourceCacheBuilder
  fullName: SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.ResourceCacheBuilder
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.BuildCache*
  commentId: Overload:SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.BuildCache
  isExternal: true
  name: BuildCache
  nameWithType: ResourceCacheBuilder.BuildCache
  fullName: SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.BuildCache
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.String,System.String}
  commentId: T:System.Func{System.String,System.String}
  parent: System
  definition: System.Func`2
  name: Func<String, String>
  nameWithType: Func<String, String>
  fullName: System.Func<System.String, System.String>
  nameWithType.vb: Func(Of String, String)
  fullName.vb: System.Func(Of System.String, System.String)
  name.vb: Func(Of String, String)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.String,System.Boolean,System.String}
  commentId: T:System.Func{System.String,System.Boolean,System.String}
  parent: System
  definition: System.Func`3
  name: Func<String, Boolean, String>
  nameWithType: Func<String, Boolean, String>
  fullName: System.Func<System.String, System.Boolean, System.String>
  nameWithType.vb: Func(Of String, Boolean, String)
  fullName.vb: System.Func(Of System.String, System.Boolean, System.String)
  name.vb: Func(Of String, Boolean, String)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.IsResourceReference*
  commentId: Overload:SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.IsResourceReference
  isExternal: true
  name: IsResourceReference
  nameWithType: ResourceCacheBuilder.IsResourceReference
  fullName: SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.IsResourceReference
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.ReadResourceFromAssembly*
  commentId: Overload:SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.ReadResourceFromAssembly
  isExternal: true
  name: ReadResourceFromAssembly
  nameWithType: ResourceCacheBuilder.ReadResourceFromAssembly
  fullName: SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.ReadResourceFromAssembly
- uid: SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.GetFileCandidate*
  commentId: Overload:SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.GetFileCandidate
  isExternal: true
  name: GetFileCandidate
  nameWithType: ResourceCacheBuilder.GetFileCandidate
  fullName: SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.GetFileCandidate
- uid: SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.GetResourceCandidate*
  commentId: Overload:SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.GetResourceCandidate
  isExternal: true
  name: GetResourceCandidate
  nameWithType: ResourceCacheBuilder.GetResourceCandidate
  fullName: SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.GetResourceCandidate
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.GetCandidate*
  commentId: Overload:SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.GetCandidate
  isExternal: true
  name: GetCandidate
  nameWithType: ResourceCacheBuilder.GetCandidate
  fullName: SuperOffice.Web.ResourceHandlers.ResourceCacheBuilder.GetCandidate
- uid: System.Func{System.String,System.Boolean}
  commentId: T:System.Func{System.String,System.Boolean}
  parent: System
  definition: System.Func`2
  name: Func<String, Boolean>
  nameWithType: Func<String, Boolean>
  fullName: System.Func<System.String, System.Boolean>
  nameWithType.vb: Func(Of String, Boolean)
  fullName.vb: System.Func(Of System.String, System.Boolean)
  name.vb: Func(Of String, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
