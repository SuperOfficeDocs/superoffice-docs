### YamlMime:ManagedReference
items:
- uid: SuperOffice.Globalization.DateUtil
  commentId: T:SuperOffice.Globalization.DateUtil
  id: DateUtil
  parent: SuperOffice.Globalization
  children:
  - SuperOffice.Globalization.DateUtil.ContainsTime(System.DateTime)
  - SuperOffice.Globalization.DateUtil.DaysInMonth(System.DateTime)
  - SuperOffice.Globalization.DateUtil.FirstDayOfMonth(System.DateTime)
  - SuperOffice.Globalization.DateUtil.GetDateFormats
  - SuperOffice.Globalization.DateUtil.LastDayOfMonth(System.DateTime)
  - SuperOffice.Globalization.DateUtil.ParseDate(System.String)
  langs:
  - csharp
  - vb
  name: DateUtil
  nameWithType: DateUtil
  fullName: SuperOffice.Globalization.DateUtil
  type: Class
  source:
    path: SuperOffice.DCF
    isExternal: true
  assemblies:
  - SuperOffice.DCF
  namespace: SuperOffice.Globalization
  summary: "\nUtility methods for date-handling in DCF.\n"
  syntax:
    content: public static class DateUtil
    content.vb: Public Module DateUtil
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: SuperOffice.Globalization.DateUtil.ParseDate(System.String)
  commentId: M:SuperOffice.Globalization.DateUtil.ParseDate(System.String)
  id: ParseDate(System.String)
  parent: SuperOffice.Globalization.DateUtil
  langs:
  - csharp
  - vb
  name: ParseDate(String)
  nameWithType: DateUtil.ParseDate(String)
  fullName: SuperOffice.Globalization.DateUtil.ParseDate(System.String)
  type: Method
  source:
    path: SuperOffice.DCF
    isExternal: true
  assemblies:
  - SuperOffice.DCF
  namespace: SuperOffice.Globalization
  summary: "\nDo a best-attempt anything goes string-parsing to try to resolve a valid date.\nThe input-string can have delimiters or not, and the order does not have to be specified.\nParsing using the user&apos;s own culture will be tried first.\n\nIf a valid date cannot be resolved, the today&apos;s date will be returned instead.\n"
  syntax:
    content: public static DateTime ParseDate(string dateString)
    parameters:
    - id: dateString
      type: System.String
    return:
      type: System.DateTime
    content.vb: Public Shared Function ParseDate(dateString As String) As Date
  overload: SuperOffice.Globalization.DateUtil.ParseDate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Globalization.DateUtil.ContainsTime(System.DateTime)
  commentId: M:SuperOffice.Globalization.DateUtil.ContainsTime(System.DateTime)
  id: ContainsTime(System.DateTime)
  parent: SuperOffice.Globalization.DateUtil
  langs:
  - csharp
  - vb
  name: ContainsTime(DateTime)
  nameWithType: DateUtil.ContainsTime(DateTime)
  fullName: SuperOffice.Globalization.DateUtil.ContainsTime(System.DateTime)
  type: Method
  source:
    path: SuperOffice.DCF
    isExternal: true
  assemblies:
  - SuperOffice.DCF
  namespace: SuperOffice.Globalization
  syntax:
    content: public static bool ContainsTime(DateTime result)
    parameters:
    - id: result
      type: System.DateTime
    return:
      type: System.Boolean
    content.vb: Public Shared Function ContainsTime(result As Date) As Boolean
  overload: SuperOffice.Globalization.DateUtil.ContainsTime*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Globalization.DateUtil.GetDateFormats
  commentId: M:SuperOffice.Globalization.DateUtil.GetDateFormats
  id: GetDateFormats
  parent: SuperOffice.Globalization.DateUtil
  langs:
  - csharp
  - vb
  name: GetDateFormats()
  nameWithType: DateUtil.GetDateFormats()
  fullName: SuperOffice.Globalization.DateUtil.GetDateFormats()
  type: Method
  source:
    path: SuperOffice.DCF
    isExternal: true
  assemblies:
  - SuperOffice.DCF
  namespace: SuperOffice.Globalization
  summary: "\nGets a list of date-independent format-string used to attempt to parse a\ninput-string as a date. Should be tried in order.\n"
  syntax:
    content: public static string[] GetDateFormats()
    return:
      type: System.String[]
    content.vb: Public Shared Function GetDateFormats As String()
  overload: SuperOffice.Globalization.DateUtil.GetDateFormats*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Globalization.DateUtil.FirstDayOfMonth(System.DateTime)
  commentId: M:SuperOffice.Globalization.DateUtil.FirstDayOfMonth(System.DateTime)
  id: FirstDayOfMonth(System.DateTime)
  isExtensionMethod: true
  parent: SuperOffice.Globalization.DateUtil
  langs:
  - csharp
  - vb
  name: FirstDayOfMonth(DateTime)
  nameWithType: DateUtil.FirstDayOfMonth(DateTime)
  fullName: SuperOffice.Globalization.DateUtil.FirstDayOfMonth(System.DateTime)
  type: Method
  source:
    path: SuperOffice.DCF
    isExternal: true
  assemblies:
  - SuperOffice.DCF
  namespace: SuperOffice.Globalization
  summary: "\nExtension method to get the first day of the month for a datetime, ignoring the time part.\n"
  syntax:
    content: public static DateTime FirstDayOfMonth(this DateTime value)
    parameters:
    - id: value
      type: System.DateTime
    return:
      type: System.DateTime
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function FirstDayOfMonth(value As Date) As Date
  overload: SuperOffice.Globalization.DateUtil.FirstDayOfMonth*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Globalization.DateUtil.DaysInMonth(System.DateTime)
  commentId: M:SuperOffice.Globalization.DateUtil.DaysInMonth(System.DateTime)
  id: DaysInMonth(System.DateTime)
  isExtensionMethod: true
  parent: SuperOffice.Globalization.DateUtil
  langs:
  - csharp
  - vb
  name: DaysInMonth(DateTime)
  nameWithType: DateUtil.DaysInMonth(DateTime)
  fullName: SuperOffice.Globalization.DateUtil.DaysInMonth(System.DateTime)
  type: Method
  source:
    path: SuperOffice.DCF
    isExternal: true
  assemblies:
  - SuperOffice.DCF
  namespace: SuperOffice.Globalization
  summary: "\nExtension method to get the number of days in a month.\n"
  syntax:
    content: public static int DaysInMonth(this DateTime value)
    parameters:
    - id: value
      type: System.DateTime
    return:
      type: System.Int32
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DaysInMonth(value As Date) As Integer
  overload: SuperOffice.Globalization.DateUtil.DaysInMonth*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Globalization.DateUtil.LastDayOfMonth(System.DateTime)
  commentId: M:SuperOffice.Globalization.DateUtil.LastDayOfMonth(System.DateTime)
  id: LastDayOfMonth(System.DateTime)
  isExtensionMethod: true
  parent: SuperOffice.Globalization.DateUtil
  langs:
  - csharp
  - vb
  name: LastDayOfMonth(DateTime)
  nameWithType: DateUtil.LastDayOfMonth(DateTime)
  fullName: SuperOffice.Globalization.DateUtil.LastDayOfMonth(System.DateTime)
  type: Method
  source:
    path: SuperOffice.DCF
    isExternal: true
  assemblies:
  - SuperOffice.DCF
  namespace: SuperOffice.Globalization
  summary: "\nExtension method to get the last day of the month for a datetime, ignoring the time part.\n"
  syntax:
    content: public static DateTime LastDayOfMonth(this DateTime value)
    parameters:
    - id: value
      type: System.DateTime
    return:
      type: System.DateTime
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function LastDayOfMonth(value As Date) As Date
  overload: SuperOffice.Globalization.DateUtil.LastDayOfMonth*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: SuperOffice.Globalization
  commentId: N:SuperOffice.Globalization
  isExternal: true
  name: SuperOffice.Globalization
  nameWithType: SuperOffice.Globalization
  fullName: SuperOffice.Globalization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Globalization.DateUtil.ParseDate*
  commentId: Overload:SuperOffice.Globalization.DateUtil.ParseDate
  isExternal: true
  name: ParseDate
  nameWithType: DateUtil.ParseDate
  fullName: SuperOffice.Globalization.DateUtil.ParseDate
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: SuperOffice.Globalization.DateUtil.ContainsTime*
  commentId: Overload:SuperOffice.Globalization.DateUtil.ContainsTime
  isExternal: true
  name: ContainsTime
  nameWithType: DateUtil.ContainsTime
  fullName: SuperOffice.Globalization.DateUtil.ContainsTime
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.Globalization.DateUtil.GetDateFormats*
  commentId: Overload:SuperOffice.Globalization.DateUtil.GetDateFormats
  isExternal: true
  name: GetDateFormats
  nameWithType: DateUtil.GetDateFormats
  fullName: SuperOffice.Globalization.DateUtil.GetDateFormats
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.Globalization.DateUtil.FirstDayOfMonth*
  commentId: Overload:SuperOffice.Globalization.DateUtil.FirstDayOfMonth
  isExternal: true
  name: FirstDayOfMonth
  nameWithType: DateUtil.FirstDayOfMonth
  fullName: SuperOffice.Globalization.DateUtil.FirstDayOfMonth
- uid: SuperOffice.Globalization.DateUtil.DaysInMonth*
  commentId: Overload:SuperOffice.Globalization.DateUtil.DaysInMonth
  isExternal: true
  name: DaysInMonth
  nameWithType: DateUtil.DaysInMonth
  fullName: SuperOffice.Globalization.DateUtil.DaysInMonth
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.Globalization.DateUtil.LastDayOfMonth*
  commentId: Overload:SuperOffice.Globalization.DateUtil.LastDayOfMonth
  isExternal: true
  name: LastDayOfMonth
  nameWithType: DateUtil.LastDayOfMonth
  fullName: SuperOffice.Globalization.DateUtil.LastDayOfMonth
