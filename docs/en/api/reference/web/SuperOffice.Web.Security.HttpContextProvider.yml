### YamlMime:ManagedReference
items:
- uid: SuperOffice.Web.Security.HttpContextProvider
  commentId: T:SuperOffice.Web.Security.HttpContextProvider
  id: HttpContextProvider
  parent: SuperOffice.Web.Security
  children:
  - SuperOffice.Web.Security.HttpContextProvider.#ctor
  - SuperOffice.Web.Security.HttpContextProvider.Dispose
  - SuperOffice.Web.Security.HttpContextProvider.GetCurrenContext
  - SuperOffice.Web.Security.HttpContextProvider.IsValid
  - SuperOffice.Web.Security.HttpContextProvider.SetCurrentContext(SuperOffice.Security.Principal.SoContextContainer)
  langs:
  - csharp
  - vb
  name: HttpContextProvider
  nameWithType: HttpContextProvider
  fullName: SuperOffice.Web.Security.HttpContextProvider
  type: Class
  source:
    path: SuperOffice.DCFWeb
    isExternal: true
  assemblies:
  - SuperOffice.DCFWeb
  namespace: SuperOffice.Web.Security
  syntax:
    content: 'public class HttpContextProvider : ISoContextProvider, IPlugin, IDisposable'
    content.vb: >-
      Public Class HttpContextProvider
          Implements ISoContextProvider, IPlugin, IDisposable
  inheritance:
  - System.Object
  implements:
  - SuperOffice.Security.Principal.ISoContextProvider
  - SuperOffice.Factory.IPlugin
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.Web.Security.HttpContextProvider.#ctor
  commentId: M:SuperOffice.Web.Security.HttpContextProvider.#ctor
  id: '#ctor'
  parent: SuperOffice.Web.Security.HttpContextProvider
  langs:
  - csharp
  - vb
  name: HttpContextProvider()
  nameWithType: HttpContextProvider.HttpContextProvider()
  fullName: SuperOffice.Web.Security.HttpContextProvider.HttpContextProvider()
  type: Constructor
  source:
    path: SuperOffice.DCFWeb
    isExternal: true
  assemblies:
  - SuperOffice.DCFWeb
  namespace: SuperOffice.Web.Security
  syntax:
    content: public HttpContextProvider()
    content.vb: Public Sub New
  overload: SuperOffice.Web.Security.HttpContextProvider.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Web.Security.HttpContextProvider.GetCurrenContext
  commentId: M:SuperOffice.Web.Security.HttpContextProvider.GetCurrenContext
  id: GetCurrenContext
  parent: SuperOffice.Web.Security.HttpContextProvider
  langs:
  - csharp
  - vb
  name: GetCurrenContext()
  nameWithType: HttpContextProvider.GetCurrenContext()
  fullName: SuperOffice.Web.Security.HttpContextProvider.GetCurrenContext()
  type: Method
  source:
    path: SuperOffice.DCFWeb
    isExternal: true
  assemblies:
  - SuperOffice.DCFWeb
  namespace: SuperOffice.Web.Security
  syntax:
    content: public SoContextContainer GetCurrenContext()
    return:
      type: SuperOffice.Security.Principal.SoContextContainer
    content.vb: Public Function GetCurrenContext As SoContextContainer
  overload: SuperOffice.Web.Security.HttpContextProvider.GetCurrenContext*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Web.Security.HttpContextProvider.SetCurrentContext(SuperOffice.Security.Principal.SoContextContainer)
  commentId: M:SuperOffice.Web.Security.HttpContextProvider.SetCurrentContext(SuperOffice.Security.Principal.SoContextContainer)
  id: SetCurrentContext(SuperOffice.Security.Principal.SoContextContainer)
  parent: SuperOffice.Web.Security.HttpContextProvider
  langs:
  - csharp
  - vb
  name: SetCurrentContext(SoContextContainer)
  nameWithType: HttpContextProvider.SetCurrentContext(SoContextContainer)
  fullName: SuperOffice.Web.Security.HttpContextProvider.SetCurrentContext(SuperOffice.Security.Principal.SoContextContainer)
  type: Method
  source:
    path: SuperOffice.DCFWeb
    isExternal: true
  assemblies:
  - SuperOffice.DCFWeb
  namespace: SuperOffice.Web.Security
  syntax:
    content: public void SetCurrentContext(SoContextContainer newContext)
    parameters:
    - id: newContext
      type: SuperOffice.Security.Principal.SoContextContainer
    content.vb: Public Sub SetCurrentContext(newContext As SoContextContainer)
  overload: SuperOffice.Web.Security.HttpContextProvider.SetCurrentContext*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Web.Security.HttpContextProvider.IsValid
  commentId: M:SuperOffice.Web.Security.HttpContextProvider.IsValid
  id: IsValid
  parent: SuperOffice.Web.Security.HttpContextProvider
  langs:
  - csharp
  - vb
  name: IsValid()
  nameWithType: HttpContextProvider.IsValid()
  fullName: SuperOffice.Web.Security.HttpContextProvider.IsValid()
  type: Method
  source:
    path: SuperOffice.DCFWeb
    isExternal: true
  assemblies:
  - SuperOffice.DCFWeb
  namespace: SuperOffice.Web.Security
  syntax:
    content: public static bool IsValid()
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsValid As Boolean
  overload: SuperOffice.Web.Security.HttpContextProvider.IsValid*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Web.Security.HttpContextProvider.Dispose
  commentId: M:SuperOffice.Web.Security.HttpContextProvider.Dispose
  id: Dispose
  parent: SuperOffice.Web.Security.HttpContextProvider
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: HttpContextProvider.Dispose()
  fullName: SuperOffice.Web.Security.HttpContextProvider.Dispose()
  type: Method
  source:
    path: SuperOffice.DCFWeb
    isExternal: true
  assemblies:
  - SuperOffice.DCFWeb
  namespace: SuperOffice.Web.Security
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: SuperOffice.Web.Security.HttpContextProvider.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.Web.Security
  commentId: N:SuperOffice.Web.Security
  isExternal: true
  name: SuperOffice.Web.Security
  nameWithType: SuperOffice.Web.Security
  fullName: SuperOffice.Web.Security
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Security.Principal.ISoContextProvider
  commentId: '!:SuperOffice.Security.Principal.ISoContextProvider'
  isExternal: true
  name: ISoContextProvider
  nameWithType: ISoContextProvider
  fullName: SuperOffice.Security.Principal.ISoContextProvider
- uid: SuperOffice.Factory.IPlugin
  isExternal: true
  name: IPlugin
  nameWithType: IPlugin
  fullName: SuperOffice.Factory.IPlugin
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Web.Security.HttpContextProvider.#ctor*
  commentId: Overload:SuperOffice.Web.Security.HttpContextProvider.#ctor
  isExternal: true
  name: HttpContextProvider
  nameWithType: HttpContextProvider.HttpContextProvider
  fullName: SuperOffice.Web.Security.HttpContextProvider.HttpContextProvider
- uid: SuperOffice.Web.Security.HttpContextProvider.GetCurrenContext*
  commentId: Overload:SuperOffice.Web.Security.HttpContextProvider.GetCurrenContext
  isExternal: true
  name: GetCurrenContext
  nameWithType: HttpContextProvider.GetCurrenContext
  fullName: SuperOffice.Web.Security.HttpContextProvider.GetCurrenContext
- uid: SuperOffice.Security.Principal.SoContextContainer
  isExternal: true
  name: SoContextContainer
  nameWithType: SoContextContainer
  fullName: SuperOffice.Security.Principal.SoContextContainer
- uid: SuperOffice.Web.Security.HttpContextProvider.SetCurrentContext*
  commentId: Overload:SuperOffice.Web.Security.HttpContextProvider.SetCurrentContext
  isExternal: true
  name: SetCurrentContext
  nameWithType: HttpContextProvider.SetCurrentContext
  fullName: SuperOffice.Web.Security.HttpContextProvider.SetCurrentContext
- uid: SuperOffice.Web.Security.HttpContextProvider.IsValid*
  commentId: Overload:SuperOffice.Web.Security.HttpContextProvider.IsValid
  isExternal: true
  name: IsValid
  nameWithType: HttpContextProvider.IsValid
  fullName: SuperOffice.Web.Security.HttpContextProvider.IsValid
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.Web.Security.HttpContextProvider.Dispose*
  commentId: Overload:SuperOffice.Web.Security.HttpContextProvider.Dispose
  isExternal: true
  name: Dispose
  nameWithType: HttpContextProvider.Dispose
  fullName: SuperOffice.Web.Security.HttpContextProvider.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
