### YamlMime:ManagedReference
items:
- uid: SuperOffice.DCF.Web.UI.Filters.SubFilter.MergeSubFilterBase
  commentId: T:SuperOffice.DCF.Web.UI.Filters.SubFilter.MergeSubFilterBase
  id: MergeSubFilterBase
  parent: SuperOffice.DCF.Web.UI.Filters.SubFilter
  children:
  - SuperOffice.DCF.Web.UI.Filters.SubFilter.MergeSubFilterBase.#ctor
  - SuperOffice.DCF.Web.UI.Filters.SubFilter.MergeSubFilterBase.GetXPathToNode(System.Xml.XmlNode)
  - SuperOffice.DCF.Web.UI.Filters.SubFilter.MergeSubFilterBase.InsertNode(System.Xml.XmlDocument,System.Xml.XmlNode)
  - SuperOffice.DCF.Web.UI.Filters.SubFilter.MergeSubFilterBase.InsertNode(System.Xml.XmlDocument,System.Xml.XmlNode,System.String)
  - SuperOffice.DCF.Web.UI.Filters.SubFilter.MergeSubFilterBase.Process(System.Xml.XmlDocument)
  langs:
  - csharp
  - vb
  name: MergeSubFilterBase
  nameWithType: MergeSubFilterBase
  fullName: SuperOffice.DCF.Web.UI.Filters.SubFilter.MergeSubFilterBase
  type: Class
  source:
    path: SuperOffice.DCFWeb
    isExternal: true
  assemblies:
  - SuperOffice.DCFWeb
  namespace: SuperOffice.DCF.Web.UI.Filters.SubFilter
  syntax:
    content: 'public abstract class MergeSubFilterBase : IMergeSubFilter, IMergeFilterPlugin, IPlugin'
    content.vb: >-
      Public MustInherit Class MergeSubFilterBase
          Implements IMergeSubFilter, IMergeFilterPlugin, IPlugin
  inheritance:
  - System.Object
  derivedClasses:
  - SuperOffice.DCF.Web.UI.Filters.ArchiveLinkInfoTypesFilter
  - SuperOffice.DCF.Web.UI.Filters.MenuFilter
  - SuperOffice.DCF.Web.UI.Filters.SubFilter.ApplicationConfigurationFilter
  - SuperOffice.DCF.Web.UI.Filters.SubFilter.ObjectMappingFilter
  - SuperOffice.DCF.Web.UI.Filters.SubFilter.PageFilter
  - SuperOffice.Web.UI.Filters.MergeFilter.ArchiveColumnListFilter
  - SuperOffice.Web.UI.Filters.MergeFilter.FilterFilter
  implements:
  - SuperOffice.DCF.Web.UI.Filters.SubFilter.IMergeSubFilter
  - SuperOffice.DCF.Web.UI.Filters.SubFilter.IMergeFilterPlugin
  - SuperOffice.Factory.IPlugin
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: SuperOffice.DCF.Web.UI.Filters.SubFilter.MergeSubFilterBase.Process(System.Xml.XmlDocument)
  commentId: M:SuperOffice.DCF.Web.UI.Filters.SubFilter.MergeSubFilterBase.Process(System.Xml.XmlDocument)
  id: Process(System.Xml.XmlDocument)
  parent: SuperOffice.DCF.Web.UI.Filters.SubFilter.MergeSubFilterBase
  langs:
  - csharp
  - vb
  name: Process(XmlDocument)
  nameWithType: MergeSubFilterBase.Process(XmlDocument)
  fullName: SuperOffice.DCF.Web.UI.Filters.SubFilter.MergeSubFilterBase.Process(System.Xml.XmlDocument)
  type: Method
  source:
    path: SuperOffice.DCFWeb
    isExternal: true
  assemblies:
  - SuperOffice.DCFWeb
  namespace: SuperOffice.DCF.Web.UI.Filters.SubFilter
  syntax:
    content: public abstract void Process(XmlDocument xml)
    parameters:
    - id: xml
      type: System.Xml.XmlDocument
    content.vb: Public MustOverride Sub Process(xml As XmlDocument)
  overload: SuperOffice.DCF.Web.UI.Filters.SubFilter.MergeSubFilterBase.Process*
  implements:
  - SuperOffice.DCF.Web.UI.Filters.SubFilter.IMergeSubFilter.Process(System.Xml.XmlDocument)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: SuperOffice.DCF.Web.UI.Filters.SubFilter.MergeSubFilterBase.InsertNode(System.Xml.XmlDocument,System.Xml.XmlNode)
  commentId: M:SuperOffice.DCF.Web.UI.Filters.SubFilter.MergeSubFilterBase.InsertNode(System.Xml.XmlDocument,System.Xml.XmlNode)
  id: InsertNode(System.Xml.XmlDocument,System.Xml.XmlNode)
  parent: SuperOffice.DCF.Web.UI.Filters.SubFilter.MergeSubFilterBase
  langs:
  - csharp
  - vb
  name: InsertNode(XmlDocument, XmlNode)
  nameWithType: MergeSubFilterBase.InsertNode(XmlDocument, XmlNode)
  fullName: SuperOffice.DCF.Web.UI.Filters.SubFilter.MergeSubFilterBase.InsertNode(System.Xml.XmlDocument, System.Xml.XmlNode)
  type: Method
  source:
    path: SuperOffice.DCFWeb
    isExternal: true
  assemblies:
  - SuperOffice.DCFWeb
  namespace: SuperOffice.DCF.Web.UI.Filters.SubFilter
  syntax:
    content: protected XmlNode InsertNode(XmlDocument xml, XmlNode mergeNode)
    parameters:
    - id: xml
      type: System.Xml.XmlDocument
    - id: mergeNode
      type: System.Xml.XmlNode
    return:
      type: System.Xml.XmlNode
    content.vb: Protected Function InsertNode(xml As XmlDocument, mergeNode As XmlNode) As XmlNode
  overload: SuperOffice.DCF.Web.UI.Filters.SubFilter.MergeSubFilterBase.InsertNode*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.DCF.Web.UI.Filters.SubFilter.MergeSubFilterBase.InsertNode(System.Xml.XmlDocument,System.Xml.XmlNode,System.String)
  commentId: M:SuperOffice.DCF.Web.UI.Filters.SubFilter.MergeSubFilterBase.InsertNode(System.Xml.XmlDocument,System.Xml.XmlNode,System.String)
  id: InsertNode(System.Xml.XmlDocument,System.Xml.XmlNode,System.String)
  parent: SuperOffice.DCF.Web.UI.Filters.SubFilter.MergeSubFilterBase
  langs:
  - csharp
  - vb
  name: InsertNode(XmlDocument, XmlNode, String)
  nameWithType: MergeSubFilterBase.InsertNode(XmlDocument, XmlNode, String)
  fullName: SuperOffice.DCF.Web.UI.Filters.SubFilter.MergeSubFilterBase.InsertNode(System.Xml.XmlDocument, System.Xml.XmlNode, System.String)
  type: Method
  source:
    path: SuperOffice.DCFWeb
    isExternal: true
  assemblies:
  - SuperOffice.DCFWeb
  namespace: SuperOffice.DCF.Web.UI.Filters.SubFilter
  syntax:
    content: protected XmlNode InsertNode(XmlDocument xml, XmlNode mergeNode, string mergePath)
    parameters:
    - id: xml
      type: System.Xml.XmlDocument
    - id: mergeNode
      type: System.Xml.XmlNode
    - id: mergePath
      type: System.String
    return:
      type: System.Xml.XmlNode
    content.vb: Protected Function InsertNode(xml As XmlDocument, mergeNode As XmlNode, mergePath As String) As XmlNode
  overload: SuperOffice.DCF.Web.UI.Filters.SubFilter.MergeSubFilterBase.InsertNode*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.DCF.Web.UI.Filters.SubFilter.MergeSubFilterBase.GetXPathToNode(System.Xml.XmlNode)
  commentId: M:SuperOffice.DCF.Web.UI.Filters.SubFilter.MergeSubFilterBase.GetXPathToNode(System.Xml.XmlNode)
  id: GetXPathToNode(System.Xml.XmlNode)
  parent: SuperOffice.DCF.Web.UI.Filters.SubFilter.MergeSubFilterBase
  langs:
  - csharp
  - vb
  name: GetXPathToNode(XmlNode)
  nameWithType: MergeSubFilterBase.GetXPathToNode(XmlNode)
  fullName: SuperOffice.DCF.Web.UI.Filters.SubFilter.MergeSubFilterBase.GetXPathToNode(System.Xml.XmlNode)
  type: Method
  source:
    path: SuperOffice.DCFWeb
    isExternal: true
  assemblies:
  - SuperOffice.DCFWeb
  namespace: SuperOffice.DCF.Web.UI.Filters.SubFilter
  syntax:
    content: protected string GetXPathToNode(XmlNode node)
    parameters:
    - id: node
      type: System.Xml.XmlNode
    return:
      type: System.String
    content.vb: Protected Function GetXPathToNode(node As XmlNode) As String
  overload: SuperOffice.DCF.Web.UI.Filters.SubFilter.MergeSubFilterBase.GetXPathToNode*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.DCF.Web.UI.Filters.SubFilter.MergeSubFilterBase.#ctor
  commentId: M:SuperOffice.DCF.Web.UI.Filters.SubFilter.MergeSubFilterBase.#ctor
  id: '#ctor'
  parent: SuperOffice.DCF.Web.UI.Filters.SubFilter.MergeSubFilterBase
  langs:
  - csharp
  - vb
  name: MergeSubFilterBase()
  nameWithType: MergeSubFilterBase.MergeSubFilterBase()
  fullName: SuperOffice.DCF.Web.UI.Filters.SubFilter.MergeSubFilterBase.MergeSubFilterBase()
  type: Constructor
  source:
    path: SuperOffice.DCFWeb
    isExternal: true
  assemblies:
  - SuperOffice.DCFWeb
  namespace: SuperOffice.DCF.Web.UI.Filters.SubFilter
  syntax:
    content: protected MergeSubFilterBase()
    content.vb: Protected Sub New
  overload: SuperOffice.DCF.Web.UI.Filters.SubFilter.MergeSubFilterBase.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: SuperOffice.DCF.Web.UI.Filters.SubFilter
  commentId: N:SuperOffice.DCF.Web.UI.Filters.SubFilter
  isExternal: true
  name: SuperOffice.DCF.Web.UI.Filters.SubFilter
  nameWithType: SuperOffice.DCF.Web.UI.Filters.SubFilter
  fullName: SuperOffice.DCF.Web.UI.Filters.SubFilter
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.DCF.Web.UI.Filters.SubFilter.IMergeSubFilter
  commentId: T:SuperOffice.DCF.Web.UI.Filters.SubFilter.IMergeSubFilter
  parent: SuperOffice.DCF.Web.UI.Filters.SubFilter
  isExternal: true
  name: IMergeSubFilter
  nameWithType: IMergeSubFilter
  fullName: SuperOffice.DCF.Web.UI.Filters.SubFilter.IMergeSubFilter
- uid: SuperOffice.DCF.Web.UI.Filters.SubFilter.IMergeFilterPlugin
  commentId: T:SuperOffice.DCF.Web.UI.Filters.SubFilter.IMergeFilterPlugin
  parent: SuperOffice.DCF.Web.UI.Filters.SubFilter
  isExternal: true
  name: IMergeFilterPlugin
  nameWithType: IMergeFilterPlugin
  fullName: SuperOffice.DCF.Web.UI.Filters.SubFilter.IMergeFilterPlugin
- uid: SuperOffice.Factory.IPlugin
  isExternal: true
  name: IPlugin
  nameWithType: IPlugin
  fullName: SuperOffice.Factory.IPlugin
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.DCF.Web.UI.Filters.SubFilter.MergeSubFilterBase.Process*
  commentId: Overload:SuperOffice.DCF.Web.UI.Filters.SubFilter.MergeSubFilterBase.Process
  isExternal: true
  name: Process
  nameWithType: MergeSubFilterBase.Process
  fullName: SuperOffice.DCF.Web.UI.Filters.SubFilter.MergeSubFilterBase.Process
- uid: SuperOffice.DCF.Web.UI.Filters.SubFilter.IMergeSubFilter.Process(System.Xml.XmlDocument)
  commentId: M:SuperOffice.DCF.Web.UI.Filters.SubFilter.IMergeSubFilter.Process(System.Xml.XmlDocument)
  parent: SuperOffice.DCF.Web.UI.Filters.SubFilter.IMergeSubFilter
  isExternal: true
  name: Process(XmlDocument)
  nameWithType: IMergeSubFilter.Process(XmlDocument)
  fullName: SuperOffice.DCF.Web.UI.Filters.SubFilter.IMergeSubFilter.Process(System.Xml.XmlDocument)
  spec.csharp:
  - uid: SuperOffice.DCF.Web.UI.Filters.SubFilter.IMergeSubFilter.Process(System.Xml.XmlDocument)
    name: Process
    nameWithType: IMergeSubFilter.Process
    fullName: SuperOffice.DCF.Web.UI.Filters.SubFilter.IMergeSubFilter.Process
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlDocument
    name: XmlDocument
    nameWithType: XmlDocument
    fullName: System.Xml.XmlDocument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.DCF.Web.UI.Filters.SubFilter.IMergeSubFilter.Process(System.Xml.XmlDocument)
    name: Process
    nameWithType: IMergeSubFilter.Process
    fullName: SuperOffice.DCF.Web.UI.Filters.SubFilter.IMergeSubFilter.Process
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlDocument
    name: XmlDocument
    nameWithType: XmlDocument
    fullName: System.Xml.XmlDocument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlDocument
  isExternal: true
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: SuperOffice.DCF.Web.UI.Filters.SubFilter.MergeSubFilterBase.InsertNode*
  commentId: Overload:SuperOffice.DCF.Web.UI.Filters.SubFilter.MergeSubFilterBase.InsertNode
  isExternal: true
  name: InsertNode
  nameWithType: MergeSubFilterBase.InsertNode
  fullName: SuperOffice.DCF.Web.UI.Filters.SubFilter.MergeSubFilterBase.InsertNode
- uid: System.Xml.XmlNode
  isExternal: true
  name: XmlNode
  nameWithType: XmlNode
  fullName: System.Xml.XmlNode
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.DCF.Web.UI.Filters.SubFilter.MergeSubFilterBase.GetXPathToNode*
  commentId: Overload:SuperOffice.DCF.Web.UI.Filters.SubFilter.MergeSubFilterBase.GetXPathToNode
  isExternal: true
  name: GetXPathToNode
  nameWithType: MergeSubFilterBase.GetXPathToNode
  fullName: SuperOffice.DCF.Web.UI.Filters.SubFilter.MergeSubFilterBase.GetXPathToNode
- uid: SuperOffice.DCF.Web.UI.Filters.SubFilter.MergeSubFilterBase.#ctor*
  commentId: Overload:SuperOffice.DCF.Web.UI.Filters.SubFilter.MergeSubFilterBase.#ctor
  isExternal: true
  name: MergeSubFilterBase
  nameWithType: MergeSubFilterBase.MergeSubFilterBase
  fullName: SuperOffice.DCF.Web.UI.Filters.SubFilter.MergeSubFilterBase.MergeSubFilterBase
