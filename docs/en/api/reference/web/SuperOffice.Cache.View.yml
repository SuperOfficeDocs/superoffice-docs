### YamlMime:ManagedReference
items:
- uid: SuperOffice.Cache.View
  commentId: T:SuperOffice.Cache.View
  id: View
  parent: SuperOffice.Cache
  children:
  - SuperOffice.Cache.View.#ctor
  - SuperOffice.Cache.View.#ctor(System.String,System.String)
  - SuperOffice.Cache.View.Current
  - SuperOffice.Cache.View.CurrentTriggers
  - SuperOffice.Cache.View.HasChanged
  - SuperOffice.Cache.View.Id
  - SuperOffice.Cache.View.Params
  - SuperOffice.Cache.View.PrimaryCurrents
  - SuperOffice.Cache.View.SoProtocol
  langs:
  - csharp
  - vb
  name: View
  nameWithType: View
  fullName: SuperOffice.Cache.View
  type: Class
  source:
    path: SuperOffice.DCF
    isExternal: true
  assemblies:
  - SuperOffice.DCF
  namespace: SuperOffice.Cache
  summary: "\nSuperState class representing a view\n"
  syntax:
    content: public class View
    content.vb: Public Class View
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.Cache.View.#ctor
  commentId: M:SuperOffice.Cache.View.#ctor
  id: '#ctor'
  parent: SuperOffice.Cache.View
  langs:
  - csharp
  - vb
  name: View()
  nameWithType: View.View()
  fullName: SuperOffice.Cache.View.View()
  type: Constructor
  source:
    path: SuperOffice.DCF
    isExternal: true
  assemblies:
  - SuperOffice.DCF
  namespace: SuperOffice.Cache
  summary: "\nDefault constructor\n"
  syntax:
    content: public View()
    content.vb: Public Sub New
  overload: SuperOffice.Cache.View.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Cache.View.#ctor(System.String,System.String)
  commentId: M:SuperOffice.Cache.View.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: SuperOffice.Cache.View
  langs:
  - csharp
  - vb
  name: View(String, String)
  nameWithType: View.View(String, String)
  fullName: SuperOffice.Cache.View.View(System.String, System.String)
  type: Constructor
  source:
    path: SuperOffice.DCF
    isExternal: true
  assemblies:
  - SuperOffice.DCF
  namespace: SuperOffice.Cache
  summary: "\nInit constructor\n"
  syntax:
    content: public View(string id, string soprotocol)
    parameters:
    - id: id
      type: System.String
      description: The view&apos;s id
    - id: soprotocol
      type: System.String
      description: The soprotocol representing this view
    content.vb: Public Sub New(id As String, soprotocol As String)
  overload: SuperOffice.Cache.View.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Cache.View.Id
  commentId: P:SuperOffice.Cache.View.Id
  id: Id
  parent: SuperOffice.Cache.View
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: View.Id
  fullName: SuperOffice.Cache.View.Id
  type: Property
  source:
    path: SuperOffice.DCF
    isExternal: true
  assemblies:
  - SuperOffice.DCF
  namespace: SuperOffice.Cache
  summary: "\nThe name of the view\n"
  syntax:
    content: public string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Id As String
  overload: SuperOffice.Cache.View.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.Cache.View.SoProtocol
  commentId: P:SuperOffice.Cache.View.SoProtocol
  id: SoProtocol
  parent: SuperOffice.Cache.View
  langs:
  - csharp
  - vb
  name: SoProtocol
  nameWithType: View.SoProtocol
  fullName: SuperOffice.Cache.View.SoProtocol
  type: Property
  source:
    path: SuperOffice.DCF
    isExternal: true
  assemblies:
  - SuperOffice.DCF
  namespace: SuperOffice.Cache
  summary: "\nThe soprotocol string representing this view\n"
  syntax:
    content: public string SoProtocol { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SoProtocol As String
  overload: SuperOffice.Cache.View.SoProtocol*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.Cache.View.HasChanged
  commentId: P:SuperOffice.Cache.View.HasChanged
  id: HasChanged
  parent: SuperOffice.Cache.View
  langs:
  - csharp
  - vb
  name: HasChanged
  nameWithType: View.HasChanged
  fullName: SuperOffice.Cache.View.HasChanged
  type: Property
  source:
    path: SuperOffice.DCF
    isExternal: true
  assemblies:
  - SuperOffice.DCF
  namespace: SuperOffice.Cache
  summary: "\nTrue if the view has changed since last use\n"
  syntax:
    content: public bool HasChanged { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property HasChanged As Boolean
  overload: SuperOffice.Cache.View.HasChanged*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.Cache.View.Params
  commentId: P:SuperOffice.Cache.View.Params
  id: Params
  parent: SuperOffice.Cache.View
  langs:
  - csharp
  - vb
  name: Params
  nameWithType: View.Params
  fullName: SuperOffice.Cache.View.Params
  type: Property
  source:
    path: SuperOffice.DCF
    isExternal: true
  assemblies:
  - SuperOffice.DCF
  namespace: SuperOffice.Cache
  summary: "\nThe view parameters\n"
  syntax:
    content: public Dictionary<string, string> Params { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    content.vb: Public Property Params As Dictionary(Of String, String)
  overload: SuperOffice.Cache.View.Params*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.Cache.View.CurrentTriggers
  commentId: P:SuperOffice.Cache.View.CurrentTriggers
  id: CurrentTriggers
  parent: SuperOffice.Cache.View
  langs:
  - csharp
  - vb
  name: CurrentTriggers
  nameWithType: View.CurrentTriggers
  fullName: SuperOffice.Cache.View.CurrentTriggers
  type: Property
  source:
    path: SuperOffice.DCF
    isExternal: true
  assemblies:
  - SuperOffice.DCF
  namespace: SuperOffice.Cache
  summary: "\nThe list of current types that this view depends on\n"
  syntax:
    content: public List<string> CurrentTriggers { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Property CurrentTriggers As List(Of String)
  overload: SuperOffice.Cache.View.CurrentTriggers*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.Cache.View.PrimaryCurrents
  commentId: P:SuperOffice.Cache.View.PrimaryCurrents
  id: PrimaryCurrents
  parent: SuperOffice.Cache.View
  langs:
  - csharp
  - vb
  name: PrimaryCurrents
  nameWithType: View.PrimaryCurrents
  fullName: SuperOffice.Cache.View.PrimaryCurrents
  type: Property
  source:
    path: SuperOffice.DCF
    isExternal: true
  assemblies:
  - SuperOffice.DCF
  namespace: SuperOffice.Cache
  syntax:
    content: public List<string> PrimaryCurrents { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Property PrimaryCurrents As List(Of String)
  overload: SuperOffice.Cache.View.PrimaryCurrents*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.Cache.View.Current
  commentId: P:SuperOffice.Cache.View.Current
  id: Current
  parent: SuperOffice.Cache.View
  langs:
  - csharp
  - vb
  name: Current
  nameWithType: View.Current
  fullName: SuperOffice.Cache.View.Current
  type: Property
  source:
    path: SuperOffice.DCF
    isExternal: true
  assemblies:
  - SuperOffice.DCF
  namespace: SuperOffice.Cache
  summary: "\nThe main current associated with the view.\n"
  syntax:
    content: public string Current { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Current As String
  overload: SuperOffice.Cache.View.Current*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.Cache
  commentId: N:SuperOffice.Cache
  isExternal: true
  name: SuperOffice.Cache
  nameWithType: SuperOffice.Cache
  fullName: SuperOffice.Cache
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Cache.View.#ctor*
  commentId: Overload:SuperOffice.Cache.View.#ctor
  isExternal: true
  name: View
  nameWithType: View.View
  fullName: SuperOffice.Cache.View.View
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.Cache.View.Id*
  commentId: Overload:SuperOffice.Cache.View.Id
  isExternal: true
  name: Id
  nameWithType: View.Id
  fullName: SuperOffice.Cache.View.Id
- uid: SuperOffice.Cache.View.SoProtocol*
  commentId: Overload:SuperOffice.Cache.View.SoProtocol
  isExternal: true
  name: SoProtocol
  nameWithType: View.SoProtocol
  fullName: SuperOffice.Cache.View.SoProtocol
- uid: SuperOffice.Cache.View.HasChanged*
  commentId: Overload:SuperOffice.Cache.View.HasChanged
  isExternal: true
  name: HasChanged
  nameWithType: View.HasChanged
  fullName: SuperOffice.Cache.View.HasChanged
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.Cache.View.Params*
  commentId: Overload:SuperOffice.Cache.View.Params
  isExternal: true
  name: Params
  nameWithType: View.Params
  fullName: SuperOffice.Cache.View.Params
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: SuperOffice.Cache.View.CurrentTriggers*
  commentId: Overload:SuperOffice.Cache.View.CurrentTriggers
  isExternal: true
  name: CurrentTriggers
  nameWithType: View.CurrentTriggers
  fullName: SuperOffice.Cache.View.CurrentTriggers
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Cache.View.PrimaryCurrents*
  commentId: Overload:SuperOffice.Cache.View.PrimaryCurrents
  isExternal: true
  name: PrimaryCurrents
  nameWithType: View.PrimaryCurrents
  fullName: SuperOffice.Cache.View.PrimaryCurrents
- uid: SuperOffice.Cache.View.Current*
  commentId: Overload:SuperOffice.Cache.View.Current
  isExternal: true
  name: Current
  nameWithType: View.Current
  fullName: SuperOffice.Cache.View.Current
