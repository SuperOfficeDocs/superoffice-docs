### YamlMime:ManagedReference
items:
- uid: SuperOffice.Web.SoResourceHandler
  commentId: T:SuperOffice.Web.SoResourceHandler
  id: SoResourceHandler
  parent: SuperOffice.Web
  children:
  - SuperOffice.Web.SoResourceHandler.#ctor
  - SuperOffice.Web.SoResourceHandler.IsReusable
  - SuperOffice.Web.SoResourceHandler.ProcessRequest(System.Web.HttpContext)
  - SuperOffice.Web.SoResourceHandler.ProcessRequest(System.Web.HttpContextBase)
  langs:
  - csharp
  - vb
  name: SoResourceHandler
  nameWithType: SoResourceHandler
  fullName: SuperOffice.Web.SoResourceHandler
  type: Class
  source:
    path: SuperOffice.DCFWeb
    isExternal: true
  assemblies:
  - SuperOffice.DCFWeb
  namespace: SuperOffice.Web
  syntax:
    content: 'public class SoResourceHandler : IHttpHandler, IRequiresSessionState'
    content.vb: >-
      Public Class SoResourceHandler
          Implements IHttpHandler, IRequiresSessionState
  inheritance:
  - System.Object
  implements:
  - System.Web.IHttpHandler
  - System.Web.SessionState.IRequiresSessionState
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.Web.SoResourceHandler.ProcessRequest(System.Web.HttpContext)
  commentId: M:SuperOffice.Web.SoResourceHandler.ProcessRequest(System.Web.HttpContext)
  id: ProcessRequest(System.Web.HttpContext)
  parent: SuperOffice.Web.SoResourceHandler
  langs:
  - csharp
  - vb
  name: ProcessRequest(HttpContext)
  nameWithType: SoResourceHandler.ProcessRequest(HttpContext)
  fullName: SuperOffice.Web.SoResourceHandler.ProcessRequest(System.Web.HttpContext)
  type: Method
  source:
    path: SuperOffice.DCFWeb
    isExternal: true
  assemblies:
  - SuperOffice.DCFWeb
  namespace: SuperOffice.Web
  syntax:
    content: public void ProcessRequest(HttpContext context)
    parameters:
    - id: context
      type: System.Web.HttpContext
    content.vb: Public Sub ProcessRequest(context As HttpContext)
  overload: SuperOffice.Web.SoResourceHandler.ProcessRequest*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Web.SoResourceHandler.ProcessRequest(System.Web.HttpContextBase)
  commentId: M:SuperOffice.Web.SoResourceHandler.ProcessRequest(System.Web.HttpContextBase)
  id: ProcessRequest(System.Web.HttpContextBase)
  parent: SuperOffice.Web.SoResourceHandler
  langs:
  - csharp
  - vb
  name: ProcessRequest(HttpContextBase)
  nameWithType: SoResourceHandler.ProcessRequest(HttpContextBase)
  fullName: SuperOffice.Web.SoResourceHandler.ProcessRequest(System.Web.HttpContextBase)
  type: Method
  source:
    path: SuperOffice.DCFWeb
    isExternal: true
  assemblies:
  - SuperOffice.DCFWeb
  namespace: SuperOffice.Web
  syntax:
    content: protected void ProcessRequest(HttpContextBase context)
    parameters:
    - id: context
      type: System.Web.HttpContextBase
    content.vb: Protected Sub ProcessRequest(context As HttpContextBase)
  overload: SuperOffice.Web.SoResourceHandler.ProcessRequest*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.Web.SoResourceHandler.#ctor
  commentId: M:SuperOffice.Web.SoResourceHandler.#ctor
  id: '#ctor'
  parent: SuperOffice.Web.SoResourceHandler
  langs:
  - csharp
  - vb
  name: SoResourceHandler()
  nameWithType: SoResourceHandler.SoResourceHandler()
  fullName: SuperOffice.Web.SoResourceHandler.SoResourceHandler()
  type: Constructor
  source:
    path: SuperOffice.DCFWeb
    isExternal: true
  assemblies:
  - SuperOffice.DCFWeb
  namespace: SuperOffice.Web
  syntax:
    content: public SoResourceHandler()
    content.vb: Public Sub New
  overload: SuperOffice.Web.SoResourceHandler.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Web.SoResourceHandler.IsReusable
  commentId: P:SuperOffice.Web.SoResourceHandler.IsReusable
  id: IsReusable
  parent: SuperOffice.Web.SoResourceHandler
  langs:
  - csharp
  - vb
  name: IsReusable
  nameWithType: SoResourceHandler.IsReusable
  fullName: SuperOffice.Web.SoResourceHandler.IsReusable
  type: Property
  source:
    path: SuperOffice.DCFWeb
    isExternal: true
  assemblies:
  - SuperOffice.DCFWeb
  namespace: SuperOffice.Web
  syntax:
    content: public bool IsReusable { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsReusable As Boolean
  overload: SuperOffice.Web.SoResourceHandler.IsReusable*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: SuperOffice.Web
  commentId: N:SuperOffice.Web
  isExternal: true
  name: SuperOffice.Web
  nameWithType: SuperOffice.Web
  fullName: SuperOffice.Web
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.IHttpHandler
  commentId: '!:System.Web.IHttpHandler'
  isExternal: true
  name: IHttpHandler
  nameWithType: IHttpHandler
  fullName: System.Web.IHttpHandler
- uid: System.Web.SessionState.IRequiresSessionState
  isExternal: true
  name: IRequiresSessionState
  nameWithType: IRequiresSessionState
  fullName: System.Web.SessionState.IRequiresSessionState
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Web.SoResourceHandler.ProcessRequest*
  commentId: Overload:SuperOffice.Web.SoResourceHandler.ProcessRequest
  isExternal: true
  name: ProcessRequest
  nameWithType: SoResourceHandler.ProcessRequest
  fullName: SuperOffice.Web.SoResourceHandler.ProcessRequest
- uid: System.Web.HttpContext
  commentId: '!:System.Web.HttpContext'
  isExternal: true
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.HttpContextBase
  isExternal: true
  name: HttpContextBase
  nameWithType: HttpContextBase
  fullName: System.Web.HttpContextBase
- uid: SuperOffice.Web.SoResourceHandler.#ctor*
  commentId: Overload:SuperOffice.Web.SoResourceHandler.#ctor
  isExternal: true
  name: SoResourceHandler
  nameWithType: SoResourceHandler.SoResourceHandler
  fullName: SuperOffice.Web.SoResourceHandler.SoResourceHandler
- uid: SuperOffice.Web.SoResourceHandler.IsReusable*
  commentId: Overload:SuperOffice.Web.SoResourceHandler.IsReusable
  isExternal: true
  name: IsReusable
  nameWithType: SoResourceHandler.IsReusable
  fullName: SuperOffice.Web.SoResourceHandler.IsReusable
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
