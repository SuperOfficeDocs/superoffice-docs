### YamlMime:ManagedReference
items:
- uid: SuperOffice.WebApi.Agents.BLOBAgent
  commentId: T:SuperOffice.WebApi.Agents.BLOBAgent
  id: BLOBAgent
  parent: SuperOffice.WebApi.Agents
  children:
  - SuperOffice.WebApi.Agents.BLOBAgent.#ctor(SuperOffice.WebApi.WebApiOptions,System.Net.Http.HttpClient)
  - SuperOffice.WebApi.Agents.BLOBAgent.#ctor(System.Net.Http.HttpClient)
  - SuperOffice.WebApi.Agents.BLOBAgent.ChangeContactImageAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.BLOBAgent.ChangePersonImageAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.BLOBAgent.ChangeProductImageAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.BLOBAgent.ChangeProjectImageAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.BLOBAgent.CleanupBatchTaskAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.BLOBAgent.CreateDefaultBlobEntityAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.BLOBAgent.DeleteBlobEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.BLOBAgent.GetAppDataAsync(System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.BLOBAgent.GetBlobEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.BLOBAgent.GetBlobEntityOnContactAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.BLOBAgent.GetBlobEntityOnCountryAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.BLOBAgent.GetBlobEntityOnPersonAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.BLOBAgent.GetBlobEntityOnProductAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.BLOBAgent.GetBlobEntityOnProjectAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.BLOBAgent.GetBlobStreamAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.BLOBAgent.GetChatImageWithSizeAsync(System.Int32,System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.BLOBAgent.GetContactImageAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.BLOBAgent.GetContactImageWithSizeAsync(System.Int32,System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.BLOBAgent.GetOutputFromBatchAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.BLOBAgent.GetPersonImageAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.BLOBAgent.GetPersonImageWithSizeAsync(System.Int32,System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.BLOBAgent.GetProductImageAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.BLOBAgent.GetProductThumbnailAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.BLOBAgent.GetProjectImageAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.BLOBAgent.GetProjectImageWithSizeAsync(System.Int32,System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.BLOBAgent.GetQuoteLineImageAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.BLOBAgent.SaveBlobEntityAsync(SuperOffice.WebApi.Data.BlobEntity,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.BLOBAgent.SaveImageStreamAsync(SuperOffice.WebApi.Data.BlobLinkType,System.Byte[],System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.BLOBAgent.SaveProjectImageAsync(System.String,System.Byte[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.BLOBAgent.SetAppDataAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.BLOBAgent.SetBlobStreamAsync(System.Int32,System.Byte[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.BLOBAgent.SetContactImageAsync(System.Int32,System.Byte[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.BLOBAgent.SetPersonImageAsync(System.Int32,System.Byte[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.BLOBAgent.SetProductImageAsync(System.Int32,System.Byte[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.BLOBAgent.SetProductThumbnailAsync(System.Int32,System.Byte[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.BLOBAgent.SetProjectImageAsync(System.Int32,System.Byte[],SuperOffice.WebApi.RequestOptions)
  langs:
  - csharp
  - vb
  name: BLOBAgent
  nameWithType: BLOBAgent
  fullName: SuperOffice.WebApi.Agents.BLOBAgent
  type: Class
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCollection of all services that works with binary objects (BLOBS), e.g. Images and documents.\n"
  example:
  - "\n<pre><code>  using SuperOffice.WebApi;\n  using SuperOffice.WebApi.Agents;\n\n  var mySession = new WebApiOptions(&quot;http://example.com/super/api&quot;);\n  mySession.Authorization = new AuthorizationUsernamePassword(&quot;user&quot;, &quot;pass&quot;);\n  using (BLOBAgent agent = new BLOBAgent(mySession))\n  {\n        // call methods on agent here...\n  }</code></pre>\n"
  syntax:
    content: 'public class BLOBAgent : AgentBase, IDisposable'
    content.vb: >-
      Public Class BLOBAgent
          Inherits AgentBase
          Implements IDisposable
  inheritance:
  - System.Object
  - SuperOffice.WebApi.Agents.AgentBase
  implements:
  - System.IDisposable
  inheritedMembers:
  - SuperOffice.WebApi.Agents.AgentBase._json
  - SuperOffice.WebApi.Agents.AgentBase._binary
  - SuperOffice.WebApi.Agents.AgentBase._config
  - SuperOffice.WebApi.Agents.AgentBase._client
  - SuperOffice.WebApi.Agents.AgentBase.Merge(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
  - SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream(System.Net.Http.HttpMethod,System.String,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
  - SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization(SuperOffice.WebApi.IAuthorization)
  - SuperOffice.WebApi.Agents.AgentBase.CancelRequest
  - SuperOffice.WebApi.Agents.AgentBase.SendRequestObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
  - SuperOffice.WebApi.Agents.AgentBase.SendRequest(System.Net.Http.HttpRequestMessage,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage)
  - SuperOffice.WebApi.Agents.AgentBase.ParseResponse``1(System.Net.Http.HttpResponseMessage)
  - SuperOffice.WebApi.Agents.AgentBase.Finally(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AgentBase.Dispose
  - SuperOffice.WebApi.Agents.AgentBase.Configuration
  - SuperOffice.WebApi.Agents.AgentBase.Client
  - SuperOffice.WebApi.Agents.AgentBase.HasRunningRequest
  - SuperOffice.WebApi.Agents.AgentBase.ClientCancellationTokenSource
  - SuperOffice.WebApi.Agents.AgentBase.ProgressListener
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.WebApi.Agents.BLOBAgent.#ctor(System.Net.Http.HttpClient)
  commentId: M:SuperOffice.WebApi.Agents.BLOBAgent.#ctor(System.Net.Http.HttpClient)
  id: '#ctor(System.Net.Http.HttpClient)'
  parent: SuperOffice.WebApi.Agents.BLOBAgent
  langs:
  - csharp
  - vb
  name: BLOBAgent(HttpClient)
  nameWithType: BLOBAgent.BLOBAgent(HttpClient)
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.BLOBAgent(System.Net.Http.HttpClient)
  type: Constructor
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nConstructor: Collection of all services that works with binary objects (BLOBS), e.g. Images and documents.\n"
  syntax:
    content: public BLOBAgent(HttpClient httpClient)
    parameters:
    - id: httpClient
      type: System.Net.Http.HttpClient
      description: Use this HTTP client instead of making a new one. Client is disposed when agent is disposed.
    content.vb: Public Sub New(httpClient As HttpClient)
  overload: SuperOffice.WebApi.Agents.BLOBAgent.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.BLOBAgent.#ctor(SuperOffice.WebApi.WebApiOptions,System.Net.Http.HttpClient)
  commentId: M:SuperOffice.WebApi.Agents.BLOBAgent.#ctor(SuperOffice.WebApi.WebApiOptions,System.Net.Http.HttpClient)
  id: '#ctor(SuperOffice.WebApi.WebApiOptions,System.Net.Http.HttpClient)'
  parent: SuperOffice.WebApi.Agents.BLOBAgent
  langs:
  - csharp
  - vb
  name: BLOBAgent(WebApiOptions, HttpClient)
  nameWithType: BLOBAgent.BLOBAgent(WebApiOptions, HttpClient)
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.BLOBAgent(SuperOffice.WebApi.WebApiOptions, System.Net.Http.HttpClient)
  type: Constructor
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nConstructor: Collection of all services that works with binary objects (BLOBS), e.g. Images and documents.\n"
  syntax:
    content: public BLOBAgent(WebApiOptions options, HttpClient httpClient = null)
    parameters:
    - id: options
      type: SuperOffice.WebApi.WebApiOptions
      description: Base URL and authentication values.
    - id: httpClient
      type: System.Net.Http.HttpClient
      description: 'Optional: Use this HTTP client instead of making a new one. Client is disposed when agent is disposed.'
    content.vb: Public Sub New(options As WebApiOptions, httpClient As HttpClient = Nothing)
  overload: SuperOffice.WebApi.Agents.BLOBAgent.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.BLOBAgent.CreateDefaultBlobEntityAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.BLOBAgent.CreateDefaultBlobEntityAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultBlobEntityAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.BLOBAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultBlobEntityAsync(RequestOptions)
  nameWithType: BLOBAgent.CreateDefaultBlobEntityAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.CreateDefaultBlobEntityAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet default values into a new BlobEntity.\nNetServer calculates default values on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: public Task<BlobEntity> CreateDefaultBlobEntityAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.BlobEntity}
      description: A blank BlobEntity
    content.vb: Public Function CreateDefaultBlobEntityAsync(requestOptions As RequestOptions = Nothing) As Task(Of BlobEntity)
  overload: SuperOffice.WebApi.Agents.BLOBAgent.CreateDefaultBlobEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.BLOBAgent.SaveBlobEntityAsync(SuperOffice.WebApi.Data.BlobEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.BLOBAgent.SaveBlobEntityAsync(SuperOffice.WebApi.Data.BlobEntity,SuperOffice.WebApi.RequestOptions)
  id: SaveBlobEntityAsync(SuperOffice.WebApi.Data.BlobEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.BLOBAgent
  langs:
  - csharp
  - vb
  name: SaveBlobEntityAsync(BlobEntity, RequestOptions)
  nameWithType: BLOBAgent.SaveBlobEntityAsync(BlobEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.SaveBlobEntityAsync(SuperOffice.WebApi.Data.BlobEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdates the existing BlobEntity or creates a new BlobEntity if the id parameter is 0. \n"
  syntax:
    content: public Task<BlobEntity> SaveBlobEntityAsync(BlobEntity blobEntity, RequestOptions requestOptions = null)
    parameters:
    - id: blobEntity
      type: SuperOffice.WebApi.Data.BlobEntity
      description: The BlobEntity that is saved.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.BlobEntity}
      description: New or updated BlobEntity
    content.vb: Public Function SaveBlobEntityAsync(blobEntity As BlobEntity, requestOptions As RequestOptions = Nothing) As Task(Of BlobEntity)
  overload: SuperOffice.WebApi.Agents.BLOBAgent.SaveBlobEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.BLOBAgent.DeleteBlobEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.BLOBAgent.DeleteBlobEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: DeleteBlobEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.BLOBAgent
  langs:
  - csharp
  - vb
  name: DeleteBlobEntityAsync(Int32, RequestOptions)
  nameWithType: BLOBAgent.DeleteBlobEntityAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.DeleteBlobEntityAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nDeletes the BlobEntity\n"
  syntax:
    content: public Task DeleteBlobEntityAsync(int blobEntityId, RequestOptions requestOptions = null)
    parameters:
    - id: blobEntityId
      type: System.Int32
      description: The identity of the BlobEntity
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function DeleteBlobEntityAsync(blobEntityId As Integer, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.BLOBAgent.DeleteBlobEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.BLOBAgent.GetBlobEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.BLOBAgent.GetBlobEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetBlobEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.BLOBAgent
  langs:
  - csharp
  - vb
  name: GetBlobEntityAsync(Int32, RequestOptions)
  nameWithType: BLOBAgent.GetBlobEntityAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.GetBlobEntityAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific BlobEntity object.                        \n"
  syntax:
    content: public Task<BlobEntity> GetBlobEntityAsync(int blobEntityId, RequestOptions requestOptions = null)
    parameters:
    - id: blobEntityId
      type: System.Int32
      description: The identifier of the BlobEntity object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.BlobEntity}
      description: BlobEntity
    content.vb: Public Function GetBlobEntityAsync(blobEntityId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of BlobEntity)
  overload: SuperOffice.WebApi.Agents.BLOBAgent.GetBlobEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.BLOBAgent.SetBlobStreamAsync(System.Int32,System.Byte[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.BLOBAgent.SetBlobStreamAsync(System.Int32,System.Byte[],SuperOffice.WebApi.RequestOptions)
  id: SetBlobStreamAsync(System.Int32,System.Byte[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.BLOBAgent
  langs:
  - csharp
  - vb
  name: SetBlobStreamAsync(Int32, Byte[], RequestOptions)
  nameWithType: BLOBAgent.SetBlobStreamAsync(Int32, Byte[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.SetBlobStreamAsync(System.Int32, System.Byte[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nStore a binary object from it&apos;s stream\n"
  syntax:
    content: public Task SetBlobStreamAsync(int blobEntityId, byte[] stream, RequestOptions requestOptions = null)
    parameters:
    - id: blobEntityId
      type: System.Int32
      description: Id of the BLOB entity object that the binary data should be stored to.
    - id: stream
      type: System.Byte[]
      description: The binary object as a Stream
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SetBlobStreamAsync(blobEntityId As Integer, stream As Byte(), requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.BLOBAgent.SetBlobStreamAsync*
  nameWithType.vb: BLOBAgent.SetBlobStreamAsync(Int32, Byte(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.BLOBAgent.SetBlobStreamAsync(System.Int32, System.Byte(), SuperOffice.WebApi.RequestOptions)
  name.vb: SetBlobStreamAsync(Int32, Byte(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.BLOBAgent.GetBlobStreamAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.BLOBAgent.GetBlobStreamAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetBlobStreamAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.BLOBAgent
  langs:
  - csharp
  - vb
  name: GetBlobStreamAsync(Int32, String, RequestOptions)
  nameWithType: BLOBAgent.GetBlobStreamAsync(Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.GetBlobStreamAsync(System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet the binary object as a stream\n"
  syntax:
    content: public Task<byte[]> GetBlobStreamAsync(int blobEntityId, string returnContentType = "application/octet-stream", RequestOptions requestOptions = null)
    parameters:
    - id: blobEntityId
      type: System.Int32
      description: The ID of the BLOB entity object that refers to the binary data
    - id: returnContentType
      type: System.String
      description: Accept content-type. Default &quot;application/octet-stream&quot;. Could also be &quot;application/pdf&quot;, &quot;text/plain&quot;, &quot;text/html&quot;, or &quot;multipart/related&quot;
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Byte[]}
      description: The binary object as a Stream
    content.vb: Public Function GetBlobStreamAsync(blobEntityId As Integer, returnContentType As String = "application/octet-stream", requestOptions As RequestOptions = Nothing) As Task(Of Byte())
  overload: SuperOffice.WebApi.Agents.BLOBAgent.GetBlobStreamAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.BLOBAgent.GetProjectImageAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.BLOBAgent.GetProjectImageAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetProjectImageAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.BLOBAgent
  langs:
  - csharp
  - vb
  name: GetProjectImageAsync(Int32, String, RequestOptions)
  nameWithType: BLOBAgent.GetProjectImageAsync(Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.GetProjectImageAsync(System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns the project image that is displayed in the CRM application.\n"
  syntax:
    content: public Task<byte[]> GetProjectImageAsync(int projectId, string returnContentType = "application/octet-stream", RequestOptions requestOptions = null)
    parameters:
    - id: projectId
      type: System.Int32
      description: The project id of the project the image belongs to.
    - id: returnContentType
      type: System.String
      description: Accept content-type. Default &quot;application/octet-stream&quot;. Could also be &quot;application/pdf&quot;, &quot;text/plain&quot;, &quot;text/html&quot;, or &quot;multipart/related&quot;
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Byte[]}
      description: The image as a System.Drawing.Image. (If the the image is returned over webservices, the stream is returned as a Base64 encoded string.)
    content.vb: Public Function GetProjectImageAsync(projectId As Integer, returnContentType As String = "application/octet-stream", requestOptions As RequestOptions = Nothing) As Task(Of Byte())
  overload: SuperOffice.WebApi.Agents.BLOBAgent.GetProjectImageAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.BLOBAgent.GetPersonImageAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.BLOBAgent.GetPersonImageAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetPersonImageAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.BLOBAgent
  langs:
  - csharp
  - vb
  name: GetPersonImageAsync(Int32, String, RequestOptions)
  nameWithType: BLOBAgent.GetPersonImageAsync(Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.GetPersonImageAsync(System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns the person image that is displayed in the CRM application.\n"
  syntax:
    content: public Task<byte[]> GetPersonImageAsync(int personId, string returnContentType = "application/octet-stream", RequestOptions requestOptions = null)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id of the person the image belongs to.
    - id: returnContentType
      type: System.String
      description: Accept content-type. Default &quot;application/octet-stream&quot;. Could also be &quot;application/pdf&quot;, &quot;text/plain&quot;, &quot;text/html&quot;, or &quot;multipart/related&quot;
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Byte[]}
      description: The image as a System.Drawing.Image. (If the the image is returned over webservices, the stream is returned as a Base64 encoded string.)
    content.vb: Public Function GetPersonImageAsync(personId As Integer, returnContentType As String = "application/octet-stream", requestOptions As RequestOptions = Nothing) As Task(Of Byte())
  overload: SuperOffice.WebApi.Agents.BLOBAgent.GetPersonImageAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.BLOBAgent.SetProjectImageAsync(System.Int32,System.Byte[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.BLOBAgent.SetProjectImageAsync(System.Int32,System.Byte[],SuperOffice.WebApi.RequestOptions)
  id: SetProjectImageAsync(System.Int32,System.Byte[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.BLOBAgent
  langs:
  - csharp
  - vb
  name: SetProjectImageAsync(Int32, Byte[], RequestOptions)
  nameWithType: BLOBAgent.SetProjectImageAsync(Int32, Byte[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.SetProjectImageAsync(System.Int32, System.Byte[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nStores the project image that is displayed in the CRM application.\n"
  syntax:
    content: public Task SetProjectImageAsync(int projectId, byte[] image, RequestOptions requestOptions = null)
    parameters:
    - id: projectId
      type: System.Int32
      description: The project id of the project the image belongs to.
    - id: image
      type: System.Byte[]
      description: The image that is stored on the project (System.Drawing.Image)
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SetProjectImageAsync(projectId As Integer, image As Byte(), requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.BLOBAgent.SetProjectImageAsync*
  nameWithType.vb: BLOBAgent.SetProjectImageAsync(Int32, Byte(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.BLOBAgent.SetProjectImageAsync(System.Int32, System.Byte(), SuperOffice.WebApi.RequestOptions)
  name.vb: SetProjectImageAsync(Int32, Byte(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.BLOBAgent.SetPersonImageAsync(System.Int32,System.Byte[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.BLOBAgent.SetPersonImageAsync(System.Int32,System.Byte[],SuperOffice.WebApi.RequestOptions)
  id: SetPersonImageAsync(System.Int32,System.Byte[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.BLOBAgent
  langs:
  - csharp
  - vb
  name: SetPersonImageAsync(Int32, Byte[], RequestOptions)
  nameWithType: BLOBAgent.SetPersonImageAsync(Int32, Byte[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.SetPersonImageAsync(System.Int32, System.Byte[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nStores the person image that is displayed in the CRM application.\n"
  syntax:
    content: public Task SetPersonImageAsync(int personId, byte[] image, RequestOptions requestOptions = null)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id of the person the image belongs to.
    - id: image
      type: System.Byte[]
      description: The image that is stored on the person (System.Drawing.Image)
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SetPersonImageAsync(personId As Integer, image As Byte(), requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.BLOBAgent.SetPersonImageAsync*
  nameWithType.vb: BLOBAgent.SetPersonImageAsync(Int32, Byte(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.BLOBAgent.SetPersonImageAsync(System.Int32, System.Byte(), SuperOffice.WebApi.RequestOptions)
  name.vb: SetPersonImageAsync(Int32, Byte(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.BLOBAgent.ChangeProjectImageAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.BLOBAgent.ChangeProjectImageAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: ChangeProjectImageAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.BLOBAgent
  langs:
  - csharp
  - vb
  name: ChangeProjectImageAsync(Int32, Int32, RequestOptions)
  nameWithType: BLOBAgent.ChangeProjectImageAsync(Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.ChangeProjectImageAsync(System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nChanges the project image link. If the Binary object id is 0, any image link is removed from the project.\n"
  syntax:
    content: public Task ChangeProjectImageAsync(int projectId, int blobId, RequestOptions requestOptions = null)
    parameters:
    - id: projectId
      type: System.Int32
      description: The project the image is linked to
    - id: blobId
      type: System.Int32
      description: The Binary object id. If the Binary object id is 0, any image link is removed from the project.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function ChangeProjectImageAsync(projectId As Integer, blobId As Integer, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.BLOBAgent.ChangeProjectImageAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.BLOBAgent.SaveProjectImageAsync(System.String,System.Byte[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.BLOBAgent.SaveProjectImageAsync(System.String,System.Byte[],SuperOffice.WebApi.RequestOptions)
  id: SaveProjectImageAsync(System.String,System.Byte[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.BLOBAgent
  langs:
  - csharp
  - vb
  name: SaveProjectImageAsync(String, Byte[], RequestOptions)
  nameWithType: BLOBAgent.SaveProjectImageAsync(String, Byte[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.SaveProjectImageAsync(System.String, System.Byte[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSaves a project image that is displayed in the CRM application&apos;s project image selection dialog to the database.\n"
  syntax:
    content: public Task SaveProjectImageAsync(string description, byte[] image, RequestOptions requestOptions = null)
    parameters:
    - id: description
      type: System.String
      description: Image description. Should be image name (e.g. winter.jpg) for project images
    - id: image
      type: System.Byte[]
      description: The project image (System.Drawing.Image)
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SaveProjectImageAsync(description As String, image As Byte(), requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.BLOBAgent.SaveProjectImageAsync*
  nameWithType.vb: BLOBAgent.SaveProjectImageAsync(String, Byte(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.BLOBAgent.SaveProjectImageAsync(System.String, System.Byte(), SuperOffice.WebApi.RequestOptions)
  name.vb: SaveProjectImageAsync(String, Byte(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.BLOBAgent.GetBlobEntityOnProjectAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.BLOBAgent.GetBlobEntityOnProjectAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetBlobEntityOnProjectAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.BLOBAgent
  langs:
  - csharp
  - vb
  name: GetBlobEntityOnProjectAsync(Int32, RequestOptions)
  nameWithType: BLOBAgent.GetBlobEntityOnProjectAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.GetBlobEntityOnProjectAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets the blob entity that represents the project image binary object.\n"
  syntax:
    content: public Task<BlobEntity> GetBlobEntityOnProjectAsync(int projectId, RequestOptions requestOptions = null)
    parameters:
    - id: projectId
      type: System.Int32
      description: The project id
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.BlobEntity}
      description: BlobEntity object
    content.vb: Public Function GetBlobEntityOnProjectAsync(projectId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of BlobEntity)
  overload: SuperOffice.WebApi.Agents.BLOBAgent.GetBlobEntityOnProjectAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.BLOBAgent.GetBlobEntityOnPersonAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.BLOBAgent.GetBlobEntityOnPersonAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetBlobEntityOnPersonAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.BLOBAgent
  langs:
  - csharp
  - vb
  name: GetBlobEntityOnPersonAsync(Int32, RequestOptions)
  nameWithType: BLOBAgent.GetBlobEntityOnPersonAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.GetBlobEntityOnPersonAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets the blob entity that represents the person image binary object.\n"
  syntax:
    content: public Task<BlobEntity> GetBlobEntityOnPersonAsync(int personId, RequestOptions requestOptions = null)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.BlobEntity}
      description: BlobEntity object
    content.vb: Public Function GetBlobEntityOnPersonAsync(personId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of BlobEntity)
  overload: SuperOffice.WebApi.Agents.BLOBAgent.GetBlobEntityOnPersonAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.BLOBAgent.GetBlobEntityOnCountryAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.BLOBAgent.GetBlobEntityOnCountryAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetBlobEntityOnCountryAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.BLOBAgent
  langs:
  - csharp
  - vb
  name: GetBlobEntityOnCountryAsync(Int32, RequestOptions)
  nameWithType: BLOBAgent.GetBlobEntityOnCountryAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.GetBlobEntityOnCountryAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets the blob entity that represents the country flag binary object.\n"
  syntax:
    content: public Task<BlobEntity> GetBlobEntityOnCountryAsync(int countryId, RequestOptions requestOptions = null)
    parameters:
    - id: countryId
      type: System.Int32
      description: The country id
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.BlobEntity}
      description: BlobEntity object
    content.vb: Public Function GetBlobEntityOnCountryAsync(countryId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of BlobEntity)
  overload: SuperOffice.WebApi.Agents.BLOBAgent.GetBlobEntityOnCountryAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.BLOBAgent.GetBlobEntityOnProductAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.BLOBAgent.GetBlobEntityOnProductAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetBlobEntityOnProductAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.BLOBAgent
  langs:
  - csharp
  - vb
  name: GetBlobEntityOnProductAsync(Int32, RequestOptions)
  nameWithType: BLOBAgent.GetBlobEntityOnProductAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.GetBlobEntityOnProductAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets the blob entity that represents the product image binary object.\n"
  syntax:
    content: public Task<BlobEntity> GetBlobEntityOnProductAsync(int productId, RequestOptions requestOptions = null)
    parameters:
    - id: productId
      type: System.Int32
      description: The product id
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.BlobEntity}
      description: BlobEntity object
    content.vb: Public Function GetBlobEntityOnProductAsync(productId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of BlobEntity)
  overload: SuperOffice.WebApi.Agents.BLOBAgent.GetBlobEntityOnProductAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.BLOBAgent.ChangePersonImageAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.BLOBAgent.ChangePersonImageAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: ChangePersonImageAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.BLOBAgent
  langs:
  - csharp
  - vb
  name: ChangePersonImageAsync(Int32, Int32, RequestOptions)
  nameWithType: BLOBAgent.ChangePersonImageAsync(Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.ChangePersonImageAsync(System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\n\n"
  syntax:
    content: public Task ChangePersonImageAsync(int personId, int blobId, RequestOptions requestOptions = null)
    parameters:
    - id: personId
      type: System.Int32
      description: The person the image is linked to
    - id: blobId
      type: System.Int32
      description: The Binary object id. If the Binary object id is 0, any image link is removed from the person.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function ChangePersonImageAsync(personId As Integer, blobId As Integer, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.BLOBAgent.ChangePersonImageAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.BLOBAgent.SaveImageStreamAsync(SuperOffice.WebApi.Data.BlobLinkType,System.Byte[],System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.BLOBAgent.SaveImageStreamAsync(SuperOffice.WebApi.Data.BlobLinkType,System.Byte[],System.String,SuperOffice.WebApi.RequestOptions)
  id: SaveImageStreamAsync(SuperOffice.WebApi.Data.BlobLinkType,System.Byte[],System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.BLOBAgent
  langs:
  - csharp
  - vb
  name: SaveImageStreamAsync(BlobLinkType, Byte[], String, RequestOptions)
  nameWithType: BLOBAgent.SaveImageStreamAsync(BlobLinkType, Byte[], String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.SaveImageStreamAsync(SuperOffice.WebApi.Data.BlobLinkType, System.Byte[], System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nStores an image in the database without linking it to a project or a person. It is possible to ChangePersonImage or ChangeProjectImage to attach image later.\n"
  syntax:
    content: public Task<int> SaveImageStreamAsync(BlobLinkType type, byte[] image, string description, RequestOptions requestOptions = null)
    parameters:
    - id: type
      type: SuperOffice.WebApi.Data.BlobLinkType
      description: The type of the image.
    - id: image
      type: System.Byte[]
      description: Image to store
    - id: description
      type: System.String
      description: Image description
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: The blob id
    content.vb: Public Function SaveImageStreamAsync(type As BlobLinkType, image As Byte(), description As String, requestOptions As RequestOptions = Nothing) As Task(Of Integer)
  overload: SuperOffice.WebApi.Agents.BLOBAgent.SaveImageStreamAsync*
  nameWithType.vb: BLOBAgent.SaveImageStreamAsync(BlobLinkType, Byte(), String, RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.BLOBAgent.SaveImageStreamAsync(SuperOffice.WebApi.Data.BlobLinkType, System.Byte(), System.String, SuperOffice.WebApi.RequestOptions)
  name.vb: SaveImageStreamAsync(BlobLinkType, Byte(), String, RequestOptions)
- uid: SuperOffice.WebApi.Agents.BLOBAgent.GetProductImageAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.BLOBAgent.GetProductImageAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetProductImageAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.BLOBAgent
  langs:
  - csharp
  - vb
  name: GetProductImageAsync(Int32, String, RequestOptions)
  nameWithType: BLOBAgent.GetProductImageAsync(Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.GetProductImageAsync(System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns the product image (rank=1) that is displayed in the CRM application.\n"
  syntax:
    content: public Task<byte[]> GetProductImageAsync(int productId, string returnContentType = "application/octet-stream", RequestOptions requestOptions = null)
    parameters:
    - id: productId
      type: System.Int32
      description: The product id of the product the image belongs to.
    - id: returnContentType
      type: System.String
      description: Accept content-type. Default &quot;application/octet-stream&quot;. Could also be &quot;application/pdf&quot;, &quot;text/plain&quot;, &quot;text/html&quot;, or &quot;multipart/related&quot;
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Byte[]}
      description: The image as a System.Drawing.Image. (If the the image is returned over webservices, the stream is returned as a Base64 encoded string.)
    content.vb: Public Function GetProductImageAsync(productId As Integer, returnContentType As String = "application/octet-stream", requestOptions As RequestOptions = Nothing) As Task(Of Byte())
  overload: SuperOffice.WebApi.Agents.BLOBAgent.GetProductImageAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.BLOBAgent.SetProductImageAsync(System.Int32,System.Byte[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.BLOBAgent.SetProductImageAsync(System.Int32,System.Byte[],SuperOffice.WebApi.RequestOptions)
  id: SetProductImageAsync(System.Int32,System.Byte[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.BLOBAgent
  langs:
  - csharp
  - vb
  name: SetProductImageAsync(Int32, Byte[], RequestOptions)
  nameWithType: BLOBAgent.SetProductImageAsync(Int32, Byte[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.SetProductImageAsync(System.Int32, System.Byte[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nStores the product image that is displayed in the CRM application. The image is scaled down to max 1000x1000. This method operates only the main (rank=1) image; future extensions may support multiple images. A thumbnail of size 75x75 is also automatically set.\n"
  syntax:
    content: public Task SetProductImageAsync(int productId, byte[] image, RequestOptions requestOptions = null)
    parameters:
    - id: productId
      type: System.Int32
      description: The product id of the product the image belongs to.
    - id: image
      type: System.Byte[]
      description: The image that is stored on the product (System.Drawing.Image), scaled down to no more than 1000x1000
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SetProductImageAsync(productId As Integer, image As Byte(), requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.BLOBAgent.SetProductImageAsync*
  nameWithType.vb: BLOBAgent.SetProductImageAsync(Int32, Byte(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.BLOBAgent.SetProductImageAsync(System.Int32, System.Byte(), SuperOffice.WebApi.RequestOptions)
  name.vb: SetProductImageAsync(Int32, Byte(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.BLOBAgent.GetProductThumbnailAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.BLOBAgent.GetProductThumbnailAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetProductThumbnailAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.BLOBAgent
  langs:
  - csharp
  - vb
  name: GetProductThumbnailAsync(Int32, String, RequestOptions)
  nameWithType: BLOBAgent.GetProductThumbnailAsync(Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.GetProductThumbnailAsync(System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns the product thumbnail that is displayed in the CRM application.\n"
  syntax:
    content: public Task<byte[]> GetProductThumbnailAsync(int productId, string returnContentType = "application/octet-stream", RequestOptions requestOptions = null)
    parameters:
    - id: productId
      type: System.Int32
      description: The product id of the product the thumbnail belongs to.
    - id: returnContentType
      type: System.String
      description: Accept content-type. Default &quot;application/octet-stream&quot;. Could also be &quot;application/pdf&quot;, &quot;text/plain&quot;, &quot;text/html&quot;, or &quot;multipart/related&quot;
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Byte[]}
      description: The thumbnail as a System.Drawing.Image. (If the the image is returned over webservices, the stream is returned as a Base64 encoded string.)
    content.vb: Public Function GetProductThumbnailAsync(productId As Integer, returnContentType As String = "application/octet-stream", requestOptions As RequestOptions = Nothing) As Task(Of Byte())
  overload: SuperOffice.WebApi.Agents.BLOBAgent.GetProductThumbnailAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.BLOBAgent.SetProductThumbnailAsync(System.Int32,System.Byte[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.BLOBAgent.SetProductThumbnailAsync(System.Int32,System.Byte[],SuperOffice.WebApi.RequestOptions)
  id: SetProductThumbnailAsync(System.Int32,System.Byte[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.BLOBAgent
  langs:
  - csharp
  - vb
  name: SetProductThumbnailAsync(Int32, Byte[], RequestOptions)
  nameWithType: BLOBAgent.SetProductThumbnailAsync(Int32, Byte[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.SetProductThumbnailAsync(System.Int32, System.Byte[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nStores the product thumbnail that is displayed in the CRM application. The image is scaled down to max 200x200 pixels.\n"
  syntax:
    content: public Task SetProductThumbnailAsync(int productId, byte[] image, RequestOptions requestOptions = null)
    parameters:
    - id: productId
      type: System.Int32
      description: The product id of the product the image belongs to.
    - id: image
      type: System.Byte[]
      description: The image that is stored on the product (System.Drawing.Image); scaled down to no more than 200x200
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SetProductThumbnailAsync(productId As Integer, image As Byte(), requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.BLOBAgent.SetProductThumbnailAsync*
  nameWithType.vb: BLOBAgent.SetProductThumbnailAsync(Int32, Byte(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.BLOBAgent.SetProductThumbnailAsync(System.Int32, System.Byte(), SuperOffice.WebApi.RequestOptions)
  name.vb: SetProductThumbnailAsync(Int32, Byte(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.BLOBAgent.ChangeProductImageAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.BLOBAgent.ChangeProductImageAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: ChangeProductImageAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.BLOBAgent
  langs:
  - csharp
  - vb
  name: ChangeProductImageAsync(Int32, Int32, RequestOptions)
  nameWithType: BLOBAgent.ChangeProductImageAsync(Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.ChangeProductImageAsync(System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\n\n"
  syntax:
    content: public Task ChangeProductImageAsync(int productId, int blobId, RequestOptions requestOptions = null)
    parameters:
    - id: productId
      type: System.Int32
      description: The product the image is linked to
    - id: blobId
      type: System.Int32
      description: The Binary object id. If the Binary object id is 0, any image link is removed from the product.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function ChangeProductImageAsync(productId As Integer, blobId As Integer, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.BLOBAgent.ChangeProductImageAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.BLOBAgent.GetQuoteLineImageAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.BLOBAgent.GetQuoteLineImageAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetQuoteLineImageAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.BLOBAgent
  langs:
  - csharp
  - vb
  name: GetQuoteLineImageAsync(Int32, String, RequestOptions)
  nameWithType: BLOBAgent.GetQuoteLineImageAsync(Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.GetQuoteLineImageAsync(System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns the quoteline image (rank=1) that is displayed in the CRM application.\n"
  syntax:
    content: public Task<byte[]> GetQuoteLineImageAsync(int quoteLineId, string returnContentType = "application/octet-stream", RequestOptions requestOptions = null)
    parameters:
    - id: quoteLineId
      type: System.Int32
      description: The product id of the quoteline the image belongs to.
    - id: returnContentType
      type: System.String
      description: Accept content-type. Default &quot;application/octet-stream&quot;. Could also be &quot;application/pdf&quot;, &quot;text/plain&quot;, &quot;text/html&quot;, or &quot;multipart/related&quot;
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Byte[]}
      description: The image as a System.Drawing.Image. (If the the image is returned over webservices, the stream is returned as a Base64 encoded string.)
    content.vb: Public Function GetQuoteLineImageAsync(quoteLineId As Integer, returnContentType As String = "application/octet-stream", requestOptions As RequestOptions = Nothing) As Task(Of Byte())
  overload: SuperOffice.WebApi.Agents.BLOBAgent.GetQuoteLineImageAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.BLOBAgent.GetAppDataAsync(System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.BLOBAgent.GetAppDataAsync(System.String,SuperOffice.WebApi.RequestOptions)
  id: GetAppDataAsync(System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.BLOBAgent
  langs:
  - csharp
  - vb
  name: GetAppDataAsync(String, RequestOptions)
  nameWithType: BLOBAgent.GetAppDataAsync(String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.GetAppDataAsync(System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet a CLOB (limited to a reasonable size by the mechanics of Web Services) according to a string key; ALSO limits to the current ApplicationToken if any\n"
  syntax:
    content: public Task<string> GetAppDataAsync(string key, RequestOptions requestOptions = null)
    parameters:
    - id: key
      type: System.String
      description: The key string, less than 200 characters. Must be unique within each application.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The applications value, suggested to be a JSON, XML or other readable structure
    content.vb: Public Function GetAppDataAsync(key As String, requestOptions As RequestOptions = Nothing) As Task(Of String)
  overload: SuperOffice.WebApi.Agents.BLOBAgent.GetAppDataAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.BLOBAgent.SetAppDataAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.BLOBAgent.SetAppDataAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  id: SetAppDataAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.BLOBAgent
  langs:
  - csharp
  - vb
  name: SetAppDataAsync(String, String, RequestOptions)
  nameWithType: BLOBAgent.SetAppDataAsync(String, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.SetAppDataAsync(System.String, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet a CLOB (limited to a reasonable size by the mechanics of Web Services) according to a string key; ALSO limits to the current ApplicationToken if any. Existing data, if any, will be overwritten. Overwrite with a blank value to delete.\n"
  syntax:
    content: public Task SetAppDataAsync(string key, string data, RequestOptions requestOptions = null)
    parameters:
    - id: key
      type: System.String
      description: The key string, less than 200 characters. Must be unique within each application.
    - id: data
      type: System.String
      description: The applications value, suggested to be a JSON, XML or other readable structure
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Public Function SetAppDataAsync(key As String, data As String, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.BLOBAgent.SetAppDataAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.BLOBAgent.GetPersonImageWithSizeAsync(System.Int32,System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.BLOBAgent.GetPersonImageWithSizeAsync(System.Int32,System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetPersonImageWithSizeAsync(System.Int32,System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.BLOBAgent
  langs:
  - csharp
  - vb
  name: GetPersonImageWithSizeAsync(Int32, Int32, Int32, String, RequestOptions)
  nameWithType: BLOBAgent.GetPersonImageWithSizeAsync(Int32, Int32, Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.GetPersonImageWithSizeAsync(System.Int32, System.Int32, System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns the person image that is displayed in the CRM application with a specified maximum size.\n"
  syntax:
    content: public Task<byte[]> GetPersonImageWithSizeAsync(int personId, int width, int height, string returnContentType = "application/octet-stream", RequestOptions requestOptions = null)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id of the person the image belongs to.
    - id: width
      type: System.Int32
      description: The maximum with of the returned image. Specify &lt;= 0 to preserve aspect ratio of existing image
    - id: height
      type: System.Int32
      description: The maximum height of the returned image. Specify &lt;= 0 to preserve aspect ratio of existing image
    - id: returnContentType
      type: System.String
      description: Accept content-type. Default &quot;application/octet-stream&quot;. Could also be &quot;application/pdf&quot;, &quot;text/plain&quot;, &quot;text/html&quot;, or &quot;multipart/related&quot;
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Byte[]}
      description: The image as a System.Drawing.Image. (If the the image is returned over webservices, the stream is returned as a jpeg/base64 encoded string.)
    content.vb: Public Function GetPersonImageWithSizeAsync(personId As Integer, width As Integer, height As Integer, returnContentType As String = "application/octet-stream", requestOptions As RequestOptions = Nothing) As Task(Of Byte())
  overload: SuperOffice.WebApi.Agents.BLOBAgent.GetPersonImageWithSizeAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.BLOBAgent.GetProjectImageWithSizeAsync(System.Int32,System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.BLOBAgent.GetProjectImageWithSizeAsync(System.Int32,System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetProjectImageWithSizeAsync(System.Int32,System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.BLOBAgent
  langs:
  - csharp
  - vb
  name: GetProjectImageWithSizeAsync(Int32, Int32, Int32, String, RequestOptions)
  nameWithType: BLOBAgent.GetProjectImageWithSizeAsync(Int32, Int32, Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.GetProjectImageWithSizeAsync(System.Int32, System.Int32, System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns the project image that is displayed in the CRM application with a specified maximum size.\n"
  syntax:
    content: public Task<byte[]> GetProjectImageWithSizeAsync(int projectId, int width, int height, string returnContentType = "application/octet-stream", RequestOptions requestOptions = null)
    parameters:
    - id: projectId
      type: System.Int32
      description: The project id of the project the image belongs to.
    - id: width
      type: System.Int32
      description: The maximum with of the returned image. Specify &lt;= 0 to preserve aspect ratio of existing image
    - id: height
      type: System.Int32
      description: The maximum height of the returned image. Specify &lt;= 0 to preserve aspect ratio of existing image
    - id: returnContentType
      type: System.String
      description: Accept content-type. Default &quot;application/octet-stream&quot;. Could also be &quot;application/pdf&quot;, &quot;text/plain&quot;, &quot;text/html&quot;, or &quot;multipart/related&quot;
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Byte[]}
      description: The image as a System.Drawing.Image. (If the the image is returned over webservices, the stream is returned as a jpeg/base64 encoded string.)
    content.vb: Public Function GetProjectImageWithSizeAsync(projectId As Integer, width As Integer, height As Integer, returnContentType As String = "application/octet-stream", requestOptions As RequestOptions = Nothing) As Task(Of Byte())
  overload: SuperOffice.WebApi.Agents.BLOBAgent.GetProjectImageWithSizeAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.BLOBAgent.GetChatImageWithSizeAsync(System.Int32,System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.BLOBAgent.GetChatImageWithSizeAsync(System.Int32,System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetChatImageWithSizeAsync(System.Int32,System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.BLOBAgent
  langs:
  - csharp
  - vb
  name: GetChatImageWithSizeAsync(Int32, Int32, Int32, String, RequestOptions)
  nameWithType: BLOBAgent.GetChatImageWithSizeAsync(Int32, Int32, Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.GetChatImageWithSizeAsync(System.Int32, System.Int32, System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns the chat image that is displayed in chat with a specified maximum size.\n"
  syntax:
    content: public Task<byte[]> GetChatImageWithSizeAsync(int chatTopicId, int width, int height, string returnContentType = "application/octet-stream", RequestOptions requestOptions = null)
    parameters:
    - id: chatTopicId
      type: System.Int32
      description: The project id of the project the image belongs to.
    - id: width
      type: System.Int32
      description: The maximum with of the returned image. Specify &lt;= 0 to preserve aspect ratio of existing image
    - id: height
      type: System.Int32
      description: The maximum height of the returned image. Specify &lt;= 0 to preserve aspect ratio of existing image
    - id: returnContentType
      type: System.String
      description: Accept content-type. Default &quot;application/octet-stream&quot;. Could also be &quot;application/pdf&quot;, &quot;text/plain&quot;, &quot;text/html&quot;, or &quot;multipart/related&quot;
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Byte[]}
      description: The image as a System.Drawing.Image. (If the the image is returned over webservices, the stream is returned as a jpeg/base64 encoded string.)
    content.vb: Public Function GetChatImageWithSizeAsync(chatTopicId As Integer, width As Integer, height As Integer, returnContentType As String = "application/octet-stream", requestOptions As RequestOptions = Nothing) As Task(Of Byte())
  overload: SuperOffice.WebApi.Agents.BLOBAgent.GetChatImageWithSizeAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.BLOBAgent.GetContactImageAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.BLOBAgent.GetContactImageAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetContactImageAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.BLOBAgent
  langs:
  - csharp
  - vb
  name: GetContactImageAsync(Int32, String, RequestOptions)
  nameWithType: BLOBAgent.GetContactImageAsync(Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.GetContactImageAsync(System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns the contact image that is displayed in the CRM application.\n"
  syntax:
    content: public Task<byte[]> GetContactImageAsync(int contactId, string returnContentType = "application/octet-stream", RequestOptions requestOptions = null)
    parameters:
    - id: contactId
      type: System.Int32
      description: The contact id of the contact the image belongs to.
    - id: returnContentType
      type: System.String
      description: Accept content-type. Default &quot;application/octet-stream&quot;. Could also be &quot;application/pdf&quot;, &quot;text/plain&quot;, &quot;text/html&quot;, or &quot;multipart/related&quot;
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Byte[]}
      description: The image as a System.Drawing.Image. (If the the image is returned over webservices, the stream is returned as a Base64 encoded string.)
    content.vb: Public Function GetContactImageAsync(contactId As Integer, returnContentType As String = "application/octet-stream", requestOptions As RequestOptions = Nothing) As Task(Of Byte())
  overload: SuperOffice.WebApi.Agents.BLOBAgent.GetContactImageAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.BLOBAgent.SetContactImageAsync(System.Int32,System.Byte[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.BLOBAgent.SetContactImageAsync(System.Int32,System.Byte[],SuperOffice.WebApi.RequestOptions)
  id: SetContactImageAsync(System.Int32,System.Byte[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.BLOBAgent
  langs:
  - csharp
  - vb
  name: SetContactImageAsync(Int32, Byte[], RequestOptions)
  nameWithType: BLOBAgent.SetContactImageAsync(Int32, Byte[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.SetContactImageAsync(System.Int32, System.Byte[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nStores the contact image that is displayed in the CRM application.\n"
  syntax:
    content: public Task SetContactImageAsync(int contactId, byte[] image, RequestOptions requestOptions = null)
    parameters:
    - id: contactId
      type: System.Int32
      description: The contact id of the contact the image belongs to.
    - id: image
      type: System.Byte[]
      description: The image that is stored on the contact (System.Drawing.Image)
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SetContactImageAsync(contactId As Integer, image As Byte(), requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.BLOBAgent.SetContactImageAsync*
  nameWithType.vb: BLOBAgent.SetContactImageAsync(Int32, Byte(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.BLOBAgent.SetContactImageAsync(System.Int32, System.Byte(), SuperOffice.WebApi.RequestOptions)
  name.vb: SetContactImageAsync(Int32, Byte(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.BLOBAgent.ChangeContactImageAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.BLOBAgent.ChangeContactImageAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: ChangeContactImageAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.BLOBAgent
  langs:
  - csharp
  - vb
  name: ChangeContactImageAsync(Int32, Int32, RequestOptions)
  nameWithType: BLOBAgent.ChangeContactImageAsync(Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.ChangeContactImageAsync(System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nChanges the contact image link. If the Binary object id is 0, any image link is removed from the contact.\n"
  syntax:
    content: public Task ChangeContactImageAsync(int contactId, int blobId, RequestOptions requestOptions = null)
    parameters:
    - id: contactId
      type: System.Int32
      description: The Contact the image is linked to
    - id: blobId
      type: System.Int32
      description: The Binary object id. If the Binary object id is 0, any image link is removed from the Contact.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function ChangeContactImageAsync(contactId As Integer, blobId As Integer, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.BLOBAgent.ChangeContactImageAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.BLOBAgent.GetBlobEntityOnContactAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.BLOBAgent.GetBlobEntityOnContactAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetBlobEntityOnContactAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.BLOBAgent
  langs:
  - csharp
  - vb
  name: GetBlobEntityOnContactAsync(Int32, RequestOptions)
  nameWithType: BLOBAgent.GetBlobEntityOnContactAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.GetBlobEntityOnContactAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets the blob entity that represents the contact image binary object.\n"
  syntax:
    content: public Task<BlobEntity> GetBlobEntityOnContactAsync(int contactId, RequestOptions requestOptions = null)
    parameters:
    - id: contactId
      type: System.Int32
      description: The Contact id
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.BlobEntity}
      description: BlobEntity object
    content.vb: Public Function GetBlobEntityOnContactAsync(contactId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of BlobEntity)
  overload: SuperOffice.WebApi.Agents.BLOBAgent.GetBlobEntityOnContactAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.BLOBAgent.GetContactImageWithSizeAsync(System.Int32,System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.BLOBAgent.GetContactImageWithSizeAsync(System.Int32,System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetContactImageWithSizeAsync(System.Int32,System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.BLOBAgent
  langs:
  - csharp
  - vb
  name: GetContactImageWithSizeAsync(Int32, Int32, Int32, String, RequestOptions)
  nameWithType: BLOBAgent.GetContactImageWithSizeAsync(Int32, Int32, Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.GetContactImageWithSizeAsync(System.Int32, System.Int32, System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns the contact image that is displayed in the CRM application with a specified maximum size.\n"
  syntax:
    content: public Task<byte[]> GetContactImageWithSizeAsync(int contactId, int width, int height, string returnContentType = "application/octet-stream", RequestOptions requestOptions = null)
    parameters:
    - id: contactId
      type: System.Int32
      description: The contact id of the Contact the image belongs to.
    - id: width
      type: System.Int32
      description: The maximum with of the returned image. Specify &lt;= 0 to preserve aspect ratio of existing image
    - id: height
      type: System.Int32
      description: The maximum height of the returned image. Specify &lt;= 0 to preserve aspect ratio of existing image
    - id: returnContentType
      type: System.String
      description: Accept content-type. Default &quot;application/octet-stream&quot;. Could also be &quot;application/pdf&quot;, &quot;text/plain&quot;, &quot;text/html&quot;, or &quot;multipart/related&quot;
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Byte[]}
      description: The image as a System.Drawing.Image. (If the the image is returned over webservices, the stream is returned as a jpeg/base64 encoded string.)
    content.vb: Public Function GetContactImageWithSizeAsync(contactId As Integer, width As Integer, height As Integer, returnContentType As String = "application/octet-stream", requestOptions As RequestOptions = Nothing) As Task(Of Byte())
  overload: SuperOffice.WebApi.Agents.BLOBAgent.GetContactImageWithSizeAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.BLOBAgent.GetOutputFromBatchAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.BLOBAgent.GetOutputFromBatchAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetOutputFromBatchAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.BLOBAgent
  langs:
  - csharp
  - vb
  name: GetOutputFromBatchAsync(Int32, String, RequestOptions)
  nameWithType: BLOBAgent.GetOutputFromBatchAsync(Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.GetOutputFromBatchAsync(System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet the output of a batchtask as a stream\n"
  syntax:
    content: public Task<byte[]> GetOutputFromBatchAsync(int batchTaskId, string returnContentType = "application/octet-stream", RequestOptions requestOptions = null)
    parameters:
    - id: batchTaskId
      type: System.Int32
      description: The ID of the batchtask that created the output data
    - id: returnContentType
      type: System.String
      description: Accept content-type. Default &quot;application/octet-stream&quot;. Could also be &quot;application/pdf&quot;, &quot;text/plain&quot;, &quot;text/html&quot;, or &quot;multipart/related&quot;
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Byte[]}
      description: The binary object as a Stream
    content.vb: Public Function GetOutputFromBatchAsync(batchTaskId As Integer, returnContentType As String = "application/octet-stream", requestOptions As RequestOptions = Nothing) As Task(Of Byte())
  overload: SuperOffice.WebApi.Agents.BLOBAgent.GetOutputFromBatchAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.BLOBAgent.CleanupBatchTaskAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.BLOBAgent.CleanupBatchTaskAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: CleanupBatchTaskAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.BLOBAgent
  langs:
  - csharp
  - vb
  name: CleanupBatchTaskAsync(Int32, RequestOptions)
  nameWithType: BLOBAgent.CleanupBatchTaskAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.CleanupBatchTaskAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nRemoves the binary objects linked to the batch task, the links themselves and the batch task.\n"
  syntax:
    content: public Task CleanupBatchTaskAsync(int batchTaskId, RequestOptions requestOptions = null)
    parameters:
    - id: batchTaskId
      type: System.Int32
      description: The ID of the batchtask that created the output data
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function CleanupBatchTaskAsync(batchTaskId As Integer, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.BLOBAgent.CleanupBatchTaskAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.WebApi.Agents
  commentId: N:SuperOffice.WebApi.Agents
  isExternal: true
  name: SuperOffice.WebApi.Agents
  nameWithType: SuperOffice.WebApi.Agents
  fullName: SuperOffice.WebApi.Agents
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.WebApi.Agents.AgentBase
  commentId: T:SuperOffice.WebApi.Agents.AgentBase
  parent: SuperOffice.WebApi.Agents
  isExternal: true
  name: AgentBase
  nameWithType: AgentBase
  fullName: SuperOffice.WebApi.Agents.AgentBase
- uid: System.IDisposable
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: SuperOffice.WebApi.Agents.AgentBase._json
  commentId: F:SuperOffice.WebApi.Agents.AgentBase._json
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: _json
  nameWithType: AgentBase._json
  fullName: SuperOffice.WebApi.Agents.AgentBase._json
- uid: SuperOffice.WebApi.Agents.AgentBase._binary
  commentId: F:SuperOffice.WebApi.Agents.AgentBase._binary
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: _binary
  nameWithType: AgentBase._binary
  fullName: SuperOffice.WebApi.Agents.AgentBase._binary
- uid: SuperOffice.WebApi.Agents.AgentBase._config
  commentId: F:SuperOffice.WebApi.Agents.AgentBase._config
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: _config
  nameWithType: AgentBase._config
  fullName: SuperOffice.WebApi.Agents.AgentBase._config
- uid: SuperOffice.WebApi.Agents.AgentBase._client
  commentId: F:SuperOffice.WebApi.Agents.AgentBase._client
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: _client
  nameWithType: AgentBase._client
  fullName: SuperOffice.WebApi.Agents.AgentBase._client
- uid: SuperOffice.WebApi.Agents.AgentBase.Merge(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.Merge(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: Merge(RequestOptions)
  nameWithType: AgentBase.Merge(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AgentBase.Merge(SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.Merge(SuperOffice.WebApi.RequestOptions)
    name: Merge
    nameWithType: AgentBase.Merge
    fullName: SuperOffice.WebApi.Agents.AgentBase.Merge
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.Merge(SuperOffice.WebApi.RequestOptions)
    name: Merge
    nameWithType: AgentBase.Merge
    fullName: SuperOffice.WebApi.Agents.AgentBase.Merge
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: BuildRequestFromObject(HttpMethod, String, Object, WebApiOptions, String)
  nameWithType: AgentBase.BuildRequestFromObject(HttpMethod, String, Object, WebApiOptions, String)
  fullName: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject(System.Net.Http.HttpMethod, System.String, System.Object, SuperOffice.WebApi.WebApiOptions, System.String)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
    name: BuildRequestFromObject
    nameWithType: AgentBase.BuildRequestFromObject
    fullName: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.WebApiOptions
    name: WebApiOptions
    nameWithType: WebApiOptions
    fullName: SuperOffice.WebApi.WebApiOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
    name: BuildRequestFromObject
    nameWithType: AgentBase.BuildRequestFromObject
    fullName: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.WebApiOptions
    name: WebApiOptions
    nameWithType: WebApiOptions
    fullName: SuperOffice.WebApi.WebApiOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream(System.Net.Http.HttpMethod,System.String,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream(System.Net.Http.HttpMethod,System.String,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: BuildRequestFromStream(HttpMethod, String, Stream, WebApiOptions, String)
  nameWithType: AgentBase.BuildRequestFromStream(HttpMethod, String, Stream, WebApiOptions, String)
  fullName: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream(System.Net.Http.HttpMethod, System.String, System.IO.Stream, SuperOffice.WebApi.WebApiOptions, System.String)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream(System.Net.Http.HttpMethod,System.String,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
    name: BuildRequestFromStream
    nameWithType: AgentBase.BuildRequestFromStream
    fullName: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.WebApiOptions
    name: WebApiOptions
    nameWithType: WebApiOptions
    fullName: SuperOffice.WebApi.WebApiOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream(System.Net.Http.HttpMethod,System.String,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
    name: BuildRequestFromStream
    nameWithType: AgentBase.BuildRequestFromStream
    fullName: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.WebApiOptions
    name: WebApiOptions
    nameWithType: WebApiOptions
    fullName: SuperOffice.WebApi.WebApiOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization(SuperOffice.WebApi.IAuthorization)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization(SuperOffice.WebApi.IAuthorization)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: ParseAuthorization(IAuthorization)
  nameWithType: AgentBase.ParseAuthorization(IAuthorization)
  fullName: SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization(SuperOffice.WebApi.IAuthorization)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization(SuperOffice.WebApi.IAuthorization)
    name: ParseAuthorization
    nameWithType: AgentBase.ParseAuthorization
    fullName: SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.IAuthorization
    name: IAuthorization
    nameWithType: IAuthorization
    fullName: SuperOffice.WebApi.IAuthorization
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization(SuperOffice.WebApi.IAuthorization)
    name: ParseAuthorization
    nameWithType: AgentBase.ParseAuthorization
    fullName: SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.IAuthorization
    name: IAuthorization
    nameWithType: IAuthorization
    fullName: SuperOffice.WebApi.IAuthorization
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.CancelRequest
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.CancelRequest
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: CancelRequest()
  nameWithType: AgentBase.CancelRequest()
  fullName: SuperOffice.WebApi.Agents.AgentBase.CancelRequest()
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.CancelRequest
    name: CancelRequest
    nameWithType: AgentBase.CancelRequest
    fullName: SuperOffice.WebApi.Agents.AgentBase.CancelRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.CancelRequest
    name: CancelRequest
    nameWithType: AgentBase.CancelRequest
    fullName: SuperOffice.WebApi.Agents.AgentBase.CancelRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.SendRequestObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.SendRequestObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: SendRequestObject(HttpMethod, String, Object, WebApiOptions, String)
  nameWithType: AgentBase.SendRequestObject(HttpMethod, String, Object, WebApiOptions, String)
  fullName: SuperOffice.WebApi.Agents.AgentBase.SendRequestObject(System.Net.Http.HttpMethod, System.String, System.Object, SuperOffice.WebApi.WebApiOptions, System.String)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.SendRequestObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
    name: SendRequestObject
    nameWithType: AgentBase.SendRequestObject
    fullName: SuperOffice.WebApi.Agents.AgentBase.SendRequestObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.WebApiOptions
    name: WebApiOptions
    nameWithType: WebApiOptions
    fullName: SuperOffice.WebApi.WebApiOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.SendRequestObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
    name: SendRequestObject
    nameWithType: AgentBase.SendRequestObject
    fullName: SuperOffice.WebApi.Agents.AgentBase.SendRequestObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.WebApiOptions
    name: WebApiOptions
    nameWithType: WebApiOptions
    fullName: SuperOffice.WebApi.WebApiOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.SendRequest(System.Net.Http.HttpRequestMessage,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.SendRequest(System.Net.Http.HttpRequestMessage,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: SendRequest(HttpRequestMessage, RequestOptions)
  nameWithType: AgentBase.SendRequest(HttpRequestMessage, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AgentBase.SendRequest(System.Net.Http.HttpRequestMessage, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.SendRequest(System.Net.Http.HttpRequestMessage,SuperOffice.WebApi.RequestOptions)
    name: SendRequest
    nameWithType: AgentBase.SendRequest
    fullName: SuperOffice.WebApi.Agents.AgentBase.SendRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.SendRequest(System.Net.Http.HttpRequestMessage,SuperOffice.WebApi.RequestOptions)
    name: SendRequest
    nameWithType: AgentBase.SendRequest
    fullName: SuperOffice.WebApi.Agents.AgentBase.SendRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: ThrowOnResponseError(HttpRequestMessage, HttpResponseMessage)
  nameWithType: AgentBase.ThrowOnResponseError(HttpRequestMessage, HttpResponseMessage)
  fullName: SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError(System.Net.Http.HttpRequestMessage, System.Net.Http.HttpResponseMessage)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage)
    name: ThrowOnResponseError
    nameWithType: AgentBase.ThrowOnResponseError
    fullName: SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage)
    name: ThrowOnResponseError
    nameWithType: AgentBase.ThrowOnResponseError
    fullName: SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.ParseResponse``1(System.Net.Http.HttpResponseMessage)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.ParseResponse``1(System.Net.Http.HttpResponseMessage)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: ParseResponse<T>(HttpResponseMessage)
  nameWithType: AgentBase.ParseResponse<T>(HttpResponseMessage)
  fullName: SuperOffice.WebApi.Agents.AgentBase.ParseResponse<T>(System.Net.Http.HttpResponseMessage)
  nameWithType.vb: AgentBase.ParseResponse(Of T)(HttpResponseMessage)
  fullName.vb: SuperOffice.WebApi.Agents.AgentBase.ParseResponse(Of T)(System.Net.Http.HttpResponseMessage)
  name.vb: ParseResponse(Of T)(HttpResponseMessage)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.ParseResponse``1(System.Net.Http.HttpResponseMessage)
    name: ParseResponse<T>
    nameWithType: AgentBase.ParseResponse<T>
    fullName: SuperOffice.WebApi.Agents.AgentBase.ParseResponse<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.ParseResponse``1(System.Net.Http.HttpResponseMessage)
    name: ParseResponse(Of T)
    nameWithType: AgentBase.ParseResponse(Of T)
    fullName: SuperOffice.WebApi.Agents.AgentBase.ParseResponse(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.Finally(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.Finally(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: Finally(RequestOptions)
  nameWithType: AgentBase.Finally(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AgentBase.Finally(SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.Finally(SuperOffice.WebApi.RequestOptions)
    name: Finally
    nameWithType: AgentBase.Finally
    fullName: SuperOffice.WebApi.Agents.AgentBase.Finally
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.Finally(SuperOffice.WebApi.RequestOptions)
    name: Finally
    nameWithType: AgentBase.Finally
    fullName: SuperOffice.WebApi.Agents.AgentBase.Finally
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.Dispose
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.Dispose
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: Dispose()
  nameWithType: AgentBase.Dispose()
  fullName: SuperOffice.WebApi.Agents.AgentBase.Dispose()
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.Dispose
    name: Dispose
    nameWithType: AgentBase.Dispose
    fullName: SuperOffice.WebApi.Agents.AgentBase.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.Dispose
    name: Dispose
    nameWithType: AgentBase.Dispose
    fullName: SuperOffice.WebApi.Agents.AgentBase.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.Configuration
  commentId: P:SuperOffice.WebApi.Agents.AgentBase.Configuration
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: Configuration
  nameWithType: AgentBase.Configuration
  fullName: SuperOffice.WebApi.Agents.AgentBase.Configuration
- uid: SuperOffice.WebApi.Agents.AgentBase.Client
  commentId: P:SuperOffice.WebApi.Agents.AgentBase.Client
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: Client
  nameWithType: AgentBase.Client
  fullName: SuperOffice.WebApi.Agents.AgentBase.Client
- uid: SuperOffice.WebApi.Agents.AgentBase.HasRunningRequest
  commentId: P:SuperOffice.WebApi.Agents.AgentBase.HasRunningRequest
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: HasRunningRequest
  nameWithType: AgentBase.HasRunningRequest
  fullName: SuperOffice.WebApi.Agents.AgentBase.HasRunningRequest
- uid: SuperOffice.WebApi.Agents.AgentBase.ClientCancellationTokenSource
  commentId: P:SuperOffice.WebApi.Agents.AgentBase.ClientCancellationTokenSource
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: ClientCancellationTokenSource
  nameWithType: AgentBase.ClientCancellationTokenSource
  fullName: SuperOffice.WebApi.Agents.AgentBase.ClientCancellationTokenSource
- uid: SuperOffice.WebApi.Agents.AgentBase.ProgressListener
  commentId: P:SuperOffice.WebApi.Agents.AgentBase.ProgressListener
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: ProgressListener
  nameWithType: AgentBase.ProgressListener
  fullName: SuperOffice.WebApi.Agents.AgentBase.ProgressListener
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.WebApi.Agents.BLOBAgent.#ctor*
  commentId: Overload:SuperOffice.WebApi.Agents.BLOBAgent.#ctor
  isExternal: true
  name: BLOBAgent
  nameWithType: BLOBAgent.BLOBAgent
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.BLOBAgent
- uid: System.Net.Http.HttpClient
  isExternal: true
  name: HttpClient
  nameWithType: HttpClient
  fullName: System.Net.Http.HttpClient
- uid: SuperOffice.WebApi.WebApiOptions
  commentId: T:SuperOffice.WebApi.WebApiOptions
  parent: SuperOffice.WebApi
  isExternal: true
  name: WebApiOptions
  nameWithType: WebApiOptions
  fullName: SuperOffice.WebApi.WebApiOptions
- uid: SuperOffice.WebApi
  commentId: N:SuperOffice.WebApi
  isExternal: true
  name: SuperOffice.WebApi
  nameWithType: SuperOffice.WebApi
  fullName: SuperOffice.WebApi
- uid: SuperOffice.WebApi.Agents.BLOBAgent.CreateDefaultBlobEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.BLOBAgent.CreateDefaultBlobEntityAsync
  isExternal: true
  name: CreateDefaultBlobEntityAsync
  nameWithType: BLOBAgent.CreateDefaultBlobEntityAsync
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.CreateDefaultBlobEntityAsync
- uid: SuperOffice.WebApi.RequestOptions
  commentId: T:SuperOffice.WebApi.RequestOptions
  parent: SuperOffice.WebApi
  isExternal: true
  name: RequestOptions
  nameWithType: RequestOptions
  fullName: SuperOffice.WebApi.RequestOptions
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.BlobEntity}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.BlobEntity}'
  definition: System.Threading.Tasks.Task`1
  name: Task<BlobEntity>
  nameWithType: Task<BlobEntity>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.BlobEntity>
  nameWithType.vb: Task(Of BlobEntity)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.BlobEntity)
  name.vb: Task(Of BlobEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.BlobEntity
    name: BlobEntity
    nameWithType: BlobEntity
    fullName: SuperOffice.WebApi.Data.BlobEntity
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.BlobEntity
    name: BlobEntity
    nameWithType: BlobEntity
    fullName: SuperOffice.WebApi.Data.BlobEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.BLOBAgent.SaveBlobEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.BLOBAgent.SaveBlobEntityAsync
  isExternal: true
  name: SaveBlobEntityAsync
  nameWithType: BLOBAgent.SaveBlobEntityAsync
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.SaveBlobEntityAsync
- uid: SuperOffice.WebApi.Data.BlobEntity
  commentId: T:SuperOffice.WebApi.Data.BlobEntity
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: BlobEntity
  nameWithType: BlobEntity
  fullName: SuperOffice.WebApi.Data.BlobEntity
- uid: SuperOffice.WebApi.Data
  commentId: N:SuperOffice.WebApi.Data
  isExternal: true
  name: SuperOffice.WebApi.Data
  nameWithType: SuperOffice.WebApi.Data
  fullName: SuperOffice.WebApi.Data
- uid: SuperOffice.WebApi.Agents.BLOBAgent.DeleteBlobEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.BLOBAgent.DeleteBlobEntityAsync
  isExternal: true
  name: DeleteBlobEntityAsync
  nameWithType: BLOBAgent.DeleteBlobEntityAsync
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.DeleteBlobEntityAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: SuperOffice.WebApi.Agents.BLOBAgent.GetBlobEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.BLOBAgent.GetBlobEntityAsync
  isExternal: true
  name: GetBlobEntityAsync
  nameWithType: BLOBAgent.GetBlobEntityAsync
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.GetBlobEntityAsync
- uid: SuperOffice.WebApi.Agents.BLOBAgent.SetBlobStreamAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.BLOBAgent.SetBlobStreamAsync
  isExternal: true
  name: SetBlobStreamAsync
  nameWithType: BLOBAgent.SetBlobStreamAsync
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.SetBlobStreamAsync
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.WebApi.Agents.BLOBAgent.GetBlobStreamAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.BLOBAgent.GetBlobStreamAsync
  isExternal: true
  name: GetBlobStreamAsync
  nameWithType: BLOBAgent.GetBlobStreamAsync
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.GetBlobStreamAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Task{System.Byte[]}
  commentId: '!:System.Threading.Tasks.Task{System.Byte[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Byte[]>
  nameWithType: Task<Byte[]>
  fullName: System.Threading.Tasks.Task<System.Byte[]>
  nameWithType.vb: Task(Of Byte())
  fullName.vb: System.Threading.Tasks.Task(Of System.Byte())
  name.vb: Task(Of Byte())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.BLOBAgent.GetProjectImageAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.BLOBAgent.GetProjectImageAsync
  isExternal: true
  name: GetProjectImageAsync
  nameWithType: BLOBAgent.GetProjectImageAsync
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.GetProjectImageAsync
- uid: SuperOffice.WebApi.Agents.BLOBAgent.GetPersonImageAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.BLOBAgent.GetPersonImageAsync
  isExternal: true
  name: GetPersonImageAsync
  nameWithType: BLOBAgent.GetPersonImageAsync
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.GetPersonImageAsync
- uid: SuperOffice.WebApi.Agents.BLOBAgent.SetProjectImageAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.BLOBAgent.SetProjectImageAsync
  isExternal: true
  name: SetProjectImageAsync
  nameWithType: BLOBAgent.SetProjectImageAsync
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.SetProjectImageAsync
- uid: SuperOffice.WebApi.Agents.BLOBAgent.SetPersonImageAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.BLOBAgent.SetPersonImageAsync
  isExternal: true
  name: SetPersonImageAsync
  nameWithType: BLOBAgent.SetPersonImageAsync
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.SetPersonImageAsync
- uid: SuperOffice.WebApi.Agents.BLOBAgent.ChangeProjectImageAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.BLOBAgent.ChangeProjectImageAsync
  isExternal: true
  name: ChangeProjectImageAsync
  nameWithType: BLOBAgent.ChangeProjectImageAsync
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.ChangeProjectImageAsync
- uid: SuperOffice.WebApi.Agents.BLOBAgent.SaveProjectImageAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.BLOBAgent.SaveProjectImageAsync
  isExternal: true
  name: SaveProjectImageAsync
  nameWithType: BLOBAgent.SaveProjectImageAsync
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.SaveProjectImageAsync
- uid: SuperOffice.WebApi.Agents.BLOBAgent.GetBlobEntityOnProjectAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.BLOBAgent.GetBlobEntityOnProjectAsync
  isExternal: true
  name: GetBlobEntityOnProjectAsync
  nameWithType: BLOBAgent.GetBlobEntityOnProjectAsync
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.GetBlobEntityOnProjectAsync
- uid: SuperOffice.WebApi.Agents.BLOBAgent.GetBlobEntityOnPersonAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.BLOBAgent.GetBlobEntityOnPersonAsync
  isExternal: true
  name: GetBlobEntityOnPersonAsync
  nameWithType: BLOBAgent.GetBlobEntityOnPersonAsync
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.GetBlobEntityOnPersonAsync
- uid: SuperOffice.WebApi.Agents.BLOBAgent.GetBlobEntityOnCountryAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.BLOBAgent.GetBlobEntityOnCountryAsync
  isExternal: true
  name: GetBlobEntityOnCountryAsync
  nameWithType: BLOBAgent.GetBlobEntityOnCountryAsync
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.GetBlobEntityOnCountryAsync
- uid: SuperOffice.WebApi.Agents.BLOBAgent.GetBlobEntityOnProductAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.BLOBAgent.GetBlobEntityOnProductAsync
  isExternal: true
  name: GetBlobEntityOnProductAsync
  nameWithType: BLOBAgent.GetBlobEntityOnProductAsync
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.GetBlobEntityOnProductAsync
- uid: SuperOffice.WebApi.Agents.BLOBAgent.ChangePersonImageAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.BLOBAgent.ChangePersonImageAsync
  isExternal: true
  name: ChangePersonImageAsync
  nameWithType: BLOBAgent.ChangePersonImageAsync
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.ChangePersonImageAsync
- uid: SuperOffice.WebApi.Agents.BLOBAgent.SaveImageStreamAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.BLOBAgent.SaveImageStreamAsync
  isExternal: true
  name: SaveImageStreamAsync
  nameWithType: BLOBAgent.SaveImageStreamAsync
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.SaveImageStreamAsync
- uid: SuperOffice.WebApi.Data.BlobLinkType
  commentId: T:SuperOffice.WebApi.Data.BlobLinkType
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: BlobLinkType
  nameWithType: BlobLinkType
  fullName: SuperOffice.WebApi.Data.BlobLinkType
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: '!:System.Threading.Tasks.Task{System.Int32}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  nameWithType.vb: Task(Of Int32)
  fullName.vb: System.Threading.Tasks.Task(Of System.Int32)
  name.vb: Task(Of Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.BLOBAgent.GetProductImageAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.BLOBAgent.GetProductImageAsync
  isExternal: true
  name: GetProductImageAsync
  nameWithType: BLOBAgent.GetProductImageAsync
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.GetProductImageAsync
- uid: SuperOffice.WebApi.Agents.BLOBAgent.SetProductImageAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.BLOBAgent.SetProductImageAsync
  isExternal: true
  name: SetProductImageAsync
  nameWithType: BLOBAgent.SetProductImageAsync
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.SetProductImageAsync
- uid: SuperOffice.WebApi.Agents.BLOBAgent.GetProductThumbnailAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.BLOBAgent.GetProductThumbnailAsync
  isExternal: true
  name: GetProductThumbnailAsync
  nameWithType: BLOBAgent.GetProductThumbnailAsync
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.GetProductThumbnailAsync
- uid: SuperOffice.WebApi.Agents.BLOBAgent.SetProductThumbnailAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.BLOBAgent.SetProductThumbnailAsync
  isExternal: true
  name: SetProductThumbnailAsync
  nameWithType: BLOBAgent.SetProductThumbnailAsync
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.SetProductThumbnailAsync
- uid: SuperOffice.WebApi.Agents.BLOBAgent.ChangeProductImageAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.BLOBAgent.ChangeProductImageAsync
  isExternal: true
  name: ChangeProductImageAsync
  nameWithType: BLOBAgent.ChangeProductImageAsync
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.ChangeProductImageAsync
- uid: SuperOffice.WebApi.Agents.BLOBAgent.GetQuoteLineImageAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.BLOBAgent.GetQuoteLineImageAsync
  isExternal: true
  name: GetQuoteLineImageAsync
  nameWithType: BLOBAgent.GetQuoteLineImageAsync
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.GetQuoteLineImageAsync
- uid: SuperOffice.WebApi.Agents.BLOBAgent.GetAppDataAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.BLOBAgent.GetAppDataAsync
  isExternal: true
  name: GetAppDataAsync
  nameWithType: BLOBAgent.GetAppDataAsync
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.GetAppDataAsync
- uid: System.Threading.Tasks.Task{System.String}
  commentId: '!:System.Threading.Tasks.Task{System.String}'
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.BLOBAgent.SetAppDataAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.BLOBAgent.SetAppDataAsync
  isExternal: true
  name: SetAppDataAsync
  nameWithType: BLOBAgent.SetAppDataAsync
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.SetAppDataAsync
- uid: SuperOffice.WebApi.Agents.BLOBAgent.GetPersonImageWithSizeAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.BLOBAgent.GetPersonImageWithSizeAsync
  isExternal: true
  name: GetPersonImageWithSizeAsync
  nameWithType: BLOBAgent.GetPersonImageWithSizeAsync
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.GetPersonImageWithSizeAsync
- uid: SuperOffice.WebApi.Agents.BLOBAgent.GetProjectImageWithSizeAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.BLOBAgent.GetProjectImageWithSizeAsync
  isExternal: true
  name: GetProjectImageWithSizeAsync
  nameWithType: BLOBAgent.GetProjectImageWithSizeAsync
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.GetProjectImageWithSizeAsync
- uid: SuperOffice.WebApi.Agents.BLOBAgent.GetChatImageWithSizeAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.BLOBAgent.GetChatImageWithSizeAsync
  isExternal: true
  name: GetChatImageWithSizeAsync
  nameWithType: BLOBAgent.GetChatImageWithSizeAsync
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.GetChatImageWithSizeAsync
- uid: SuperOffice.WebApi.Agents.BLOBAgent.GetContactImageAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.BLOBAgent.GetContactImageAsync
  isExternal: true
  name: GetContactImageAsync
  nameWithType: BLOBAgent.GetContactImageAsync
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.GetContactImageAsync
- uid: SuperOffice.WebApi.Agents.BLOBAgent.SetContactImageAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.BLOBAgent.SetContactImageAsync
  isExternal: true
  name: SetContactImageAsync
  nameWithType: BLOBAgent.SetContactImageAsync
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.SetContactImageAsync
- uid: SuperOffice.WebApi.Agents.BLOBAgent.ChangeContactImageAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.BLOBAgent.ChangeContactImageAsync
  isExternal: true
  name: ChangeContactImageAsync
  nameWithType: BLOBAgent.ChangeContactImageAsync
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.ChangeContactImageAsync
- uid: SuperOffice.WebApi.Agents.BLOBAgent.GetBlobEntityOnContactAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.BLOBAgent.GetBlobEntityOnContactAsync
  isExternal: true
  name: GetBlobEntityOnContactAsync
  nameWithType: BLOBAgent.GetBlobEntityOnContactAsync
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.GetBlobEntityOnContactAsync
- uid: SuperOffice.WebApi.Agents.BLOBAgent.GetContactImageWithSizeAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.BLOBAgent.GetContactImageWithSizeAsync
  isExternal: true
  name: GetContactImageWithSizeAsync
  nameWithType: BLOBAgent.GetContactImageWithSizeAsync
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.GetContactImageWithSizeAsync
- uid: SuperOffice.WebApi.Agents.BLOBAgent.GetOutputFromBatchAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.BLOBAgent.GetOutputFromBatchAsync
  isExternal: true
  name: GetOutputFromBatchAsync
  nameWithType: BLOBAgent.GetOutputFromBatchAsync
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.GetOutputFromBatchAsync
- uid: SuperOffice.WebApi.Agents.BLOBAgent.CleanupBatchTaskAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.BLOBAgent.CleanupBatchTaskAsync
  isExternal: true
  name: CleanupBatchTaskAsync
  nameWithType: BLOBAgent.CleanupBatchTaskAsync
  fullName: SuperOffice.WebApi.Agents.BLOBAgent.CleanupBatchTaskAsync
