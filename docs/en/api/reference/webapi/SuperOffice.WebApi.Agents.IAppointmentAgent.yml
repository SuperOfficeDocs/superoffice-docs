### YamlMime:ManagedReference
items:
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent
  commentId: T:SuperOffice.WebApi.Agents.IAppointmentAgent
  id: IAppointmentAgent
  parent: SuperOffice.WebApi.Agents
  children:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptRejectedAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptWithEmailConfirmationAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptWithSmtpEmailConfirmationAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.AssignToAsync(System.Int32,SuperOffice.WebApi.Data.ParticipantInfo,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.CalculateDaysAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.CanAssignToProjectMemberAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpBookingDeletedAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpBookingDeletedWithUpdateModeAsync(System.Int32[],SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpRecurringBookingDeletedAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.ConvertAppointmentToTaskAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAndAcceptAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAndAcceptWithEmailConfirmationAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAppointmentEntityFromExistingAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAppointmentForUIDAsync(SuperOffice.WebApi.Data.AppointmentEntity,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociateAsync(SuperOffice.WebApi.Data.TaskType,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAsync(SuperOffice.WebApi.Data.TaskType,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestionAsync(System.Int32,System.Int32,System.Boolean,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestionAsync(System.Int32,System.Int32,System.Boolean,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultRecurrenceAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultRecurrenceByDateAsync(System.DateTime,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultReOpenAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultSuggestedAppointmentEntityAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultTaskListItemAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.DeclineInvitationFromEmailItemAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.DeleteAppointmentEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.DeleteAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GenerateLeadAsync(System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetActivityInformationListByDatesAndAssociateAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetAlarmsAsync(System.Boolean,System.Boolean,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentEmailInvitationAsync(SuperOffice.WebApi.Data.AppointmentEntity,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentFromUIDAsync(System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentHaveParticipantsWithEmailAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentRecordsAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentsByTaskHeadingAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociateDiaryAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociatesDiaryAsync(System.Int32[],System.DateTime,System.DateTime,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociatesDiaryInfoAsync(System.Int32[],System.DateTime,System.DateTime,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetCanInsertForAssociatesAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTaskAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTaskHeadingAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTasksAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTypeAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetDayInformationListByDatesAndAssociateAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetDiaryByGroupAsync(System.Int32,System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyAppointmentsAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyDiaryAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyPublishedAppointmentsAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetMySyncAppointmentsAsync(System.DateTime,System.DateTime,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyTasksAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetNextAvailableTimeAsync(System.Int32[],System.DateTime,System.DateTime,System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetNextSuggestedAppointmentBySaleAsync(System.Int32,System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetOrganizerNameAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTaskAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTaskHeadingAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTasksAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTypeAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonDiaryAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonTasksAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTaskAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTaskHeadingAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTasksAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTypeAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTaskAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTaskHeadingAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTasksAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTypeAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetPublishedAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetPublishedAppointmentsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetPublishedProjectAppointmentsAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetRedLetterInformationListByDatesAndAssociateAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetSuggestedAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetSuggestedAppointmentEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetTaskListItemAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetTaskListItemsAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetUIDFromAppointmentIdAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.MoveAsync(System.Int32,System.DateTime,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.MoveWithEmailAsync(System.Int32,System.DateTime,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.RejectAsync(System.Int32,System.String,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.RejectWithEmailConfirmationAsync(System.Int32,System.String,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.RejectWithSmtpEmailConfirmationAsync(System.Int32,System.String,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.RequestForInfoAsync(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.SaveAppointmentEntityAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.SaveAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.SaveSuggestedAppointmentEntityAsync(SuperOffice.WebApi.Data.SuggestedAppointmentEntity,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.SaveTaskListItemAsync(SuperOffice.WebApi.Data.TaskListItem,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.SaveWithCustomInvitationAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.SetActivityStatusAsync(System.String[],SuperOffice.WebApi.Data.ActivityStatus,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.SetSeenAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.SetSeenManyAsync(System.Int32[],SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleActivitiesAsync(System.String[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleActivityAsync(System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleAndSetActivitiesAsync(System.String[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleAppointmentStatusAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentFromIcsResponseAsync(System.String,System.Byte[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentWithModeAndEmailAsync(System.Int32,System.DateTime,System.DateTime,SuperOffice.WebApi.Data.AppointmentStatus,SuperOffice.WebApi.Data.AppointmentType,System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentWithModeAsync(System.Int32,System.DateTime,System.DateTime,SuperOffice.WebApi.Data.AppointmentStatus,SuperOffice.WebApi.Data.AppointmentType,System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.ValidateAppointmentEntityAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.ValidateDaysAsync(SuperOffice.WebApi.Data.AppointmentEntity,System.DateTime[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IAppointmentAgent.WillSendEmailAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
  langs:
  - csharp
  - vb
  name: IAppointmentAgent
  nameWithType: IAppointmentAgent
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent
  type: Interface
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCollection of all services that works with Appointment data.\n"
  syntax:
    content: 'public interface IAppointmentAgent : IDisposable'
    content.vb: >-
      Public Interface IAppointmentAgent
          Inherits IDisposable
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultAppointmentEntityAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultAppointmentEntityAsync(RequestOptions)
  nameWithType: IAppointmentAgent.CreateDefaultAppointmentEntityAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet default values into a new AppointmentEntity.\nNetServer calculates default values on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: Task<AppointmentEntity> CreateDefaultAppointmentEntityAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentEntity}
      description: A blank AppointmentEntity
    content.vb: Function CreateDefaultAppointmentEntityAsync(requestOptions As RequestOptions = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveAppointmentEntityAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.SaveAppointmentEntityAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
  id: SaveAppointmentEntityAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: SaveAppointmentEntityAsync(AppointmentEntity, RequestOptions)
  nameWithType: IAppointmentAgent.SaveAppointmentEntityAsync(AppointmentEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveAppointmentEntityAsync(SuperOffice.WebApi.Data.AppointmentEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdates the existing AppointmentEntity or creates a new AppointmentEntity if the id parameter is 0. Save the appointment entity\n"
  syntax:
    content: Task<AppointmentEntity> SaveAppointmentEntityAsync(AppointmentEntity appointmentEntity, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentEntity
      type: SuperOffice.WebApi.Data.AppointmentEntity
      description: The AppointmentEntity that is saved.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentEntity}
      description: New or updated AppointmentEntity
    content.vb: Function SaveAppointmentEntityAsync(appointmentEntity As AppointmentEntity, requestOptions As RequestOptions = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveAppointmentEntityAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.DeleteAppointmentEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.DeleteAppointmentEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: DeleteAppointmentEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: DeleteAppointmentEntityAsync(Int32, RequestOptions)
  nameWithType: IAppointmentAgent.DeleteAppointmentEntityAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.DeleteAppointmentEntityAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nDeletes the AppointmentEntity\n"
  syntax:
    content: Task DeleteAppointmentEntityAsync(int appointmentEntityId, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentEntityId
      type: System.Int32
      description: The identity of the AppointmentEntity
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function DeleteAppointmentEntityAsync(appointmentEntityId As Integer, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.DeleteAppointmentEntityAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultSuggestedAppointmentEntityAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultSuggestedAppointmentEntityAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultSuggestedAppointmentEntityAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultSuggestedAppointmentEntityAsync(RequestOptions)
  nameWithType: IAppointmentAgent.CreateDefaultSuggestedAppointmentEntityAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultSuggestedAppointmentEntityAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet default values into a new SuggestedAppointmentEntity.\nNetServer calculates default values on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: Task<SuggestedAppointmentEntity> CreateDefaultSuggestedAppointmentEntityAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SuggestedAppointmentEntity}
      description: A blank SuggestedAppointmentEntity
    content.vb: Function CreateDefaultSuggestedAppointmentEntityAsync(requestOptions As RequestOptions = Nothing) As Task(Of SuggestedAppointmentEntity)
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultSuggestedAppointmentEntityAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveSuggestedAppointmentEntityAsync(SuperOffice.WebApi.Data.SuggestedAppointmentEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.SaveSuggestedAppointmentEntityAsync(SuperOffice.WebApi.Data.SuggestedAppointmentEntity,SuperOffice.WebApi.RequestOptions)
  id: SaveSuggestedAppointmentEntityAsync(SuperOffice.WebApi.Data.SuggestedAppointmentEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: SaveSuggestedAppointmentEntityAsync(SuggestedAppointmentEntity, RequestOptions)
  nameWithType: IAppointmentAgent.SaveSuggestedAppointmentEntityAsync(SuggestedAppointmentEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveSuggestedAppointmentEntityAsync(SuperOffice.WebApi.Data.SuggestedAppointmentEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdates the existing SuggestedAppointmentEntity or creates a new SuggestedAppointmentEntity if the id parameter is 0. \n"
  syntax:
    content: Task<SuggestedAppointmentEntity> SaveSuggestedAppointmentEntityAsync(SuggestedAppointmentEntity suggestedAppointmentEntity, RequestOptions requestOptions = null)
    parameters:
    - id: suggestedAppointmentEntity
      type: SuperOffice.WebApi.Data.SuggestedAppointmentEntity
      description: The SuggestedAppointmentEntity that is saved.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SuggestedAppointmentEntity}
      description: New or updated SuggestedAppointmentEntity
    content.vb: Function SaveSuggestedAppointmentEntityAsync(suggestedAppointmentEntity As SuggestedAppointmentEntity, requestOptions As RequestOptions = Nothing) As Task(Of SuggestedAppointmentEntity)
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveSuggestedAppointmentEntityAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultTaskListItemAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultTaskListItemAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultTaskListItemAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultTaskListItemAsync(RequestOptions)
  nameWithType: IAppointmentAgent.CreateDefaultTaskListItemAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultTaskListItemAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet default values into a new TaskListItem.\nNetServer calculates default values on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: Task<TaskListItem> CreateDefaultTaskListItemAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TaskListItem}
      description: A blank TaskListItem
    content.vb: Function CreateDefaultTaskListItemAsync(requestOptions As RequestOptions = Nothing) As Task(Of TaskListItem)
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultTaskListItemAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveTaskListItemAsync(SuperOffice.WebApi.Data.TaskListItem,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.SaveTaskListItemAsync(SuperOffice.WebApi.Data.TaskListItem,SuperOffice.WebApi.RequestOptions)
  id: SaveTaskListItemAsync(SuperOffice.WebApi.Data.TaskListItem,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: SaveTaskListItemAsync(TaskListItem, RequestOptions)
  nameWithType: IAppointmentAgent.SaveTaskListItemAsync(TaskListItem, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveTaskListItemAsync(SuperOffice.WebApi.Data.TaskListItem, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdates the existing TaskListItem or creates a new TaskListItem if the id parameter is 0. \n"
  syntax:
    content: Task<TaskListItem> SaveTaskListItemAsync(TaskListItem taskListItem, RequestOptions requestOptions = null)
    parameters:
    - id: taskListItem
      type: SuperOffice.WebApi.Data.TaskListItem
      description: The TaskListItem that is saved.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TaskListItem}
      description: New or updated TaskListItem
    content.vb: Function SaveTaskListItemAsync(taskListItem As TaskListItem, requestOptions As RequestOptions = Nothing) As Task(Of TaskListItem)
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveTaskListItemAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetAppointmentAsync(Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetAppointmentAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific Appointment object.                        \n"
  syntax:
    content: Task<Appointment> GetAppointmentAsync(int appointmentId, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The identifier of the Appointment object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment}
      description: Appointment
    content.vb: Function GetAppointmentAsync(appointmentId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Appointment)
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleAppointmentStatusAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleAppointmentStatusAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: ToggleAppointmentStatusAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: ToggleAppointmentStatusAsync(Int32, RequestOptions)
  nameWithType: IAppointmentAgent.ToggleAppointmentStatusAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleAppointmentStatusAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSets an appointment&apos;s status to Completed if the appointment had a different status, or sets the status to started if already set to completed.\n"
  syntax:
    content: Task<AppointmentStatus> ToggleAppointmentStatusAsync(int appointmentId, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointment id.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentStatus}
      description: The new AppointmentStatus
    content.vb: Function ToggleAppointmentStatusAsync(appointmentId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of AppointmentStatus)
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleAppointmentStatusAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleActivityAsync(System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleActivityAsync(System.String,SuperOffice.WebApi.RequestOptions)
  id: ToggleActivityAsync(System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: ToggleActivityAsync(String, RequestOptions)
  nameWithType: IAppointmentAgent.ToggleActivityAsync(String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleActivityAsync(System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nToggle the completed status for an activity. Activity may be sale, document or appointment. The changes are saved immediately. \n"
  syntax:
    content: Task<ActivityStatus> ToggleActivityAsync(string activityIdentifier, RequestOptions requestOptions = null)
    parameters:
    - id: activityIdentifier
      type: System.String
      description: May contain of a mix of appointment_id, sale_id, document_id and todo_id
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ActivityStatus}
      description: What the result after toggling was.
    content.vb: Function ToggleActivityAsync(activityIdentifier As String, requestOptions As RequestOptions = Nothing) As Task(Of ActivityStatus)
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleActivityAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleActivitiesAsync(System.String[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleActivitiesAsync(System.String[],SuperOffice.WebApi.RequestOptions)
  id: ToggleActivitiesAsync(System.String[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: ToggleActivitiesAsync(String[], RequestOptions)
  nameWithType: IAppointmentAgent.ToggleActivitiesAsync(String[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleActivitiesAsync(System.String[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nToggle the completed status for an array of activities. \n"
  syntax:
    content: Task<ActivityStatus> ToggleActivitiesAsync(string[] activityIdentifier, RequestOptions requestOptions = null)
    parameters:
    - id: activityIdentifier
      type: System.String[]
      description: Contain of a mix of appointment_id, sale_id, document_id and todo_id.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ActivityStatus}
      description: The resulting ActivityStatus of the first in the array
    content.vb: Function ToggleActivitiesAsync(activityIdentifier As String(), requestOptions As RequestOptions = Nothing) As Task(Of ActivityStatus)
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleActivitiesAsync*
  nameWithType.vb: IAppointmentAgent.ToggleActivitiesAsync(String(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleActivitiesAsync(System.String(), SuperOffice.WebApi.RequestOptions)
  name.vb: ToggleActivitiesAsync(String(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.SetActivityStatusAsync(System.String[],SuperOffice.WebApi.Data.ActivityStatus,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.SetActivityStatusAsync(System.String[],SuperOffice.WebApi.Data.ActivityStatus,SuperOffice.WebApi.RequestOptions)
  id: SetActivityStatusAsync(System.String[],SuperOffice.WebApi.Data.ActivityStatus,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: SetActivityStatusAsync(String[], ActivityStatus, RequestOptions)
  nameWithType: IAppointmentAgent.SetActivityStatusAsync(String[], ActivityStatus, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.SetActivityStatusAsync(System.String[], SuperOffice.WebApi.Data.ActivityStatus, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSets the completed status for an array of activities. The string activityIdentifier param may contain of a mix of appointment_id, sale_id, document_id and todo_id. The changes are saved immediately. If an invalid id is passed in (nonexistent record), no changes will be made. If there is no write access to the record being changed, a Sentry exception will be thrown in the usual manner.\n"
  syntax:
    content: Task SetActivityStatusAsync(string[] activityIdentifier, ActivityStatus activityStatus, RequestOptions requestOptions = null)
    parameters:
    - id: activityIdentifier
      type: System.String[]
      description: Array of activity ids. ex. appointment_id=666
    - id: activityStatus
      type: SuperOffice.WebApi.Data.ActivityStatus
      description: The status to set the activities
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function SetActivityStatusAsync(activityIdentifier As String(), activityStatus As ActivityStatus, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.SetActivityStatusAsync*
  nameWithType.vb: IAppointmentAgent.SetActivityStatusAsync(String(), ActivityStatus, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IAppointmentAgent.SetActivityStatusAsync(System.String(), SuperOffice.WebApi.Data.ActivityStatus, SuperOffice.WebApi.RequestOptions)
  name.vb: SetActivityStatusAsync(String(), ActivityStatus, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleAndSetActivitiesAsync(System.String[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleAndSetActivitiesAsync(System.String[],SuperOffice.WebApi.RequestOptions)
  id: ToggleAndSetActivitiesAsync(System.String[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: ToggleAndSetActivitiesAsync(String[], RequestOptions)
  nameWithType: IAppointmentAgent.ToggleAndSetActivitiesAsync(String[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleAndSetActivitiesAsync(System.String[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nToggles the first activity and sets the rest of the activities to the result of the first toggle. However, there are some special rules for appointments that trigger a suggested appointment when they are completed. If more than one appointment in the set of identifiers triggers a suggestion, we will not toggle those appointments. This rule is only active when changing the status of an appointment to complete. There must be more than one appointment that triggers such an event for this rule to take effect.\n"
  syntax:
    content: Task<string[]> ToggleAndSetActivitiesAsync(string[] activityIdentifiers, RequestOptions requestOptions = null)
    parameters:
    - id: activityIdentifiers
      type: System.String[]
      description: Array of activity ids. ex. appointment_id=666
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.String[]}
      description: The identifiers that were not toggled.
    content.vb: Function ToggleAndSetActivitiesAsync(activityIdentifiers As String(), requestOptions As RequestOptions = Nothing) As Task(Of String())
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleAndSetActivitiesAsync*
  nameWithType.vb: IAppointmentAgent.ToggleAndSetActivitiesAsync(String(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleAndSetActivitiesAsync(System.String(), SuperOffice.WebApi.RequestOptions)
  name.vb: ToggleAndSetActivitiesAsync(String(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetAppointmentEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetAppointmentEntityAsync(Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetAppointmentEntityAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentEntityAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific AppointmentEntity object.                        \n"
  syntax:
    content: Task<AppointmentEntity> GetAppointmentEntityAsync(int appointmentEntityId, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentEntityId
      type: System.Int32
      description: The identifier of the AppointmentEntity object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentEntity}
      description: AppointmentEntity
    content.vb: Function GetAppointmentEntityAsync(appointmentEntityId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentEntityAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAsync(SuperOffice.WebApi.Data.TaskType,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAsync(SuperOffice.WebApi.Data.TaskType,SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultAppointmentEntityByTypeAsync(SuperOffice.WebApi.Data.TaskType,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultAppointmentEntityByTypeAsync(TaskType, RequestOptions)
  nameWithType: IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAsync(TaskType, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAsync(SuperOffice.WebApi.Data.TaskType, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCreates an AppointmentEntity populated with the default values for the specific type.\n"
  syntax:
    content: Task<AppointmentEntity> CreateDefaultAppointmentEntityByTypeAsync(TaskType type, RequestOptions requestOptions = null)
    parameters:
    - id: type
      type: SuperOffice.WebApi.Data.TaskType
      description: The type of task requested.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentEntity}
      description: AppointmentEntity with default values.
    content.vb: Function CreateDefaultAppointmentEntityByTypeAsync(type As TaskType, requestOptions As RequestOptions = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAppointmentEntityFromExistingAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAppointmentEntityFromExistingAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: CreateAppointmentEntityFromExistingAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateAppointmentEntityFromExistingAsync(Int32, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.CreateAppointmentEntityFromExistingAsync(Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAppointmentEntityFromExistingAsync(System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCreates an AppointmentEntity populated with values from an existing appointment. The new appointment will get the same task type and participant list as the source appointment. The date of the new appointment will be set to today, but the time component is kept.\n"
  syntax:
    content: Task<AppointmentEntity> CreateAppointmentEntityFromExistingAsync(int appointmentId, int associateId, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: Source appointment ID
    - id: associateId
      type: System.Int32
      description: Associate owning the new appointment. If 0 the current associate is used.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentEntity}
      description: AppointmentEntity with values copied from an existing appointment. Values that are not copied will be the default values.
    content.vb: Function CreateAppointmentEntityFromExistingAsync(appointmentId As Integer, associateId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAppointmentEntityFromExistingAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  id: AcceptAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: AcceptAsync(Int32, RecurrenceUpdateMode, RequestOptions)
  nameWithType: IAppointmentAgent.AcceptAsync(Int32, RecurrenceUpdateMode, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptAsync(System.Int32, SuperOffice.WebApi.Data.RecurrenceUpdateMode, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nAccepting an appointment invitation.\n"
  syntax:
    content: Task AcceptAsync(int appointmentId, RecurrenceUpdateMode updateMode, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointmentId. Both master and child record ids are accepted.
    - id: updateMode
      type: SuperOffice.WebApi.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
      description: Updated AppointmentEntity
    content.vb: Function AcceptAsync(appointmentId As Integer, updateMode As RecurrenceUpdateMode, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAndAcceptAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAndAcceptAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  id: CreateAndAcceptAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateAndAcceptAsync(Int32, RecurrenceUpdateMode, RequestOptions)
  nameWithType: IAppointmentAgent.CreateAndAcceptAsync(Int32, RecurrenceUpdateMode, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAndAcceptAsync(System.Int32, SuperOffice.WebApi.Data.RecurrenceUpdateMode, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCreating an appointment from an emailItem invitation and accepting it.\n"
  syntax:
    content: Task CreateAndAcceptAsync(int emailItemId, RecurrenceUpdateMode updateMode, RequestOptions requestOptions = null)
    parameters:
    - id: emailItemId
      type: System.Int32
      description: The emailItemId
    - id: updateMode
      type: SuperOffice.WebApi.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function CreateAndAcceptAsync(emailItemId As Integer, updateMode As RecurrenceUpdateMode, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAndAcceptAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptWithEmailConfirmationAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptWithEmailConfirmationAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  id: AcceptWithEmailConfirmationAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: AcceptWithEmailConfirmationAsync(Int32, RecurrenceUpdateMode, RequestOptions)
  nameWithType: IAppointmentAgent.AcceptWithEmailConfirmationAsync(Int32, RecurrenceUpdateMode, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptWithEmailConfirmationAsync(System.Int32, SuperOffice.WebApi.Data.RecurrenceUpdateMode, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nAccepting an appointment invitation and send an email confirmation to the meeting organizer.\n"
  syntax:
    content: Task AcceptWithEmailConfirmationAsync(int appointmentId, RecurrenceUpdateMode updateMode, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointmentId. Both master and child record ids are accepted.
    - id: updateMode
      type: SuperOffice.WebApi.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
      description: Updated AppointmentEntity
    content.vb: Function AcceptWithEmailConfirmationAsync(appointmentId As Integer, updateMode As RecurrenceUpdateMode, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptWithEmailConfirmationAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAndAcceptWithEmailConfirmationAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAndAcceptWithEmailConfirmationAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  id: CreateAndAcceptWithEmailConfirmationAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateAndAcceptWithEmailConfirmationAsync(Int32, RecurrenceUpdateMode, RequestOptions)
  nameWithType: IAppointmentAgent.CreateAndAcceptWithEmailConfirmationAsync(Int32, RecurrenceUpdateMode, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAndAcceptWithEmailConfirmationAsync(System.Int32, SuperOffice.WebApi.Data.RecurrenceUpdateMode, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCreating an appointment from an emailItem invitation and accepting it with email confirmation to the meeting organizer.\n"
  syntax:
    content: Task CreateAndAcceptWithEmailConfirmationAsync(int emailItemId, RecurrenceUpdateMode updateMode, RequestOptions requestOptions = null)
    parameters:
    - id: emailItemId
      type: System.Int32
      description: The emailItemId
    - id: updateMode
      type: SuperOffice.WebApi.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function CreateAndAcceptWithEmailConfirmationAsync(emailItemId As Integer, updateMode As RecurrenceUpdateMode, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAndAcceptWithEmailConfirmationAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.RejectAsync(System.Int32,System.String,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.RejectAsync(System.Int32,System.String,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  id: RejectAsync(System.Int32,System.String,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: RejectAsync(Int32, String, RecurrenceUpdateMode, RequestOptions)
  nameWithType: IAppointmentAgent.RejectAsync(Int32, String, RecurrenceUpdateMode, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.RejectAsync(System.Int32, System.String, SuperOffice.WebApi.Data.RecurrenceUpdateMode, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nRejecting an appointment invitation\n"
  syntax:
    content: Task RejectAsync(int appointmentId, string rejectReason, RecurrenceUpdateMode updateMode, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointmentId. Both master and child record ids are accepted.
    - id: rejectReason
      type: System.String
      description: The reason the invitation was rejected.
    - id: updateMode
      type: SuperOffice.WebApi.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
      description: Updated AppointmentEntity
    content.vb: Function RejectAsync(appointmentId As Integer, rejectReason As String, updateMode As RecurrenceUpdateMode, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.RejectAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.RejectWithEmailConfirmationAsync(System.Int32,System.String,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.RejectWithEmailConfirmationAsync(System.Int32,System.String,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  id: RejectWithEmailConfirmationAsync(System.Int32,System.String,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: RejectWithEmailConfirmationAsync(Int32, String, RecurrenceUpdateMode, RequestOptions)
  nameWithType: IAppointmentAgent.RejectWithEmailConfirmationAsync(Int32, String, RecurrenceUpdateMode, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.RejectWithEmailConfirmationAsync(System.Int32, System.String, SuperOffice.WebApi.Data.RecurrenceUpdateMode, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nRejecting an appointment invitation and send an email confirmation to the meeting organizer.\n"
  syntax:
    content: Task RejectWithEmailConfirmationAsync(int appointmentId, string rejectReason, RecurrenceUpdateMode updateMode, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointmentId. Both master and child record ids are accepted.
    - id: rejectReason
      type: System.String
      description: The reason the invitation was rejected.
    - id: updateMode
      type: SuperOffice.WebApi.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
      description: Updated AppointmentEntity
    content.vb: Function RejectWithEmailConfirmationAsync(appointmentId As Integer, rejectReason As String, updateMode As RecurrenceUpdateMode, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.RejectWithEmailConfirmationAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.DeclineInvitationFromEmailItemAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.DeclineInvitationFromEmailItemAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: DeclineInvitationFromEmailItemAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: DeclineInvitationFromEmailItemAsync(Int32, String, RequestOptions)
  nameWithType: IAppointmentAgent.DeclineInvitationFromEmailItemAsync(Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.DeclineInvitationFromEmailItemAsync(System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nDeclining an appointment invitation where no tentative appointments have been created.\n"
  syntax:
    content: Task DeclineInvitationFromEmailItemAsync(int emailItemId, string rejectReason, RequestOptions requestOptions = null)
    parameters:
    - id: emailItemId
      type: System.Int32
      description: The emailItemId.
    - id: rejectReason
      type: System.String
      description: The reason the invitation was rejected.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function DeclineInvitationFromEmailItemAsync(emailItemId As Integer, rejectReason As String, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.DeclineInvitationFromEmailItemAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetOrganizerNameAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetOrganizerNameAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetOrganizerNameAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetOrganizerNameAsync(Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetOrganizerNameAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetOrganizerNameAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nLookup the name / email of an event-organizer\n"
  syntax:
    content: Task<string> GetOrganizerNameAsync(int motherAppointmentId, RequestOptions requestOptions = null)
    parameters:
    - id: motherAppointmentId
      type: System.Int32
      description: The id of the mother-appointment.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: 'The displayed name of the organizer: name or email'
    content.vb: Function GetOrganizerNameAsync(motherAppointmentId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of String)
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetOrganizerNameAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.SaveAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  id: SaveAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: SaveAsync(AppointmentEntity, RecurrenceUpdateMode, Boolean, EMailConnectionInfo, EMailConnectionInfo, RequestOptions)
  nameWithType: IAppointmentAgent.SaveAsync(AppointmentEntity, RecurrenceUpdateMode, Boolean, EMailConnectionInfo, EMailConnectionInfo, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveAsync(SuperOffice.WebApi.Data.AppointmentEntity, SuperOffice.WebApi.Data.RecurrenceUpdateMode, System.Boolean, SuperOffice.WebApi.Data.EMailConnectionInfo, SuperOffice.WebApi.Data.EMailConnectionInfo, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSaving a booking.\n"
  syntax:
    content: Task<AppointmentEntity> SaveAsync(AppointmentEntity appointmentEntity, RecurrenceUpdateMode updateMode, bool sendEmailToParticipants, EMailConnectionInfo smtpEMailConnectionInfo, EMailConnectionInfo imapEMailConnectionInfo, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentEntity
      type: SuperOffice.WebApi.Data.AppointmentEntity
    - id: updateMode
      type: SuperOffice.WebApi.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: sendEmailToParticipants
      type: System.Boolean
      description: If true, emails will be sent to all participants that is marked with send email flag. If false no mails will be sent even if the send email flag is true.
    - id: smtpEMailConnectionInfo
      type: SuperOffice.WebApi.Data.EMailConnectionInfo
      description: Login information for outgoing smtp email server. Will be null if no login information is relevant.
    - id: imapEMailConnectionInfo
      type: SuperOffice.WebApi.Data.EMailConnectionInfo
      description: Login information for imap server. Will be null if no login information is relevant.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentEntity}
      description: Updated AppointmentEntity
    content.vb: Function SaveAsync(appointmentEntity As AppointmentEntity, updateMode As RecurrenceUpdateMode, sendEmailToParticipants As Boolean, smtpEMailConnectionInfo As EMailConnectionInfo, imapEMailConnectionInfo As EMailConnectionInfo, requestOptions As RequestOptions = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.DeleteAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.DeleteAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  id: DeleteAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: DeleteAsync(Int32, RecurrenceUpdateMode, Boolean, EMailConnectionInfo, EMailConnectionInfo, RequestOptions)
  nameWithType: IAppointmentAgent.DeleteAsync(Int32, RecurrenceUpdateMode, Boolean, EMailConnectionInfo, EMailConnectionInfo, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.DeleteAsync(System.Int32, SuperOffice.WebApi.Data.RecurrenceUpdateMode, System.Boolean, SuperOffice.WebApi.Data.EMailConnectionInfo, SuperOffice.WebApi.Data.EMailConnectionInfo, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nDeleting a booking\n"
  syntax:
    content: Task DeleteAsync(int appointmentId, RecurrenceUpdateMode updateMode, bool sendEmailToParticipants, EMailConnectionInfo smtpEMailConnectionInfo, EMailConnectionInfo imapEMailConnectionInfo, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointmentId. Both master and child record ids are accepted.
    - id: updateMode
      type: SuperOffice.WebApi.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: sendEmailToParticipants
      type: System.Boolean
      description: If true, emails will be sent to all participants that is marked with send email flag. If false no mails will be sent even if the send email flag is true.
    - id: smtpEMailConnectionInfo
      type: SuperOffice.WebApi.Data.EMailConnectionInfo
      description: Login information for outgoing smtp email server. Will be null if no login information is relevant.
    - id: imapEMailConnectionInfo
      type: SuperOffice.WebApi.Data.EMailConnectionInfo
      description: Login information for imap server. Will be null if no login information is relevant.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function DeleteAsync(appointmentId As Integer, updateMode As RecurrenceUpdateMode, sendEmailToParticipants As Boolean, smtpEMailConnectionInfo As EMailConnectionInfo, imapEMailConnectionInfo As EMailConnectionInfo, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.DeleteAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CalculateDaysAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.CalculateDaysAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
  id: CalculateDaysAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CalculateDaysAsync(AppointmentEntity, RequestOptions)
  nameWithType: IAppointmentAgent.CalculateDaysAsync(AppointmentEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CalculateDaysAsync(SuperOffice.WebApi.Data.AppointmentEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCalculates the set of dates that represents a recurrence pattern. Adds conflict information to each date.\n"
  syntax:
    content: Task<RecurrenceInfo> CalculateDaysAsync(AppointmentEntity appointmentEntity, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentEntity
      type: SuperOffice.WebApi.Data.AppointmentEntity
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.RecurrenceInfo}
    content.vb: Function CalculateDaysAsync(appointmentEntity As AppointmentEntity, requestOptions As RequestOptions = Nothing) As Task(Of RecurrenceInfo)
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.CalculateDaysAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.ValidateDaysAsync(SuperOffice.WebApi.Data.AppointmentEntity,System.DateTime[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.ValidateDaysAsync(SuperOffice.WebApi.Data.AppointmentEntity,System.DateTime[],SuperOffice.WebApi.RequestOptions)
  id: ValidateDaysAsync(SuperOffice.WebApi.Data.AppointmentEntity,System.DateTime[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: ValidateDaysAsync(AppointmentEntity, DateTime[], RequestOptions)
  nameWithType: IAppointmentAgent.ValidateDaysAsync(AppointmentEntity, DateTime[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.ValidateDaysAsync(SuperOffice.WebApi.Data.AppointmentEntity, System.DateTime[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nValidates the set of dates to calculate any conflicts.\n"
  syntax:
    content: Task<RecurrenceDate[]> ValidateDaysAsync(AppointmentEntity appointmentEntity, DateTime[] dates, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentEntity
      type: SuperOffice.WebApi.Data.AppointmentEntity
    - id: dates
      type: System.DateTime[]
      description: The dates to validate.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.RecurrenceDate[]}
      description: Array of RecurrenceDate object for each validated date.
    content.vb: Function ValidateDaysAsync(appointmentEntity As AppointmentEntity, dates As DateTime(), requestOptions As RequestOptions = Nothing) As Task(Of RecurrenceDate())
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.ValidateDaysAsync*
  nameWithType.vb: IAppointmentAgent.ValidateDaysAsync(AppointmentEntity, DateTime(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IAppointmentAgent.ValidateDaysAsync(SuperOffice.WebApi.Data.AppointmentEntity, System.DateTime(), SuperOffice.WebApi.RequestOptions)
  name.vb: ValidateDaysAsync(AppointmentEntity, DateTime(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultRecurrenceAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultRecurrenceAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultRecurrenceAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultRecurrenceAsync(RequestOptions)
  nameWithType: IAppointmentAgent.CreateDefaultRecurrenceAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultRecurrenceAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCreates a RecurrenceInfo object populated with the default values for the specific type.\n"
  syntax:
    content: Task<RecurrenceInfo> CreateDefaultRecurrenceAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.RecurrenceInfo}
      description: RecurrenceInfo object with default values.
    content.vb: Function CreateDefaultRecurrenceAsync(requestOptions As RequestOptions = Nothing) As Task(Of RecurrenceInfo)
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultRecurrenceAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.AssignToAsync(System.Int32,SuperOffice.WebApi.Data.ParticipantInfo,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.AssignToAsync(System.Int32,SuperOffice.WebApi.Data.ParticipantInfo,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  id: AssignToAsync(System.Int32,SuperOffice.WebApi.Data.ParticipantInfo,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: AssignToAsync(Int32, ParticipantInfo, RecurrenceUpdateMode, RequestOptions)
  nameWithType: IAppointmentAgent.AssignToAsync(Int32, ParticipantInfo, RecurrenceUpdateMode, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.AssignToAsync(System.Int32, SuperOffice.WebApi.Data.ParticipantInfo, SuperOffice.WebApi.Data.RecurrenceUpdateMode, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nAssigning an appointment to another person.\n"
  syntax:
    content: Task<AppointmentEntity> AssignToAsync(int appointmentId, ParticipantInfo participant, RecurrenceUpdateMode updateMode, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointmentId. Both master and child record ids are accepted.
    - id: participant
      type: SuperOffice.WebApi.Data.ParticipantInfo
    - id: updateMode
      type: SuperOffice.WebApi.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentEntity}
      description: Updated AppointmentEntity
    content.vb: Function AssignToAsync(appointmentId As Integer, participant As ParticipantInfo, updateMode As RecurrenceUpdateMode, requestOptions As RequestOptions = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.AssignToAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.SetSeenAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.SetSeenAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  id: SetSeenAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: SetSeenAsync(Int32, RecurrenceUpdateMode, RequestOptions)
  nameWithType: IAppointmentAgent.SetSeenAsync(Int32, RecurrenceUpdateMode, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.SetSeenAsync(System.Int32, SuperOffice.WebApi.Data.RecurrenceUpdateMode, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSets an appointment invitiation to seen.\n"
  syntax:
    content: Task SetSeenAsync(int appointmentId, RecurrenceUpdateMode updateMode, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointmentId. Both master and child record ids are accepted.
    - id: updateMode
      type: SuperOffice.WebApi.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function SetSeenAsync(appointmentId As Integer, updateMode As RecurrenceUpdateMode, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.SetSeenAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.SetSeenManyAsync(System.Int32[],SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.SetSeenManyAsync(System.Int32[],SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  id: SetSeenManyAsync(System.Int32[],SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: SetSeenManyAsync(Int32[], RecurrenceUpdateMode, RequestOptions)
  nameWithType: IAppointmentAgent.SetSeenManyAsync(Int32[], RecurrenceUpdateMode, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.SetSeenManyAsync(System.Int32[], SuperOffice.WebApi.Data.RecurrenceUpdateMode, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSets a list of appointment invitations to seen. The same update mode will be used for all appointments in this batch.\n"
  syntax:
    content: Task SetSeenManyAsync(int[] appointmentIds, RecurrenceUpdateMode updateMode, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentIds
      type: System.Int32[]
      description: List of appointment IDs
    - id: updateMode
      type: SuperOffice.WebApi.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function SetSeenManyAsync(appointmentIds As Integer(), updateMode As RecurrenceUpdateMode, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.SetSeenManyAsync*
  nameWithType.vb: IAppointmentAgent.SetSeenManyAsync(Int32(), RecurrenceUpdateMode, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IAppointmentAgent.SetSeenManyAsync(System.Int32(), SuperOffice.WebApi.Data.RecurrenceUpdateMode, SuperOffice.WebApi.RequestOptions)
  name.vb: SetSeenManyAsync(Int32(), RecurrenceUpdateMode, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.MoveAsync(System.Int32,System.DateTime,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.MoveAsync(System.Int32,System.DateTime,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  id: MoveAsync(System.Int32,System.DateTime,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: MoveAsync(Int32, DateTime, RecurrenceUpdateMode, RequestOptions)
  nameWithType: IAppointmentAgent.MoveAsync(Int32, DateTime, RecurrenceUpdateMode, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.MoveAsync(System.Int32, System.DateTime, SuperOffice.WebApi.Data.RecurrenceUpdateMode, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMoving a booking to another start time.\n"
  syntax:
    content: Task<AppointmentEntity> MoveAsync(int appointmentId, DateTime newStartTime, RecurrenceUpdateMode updateMode, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointmentId. Both master and child record ids are accepted.
    - id: newStartTime
      type: System.DateTime
      description: The new start time for the moved booking.
    - id: updateMode
      type: SuperOffice.WebApi.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentEntity}
      description: Updated AppointmentEntity
    content.vb: Function MoveAsync(appointmentId As Integer, newStartTime As DateTime, updateMode As RecurrenceUpdateMode, requestOptions As RequestOptions = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.MoveAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.MoveWithEmailAsync(System.Int32,System.DateTime,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.MoveWithEmailAsync(System.Int32,System.DateTime,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  id: MoveWithEmailAsync(System.Int32,System.DateTime,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: MoveWithEmailAsync(Int32, DateTime, RecurrenceUpdateMode, Boolean, EMailConnectionInfo, EMailConnectionInfo, RequestOptions)
  nameWithType: IAppointmentAgent.MoveWithEmailAsync(Int32, DateTime, RecurrenceUpdateMode, Boolean, EMailConnectionInfo, EMailConnectionInfo, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.MoveWithEmailAsync(System.Int32, System.DateTime, SuperOffice.WebApi.Data.RecurrenceUpdateMode, System.Boolean, SuperOffice.WebApi.Data.EMailConnectionInfo, SuperOffice.WebApi.Data.EMailConnectionInfo, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMoving a booking to another start time.\n"
  syntax:
    content: Task<AppointmentEntity> MoveWithEmailAsync(int appointmentId, DateTime newStartTime, RecurrenceUpdateMode updateMode, bool sendEmailToParticipants, EMailConnectionInfo smtpEMailConnectionInfo, EMailConnectionInfo imapEMailConnectionInfo, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointmentId. Both master and child record ids are accepted.
    - id: newStartTime
      type: System.DateTime
      description: The new start time for the moved booking.
    - id: updateMode
      type: SuperOffice.WebApi.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: sendEmailToParticipants
      type: System.Boolean
      description: If true, emails will be sent to all participants that is marked with send email flag if deemed necessary. If false no mails will be sent even if the send email flag is true.
    - id: smtpEMailConnectionInfo
      type: SuperOffice.WebApi.Data.EMailConnectionInfo
      description: Login information for outgoing smtp email server. Will be null if no login information is relevant.
    - id: imapEMailConnectionInfo
      type: SuperOffice.WebApi.Data.EMailConnectionInfo
      description: Login information for imap server. Will be null if no login information is relevant.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentEntity}
      description: Updated AppointmentEntity
    content.vb: Function MoveWithEmailAsync(appointmentId As Integer, newStartTime As DateTime, updateMode As RecurrenceUpdateMode, sendEmailToParticipants As Boolean, smtpEMailConnectionInfo As EMailConnectionInfo, imapEMailConnectionInfo As EMailConnectionInfo, requestOptions As RequestOptions = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.MoveWithEmailAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptRejectedAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptRejectedAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  id: AcceptRejectedAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: AcceptRejectedAsync(Int32, RecurrenceUpdateMode, RequestOptions)
  nameWithType: IAppointmentAgent.AcceptRejectedAsync(Int32, RecurrenceUpdateMode, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptRejectedAsync(System.Int32, SuperOffice.WebApi.Data.RecurrenceUpdateMode, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nAccept that an invited participant has rejected your invitation or assignment.\n"
  syntax:
    content: Task<AppointmentEntity> AcceptRejectedAsync(int appointmentId, RecurrenceUpdateMode updateMode, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointmentId. Both master and child record ids are accepted.
    - id: updateMode
      type: SuperOffice.WebApi.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentEntity}
      description: Updated AppointmentEntity
    content.vb: Function AcceptRejectedAsync(appointmentId As Integer, updateMode As RecurrenceUpdateMode, requestOptions As RequestOptions = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptRejectedAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultRecurrenceByDateAsync(System.DateTime,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultRecurrenceByDateAsync(System.DateTime,SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultRecurrenceByDateAsync(System.DateTime,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultRecurrenceByDateAsync(DateTime, RequestOptions)
  nameWithType: IAppointmentAgent.CreateDefaultRecurrenceByDateAsync(DateTime, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultRecurrenceByDateAsync(System.DateTime, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCreates a RecurrenceInfo object populated with the default values for the specific type. Using startDate as start date for the recurreing pattern.\n"
  syntax:
    content: Task<RecurrenceInfo> CreateDefaultRecurrenceByDateAsync(DateTime startDate, RequestOptions requestOptions = null)
    parameters:
    - id: startDate
      type: System.DateTime
      description: Date of which the recurring pattern should start.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.RecurrenceInfo}
    content.vb: Function CreateDefaultRecurrenceByDateAsync(startDate As DateTime, requestOptions As RequestOptions = Nothing) As Task(Of RecurrenceInfo)
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultRecurrenceByDateAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpBookingDeletedAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpBookingDeletedAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: CleanUpBookingDeletedAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CleanUpBookingDeletedAsync(Int32[], RequestOptions)
  nameWithType: IAppointmentAgent.CleanUpBookingDeletedAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpBookingDeletedAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nDeletes all appointments(within the appointmentIds array) with status BookingDeleted.\n"
  syntax:
    content: Task<int> CleanUpBookingDeletedAsync(int[] appointmentIds, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentIds
      type: System.Int32[]
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: Number of modified or deleted appointments
    content.vb: Function CleanUpBookingDeletedAsync(appointmentIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of Integer)
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpBookingDeletedAsync*
  nameWithType.vb: IAppointmentAgent.CleanUpBookingDeletedAsync(Int32(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpBookingDeletedAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: CleanUpBookingDeletedAsync(Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpBookingDeletedWithUpdateModeAsync(System.Int32[],SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpBookingDeletedWithUpdateModeAsync(System.Int32[],SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  id: CleanUpBookingDeletedWithUpdateModeAsync(System.Int32[],SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CleanUpBookingDeletedWithUpdateModeAsync(Int32[], RecurrenceUpdateMode, RequestOptions)
  nameWithType: IAppointmentAgent.CleanUpBookingDeletedWithUpdateModeAsync(Int32[], RecurrenceUpdateMode, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpBookingDeletedWithUpdateModeAsync(System.Int32[], SuperOffice.WebApi.Data.RecurrenceUpdateMode, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nDeletes all appointments(within the appointmentIds array) with status BookingDeleted. All appointments in the list will be deleted using the same recurrence update mode.\n"
  syntax:
    content: Task CleanUpBookingDeletedWithUpdateModeAsync(int[] appointmentIds, RecurrenceUpdateMode updateMode, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentIds
      type: System.Int32[]
      description: List of appointment IDs
    - id: updateMode
      type: SuperOffice.WebApi.Data.RecurrenceUpdateMode
      description: Update mode
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function CleanUpBookingDeletedWithUpdateModeAsync(appointmentIds As Integer(), updateMode As RecurrenceUpdateMode, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpBookingDeletedWithUpdateModeAsync*
  nameWithType.vb: IAppointmentAgent.CleanUpBookingDeletedWithUpdateModeAsync(Int32(), RecurrenceUpdateMode, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpBookingDeletedWithUpdateModeAsync(System.Int32(), SuperOffice.WebApi.Data.RecurrenceUpdateMode, SuperOffice.WebApi.RequestOptions)
  name.vb: CleanUpBookingDeletedWithUpdateModeAsync(Int32(), RecurrenceUpdateMode, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpRecurringBookingDeletedAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpRecurringBookingDeletedAsync(SuperOffice.WebApi.RequestOptions)
  id: CleanUpRecurringBookingDeletedAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CleanUpRecurringBookingDeletedAsync(RequestOptions)
  nameWithType: IAppointmentAgent.CleanUpRecurringBookingDeletedAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpRecurringBookingDeletedAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nDeletes all appointments with status BookingDeleted and for in logged user.\n"
  syntax:
    content: Task<int> CleanUpRecurringBookingDeletedAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Int32}
    content.vb: Function CleanUpRecurringBookingDeletedAsync(requestOptions As RequestOptions = Nothing) As Task(Of Integer)
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpRecurringBookingDeletedAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociateAsync(SuperOffice.WebApi.Data.TaskType,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociateAsync(SuperOffice.WebApi.Data.TaskType,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultAppointmentEntityByTypeAndAssociateAsync(SuperOffice.WebApi.Data.TaskType,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultAppointmentEntityByTypeAndAssociateAsync(TaskType, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociateAsync(TaskType, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociateAsync(SuperOffice.WebApi.Data.TaskType, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCreates a AppointmentEntity populated with the default values for the specific type and owner.\n"
  syntax:
    content: Task<AppointmentEntity> CreateDefaultAppointmentEntityByTypeAndAssociateAsync(TaskType type, int associateId, RequestOptions requestOptions = null)
    parameters:
    - id: type
      type: SuperOffice.WebApi.Data.TaskType
      description: The type of task requested.
    - id: associateId
      type: System.Int32
      description: The associateId of the appointment owner.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentEntity}
      description: AppointmentEntity with default values.
    content.vb: Function CreateDefaultAppointmentEntityByTypeAndAssociateAsync(type As TaskType, associateId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociateAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetCanInsertForAssociatesAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetCanInsertForAssociatesAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetCanInsertForAssociatesAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetCanInsertForAssociatesAsync(Int32[], RequestOptions)
  nameWithType: IAppointmentAgent.GetCanInsertForAssociatesAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetCanInsertForAssociatesAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCheck if current associate can create appointments in the diary of other associates.\n"
  syntax:
    content: Task<bool[]> GetCanInsertForAssociatesAsync(int[] associateIds, RequestOptions requestOptions = null)
    parameters:
    - id: associateIds
      type: System.Int32[]
      description: Array of associate ids to check for.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Boolean[]}
      description: Returns an array of bool corresponding to the associate array input parameter.
    content.vb: Function GetCanInsertForAssociatesAsync(associateIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of Boolean())
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetCanInsertForAssociatesAsync*
  nameWithType.vb: IAppointmentAgent.GetCanInsertForAssociatesAsync(Int32(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IAppointmentAgent.GetCanInsertForAssociatesAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetCanInsertForAssociatesAsync(Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentHaveParticipantsWithEmailAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentHaveParticipantsWithEmailAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetAppointmentHaveParticipantsWithEmailAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetAppointmentHaveParticipantsWithEmailAsync(Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetAppointmentHaveParticipantsWithEmailAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentHaveParticipantsWithEmailAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGetAppointmentHaveParticipantsWithEmail will check if any of the participants is marked to receive emails on this appointment. If no participants are defined, false will be returned.\n"
  syntax:
    content: Task<bool> GetAppointmentHaveParticipantsWithEmailAsync(int appointmentId, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointmentId.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: Return true or false.
    content.vb: Function GetAppointmentHaveParticipantsWithEmailAsync(appointmentId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Boolean)
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentHaveParticipantsWithEmailAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestionAsync(System.Int32,System.Int32,System.Boolean,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestionAsync(System.Int32,System.Int32,System.Boolean,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultAppointmentEntityFromSaleSuggestionAsync(System.Int32,System.Int32,System.Boolean,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultAppointmentEntityFromSaleSuggestionAsync(Int32, Int32, Boolean, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestionAsync(Int32, Int32, Boolean, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestionAsync(System.Int32, System.Int32, System.Boolean, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCreates an appointment based on a suggested appointment. \n"
  syntax:
    content: Task<AppointmentEntity> CreateDefaultAppointmentEntityFromSaleSuggestionAsync(int suggestedAppointmentId, int saleId, bool createNow, int ownerId, RequestOptions requestOptions = null)
    parameters:
    - id: suggestedAppointmentId
      type: System.Int32
      description: The id of the suggested appointment
    - id: saleId
      type: System.Int32
      description: This is the id of the sale the appointment is connected to. This will be used to give the appointment it&apos;s starting date. If the id is 0 or invalid, we assume the start date is now
    - id: createNow
      type: System.Boolean
      description: If this parameter is true, we override the suggested start time and create the appointment with the current date and time
    - id: ownerId
      type: System.Int32
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentEntity}
      description: The newly created appointment
    content.vb: Function CreateDefaultAppointmentEntityFromSaleSuggestionAsync(suggestedAppointmentId As Integer, saleId As Integer, createNow As Boolean, ownerId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestionAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetNextSuggestedAppointmentBySaleAsync(System.Int32,System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetNextSuggestedAppointmentBySaleAsync(System.Int32,System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: GetNextSuggestedAppointmentBySaleAsync(System.Int32,System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetNextSuggestedAppointmentBySaleAsync(Int32, Int32, Boolean, RequestOptions)
  nameWithType: IAppointmentAgent.GetNextSuggestedAppointmentBySaleAsync(Int32, Int32, Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetNextSuggestedAppointmentBySaleAsync(System.Int32, System.Int32, System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets the next suggested appointment for a given sale (or rather a given sale&apos;s guide).\n"
  syntax:
    content: Task<SuggestedAppointment> GetNextSuggestedAppointmentBySaleAsync(int saleId, int currentAppointmentId, bool skipCompleteCheck, RequestOptions requestOptions = null)
    parameters:
    - id: saleId
      type: System.Int32
      description: The identifier of the (guided) sale from which we want to find a suggested appointment
    - id: currentAppointmentId
      type: System.Int32
      description: The identifier of the appointment from which we calculate the next suggestion. The next suggested appointment is the subsequent appointment defined in the SoAdmin&apos;s sales guide.
    - id: skipCompleteCheck
      type: System.Boolean
      description: If you want to get the next appointment step in a sales guide for an appointment which is not completed, this value must be true. In all other cases, this value should be false, as it would return the value of null if the current appointment is not completes.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SuggestedAppointment}
      description: The next suggestion based on the sale id of a guided sale and the id of the current apopintment. If we cannot find a next suggestion or the sale is not guided (or if any of the paramters are invalid), we will return null.
    content.vb: Function GetNextSuggestedAppointmentBySaleAsync(saleId As Integer, currentAppointmentId As Integer, skipCompleteCheck As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of SuggestedAppointment)
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetNextSuggestedAppointmentBySaleAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultReOpenAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultReOpenAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultReOpenAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultReOpenAppointmentAsync(Int32, RequestOptions)
  nameWithType: IAppointmentAgent.CreateDefaultReOpenAppointmentAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultReOpenAppointmentAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nA re-open appointment should be created as a reminder to re-open the sale at a certain date with information regarding the stalled sale. \n"
  syntax:
    content: Task<AppointmentEntity> CreateDefaultReOpenAppointmentAsync(int saleId, RequestOptions requestOptions = null)
    parameters:
    - id: saleId
      type: System.Int32
      description: The identifier of the stalled sale from which we create a re-open appointment
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentEntity}
      description: 'The re-open appointment with start date = the re-open date of the sale and a description matching the sales stalled reason. '
    content.vb: Function CreateDefaultReOpenAppointmentAsync(saleId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultReOpenAppointmentAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestionAsync(System.Int32,System.Int32,System.Boolean,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestionAsync(System.Int32,System.Int32,System.Boolean,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultAppointmentEntityFromProjectSuggestionAsync(System.Int32,System.Int32,System.Boolean,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultAppointmentEntityFromProjectSuggestionAsync(Int32, Int32, Boolean, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestionAsync(Int32, Int32, Boolean, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestionAsync(System.Int32, System.Int32, System.Boolean, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\n\n"
  syntax:
    content: Task<AppointmentEntity> CreateDefaultAppointmentEntityFromProjectSuggestionAsync(int suggestedAppointmentId, int projectId, bool createNow, int ownerId, RequestOptions requestOptions = null)
    parameters:
    - id: suggestedAppointmentId
      type: System.Int32
    - id: projectId
      type: System.Int32
    - id: createNow
      type: System.Boolean
    - id: ownerId
      type: System.Int32
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentEntity}
    content.vb: Function CreateDefaultAppointmentEntityFromProjectSuggestionAsync(suggestedAppointmentId As Integer, projectId As Integer, createNow As Boolean, ownerId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestionAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAppointmentForUIDAsync(SuperOffice.WebApi.Data.AppointmentEntity,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAppointmentForUIDAsync(SuperOffice.WebApi.Data.AppointmentEntity,System.String,SuperOffice.WebApi.RequestOptions)
  id: CreateAppointmentForUIDAsync(SuperOffice.WebApi.Data.AppointmentEntity,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateAppointmentForUIDAsync(AppointmentEntity, String, RequestOptions)
  nameWithType: IAppointmentAgent.CreateAppointmentForUIDAsync(AppointmentEntity, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAppointmentForUIDAsync(SuperOffice.WebApi.Data.AppointmentEntity, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCreate an invitation record and an appointment with a given UID to reserve it if the UID is unused, otherwise null.\n"
  syntax:
    content: Task<AppointmentEntity> CreateAppointmentForUIDAsync(AppointmentEntity appointmentEntity, string uID, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentEntity
      type: SuperOffice.WebApi.Data.AppointmentEntity
    - id: uID
      type: System.String
      description: The UID associated with the appointment
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentEntity}
      description: The newly created AppointmentEntity or null if the UID is in the DB already.
    content.vb: Function CreateAppointmentForUIDAsync(appointmentEntity As AppointmentEntity, uID As String, requestOptions As RequestOptions = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAppointmentForUIDAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentFromUIDAsync(System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentFromUIDAsync(System.String,SuperOffice.WebApi.RequestOptions)
  id: GetAppointmentFromUIDAsync(System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetAppointmentFromUIDAsync(String, RequestOptions)
  nameWithType: IAppointmentAgent.GetAppointmentFromUIDAsync(String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentFromUIDAsync(System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet the appointment that corresponds to the given UID.\n"
  syntax:
    content: Task<AppointmentEntity> GetAppointmentFromUIDAsync(string uID, RequestOptions requestOptions = null)
    parameters:
    - id: uID
      type: System.String
      description: The UID associated with the appointment
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentEntity}
      description: The corresponding AppointmentEntity if exists or a default appointment entity.
    content.vb: Function GetAppointmentFromUIDAsync(uID As String, requestOptions As RequestOptions = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentFromUIDAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CanAssignToProjectMemberAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.CanAssignToProjectMemberAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: CanAssignToProjectMemberAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CanAssignToProjectMemberAsync(Int32, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.CanAssignToProjectMemberAsync(Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CanAssignToProjectMemberAsync(System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\n\n"
  syntax:
    content: Task<bool> CanAssignToProjectMemberAsync(int projectId, int suggestedAppointmentId, RequestOptions requestOptions = null)
    parameters:
    - id: projectId
      type: System.Int32
    - id: suggestedAppointmentId
      type: System.Int32
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Function CanAssignToProjectMemberAsync(projectId As Integer, suggestedAppointmentId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Boolean)
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.CanAssignToProjectMemberAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetUIDFromAppointmentIdAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetUIDFromAppointmentIdAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: GetUIDFromAppointmentIdAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetUIDFromAppointmentIdAsync(Int32, Boolean, RequestOptions)
  nameWithType: IAppointmentAgent.GetUIDFromAppointmentIdAsync(Int32, Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetUIDFromAppointmentIdAsync(System.Int32, System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet the UID associated with the appointment id in the Invitation table.\n"
  syntax:
    content: Task<string> GetUIDFromAppointmentIdAsync(int appointmentId, bool useMotherId, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentId
      type: System.Int32
    - id: useMotherId
      type: System.Boolean
      description: Uses motherId if no UID is found for appointmentId.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The associated UID, or null if none exist.
    content.vb: Function GetUIDFromAppointmentIdAsync(appointmentId As Integer, useMotherId As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of String)
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetUIDFromAppointmentIdAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentFromIcsResponseAsync(System.String,System.Byte[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentFromIcsResponseAsync(System.String,System.Byte[],SuperOffice.WebApi.RequestOptions)
  id: UpdateAppointmentFromIcsResponseAsync(System.String,System.Byte[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: UpdateAppointmentFromIcsResponseAsync(String, Byte[], RequestOptions)
  nameWithType: IAppointmentAgent.UpdateAppointmentFromIcsResponseAsync(String, Byte[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentFromIcsResponseAsync(System.String, System.Byte[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdate the attendance to an appointment based on incoming ICS RSVPs.\n"
  syntax:
    content: Task<bool> UpdateAppointmentFromIcsResponseAsync(string emailAddress, byte[] icsData, RequestOptions requestOptions = null)
    parameters:
    - id: emailAddress
      type: System.String
      description: The email-address of the person responding to our meeting-request.
    - id: icsData
      type: System.Byte[]
      description: The iCal ICS RSVP-content in byte-form.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if successfull.
    content.vb: Function UpdateAppointmentFromIcsResponseAsync(emailAddress As String, icsData As Byte(), requestOptions As RequestOptions = Nothing) As Task(Of Boolean)
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentFromIcsResponseAsync*
  nameWithType.vb: IAppointmentAgent.UpdateAppointmentFromIcsResponseAsync(String, Byte(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentFromIcsResponseAsync(System.String, System.Byte(), SuperOffice.WebApi.RequestOptions)
  name.vb: UpdateAppointmentFromIcsResponseAsync(String, Byte(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.ValidateAppointmentEntityAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.ValidateAppointmentEntityAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
  id: ValidateAppointmentEntityAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: ValidateAppointmentEntityAsync(AppointmentEntity, RequestOptions)
  nameWithType: IAppointmentAgent.ValidateAppointmentEntityAsync(AppointmentEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.ValidateAppointmentEntityAsync(SuperOffice.WebApi.Data.AppointmentEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCheck that entity is ready for saving.\n"
  syntax:
    content: Task<StringDictionary> ValidateAppointmentEntityAsync(AppointmentEntity appointmentEntity, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentEntity
      type: SuperOffice.WebApi.Data.AppointmentEntity
      description: Entity to be checked.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.StringDictionary}
      description: Error messages tagged by field.
    content.vb: Function ValidateAppointmentEntityAsync(appointmentEntity As AppointmentEntity, requestOptions As RequestOptions = Nothing) As Task(Of StringDictionary)
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.ValidateAppointmentEntityAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.WillSendEmailAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.WillSendEmailAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
  id: WillSendEmailAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: WillSendEmailAsync(AppointmentEntity, RequestOptions)
  nameWithType: IAppointmentAgent.WillSendEmailAsync(AppointmentEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.WillSendEmailAsync(SuperOffice.WebApi.Data.AppointmentEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns true if the changes will trigger email sending on Save, so you can inform the user.\n"
  syntax:
    content: Task<bool> WillSendEmailAsync(AppointmentEntity appointment, RequestOptions requestOptions = null)
    parameters:
    - id: appointment
      type: SuperOffice.WebApi.Data.AppointmentEntity
      description: The appointment carrier with changes made, before saving the changes.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the changes to the appointment and preference settings etc. indicates an email should be sent.
    content.vb: Function WillSendEmailAsync(appointment As AppointmentEntity, requestOptions As RequestOptions = Nothing) As Task(Of Boolean)
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.WillSendEmailAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptWithSmtpEmailConfirmationAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptWithSmtpEmailConfirmationAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  id: AcceptWithSmtpEmailConfirmationAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: AcceptWithSmtpEmailConfirmationAsync(Int32, RecurrenceUpdateMode, EMailConnectionInfo, RequestOptions)
  nameWithType: IAppointmentAgent.AcceptWithSmtpEmailConfirmationAsync(Int32, RecurrenceUpdateMode, EMailConnectionInfo, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptWithSmtpEmailConfirmationAsync(System.Int32, SuperOffice.WebApi.Data.RecurrenceUpdateMode, SuperOffice.WebApi.Data.EMailConnectionInfo, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nAccepting an appointment invitation and send an email confirmation to the meeting organizer.\n"
  syntax:
    content: Task AcceptWithSmtpEmailConfirmationAsync(int appointmentId, RecurrenceUpdateMode updateMode, EMailConnectionInfo smtpEMailConnectionInfo, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointmentId. Both master and child record ids are accepted.
    - id: updateMode
      type: SuperOffice.WebApi.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: smtpEMailConnectionInfo
      type: SuperOffice.WebApi.Data.EMailConnectionInfo
      description: Login information for outgoing smtp email server. Will be null if no login information is relevant.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
      description: Updated AppointmentEntity
    content.vb: Function AcceptWithSmtpEmailConfirmationAsync(appointmentId As Integer, updateMode As RecurrenceUpdateMode, smtpEMailConnectionInfo As EMailConnectionInfo, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptWithSmtpEmailConfirmationAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.RejectWithSmtpEmailConfirmationAsync(System.Int32,System.String,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.RejectWithSmtpEmailConfirmationAsync(System.Int32,System.String,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  id: RejectWithSmtpEmailConfirmationAsync(System.Int32,System.String,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: RejectWithSmtpEmailConfirmationAsync(Int32, String, RecurrenceUpdateMode, EMailConnectionInfo, RequestOptions)
  nameWithType: IAppointmentAgent.RejectWithSmtpEmailConfirmationAsync(Int32, String, RecurrenceUpdateMode, EMailConnectionInfo, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.RejectWithSmtpEmailConfirmationAsync(System.Int32, System.String, SuperOffice.WebApi.Data.RecurrenceUpdateMode, SuperOffice.WebApi.Data.EMailConnectionInfo, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nRejecting an appointment invitation and send an email confirmation to the meeting organizer.\n"
  syntax:
    content: Task RejectWithSmtpEmailConfirmationAsync(int appointmentId, string rejectReason, RecurrenceUpdateMode updateMode, EMailConnectionInfo smtpEMailConnectionInfo, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointmentId. Both master and child record ids are accepted.
    - id: rejectReason
      type: System.String
      description: The reason the invitation was rejected.
    - id: updateMode
      type: SuperOffice.WebApi.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: smtpEMailConnectionInfo
      type: SuperOffice.WebApi.Data.EMailConnectionInfo
      description: Login information for outgoing smtp email server. Will be null if no login information is relevant.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
      description: Updated AppointmentEntity
    content.vb: Function RejectWithSmtpEmailConfirmationAsync(appointmentId As Integer, rejectReason As String, updateMode As RecurrenceUpdateMode, smtpEMailConnectionInfo As EMailConnectionInfo, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.RejectWithSmtpEmailConfirmationAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentEmailInvitationAsync(SuperOffice.WebApi.Data.AppointmentEntity,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentEmailInvitationAsync(SuperOffice.WebApi.Data.AppointmentEntity,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetAppointmentEmailInvitationAsync(SuperOffice.WebApi.Data.AppointmentEntity,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetAppointmentEmailInvitationAsync(AppointmentEntity, String, String, RequestOptions)
  nameWithType: IAppointmentAgent.GetAppointmentEmailInvitationAsync(AppointmentEntity, String, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentEmailInvitationAsync(SuperOffice.WebApi.Data.AppointmentEntity, System.String, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCreate an EMailEntity (without an ical attachment) with the email sent to participants when the appointment is saved\n"
  syntax:
    content: Task<EMailEntity> GetAppointmentEmailInvitationAsync(AppointmentEntity appointment, string templateName, string language, RequestOptions requestOptions = null)
    parameters:
    - id: appointment
      type: SuperOffice.WebApi.Data.AppointmentEntity
      description: The appointment carrier with changes made.
    - id: templateName
      type: System.String
      description: Filename of invitation template
    - id: language
      type: System.String
      description: The desired SO-language for the template
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailEntity}
      description: Email entity with the preview in HTMLBody
    content.vb: Function GetAppointmentEmailInvitationAsync(appointment As AppointmentEntity, templateName As String, language As String, requestOptions As RequestOptions = Nothing) As Task(Of EMailEntity)
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentEmailInvitationAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveWithCustomInvitationAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.SaveWithCustomInvitationAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  id: SaveWithCustomInvitationAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: SaveWithCustomInvitationAsync(AppointmentEntity, RecurrenceUpdateMode, Boolean, EMailConnectionInfo, EMailConnectionInfo, String, String, String, RequestOptions)
  nameWithType: IAppointmentAgent.SaveWithCustomInvitationAsync(AppointmentEntity, RecurrenceUpdateMode, Boolean, EMailConnectionInfo, EMailConnectionInfo, String, String, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveWithCustomInvitationAsync(SuperOffice.WebApi.Data.AppointmentEntity, SuperOffice.WebApi.Data.RecurrenceUpdateMode, System.Boolean, SuperOffice.WebApi.Data.EMailConnectionInfo, SuperOffice.WebApi.Data.EMailConnectionInfo, System.String, System.String, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSave a booking and send a custom invitation email to participants\n"
  syntax:
    content: Task<AppointmentSaveData> SaveWithCustomInvitationAsync(AppointmentEntity appointmentEntity, RecurrenceUpdateMode updateMode, bool sendEmailToParticipants, EMailConnectionInfo smtpEMailConnectionInfo, EMailConnectionInfo imapEMailConnectionInfo, string emailBody, string subject, string templateLanguage, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentEntity
      type: SuperOffice.WebApi.Data.AppointmentEntity
    - id: updateMode
      type: SuperOffice.WebApi.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: sendEmailToParticipants
      type: System.Boolean
      description: If true, emails will be sent to all participants that is marked with send email flag. If false no mails will be sent even if the send email flag is true.
    - id: smtpEMailConnectionInfo
      type: SuperOffice.WebApi.Data.EMailConnectionInfo
      description: Login information for outgoing smtp email server. Will be null if no login information is relevant.
    - id: imapEMailConnectionInfo
      type: SuperOffice.WebApi.Data.EMailConnectionInfo
      description: Login information for imap server. Will be null if no login information is relevant.
    - id: emailBody
      type: System.String
      description: The email-body to be used for new invitations
    - id: subject
      type: System.String
      description: The email-subject to be used for new invitations
    - id: templateLanguage
      type: System.String
      description: The template language to use for invitation updates
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentSaveData}
      description: Appointment entity and flag for if email was queued to be sent
    content.vb: Function SaveWithCustomInvitationAsync(appointmentEntity As AppointmentEntity, updateMode As RecurrenceUpdateMode, sendEmailToParticipants As Boolean, smtpEMailConnectionInfo As EMailConnectionInfo, imapEMailConnectionInfo As EMailConnectionInfo, emailBody As String, subject As String, templateLanguage As String, requestOptions As RequestOptions = Nothing) As Task(Of AppointmentSaveData)
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveWithCustomInvitationAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.ConvertAppointmentToTaskAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.ConvertAppointmentToTaskAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: ConvertAppointmentToTaskAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: ConvertAppointmentToTaskAsync(Int32, RequestOptions)
  nameWithType: IAppointmentAgent.ConvertAppointmentToTaskAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.ConvertAppointmentToTaskAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nConvert appointment to task if certain criteria are met (participants &lt; 2)\n"
  syntax:
    content: Task<AppointmentEntity> ConvertAppointmentToTaskAsync(int appointmentId, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: Appointment ID
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentEntity}
      description: Appointment entity
    content.vb: Function ConvertAppointmentToTaskAsync(appointmentId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.ConvertAppointmentToTaskAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetAppointmentListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetAppointmentListAsync(Int32[], RequestOptions)
  nameWithType: IAppointmentAgent.GetAppointmentListAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentListAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets an array of specific Appointment objects.                        \n"
  syntax:
    content: Task<Appointment[]> GetAppointmentListAsync(int[] appointmentIds, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentIds
      type: System.Int32[]
      description: The identifiers of the Appointment object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointment objects
    content.vb: Function GetAppointmentListAsync(appointmentIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentListAsync*
  nameWithType.vb: IAppointmentAgent.GetAppointmentListAsync(Int32(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentListAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetAppointmentListAsync(Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyAppointmentsAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyAppointmentsAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetMyAppointmentsAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetMyAppointmentsAsync(DateTime, DateTime, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetMyAppointmentsAsync(DateTime, DateTime, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyAppointmentsAsync(System.DateTime, System.DateTime, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments within a time range. The appointments belong to the currently logged on user.\n"
  syntax:
    content: Task<Appointment[]> GetMyAppointmentsAsync(DateTime startTime, DateTime endTime, int count, RequestOptions requestOptions = null)
    parameters:
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetMyAppointmentsAsync(startTime As DateTime, endTime As DateTime, count As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyAppointmentsAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetPersonAppointmentsAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetPersonAppointmentsAsync(Int32, Boolean, DateTime, DateTime, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetPersonAppointmentsAsync(Int32, Boolean, DateTime, DateTime, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsAsync(System.Int32, System.Boolean, System.DateTime, System.DateTime, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments within a time range. The appointments belong to the person specified. If the person not is a SuperOffice user (associate) or the logged on user is not allowed to view this persons appointments an exception is thrown.\n"
  syntax:
    content: Task<Appointment[]> GetPersonAppointmentsAsync(int personId, bool includeProjectAppointments, DateTime startTime, DateTime endTime, int count, RequestOptions requestOptions = null)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id of the SuperOffice user (associate).
    - id: includeProjectAppointments
      type: System.Boolean
      description: If true, all appointments that belong to projects where the user is a project member are included as well as the appointments belonging to the person.
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetPersonAppointmentsAsync(personId As Integer, includeProjectAppointments As Boolean, startTime As DateTime, endTime As DateTime, count As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyDiaryAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyDiaryAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetMyDiaryAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetMyDiaryAsync(DateTime, DateTime, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetMyDiaryAsync(DateTime, DateTime, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyDiaryAsync(System.DateTime, System.DateTime, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments within a time range. It only returns appointments that would be displayed in the user&apos;s diary. The appointments belong to the currently logged on user.\n"
  syntax:
    content: Task<Appointment[]> GetMyDiaryAsync(DateTime startTime, DateTime endTime, int count, RequestOptions requestOptions = null)
    parameters:
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetMyDiaryAsync(startTime As DateTime, endTime As DateTime, count As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyDiaryAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyTasksAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyTasksAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetMyTasksAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetMyTasksAsync(Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetMyTasksAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyTasksAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments within a time range. It only returns appointments that would be displayed in the user&apos;s task list. The appointments belong to the currently logged on user.\n"
  syntax:
    content: Task<Appointment[]> GetMyTasksAsync(int count, RequestOptions requestOptions = null)
    parameters:
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetMyTasksAsync(count As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyTasksAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonDiaryAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonDiaryAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetPersonDiaryAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetPersonDiaryAsync(Int32, DateTime, DateTime, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetPersonDiaryAsync(Int32, DateTime, DateTime, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonDiaryAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments within a time range. It only returns appointments that would be displayed in the user&apos;s diary. The appointments belong to the person specified. If the person not is a SuperOffice user (associate) or the logged on user is not allowed to view this persons appointments an exception is thrown.\n"
  syntax:
    content: Task<Appointment[]> GetPersonDiaryAsync(int personId, DateTime startTime, DateTime endTime, int count, RequestOptions requestOptions = null)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id of the SuperOffice user (associate).
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetPersonDiaryAsync(personId As Integer, startTime As DateTime, endTime As DateTime, count As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonDiaryAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonTasksAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonTasksAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetPersonTasksAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetPersonTasksAsync(Int32, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetPersonTasksAsync(Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonTasksAsync(System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments within a time range. It only returns appointments that would be displayed in the user&apos;s task list. The appointments belong to the person specified. If the person not is a SuperOffice user (associate) or the logged on user is not allowed to view this persons appointments an exception is thrown.\n"
  syntax:
    content: Task<Appointment[]> GetPersonTasksAsync(int personId, int count, RequestOptions requestOptions = null)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id of the SuperOffice user (associate).
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetPersonTasksAsync(personId As Integer, count As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonTasksAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTypeAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTypeAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
  id: GetPersonAppointmentsByTypeAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetPersonAppointmentsByTypeAsync(Int32, Boolean, DateTime, DateTime, Int32, AppointmentType, RequestOptions)
  nameWithType: IAppointmentAgent.GetPersonAppointmentsByTypeAsync(Int32, Boolean, DateTime, DateTime, Int32, AppointmentType, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTypeAsync(System.Int32, System.Boolean, System.DateTime, System.DateTime, System.Int32, SuperOffice.WebApi.Data.AppointmentType, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments of a specific appointment type within a time range. The appointments belong to the person specified.\n"
  syntax:
    content: Task<Appointment[]> GetPersonAppointmentsByTypeAsync(int personId, bool includeProjectAppointments, DateTime startTime, DateTime endTime, int count, AppointmentType appointmentType, RequestOptions requestOptions = null)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id of the SuperOffice user (associate).
    - id: includeProjectAppointments
      type: System.Boolean
      description: If true, all appointments that belong to projects where the user is a project member are included as well as the appointments belonging to the person.
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: appointmentType
      type: SuperOffice.WebApi.Data.AppointmentType
      description: The appointment type, e.g. inDiary, inChecklist etc.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetPersonAppointmentsByTypeAsync(personId As Integer, includeProjectAppointments As Boolean, startTime As DateTime, endTime As DateTime, count As Integer, appointmentType As AppointmentType, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTypeAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetProjectAppointmentsAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetProjectAppointmentsAsync(Int32, DateTime, DateTime, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetProjectAppointmentsAsync(Int32, DateTime, DateTime, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments within a time range. The appointments belong to the project specified. If the logged on user is not allowed to view this projects appointments an exception is thrown.\n"
  syntax:
    content: Task<Appointment[]> GetProjectAppointmentsAsync(int projectId, DateTime startTime, DateTime endTime, int count, RequestOptions requestOptions = null)
    parameters:
    - id: projectId
      type: System.Int32
      description: The project id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetProjectAppointmentsAsync(projectId As Integer, startTime As DateTime, endTime As DateTime, count As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTypeAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTypeAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
  id: GetProjectAppointmentsByTypeAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetProjectAppointmentsByTypeAsync(Int32, DateTime, DateTime, Int32, AppointmentType, RequestOptions)
  nameWithType: IAppointmentAgent.GetProjectAppointmentsByTypeAsync(Int32, DateTime, DateTime, Int32, AppointmentType, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTypeAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, SuperOffice.WebApi.Data.AppointmentType, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments of a specific appointment type within a time range. The appointments belong to the project specified.\n"
  syntax:
    content: Task<Appointment[]> GetProjectAppointmentsByTypeAsync(int projectId, DateTime startTime, DateTime endTime, int count, AppointmentType appointmentType, RequestOptions requestOptions = null)
    parameters:
    - id: projectId
      type: System.Int32
      description: The project id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: appointmentType
      type: SuperOffice.WebApi.Data.AppointmentType
      description: The appointment type, e.g. inDiary, inChecklist etc.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetProjectAppointmentsByTypeAsync(projectId As Integer, startTime As DateTime, endTime As DateTime, count As Integer, appointmentType As AppointmentType, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTypeAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetContactAppointmentsAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetContactAppointmentsAsync(Int32, DateTime, DateTime, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetContactAppointmentsAsync(Int32, DateTime, DateTime, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments within a time range. The appointments belong to the contact specified. If the logged on user is not allowed to view this persons appointments an exception is thrown.\n"
  syntax:
    content: Task<Appointment[]> GetContactAppointmentsAsync(int contactId, DateTime startTime, DateTime endTime, int count, RequestOptions requestOptions = null)
    parameters:
    - id: contactId
      type: System.Int32
      description: The contact id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetContactAppointmentsAsync(contactId As Integer, startTime As DateTime, endTime As DateTime, count As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTypeAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTypeAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
  id: GetContactAppointmentsByTypeAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetContactAppointmentsByTypeAsync(Int32, DateTime, DateTime, Int32, AppointmentType, RequestOptions)
  nameWithType: IAppointmentAgent.GetContactAppointmentsByTypeAsync(Int32, DateTime, DateTime, Int32, AppointmentType, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTypeAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, SuperOffice.WebApi.Data.AppointmentType, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments of a specific appointment type within a time range. The appointments belong to the contact specified. If the logged on user is not allowed to view this contacts appointments an exception is thrown.\n"
  syntax:
    content: Task<Appointment[]> GetContactAppointmentsByTypeAsync(int contactId, DateTime startTime, DateTime endTime, int count, AppointmentType appointmentType, RequestOptions requestOptions = null)
    parameters:
    - id: contactId
      type: System.Int32
      description: The contact id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: appointmentType
      type: SuperOffice.WebApi.Data.AppointmentType
      description: The appointment type, e.g. inDiary, inChecklist etc.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetContactAppointmentsByTypeAsync(contactId As Integer, startTime As DateTime, endTime As DateTime, count As Integer, appointmentType As AppointmentType, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTypeAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetProjectMemberAppointmentsAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetProjectMemberAppointmentsAsync(Int32, DateTime, DateTime, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetProjectMemberAppointmentsAsync(Int32, DateTime, DateTime, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments within a time range. The appointments belong to the projects where the person specified is member.\n"
  syntax:
    content: Task<Appointment[]> GetProjectMemberAppointmentsAsync(int personId, DateTime startTime, DateTime endTime, int count, RequestOptions requestOptions = null)
    parameters:
    - id: personId
      type: System.Int32
      description: The project member&apos;s person id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetProjectMemberAppointmentsAsync(personId As Integer, startTime As DateTime, endTime As DateTime, count As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTypeAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTypeAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
  id: GetProjectMemberAppointmentsByTypeAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetProjectMemberAppointmentsByTypeAsync(Int32, DateTime, DateTime, Int32, AppointmentType, RequestOptions)
  nameWithType: IAppointmentAgent.GetProjectMemberAppointmentsByTypeAsync(Int32, DateTime, DateTime, Int32, AppointmentType, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTypeAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, SuperOffice.WebApi.Data.AppointmentType, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments of a specific appointment type within a time range. The appointments belong to the projects where the person specified is member.\n"
  syntax:
    content: Task<Appointment[]> GetProjectMemberAppointmentsByTypeAsync(int personId, DateTime startTime, DateTime endTime, int count, AppointmentType appointmentType, RequestOptions requestOptions = null)
    parameters:
    - id: personId
      type: System.Int32
      description: The project member&apos;s person id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: appointmentType
      type: SuperOffice.WebApi.Data.AppointmentType
      description: The appointment type, e.g. inDiary, inChecklist etc.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetProjectMemberAppointmentsByTypeAsync(personId As Integer, startTime As DateTime, endTime As DateTime, count As Integer, appointmentType As AppointmentType, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTypeAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTaskAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTaskAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetPersonAppointmentsByTaskAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetPersonAppointmentsByTaskAsync(Int32, Boolean, DateTime, DateTime, Int32, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetPersonAppointmentsByTaskAsync(Int32, Boolean, DateTime, DateTime, Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTaskAsync(System.Int32, System.Boolean, System.DateTime, System.DateTime, System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments of a specific appointment task type within a time range. The appointments belong to the person specified.  Task represents the different types of activities, like “Phone call”, “Meeting” and so on.\n"
  syntax:
    content: Task<Appointment[]> GetPersonAppointmentsByTaskAsync(int personId, bool includeProjectAppointments, DateTime startTime, DateTime endTime, int count, int taskId, RequestOptions requestOptions = null)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id of the SuperOffice user (associate).
    - id: includeProjectAppointments
      type: System.Boolean
      description: If true, all appointments that belong to projects where the user is a project member are included as well as the appointments belonging to the person.
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: taskId
      type: System.Int32
      description: The task id. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetPersonAppointmentsByTaskAsync(personId As Integer, includeProjectAppointments As Boolean, startTime As DateTime, endTime As DateTime, count As Integer, taskId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTaskAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTasksAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTasksAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetPersonAppointmentsByTasksAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetPersonAppointmentsByTasksAsync(Int32, Boolean, DateTime, DateTime, Int32, Int32[], RequestOptions)
  nameWithType: IAppointmentAgent.GetPersonAppointmentsByTasksAsync(Int32, Boolean, DateTime, DateTime, Int32, Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTasksAsync(System.Int32, System.Boolean, System.DateTime, System.DateTime, System.Int32, System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments from a list of appointment task types within a time range. The appointments belong to the person specified.  Task represents the different types of activities, like “Phone call”, “Meeting” and so on.\n"
  syntax:
    content: Task<Appointment[]> GetPersonAppointmentsByTasksAsync(int personId, bool includeProjectAppointments, DateTime startTime, DateTime endTime, int count, int[] taskIds, RequestOptions requestOptions = null)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id of the SuperOffice user (associate).
    - id: includeProjectAppointments
      type: System.Boolean
      description: If true, all appointments that belong to projects where the user is a project member are included as well as the appointments belonging to the person.
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: taskIds
      type: System.Int32[]
      description: The task ids as an integer array. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetPersonAppointmentsByTasksAsync(personId As Integer, includeProjectAppointments As Boolean, startTime As DateTime, endTime As DateTime, count As Integer, taskIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTasksAsync*
  nameWithType.vb: IAppointmentAgent.GetPersonAppointmentsByTasksAsync(Int32, Boolean, DateTime, DateTime, Int32, Int32(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTasksAsync(System.Int32, System.Boolean, System.DateTime, System.DateTime, System.Int32, System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetPersonAppointmentsByTasksAsync(Int32, Boolean, DateTime, DateTime, Int32, Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTaskHeadingAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTaskHeadingAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetPersonAppointmentsByTaskHeadingAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetPersonAppointmentsByTaskHeadingAsync(Int32, Boolean, DateTime, DateTime, Int32, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetPersonAppointmentsByTaskHeadingAsync(Int32, Boolean, DateTime, DateTime, Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTaskHeadingAsync(System.Int32, System.Boolean, System.DateTime, System.DateTime, System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments of a specific appointment task heading within a time range. The appointments belong to the person specified.  Task represents the different types of activities, like “Phone call”, “Meeting” and so on. The heading represents a grouping or filtering of tasks.\n"
  syntax:
    content: Task<Appointment[]> GetPersonAppointmentsByTaskHeadingAsync(int personId, bool includeProjectAppointments, DateTime startTime, DateTime endTime, int count, int taskHeadingId, RequestOptions requestOptions = null)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id of the SuperOffice user (associate).
    - id: includeProjectAppointments
      type: System.Boolean
      description: If true, all appointments that belong to projects where the user is a project member are included as well as the appointments belonging to the person.
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: taskHeadingId
      type: System.Int32
      description: The task heading id. The heading represents a grouping or filtering of tasks. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetPersonAppointmentsByTaskHeadingAsync(personId As Integer, includeProjectAppointments As Boolean, startTime As DateTime, endTime As DateTime, count As Integer, taskHeadingId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTaskHeadingAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTaskAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTaskAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetProjectAppointmentsByTaskAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetProjectAppointmentsByTaskAsync(Int32, DateTime, DateTime, Int32, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetProjectAppointmentsByTaskAsync(Int32, DateTime, DateTime, Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTaskAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments of a specific appointment task type within a time range. The appointments belong to the project specified.  Task represents the different types of activities, like “Phone call”, “Meeting” and so on.\n"
  syntax:
    content: Task<Appointment[]> GetProjectAppointmentsByTaskAsync(int projectId, DateTime startTime, DateTime endTime, int count, int taskId, RequestOptions requestOptions = null)
    parameters:
    - id: projectId
      type: System.Int32
      description: The project id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: taskId
      type: System.Int32
      description: The task id. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetProjectAppointmentsByTaskAsync(projectId As Integer, startTime As DateTime, endTime As DateTime, count As Integer, taskId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTaskAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTasksAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTasksAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetProjectAppointmentsByTasksAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetProjectAppointmentsByTasksAsync(Int32, DateTime, DateTime, Int32, Int32[], RequestOptions)
  nameWithType: IAppointmentAgent.GetProjectAppointmentsByTasksAsync(Int32, DateTime, DateTime, Int32, Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTasksAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments matching the list of appointment task types within a time range. The appointments belong to the project specified.  Task represents the different types of activities, like “Phone call”, “Meeting” and so on.\n"
  syntax:
    content: Task<Appointment[]> GetProjectAppointmentsByTasksAsync(int projectId, DateTime startTime, DateTime endTime, int count, int[] taskIds, RequestOptions requestOptions = null)
    parameters:
    - id: projectId
      type: System.Int32
      description: The project id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: taskIds
      type: System.Int32[]
      description: The task ids as an integer array. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetProjectAppointmentsByTasksAsync(projectId As Integer, startTime As DateTime, endTime As DateTime, count As Integer, taskIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTasksAsync*
  nameWithType.vb: IAppointmentAgent.GetProjectAppointmentsByTasksAsync(Int32, DateTime, DateTime, Int32, Int32(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTasksAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetProjectAppointmentsByTasksAsync(Int32, DateTime, DateTime, Int32, Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTaskHeadingAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTaskHeadingAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetProjectAppointmentsByTaskHeadingAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetProjectAppointmentsByTaskHeadingAsync(Int32, DateTime, DateTime, Int32, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetProjectAppointmentsByTaskHeadingAsync(Int32, DateTime, DateTime, Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTaskHeadingAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments of a specific appointment task heading within a time range. The appointments belong to the project specified.  Task represents the different types of activities, like “Phone call”, “Meeting” and so on. The heading represents a grouping or filtering of tasks.\n"
  syntax:
    content: Task<Appointment[]> GetProjectAppointmentsByTaskHeadingAsync(int projectId, DateTime startTime, DateTime endTime, int count, int taskHeadingId, RequestOptions requestOptions = null)
    parameters:
    - id: projectId
      type: System.Int32
      description: The project id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: taskHeadingId
      type: System.Int32
      description: The task heading id. The heading represents a grouping or filtering of tasks. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetProjectAppointmentsByTaskHeadingAsync(projectId As Integer, startTime As DateTime, endTime As DateTime, count As Integer, taskHeadingId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTaskHeadingAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTaskAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTaskAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetProjectMemberAppointmentsByTaskAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetProjectMemberAppointmentsByTaskAsync(Int32, DateTime, DateTime, Int32, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetProjectMemberAppointmentsByTaskAsync(Int32, DateTime, DateTime, Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTaskAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments of a specific appointment task type within a time range. The appointments belong to the projects where the person specified is member. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.\n"
  syntax:
    content: Task<Appointment[]> GetProjectMemberAppointmentsByTaskAsync(int personId, DateTime startTime, DateTime endTime, int count, int taskId, RequestOptions requestOptions = null)
    parameters:
    - id: personId
      type: System.Int32
      description: The project member&apos;s person id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: taskId
      type: System.Int32
      description: The task id. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetProjectMemberAppointmentsByTaskAsync(personId As Integer, startTime As DateTime, endTime As DateTime, count As Integer, taskId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTaskAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTasksAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTasksAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetProjectMemberAppointmentsByTasksAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetProjectMemberAppointmentsByTasksAsync(Int32, DateTime, DateTime, Int32, Int32[], RequestOptions)
  nameWithType: IAppointmentAgent.GetProjectMemberAppointmentsByTasksAsync(Int32, DateTime, DateTime, Int32, Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTasksAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments matching a set of appointment task types within a time range. The appointments belong to the projects where the person specified is member. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.\n"
  syntax:
    content: Task<Appointment[]> GetProjectMemberAppointmentsByTasksAsync(int personId, DateTime startTime, DateTime endTime, int count, int[] taskIds, RequestOptions requestOptions = null)
    parameters:
    - id: personId
      type: System.Int32
      description: The project member&apos;s person id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: taskIds
      type: System.Int32[]
      description: The task ids as an integer array. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetProjectMemberAppointmentsByTasksAsync(personId As Integer, startTime As DateTime, endTime As DateTime, count As Integer, taskIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTasksAsync*
  nameWithType.vb: IAppointmentAgent.GetProjectMemberAppointmentsByTasksAsync(Int32, DateTime, DateTime, Int32, Int32(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTasksAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetProjectMemberAppointmentsByTasksAsync(Int32, DateTime, DateTime, Int32, Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTaskHeadingAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTaskHeadingAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetProjectMemberAppointmentsByTaskHeadingAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetProjectMemberAppointmentsByTaskHeadingAsync(Int32, DateTime, DateTime, Int32, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetProjectMemberAppointmentsByTaskHeadingAsync(Int32, DateTime, DateTime, Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTaskHeadingAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments of a specific appointment task heading within a time range. The appointments belong to the projects where the person specified is member. Task represents the different types of activities, like “Phone call”, “Meeting” and so on. The heading represents a grouping or filtering of tasks.\n"
  syntax:
    content: Task<Appointment[]> GetProjectMemberAppointmentsByTaskHeadingAsync(int personId, DateTime startTime, DateTime endTime, int count, int taskHeadingId, RequestOptions requestOptions = null)
    parameters:
    - id: personId
      type: System.Int32
      description: The project member&apos;s person id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: taskHeadingId
      type: System.Int32
      description: The task heading id. The heading represents a grouping or filtering of tasks. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetProjectMemberAppointmentsByTaskHeadingAsync(personId As Integer, startTime As DateTime, endTime As DateTime, count As Integer, taskHeadingId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTaskHeadingAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTaskAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTaskAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetContactAppointmentsByTaskAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetContactAppointmentsByTaskAsync(Int32, DateTime, DateTime, Int32, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetContactAppointmentsByTaskAsync(Int32, DateTime, DateTime, Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTaskAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments of a specific appointment task type within a time range. The appointments belong to the contact specified. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.\n"
  syntax:
    content: Task<Appointment[]> GetContactAppointmentsByTaskAsync(int contactId, DateTime startTime, DateTime endTime, int count, int taskId, RequestOptions requestOptions = null)
    parameters:
    - id: contactId
      type: System.Int32
      description: The contact id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: taskId
      type: System.Int32
      description: The task id. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetContactAppointmentsByTaskAsync(contactId As Integer, startTime As DateTime, endTime As DateTime, count As Integer, taskId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTaskAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTasksAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTasksAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetContactAppointmentsByTasksAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetContactAppointmentsByTasksAsync(Int32, DateTime, DateTime, Int32, Int32[], RequestOptions)
  nameWithType: IAppointmentAgent.GetContactAppointmentsByTasksAsync(Int32, DateTime, DateTime, Int32, Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTasksAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments belonging to an array of appointment task types within a time range. The appointments belong to the contact specified. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.\n"
  syntax:
    content: Task<Appointment[]> GetContactAppointmentsByTasksAsync(int contactId, DateTime startTime, DateTime endTime, int count, int[] taskIds, RequestOptions requestOptions = null)
    parameters:
    - id: contactId
      type: System.Int32
      description: The contact id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: taskIds
      type: System.Int32[]
      description: The task ids as an integer array. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetContactAppointmentsByTasksAsync(contactId As Integer, startTime As DateTime, endTime As DateTime, count As Integer, taskIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTasksAsync*
  nameWithType.vb: IAppointmentAgent.GetContactAppointmentsByTasksAsync(Int32, DateTime, DateTime, Int32, Int32(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTasksAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetContactAppointmentsByTasksAsync(Int32, DateTime, DateTime, Int32, Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTaskHeadingAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTaskHeadingAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetContactAppointmentsByTaskHeadingAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetContactAppointmentsByTaskHeadingAsync(Int32, DateTime, DateTime, Int32, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetContactAppointmentsByTaskHeadingAsync(Int32, DateTime, DateTime, Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTaskHeadingAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments of a specific appointment task heading within a time range. The appointments belong to the contact specified. Task represents the different types of activities, like “Phone call”, “Meeting” and so on. The heading represents a grouping or filtering of tasks.\n"
  syntax:
    content: Task<Appointment[]> GetContactAppointmentsByTaskHeadingAsync(int contactId, DateTime startTime, DateTime endTime, int count, int taskHeadingId, RequestOptions requestOptions = null)
    parameters:
    - id: contactId
      type: System.Int32
      description: The contact id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: taskHeadingId
      type: System.Int32
      description: The task heading id. The heading represents a grouping or filtering of tasks. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetContactAppointmentsByTaskHeadingAsync(contactId As Integer, startTime As DateTime, endTime As DateTime, count As Integer, taskHeadingId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTaskHeadingAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPublishedAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetPublishedAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetPublishedAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetPublishedAppointmentAsync(Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetPublishedAppointmentAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPublishedAppointmentAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet published appointment by appointment id.\n"
  syntax:
    content: Task<Appointment> GetPublishedAppointmentAsync(int appointmentId, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointment id
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment}
      description: Appointment
    content.vb: Function GetPublishedAppointmentAsync(appointmentId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Appointment)
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPublishedAppointmentAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPublishedAppointmentsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetPublishedAppointmentsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetPublishedAppointmentsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetPublishedAppointmentsAsync(Int32[], RequestOptions)
  nameWithType: IAppointmentAgent.GetPublishedAppointmentsAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPublishedAppointmentsAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet published appointments by appointment ids.\n"
  syntax:
    content: Task<Appointment[]> GetPublishedAppointmentsAsync(int[] appointmentIds, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentIds
      type: System.Int32[]
      description: The array of appointment ids
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointment
    content.vb: Function GetPublishedAppointmentsAsync(appointmentIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPublishedAppointmentsAsync*
  nameWithType.vb: IAppointmentAgent.GetPublishedAppointmentsAsync(Int32(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPublishedAppointmentsAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetPublishedAppointmentsAsync(Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyPublishedAppointmentsAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyPublishedAppointmentsAsync(SuperOffice.WebApi.RequestOptions)
  id: GetMyPublishedAppointmentsAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetMyPublishedAppointmentsAsync(RequestOptions)
  nameWithType: IAppointmentAgent.GetMyPublishedAppointmentsAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyPublishedAppointmentsAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet published appointments from the logged in user.\n"
  syntax:
    content: Task<Appointment[]> GetMyPublishedAppointmentsAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Appointments
    content.vb: Function GetMyPublishedAppointmentsAsync(requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyPublishedAppointmentsAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPublishedProjectAppointmentsAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetPublishedProjectAppointmentsAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetPublishedProjectAppointmentsAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetPublishedProjectAppointmentsAsync(Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetPublishedProjectAppointmentsAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPublishedProjectAppointmentsAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet published appointments by project id.\n"
  syntax:
    content: Task<Appointment[]> GetPublishedProjectAppointmentsAsync(int projectId, RequestOptions requestOptions = null)
    parameters:
    - id: projectId
      type: System.Int32
      description: The project id
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointment
    content.vb: Function GetPublishedProjectAppointmentsAsync(projectId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPublishedProjectAppointmentsAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentsByTaskHeadingAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentsByTaskHeadingAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetAppointmentsByTaskHeadingAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetAppointmentsByTaskHeadingAsync(Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetAppointmentsByTaskHeadingAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentsByTaskHeadingAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns appointments of a specific appointment task heading. Task represents the different types of activities, like “Phone call”, “Meeting” and so on. The heading represents a grouping or filtering of tasks.\n"
  syntax:
    content: Task<Appointment[]> GetAppointmentsByTaskHeadingAsync(int taskHeadingId, RequestOptions requestOptions = null)
    parameters:
    - id: taskHeadingId
      type: System.Int32
      description: The task heading id. The heading represents a grouping or filtering of tasks. Task represents the different types of activities, like “Phone call”, “Meeting” and so on
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetAppointmentsByTaskHeadingAsync(taskHeadingId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentsByTaskHeadingAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociateDiaryAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociateDiaryAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetAssociateDiaryAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetAssociateDiaryAsync(Int32, DateTime, DateTime, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetAssociateDiaryAsync(Int32, DateTime, DateTime, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociateDiaryAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\n\n"
  syntax:
    content: Task<Appointment[]> GetAssociateDiaryAsync(int associateId, DateTime startTime, DateTime endTime, int count, RequestOptions requestOptions = null)
    parameters:
    - id: associateId
      type: System.Int32
    - id: startTime
      type: System.DateTime
    - id: endTime
      type: System.DateTime
    - id: count
      type: System.Int32
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
    content.vb: Function GetAssociateDiaryAsync(associateId As Integer, startTime As DateTime, endTime As DateTime, count As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociateDiaryAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetDiaryByGroupAsync(System.Int32,System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetDiaryByGroupAsync(System.Int32,System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetDiaryByGroupAsync(System.Int32,System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetDiaryByGroupAsync(Int32, Int32, DateTime, DateTime, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetDiaryByGroupAsync(Int32, Int32, DateTime, DateTime, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetDiaryByGroupAsync(System.Int32, System.Int32, System.DateTime, System.DateTime, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\n\n"
  syntax:
    content: Task<Appointment[]> GetDiaryByGroupAsync(int groupId, int groupType, DateTime startTime, DateTime endTime, int count, RequestOptions requestOptions = null)
    parameters:
    - id: groupId
      type: System.Int32
    - id: groupType
      type: System.Int32
    - id: startTime
      type: System.DateTime
    - id: endTime
      type: System.DateTime
    - id: count
      type: System.Int32
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
    content.vb: Function GetDiaryByGroupAsync(groupId As Integer, groupType As Integer, startTime As DateTime, endTime As DateTime, count As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetDiaryByGroupAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: UpdateAppointmentAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: UpdateAppointmentAsync(Int32, DateTime, DateTime, Int32, Int32, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.UpdateAppointmentAsync(Int32, DateTime, DateTime, Int32, Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdates an appointment record.\n"
  syntax:
    content: Task<Appointment> UpdateAppointmentAsync(int id, DateTime startTime, DateTime endTime, int status, int type, int associateId, RequestOptions requestOptions = null)
    parameters:
    - id: id
      type: System.Int32
    - id: startTime
      type: System.DateTime
    - id: endTime
      type: System.DateTime
    - id: status
      type: System.Int32
    - id: type
      type: System.Int32
    - id: associateId
      type: System.Int32
      description: The appointment owner&apos;s id (associate id)
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment}
    content.vb: Function UpdateAppointmentAsync(id As Integer, startTime As DateTime, endTime As DateTime, status As Integer, type As Integer, associateId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Appointment)
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentWithModeAsync(System.Int32,System.DateTime,System.DateTime,SuperOffice.WebApi.Data.AppointmentStatus,SuperOffice.WebApi.Data.AppointmentType,System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentWithModeAsync(System.Int32,System.DateTime,System.DateTime,SuperOffice.WebApi.Data.AppointmentStatus,SuperOffice.WebApi.Data.AppointmentType,System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  id: UpdateAppointmentWithModeAsync(System.Int32,System.DateTime,System.DateTime,SuperOffice.WebApi.Data.AppointmentStatus,SuperOffice.WebApi.Data.AppointmentType,System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: UpdateAppointmentWithModeAsync(Int32, DateTime, DateTime, AppointmentStatus, AppointmentType, Int32, RecurrenceUpdateMode, RequestOptions)
  nameWithType: IAppointmentAgent.UpdateAppointmentWithModeAsync(Int32, DateTime, DateTime, AppointmentStatus, AppointmentType, Int32, RecurrenceUpdateMode, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentWithModeAsync(System.Int32, System.DateTime, System.DateTime, SuperOffice.WebApi.Data.AppointmentStatus, SuperOffice.WebApi.Data.AppointmentType, System.Int32, SuperOffice.WebApi.Data.RecurrenceUpdateMode, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdates an appointment record, taking the given recurrence update mode into account.\n"
  syntax:
    content: Task<Appointment> UpdateAppointmentWithModeAsync(int id, DateTime startTime, DateTime endTime, AppointmentStatus status, AppointmentType type, int associateId, RecurrenceUpdateMode updateMode, RequestOptions requestOptions = null)
    parameters:
    - id: id
      type: System.Int32
    - id: startTime
      type: System.DateTime
    - id: endTime
      type: System.DateTime
    - id: status
      type: SuperOffice.WebApi.Data.AppointmentStatus
    - id: type
      type: SuperOffice.WebApi.Data.AppointmentType
    - id: associateId
      type: System.Int32
      description: The appointment owner&apos;s id (associate id)
    - id: updateMode
      type: SuperOffice.WebApi.Data.RecurrenceUpdateMode
      description: Update mode for recurrence.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment}
    content.vb: Function UpdateAppointmentWithModeAsync(id As Integer, startTime As DateTime, endTime As DateTime, status As AppointmentStatus, type As AppointmentType, associateId As Integer, updateMode As RecurrenceUpdateMode, requestOptions As RequestOptions = Nothing) As Task(Of Appointment)
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentWithModeAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentWithModeAndEmailAsync(System.Int32,System.DateTime,System.DateTime,SuperOffice.WebApi.Data.AppointmentStatus,SuperOffice.WebApi.Data.AppointmentType,System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentWithModeAndEmailAsync(System.Int32,System.DateTime,System.DateTime,SuperOffice.WebApi.Data.AppointmentStatus,SuperOffice.WebApi.Data.AppointmentType,System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  id: UpdateAppointmentWithModeAndEmailAsync(System.Int32,System.DateTime,System.DateTime,SuperOffice.WebApi.Data.AppointmentStatus,SuperOffice.WebApi.Data.AppointmentType,System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: UpdateAppointmentWithModeAndEmailAsync(Int32, DateTime, DateTime, AppointmentStatus, AppointmentType, Int32, RecurrenceUpdateMode, Boolean, EMailConnectionInfo, EMailConnectionInfo, RequestOptions)
  nameWithType: IAppointmentAgent.UpdateAppointmentWithModeAndEmailAsync(Int32, DateTime, DateTime, AppointmentStatus, AppointmentType, Int32, RecurrenceUpdateMode, Boolean, EMailConnectionInfo, EMailConnectionInfo, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentWithModeAndEmailAsync(System.Int32, System.DateTime, System.DateTime, SuperOffice.WebApi.Data.AppointmentStatus, SuperOffice.WebApi.Data.AppointmentType, System.Int32, SuperOffice.WebApi.Data.RecurrenceUpdateMode, System.Boolean, SuperOffice.WebApi.Data.EMailConnectionInfo, SuperOffice.WebApi.Data.EMailConnectionInfo, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdates an appointment record, taking the given recurrence update mode into account, possibly sending notification emails.\n"
  syntax:
    content: Task<Appointment> UpdateAppointmentWithModeAndEmailAsync(int id, DateTime startTime, DateTime endTime, AppointmentStatus status, AppointmentType type, int associateId, RecurrenceUpdateMode updateMode, bool sendEmailToParticipants, EMailConnectionInfo smtpEMailConnectionInfo, EMailConnectionInfo imapEMailConnectionInfo, RequestOptions requestOptions = null)
    parameters:
    - id: id
      type: System.Int32
    - id: startTime
      type: System.DateTime
    - id: endTime
      type: System.DateTime
    - id: status
      type: SuperOffice.WebApi.Data.AppointmentStatus
    - id: type
      type: SuperOffice.WebApi.Data.AppointmentType
    - id: associateId
      type: System.Int32
      description: The appointment owner&apos;s id (associate id)
    - id: updateMode
      type: SuperOffice.WebApi.Data.RecurrenceUpdateMode
      description: Update mode for recurrence.
    - id: sendEmailToParticipants
      type: System.Boolean
      description: If true, emails will be sent to all participants that is marked with send email flag if deemed necessary. If false no mails will be sent even if the send email flag is true.
    - id: smtpEMailConnectionInfo
      type: SuperOffice.WebApi.Data.EMailConnectionInfo
      description: Login information for outgoing smtp email server. Will be null if no login information is relevant.
    - id: imapEMailConnectionInfo
      type: SuperOffice.WebApi.Data.EMailConnectionInfo
      description: Login information for imap server. Will be null if no login information is relevant.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment}
    content.vb: Function UpdateAppointmentWithModeAndEmailAsync(id As Integer, startTime As DateTime, endTime As DateTime, status As AppointmentStatus, type As AppointmentType, associateId As Integer, updateMode As RecurrenceUpdateMode, sendEmailToParticipants As Boolean, smtpEMailConnectionInfo As EMailConnectionInfo, imapEMailConnectionInfo As EMailConnectionInfo, requestOptions As RequestOptions = Nothing) As Task(Of Appointment)
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentWithModeAndEmailAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociatesDiaryAsync(System.Int32[],System.DateTime,System.DateTime,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociatesDiaryAsync(System.Int32[],System.DateTime,System.DateTime,SuperOffice.WebApi.RequestOptions)
  id: GetAssociatesDiaryAsync(System.Int32[],System.DateTime,System.DateTime,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetAssociatesDiaryAsync(Int32[], DateTime, DateTime, RequestOptions)
  nameWithType: IAppointmentAgent.GetAssociatesDiaryAsync(Int32[], DateTime, DateTime, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociatesDiaryAsync(System.Int32[], System.DateTime, System.DateTime, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nFetch appointments for given associates\n"
  syntax:
    content: Task<Appointment[]> GetAssociatesDiaryAsync(int[] associateIds, DateTime startTime, DateTime endTime, RequestOptions requestOptions = null)
    parameters:
    - id: associateIds
      type: System.Int32[]
    - id: startTime
      type: System.DateTime
    - id: endTime
      type: System.DateTime
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
    content.vb: Function GetAssociatesDiaryAsync(associateIds As Integer(), startTime As DateTime, endTime As DateTime, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociatesDiaryAsync*
  nameWithType.vb: IAppointmentAgent.GetAssociatesDiaryAsync(Int32(), DateTime, DateTime, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociatesDiaryAsync(System.Int32(), System.DateTime, System.DateTime, SuperOffice.WebApi.RequestOptions)
  name.vb: GetAssociatesDiaryAsync(Int32(), DateTime, DateTime, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociatesDiaryInfoAsync(System.Int32[],System.DateTime,System.DateTime,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociatesDiaryInfoAsync(System.Int32[],System.DateTime,System.DateTime,SuperOffice.WebApi.RequestOptions)
  id: GetAssociatesDiaryInfoAsync(System.Int32[],System.DateTime,System.DateTime,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetAssociatesDiaryInfoAsync(Int32[], DateTime, DateTime, RequestOptions)
  nameWithType: IAppointmentAgent.GetAssociatesDiaryInfoAsync(Int32[], DateTime, DateTime, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociatesDiaryInfoAsync(System.Int32[], System.DateTime, System.DateTime, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nFetch appointment info for given associates\n"
  syntax:
    content: Task<AppointmentInfo[]> GetAssociatesDiaryInfoAsync(int[] associateIds, DateTime startTime, DateTime endTime, RequestOptions requestOptions = null)
    parameters:
    - id: associateIds
      type: System.Int32[]
    - id: startTime
      type: System.DateTime
    - id: endTime
      type: System.DateTime
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentInfo[]}
    content.vb: Function GetAssociatesDiaryInfoAsync(associateIds As Integer(), startTime As DateTime, endTime As DateTime, requestOptions As RequestOptions = Nothing) As Task(Of AppointmentInfo())
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociatesDiaryInfoAsync*
  nameWithType.vb: IAppointmentAgent.GetAssociatesDiaryInfoAsync(Int32(), DateTime, DateTime, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociatesDiaryInfoAsync(System.Int32(), System.DateTime, System.DateTime, SuperOffice.WebApi.RequestOptions)
  name.vb: GetAssociatesDiaryInfoAsync(Int32(), DateTime, DateTime, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentRecordsAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentRecordsAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetAppointmentRecordsAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetAppointmentRecordsAsync(Int32, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetAppointmentRecordsAsync(Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentRecordsAsync(System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet all records involved in a booking and/or recurring appointments. MotherId can be zero for repeating appointments or bookings, and recurrenceRuleId can be zero for bookings that are not repeating.\n"
  syntax:
    content: Task<Appointment[]> GetAppointmentRecordsAsync(int motherId, int recurrenceRuleId, RequestOptions requestOptions = null)
    parameters:
    - id: motherId
      type: System.Int32
      description: Appointment id of the owner of a booking
    - id: recurrenceRuleId
      type: System.Int32
      description: RecurrenceId of a recuring appointment
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
    content.vb: Function GetAppointmentRecordsAsync(motherId As Integer, recurrenceRuleId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentRecordsAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMySyncAppointmentsAsync(System.DateTime,System.DateTime,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetMySyncAppointmentsAsync(System.DateTime,System.DateTime,SuperOffice.WebApi.RequestOptions)
  id: GetMySyncAppointmentsAsync(System.DateTime,System.DateTime,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetMySyncAppointmentsAsync(DateTime, DateTime, RequestOptions)
  nameWithType: IAppointmentAgent.GetMySyncAppointmentsAsync(DateTime, DateTime, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMySyncAppointmentsAsync(System.DateTime, System.DateTime, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments within a time range. The appointments belong to the currently logged on user.\n"
  syntax:
    content: Task<AppointmentSyncData[]> GetMySyncAppointmentsAsync(DateTime startTime, DateTime endTime, RequestOptions requestOptions = null)
    parameters:
    - id: startTime
      type: System.DateTime
      description: The start of the time interval in which we want appointments. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentSyncData[]}
      description: Array of Appointments.
    content.vb: Function GetMySyncAppointmentsAsync(startTime As DateTime, endTime As DateTime, requestOptions As RequestOptions = Nothing) As Task(Of AppointmentSyncData())
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMySyncAppointmentsAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetDayInformationListByDatesAndAssociateAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetDayInformationListByDatesAndAssociateAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetDayInformationListByDatesAndAssociateAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetDayInformationListByDatesAndAssociateAsync(DateTime, DateTime, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetDayInformationListByDatesAndAssociateAsync(DateTime, DateTime, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetDayInformationListByDatesAndAssociateAsync(System.DateTime, System.DateTime, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet combined day information (activity + redletter summary) for one or more days according to the given date interval. The time portion of the dates is ignored. Private appointments are counted, but may not be visible through tooltips or other more detailed services.\n"
  syntax:
    content: Task<DayInformationListItem[]> GetDayInformationListByDatesAndAssociateAsync(DateTime startDate, DateTime endDate, int associateId, RequestOptions requestOptions = null)
    parameters:
    - id: startDate
      type: System.DateTime
      description: Start date of interval. Time portion is ignored.
    - id: endDate
      type: System.DateTime
      description: End date of interval. Time portion is ignored.
    - id: associateId
      type: System.Int32
      description: Associate id to identify the calendar to scan. If 0 is passed in, the currently authenticated associate is used instead.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DayInformationListItem[]}
      description: Exactly one item per day of the given time span is returned. Days where nothing happens will have all values set to 0, but will still be in the returned array. Start end dates are treated as inclusive.
    content.vb: Function GetDayInformationListByDatesAndAssociateAsync(startDate As DateTime, endDate As DateTime, associateId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of DayInformationListItem())
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetDayInformationListByDatesAndAssociateAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetActivityInformationListByDatesAndAssociateAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetActivityInformationListByDatesAndAssociateAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetActivityInformationListByDatesAndAssociateAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetActivityInformationListByDatesAndAssociateAsync(DateTime, DateTime, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetActivityInformationListByDatesAndAssociateAsync(DateTime, DateTime, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetActivityInformationListByDatesAndAssociateAsync(System.DateTime, System.DateTime, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet activity information for one or more days according to the given date interval. The time portion of the dates is ignored. Private appointments are counted, but may not be visible through tooltips or other more detailed services.\n"
  syntax:
    content: Task<ActivityInformationListItem[]> GetActivityInformationListByDatesAndAssociateAsync(DateTime startDate, DateTime endDate, int associateId, RequestOptions requestOptions = null)
    parameters:
    - id: startDate
      type: System.DateTime
      description: Start date of interval. Time portion is ignored.
    - id: endDate
      type: System.DateTime
      description: End date of interval. Time portion is ignored.
    - id: associateId
      type: System.Int32
      description: Associate id to identify the calendar to scan. If 0 is passed in, the currently authenticated associate is used instead.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ActivityInformationListItem[]}
      description: Exactly one item per day of the given time span is returned. Days where nothing happens will have all values set to 0, but will still be in the returned array. Start end dates are treated as inclusive.
    content.vb: Function GetActivityInformationListByDatesAndAssociateAsync(startDate As DateTime, endDate As DateTime, associateId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of ActivityInformationListItem())
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetActivityInformationListByDatesAndAssociateAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetRedLetterInformationListByDatesAndAssociateAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetRedLetterInformationListByDatesAndAssociateAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetRedLetterInformationListByDatesAndAssociateAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetRedLetterInformationListByDatesAndAssociateAsync(DateTime, DateTime, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetRedLetterInformationListByDatesAndAssociateAsync(DateTime, DateTime, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetRedLetterInformationListByDatesAndAssociateAsync(System.DateTime, System.DateTime, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet detailed red letter day information (redletter summary + individual day texts) for one or more days according to the given date interval. The time portion of the dates is ignored. \n"
  syntax:
    content: Task<RedLetterInformationListItem[]> GetRedLetterInformationListByDatesAndAssociateAsync(DateTime startDate, DateTime endDate, int associateId, RequestOptions requestOptions = null)
    parameters:
    - id: startDate
      type: System.DateTime
      description: Start date of interval. Time portion is ignored.
    - id: endDate
      type: System.DateTime
      description: End date of interval. Time portion is ignored.
    - id: associateId
      type: System.Int32
      description: Associate id to identify the calendar to scan. If 0 is passed in, the currently authenticated associate is used instead.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.RedLetterInformationListItem[]}
      description: Exactly one item per day of the given time span is returned. Days where nothing happens will have all values set to 0, but will still be in the returned array. Start end dates are treated as inclusive.
    content.vb: Function GetRedLetterInformationListByDatesAndAssociateAsync(startDate As DateTime, endDate As DateTime, associateId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of RedLetterInformationListItem())
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetRedLetterInformationListByDatesAndAssociateAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAlarmsAsync(System.Boolean,System.Boolean,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetAlarmsAsync(System.Boolean,System.Boolean,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetAlarmsAsync(System.Boolean,System.Boolean,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetAlarmsAsync(Boolean, Boolean, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetAlarmsAsync(Boolean, Boolean, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAlarmsAsync(System.Boolean, System.Boolean, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\n\n"
  syntax:
    content: Task<MultiAlarmData> GetAlarmsAsync(bool includeInvitations, bool includeAllAppointments, int defaultAlarmLeadTimeInMinutes, RequestOptions requestOptions = null)
    parameters:
    - id: includeInvitations
      type: System.Boolean
    - id: includeAllAppointments
      type: System.Boolean
    - id: defaultAlarmLeadTimeInMinutes
      type: System.Int32
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.MultiAlarmData}
    content.vb: Function GetAlarmsAsync(includeInvitations As Boolean, includeAllAppointments As Boolean, defaultAlarmLeadTimeInMinutes As Integer, requestOptions As RequestOptions = Nothing) As Task(Of MultiAlarmData)
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAlarmsAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetNextAvailableTimeAsync(System.Int32[],System.DateTime,System.DateTime,System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetNextAvailableTimeAsync(System.Int32[],System.DateTime,System.DateTime,System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: GetNextAvailableTimeAsync(System.Int32[],System.DateTime,System.DateTime,System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetNextAvailableTimeAsync(Int32[], DateTime, DateTime, Int32, Boolean, RequestOptions)
  nameWithType: IAppointmentAgent.GetNextAvailableTimeAsync(Int32[], DateTime, DateTime, Int32, Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetNextAvailableTimeAsync(System.Int32[], System.DateTime, System.DateTime, System.Int32, System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nAn array of the soonest-available working time slots.\n"
  syntax:
    content: Task<NextAvailableTime[]> GetNextAvailableTimeAsync(int[] associates, DateTime startTime, DateTime endTime, int count, bool isAllDay, RequestOptions requestOptions = null)
    parameters:
    - id: associates
      type: System.Int32[]
      description: Associate participants we want to account for while finding the next available times.
    - id: startTime
      type: System.DateTime
      description: 'The start of the time interval we want appointments from. '
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: How many next-available date time slots should be returned.
    - id: isAllDay
      type: System.Boolean
      description: Is the appointment an all day event.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.NextAvailableTime[]}
      description: Array of the soonest-available working time slots.
    content.vb: Function GetNextAvailableTimeAsync(associates As Integer(), startTime As DateTime, endTime As DateTime, count As Integer, isAllDay As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of NextAvailableTime())
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetNextAvailableTimeAsync*
  nameWithType.vb: IAppointmentAgent.GetNextAvailableTimeAsync(Int32(), DateTime, DateTime, Int32, Boolean, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IAppointmentAgent.GetNextAvailableTimeAsync(System.Int32(), System.DateTime, System.DateTime, System.Int32, System.Boolean, SuperOffice.WebApi.RequestOptions)
  name.vb: GetNextAvailableTimeAsync(Int32(), DateTime, DateTime, Int32, Boolean, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GenerateLeadAsync(System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GenerateLeadAsync(System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  id: GenerateLeadAsync(System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GenerateLeadAsync(Int32, String, String, Int32, String, String, String, String, String, String, String, String, RequestOptions)
  nameWithType: IAppointmentAgent.GenerateLeadAsync(Int32, String, String, Int32, String, String, String, String, String, String, String, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GenerateLeadAsync(System.Int32, System.String, System.String, System.Int32, System.String, System.String, System.String, System.String, System.String, System.String, System.String, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nAdds a sales lead (task) to a contact in SuperOffice. If the contact or person is known, the sales lead is added to the current contact. If not, a new contact is created, with the associate with ownerIdForNewContact as responsible (Our Contact). A relation is created between the contact and the person submitting the lead. Based on wether the person the request is made for is found or not, the following happens: If the person is found, the person, person&apos;s contact and sales representative is returned. If neither the person nor the contact is found a new person and contact is created (if sufficient data is supplied), and the person, person&apos;s contact and sales representative is returned. If the contact and not the person is found a new person is created on this contact, and the contact, salesrep, and person is returned (if there was enough data to return the person). If more than one contact is found a list of contacts is returned.\n"
  syntax:
    content: Task<SalesActivity> GenerateLeadAsync(int associateIdForNewContact, string leadDescription, string relation, int relationId, string leadContact, string leadPersonFirstname, string leadPersonLastname, string leadPersonEmail, string leadPhoneNumber, string creatorsContact, string creatorsFirstname, string creatorsLastname, RequestOptions requestOptions = null)
    parameters:
    - id: associateIdForNewContact
      type: System.Int32
      description: Associate id of the person set as &quot;Our Contact&quot; if a new Contact is created. Ensures that the sales lead is assigned to the correct salesman.
    - id: leadDescription
      type: System.String
      description: Description of the lead. The lead text as shown in SuperOffice
    - id: relation
      type: System.String
      description: The relation the person submitting the lead has to the contact.
    - id: relationId
      type: System.Int32
      description: Id of the relation type. Database specific.
    - id: leadContact
      type: System.String
      description: Name of the new or existing contact (company) the lead is created for.
    - id: leadPersonFirstname
      type: System.String
      description: Firstname of the contact&apos;s person.
    - id: leadPersonLastname
      type: System.String
      description: Lastname of the contact&apos;s person.
    - id: leadPersonEmail
      type: System.String
      description: Email to the contact&apos;s person.
    - id: leadPhoneNumber
      type: System.String
      description: Phone number of the contact or contact&apos;s person.
    - id: creatorsContact
      type: System.String
      description: The contact (company) of the person creating the lead
    - id: creatorsFirstname
      type: System.String
      description: The firstname of the person creating the lead
    - id: creatorsLastname
      type: System.String
      description: The lastname of the person creating the lead
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SalesActivity}
      description: True if successfull.
    content.vb: Function GenerateLeadAsync(associateIdForNewContact As Integer, leadDescription As String, relation As String, relationId As Integer, leadContact As String, leadPersonFirstname As String, leadPersonLastname As String, leadPersonEmail As String, leadPhoneNumber As String, creatorsContact As String, creatorsFirstname As String, creatorsLastname As String, requestOptions As RequestOptions = Nothing) As Task(Of SalesActivity)
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GenerateLeadAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.RequestForInfoAsync(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.RequestForInfoAsync(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  id: RequestForInfoAsync(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: RequestForInfoAsync(Int32, String, String, String, String, String, String, String, RequestOptions)
  nameWithType: IAppointmentAgent.RequestForInfoAsync(Int32, String, String, String, String, String, String, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.RequestForInfoAsync(System.Int32, System.String, System.String, System.String, System.String, System.String, System.String, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSubmits a request for information. The request is added to the task list of the user that is responsible for this contact. Based on wether the person the request is made for is found or not, the following happens: If the person is found, the person, person&apos;s contact and sales representative is returned. If neither the person nor the contact is found a new person and contact is created (if sufficient data is supplied), and the person, person&apos;s contact and sales representative is returned. If the contact and not the person is found a new person is created on this contact, and the contact, salesrep, and person is returned (if there was enough data to return the person). If more than one contact is found a list of contacts is returned.\n"
  syntax:
    content: Task<SalesActivity> RequestForInfoAsync(int associateIdForNewContact, string channel, string regarding, string contactName, string personFirstname, string personLastname, string emailAddress, string phoneNumber, RequestOptions requestOptions = null)
    parameters:
    - id: associateIdForNewContact
      type: System.Int32
      description: Associate id of the person set as &quot;Our Contact&quot; if a new Contact is created. Ensures that the request is assigned to the correct salesman.
    - id: channel
      type: System.String
      description: The requested channel, e.g. &quot;Phone&quot;
    - id: regarding
      type: System.String
      description: The text submitted by the user.
    - id: contactName
      type: System.String
      description: The name of the contact that the RFI will be added to. May be empty.
    - id: personFirstname
      type: System.String
      description: The firstname of the person that the RFI will be added to. May be empty.
    - id: personLastname
      type: System.String
      description: The lastname of the person that the RFI will be added to. May be empty.
    - id: emailAddress
      type: System.String
      description: The email address of the person that the RFI will be added to.
    - id: phoneNumber
      type: System.String
      description: Phone number of the contact or contact&apos;s person.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SalesActivity}
      description: True if the submission was successful.
    content.vb: Function RequestForInfoAsync(associateIdForNewContact As Integer, channel As String, regarding As String, contactName As String, personFirstname As String, personLastname As String, emailAddress As String, phoneNumber As String, requestOptions As RequestOptions = Nothing) As Task(Of SalesActivity)
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.RequestForInfoAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetSuggestedAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetSuggestedAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetSuggestedAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetSuggestedAppointmentAsync(Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetSuggestedAppointmentAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetSuggestedAppointmentAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific SuggestedAppointment object.                        \n"
  syntax:
    content: Task<SuggestedAppointment> GetSuggestedAppointmentAsync(int suggestedAppointmentId, RequestOptions requestOptions = null)
    parameters:
    - id: suggestedAppointmentId
      type: System.Int32
      description: The identifier of the SuggestedAppointment object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SuggestedAppointment}
      description: SuggestedAppointment
    content.vb: Function GetSuggestedAppointmentAsync(suggestedAppointmentId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of SuggestedAppointment)
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetSuggestedAppointmentAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetSuggestedAppointmentEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetSuggestedAppointmentEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetSuggestedAppointmentEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetSuggestedAppointmentEntityAsync(Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetSuggestedAppointmentEntityAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetSuggestedAppointmentEntityAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific SuggestedAppointmentEntity object.                        \n"
  syntax:
    content: Task<SuggestedAppointmentEntity> GetSuggestedAppointmentEntityAsync(int suggestedAppointmentEntityId, RequestOptions requestOptions = null)
    parameters:
    - id: suggestedAppointmentEntityId
      type: System.Int32
      description: The identifier of the SuggestedAppointmentEntity object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SuggestedAppointmentEntity}
      description: SuggestedAppointmentEntity
    content.vb: Function GetSuggestedAppointmentEntityAsync(suggestedAppointmentEntityId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of SuggestedAppointmentEntity)
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetSuggestedAppointmentEntityAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetTaskListItemAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetTaskListItemAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetTaskListItemAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetTaskListItemAsync(Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetTaskListItemAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetTaskListItemAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific TaskListItem object.                        \n"
  syntax:
    content: Task<TaskListItem> GetTaskListItemAsync(int taskListItemId, RequestOptions requestOptions = null)
    parameters:
    - id: taskListItemId
      type: System.Int32
      description: The identifier of the TaskListItem object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TaskListItem}
      description: TaskListItem
    content.vb: Function GetTaskListItemAsync(taskListItemId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of TaskListItem)
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetTaskListItemAsync*
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetTaskListItemsAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetTaskListItemsAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: GetTaskListItemsAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetTaskListItemsAsync(Boolean, RequestOptions)
  nameWithType: IAppointmentAgent.GetTaskListItemsAsync(Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetTaskListItemsAsync(System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets all takslist items\n"
  syntax:
    content: Task<TaskListItem[]> GetTaskListItemsAsync(bool includeDeleted, RequestOptions requestOptions = null)
    parameters:
    - id: includeDeleted
      type: System.Boolean
      description: Include deleted items
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TaskListItem[]}
      description: An array of tasklist items
    content.vb: Function GetTaskListItemsAsync(includeDeleted As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of TaskListItem())
  overload: SuperOffice.WebApi.Agents.IAppointmentAgent.GetTaskListItemsAsync*
references:
- uid: SuperOffice.WebApi.Agents
  commentId: N:SuperOffice.WebApi.Agents
  isExternal: true
  name: SuperOffice.WebApi.Agents
  nameWithType: SuperOffice.WebApi.Agents
  fullName: SuperOffice.WebApi.Agents
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityAsync
  isExternal: true
  name: CreateDefaultAppointmentEntityAsync
  nameWithType: IAppointmentAgent.CreateDefaultAppointmentEntityAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityAsync
- uid: SuperOffice.WebApi.RequestOptions
  commentId: T:SuperOffice.WebApi.RequestOptions
  parent: SuperOffice.WebApi
  isExternal: true
  name: RequestOptions
  nameWithType: RequestOptions
  fullName: SuperOffice.WebApi.RequestOptions
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentEntity}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentEntity}'
  definition: System.Threading.Tasks.Task`1
  name: Task<AppointmentEntity>
  nameWithType: Task<AppointmentEntity>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.AppointmentEntity>
  nameWithType.vb: Task(Of AppointmentEntity)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.AppointmentEntity)
  name.vb: Task(Of AppointmentEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.AppointmentEntity
    name: AppointmentEntity
    nameWithType: AppointmentEntity
    fullName: SuperOffice.WebApi.Data.AppointmentEntity
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.AppointmentEntity
    name: AppointmentEntity
    nameWithType: AppointmentEntity
    fullName: SuperOffice.WebApi.Data.AppointmentEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi
  commentId: N:SuperOffice.WebApi
  isExternal: true
  name: SuperOffice.WebApi
  nameWithType: SuperOffice.WebApi
  fullName: SuperOffice.WebApi
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveAppointmentEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.SaveAppointmentEntityAsync
  isExternal: true
  name: SaveAppointmentEntityAsync
  nameWithType: IAppointmentAgent.SaveAppointmentEntityAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveAppointmentEntityAsync
- uid: SuperOffice.WebApi.Data.AppointmentEntity
  commentId: T:SuperOffice.WebApi.Data.AppointmentEntity
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: AppointmentEntity
  nameWithType: AppointmentEntity
  fullName: SuperOffice.WebApi.Data.AppointmentEntity
- uid: SuperOffice.WebApi.Data
  commentId: N:SuperOffice.WebApi.Data
  isExternal: true
  name: SuperOffice.WebApi.Data
  nameWithType: SuperOffice.WebApi.Data
  fullName: SuperOffice.WebApi.Data
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.DeleteAppointmentEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.DeleteAppointmentEntityAsync
  isExternal: true
  name: DeleteAppointmentEntityAsync
  nameWithType: IAppointmentAgent.DeleteAppointmentEntityAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.DeleteAppointmentEntityAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultSuggestedAppointmentEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultSuggestedAppointmentEntityAsync
  isExternal: true
  name: CreateDefaultSuggestedAppointmentEntityAsync
  nameWithType: IAppointmentAgent.CreateDefaultSuggestedAppointmentEntityAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultSuggestedAppointmentEntityAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SuggestedAppointmentEntity}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SuggestedAppointmentEntity}'
  definition: System.Threading.Tasks.Task`1
  name: Task<SuggestedAppointmentEntity>
  nameWithType: Task<SuggestedAppointmentEntity>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.SuggestedAppointmentEntity>
  nameWithType.vb: Task(Of SuggestedAppointmentEntity)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.SuggestedAppointmentEntity)
  name.vb: Task(Of SuggestedAppointmentEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.SuggestedAppointmentEntity
    name: SuggestedAppointmentEntity
    nameWithType: SuggestedAppointmentEntity
    fullName: SuperOffice.WebApi.Data.SuggestedAppointmentEntity
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.SuggestedAppointmentEntity
    name: SuggestedAppointmentEntity
    nameWithType: SuggestedAppointmentEntity
    fullName: SuperOffice.WebApi.Data.SuggestedAppointmentEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveSuggestedAppointmentEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.SaveSuggestedAppointmentEntityAsync
  isExternal: true
  name: SaveSuggestedAppointmentEntityAsync
  nameWithType: IAppointmentAgent.SaveSuggestedAppointmentEntityAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveSuggestedAppointmentEntityAsync
- uid: SuperOffice.WebApi.Data.SuggestedAppointmentEntity
  commentId: T:SuperOffice.WebApi.Data.SuggestedAppointmentEntity
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: SuggestedAppointmentEntity
  nameWithType: SuggestedAppointmentEntity
  fullName: SuperOffice.WebApi.Data.SuggestedAppointmentEntity
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultTaskListItemAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultTaskListItemAsync
  isExternal: true
  name: CreateDefaultTaskListItemAsync
  nameWithType: IAppointmentAgent.CreateDefaultTaskListItemAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultTaskListItemAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TaskListItem}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TaskListItem}'
  definition: System.Threading.Tasks.Task`1
  name: Task<TaskListItem>
  nameWithType: Task<TaskListItem>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.TaskListItem>
  nameWithType.vb: Task(Of TaskListItem)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.TaskListItem)
  name.vb: Task(Of TaskListItem)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.TaskListItem
    name: TaskListItem
    nameWithType: TaskListItem
    fullName: SuperOffice.WebApi.Data.TaskListItem
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.TaskListItem
    name: TaskListItem
    nameWithType: TaskListItem
    fullName: SuperOffice.WebApi.Data.TaskListItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveTaskListItemAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.SaveTaskListItemAsync
  isExternal: true
  name: SaveTaskListItemAsync
  nameWithType: IAppointmentAgent.SaveTaskListItemAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveTaskListItemAsync
- uid: SuperOffice.WebApi.Data.TaskListItem
  commentId: T:SuperOffice.WebApi.Data.TaskListItem
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: TaskListItem
  nameWithType: TaskListItem
  fullName: SuperOffice.WebApi.Data.TaskListItem
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentAsync
  isExternal: true
  name: GetAppointmentAsync
  nameWithType: IAppointmentAgent.GetAppointmentAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Appointment>
  nameWithType: Task<Appointment>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.Appointment>
  nameWithType.vb: Task(Of Appointment)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.Appointment)
  name.vb: Task(Of Appointment)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.Appointment
    name: Appointment
    nameWithType: Appointment
    fullName: SuperOffice.WebApi.Data.Appointment
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.Appointment
    name: Appointment
    nameWithType: Appointment
    fullName: SuperOffice.WebApi.Data.Appointment
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleAppointmentStatusAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleAppointmentStatusAsync
  isExternal: true
  name: ToggleAppointmentStatusAsync
  nameWithType: IAppointmentAgent.ToggleAppointmentStatusAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleAppointmentStatusAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentStatus}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentStatus}'
  definition: System.Threading.Tasks.Task`1
  name: Task<AppointmentStatus>
  nameWithType: Task<AppointmentStatus>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.AppointmentStatus>
  nameWithType.vb: Task(Of AppointmentStatus)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.AppointmentStatus)
  name.vb: Task(Of AppointmentStatus)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.AppointmentStatus
    name: AppointmentStatus
    nameWithType: AppointmentStatus
    fullName: SuperOffice.WebApi.Data.AppointmentStatus
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.AppointmentStatus
    name: AppointmentStatus
    nameWithType: AppointmentStatus
    fullName: SuperOffice.WebApi.Data.AppointmentStatus
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleActivityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleActivityAsync
  isExternal: true
  name: ToggleActivityAsync
  nameWithType: IAppointmentAgent.ToggleActivityAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleActivityAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ActivityStatus}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ActivityStatus}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ActivityStatus>
  nameWithType: Task<ActivityStatus>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.ActivityStatus>
  nameWithType.vb: Task(Of ActivityStatus)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.ActivityStatus)
  name.vb: Task(Of ActivityStatus)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.ActivityStatus
    name: ActivityStatus
    nameWithType: ActivityStatus
    fullName: SuperOffice.WebApi.Data.ActivityStatus
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.ActivityStatus
    name: ActivityStatus
    nameWithType: ActivityStatus
    fullName: SuperOffice.WebApi.Data.ActivityStatus
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleActivitiesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleActivitiesAsync
  isExternal: true
  name: ToggleActivitiesAsync
  nameWithType: IAppointmentAgent.ToggleActivitiesAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleActivitiesAsync
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.SetActivityStatusAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.SetActivityStatusAsync
  isExternal: true
  name: SetActivityStatusAsync
  nameWithType: IAppointmentAgent.SetActivityStatusAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.SetActivityStatusAsync
- uid: SuperOffice.WebApi.Data.ActivityStatus
  commentId: T:SuperOffice.WebApi.Data.ActivityStatus
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: ActivityStatus
  nameWithType: ActivityStatus
  fullName: SuperOffice.WebApi.Data.ActivityStatus
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleAndSetActivitiesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleAndSetActivitiesAsync
  isExternal: true
  name: ToggleAndSetActivitiesAsync
  nameWithType: IAppointmentAgent.ToggleAndSetActivitiesAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleAndSetActivitiesAsync
- uid: System.Threading.Tasks.Task{System.String[]}
  commentId: '!:System.Threading.Tasks.Task{System.String[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<String[]>
  nameWithType: Task<String[]>
  fullName: System.Threading.Tasks.Task<System.String[]>
  nameWithType.vb: Task(Of String())
  fullName.vb: System.Threading.Tasks.Task(Of System.String())
  name.vb: Task(Of String())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentEntityAsync
  isExternal: true
  name: GetAppointmentEntityAsync
  nameWithType: IAppointmentAgent.GetAppointmentEntityAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentEntityAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAsync
  isExternal: true
  name: CreateDefaultAppointmentEntityByTypeAsync
  nameWithType: IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAsync
- uid: SuperOffice.WebApi.Data.TaskType
  commentId: T:SuperOffice.WebApi.Data.TaskType
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: TaskType
  nameWithType: TaskType
  fullName: SuperOffice.WebApi.Data.TaskType
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAppointmentEntityFromExistingAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAppointmentEntityFromExistingAsync
  isExternal: true
  name: CreateAppointmentEntityFromExistingAsync
  nameWithType: IAppointmentAgent.CreateAppointmentEntityFromExistingAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAppointmentEntityFromExistingAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptAsync
  isExternal: true
  name: AcceptAsync
  nameWithType: IAppointmentAgent.AcceptAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptAsync
- uid: SuperOffice.WebApi.Data.RecurrenceUpdateMode
  commentId: T:SuperOffice.WebApi.Data.RecurrenceUpdateMode
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: RecurrenceUpdateMode
  nameWithType: RecurrenceUpdateMode
  fullName: SuperOffice.WebApi.Data.RecurrenceUpdateMode
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAndAcceptAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAndAcceptAsync
  isExternal: true
  name: CreateAndAcceptAsync
  nameWithType: IAppointmentAgent.CreateAndAcceptAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAndAcceptAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptWithEmailConfirmationAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptWithEmailConfirmationAsync
  isExternal: true
  name: AcceptWithEmailConfirmationAsync
  nameWithType: IAppointmentAgent.AcceptWithEmailConfirmationAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptWithEmailConfirmationAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAndAcceptWithEmailConfirmationAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAndAcceptWithEmailConfirmationAsync
  isExternal: true
  name: CreateAndAcceptWithEmailConfirmationAsync
  nameWithType: IAppointmentAgent.CreateAndAcceptWithEmailConfirmationAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAndAcceptWithEmailConfirmationAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.RejectAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.RejectAsync
  isExternal: true
  name: RejectAsync
  nameWithType: IAppointmentAgent.RejectAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.RejectAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.RejectWithEmailConfirmationAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.RejectWithEmailConfirmationAsync
  isExternal: true
  name: RejectWithEmailConfirmationAsync
  nameWithType: IAppointmentAgent.RejectWithEmailConfirmationAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.RejectWithEmailConfirmationAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.DeclineInvitationFromEmailItemAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.DeclineInvitationFromEmailItemAsync
  isExternal: true
  name: DeclineInvitationFromEmailItemAsync
  nameWithType: IAppointmentAgent.DeclineInvitationFromEmailItemAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.DeclineInvitationFromEmailItemAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetOrganizerNameAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetOrganizerNameAsync
  isExternal: true
  name: GetOrganizerNameAsync
  nameWithType: IAppointmentAgent.GetOrganizerNameAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetOrganizerNameAsync
- uid: System.Threading.Tasks.Task{System.String}
  commentId: '!:System.Threading.Tasks.Task{System.String}'
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.SaveAsync
  isExternal: true
  name: SaveAsync
  nameWithType: IAppointmentAgent.SaveAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveAsync
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.WebApi.Data.EMailConnectionInfo
  commentId: T:SuperOffice.WebApi.Data.EMailConnectionInfo
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: EMailConnectionInfo
  nameWithType: EMailConnectionInfo
  fullName: SuperOffice.WebApi.Data.EMailConnectionInfo
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.DeleteAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.DeleteAsync
  isExternal: true
  name: DeleteAsync
  nameWithType: IAppointmentAgent.DeleteAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.DeleteAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CalculateDaysAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.CalculateDaysAsync
  isExternal: true
  name: CalculateDaysAsync
  nameWithType: IAppointmentAgent.CalculateDaysAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CalculateDaysAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.RecurrenceInfo}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.RecurrenceInfo}'
  definition: System.Threading.Tasks.Task`1
  name: Task<RecurrenceInfo>
  nameWithType: Task<RecurrenceInfo>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.RecurrenceInfo>
  nameWithType.vb: Task(Of RecurrenceInfo)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.RecurrenceInfo)
  name.vb: Task(Of RecurrenceInfo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.RecurrenceInfo
    name: RecurrenceInfo
    nameWithType: RecurrenceInfo
    fullName: SuperOffice.WebApi.Data.RecurrenceInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.RecurrenceInfo
    name: RecurrenceInfo
    nameWithType: RecurrenceInfo
    fullName: SuperOffice.WebApi.Data.RecurrenceInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.ValidateDaysAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.ValidateDaysAsync
  isExternal: true
  name: ValidateDaysAsync
  nameWithType: IAppointmentAgent.ValidateDaysAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.ValidateDaysAsync
- uid: System.DateTime[]
  isExternal: true
  name: DateTime[]
  nameWithType: DateTime[]
  fullName: System.DateTime[]
  nameWithType.vb: DateTime()
  fullName.vb: System.DateTime()
  name.vb: DateTime()
  spec.csharp:
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.RecurrenceDate[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.RecurrenceDate[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<RecurrenceDate[]>
  nameWithType: Task<RecurrenceDate[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.RecurrenceDate[]>
  nameWithType.vb: Task(Of RecurrenceDate())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.RecurrenceDate())
  name.vb: Task(Of RecurrenceDate())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.RecurrenceDate
    name: RecurrenceDate
    nameWithType: RecurrenceDate
    fullName: SuperOffice.WebApi.Data.RecurrenceDate
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.RecurrenceDate
    name: RecurrenceDate
    nameWithType: RecurrenceDate
    fullName: SuperOffice.WebApi.Data.RecurrenceDate
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultRecurrenceAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultRecurrenceAsync
  isExternal: true
  name: CreateDefaultRecurrenceAsync
  nameWithType: IAppointmentAgent.CreateDefaultRecurrenceAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultRecurrenceAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.AssignToAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.AssignToAsync
  isExternal: true
  name: AssignToAsync
  nameWithType: IAppointmentAgent.AssignToAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.AssignToAsync
- uid: SuperOffice.WebApi.Data.ParticipantInfo
  commentId: T:SuperOffice.WebApi.Data.ParticipantInfo
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: ParticipantInfo
  nameWithType: ParticipantInfo
  fullName: SuperOffice.WebApi.Data.ParticipantInfo
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.SetSeenAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.SetSeenAsync
  isExternal: true
  name: SetSeenAsync
  nameWithType: IAppointmentAgent.SetSeenAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.SetSeenAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.SetSeenManyAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.SetSeenManyAsync
  isExternal: true
  name: SetSeenManyAsync
  nameWithType: IAppointmentAgent.SetSeenManyAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.SetSeenManyAsync
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.MoveAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.MoveAsync
  isExternal: true
  name: MoveAsync
  nameWithType: IAppointmentAgent.MoveAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.MoveAsync
- uid: System.DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.MoveWithEmailAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.MoveWithEmailAsync
  isExternal: true
  name: MoveWithEmailAsync
  nameWithType: IAppointmentAgent.MoveWithEmailAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.MoveWithEmailAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptRejectedAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptRejectedAsync
  isExternal: true
  name: AcceptRejectedAsync
  nameWithType: IAppointmentAgent.AcceptRejectedAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptRejectedAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultRecurrenceByDateAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultRecurrenceByDateAsync
  isExternal: true
  name: CreateDefaultRecurrenceByDateAsync
  nameWithType: IAppointmentAgent.CreateDefaultRecurrenceByDateAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultRecurrenceByDateAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpBookingDeletedAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpBookingDeletedAsync
  isExternal: true
  name: CleanUpBookingDeletedAsync
  nameWithType: IAppointmentAgent.CleanUpBookingDeletedAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpBookingDeletedAsync
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: '!:System.Threading.Tasks.Task{System.Int32}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  nameWithType.vb: Task(Of Int32)
  fullName.vb: System.Threading.Tasks.Task(Of System.Int32)
  name.vb: Task(Of Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpBookingDeletedWithUpdateModeAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpBookingDeletedWithUpdateModeAsync
  isExternal: true
  name: CleanUpBookingDeletedWithUpdateModeAsync
  nameWithType: IAppointmentAgent.CleanUpBookingDeletedWithUpdateModeAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpBookingDeletedWithUpdateModeAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpRecurringBookingDeletedAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpRecurringBookingDeletedAsync
  isExternal: true
  name: CleanUpRecurringBookingDeletedAsync
  nameWithType: IAppointmentAgent.CleanUpRecurringBookingDeletedAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpRecurringBookingDeletedAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociateAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociateAsync
  isExternal: true
  name: CreateDefaultAppointmentEntityByTypeAndAssociateAsync
  nameWithType: IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociateAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociateAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetCanInsertForAssociatesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetCanInsertForAssociatesAsync
  isExternal: true
  name: GetCanInsertForAssociatesAsync
  nameWithType: IAppointmentAgent.GetCanInsertForAssociatesAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetCanInsertForAssociatesAsync
- uid: System.Threading.Tasks.Task{System.Boolean[]}
  commentId: '!:System.Threading.Tasks.Task{System.Boolean[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean[]>
  nameWithType: Task<Boolean[]>
  fullName: System.Threading.Tasks.Task<System.Boolean[]>
  nameWithType.vb: Task(Of Boolean())
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean())
  name.vb: Task(Of Boolean())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentHaveParticipantsWithEmailAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentHaveParticipantsWithEmailAsync
  isExternal: true
  name: GetAppointmentHaveParticipantsWithEmailAsync
  nameWithType: IAppointmentAgent.GetAppointmentHaveParticipantsWithEmailAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentHaveParticipantsWithEmailAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: '!:System.Threading.Tasks.Task{System.Boolean}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestionAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestionAsync
  isExternal: true
  name: CreateDefaultAppointmentEntityFromSaleSuggestionAsync
  nameWithType: IAppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestionAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestionAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetNextSuggestedAppointmentBySaleAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetNextSuggestedAppointmentBySaleAsync
  isExternal: true
  name: GetNextSuggestedAppointmentBySaleAsync
  nameWithType: IAppointmentAgent.GetNextSuggestedAppointmentBySaleAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetNextSuggestedAppointmentBySaleAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SuggestedAppointment}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SuggestedAppointment}'
  definition: System.Threading.Tasks.Task`1
  name: Task<SuggestedAppointment>
  nameWithType: Task<SuggestedAppointment>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.SuggestedAppointment>
  nameWithType.vb: Task(Of SuggestedAppointment)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.SuggestedAppointment)
  name.vb: Task(Of SuggestedAppointment)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.SuggestedAppointment
    name: SuggestedAppointment
    nameWithType: SuggestedAppointment
    fullName: SuperOffice.WebApi.Data.SuggestedAppointment
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.SuggestedAppointment
    name: SuggestedAppointment
    nameWithType: SuggestedAppointment
    fullName: SuperOffice.WebApi.Data.SuggestedAppointment
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultReOpenAppointmentAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultReOpenAppointmentAsync
  isExternal: true
  name: CreateDefaultReOpenAppointmentAsync
  nameWithType: IAppointmentAgent.CreateDefaultReOpenAppointmentAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultReOpenAppointmentAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestionAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestionAsync
  isExternal: true
  name: CreateDefaultAppointmentEntityFromProjectSuggestionAsync
  nameWithType: IAppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestionAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestionAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAppointmentForUIDAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAppointmentForUIDAsync
  isExternal: true
  name: CreateAppointmentForUIDAsync
  nameWithType: IAppointmentAgent.CreateAppointmentForUIDAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAppointmentForUIDAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentFromUIDAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentFromUIDAsync
  isExternal: true
  name: GetAppointmentFromUIDAsync
  nameWithType: IAppointmentAgent.GetAppointmentFromUIDAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentFromUIDAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CanAssignToProjectMemberAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.CanAssignToProjectMemberAsync
  isExternal: true
  name: CanAssignToProjectMemberAsync
  nameWithType: IAppointmentAgent.CanAssignToProjectMemberAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CanAssignToProjectMemberAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetUIDFromAppointmentIdAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetUIDFromAppointmentIdAsync
  isExternal: true
  name: GetUIDFromAppointmentIdAsync
  nameWithType: IAppointmentAgent.GetUIDFromAppointmentIdAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetUIDFromAppointmentIdAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentFromIcsResponseAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentFromIcsResponseAsync
  isExternal: true
  name: UpdateAppointmentFromIcsResponseAsync
  nameWithType: IAppointmentAgent.UpdateAppointmentFromIcsResponseAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentFromIcsResponseAsync
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.ValidateAppointmentEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.ValidateAppointmentEntityAsync
  isExternal: true
  name: ValidateAppointmentEntityAsync
  nameWithType: IAppointmentAgent.ValidateAppointmentEntityAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.ValidateAppointmentEntityAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.StringDictionary}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.StringDictionary}'
  definition: System.Threading.Tasks.Task`1
  name: Task<StringDictionary>
  nameWithType: Task<StringDictionary>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.StringDictionary>
  nameWithType.vb: Task(Of StringDictionary)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.StringDictionary)
  name.vb: Task(Of StringDictionary)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.StringDictionary
    name: StringDictionary
    nameWithType: StringDictionary
    fullName: SuperOffice.WebApi.Data.StringDictionary
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.StringDictionary
    name: StringDictionary
    nameWithType: StringDictionary
    fullName: SuperOffice.WebApi.Data.StringDictionary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.WillSendEmailAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.WillSendEmailAsync
  isExternal: true
  name: WillSendEmailAsync
  nameWithType: IAppointmentAgent.WillSendEmailAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.WillSendEmailAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptWithSmtpEmailConfirmationAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptWithSmtpEmailConfirmationAsync
  isExternal: true
  name: AcceptWithSmtpEmailConfirmationAsync
  nameWithType: IAppointmentAgent.AcceptWithSmtpEmailConfirmationAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptWithSmtpEmailConfirmationAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.RejectWithSmtpEmailConfirmationAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.RejectWithSmtpEmailConfirmationAsync
  isExternal: true
  name: RejectWithSmtpEmailConfirmationAsync
  nameWithType: IAppointmentAgent.RejectWithSmtpEmailConfirmationAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.RejectWithSmtpEmailConfirmationAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentEmailInvitationAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentEmailInvitationAsync
  isExternal: true
  name: GetAppointmentEmailInvitationAsync
  nameWithType: IAppointmentAgent.GetAppointmentEmailInvitationAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentEmailInvitationAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailEntity}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailEntity}'
  definition: System.Threading.Tasks.Task`1
  name: Task<EMailEntity>
  nameWithType: Task<EMailEntity>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.EMailEntity>
  nameWithType.vb: Task(Of EMailEntity)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.EMailEntity)
  name.vb: Task(Of EMailEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.EMailEntity
    name: EMailEntity
    nameWithType: EMailEntity
    fullName: SuperOffice.WebApi.Data.EMailEntity
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.EMailEntity
    name: EMailEntity
    nameWithType: EMailEntity
    fullName: SuperOffice.WebApi.Data.EMailEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveWithCustomInvitationAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.SaveWithCustomInvitationAsync
  isExternal: true
  name: SaveWithCustomInvitationAsync
  nameWithType: IAppointmentAgent.SaveWithCustomInvitationAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveWithCustomInvitationAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentSaveData}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentSaveData}'
  definition: System.Threading.Tasks.Task`1
  name: Task<AppointmentSaveData>
  nameWithType: Task<AppointmentSaveData>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.AppointmentSaveData>
  nameWithType.vb: Task(Of AppointmentSaveData)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.AppointmentSaveData)
  name.vb: Task(Of AppointmentSaveData)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.AppointmentSaveData
    name: AppointmentSaveData
    nameWithType: AppointmentSaveData
    fullName: SuperOffice.WebApi.Data.AppointmentSaveData
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.AppointmentSaveData
    name: AppointmentSaveData
    nameWithType: AppointmentSaveData
    fullName: SuperOffice.WebApi.Data.AppointmentSaveData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.ConvertAppointmentToTaskAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.ConvertAppointmentToTaskAsync
  isExternal: true
  name: ConvertAppointmentToTaskAsync
  nameWithType: IAppointmentAgent.ConvertAppointmentToTaskAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.ConvertAppointmentToTaskAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentListAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentListAsync
  isExternal: true
  name: GetAppointmentListAsync
  nameWithType: IAppointmentAgent.GetAppointmentListAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentListAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Appointment[]>
  nameWithType: Task<Appointment[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.Appointment[]>
  nameWithType.vb: Task(Of Appointment())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.Appointment())
  name.vb: Task(Of Appointment())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.Appointment
    name: Appointment
    nameWithType: Appointment
    fullName: SuperOffice.WebApi.Data.Appointment
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.Appointment
    name: Appointment
    nameWithType: Appointment
    fullName: SuperOffice.WebApi.Data.Appointment
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyAppointmentsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyAppointmentsAsync
  isExternal: true
  name: GetMyAppointmentsAsync
  nameWithType: IAppointmentAgent.GetMyAppointmentsAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyAppointmentsAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsAsync
  isExternal: true
  name: GetPersonAppointmentsAsync
  nameWithType: IAppointmentAgent.GetPersonAppointmentsAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyDiaryAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyDiaryAsync
  isExternal: true
  name: GetMyDiaryAsync
  nameWithType: IAppointmentAgent.GetMyDiaryAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyDiaryAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyTasksAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyTasksAsync
  isExternal: true
  name: GetMyTasksAsync
  nameWithType: IAppointmentAgent.GetMyTasksAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyTasksAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonDiaryAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonDiaryAsync
  isExternal: true
  name: GetPersonDiaryAsync
  nameWithType: IAppointmentAgent.GetPersonDiaryAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonDiaryAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonTasksAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonTasksAsync
  isExternal: true
  name: GetPersonTasksAsync
  nameWithType: IAppointmentAgent.GetPersonTasksAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonTasksAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTypeAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTypeAsync
  isExternal: true
  name: GetPersonAppointmentsByTypeAsync
  nameWithType: IAppointmentAgent.GetPersonAppointmentsByTypeAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTypeAsync
- uid: SuperOffice.WebApi.Data.AppointmentType
  commentId: T:SuperOffice.WebApi.Data.AppointmentType
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: AppointmentType
  nameWithType: AppointmentType
  fullName: SuperOffice.WebApi.Data.AppointmentType
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsAsync
  isExternal: true
  name: GetProjectAppointmentsAsync
  nameWithType: IAppointmentAgent.GetProjectAppointmentsAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTypeAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTypeAsync
  isExternal: true
  name: GetProjectAppointmentsByTypeAsync
  nameWithType: IAppointmentAgent.GetProjectAppointmentsByTypeAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTypeAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsAsync
  isExternal: true
  name: GetContactAppointmentsAsync
  nameWithType: IAppointmentAgent.GetContactAppointmentsAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTypeAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTypeAsync
  isExternal: true
  name: GetContactAppointmentsByTypeAsync
  nameWithType: IAppointmentAgent.GetContactAppointmentsByTypeAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTypeAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsAsync
  isExternal: true
  name: GetProjectMemberAppointmentsAsync
  nameWithType: IAppointmentAgent.GetProjectMemberAppointmentsAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTypeAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTypeAsync
  isExternal: true
  name: GetProjectMemberAppointmentsByTypeAsync
  nameWithType: IAppointmentAgent.GetProjectMemberAppointmentsByTypeAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTypeAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTaskAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTaskAsync
  isExternal: true
  name: GetPersonAppointmentsByTaskAsync
  nameWithType: IAppointmentAgent.GetPersonAppointmentsByTaskAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTaskAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTasksAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTasksAsync
  isExternal: true
  name: GetPersonAppointmentsByTasksAsync
  nameWithType: IAppointmentAgent.GetPersonAppointmentsByTasksAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTasksAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTaskHeadingAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTaskHeadingAsync
  isExternal: true
  name: GetPersonAppointmentsByTaskHeadingAsync
  nameWithType: IAppointmentAgent.GetPersonAppointmentsByTaskHeadingAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTaskHeadingAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTaskAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTaskAsync
  isExternal: true
  name: GetProjectAppointmentsByTaskAsync
  nameWithType: IAppointmentAgent.GetProjectAppointmentsByTaskAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTaskAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTasksAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTasksAsync
  isExternal: true
  name: GetProjectAppointmentsByTasksAsync
  nameWithType: IAppointmentAgent.GetProjectAppointmentsByTasksAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTasksAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTaskHeadingAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTaskHeadingAsync
  isExternal: true
  name: GetProjectAppointmentsByTaskHeadingAsync
  nameWithType: IAppointmentAgent.GetProjectAppointmentsByTaskHeadingAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTaskHeadingAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTaskAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTaskAsync
  isExternal: true
  name: GetProjectMemberAppointmentsByTaskAsync
  nameWithType: IAppointmentAgent.GetProjectMemberAppointmentsByTaskAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTaskAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTasksAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTasksAsync
  isExternal: true
  name: GetProjectMemberAppointmentsByTasksAsync
  nameWithType: IAppointmentAgent.GetProjectMemberAppointmentsByTasksAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTasksAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTaskHeadingAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTaskHeadingAsync
  isExternal: true
  name: GetProjectMemberAppointmentsByTaskHeadingAsync
  nameWithType: IAppointmentAgent.GetProjectMemberAppointmentsByTaskHeadingAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTaskHeadingAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTaskAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTaskAsync
  isExternal: true
  name: GetContactAppointmentsByTaskAsync
  nameWithType: IAppointmentAgent.GetContactAppointmentsByTaskAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTaskAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTasksAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTasksAsync
  isExternal: true
  name: GetContactAppointmentsByTasksAsync
  nameWithType: IAppointmentAgent.GetContactAppointmentsByTasksAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTasksAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTaskHeadingAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTaskHeadingAsync
  isExternal: true
  name: GetContactAppointmentsByTaskHeadingAsync
  nameWithType: IAppointmentAgent.GetContactAppointmentsByTaskHeadingAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTaskHeadingAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPublishedAppointmentAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetPublishedAppointmentAsync
  isExternal: true
  name: GetPublishedAppointmentAsync
  nameWithType: IAppointmentAgent.GetPublishedAppointmentAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPublishedAppointmentAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPublishedAppointmentsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetPublishedAppointmentsAsync
  isExternal: true
  name: GetPublishedAppointmentsAsync
  nameWithType: IAppointmentAgent.GetPublishedAppointmentsAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPublishedAppointmentsAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyPublishedAppointmentsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyPublishedAppointmentsAsync
  isExternal: true
  name: GetMyPublishedAppointmentsAsync
  nameWithType: IAppointmentAgent.GetMyPublishedAppointmentsAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyPublishedAppointmentsAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPublishedProjectAppointmentsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetPublishedProjectAppointmentsAsync
  isExternal: true
  name: GetPublishedProjectAppointmentsAsync
  nameWithType: IAppointmentAgent.GetPublishedProjectAppointmentsAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPublishedProjectAppointmentsAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentsByTaskHeadingAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentsByTaskHeadingAsync
  isExternal: true
  name: GetAppointmentsByTaskHeadingAsync
  nameWithType: IAppointmentAgent.GetAppointmentsByTaskHeadingAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentsByTaskHeadingAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociateDiaryAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociateDiaryAsync
  isExternal: true
  name: GetAssociateDiaryAsync
  nameWithType: IAppointmentAgent.GetAssociateDiaryAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociateDiaryAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetDiaryByGroupAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetDiaryByGroupAsync
  isExternal: true
  name: GetDiaryByGroupAsync
  nameWithType: IAppointmentAgent.GetDiaryByGroupAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetDiaryByGroupAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentAsync
  isExternal: true
  name: UpdateAppointmentAsync
  nameWithType: IAppointmentAgent.UpdateAppointmentAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentWithModeAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentWithModeAsync
  isExternal: true
  name: UpdateAppointmentWithModeAsync
  nameWithType: IAppointmentAgent.UpdateAppointmentWithModeAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentWithModeAsync
- uid: SuperOffice.WebApi.Data.AppointmentStatus
  commentId: T:SuperOffice.WebApi.Data.AppointmentStatus
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: AppointmentStatus
  nameWithType: AppointmentStatus
  fullName: SuperOffice.WebApi.Data.AppointmentStatus
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentWithModeAndEmailAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentWithModeAndEmailAsync
  isExternal: true
  name: UpdateAppointmentWithModeAndEmailAsync
  nameWithType: IAppointmentAgent.UpdateAppointmentWithModeAndEmailAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentWithModeAndEmailAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociatesDiaryAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociatesDiaryAsync
  isExternal: true
  name: GetAssociatesDiaryAsync
  nameWithType: IAppointmentAgent.GetAssociatesDiaryAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociatesDiaryAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociatesDiaryInfoAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociatesDiaryInfoAsync
  isExternal: true
  name: GetAssociatesDiaryInfoAsync
  nameWithType: IAppointmentAgent.GetAssociatesDiaryInfoAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociatesDiaryInfoAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentInfo[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentInfo[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<AppointmentInfo[]>
  nameWithType: Task<AppointmentInfo[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.AppointmentInfo[]>
  nameWithType.vb: Task(Of AppointmentInfo())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.AppointmentInfo())
  name.vb: Task(Of AppointmentInfo())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.AppointmentInfo
    name: AppointmentInfo
    nameWithType: AppointmentInfo
    fullName: SuperOffice.WebApi.Data.AppointmentInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.AppointmentInfo
    name: AppointmentInfo
    nameWithType: AppointmentInfo
    fullName: SuperOffice.WebApi.Data.AppointmentInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentRecordsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentRecordsAsync
  isExternal: true
  name: GetAppointmentRecordsAsync
  nameWithType: IAppointmentAgent.GetAppointmentRecordsAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentRecordsAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMySyncAppointmentsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetMySyncAppointmentsAsync
  isExternal: true
  name: GetMySyncAppointmentsAsync
  nameWithType: IAppointmentAgent.GetMySyncAppointmentsAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMySyncAppointmentsAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentSyncData[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentSyncData[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<AppointmentSyncData[]>
  nameWithType: Task<AppointmentSyncData[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.AppointmentSyncData[]>
  nameWithType.vb: Task(Of AppointmentSyncData())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.AppointmentSyncData())
  name.vb: Task(Of AppointmentSyncData())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.AppointmentSyncData
    name: AppointmentSyncData
    nameWithType: AppointmentSyncData
    fullName: SuperOffice.WebApi.Data.AppointmentSyncData
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.AppointmentSyncData
    name: AppointmentSyncData
    nameWithType: AppointmentSyncData
    fullName: SuperOffice.WebApi.Data.AppointmentSyncData
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetDayInformationListByDatesAndAssociateAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetDayInformationListByDatesAndAssociateAsync
  isExternal: true
  name: GetDayInformationListByDatesAndAssociateAsync
  nameWithType: IAppointmentAgent.GetDayInformationListByDatesAndAssociateAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetDayInformationListByDatesAndAssociateAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DayInformationListItem[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DayInformationListItem[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<DayInformationListItem[]>
  nameWithType: Task<DayInformationListItem[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.DayInformationListItem[]>
  nameWithType.vb: Task(Of DayInformationListItem())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.DayInformationListItem())
  name.vb: Task(Of DayInformationListItem())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.DayInformationListItem
    name: DayInformationListItem
    nameWithType: DayInformationListItem
    fullName: SuperOffice.WebApi.Data.DayInformationListItem
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.DayInformationListItem
    name: DayInformationListItem
    nameWithType: DayInformationListItem
    fullName: SuperOffice.WebApi.Data.DayInformationListItem
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetActivityInformationListByDatesAndAssociateAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetActivityInformationListByDatesAndAssociateAsync
  isExternal: true
  name: GetActivityInformationListByDatesAndAssociateAsync
  nameWithType: IAppointmentAgent.GetActivityInformationListByDatesAndAssociateAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetActivityInformationListByDatesAndAssociateAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ActivityInformationListItem[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ActivityInformationListItem[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ActivityInformationListItem[]>
  nameWithType: Task<ActivityInformationListItem[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.ActivityInformationListItem[]>
  nameWithType.vb: Task(Of ActivityInformationListItem())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.ActivityInformationListItem())
  name.vb: Task(Of ActivityInformationListItem())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.ActivityInformationListItem
    name: ActivityInformationListItem
    nameWithType: ActivityInformationListItem
    fullName: SuperOffice.WebApi.Data.ActivityInformationListItem
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.ActivityInformationListItem
    name: ActivityInformationListItem
    nameWithType: ActivityInformationListItem
    fullName: SuperOffice.WebApi.Data.ActivityInformationListItem
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetRedLetterInformationListByDatesAndAssociateAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetRedLetterInformationListByDatesAndAssociateAsync
  isExternal: true
  name: GetRedLetterInformationListByDatesAndAssociateAsync
  nameWithType: IAppointmentAgent.GetRedLetterInformationListByDatesAndAssociateAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetRedLetterInformationListByDatesAndAssociateAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.RedLetterInformationListItem[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.RedLetterInformationListItem[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<RedLetterInformationListItem[]>
  nameWithType: Task<RedLetterInformationListItem[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.RedLetterInformationListItem[]>
  nameWithType.vb: Task(Of RedLetterInformationListItem())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.RedLetterInformationListItem())
  name.vb: Task(Of RedLetterInformationListItem())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.RedLetterInformationListItem
    name: RedLetterInformationListItem
    nameWithType: RedLetterInformationListItem
    fullName: SuperOffice.WebApi.Data.RedLetterInformationListItem
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.RedLetterInformationListItem
    name: RedLetterInformationListItem
    nameWithType: RedLetterInformationListItem
    fullName: SuperOffice.WebApi.Data.RedLetterInformationListItem
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAlarmsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetAlarmsAsync
  isExternal: true
  name: GetAlarmsAsync
  nameWithType: IAppointmentAgent.GetAlarmsAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAlarmsAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.MultiAlarmData}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.MultiAlarmData}'
  definition: System.Threading.Tasks.Task`1
  name: Task<MultiAlarmData>
  nameWithType: Task<MultiAlarmData>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.MultiAlarmData>
  nameWithType.vb: Task(Of MultiAlarmData)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.MultiAlarmData)
  name.vb: Task(Of MultiAlarmData)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.MultiAlarmData
    name: MultiAlarmData
    nameWithType: MultiAlarmData
    fullName: SuperOffice.WebApi.Data.MultiAlarmData
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.MultiAlarmData
    name: MultiAlarmData
    nameWithType: MultiAlarmData
    fullName: SuperOffice.WebApi.Data.MultiAlarmData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetNextAvailableTimeAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetNextAvailableTimeAsync
  isExternal: true
  name: GetNextAvailableTimeAsync
  nameWithType: IAppointmentAgent.GetNextAvailableTimeAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetNextAvailableTimeAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.NextAvailableTime[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.NextAvailableTime[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<NextAvailableTime[]>
  nameWithType: Task<NextAvailableTime[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.NextAvailableTime[]>
  nameWithType.vb: Task(Of NextAvailableTime())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.NextAvailableTime())
  name.vb: Task(Of NextAvailableTime())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.NextAvailableTime
    name: NextAvailableTime
    nameWithType: NextAvailableTime
    fullName: SuperOffice.WebApi.Data.NextAvailableTime
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.NextAvailableTime
    name: NextAvailableTime
    nameWithType: NextAvailableTime
    fullName: SuperOffice.WebApi.Data.NextAvailableTime
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GenerateLeadAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GenerateLeadAsync
  isExternal: true
  name: GenerateLeadAsync
  nameWithType: IAppointmentAgent.GenerateLeadAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GenerateLeadAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SalesActivity}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SalesActivity}'
  definition: System.Threading.Tasks.Task`1
  name: Task<SalesActivity>
  nameWithType: Task<SalesActivity>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.SalesActivity>
  nameWithType.vb: Task(Of SalesActivity)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.SalesActivity)
  name.vb: Task(Of SalesActivity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.SalesActivity
    name: SalesActivity
    nameWithType: SalesActivity
    fullName: SuperOffice.WebApi.Data.SalesActivity
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.SalesActivity
    name: SalesActivity
    nameWithType: SalesActivity
    fullName: SuperOffice.WebApi.Data.SalesActivity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.RequestForInfoAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.RequestForInfoAsync
  isExternal: true
  name: RequestForInfoAsync
  nameWithType: IAppointmentAgent.RequestForInfoAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.RequestForInfoAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetSuggestedAppointmentAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetSuggestedAppointmentAsync
  isExternal: true
  name: GetSuggestedAppointmentAsync
  nameWithType: IAppointmentAgent.GetSuggestedAppointmentAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetSuggestedAppointmentAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetSuggestedAppointmentEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetSuggestedAppointmentEntityAsync
  isExternal: true
  name: GetSuggestedAppointmentEntityAsync
  nameWithType: IAppointmentAgent.GetSuggestedAppointmentEntityAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetSuggestedAppointmentEntityAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetTaskListItemAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetTaskListItemAsync
  isExternal: true
  name: GetTaskListItemAsync
  nameWithType: IAppointmentAgent.GetTaskListItemAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetTaskListItemAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetTaskListItemsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IAppointmentAgent.GetTaskListItemsAsync
  isExternal: true
  name: GetTaskListItemsAsync
  nameWithType: IAppointmentAgent.GetTaskListItemsAsync
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetTaskListItemsAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TaskListItem[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TaskListItem[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<TaskListItem[]>
  nameWithType: Task<TaskListItem[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.TaskListItem[]>
  nameWithType.vb: Task(Of TaskListItem())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.TaskListItem())
  name.vb: Task(Of TaskListItem())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.TaskListItem
    name: TaskListItem
    nameWithType: TaskListItem
    fullName: SuperOffice.WebApi.Data.TaskListItem
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.TaskListItem
    name: TaskListItem
    nameWithType: TaskListItem
    fullName: SuperOffice.WebApi.Data.TaskListItem
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
