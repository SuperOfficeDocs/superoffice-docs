### YamlMime:ManagedReference
items:
- uid: SuperOffice.WebApi.Agents.IArchiveAgent
  commentId: T:SuperOffice.WebApi.Agents.IArchiveAgent
  id: IArchiveAgent
  parent: SuperOffice.WebApi.Agents
  children:
  - SuperOffice.WebApi.Agents.IArchiveAgent.CreateDefaultArchiveListResultAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IArchiveAgent.ExportArchiveAsync(System.String,System.String,System.String[],System.String[],SuperOffice.WebApi.Data.ArchiveOrderByInfo[],SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],System.String,System.String[],System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IArchiveAgent.GetActivityFilterAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveConfigurationAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveConfigurationV2Async(System.String,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveConfigurationWithContextAsync(System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveList2Async(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListAsync(System.String,System.String,SuperOffice.WebApi.Data.ArchiveOrderByInfo[],SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],System.String[],System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumns2Async(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsAsync(System.String,System.String[],SuperOffice.WebApi.Data.ArchiveOrderByInfo[],SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],System.String[],System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithContext2Async(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithContextAsync(System.String,System.String[],SuperOffice.WebApi.Data.ArchiveOrderByInfo[],SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],System.String[],System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithHeader2Async(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithHeaderAsync(System.String,System.String[],SuperOffice.WebApi.Data.ArchiveOrderByInfo[],SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],System.String[],System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithHeaderWithContext2Async(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithHeaderWithContextAsync(System.String,System.String[],SuperOffice.WebApi.Data.ArchiveOrderByInfo[],SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],System.String[],System.Int32,System.Int32,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListWithContext2Async(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListWithContextAsync(System.String,System.String,SuperOffice.WebApi.Data.ArchiveOrderByInfo[],SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],System.String[],System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IArchiveAgent.GetAvailableColumnsAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IArchiveAgent.GetAvailableEntitiesAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IArchiveAgent.GetGroupAssociateIdsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IArchiveAgent.GetProviderNamesAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IArchiveAgent.GetRelatedData2Async(System.String,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IArchiveAgent.GetRelatedDataAsync(System.String,System.Int32,System.String[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IArchiveAgent.SetActivityFilterAsync(SuperOffice.WebApi.Data.ActivityFilter,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IArchiveAgent.SetChosenColumnsAsync(System.String,System.String,System.String[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IArchiveAgent.SetChosenColumnsV2Async(System.String,System.String,System.String,System.String,System.String[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IArchiveAgent.SetChosenEntitiesAsync(System.String,System.String,System.String[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IArchiveAgent.SetChosenEntitiesV2Async(System.String,System.String,System.String,System.String,System.String[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IArchiveAgent.SetColumnWidthsAsync(System.String,System.String[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IArchiveAgent.SetColumnWidthsV2Async(System.String,System.String,System.String,System.String,System.String[],SuperOffice.WebApi.RequestOptions)
  langs:
  - csharp
  - vb
  name: IArchiveAgent
  nameWithType: IArchiveAgent
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent
  type: Interface
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: ArchiveList functions of all kinds
  example: []
  syntax:
    content: 'public interface IArchiveAgent : IDisposable'
    content.vb: Public Interface IArchiveAgent Inherits IDisposable
  inheritedMembers:
  - System.IDisposable.Dispose
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.CreateDefaultArchiveListResultAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IArchiveAgent.CreateDefaultArchiveListResultAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultArchiveListResultAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IArchiveAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultArchiveListResultAsync(RequestOptions)
  nameWithType: IArchiveAgent.CreateDefaultArchiveListResultAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.CreateDefaultArchiveListResultAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: >-
    Set default values into a new ArchiveListResult.

    NetServer calculates default values on the entity, which is required when creating/storing a new instance
  example: []
  syntax:
    content: Task<ArchiveListResult> CreateDefaultArchiveListResultAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ArchiveListResult}
      description: A blank ArchiveListResult
    content.vb: Function CreateDefaultArchiveListResultAsync(requestOptions As RequestOptions = Nothing) As Task(Of ArchiveListResult)
  overload: SuperOffice.WebApi.Agents.IArchiveAgent.CreateDefaultArchiveListResultAsync*
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.GetActivityFilterAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IArchiveAgent.GetActivityFilterAsync(SuperOffice.WebApi.RequestOptions)
  id: GetActivityFilterAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IArchiveAgent
  langs:
  - csharp
  - vb
  name: GetActivityFilterAsync(RequestOptions)
  nameWithType: IArchiveAgent.GetActivityFilterAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.GetActivityFilterAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Get activity filter for the specified list.
  example: []
  syntax:
    content: Task<ActivityFilter> GetActivityFilterAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ActivityFilter}
      description: The activity filter for the specified list
    content.vb: Function GetActivityFilterAsync(requestOptions As RequestOptions = Nothing) As Task(Of ActivityFilter)
  overload: SuperOffice.WebApi.Agents.IArchiveAgent.GetActivityFilterAsync*
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.SetActivityFilterAsync(SuperOffice.WebApi.Data.ActivityFilter,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IArchiveAgent.SetActivityFilterAsync(SuperOffice.WebApi.Data.ActivityFilter,SuperOffice.WebApi.RequestOptions)
  id: SetActivityFilterAsync(SuperOffice.WebApi.Data.ActivityFilter,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IArchiveAgent
  langs:
  - csharp
  - vb
  name: SetActivityFilterAsync(ActivityFilter, RequestOptions)
  nameWithType: IArchiveAgent.SetActivityFilterAsync(ActivityFilter, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.SetActivityFilterAsync(SuperOffice.WebApi.Data.ActivityFilter, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Set activity filter for the specified list.
  example: []
  syntax:
    content: Task SetActivityFilterAsync(ActivityFilter activityFilter, RequestOptions requestOptions = null)
    parameters:
    - id: activityFilter
      type: SuperOffice.WebApi.Data.ActivityFilter
      description: New activity filter
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function SetActivityFilterAsync(activityFilter As ActivityFilter, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IArchiveAgent.SetActivityFilterAsync*
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.GetGroupAssociateIdsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IArchiveAgent.GetGroupAssociateIdsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetGroupAssociateIdsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IArchiveAgent
  langs:
  - csharp
  - vb
  name: GetGroupAssociateIdsAsync(int[], RequestOptions)
  nameWithType: IArchiveAgent.GetGroupAssociateIdsAsync(int[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.GetGroupAssociateIdsAsync(int[], SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Returns the  associate ids that belongs to the given groups
  example: []
  syntax:
    content: Task<int[]> GetGroupAssociateIdsAsync(int[] groupIds, RequestOptions requestOptions = null)
    parameters:
    - id: groupIds
      type: System.Int32[]
      description: Array of group ids
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{System.Int32[]}
      description: Array of associate ids
    content.vb: Function GetGroupAssociateIdsAsync(groupIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of Integer())
  overload: SuperOffice.WebApi.Agents.IArchiveAgent.GetGroupAssociateIdsAsync*
  nameWithType.vb: IArchiveAgent.GetGroupAssociateIdsAsync(Integer(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IArchiveAgent.GetGroupAssociateIdsAsync(Integer(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetGroupAssociateIdsAsync(Integer(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveConfigurationAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveConfigurationAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetArchiveConfigurationAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IArchiveAgent
  langs:
  - csharp
  - vb
  name: GetArchiveConfigurationAsync(string, string, RequestOptions)
  nameWithType: IArchiveAgent.GetArchiveConfigurationAsync(string, string, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveConfigurationAsync(string, string, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Get the configuration for one archive. The configuration is keyed by a combination of archive provider name and gui name. The archive provider name must match an archive provider plugin; the gui name is an arbitrary string used to distinguish multiple occurrences of the same underlying provider in a gui.
  example: []
  syntax:
    content: Task<ArchiveConfiguration> GetArchiveConfigurationAsync(string guiName, string providerName, RequestOptions requestOptions = null)
    parameters:
    - id: guiName
      type: System.String
      description: String that identifies the archive in the GUI, must be the same when fetching and storing configurations, but does not otherwise have to match anything.
    - id: providerName
      type: System.String
      description: Name of archive provider, must match one of the plugins known to the ArchiveProviderFactory.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ArchiveConfiguration}
      description: Archive configuration consisting of column information, orderby information and entities
    content.vb: Function GetArchiveConfigurationAsync(guiName As String, providerName As String, requestOptions As RequestOptions = Nothing) As Task(Of ArchiveConfiguration)
  overload: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveConfigurationAsync*
  nameWithType.vb: IArchiveAgent.GetArchiveConfigurationAsync(String, String, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveConfigurationAsync(String, String, SuperOffice.WebApi.RequestOptions)
  name.vb: GetArchiveConfigurationAsync(String, String, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveConfigurationWithContextAsync(System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveConfigurationWithContextAsync(System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetArchiveConfigurationWithContextAsync(System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IArchiveAgent
  langs:
  - csharp
  - vb
  name: GetArchiveConfigurationWithContextAsync(string, string, string, RequestOptions)
  nameWithType: IArchiveAgent.GetArchiveConfigurationWithContextAsync(string, string, string, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveConfigurationWithContextAsync(string, string, string, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Get the configuration for one archive, with context parameter. The configuration is keyed by a combination of archive provider name and gui name. The archive provider name must match an archive provider plugin; the gui name is an arbitrary string used to distinguish multiple occurrences of the same underlying provider in a gui.
  example: []
  syntax:
    content: Task<ArchiveConfiguration> GetArchiveConfigurationWithContextAsync(string guiName, string providerName, string context, RequestOptions requestOptions = null)
    parameters:
    - id: guiName
      type: System.String
      description: String that identifies the archive in the GUI, must be the same when fetching and storing configurations, but does not otherwise have to match anything.
    - id: providerName
      type: System.String
      description: Name of archive provider, must match one of the plugins known to the ArchiveProviderFactory.
    - id: context
      type: System.String
      description: Context parameter, url-encoded string context parameter for ArchiveProvider constructor
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ArchiveConfiguration}
      description: Archive configuration consisting of column information, orderby information and entities
    content.vb: Function GetArchiveConfigurationWithContextAsync(guiName As String, providerName As String, context As String, requestOptions As RequestOptions = Nothing) As Task(Of ArchiveConfiguration)
  overload: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveConfigurationWithContextAsync*
  nameWithType.vb: IArchiveAgent.GetArchiveConfigurationWithContextAsync(String, String, String, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveConfigurationWithContextAsync(String, String, String, SuperOffice.WebApi.RequestOptions)
  name.vb: GetArchiveConfigurationWithContextAsync(String, String, String, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.SetColumnWidthsAsync(System.String,System.String[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IArchiveAgent.SetColumnWidthsAsync(System.String,System.String[],SuperOffice.WebApi.RequestOptions)
  id: SetColumnWidthsAsync(System.String,System.String[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IArchiveAgent
  langs:
  - csharp
  - vb
  name: SetColumnWidthsAsync(string, string[], RequestOptions)
  nameWithType: IArchiveAgent.SetColumnWidthsAsync(string, string[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.SetColumnWidthsAsync(string, string[], SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Set the column widths for the given set of columns and GUI name.
  example: []
  syntax:
    content: Task SetColumnWidthsAsync(string guiName, string[] columnWidths, RequestOptions requestOptions = null)
    parameters:
    - id: guiName
      type: System.String
      description: String that identifies the archive in the GUI, must be the same when fetching and storing configurations, but does not otherwise have to match anything.
    - id: columnWidths
      type: System.String[]
      description: Array of column widths. A column width is specified either as a fixed number of character (10c) or as a percentage (10%). Percentages will be recalculated so that they add up to exactly 100 when the configuration is fetched again.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function SetColumnWidthsAsync(guiName As String, columnWidths As String(), requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IArchiveAgent.SetColumnWidthsAsync*
  nameWithType.vb: IArchiveAgent.SetColumnWidthsAsync(String, String(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IArchiveAgent.SetColumnWidthsAsync(String, String(), SuperOffice.WebApi.RequestOptions)
  name.vb: SetColumnWidthsAsync(String, String(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.SetChosenEntitiesAsync(System.String,System.String,System.String[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IArchiveAgent.SetChosenEntitiesAsync(System.String,System.String,System.String[],SuperOffice.WebApi.RequestOptions)
  id: SetChosenEntitiesAsync(System.String,System.String,System.String[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IArchiveAgent
  langs:
  - csharp
  - vb
  name: SetChosenEntitiesAsync(string, string, string[], RequestOptions)
  nameWithType: IArchiveAgent.SetChosenEntitiesAsync(string, string, string[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.SetChosenEntitiesAsync(string, string, string[], SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: 'Set the currently chosen entities for the given gui name/provider name combination. This service corresponds to the SetSelected method of the SelectableMDOList service, for a list called archiveEntities: plus the archive provider name and gui name as its additionalInfo.'
  example: []
  syntax:
    content: Task SetChosenEntitiesAsync(string guiName, string providerName, string[] entities, RequestOptions requestOptions = null)
    parameters:
    - id: guiName
      type: System.String
      description: String that identifies the archive in the GUI, must be the same when fetching and storing configurations, but does not otherwise have to match anything.
    - id: providerName
      type: System.String
      description: Name of archive provider, must match one of the plugins known to the ArchiveProviderFactory.
    - id: entities
      type: System.String[]
      description: Array of entity names
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function SetChosenEntitiesAsync(guiName As String, providerName As String, entities As String(), requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IArchiveAgent.SetChosenEntitiesAsync*
  nameWithType.vb: IArchiveAgent.SetChosenEntitiesAsync(String, String, String(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IArchiveAgent.SetChosenEntitiesAsync(String, String, String(), SuperOffice.WebApi.RequestOptions)
  name.vb: SetChosenEntitiesAsync(String, String, String(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.SetChosenColumnsAsync(System.String,System.String,System.String[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IArchiveAgent.SetChosenColumnsAsync(System.String,System.String,System.String[],SuperOffice.WebApi.RequestOptions)
  id: SetChosenColumnsAsync(System.String,System.String,System.String[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IArchiveAgent
  langs:
  - csharp
  - vb
  name: SetChosenColumnsAsync(string, string, string[], RequestOptions)
  nameWithType: IArchiveAgent.SetChosenColumnsAsync(string, string, string[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.SetChosenColumnsAsync(string, string, string[], SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: 'Set the currently chosen columns for the given gui name/provider name combination. This service corresponds to the SetSelected method of the SelectableMDOList service, for a list called archiveColumns: plus the archive provider name and gui name as its additionalInfo.'
  example: []
  syntax:
    content: Task SetChosenColumnsAsync(string guiName, string providerName, string[] chosenColumns, RequestOptions requestOptions = null)
    parameters:
    - id: guiName
      type: System.String
      description: String that identifies the archive in the GUI, must be the same when fetching and storing configurations, but does not otherwise have to match anything.
    - id: providerName
      type: System.String
      description: Name of archive provider, must match one of the plugins known to the ArchiveProviderFactory.
    - id: chosenColumns
      type: System.String[]
      description: Array of column names, where array order indicates left to right order in the archive.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function SetChosenColumnsAsync(guiName As String, providerName As String, chosenColumns As String(), requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IArchiveAgent.SetChosenColumnsAsync*
  nameWithType.vb: IArchiveAgent.SetChosenColumnsAsync(String, String, String(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IArchiveAgent.SetChosenColumnsAsync(String, String, String(), SuperOffice.WebApi.RequestOptions)
  name.vb: SetChosenColumnsAsync(String, String, String(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveConfigurationV2Async(System.String,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveConfigurationV2Async(System.String,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetArchiveConfigurationV2Async(System.String,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IArchiveAgent
  langs:
  - csharp
  - vb
  name: GetArchiveConfigurationV2Async(string, string, string, string, RequestOptions)
  nameWithType: IArchiveAgent.GetArchiveConfigurationV2Async(string, string, string, string, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveConfigurationV2Async(string, string, string, string, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Get the configuration for one archive. The configuration is keyed by a combination of archive provider name (plus optional context), gui name, and optional table binding. The archive provider name must match an archive provider plugin; the gui name is an arbitrary string used to distinguish multiple occurrences of the same underlying provider in a gui.
  example: []
  syntax:
    content: Task<ArchiveConfiguration> GetArchiveConfigurationV2Async(string guiName, string providerName, string context, string ownerKeys, RequestOptions requestOptions = null)
    parameters:
    - id: guiName
      type: System.String
      description: String that identifies the archive in the GUI, must be the same when fetching and storing configurations, but does not otherwise have to match anything.
    - id: providerName
      type: System.String
      description: Name of archive provider, must match one of the plugins known to the ArchiveProviderFactory.
    - id: context
      type: System.String
      description: Context parameter, url-encoded string context parameter for ArchiveProvider constructor. Optional, but required for archives that depend on a context - for instance Quote archives that need to know their QuoteConnectionId to be meaningful
    - id: ownerKeys
      type: System.String
      description: Name/value string containing ownership binding information. The first should resolve to a table/primarykey, such as selection=123. Future functionality may allow multiple/extended keys
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ArchiveConfiguration}
      description: Archive configuration consisting of column information, orderby information and entities
    content.vb: Function GetArchiveConfigurationV2Async(guiName As String, providerName As String, context As String, ownerKeys As String, requestOptions As RequestOptions = Nothing) As Task(Of ArchiveConfiguration)
  overload: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveConfigurationV2Async*
  nameWithType.vb: IArchiveAgent.GetArchiveConfigurationV2Async(String, String, String, String, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveConfigurationV2Async(String, String, String, String, SuperOffice.WebApi.RequestOptions)
  name.vb: GetArchiveConfigurationV2Async(String, String, String, String, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.SetColumnWidthsV2Async(System.String,System.String,System.String,System.String,System.String[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IArchiveAgent.SetColumnWidthsV2Async(System.String,System.String,System.String,System.String,System.String[],SuperOffice.WebApi.RequestOptions)
  id: SetColumnWidthsV2Async(System.String,System.String,System.String,System.String,System.String[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IArchiveAgent
  langs:
  - csharp
  - vb
  name: SetColumnWidthsV2Async(string, string, string, string, string[], RequestOptions)
  nameWithType: IArchiveAgent.SetColumnWidthsV2Async(string, string, string, string, string[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.SetColumnWidthsV2Async(string, string, string, string, string[], SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Set the column widths for the given set of columns and GUI name.
  example: []
  syntax:
    content: Task SetColumnWidthsV2Async(string guiName, string providerName, string context, string ownerKeys, string[] columnWidths, RequestOptions requestOptions = null)
    parameters:
    - id: guiName
      type: System.String
      description: String that identifies the archive in the GUI, must be the same when fetching and storing configurations, but does not otherwise have to match anything.
    - id: providerName
      type: System.String
      description: Name of archive provider, must match one of the plugins known to the ArchiveProviderFactory.
    - id: context
      type: System.String
      description: Context parameter, url-encoded string context parameter for ArchiveProvider constructor. Optional, but required for archives that depend on a context - for instance Quote archives that need to know their QuoteConnectionId to be meaningful
    - id: ownerKeys
      type: System.String
      description: Name/value string containing ownership binding information. The first should resolve to a table/primarykey, such as selection=123. Future functionality may allow multiple/extended keys
    - id: columnWidths
      type: System.String[]
      description: Array of column widths. A column width is specified either as a fixed number of character (10c) or as a percentage (10%). Percentages will be recalculated so that they add up to exactly 100 when the configuration is fetched again.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function SetColumnWidthsV2Async(guiName As String, providerName As String, context As String, ownerKeys As String, columnWidths As String(), requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IArchiveAgent.SetColumnWidthsV2Async*
  nameWithType.vb: IArchiveAgent.SetColumnWidthsV2Async(String, String, String, String, String(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IArchiveAgent.SetColumnWidthsV2Async(String, String, String, String, String(), SuperOffice.WebApi.RequestOptions)
  name.vb: SetColumnWidthsV2Async(String, String, String, String, String(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.SetChosenEntitiesV2Async(System.String,System.String,System.String,System.String,System.String[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IArchiveAgent.SetChosenEntitiesV2Async(System.String,System.String,System.String,System.String,System.String[],SuperOffice.WebApi.RequestOptions)
  id: SetChosenEntitiesV2Async(System.String,System.String,System.String,System.String,System.String[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IArchiveAgent
  langs:
  - csharp
  - vb
  name: SetChosenEntitiesV2Async(string, string, string, string, string[], RequestOptions)
  nameWithType: IArchiveAgent.SetChosenEntitiesV2Async(string, string, string, string, string[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.SetChosenEntitiesV2Async(string, string, string, string, string[], SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: 'Set the currently chosen entities for the given gui name/provider name combination. This service corresponds to the SetSelected method of the SelectableMDOList service, for a list called archiveEntities: plus the archive provider name and gui name as its additionalInfo.'
  example: []
  syntax:
    content: Task SetChosenEntitiesV2Async(string guiName, string providerName, string context, string ownerKeys, string[] entities, RequestOptions requestOptions = null)
    parameters:
    - id: guiName
      type: System.String
      description: String that identifies the archive in the GUI, must be the same when fetching and storing configurations, but does not otherwise have to match anything.
    - id: providerName
      type: System.String
      description: Name of archive provider, must match one of the plugins known to the ArchiveProviderFactory.
    - id: context
      type: System.String
      description: Context parameter, url-encoded string context parameter for ArchiveProvider constructor. Optional, but required for archives that depend on a context - for instance Quote archives that need to know their QuoteConnectionId to be meaningful
    - id: ownerKeys
      type: System.String
      description: Name/value string containing ownership binding information. The first should resolve to a table/primarykey, such as selection=123. Future functionality may allow multiple/extended keys
    - id: entities
      type: System.String[]
      description: Array of entity names
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function SetChosenEntitiesV2Async(guiName As String, providerName As String, context As String, ownerKeys As String, entities As String(), requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IArchiveAgent.SetChosenEntitiesV2Async*
  nameWithType.vb: IArchiveAgent.SetChosenEntitiesV2Async(String, String, String, String, String(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IArchiveAgent.SetChosenEntitiesV2Async(String, String, String, String, String(), SuperOffice.WebApi.RequestOptions)
  name.vb: SetChosenEntitiesV2Async(String, String, String, String, String(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.SetChosenColumnsV2Async(System.String,System.String,System.String,System.String,System.String[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IArchiveAgent.SetChosenColumnsV2Async(System.String,System.String,System.String,System.String,System.String[],SuperOffice.WebApi.RequestOptions)
  id: SetChosenColumnsV2Async(System.String,System.String,System.String,System.String,System.String[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IArchiveAgent
  langs:
  - csharp
  - vb
  name: SetChosenColumnsV2Async(string, string, string, string, string[], RequestOptions)
  nameWithType: IArchiveAgent.SetChosenColumnsV2Async(string, string, string, string, string[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.SetChosenColumnsV2Async(string, string, string, string, string[], SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: 'Set the currently chosen columns for the given gui name/provider name combination. This service corresponds to the SetSelected method of the SelectableMDOList service, for a list called archiveColumns: plus the archive provider name and gui name as its additionalInfo.'
  example: []
  syntax:
    content: Task SetChosenColumnsV2Async(string guiName, string providerName, string context, string ownerKeys, string[] chosenColumns, RequestOptions requestOptions = null)
    parameters:
    - id: guiName
      type: System.String
      description: String that identifies the archive in the GUI, must be the same when fetching and storing configurations, but does not otherwise have to match anything.
    - id: providerName
      type: System.String
      description: Name of archive provider, must match one of the plugins known to the ArchiveProviderFactory.
    - id: context
      type: System.String
      description: Context parameter, url-encoded string context parameter for ArchiveProvider constructor. Optional, but required for archives that depend on a context - for instance Quote archives that need to know their QuoteConnectionId to be meaningful
    - id: ownerKeys
      type: System.String
      description: Name/value string containing ownership binding information. The first should resolve to a table/primarykey, such as selection=123. Future functionality may allow multiple/extended keys
    - id: chosenColumns
      type: System.String[]
      description: Array of column names, where array order indicates left to right order in the archive.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function SetChosenColumnsV2Async(guiName As String, providerName As String, context As String, ownerKeys As String, chosenColumns As String(), requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IArchiveAgent.SetChosenColumnsV2Async*
  nameWithType.vb: IArchiveAgent.SetChosenColumnsV2Async(String, String, String, String, String(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IArchiveAgent.SetChosenColumnsV2Async(String, String, String, String, String(), SuperOffice.WebApi.RequestOptions)
  name.vb: SetChosenColumnsV2Async(String, String, String, String, String(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsAsync(System.String,System.String[],SuperOffice.WebApi.Data.ArchiveOrderByInfo[],SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],System.String[],System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsAsync(System.String,System.String[],SuperOffice.WebApi.Data.ArchiveOrderByInfo[],SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],System.String[],System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetArchiveListByColumnsAsync(System.String,System.String[],SuperOffice.WebApi.Data.ArchiveOrderByInfo[],SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],System.String[],System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IArchiveAgent
  langs:
  - csharp
  - vb
  name: GetArchiveListByColumnsAsync(string, string[], ArchiveOrderByInfo[], ArchiveRestrictionInfo[], string[], int, int, RequestOptions)
  nameWithType: IArchiveAgent.GetArchiveListByColumnsAsync(string, string[], ArchiveOrderByInfo[], ArchiveRestrictionInfo[], string[], int, int, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsAsync(string, string[], SuperOffice.WebApi.Data.ArchiveOrderByInfo[], SuperOffice.WebApi.Data.ArchiveRestrictionInfo[], string[], int, int, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Get a page of results for an archive list, explicitly specifying the restrictions, orderby and chosen columns.
  example: []
  syntax:
    content: Task<ArchiveListItem[]> GetArchiveListByColumnsAsync(string providerName, string[] columns, ArchiveOrderByInfo[] sortOrder, ArchiveRestrictionInfo[] restriction, string[] entities, int page, int pageSize, RequestOptions requestOptions = null)
    parameters:
    - id: providerName
      type: System.String
      description: The name of the archive provider to use; it will be created via the ArchiveProviderFactory from a plugin
    - id: columns
      type: System.String[]
      description: An array of the names of the columns wanted.
    - id: sortOrder
      type: SuperOffice.WebApi.Data.ArchiveOrderByInfo[]
      description: Sort order for the archive. Can be null, which indicates 'no particular order'
    - id: restriction
      type: SuperOffice.WebApi.Data.ArchiveRestrictionInfo[]
      description: Archive restrictions. Archives will generally throw an exception if no restrictions are set. Pass in an empty array if you really do not want restrictions, but remember that you may end up fetching the first page of millions of rows.
    - id: entities
      type: System.String[]
      description: Which entities to include. Can be null, which indicates 'include all entities'
    - id: page
      type: System.Int32
      description: Page number, page 0 is the first page. Negative page numbers are interpreted as number of rows to skip.
    - id: pageSize
      type: System.Int32
      description: Page size, which should be kept reasonable (say, no more than 1000 rows at a time)
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ArchiveListItem[]}
      description: Array of archive list items, where each item represents one row of data (row level data + the requested columns)
    content.vb: Function GetArchiveListByColumnsAsync(providerName As String, columns As String(), sortOrder As ArchiveOrderByInfo(), restriction As ArchiveRestrictionInfo(), entities As String(), page As Integer, pageSize As Integer, requestOptions As RequestOptions = Nothing) As Task(Of ArchiveListItem())
  overload: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsAsync*
  nameWithType.vb: IArchiveAgent.GetArchiveListByColumnsAsync(String, String(), ArchiveOrderByInfo(), ArchiveRestrictionInfo(), String(), Integer, Integer, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsAsync(String, String(), SuperOffice.WebApi.Data.ArchiveOrderByInfo(), SuperOffice.WebApi.Data.ArchiveRestrictionInfo(), String(), Integer, Integer, SuperOffice.WebApi.RequestOptions)
  name.vb: GetArchiveListByColumnsAsync(String, String(), ArchiveOrderByInfo(), ArchiveRestrictionInfo(), String(), Integer, Integer, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithContextAsync(System.String,System.String[],SuperOffice.WebApi.Data.ArchiveOrderByInfo[],SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],System.String[],System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithContextAsync(System.String,System.String[],SuperOffice.WebApi.Data.ArchiveOrderByInfo[],SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],System.String[],System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetArchiveListByColumnsWithContextAsync(System.String,System.String[],SuperOffice.WebApi.Data.ArchiveOrderByInfo[],SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],System.String[],System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IArchiveAgent
  langs:
  - csharp
  - vb
  name: GetArchiveListByColumnsWithContextAsync(string, string[], ArchiveOrderByInfo[], ArchiveRestrictionInfo[], string[], int, int, string, RequestOptions)
  nameWithType: IArchiveAgent.GetArchiveListByColumnsWithContextAsync(string, string[], ArchiveOrderByInfo[], ArchiveRestrictionInfo[], string[], int, int, string, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithContextAsync(string, string[], SuperOffice.WebApi.Data.ArchiveOrderByInfo[], SuperOffice.WebApi.Data.ArchiveRestrictionInfo[], string[], int, int, string, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Get a page of results for an archive list with context parameter, explicitly specifying the restrictions, orderby and chosen columns.
  example: []
  syntax:
    content: Task<ArchiveListItem[]> GetArchiveListByColumnsWithContextAsync(string providerName, string[] columns, ArchiveOrderByInfo[] sortOrder, ArchiveRestrictionInfo[] restriction, string[] entities, int page, int pageSize, string context, RequestOptions requestOptions = null)
    parameters:
    - id: providerName
      type: System.String
      description: The name of the archive provider to use; it will be created via the ArchiveProviderFactory from a plugin
    - id: columns
      type: System.String[]
      description: An array of the names of the columns wanted.
    - id: sortOrder
      type: SuperOffice.WebApi.Data.ArchiveOrderByInfo[]
      description: Sort order for the archive. Can be null, which indicates 'no particular order'
    - id: restriction
      type: SuperOffice.WebApi.Data.ArchiveRestrictionInfo[]
      description: Archive restrictions. Archives will generally throw an exception if no restrictions are set. Pass in an empty array if you really do not want restrictions, but remember that you may end up fetching the first page of millions of rows.
    - id: entities
      type: System.String[]
      description: Which entities to include. Can be null, which indicates 'include all entities'
    - id: page
      type: System.Int32
      description: Page number, page 0 is the first page. Negative page numbers are interpreted as number of rows to skip.
    - id: pageSize
      type: System.Int32
      description: Page size, which should be kept reasonable (say, no more than 1000 rows at a time)
    - id: context
      type: System.String
      description: Context parameter, url-encoded string context parameter for ArchiveProvider constructor
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ArchiveListItem[]}
      description: Array of archive list items, where each item represents one row of data (row level data + the requested columns)
    content.vb: Function GetArchiveListByColumnsWithContextAsync(providerName As String, columns As String(), sortOrder As ArchiveOrderByInfo(), restriction As ArchiveRestrictionInfo(), entities As String(), page As Integer, pageSize As Integer, context As String, requestOptions As RequestOptions = Nothing) As Task(Of ArchiveListItem())
  overload: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithContextAsync*
  nameWithType.vb: IArchiveAgent.GetArchiveListByColumnsWithContextAsync(String, String(), ArchiveOrderByInfo(), ArchiveRestrictionInfo(), String(), Integer, Integer, String, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithContextAsync(String, String(), SuperOffice.WebApi.Data.ArchiveOrderByInfo(), SuperOffice.WebApi.Data.ArchiveRestrictionInfo(), String(), Integer, Integer, String, SuperOffice.WebApi.RequestOptions)
  name.vb: GetArchiveListByColumnsWithContextAsync(String, String(), ArchiveOrderByInfo(), ArchiveRestrictionInfo(), String(), Integer, Integer, String, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListAsync(System.String,System.String,SuperOffice.WebApi.Data.ArchiveOrderByInfo[],SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],System.String[],System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListAsync(System.String,System.String,SuperOffice.WebApi.Data.ArchiveOrderByInfo[],SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],System.String[],System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetArchiveListAsync(System.String,System.String,SuperOffice.WebApi.Data.ArchiveOrderByInfo[],SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],System.String[],System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IArchiveAgent
  langs:
  - csharp
  - vb
  name: GetArchiveListAsync(string, string, ArchiveOrderByInfo[], ArchiveRestrictionInfo[], string[], int, int, RequestOptions)
  nameWithType: IArchiveAgent.GetArchiveListAsync(string, string, ArchiveOrderByInfo[], ArchiveRestrictionInfo[], string[], int, int, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListAsync(string, string, SuperOffice.WebApi.Data.ArchiveOrderByInfo[], SuperOffice.WebApi.Data.ArchiveRestrictionInfo[], string[], int, int, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Get a page of data for an archive. The columns returned will be those set as chosen columns, using either the SetChosenColumns service or the corresponding SelectableMDOList.SetSelected.
  example: []
  syntax:
    content: Task<ArchiveListItem[]> GetArchiveListAsync(string guiName, string providerName, ArchiveOrderByInfo[] sortOrder, ArchiveRestrictionInfo[] restriction, string[] entities, int page, int pageSize, RequestOptions requestOptions = null)
    parameters:
    - id: guiName
      type: System.String
      description: The GUI name of the archive list, used to retrieve the currently configured set of columns (otherwise manipulated using the ArchiveConfiguration service)
    - id: providerName
      type: System.String
      description: The name of the archive provider to use; it will be created via the ArchiveProviderFactory from a plugin
    - id: sortOrder
      type: SuperOffice.WebApi.Data.ArchiveOrderByInfo[]
      description: Sort order for the archive. Can be null, which indicates 'no particular order'
    - id: restriction
      type: SuperOffice.WebApi.Data.ArchiveRestrictionInfo[]
      description: Archive restrictions. Archives will generally throw an exception if no restrictions are set. Pass in an empty array if you really do not want restrictions, but remember that you may end up fetching the first page of millions of rows.
    - id: entities
      type: System.String[]
      description: Which entities to include. Can be null, which indicates 'include all entities'
    - id: page
      type: System.Int32
      description: Page number, page 0 is the first page. Negative page numbers are interpreted as number of rows to skip.
    - id: pageSize
      type: System.Int32
      description: Page size, which should be kept reasonable (say, no more than 1000 rows at a time)
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ArchiveListItem[]}
      description: Array of archive list items, where each item represents one row of data (row level data + the requested columns)
    content.vb: Function GetArchiveListAsync(guiName As String, providerName As String, sortOrder As ArchiveOrderByInfo(), restriction As ArchiveRestrictionInfo(), entities As String(), page As Integer, pageSize As Integer, requestOptions As RequestOptions = Nothing) As Task(Of ArchiveListItem())
  overload: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListAsync*
  nameWithType.vb: IArchiveAgent.GetArchiveListAsync(String, String, ArchiveOrderByInfo(), ArchiveRestrictionInfo(), String(), Integer, Integer, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListAsync(String, String, SuperOffice.WebApi.Data.ArchiveOrderByInfo(), SuperOffice.WebApi.Data.ArchiveRestrictionInfo(), String(), Integer, Integer, SuperOffice.WebApi.RequestOptions)
  name.vb: GetArchiveListAsync(String, String, ArchiveOrderByInfo(), ArchiveRestrictionInfo(), String(), Integer, Integer, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListWithContextAsync(System.String,System.String,SuperOffice.WebApi.Data.ArchiveOrderByInfo[],SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],System.String[],System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListWithContextAsync(System.String,System.String,SuperOffice.WebApi.Data.ArchiveOrderByInfo[],SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],System.String[],System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetArchiveListWithContextAsync(System.String,System.String,SuperOffice.WebApi.Data.ArchiveOrderByInfo[],SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],System.String[],System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IArchiveAgent
  langs:
  - csharp
  - vb
  name: GetArchiveListWithContextAsync(string, string, ArchiveOrderByInfo[], ArchiveRestrictionInfo[], string[], int, int, string, RequestOptions)
  nameWithType: IArchiveAgent.GetArchiveListWithContextAsync(string, string, ArchiveOrderByInfo[], ArchiveRestrictionInfo[], string[], int, int, string, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListWithContextAsync(string, string, SuperOffice.WebApi.Data.ArchiveOrderByInfo[], SuperOffice.WebApi.Data.ArchiveRestrictionInfo[], string[], int, int, string, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Get a page of data for an archive, with context parameter. The columns returned will be those set as chosen columns, using either the SetChosenColumns service or the corresponding SelectableMDOList.SetSelected.
  example: []
  syntax:
    content: Task<ArchiveListItem[]> GetArchiveListWithContextAsync(string guiName, string providerName, ArchiveOrderByInfo[] sortOrder, ArchiveRestrictionInfo[] restriction, string[] entities, int page, int pageSize, string context, RequestOptions requestOptions = null)
    parameters:
    - id: guiName
      type: System.String
      description: The GUI name of the archive list, used to retrieve the currently configured set of columns (otherwise manipulated using the ArchiveConfiguration service)
    - id: providerName
      type: System.String
      description: The name of the archive provider to use; it will be created via the ArchiveProviderFactory from a plugin
    - id: sortOrder
      type: SuperOffice.WebApi.Data.ArchiveOrderByInfo[]
      description: Sort order for the archive. Can be null, which indicates 'no particular order'
    - id: restriction
      type: SuperOffice.WebApi.Data.ArchiveRestrictionInfo[]
      description: Archive restrictions. Archives will generally throw an exception if no restrictions are set. Pass in an empty array if you really do not want restrictions, but remember that you may end up fetching the first page of millions of rows.
    - id: entities
      type: System.String[]
      description: Which entities to include. Can be null, which indicates 'include all entities'
    - id: page
      type: System.Int32
      description: Page number, page 0 is the first page. Negative page numbers are interpreted as number of rows to skip.
    - id: pageSize
      type: System.Int32
      description: Page size, which should be kept reasonable (say, no more than 1000 rows at a time)
    - id: context
      type: System.String
      description: Context parameter, url-encoded string context parameter for ArchiveProvider constructor
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ArchiveListItem[]}
      description: Array of archive list items, where each item represents one row of data (row level data + the requested columns)
    content.vb: Function GetArchiveListWithContextAsync(guiName As String, providerName As String, sortOrder As ArchiveOrderByInfo(), restriction As ArchiveRestrictionInfo(), entities As String(), page As Integer, pageSize As Integer, context As String, requestOptions As RequestOptions = Nothing) As Task(Of ArchiveListItem())
  overload: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListWithContextAsync*
  nameWithType.vb: IArchiveAgent.GetArchiveListWithContextAsync(String, String, ArchiveOrderByInfo(), ArchiveRestrictionInfo(), String(), Integer, Integer, String, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListWithContextAsync(String, String, SuperOffice.WebApi.Data.ArchiveOrderByInfo(), SuperOffice.WebApi.Data.ArchiveRestrictionInfo(), String(), Integer, Integer, String, SuperOffice.WebApi.RequestOptions)
  name.vb: GetArchiveListWithContextAsync(String, String, ArchiveOrderByInfo(), ArchiveRestrictionInfo(), String(), Integer, Integer, String, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithHeaderAsync(System.String,System.String[],SuperOffice.WebApi.Data.ArchiveOrderByInfo[],SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],System.String[],System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithHeaderAsync(System.String,System.String[],SuperOffice.WebApi.Data.ArchiveOrderByInfo[],SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],System.String[],System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetArchiveListByColumnsWithHeaderAsync(System.String,System.String[],SuperOffice.WebApi.Data.ArchiveOrderByInfo[],SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],System.String[],System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IArchiveAgent
  langs:
  - csharp
  - vb
  name: GetArchiveListByColumnsWithHeaderAsync(string, string[], ArchiveOrderByInfo[], ArchiveRestrictionInfo[], string[], int, int, string, RequestOptions)
  nameWithType: IArchiveAgent.GetArchiveListByColumnsWithHeaderAsync(string, string[], ArchiveOrderByInfo[], ArchiveRestrictionInfo[], string[], int, int, string, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithHeaderAsync(string, string[], SuperOffice.WebApi.Data.ArchiveOrderByInfo[], SuperOffice.WebApi.Data.ArchiveRestrictionInfo[], string[], int, int, string, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Get a page of results for an archive list, explicitly specifying the restrictions, orderby and chosen columns; as well as a name/value string formatted set of options. The return value includes a header that has various extra information, in addition to the actual rows.
  example: []
  syntax:
    content: Task<ArchiveListResult> GetArchiveListByColumnsWithHeaderAsync(string providerName, string[] columns, ArchiveOrderByInfo[] sortOrder, ArchiveRestrictionInfo[] restriction, string[] entities, int page, int pageSize, string options, RequestOptions requestOptions = null)
    parameters:
    - id: providerName
      type: System.String
      description: The name of the archive provider to use; it will be created via the ArchiveProviderFactory from a plugin
    - id: columns
      type: System.String[]
      description: An array of the names of the columns wanted.
    - id: sortOrder
      type: SuperOffice.WebApi.Data.ArchiveOrderByInfo[]
      description: Sort order for the archive. Can be null, which indicates 'no particular order'
    - id: restriction
      type: SuperOffice.WebApi.Data.ArchiveRestrictionInfo[]
      description: Archive restrictions. Archives will generally throw an exception if no restrictions are set. Pass in an empty array if you really do not want restrictions, but remember that you may end up fetching the first page of millions of rows.
    - id: entities
      type: System.String[]
      description: Which entities to include. Can be null, which indicates 'include all entities'
    - id: page
      type: System.Int32
      description: Page number, page 0 is the first page. Negative page numbers are interpreted as number of rows to skip.
    - id: pageSize
      type: System.Int32
      description: Page size, which should be kept reasonable (say, no more than 1000 rows at a time)
    - id: options
      type: System.String
      description: name=value&amp;amp;... formatted set of options. "rowcount=true" will cause the rowcount to be calculated and populated.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ArchiveListResult}
      description: Header with optional row count, plus array of archive list items, where each item represents one row of data (row level data + the requested columns)
    content.vb: Function GetArchiveListByColumnsWithHeaderAsync(providerName As String, columns As String(), sortOrder As ArchiveOrderByInfo(), restriction As ArchiveRestrictionInfo(), entities As String(), page As Integer, pageSize As Integer, options As String, requestOptions As RequestOptions = Nothing) As Task(Of ArchiveListResult)
  overload: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithHeaderAsync*
  nameWithType.vb: IArchiveAgent.GetArchiveListByColumnsWithHeaderAsync(String, String(), ArchiveOrderByInfo(), ArchiveRestrictionInfo(), String(), Integer, Integer, String, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithHeaderAsync(String, String(), SuperOffice.WebApi.Data.ArchiveOrderByInfo(), SuperOffice.WebApi.Data.ArchiveRestrictionInfo(), String(), Integer, Integer, String, SuperOffice.WebApi.RequestOptions)
  name.vb: GetArchiveListByColumnsWithHeaderAsync(String, String(), ArchiveOrderByInfo(), ArchiveRestrictionInfo(), String(), Integer, Integer, String, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.GetProviderNamesAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IArchiveAgent.GetProviderNamesAsync(SuperOffice.WebApi.RequestOptions)
  id: GetProviderNamesAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IArchiveAgent
  langs:
  - csharp
  - vb
  name: GetProviderNamesAsync(RequestOptions)
  nameWithType: IArchiveAgent.GetProviderNamesAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.GetProviderNamesAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Return list of all archive provider names
  example: []
  syntax:
    content: Task<string[]> GetProviderNamesAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{System.String[]}
      description: Array of all archive provider names.
    content.vb: Function GetProviderNamesAsync(requestOptions As RequestOptions = Nothing) As Task(Of String())
  overload: SuperOffice.WebApi.Agents.IArchiveAgent.GetProviderNamesAsync*
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithHeaderWithContextAsync(System.String,System.String[],SuperOffice.WebApi.Data.ArchiveOrderByInfo[],SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],System.String[],System.Int32,System.Int32,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithHeaderWithContextAsync(System.String,System.String[],SuperOffice.WebApi.Data.ArchiveOrderByInfo[],SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],System.String[],System.Int32,System.Int32,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetArchiveListByColumnsWithHeaderWithContextAsync(System.String,System.String[],SuperOffice.WebApi.Data.ArchiveOrderByInfo[],SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],System.String[],System.Int32,System.Int32,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IArchiveAgent
  langs:
  - csharp
  - vb
  name: GetArchiveListByColumnsWithHeaderWithContextAsync(string, string[], ArchiveOrderByInfo[], ArchiveRestrictionInfo[], string[], int, int, string, string, RequestOptions)
  nameWithType: IArchiveAgent.GetArchiveListByColumnsWithHeaderWithContextAsync(string, string[], ArchiveOrderByInfo[], ArchiveRestrictionInfo[], string[], int, int, string, string, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithHeaderWithContextAsync(string, string[], SuperOffice.WebApi.Data.ArchiveOrderByInfo[], SuperOffice.WebApi.Data.ArchiveRestrictionInfo[], string[], int, int, string, string, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Get a page of results for an archive list, with context parameter, explicitly specifying the restrictions, orderby and chosen columns; as well as a name/value string formatted set of options. The return value includes a header that has various extra information, in addition to the actual rows.
  example: []
  syntax:
    content: Task<ArchiveListResult> GetArchiveListByColumnsWithHeaderWithContextAsync(string providerName, string[] columns, ArchiveOrderByInfo[] sortOrder, ArchiveRestrictionInfo[] restriction, string[] entities, int page, int pageSize, string options, string context, RequestOptions requestOptions = null)
    parameters:
    - id: providerName
      type: System.String
      description: The name of the archive provider to use; it will be created via the ArchiveProviderFactory from a plugin
    - id: columns
      type: System.String[]
      description: An array of the names of the columns wanted.
    - id: sortOrder
      type: SuperOffice.WebApi.Data.ArchiveOrderByInfo[]
      description: Sort order for the archive. Can be null, which indicates 'no particular order'
    - id: restriction
      type: SuperOffice.WebApi.Data.ArchiveRestrictionInfo[]
      description: Archive restrictions. Archives will generally throw an exception if no restrictions are set. Pass in an empty array if you really do not want restrictions, but remember that you may end up fetching the first page of millions of rows.
    - id: entities
      type: System.String[]
      description: Which entities to include. Can be null, which indicates 'include all entities'
    - id: page
      type: System.Int32
      description: Page number, page 0 is the first page. Negative page numbers are interpreted as number of rows to skip.
    - id: pageSize
      type: System.Int32
      description: Page size, which should be kept reasonable (say, no more than 1000 rows at a time)
    - id: options
      type: System.String
      description: name=value&amp;amp;... formatted set of options. "rowcount=true" will cause the rowcount to be calculated and populated.
    - id: context
      type: System.String
      description: Context parameter, url-encoded string context parameter for ArchiveProvider constructor
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ArchiveListResult}
      description: Header with optional row count, plus array of archive list items, where each item represents one row of data (row level data + the requested columns)
    content.vb: Function GetArchiveListByColumnsWithHeaderWithContextAsync(providerName As String, columns As String(), sortOrder As ArchiveOrderByInfo(), restriction As ArchiveRestrictionInfo(), entities As String(), page As Integer, pageSize As Integer, options As String, context As String, requestOptions As RequestOptions = Nothing) As Task(Of ArchiveListResult)
  overload: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithHeaderWithContextAsync*
  nameWithType.vb: IArchiveAgent.GetArchiveListByColumnsWithHeaderWithContextAsync(String, String(), ArchiveOrderByInfo(), ArchiveRestrictionInfo(), String(), Integer, Integer, String, String, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithHeaderWithContextAsync(String, String(), SuperOffice.WebApi.Data.ArchiveOrderByInfo(), SuperOffice.WebApi.Data.ArchiveRestrictionInfo(), String(), Integer, Integer, String, String, SuperOffice.WebApi.RequestOptions)
  name.vb: GetArchiveListByColumnsWithHeaderWithContextAsync(String, String(), ArchiveOrderByInfo(), ArchiveRestrictionInfo(), String(), Integer, Integer, String, String, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.GetAvailableColumnsAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IArchiveAgent.GetAvailableColumnsAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetAvailableColumnsAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IArchiveAgent
  langs:
  - csharp
  - vb
  name: GetAvailableColumnsAsync(string, string, RequestOptions)
  nameWithType: IArchiveAgent.GetAvailableColumnsAsync(string, string, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.GetAvailableColumnsAsync(string, string, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Return list of all columns supported by an archive provider. See also GetArchiveConfiguration.
  example: []
  syntax:
    content: Task<ArchiveColumnInfo[]> GetAvailableColumnsAsync(string providerName, string context, RequestOptions requestOptions = null)
    parameters:
    - id: providerName
      type: System.String
      description: The name of the archive provider to use; it will be created via the ArchiveProviderFactory from a plugin
    - id: context
      type: System.String
      description: Optional context parameter, url-encoded string context parameter for ArchiveProvider constructor
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ArchiveColumnInfo[]}
      description: Array of all columns supported by the archive provider.
    content.vb: Function GetAvailableColumnsAsync(providerName As String, context As String, requestOptions As RequestOptions = Nothing) As Task(Of ArchiveColumnInfo())
  overload: SuperOffice.WebApi.Agents.IArchiveAgent.GetAvailableColumnsAsync*
  nameWithType.vb: IArchiveAgent.GetAvailableColumnsAsync(String, String, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IArchiveAgent.GetAvailableColumnsAsync(String, String, SuperOffice.WebApi.RequestOptions)
  name.vb: GetAvailableColumnsAsync(String, String, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.GetAvailableEntitiesAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IArchiveAgent.GetAvailableEntitiesAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetAvailableEntitiesAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IArchiveAgent
  langs:
  - csharp
  - vb
  name: GetAvailableEntitiesAsync(string, string, RequestOptions)
  nameWithType: IArchiveAgent.GetAvailableEntitiesAsync(string, string, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.GetAvailableEntitiesAsync(string, string, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Return list of all entities supported by an archive provider. See also GetArchiveConfiguration.
  example: []
  syntax:
    content: Task<MDOListItem[]> GetAvailableEntitiesAsync(string providerName, string context, RequestOptions requestOptions = null)
    parameters:
    - id: providerName
      type: System.String
      description: The name of the archive provider to use; it will be created via the ArchiveProviderFactory from a plugin
    - id: context
      type: System.String
      description: Optional context parameter, url-encoded string context parameter for ArchiveProvider constructor
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.MDOListItem[]}
      description: Array of all entity types supported by the archive provider. MDOListItem.Name = DisplayName, Tooltip = DisplayTooltip, Type = code name, StyleHint = optional/mandatory, IconHint=DefaultShow
    content.vb: Function GetAvailableEntitiesAsync(providerName As String, context As String, requestOptions As RequestOptions = Nothing) As Task(Of MDOListItem())
  overload: SuperOffice.WebApi.Agents.IArchiveAgent.GetAvailableEntitiesAsync*
  nameWithType.vb: IArchiveAgent.GetAvailableEntitiesAsync(String, String, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IArchiveAgent.GetAvailableEntitiesAsync(String, String, SuperOffice.WebApi.RequestOptions)
  name.vb: GetAvailableEntitiesAsync(String, String, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumns2Async(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumns2Async(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetArchiveListByColumns2Async(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IArchiveAgent
  langs:
  - csharp
  - vb
  name: GetArchiveListByColumns2Async(string, string, string, string, string, int, int, RequestOptions)
  nameWithType: IArchiveAgent.GetArchiveListByColumns2Async(string, string, string, string, string, int, int, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumns2Async(string, string, string, string, string, int, int, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Get a page of results for an archive list, explicitly specifying the restrictions as a string, orderby and chosen columns.
  example: []
  syntax:
    content: Task<ArchiveListItem[]> GetArchiveListByColumns2Async(string providerName, string columns, string sortOrder, string restrictions, string entities, int page, int pageSize, RequestOptions requestOptions = null)
    parameters:
    - id: providerName
      type: System.String
      description: The name of the archive provider to use; it will be created via the ArchiveProviderFactory from a plugin
    - id: columns
      type: System.String
      description: An array of the names of the columns wanted.
    - id: sortOrder
      type: System.String
      description: Sort order for the archive as string ('name asc, dept desc'). Can be null, which indicates 'no particular order'
    - id: restrictions
      type: System.String
      description: Archive restrictions as string ('category = 1 and business oneOf (1,2,3)'). Archives will generally throw an exception if no restrictions are set. Pass in an empty array if you really do not want restrictions, but remember that you may end up fetching the first page of millions of rows.
    - id: entities
      type: System.String
      description: Comma separated list of entities to include. Can be null, which indicates 'include all entities'
    - id: page
      type: System.Int32
      description: Page number, page 0 is the first page. Negative page numbers are interpreted as number of rows to skip.
    - id: pageSize
      type: System.Int32
      description: Page size, which should be kept reasonable (say, no more than 1000 rows at a time)
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ArchiveListItem[]}
      description: Array of archive list items, where each item represents one row of data (row level data + the requested columns)
    content.vb: Function GetArchiveListByColumns2Async(providerName As String, columns As String, sortOrder As String, restrictions As String, entities As String, page As Integer, pageSize As Integer, requestOptions As RequestOptions = Nothing) As Task(Of ArchiveListItem())
  overload: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumns2Async*
  nameWithType.vb: IArchiveAgent.GetArchiveListByColumns2Async(String, String, String, String, String, Integer, Integer, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumns2Async(String, String, String, String, String, Integer, Integer, SuperOffice.WebApi.RequestOptions)
  name.vb: GetArchiveListByColumns2Async(String, String, String, String, String, Integer, Integer, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithContext2Async(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithContext2Async(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetArchiveListByColumnsWithContext2Async(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IArchiveAgent
  langs:
  - csharp
  - vb
  name: GetArchiveListByColumnsWithContext2Async(string, string, string, string, string, int, int, string, RequestOptions)
  nameWithType: IArchiveAgent.GetArchiveListByColumnsWithContext2Async(string, string, string, string, string, int, int, string, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithContext2Async(string, string, string, string, string, int, int, string, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Get a page of results for an archive list with context parameter, explicitly specifying the restrictions as a string, orderby and chosen columns.
  example: []
  syntax:
    content: Task<ArchiveListItem[]> GetArchiveListByColumnsWithContext2Async(string providerName, string columns, string sortOrder, string restriction, string entities, int page, int pageSize, string context, RequestOptions requestOptions = null)
    parameters:
    - id: providerName
      type: System.String
      description: The name of the archive provider to use; it will be created via the ArchiveProviderFactory from a plugin
    - id: columns
      type: System.String
      description: Comma separated names of the columns wanted.
    - id: sortOrder
      type: System.String
      description: "Comma separated list of columns to sort order for the archive. e.g.: \"name asc, dept desc, registeredBy\" Can be null, which indicates 'no particular order'"
    - id: restriction
      type: System.String
      description: Archive restrictions as string. e.g. "name startsWith 'foo' and (dept = 'bar' or dept = 'baz')" Archives will generally throw an exception if no restrictions are set. Pass in an empty array if you really do not want restrictions, but remember that you may end up fetching the first page of millions of rows.
    - id: entities
      type: System.String
      description: Comma separated list of entities to include. Can be null, which indicates 'include all entities'
    - id: page
      type: System.Int32
      description: Page number, page 0 is the first page. Negative page numbers are interpreted as number of rows to skip.
    - id: pageSize
      type: System.Int32
      description: Page size, which should be kept reasonable (say, no more than 1000 rows at a time)
    - id: context
      type: System.String
      description: Context parameter, url-encoded string context parameter for ArchiveProvider constructor
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ArchiveListItem[]}
      description: Array of archive list items, where each item represents one row of data (row level data + the requested columns)
    content.vb: Function GetArchiveListByColumnsWithContext2Async(providerName As String, columns As String, sortOrder As String, restriction As String, entities As String, page As Integer, pageSize As Integer, context As String, requestOptions As RequestOptions = Nothing) As Task(Of ArchiveListItem())
  overload: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithContext2Async*
  nameWithType.vb: IArchiveAgent.GetArchiveListByColumnsWithContext2Async(String, String, String, String, String, Integer, Integer, String, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithContext2Async(String, String, String, String, String, Integer, Integer, String, SuperOffice.WebApi.RequestOptions)
  name.vb: GetArchiveListByColumnsWithContext2Async(String, String, String, String, String, Integer, Integer, String, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveList2Async(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveList2Async(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetArchiveList2Async(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IArchiveAgent
  langs:
  - csharp
  - vb
  name: GetArchiveList2Async(string, string, string, string, string, int, int, RequestOptions)
  nameWithType: IArchiveAgent.GetArchiveList2Async(string, string, string, string, string, int, int, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveList2Async(string, string, string, string, string, int, int, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Get a page of data for an archive using a restriction string. The columns returned will be those set as chosen columns, using either the SetChosenColumns service or the corresponding SelectableMDOList.SetSelected.
  example: []
  syntax:
    content: Task<ArchiveListItem[]> GetArchiveList2Async(string guiName, string providerName, string sortOrder, string restriction, string entities, int page, int pageSize, RequestOptions requestOptions = null)
    parameters:
    - id: guiName
      type: System.String
      description: The GUI name of the archive list, used to retrieve the currently configured set of columns (otherwise manipulated using the ArchiveConfiguration service)
    - id: providerName
      type: System.String
      description: The name of the archive provider to use; it will be created via the ArchiveProviderFactory from a plugin
    - id: sortOrder
      type: System.String
      description: Sort order for the archive. Can be null, which indicates 'no particular order'
    - id: restriction
      type: System.String
      description: Archive restrictions as string. e.g. "name = 'baz' or category oneOf (1,2,3)". Archives will generally throw an exception if no restrictions are set. Pass in an empty array if you really do not want restrictions, but remember that you may end up fetching the first page of millions of rows.
    - id: entities
      type: System.String
      description: Comma separated list of entities to include. Can be null, which indicates 'include all entities'
    - id: page
      type: System.Int32
      description: Page number, page 0 is the first page. Negative page numbers are interpreted as number of rows to skip.
    - id: pageSize
      type: System.Int32
      description: Page size, which should be kept reasonable (say, no more than 1000 rows at a time)
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ArchiveListItem[]}
      description: Array of archive list items, where each item represents one row of data (row level data + the requested columns)
    content.vb: Function GetArchiveList2Async(guiName As String, providerName As String, sortOrder As String, restriction As String, entities As String, page As Integer, pageSize As Integer, requestOptions As RequestOptions = Nothing) As Task(Of ArchiveListItem())
  overload: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveList2Async*
  nameWithType.vb: IArchiveAgent.GetArchiveList2Async(String, String, String, String, String, Integer, Integer, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveList2Async(String, String, String, String, String, Integer, Integer, SuperOffice.WebApi.RequestOptions)
  name.vb: GetArchiveList2Async(String, String, String, String, String, Integer, Integer, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListWithContext2Async(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListWithContext2Async(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetArchiveListWithContext2Async(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IArchiveAgent
  langs:
  - csharp
  - vb
  name: GetArchiveListWithContext2Async(string, string, string, string, string, int, int, string, RequestOptions)
  nameWithType: IArchiveAgent.GetArchiveListWithContext2Async(string, string, string, string, string, int, int, string, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListWithContext2Async(string, string, string, string, string, int, int, string, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Get a page of data for an archive using restrictions as strings, with context parameter. The columns returned will be those set as chosen columns, using either the SetChosenColumns service or the corresponding SelectableMDOList.SetSelected.
  example: []
  syntax:
    content: Task<ArchiveListItem[]> GetArchiveListWithContext2Async(string guiName, string providerName, string sortOrder, string restriction, string entities, int page, int pageSize, string context, RequestOptions requestOptions = null)
    parameters:
    - id: guiName
      type: System.String
      description: The GUI name of the archive list, used to retrieve the currently configured set of columns (otherwise manipulated using the ArchiveConfiguration service)
    - id: providerName
      type: System.String
      description: The name of the archive provider to use; it will be created via the ArchiveProviderFactory from a plugin
    - id: sortOrder
      type: System.String
      description: Sort order for the archive. e.g. "name asc, dept desc" Can be null, which indicates 'no particular order'
    - id: restriction
      type: System.String
      description: Archive restrictions as string. e.g. "name gt 'B' or dept = 'baz'" Archives will generally throw an exception if no restrictions are set. Pass in an empty array if you really do not want restrictions, but remember that you may end up fetching the first page of millions of rows.
    - id: entities
      type: System.String
      description: Comma separated list of entities to include. Can be null, which indicates 'include all entities'
    - id: page
      type: System.Int32
      description: Page number, page 0 is the first page. Negative page numbers are interpreted as number of rows to skip.
    - id: pageSize
      type: System.Int32
      description: Page size, which should be kept reasonable (say, no more than 1000 rows at a time)
    - id: context
      type: System.String
      description: Context parameter, url-encoded string context parameter for ArchiveProvider constructor
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ArchiveListItem[]}
      description: Array of archive list items, where each item represents one row of data (row level data + the requested columns)
    content.vb: Function GetArchiveListWithContext2Async(guiName As String, providerName As String, sortOrder As String, restriction As String, entities As String, page As Integer, pageSize As Integer, context As String, requestOptions As RequestOptions = Nothing) As Task(Of ArchiveListItem())
  overload: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListWithContext2Async*
  nameWithType.vb: IArchiveAgent.GetArchiveListWithContext2Async(String, String, String, String, String, Integer, Integer, String, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListWithContext2Async(String, String, String, String, String, Integer, Integer, String, SuperOffice.WebApi.RequestOptions)
  name.vb: GetArchiveListWithContext2Async(String, String, String, String, String, Integer, Integer, String, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithHeader2Async(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithHeader2Async(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetArchiveListByColumnsWithHeader2Async(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IArchiveAgent
  langs:
  - csharp
  - vb
  name: GetArchiveListByColumnsWithHeader2Async(string, string, string, string, string, int, int, string, RequestOptions)
  nameWithType: IArchiveAgent.GetArchiveListByColumnsWithHeader2Async(string, string, string, string, string, int, int, string, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithHeader2Async(string, string, string, string, string, int, int, string, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Get a page of results for an archive list, explicitly specifying the restrictions as strings, orderby and chosen columns; as well as a name/value string formatted set of options. The return value includes a header that has various extra information, in addition to the actual rows.
  example: []
  syntax:
    content: Task<ArchiveListResult> GetArchiveListByColumnsWithHeader2Async(string providerName, string columns, string sortOrder, string restriction, string entities, int page, int pageSize, string options, RequestOptions requestOptions = null)
    parameters:
    - id: providerName
      type: System.String
      description: The name of the archive provider to use; it will be created via the ArchiveProviderFactory from a plugin
    - id: columns
      type: System.String
      description: Comma separated string of the names of the columns wanted.
    - id: sortOrder
      type: System.String
      description: Comma separated string of sort order for the archive. e.g. "name asc, dept desc" Can be null, which indicates 'no particular order'
    - id: restriction
      type: System.String
      description: Archive restrictions. e.g. "category = 2 or business oneOf (2,3,4)" Archives will generally throw an exception if no restrictions are set. Pass in an empty array if you really do not want restrictions, but remember that you may end up fetching the first page of millions of rows.
    - id: entities
      type: System.String
      description: Comma separated list of entities to include. Can be null, which indicates 'include all entities'
    - id: page
      type: System.Int32
      description: Page number, page 0 is the first page. Negative page numbers are interpreted as number of rows to skip.
    - id: pageSize
      type: System.Int32
      description: Page size, which should be kept reasonable (say, no more than 1000 rows at a time)
    - id: options
      type: System.String
      description: name=value&amp;amp;... formatted set of options. "rowcount=true" will cause the rowcount to be calculated and populated.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ArchiveListResult}
      description: Header with optional row count, plus array of archive list items, where each item represents one row of data (row level data + the requested columns)
    content.vb: Function GetArchiveListByColumnsWithHeader2Async(providerName As String, columns As String, sortOrder As String, restriction As String, entities As String, page As Integer, pageSize As Integer, options As String, requestOptions As RequestOptions = Nothing) As Task(Of ArchiveListResult)
  overload: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithHeader2Async*
  nameWithType.vb: IArchiveAgent.GetArchiveListByColumnsWithHeader2Async(String, String, String, String, String, Integer, Integer, String, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithHeader2Async(String, String, String, String, String, Integer, Integer, String, SuperOffice.WebApi.RequestOptions)
  name.vb: GetArchiveListByColumnsWithHeader2Async(String, String, String, String, String, Integer, Integer, String, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithHeaderWithContext2Async(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithHeaderWithContext2Async(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetArchiveListByColumnsWithHeaderWithContext2Async(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IArchiveAgent
  langs:
  - csharp
  - vb
  name: GetArchiveListByColumnsWithHeaderWithContext2Async(string, string, string, string, string, int, int, string, string, RequestOptions)
  nameWithType: IArchiveAgent.GetArchiveListByColumnsWithHeaderWithContext2Async(string, string, string, string, string, int, int, string, string, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithHeaderWithContext2Async(string, string, string, string, string, int, int, string, string, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Get a page of results for an archive list, with context parameter, explicitly specifying the restrictions as strings, orderby and chosen columns; as well as a name/value string formatted set of options. The return value includes a header that has various extra information, in addition to the actual rows.
  example: []
  syntax:
    content: Task<ArchiveListResult> GetArchiveListByColumnsWithHeaderWithContext2Async(string providerName, string columns, string sortOrder, string restriction, string entities, int page, int pageSize, string options, string context, RequestOptions requestOptions = null)
    parameters:
    - id: providerName
      type: System.String
      description: The name of the archive provider to use; it will be created via the ArchiveProviderFactory from a plugin
    - id: columns
      type: System.String
      description: Comma separated list of the names of the columns wanted.
    - id: sortOrder
      type: System.String
      description: Sort order for the archive. "name asc, dept desc" Can be null, which indicates 'no particular order'
    - id: restriction
      type: System.String
      description: Archive restrictions as string. "updated &gt; '2009.1.1' and registeredBy = 2" Archives will generally throw an exception if no restrictions are set. Pass in an empty array if you really do not want restrictions, but remember that you may end up fetching the first page of millions of rows.
    - id: entities
      type: System.String
      description: Comma separated list of entities to include. Can be null, which indicates 'include all entities'
    - id: page
      type: System.Int32
      description: Page number, page 0 is the first page. Negative page numbers are interpreted as number of rows to skip.
    - id: pageSize
      type: System.Int32
      description: Page size, which should be kept reasonable (say, no more than 1000 rows at a time)
    - id: options
      type: System.String
      description: name=value&amp;amp;... formatted set of options. "rowcount=true" will cause the rowcount to be calculated and populated.
    - id: context
      type: System.String
      description: Context parameter, url-encoded string context parameter for ArchiveProvider constructor
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ArchiveListResult}
      description: Header with optional row count, plus array of archive list items, where each item represents one row of data (row level data + the requested columns)
    content.vb: Function GetArchiveListByColumnsWithHeaderWithContext2Async(providerName As String, columns As String, sortOrder As String, restriction As String, entities As String, page As Integer, pageSize As Integer, options As String, context As String, requestOptions As RequestOptions = Nothing) As Task(Of ArchiveListResult)
  overload: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithHeaderWithContext2Async*
  nameWithType.vb: IArchiveAgent.GetArchiveListByColumnsWithHeaderWithContext2Async(String, String, String, String, String, Integer, Integer, String, String, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithHeaderWithContext2Async(String, String, String, String, String, Integer, Integer, String, String, SuperOffice.WebApi.RequestOptions)
  name.vb: GetArchiveListByColumnsWithHeaderWithContext2Async(String, String, String, String, String, Integer, Integer, String, String, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.ExportArchiveAsync(System.String,System.String,System.String[],System.String[],SuperOffice.WebApi.Data.ArchiveOrderByInfo[],SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],System.String,System.String[],System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IArchiveAgent.ExportArchiveAsync(System.String,System.String,System.String[],System.String[],SuperOffice.WebApi.Data.ArchiveOrderByInfo[],SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],System.String,System.String[],System.Int32,SuperOffice.WebApi.RequestOptions)
  id: ExportArchiveAsync(System.String,System.String,System.String[],System.String[],SuperOffice.WebApi.Data.ArchiveOrderByInfo[],SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],System.String,System.String[],System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IArchiveAgent
  langs:
  - csharp
  - vb
  name: ExportArchiveAsync(string, string, string[], string[], ArchiveOrderByInfo[], ArchiveRestrictionInfo[], string, string[], int, RequestOptions)
  nameWithType: IArchiveAgent.ExportArchiveAsync(string, string, string[], string[], ArchiveOrderByInfo[], ArchiveRestrictionInfo[], string, string[], int, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.ExportArchiveAsync(string, string, string[], string[], SuperOffice.WebApi.Data.ArchiveOrderByInfo[], SuperOffice.WebApi.Data.ArchiveRestrictionInfo[], string, string[], int, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Exports the target archive to a downloadable format.
  example: []
  syntax:
    content: Task<ExportArchiveResult> ExportArchiveAsync(string providerName, string context, string[] desiredEntities, string[] columns, ArchiveOrderByInfo[] sortOrder, ArchiveRestrictionInfo[] restrictions, string exportType, string[] selectedRowIds, int estimatedRowCount, RequestOptions requestOptions = null)
    parameters:
    - id: providerName
      type: System.String
      description: The name of the archive provider to use; it will be created via the ArchiveProviderFactory from a plugin
    - id: context
      type: System.String
      description: Context parameter, url-encoded string context parameter for ArchiveProvider constructor
    - id: desiredEntities
      type: System.String[]
      description: Comma separated list of the names of the desired entities.
    - id: columns
      type: System.String[]
      description: Comma separated list of the names of the columns wanted; supports display names
    - id: sortOrder
      type: SuperOffice.WebApi.Data.ArchiveOrderByInfo[]
      description: ''
    - id: restrictions
      type: SuperOffice.WebApi.Data.ArchiveRestrictionInfo[]
      description: ''
    - id: exportType
      type: System.String
      description: To what format the archive should be exported; Excel, etc.
    - id: selectedRowIds
      type: System.String[]
      description: ''
    - id: estimatedRowCount
      type: System.Int32
      description: The estimated amount of rows to be exported. Used to determine if the operation should be run as a batch task or immediately.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ExportArchiveResult}
      description: ''
    content.vb: Function ExportArchiveAsync(providerName As String, context As String, desiredEntities As String(), columns As String(), sortOrder As ArchiveOrderByInfo(), restrictions As ArchiveRestrictionInfo(), exportType As String, selectedRowIds As String(), estimatedRowCount As Integer, requestOptions As RequestOptions = Nothing) As Task(Of ExportArchiveResult)
  overload: SuperOffice.WebApi.Agents.IArchiveAgent.ExportArchiveAsync*
  nameWithType.vb: IArchiveAgent.ExportArchiveAsync(String, String, String(), String(), ArchiveOrderByInfo(), ArchiveRestrictionInfo(), String, String(), Integer, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IArchiveAgent.ExportArchiveAsync(String, String, String(), String(), SuperOffice.WebApi.Data.ArchiveOrderByInfo(), SuperOffice.WebApi.Data.ArchiveRestrictionInfo(), String, String(), Integer, SuperOffice.WebApi.RequestOptions)
  name.vb: ExportArchiveAsync(String, String, String(), String(), ArchiveOrderByInfo(), ArchiveRestrictionInfo(), String, String(), Integer, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.GetRelatedDataAsync(System.String,System.Int32,System.String[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IArchiveAgent.GetRelatedDataAsync(System.String,System.Int32,System.String[],SuperOffice.WebApi.RequestOptions)
  id: GetRelatedDataAsync(System.String,System.Int32,System.String[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IArchiveAgent
  langs:
  - csharp
  - vb
  name: GetRelatedDataAsync(string, int, string[], RequestOptions)
  nameWithType: IArchiveAgent.GetRelatedDataAsync(string, int, string[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.GetRelatedDataAsync(string, int, string[], SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Get data for fields related to a table record. While this method /can/ be used to fetch plain fields, that is not the intended usage and it does not replace the Entity.Get methods available for that purpose. Nor does it replace the generic DotSyntax/Dynamic archive provider.
  example: []
  syntax:
    content: Task<RelatedData[]> GetRelatedDataAsync(string table, int recordId, string[] fields, RequestOptions requestOptions = null)
    parameters:
    - id: table
      type: System.String
      description: The root table to get related data for, such as 'ticket' or 'y_car'
    - id: recordId
      type: System.Int32
      description: The primary key of the root table to get related data for
    - id: fields
      type: System.String[]
      description: "Names of fields - these need to be valid in the DotSyntax for this table, and can be arbitrarily deep. Examples: 'title', 'created_by.associate_id.person.fullName', 'x_comment'. Do not start with the root table name."
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.RelatedData[]}
      description: Array of field =&gt; ArchiveColumnData objects
    content.vb: Function GetRelatedDataAsync(table As String, recordId As Integer, fields As String(), requestOptions As RequestOptions = Nothing) As Task(Of RelatedData())
  overload: SuperOffice.WebApi.Agents.IArchiveAgent.GetRelatedDataAsync*
  nameWithType.vb: IArchiveAgent.GetRelatedDataAsync(String, Integer, String(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IArchiveAgent.GetRelatedDataAsync(String, Integer, String(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetRelatedDataAsync(String, Integer, String(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.GetRelatedData2Async(System.String,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IArchiveAgent.GetRelatedData2Async(System.String,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetRelatedData2Async(System.String,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IArchiveAgent
  langs:
  - csharp
  - vb
  name: GetRelatedData2Async(string, int, string, RequestOptions)
  nameWithType: IArchiveAgent.GetRelatedData2Async(string, int, string, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.GetRelatedData2Async(string, int, string, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Get data for fields related to a table record. While this method /can/ be used to fetch plain fields, that is not the intended usage and it does not replace the Entity.Get methods available for that purpose. Nor does it replace the generic DotSyntax/Dynamic archive provider.
  example: []
  syntax:
    content: Task<RelatedData[]> GetRelatedData2Async(string table, int recordId, string fields, RequestOptions requestOptions = null)
    parameters:
    - id: table
      type: System.String
      description: The root table to get related data for, such as 'ticket' or 'y_car'
    - id: recordId
      type: System.Int32
      description: The primary key of the root table to get related data for
    - id: fields
      type: System.String
      description: "Names of fields as a comma-separated list - these need to be valid in the DotSyntax for this table, and can be arbitrarily deep. Example: 'title,created_by.associate_id.person.fullName, x_comment'. Do not start with the root table name."
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.RelatedData[]}
      description: Array of field =&gt; ArchiveColumnData objects
    content.vb: Function GetRelatedData2Async(table As String, recordId As Integer, fields As String, requestOptions As RequestOptions = Nothing) As Task(Of RelatedData())
  overload: SuperOffice.WebApi.Agents.IArchiveAgent.GetRelatedData2Async*
  nameWithType.vb: IArchiveAgent.GetRelatedData2Async(String, Integer, String, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IArchiveAgent.GetRelatedData2Async(String, Integer, String, SuperOffice.WebApi.RequestOptions)
  name.vb: GetRelatedData2Async(String, Integer, String, RequestOptions)
references:
- uid: SuperOffice.WebApi.Agents
  commentId: N:SuperOffice.WebApi.Agents
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.WebApi.Agents
  nameWithType: SuperOffice.WebApi.Agents
  fullName: SuperOffice.WebApi.Agents
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.WebApi
    name: WebApi
    isExternal: true
    href: SuperOffice.WebApi.html
  - name: .
  - uid: SuperOffice.WebApi.Agents
    name: Agents
    isExternal: true
    href: SuperOffice.WebApi.Agents.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.WebApi
    name: WebApi
    isExternal: true
    href: SuperOffice.WebApi.html
  - name: .
  - uid: SuperOffice.WebApi.Agents
    name: Agents
    isExternal: true
    href: SuperOffice.WebApi.Agents.html
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.CreateDefaultArchiveListResultAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IArchiveAgent.CreateDefaultArchiveListResultAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IArchiveAgent.html#SuperOffice_WebApi_Agents_IArchiveAgent_CreateDefaultArchiveListResultAsync_SuperOffice_WebApi_RequestOptions_
  name: CreateDefaultArchiveListResultAsync
  nameWithType: IArchiveAgent.CreateDefaultArchiveListResultAsync
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.CreateDefaultArchiveListResultAsync
- uid: SuperOffice.WebApi.RequestOptions
  commentId: T:SuperOffice.WebApi.RequestOptions
  parent: SuperOffice.WebApi
  isExternal: true
  href: SuperOffice.WebApi.RequestOptions.html
  name: RequestOptions
  nameWithType: RequestOptions
  fullName: SuperOffice.WebApi.RequestOptions
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ArchiveListResult}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ArchiveListResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ArchiveListResult>
  nameWithType: Task<ArchiveListResult>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.ArchiveListResult>
  nameWithType.vb: Task(Of ArchiveListResult)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.ArchiveListResult)
  name.vb: Task(Of ArchiveListResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.WebApi.Data.ArchiveListResult
    name: ArchiveListResult
    isExternal: true
    href: SuperOffice.WebApi.Data.ArchiveListResult.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.WebApi.Data.ArchiveListResult
    name: ArchiveListResult
    isExternal: true
    href: SuperOffice.WebApi.Data.ArchiveListResult.html
  - name: )
- uid: SuperOffice.WebApi
  commentId: N:SuperOffice.WebApi
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.WebApi
  nameWithType: SuperOffice.WebApi
  fullName: SuperOffice.WebApi
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.WebApi
    name: WebApi
    isExternal: true
    href: SuperOffice.WebApi.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.WebApi
    name: WebApi
    isExternal: true
    href: SuperOffice.WebApi.html
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.GetActivityFilterAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IArchiveAgent.GetActivityFilterAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IArchiveAgent.html#SuperOffice_WebApi_Agents_IArchiveAgent_GetActivityFilterAsync_SuperOffice_WebApi_RequestOptions_
  name: GetActivityFilterAsync
  nameWithType: IArchiveAgent.GetActivityFilterAsync
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.GetActivityFilterAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ActivityFilter}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ActivityFilter}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ActivityFilter>
  nameWithType: Task<ActivityFilter>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.ActivityFilter>
  nameWithType.vb: Task(Of ActivityFilter)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.ActivityFilter)
  name.vb: Task(Of ActivityFilter)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.WebApi.Data.ActivityFilter
    name: ActivityFilter
    isExternal: true
    href: SuperOffice.WebApi.Data.ActivityFilter.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.WebApi.Data.ActivityFilter
    name: ActivityFilter
    isExternal: true
    href: SuperOffice.WebApi.Data.ActivityFilter.html
  - name: )
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.SetActivityFilterAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IArchiveAgent.SetActivityFilterAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IArchiveAgent.html#SuperOffice_WebApi_Agents_IArchiveAgent_SetActivityFilterAsync_SuperOffice_WebApi_Data_ActivityFilter_SuperOffice_WebApi_RequestOptions_
  name: SetActivityFilterAsync
  nameWithType: IArchiveAgent.SetActivityFilterAsync
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.SetActivityFilterAsync
- uid: SuperOffice.WebApi.Data.ActivityFilter
  commentId: T:SuperOffice.WebApi.Data.ActivityFilter
  parent: SuperOffice.WebApi.Data
  isExternal: true
  href: SuperOffice.WebApi.Data.ActivityFilter.html
  name: ActivityFilter
  nameWithType: ActivityFilter
  fullName: SuperOffice.WebApi.Data.ActivityFilter
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: SuperOffice.WebApi.Data
  commentId: N:SuperOffice.WebApi.Data
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.WebApi.Data
  nameWithType: SuperOffice.WebApi.Data
  fullName: SuperOffice.WebApi.Data
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.WebApi
    name: WebApi
    isExternal: true
    href: SuperOffice.WebApi.html
  - name: .
  - uid: SuperOffice.WebApi.Data
    name: Data
    isExternal: true
    href: SuperOffice.WebApi.Data.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.WebApi
    name: WebApi
    isExternal: true
    href: SuperOffice.WebApi.html
  - name: .
  - uid: SuperOffice.WebApi.Data
    name: Data
    isExternal: true
    href: SuperOffice.WebApi.Data.html
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.GetGroupAssociateIdsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IArchiveAgent.GetGroupAssociateIdsAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IArchiveAgent.html#SuperOffice_WebApi_Agents_IArchiveAgent_GetGroupAssociateIdsAsync_System_Int32___SuperOffice_WebApi_RequestOptions_
  name: GetGroupAssociateIdsAsync
  nameWithType: IArchiveAgent.GetGroupAssociateIdsAsync
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.GetGroupAssociateIdsAsync
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task{System.Int32[]}
  commentId: T:System.Threading.Tasks.Task{System.Int32[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<int[]>
  nameWithType: Task<int[]>
  fullName: System.Threading.Tasks.Task<int[]>
  nameWithType.vb: Task(Of Integer())
  fullName.vb: System.Threading.Tasks.Task(Of Integer())
  name.vb: Task(Of Integer())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveConfigurationAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveConfigurationAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IArchiveAgent.html#SuperOffice_WebApi_Agents_IArchiveAgent_GetArchiveConfigurationAsync_System_String_System_String_SuperOffice_WebApi_RequestOptions_
  name: GetArchiveConfigurationAsync
  nameWithType: IArchiveAgent.GetArchiveConfigurationAsync
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveConfigurationAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ArchiveConfiguration}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ArchiveConfiguration}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ArchiveConfiguration>
  nameWithType: Task<ArchiveConfiguration>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.ArchiveConfiguration>
  nameWithType.vb: Task(Of ArchiveConfiguration)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.ArchiveConfiguration)
  name.vb: Task(Of ArchiveConfiguration)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.WebApi.Data.ArchiveConfiguration
    name: ArchiveConfiguration
    isExternal: true
    href: SuperOffice.WebApi.Data.ArchiveConfiguration.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.WebApi.Data.ArchiveConfiguration
    name: ArchiveConfiguration
    isExternal: true
    href: SuperOffice.WebApi.Data.ArchiveConfiguration.html
  - name: )
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveConfigurationWithContextAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveConfigurationWithContextAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IArchiveAgent.html#SuperOffice_WebApi_Agents_IArchiveAgent_GetArchiveConfigurationWithContextAsync_System_String_System_String_System_String_SuperOffice_WebApi_RequestOptions_
  name: GetArchiveConfigurationWithContextAsync
  nameWithType: IArchiveAgent.GetArchiveConfigurationWithContextAsync
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveConfigurationWithContextAsync
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.SetColumnWidthsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IArchiveAgent.SetColumnWidthsAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IArchiveAgent.html#SuperOffice_WebApi_Agents_IArchiveAgent_SetColumnWidthsAsync_System_String_System_String___SuperOffice_WebApi_RequestOptions_
  name: SetColumnWidthsAsync
  nameWithType: IArchiveAgent.SetColumnWidthsAsync
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.SetColumnWidthsAsync
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.SetChosenEntitiesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IArchiveAgent.SetChosenEntitiesAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IArchiveAgent.html#SuperOffice_WebApi_Agents_IArchiveAgent_SetChosenEntitiesAsync_System_String_System_String_System_String___SuperOffice_WebApi_RequestOptions_
  name: SetChosenEntitiesAsync
  nameWithType: IArchiveAgent.SetChosenEntitiesAsync
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.SetChosenEntitiesAsync
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.SetChosenColumnsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IArchiveAgent.SetChosenColumnsAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IArchiveAgent.html#SuperOffice_WebApi_Agents_IArchiveAgent_SetChosenColumnsAsync_System_String_System_String_System_String___SuperOffice_WebApi_RequestOptions_
  name: SetChosenColumnsAsync
  nameWithType: IArchiveAgent.SetChosenColumnsAsync
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.SetChosenColumnsAsync
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveConfigurationV2Async*
  commentId: Overload:SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveConfigurationV2Async
  isExternal: true
  href: SuperOffice.WebApi.Agents.IArchiveAgent.html#SuperOffice_WebApi_Agents_IArchiveAgent_GetArchiveConfigurationV2Async_System_String_System_String_System_String_System_String_SuperOffice_WebApi_RequestOptions_
  name: GetArchiveConfigurationV2Async
  nameWithType: IArchiveAgent.GetArchiveConfigurationV2Async
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveConfigurationV2Async
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.SetColumnWidthsV2Async*
  commentId: Overload:SuperOffice.WebApi.Agents.IArchiveAgent.SetColumnWidthsV2Async
  isExternal: true
  href: SuperOffice.WebApi.Agents.IArchiveAgent.html#SuperOffice_WebApi_Agents_IArchiveAgent_SetColumnWidthsV2Async_System_String_System_String_System_String_System_String_System_String___SuperOffice_WebApi_RequestOptions_
  name: SetColumnWidthsV2Async
  nameWithType: IArchiveAgent.SetColumnWidthsV2Async
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.SetColumnWidthsV2Async
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.SetChosenEntitiesV2Async*
  commentId: Overload:SuperOffice.WebApi.Agents.IArchiveAgent.SetChosenEntitiesV2Async
  isExternal: true
  href: SuperOffice.WebApi.Agents.IArchiveAgent.html#SuperOffice_WebApi_Agents_IArchiveAgent_SetChosenEntitiesV2Async_System_String_System_String_System_String_System_String_System_String___SuperOffice_WebApi_RequestOptions_
  name: SetChosenEntitiesV2Async
  nameWithType: IArchiveAgent.SetChosenEntitiesV2Async
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.SetChosenEntitiesV2Async
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.SetChosenColumnsV2Async*
  commentId: Overload:SuperOffice.WebApi.Agents.IArchiveAgent.SetChosenColumnsV2Async
  isExternal: true
  href: SuperOffice.WebApi.Agents.IArchiveAgent.html#SuperOffice_WebApi_Agents_IArchiveAgent_SetChosenColumnsV2Async_System_String_System_String_System_String_System_String_System_String___SuperOffice_WebApi_RequestOptions_
  name: SetChosenColumnsV2Async
  nameWithType: IArchiveAgent.SetChosenColumnsV2Async
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.SetChosenColumnsV2Async
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IArchiveAgent.html#SuperOffice_WebApi_Agents_IArchiveAgent_GetArchiveListByColumnsAsync_System_String_System_String___SuperOffice_WebApi_Data_ArchiveOrderByInfo___SuperOffice_WebApi_Data_ArchiveRestrictionInfo___System_String___System_Int32_System_Int32_SuperOffice_WebApi_RequestOptions_
  name: GetArchiveListByColumnsAsync
  nameWithType: IArchiveAgent.GetArchiveListByColumnsAsync
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsAsync
- uid: SuperOffice.WebApi.Data.ArchiveOrderByInfo[]
  isExternal: true
  href: SuperOffice.WebApi.Data.ArchiveOrderByInfo.html
  name: ArchiveOrderByInfo[]
  nameWithType: ArchiveOrderByInfo[]
  fullName: SuperOffice.WebApi.Data.ArchiveOrderByInfo[]
  nameWithType.vb: ArchiveOrderByInfo()
  fullName.vb: SuperOffice.WebApi.Data.ArchiveOrderByInfo()
  name.vb: ArchiveOrderByInfo()
  spec.csharp:
  - uid: SuperOffice.WebApi.Data.ArchiveOrderByInfo
    name: ArchiveOrderByInfo
    isExternal: true
    href: SuperOffice.WebApi.Data.ArchiveOrderByInfo.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.WebApi.Data.ArchiveOrderByInfo
    name: ArchiveOrderByInfo
    isExternal: true
    href: SuperOffice.WebApi.Data.ArchiveOrderByInfo.html
  - name: (
  - name: )
- uid: SuperOffice.WebApi.Data.ArchiveRestrictionInfo[]
  isExternal: true
  href: SuperOffice.WebApi.Data.ArchiveRestrictionInfo.html
  name: ArchiveRestrictionInfo[]
  nameWithType: ArchiveRestrictionInfo[]
  fullName: SuperOffice.WebApi.Data.ArchiveRestrictionInfo[]
  nameWithType.vb: ArchiveRestrictionInfo()
  fullName.vb: SuperOffice.WebApi.Data.ArchiveRestrictionInfo()
  name.vb: ArchiveRestrictionInfo()
  spec.csharp:
  - uid: SuperOffice.WebApi.Data.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    isExternal: true
    href: SuperOffice.WebApi.Data.ArchiveRestrictionInfo.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.WebApi.Data.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    isExternal: true
    href: SuperOffice.WebApi.Data.ArchiveRestrictionInfo.html
  - name: (
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ArchiveListItem[]}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ArchiveListItem[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ArchiveListItem[]>
  nameWithType: Task<ArchiveListItem[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.ArchiveListItem[]>
  nameWithType.vb: Task(Of ArchiveListItem())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.ArchiveListItem())
  name.vb: Task(Of ArchiveListItem())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.WebApi.Data.ArchiveListItem
    name: ArchiveListItem
    isExternal: true
    href: SuperOffice.WebApi.Data.ArchiveListItem.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.WebApi.Data.ArchiveListItem
    name: ArchiveListItem
    isExternal: true
    href: SuperOffice.WebApi.Data.ArchiveListItem.html
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithContextAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithContextAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IArchiveAgent.html#SuperOffice_WebApi_Agents_IArchiveAgent_GetArchiveListByColumnsWithContextAsync_System_String_System_String___SuperOffice_WebApi_Data_ArchiveOrderByInfo___SuperOffice_WebApi_Data_ArchiveRestrictionInfo___System_String___System_Int32_System_Int32_System_String_SuperOffice_WebApi_RequestOptions_
  name: GetArchiveListByColumnsWithContextAsync
  nameWithType: IArchiveAgent.GetArchiveListByColumnsWithContextAsync
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithContextAsync
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IArchiveAgent.html#SuperOffice_WebApi_Agents_IArchiveAgent_GetArchiveListAsync_System_String_System_String_SuperOffice_WebApi_Data_ArchiveOrderByInfo___SuperOffice_WebApi_Data_ArchiveRestrictionInfo___System_String___System_Int32_System_Int32_SuperOffice_WebApi_RequestOptions_
  name: GetArchiveListAsync
  nameWithType: IArchiveAgent.GetArchiveListAsync
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListAsync
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListWithContextAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListWithContextAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IArchiveAgent.html#SuperOffice_WebApi_Agents_IArchiveAgent_GetArchiveListWithContextAsync_System_String_System_String_SuperOffice_WebApi_Data_ArchiveOrderByInfo___SuperOffice_WebApi_Data_ArchiveRestrictionInfo___System_String___System_Int32_System_Int32_System_String_SuperOffice_WebApi_RequestOptions_
  name: GetArchiveListWithContextAsync
  nameWithType: IArchiveAgent.GetArchiveListWithContextAsync
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListWithContextAsync
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithHeaderAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithHeaderAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IArchiveAgent.html#SuperOffice_WebApi_Agents_IArchiveAgent_GetArchiveListByColumnsWithHeaderAsync_System_String_System_String___SuperOffice_WebApi_Data_ArchiveOrderByInfo___SuperOffice_WebApi_Data_ArchiveRestrictionInfo___System_String___System_Int32_System_Int32_System_String_SuperOffice_WebApi_RequestOptions_
  name: GetArchiveListByColumnsWithHeaderAsync
  nameWithType: IArchiveAgent.GetArchiveListByColumnsWithHeaderAsync
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithHeaderAsync
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.GetProviderNamesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IArchiveAgent.GetProviderNamesAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IArchiveAgent.html#SuperOffice_WebApi_Agents_IArchiveAgent_GetProviderNamesAsync_SuperOffice_WebApi_RequestOptions_
  name: GetProviderNamesAsync
  nameWithType: IArchiveAgent.GetProviderNamesAsync
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.GetProviderNamesAsync
- uid: System.Threading.Tasks.Task{System.String[]}
  commentId: T:System.Threading.Tasks.Task{System.String[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<string[]>
  nameWithType: Task<string[]>
  fullName: System.Threading.Tasks.Task<string[]>
  nameWithType.vb: Task(Of String())
  fullName.vb: System.Threading.Tasks.Task(Of String())
  name.vb: Task(Of String())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithHeaderWithContextAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithHeaderWithContextAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IArchiveAgent.html#SuperOffice_WebApi_Agents_IArchiveAgent_GetArchiveListByColumnsWithHeaderWithContextAsync_System_String_System_String___SuperOffice_WebApi_Data_ArchiveOrderByInfo___SuperOffice_WebApi_Data_ArchiveRestrictionInfo___System_String___System_Int32_System_Int32_System_String_System_String_SuperOffice_WebApi_RequestOptions_
  name: GetArchiveListByColumnsWithHeaderWithContextAsync
  nameWithType: IArchiveAgent.GetArchiveListByColumnsWithHeaderWithContextAsync
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithHeaderWithContextAsync
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.GetAvailableColumnsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IArchiveAgent.GetAvailableColumnsAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IArchiveAgent.html#SuperOffice_WebApi_Agents_IArchiveAgent_GetAvailableColumnsAsync_System_String_System_String_SuperOffice_WebApi_RequestOptions_
  name: GetAvailableColumnsAsync
  nameWithType: IArchiveAgent.GetAvailableColumnsAsync
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.GetAvailableColumnsAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ArchiveColumnInfo[]}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ArchiveColumnInfo[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ArchiveColumnInfo[]>
  nameWithType: Task<ArchiveColumnInfo[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.ArchiveColumnInfo[]>
  nameWithType.vb: Task(Of ArchiveColumnInfo())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.ArchiveColumnInfo())
  name.vb: Task(Of ArchiveColumnInfo())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.WebApi.Data.ArchiveColumnInfo
    name: ArchiveColumnInfo
    isExternal: true
    href: SuperOffice.WebApi.Data.ArchiveColumnInfo.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.WebApi.Data.ArchiveColumnInfo
    name: ArchiveColumnInfo
    isExternal: true
    href: SuperOffice.WebApi.Data.ArchiveColumnInfo.html
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.GetAvailableEntitiesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IArchiveAgent.GetAvailableEntitiesAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IArchiveAgent.html#SuperOffice_WebApi_Agents_IArchiveAgent_GetAvailableEntitiesAsync_System_String_System_String_SuperOffice_WebApi_RequestOptions_
  name: GetAvailableEntitiesAsync
  nameWithType: IArchiveAgent.GetAvailableEntitiesAsync
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.GetAvailableEntitiesAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.MDOListItem[]}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.MDOListItem[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<MDOListItem[]>
  nameWithType: Task<MDOListItem[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.MDOListItem[]>
  nameWithType.vb: Task(Of MDOListItem())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.MDOListItem())
  name.vb: Task(Of MDOListItem())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.WebApi.Data.MDOListItem
    name: MDOListItem
    isExternal: true
    href: SuperOffice.WebApi.Data.MDOListItem.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.WebApi.Data.MDOListItem
    name: MDOListItem
    isExternal: true
    href: SuperOffice.WebApi.Data.MDOListItem.html
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumns2Async*
  commentId: Overload:SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumns2Async
  isExternal: true
  href: SuperOffice.WebApi.Agents.IArchiveAgent.html#SuperOffice_WebApi_Agents_IArchiveAgent_GetArchiveListByColumns2Async_System_String_System_String_System_String_System_String_System_String_System_Int32_System_Int32_SuperOffice_WebApi_RequestOptions_
  name: GetArchiveListByColumns2Async
  nameWithType: IArchiveAgent.GetArchiveListByColumns2Async
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumns2Async
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithContext2Async*
  commentId: Overload:SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithContext2Async
  isExternal: true
  href: SuperOffice.WebApi.Agents.IArchiveAgent.html#SuperOffice_WebApi_Agents_IArchiveAgent_GetArchiveListByColumnsWithContext2Async_System_String_System_String_System_String_System_String_System_String_System_Int32_System_Int32_System_String_SuperOffice_WebApi_RequestOptions_
  name: GetArchiveListByColumnsWithContext2Async
  nameWithType: IArchiveAgent.GetArchiveListByColumnsWithContext2Async
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithContext2Async
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveList2Async*
  commentId: Overload:SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveList2Async
  isExternal: true
  href: SuperOffice.WebApi.Agents.IArchiveAgent.html#SuperOffice_WebApi_Agents_IArchiveAgent_GetArchiveList2Async_System_String_System_String_System_String_System_String_System_String_System_Int32_System_Int32_SuperOffice_WebApi_RequestOptions_
  name: GetArchiveList2Async
  nameWithType: IArchiveAgent.GetArchiveList2Async
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveList2Async
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListWithContext2Async*
  commentId: Overload:SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListWithContext2Async
  isExternal: true
  href: SuperOffice.WebApi.Agents.IArchiveAgent.html#SuperOffice_WebApi_Agents_IArchiveAgent_GetArchiveListWithContext2Async_System_String_System_String_System_String_System_String_System_String_System_Int32_System_Int32_System_String_SuperOffice_WebApi_RequestOptions_
  name: GetArchiveListWithContext2Async
  nameWithType: IArchiveAgent.GetArchiveListWithContext2Async
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListWithContext2Async
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithHeader2Async*
  commentId: Overload:SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithHeader2Async
  isExternal: true
  href: SuperOffice.WebApi.Agents.IArchiveAgent.html#SuperOffice_WebApi_Agents_IArchiveAgent_GetArchiveListByColumnsWithHeader2Async_System_String_System_String_System_String_System_String_System_String_System_Int32_System_Int32_System_String_SuperOffice_WebApi_RequestOptions_
  name: GetArchiveListByColumnsWithHeader2Async
  nameWithType: IArchiveAgent.GetArchiveListByColumnsWithHeader2Async
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithHeader2Async
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithHeaderWithContext2Async*
  commentId: Overload:SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithHeaderWithContext2Async
  isExternal: true
  href: SuperOffice.WebApi.Agents.IArchiveAgent.html#SuperOffice_WebApi_Agents_IArchiveAgent_GetArchiveListByColumnsWithHeaderWithContext2Async_System_String_System_String_System_String_System_String_System_String_System_Int32_System_Int32_System_String_System_String_SuperOffice_WebApi_RequestOptions_
  name: GetArchiveListByColumnsWithHeaderWithContext2Async
  nameWithType: IArchiveAgent.GetArchiveListByColumnsWithHeaderWithContext2Async
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.GetArchiveListByColumnsWithHeaderWithContext2Async
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.ExportArchiveAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IArchiveAgent.ExportArchiveAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IArchiveAgent.html#SuperOffice_WebApi_Agents_IArchiveAgent_ExportArchiveAsync_System_String_System_String_System_String___System_String___SuperOffice_WebApi_Data_ArchiveOrderByInfo___SuperOffice_WebApi_Data_ArchiveRestrictionInfo___System_String_System_String___System_Int32_SuperOffice_WebApi_RequestOptions_
  name: ExportArchiveAsync
  nameWithType: IArchiveAgent.ExportArchiveAsync
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.ExportArchiveAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ExportArchiveResult}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ExportArchiveResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ExportArchiveResult>
  nameWithType: Task<ExportArchiveResult>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.ExportArchiveResult>
  nameWithType.vb: Task(Of ExportArchiveResult)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.ExportArchiveResult)
  name.vb: Task(Of ExportArchiveResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.WebApi.Data.ExportArchiveResult
    name: ExportArchiveResult
    isExternal: true
    href: SuperOffice.WebApi.Data.ExportArchiveResult.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.WebApi.Data.ExportArchiveResult
    name: ExportArchiveResult
    isExternal: true
    href: SuperOffice.WebApi.Data.ExportArchiveResult.html
  - name: )
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.GetRelatedDataAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IArchiveAgent.GetRelatedDataAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IArchiveAgent.html#SuperOffice_WebApi_Agents_IArchiveAgent_GetRelatedDataAsync_System_String_System_Int32_System_String___SuperOffice_WebApi_RequestOptions_
  name: GetRelatedDataAsync
  nameWithType: IArchiveAgent.GetRelatedDataAsync
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.GetRelatedDataAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.RelatedData[]}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.RelatedData[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<RelatedData[]>
  nameWithType: Task<RelatedData[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.RelatedData[]>
  nameWithType.vb: Task(Of RelatedData())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.RelatedData())
  name.vb: Task(Of RelatedData())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.WebApi.Data.RelatedData
    name: RelatedData
    isExternal: true
    href: SuperOffice.WebApi.Data.RelatedData.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.WebApi.Data.RelatedData
    name: RelatedData
    isExternal: true
    href: SuperOffice.WebApi.Data.RelatedData.html
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.WebApi.Agents.IArchiveAgent.GetRelatedData2Async*
  commentId: Overload:SuperOffice.WebApi.Agents.IArchiveAgent.GetRelatedData2Async
  isExternal: true
  href: SuperOffice.WebApi.Agents.IArchiveAgent.html#SuperOffice_WebApi_Agents_IArchiveAgent_GetRelatedData2Async_System_String_System_Int32_System_String_SuperOffice_WebApi_RequestOptions_
  name: GetRelatedData2Async
  nameWithType: IArchiveAgent.GetRelatedData2Async
  fullName: SuperOffice.WebApi.Agents.IArchiveAgent.GetRelatedData2Async
