### YamlMime:ManagedReference
items:
- uid: SuperOffice.WebApi.Agents.DatabaseTableAgent
  commentId: T:SuperOffice.WebApi.Agents.DatabaseTableAgent
  id: DatabaseTableAgent
  parent: SuperOffice.WebApi.Agents
  children:
  - SuperOffice.WebApi.Agents.DatabaseTableAgent.#ctor(SuperOffice.WebApi.WebApiOptions,System.Net.Http.HttpClient)
  - SuperOffice.WebApi.Agents.DatabaseTableAgent.#ctor(System.Net.Http.HttpClient)
  - SuperOffice.WebApi.Agents.DatabaseTableAgent.DeleteAsync(System.String,System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.DatabaseTableAgent.DeleteRowAsync(System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.DatabaseTableAgent.InsertAsync(System.String,System.String[],System.String[][],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.DatabaseTableAgent.InsertRowAsync(System.String,SuperOffice.WebApi.Data.StringDictionary,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.DatabaseTableAgent.ReadRowAsync(System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.DatabaseTableAgent.TruncateAsync(System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.DatabaseTableAgent.UpdateRowAsync(System.String,System.Int32,SuperOffice.WebApi.Data.StringDictionary,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.DatabaseTableAgent.UpsertAsync(System.String,System.String[],System.String[],System.String[][],SuperOffice.WebApi.Data.UpsertNomatchAction,System.Boolean,SuperOffice.WebApi.RequestOptions)
  langs:
  - csharp
  - vb
  name: DatabaseTableAgent
  nameWithType: DatabaseTableAgent
  fullName: SuperOffice.WebApi.Agents.DatabaseTableAgent
  type: Class
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nAgent used for CRUD operations on database tables. Read, add, update, delete rows in tables.\n<p></p>\n<strong>Online Restricted:</strong> This agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  example:
  - "\n<pre><code>  using SuperOffice.WebApi;\n  using SuperOffice.WebApi.Agents;\n\n  var mySession = new WebApiOptions(&quot;http://example.com/super/api&quot;);\n  mySession.Authorization = new AuthorizationUsernamePassword(&quot;user&quot;, &quot;pass&quot;);\n  using (DatabaseTableAgent agent = new DatabaseTableAgent(mySession))\n  {\n        // call methods on agent here...\n  }</code></pre>\n"
  syntax:
    content: 'public class DatabaseTableAgent : AgentBase, IDisposable'
    content.vb: >-
      Public Class DatabaseTableAgent
          Inherits AgentBase
          Implements IDisposable
  inheritance:
  - System.Object
  - SuperOffice.WebApi.Agents.AgentBase
  implements:
  - System.IDisposable
  inheritedMembers:
  - SuperOffice.WebApi.Agents.AgentBase._json
  - SuperOffice.WebApi.Agents.AgentBase._binary
  - SuperOffice.WebApi.Agents.AgentBase._config
  - SuperOffice.WebApi.Agents.AgentBase._client
  - SuperOffice.WebApi.Agents.AgentBase.Merge(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
  - SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream(System.Net.Http.HttpMethod,System.String,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
  - SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization(SuperOffice.WebApi.IAuthorization)
  - SuperOffice.WebApi.Agents.AgentBase.CancelRequest
  - SuperOffice.WebApi.Agents.AgentBase.SendRequestObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
  - SuperOffice.WebApi.Agents.AgentBase.SendRequest(System.Net.Http.HttpRequestMessage,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage)
  - SuperOffice.WebApi.Agents.AgentBase.ParseResponse``1(System.Net.Http.HttpResponseMessage)
  - SuperOffice.WebApi.Agents.AgentBase.Finally(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AgentBase.Dispose
  - SuperOffice.WebApi.Agents.AgentBase.Configuration
  - SuperOffice.WebApi.Agents.AgentBase.Client
  - SuperOffice.WebApi.Agents.AgentBase.HasRunningRequest
  - SuperOffice.WebApi.Agents.AgentBase.ClientCancellationTokenSource
  - SuperOffice.WebApi.Agents.AgentBase.ProgressListener
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.WebApi.Agents.DatabaseTableAgent.#ctor(System.Net.Http.HttpClient)
  commentId: M:SuperOffice.WebApi.Agents.DatabaseTableAgent.#ctor(System.Net.Http.HttpClient)
  id: '#ctor(System.Net.Http.HttpClient)'
  parent: SuperOffice.WebApi.Agents.DatabaseTableAgent
  langs:
  - csharp
  - vb
  name: DatabaseTableAgent(HttpClient)
  nameWithType: DatabaseTableAgent.DatabaseTableAgent(HttpClient)
  fullName: SuperOffice.WebApi.Agents.DatabaseTableAgent.DatabaseTableAgent(System.Net.Http.HttpClient)
  type: Constructor
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nConstructor: Agent used for CRUD operations on database tables. Read, add, update, delete rows in tables.\n"
  syntax:
    content: public DatabaseTableAgent(HttpClient httpClient)
    parameters:
    - id: httpClient
      type: System.Net.Http.HttpClient
      description: Use this HTTP client instead of making a new one. Client is disposed when agent is disposed.
    content.vb: Public Sub New(httpClient As HttpClient)
  overload: SuperOffice.WebApi.Agents.DatabaseTableAgent.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.DatabaseTableAgent.#ctor(SuperOffice.WebApi.WebApiOptions,System.Net.Http.HttpClient)
  commentId: M:SuperOffice.WebApi.Agents.DatabaseTableAgent.#ctor(SuperOffice.WebApi.WebApiOptions,System.Net.Http.HttpClient)
  id: '#ctor(SuperOffice.WebApi.WebApiOptions,System.Net.Http.HttpClient)'
  parent: SuperOffice.WebApi.Agents.DatabaseTableAgent
  langs:
  - csharp
  - vb
  name: DatabaseTableAgent(WebApiOptions, HttpClient)
  nameWithType: DatabaseTableAgent.DatabaseTableAgent(WebApiOptions, HttpClient)
  fullName: SuperOffice.WebApi.Agents.DatabaseTableAgent.DatabaseTableAgent(SuperOffice.WebApi.WebApiOptions, System.Net.Http.HttpClient)
  type: Constructor
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nConstructor: Agent used for CRUD operations on database tables. Read, add, update, delete rows in tables.\n"
  syntax:
    content: public DatabaseTableAgent(WebApiOptions options, HttpClient httpClient = null)
    parameters:
    - id: options
      type: SuperOffice.WebApi.WebApiOptions
      description: Base URL and authentication values.
    - id: httpClient
      type: System.Net.Http.HttpClient
      description: 'Optional: Use this HTTP client instead of making a new one. Client is disposed when agent is disposed.'
    content.vb: Public Sub New(options As WebApiOptions, httpClient As HttpClient = Nothing)
  overload: SuperOffice.WebApi.Agents.DatabaseTableAgent.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.DatabaseTableAgent.ReadRowAsync(System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.DatabaseTableAgent.ReadRowAsync(System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: ReadRowAsync(System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.DatabaseTableAgent
  langs:
  - csharp
  - vb
  name: ReadRowAsync(String, Int32, RequestOptions)
  nameWithType: DatabaseTableAgent.ReadRowAsync(String, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.DatabaseTableAgent.ReadRowAsync(System.String, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nRead a row from a table\n<p></p>\n<strong>Online Restricted:</strong> The DatabaseTable agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: public Task<TableRecord> ReadRowAsync(string tableName, int id, RequestOptions requestOptions = null)
    parameters:
    - id: tableName
      type: System.String
      description: The name of the table to fetch; in the current release this must be an &apos;extratable&apos;. Use the database name, on the form y_aTable
    - id: id
      type: System.Int32
      description: The id of the row to fetch
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TableRecord}
      description: The row from the table
    content.vb: Public Function ReadRowAsync(tableName As String, id As Integer, requestOptions As RequestOptions = Nothing) As Task(Of TableRecord)
  overload: SuperOffice.WebApi.Agents.DatabaseTableAgent.ReadRowAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.DatabaseTableAgent.InsertRowAsync(System.String,SuperOffice.WebApi.Data.StringDictionary,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.DatabaseTableAgent.InsertRowAsync(System.String,SuperOffice.WebApi.Data.StringDictionary,SuperOffice.WebApi.RequestOptions)
  id: InsertRowAsync(System.String,SuperOffice.WebApi.Data.StringDictionary,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.DatabaseTableAgent
  langs:
  - csharp
  - vb
  name: InsertRowAsync(String, StringDictionary, RequestOptions)
  nameWithType: DatabaseTableAgent.InsertRowAsync(String, StringDictionary, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.DatabaseTableAgent.InsertRowAsync(System.String, SuperOffice.WebApi.Data.StringDictionary, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nInsert a row into a table\n<p></p>\n<strong>Online Restricted:</strong> The DatabaseTable agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: public Task<int> InsertRowAsync(string tableName, StringDictionary values, RequestOptions requestOptions = null)
    parameters:
    - id: tableName
      type: System.String
      description: The name of the table to insert into; in the current release this must be an &apos;extratable&apos;. Use the database name, on the form y_aTable
    - id: values
      type: SuperOffice.WebApi.Data.StringDictionary
      description: A StringDictionary with the values to insert. You do not need to specify all the values in the table. The omitted ones will get default values
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: The id of the newly inserted row
    content.vb: Public Function InsertRowAsync(tableName As String, values As StringDictionary, requestOptions As RequestOptions = Nothing) As Task(Of Integer)
  overload: SuperOffice.WebApi.Agents.DatabaseTableAgent.InsertRowAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.DatabaseTableAgent.UpdateRowAsync(System.String,System.Int32,SuperOffice.WebApi.Data.StringDictionary,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.DatabaseTableAgent.UpdateRowAsync(System.String,System.Int32,SuperOffice.WebApi.Data.StringDictionary,SuperOffice.WebApi.RequestOptions)
  id: UpdateRowAsync(System.String,System.Int32,SuperOffice.WebApi.Data.StringDictionary,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.DatabaseTableAgent
  langs:
  - csharp
  - vb
  name: UpdateRowAsync(String, Int32, StringDictionary, RequestOptions)
  nameWithType: DatabaseTableAgent.UpdateRowAsync(String, Int32, StringDictionary, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.DatabaseTableAgent.UpdateRowAsync(System.String, System.Int32, SuperOffice.WebApi.Data.StringDictionary, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdate a row in a table\n<p></p>\n<strong>Online Restricted:</strong> The DatabaseTable agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: public Task UpdateRowAsync(string tableName, int id, StringDictionary values, RequestOptions requestOptions = null)
    parameters:
    - id: tableName
      type: System.String
      description: The name of the table to update; in the current release this must be an &apos;extratable&apos;. Use the database name, on the form y_aTable
    - id: id
      type: System.Int32
      description: The id of the row to update
    - id: values
      type: SuperOffice.WebApi.Data.StringDictionary
      description: A StringDictionary with the values to update. You do not need to specify all the values in the table. The omitted ones will remain unchanged
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function UpdateRowAsync(tableName As String, id As Integer, values As StringDictionary, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.DatabaseTableAgent.UpdateRowAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.DatabaseTableAgent.DeleteRowAsync(System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.DatabaseTableAgent.DeleteRowAsync(System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: DeleteRowAsync(System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.DatabaseTableAgent
  langs:
  - csharp
  - vb
  name: DeleteRowAsync(String, Int32, RequestOptions)
  nameWithType: DatabaseTableAgent.DeleteRowAsync(String, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.DatabaseTableAgent.DeleteRowAsync(System.String, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nDelete a row from a table\n<p></p>\n<strong>Online Restricted:</strong> The DatabaseTable agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: public Task DeleteRowAsync(string tableName, int id, RequestOptions requestOptions = null)
    parameters:
    - id: tableName
      type: System.String
      description: The name of the table to delete from; in the current release this must be an &apos;extratable&apos;. Use the database name, on the form y_aTable
    - id: id
      type: System.Int32
      description: The id of the row to delete
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function DeleteRowAsync(tableName As String, id As Integer, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.DatabaseTableAgent.DeleteRowAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.DatabaseTableAgent.InsertAsync(System.String,System.String[],System.String[][],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.DatabaseTableAgent.InsertAsync(System.String,System.String[],System.String[][],SuperOffice.WebApi.RequestOptions)
  id: InsertAsync(System.String,System.String[],System.String[][],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.DatabaseTableAgent
  langs:
  - csharp
  - vb
  name: InsertAsync(String, String[], String[][], RequestOptions)
  nameWithType: DatabaseTableAgent.InsertAsync(String, String[], String[][], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.DatabaseTableAgent.InsertAsync(System.String, System.String[], System.String[][], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMass-insert rows, with or without primary keys specified. Works on physical tables with no special processing for udef etc.; traveltransactionlog and WebHooks are supported\n<p></p>\n<strong>Online Restricted:</strong> The DatabaseTable agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: public Task<MassOperationResult> InsertAsync(string tableName, string[] columns, string[][] data, RequestOptions requestOptions = null)
    parameters:
    - id: tableName
      type: System.String
      description: The name of the table where rows should be inserted
    - id: columns
      type: System.String[]
      description: List of column names, in the same order as in the Data parameter
    - id: data
      type: System.String[][]
      description: Outer array = rows, inner = columns in specified order; use CultureDataFormatter to format values that aren&apos;t string or int
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.MassOperationResult}
      description: Summary of results
    content.vb: Public Function InsertAsync(tableName As String, columns As String(), data As String()(), requestOptions As RequestOptions = Nothing) As Task(Of MassOperationResult)
  overload: SuperOffice.WebApi.Agents.DatabaseTableAgent.InsertAsync*
  nameWithType.vb: DatabaseTableAgent.InsertAsync(String, String(), String()(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.DatabaseTableAgent.InsertAsync(System.String, System.String(), System.String()(), SuperOffice.WebApi.RequestOptions)
  name.vb: InsertAsync(String, String(), String()(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.DatabaseTableAgent.TruncateAsync(System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.DatabaseTableAgent.TruncateAsync(System.String,SuperOffice.WebApi.RequestOptions)
  id: TruncateAsync(System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.DatabaseTableAgent
  langs:
  - csharp
  - vb
  name: TruncateAsync(String, RequestOptions)
  nameWithType: DatabaseTableAgent.TruncateAsync(String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.DatabaseTableAgent.TruncateAsync(System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nDrop all rows in a table. This clearance is not individually logged in TravelTransactionlog or Webhook/script calls\n<p></p>\n<strong>Online Restricted:</strong> The DatabaseTable agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: public Task<MassOperationResult> TruncateAsync(string tableName, RequestOptions requestOptions = null)
    parameters:
    - id: tableName
      type: System.String
      description: Name of table to be truncated
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.MassOperationResult}
      description: Summary of results
    content.vb: Public Function TruncateAsync(tableName As String, requestOptions As RequestOptions = Nothing) As Task(Of MassOperationResult)
  overload: SuperOffice.WebApi.Agents.DatabaseTableAgent.TruncateAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.DatabaseTableAgent.UpsertAsync(System.String,System.String[],System.String[],System.String[][],SuperOffice.WebApi.Data.UpsertNomatchAction,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.DatabaseTableAgent.UpsertAsync(System.String,System.String[],System.String[],System.String[][],SuperOffice.WebApi.Data.UpsertNomatchAction,System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: UpsertAsync(System.String,System.String[],System.String[],System.String[][],SuperOffice.WebApi.Data.UpsertNomatchAction,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.DatabaseTableAgent
  langs:
  - csharp
  - vb
  name: UpsertAsync(String, String[], String[], String[][], UpsertNomatchAction, Boolean, RequestOptions)
  nameWithType: DatabaseTableAgent.UpsertAsync(String, String[], String[], String[][], UpsertNomatchAction, Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.DatabaseTableAgent.UpsertAsync(System.String, System.String[], System.String[], System.String[][], SuperOffice.WebApi.Data.UpsertNomatchAction, System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nInsert or update rows, optionally deleting/zeroing &apos;leftover&apos; rows. Special support for UDEF, as well as optional extensive information return. Traveltransactionlog and WebHooks are supported\n<p></p>\n<strong>Online Restricted:</strong> The DatabaseTable agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: public Task<MassOperationResult> UpsertAsync(string tableName, string[] columns, string[] keys, string[][] data, UpsertNomatchAction nomatchAction, bool returnRowStatus, RequestOptions requestOptions = null)
    parameters:
    - id: tableName
      type: System.String
      description: The name of the table where rows should be inserted or updated
    - id: columns
      type: System.String[]
      description: List of column names, in the same order as in the data
    - id: keys
      type: System.String[]
      description: List of columns that are to be used as keys, to match any existing rows
    - id: data
      type: System.String[][]
      description: Outer array = row, inner = column in specified order; use CultureDataFormatter to format values
    - id: nomatchAction
      type: SuperOffice.WebApi.Data.UpsertNomatchAction
      description: Action to take on rows in the target table, that are not matched by any rows in the incoming data. Use the deletion options with care. NEVER use deletion if your Upsert is so large you need to divide it into multiple batches.
    - id: returnRowStatus
      type: System.Boolean
      description: If true, then the &apos;RowStatus&apos; member of the return carrier will be populated with a per-row status, for each incoming row
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.MassOperationResult}
      description: Summary of results
    content.vb: Public Function UpsertAsync(tableName As String, columns As String(), keys As String(), data As String()(), nomatchAction As UpsertNomatchAction, returnRowStatus As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of MassOperationResult)
  overload: SuperOffice.WebApi.Agents.DatabaseTableAgent.UpsertAsync*
  nameWithType.vb: DatabaseTableAgent.UpsertAsync(String, String(), String(), String()(), UpsertNomatchAction, Boolean, RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.DatabaseTableAgent.UpsertAsync(System.String, System.String(), System.String(), System.String()(), SuperOffice.WebApi.Data.UpsertNomatchAction, System.Boolean, SuperOffice.WebApi.RequestOptions)
  name.vb: UpsertAsync(String, String(), String(), String()(), UpsertNomatchAction, Boolean, RequestOptions)
- uid: SuperOffice.WebApi.Agents.DatabaseTableAgent.DeleteAsync(System.String,System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.DatabaseTableAgent.DeleteAsync(System.String,System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: DeleteAsync(System.String,System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.DatabaseTableAgent
  langs:
  - csharp
  - vb
  name: DeleteAsync(String, Int32[], RequestOptions)
  nameWithType: DatabaseTableAgent.DeleteAsync(String, Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.DatabaseTableAgent.DeleteAsync(System.String, System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nDelete rows, by primary key; traveltransactionlog and WebHooks are supported\n<p></p>\n<strong>Online Restricted:</strong> The DatabaseTable agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: public Task<MassOperationResult> DeleteAsync(string tableName, int[] iDs, RequestOptions requestOptions = null)
    parameters:
    - id: tableName
      type: System.String
      description: The name of the table where rows should be deleted
    - id: iDs
      type: System.Int32[]
      description: Primary keys of the rows to be deleted
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.MassOperationResult}
      description: Summary of results
    content.vb: Public Function DeleteAsync(tableName As String, iDs As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of MassOperationResult)
  overload: SuperOffice.WebApi.Agents.DatabaseTableAgent.DeleteAsync*
  nameWithType.vb: DatabaseTableAgent.DeleteAsync(String, Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.DatabaseTableAgent.DeleteAsync(System.String, System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: DeleteAsync(String, Int32(), RequestOptions)
references:
- uid: SuperOffice.WebApi.Agents
  commentId: N:SuperOffice.WebApi.Agents
  isExternal: true
  name: SuperOffice.WebApi.Agents
  nameWithType: SuperOffice.WebApi.Agents
  fullName: SuperOffice.WebApi.Agents
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.WebApi.Agents.AgentBase
  commentId: T:SuperOffice.WebApi.Agents.AgentBase
  parent: SuperOffice.WebApi.Agents
  isExternal: true
  name: AgentBase
  nameWithType: AgentBase
  fullName: SuperOffice.WebApi.Agents.AgentBase
- uid: System.IDisposable
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: SuperOffice.WebApi.Agents.AgentBase._json
  commentId: F:SuperOffice.WebApi.Agents.AgentBase._json
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: _json
  nameWithType: AgentBase._json
  fullName: SuperOffice.WebApi.Agents.AgentBase._json
- uid: SuperOffice.WebApi.Agents.AgentBase._binary
  commentId: F:SuperOffice.WebApi.Agents.AgentBase._binary
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: _binary
  nameWithType: AgentBase._binary
  fullName: SuperOffice.WebApi.Agents.AgentBase._binary
- uid: SuperOffice.WebApi.Agents.AgentBase._config
  commentId: F:SuperOffice.WebApi.Agents.AgentBase._config
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: _config
  nameWithType: AgentBase._config
  fullName: SuperOffice.WebApi.Agents.AgentBase._config
- uid: SuperOffice.WebApi.Agents.AgentBase._client
  commentId: F:SuperOffice.WebApi.Agents.AgentBase._client
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: _client
  nameWithType: AgentBase._client
  fullName: SuperOffice.WebApi.Agents.AgentBase._client
- uid: SuperOffice.WebApi.Agents.AgentBase.Merge(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.Merge(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: Merge(RequestOptions)
  nameWithType: AgentBase.Merge(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AgentBase.Merge(SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.Merge(SuperOffice.WebApi.RequestOptions)
    name: Merge
    nameWithType: AgentBase.Merge
    fullName: SuperOffice.WebApi.Agents.AgentBase.Merge
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.Merge(SuperOffice.WebApi.RequestOptions)
    name: Merge
    nameWithType: AgentBase.Merge
    fullName: SuperOffice.WebApi.Agents.AgentBase.Merge
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: BuildRequestFromObject(HttpMethod, String, Object, WebApiOptions, String)
  nameWithType: AgentBase.BuildRequestFromObject(HttpMethod, String, Object, WebApiOptions, String)
  fullName: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject(System.Net.Http.HttpMethod, System.String, System.Object, SuperOffice.WebApi.WebApiOptions, System.String)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
    name: BuildRequestFromObject
    nameWithType: AgentBase.BuildRequestFromObject
    fullName: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.WebApiOptions
    name: WebApiOptions
    nameWithType: WebApiOptions
    fullName: SuperOffice.WebApi.WebApiOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
    name: BuildRequestFromObject
    nameWithType: AgentBase.BuildRequestFromObject
    fullName: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.WebApiOptions
    name: WebApiOptions
    nameWithType: WebApiOptions
    fullName: SuperOffice.WebApi.WebApiOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream(System.Net.Http.HttpMethod,System.String,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream(System.Net.Http.HttpMethod,System.String,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: BuildRequestFromStream(HttpMethod, String, Stream, WebApiOptions, String)
  nameWithType: AgentBase.BuildRequestFromStream(HttpMethod, String, Stream, WebApiOptions, String)
  fullName: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream(System.Net.Http.HttpMethod, System.String, System.IO.Stream, SuperOffice.WebApi.WebApiOptions, System.String)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream(System.Net.Http.HttpMethod,System.String,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
    name: BuildRequestFromStream
    nameWithType: AgentBase.BuildRequestFromStream
    fullName: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.WebApiOptions
    name: WebApiOptions
    nameWithType: WebApiOptions
    fullName: SuperOffice.WebApi.WebApiOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream(System.Net.Http.HttpMethod,System.String,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
    name: BuildRequestFromStream
    nameWithType: AgentBase.BuildRequestFromStream
    fullName: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.WebApiOptions
    name: WebApiOptions
    nameWithType: WebApiOptions
    fullName: SuperOffice.WebApi.WebApiOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization(SuperOffice.WebApi.IAuthorization)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization(SuperOffice.WebApi.IAuthorization)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: ParseAuthorization(IAuthorization)
  nameWithType: AgentBase.ParseAuthorization(IAuthorization)
  fullName: SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization(SuperOffice.WebApi.IAuthorization)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization(SuperOffice.WebApi.IAuthorization)
    name: ParseAuthorization
    nameWithType: AgentBase.ParseAuthorization
    fullName: SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.IAuthorization
    name: IAuthorization
    nameWithType: IAuthorization
    fullName: SuperOffice.WebApi.IAuthorization
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization(SuperOffice.WebApi.IAuthorization)
    name: ParseAuthorization
    nameWithType: AgentBase.ParseAuthorization
    fullName: SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.IAuthorization
    name: IAuthorization
    nameWithType: IAuthorization
    fullName: SuperOffice.WebApi.IAuthorization
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.CancelRequest
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.CancelRequest
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: CancelRequest()
  nameWithType: AgentBase.CancelRequest()
  fullName: SuperOffice.WebApi.Agents.AgentBase.CancelRequest()
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.CancelRequest
    name: CancelRequest
    nameWithType: AgentBase.CancelRequest
    fullName: SuperOffice.WebApi.Agents.AgentBase.CancelRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.CancelRequest
    name: CancelRequest
    nameWithType: AgentBase.CancelRequest
    fullName: SuperOffice.WebApi.Agents.AgentBase.CancelRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.SendRequestObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.SendRequestObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: SendRequestObject(HttpMethod, String, Object, WebApiOptions, String)
  nameWithType: AgentBase.SendRequestObject(HttpMethod, String, Object, WebApiOptions, String)
  fullName: SuperOffice.WebApi.Agents.AgentBase.SendRequestObject(System.Net.Http.HttpMethod, System.String, System.Object, SuperOffice.WebApi.WebApiOptions, System.String)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.SendRequestObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
    name: SendRequestObject
    nameWithType: AgentBase.SendRequestObject
    fullName: SuperOffice.WebApi.Agents.AgentBase.SendRequestObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.WebApiOptions
    name: WebApiOptions
    nameWithType: WebApiOptions
    fullName: SuperOffice.WebApi.WebApiOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.SendRequestObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
    name: SendRequestObject
    nameWithType: AgentBase.SendRequestObject
    fullName: SuperOffice.WebApi.Agents.AgentBase.SendRequestObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.WebApiOptions
    name: WebApiOptions
    nameWithType: WebApiOptions
    fullName: SuperOffice.WebApi.WebApiOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.SendRequest(System.Net.Http.HttpRequestMessage,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.SendRequest(System.Net.Http.HttpRequestMessage,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: SendRequest(HttpRequestMessage, RequestOptions)
  nameWithType: AgentBase.SendRequest(HttpRequestMessage, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AgentBase.SendRequest(System.Net.Http.HttpRequestMessage, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.SendRequest(System.Net.Http.HttpRequestMessage,SuperOffice.WebApi.RequestOptions)
    name: SendRequest
    nameWithType: AgentBase.SendRequest
    fullName: SuperOffice.WebApi.Agents.AgentBase.SendRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.SendRequest(System.Net.Http.HttpRequestMessage,SuperOffice.WebApi.RequestOptions)
    name: SendRequest
    nameWithType: AgentBase.SendRequest
    fullName: SuperOffice.WebApi.Agents.AgentBase.SendRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: ThrowOnResponseError(HttpRequestMessage, HttpResponseMessage)
  nameWithType: AgentBase.ThrowOnResponseError(HttpRequestMessage, HttpResponseMessage)
  fullName: SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError(System.Net.Http.HttpRequestMessage, System.Net.Http.HttpResponseMessage)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage)
    name: ThrowOnResponseError
    nameWithType: AgentBase.ThrowOnResponseError
    fullName: SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage)
    name: ThrowOnResponseError
    nameWithType: AgentBase.ThrowOnResponseError
    fullName: SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.ParseResponse``1(System.Net.Http.HttpResponseMessage)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.ParseResponse``1(System.Net.Http.HttpResponseMessage)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: ParseResponse<T>(HttpResponseMessage)
  nameWithType: AgentBase.ParseResponse<T>(HttpResponseMessage)
  fullName: SuperOffice.WebApi.Agents.AgentBase.ParseResponse<T>(System.Net.Http.HttpResponseMessage)
  nameWithType.vb: AgentBase.ParseResponse(Of T)(HttpResponseMessage)
  fullName.vb: SuperOffice.WebApi.Agents.AgentBase.ParseResponse(Of T)(System.Net.Http.HttpResponseMessage)
  name.vb: ParseResponse(Of T)(HttpResponseMessage)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.ParseResponse``1(System.Net.Http.HttpResponseMessage)
    name: ParseResponse<T>
    nameWithType: AgentBase.ParseResponse<T>
    fullName: SuperOffice.WebApi.Agents.AgentBase.ParseResponse<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.ParseResponse``1(System.Net.Http.HttpResponseMessage)
    name: ParseResponse(Of T)
    nameWithType: AgentBase.ParseResponse(Of T)
    fullName: SuperOffice.WebApi.Agents.AgentBase.ParseResponse(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.Finally(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.Finally(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: Finally(RequestOptions)
  nameWithType: AgentBase.Finally(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AgentBase.Finally(SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.Finally(SuperOffice.WebApi.RequestOptions)
    name: Finally
    nameWithType: AgentBase.Finally
    fullName: SuperOffice.WebApi.Agents.AgentBase.Finally
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.Finally(SuperOffice.WebApi.RequestOptions)
    name: Finally
    nameWithType: AgentBase.Finally
    fullName: SuperOffice.WebApi.Agents.AgentBase.Finally
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.Dispose
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.Dispose
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: Dispose()
  nameWithType: AgentBase.Dispose()
  fullName: SuperOffice.WebApi.Agents.AgentBase.Dispose()
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.Dispose
    name: Dispose
    nameWithType: AgentBase.Dispose
    fullName: SuperOffice.WebApi.Agents.AgentBase.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.Dispose
    name: Dispose
    nameWithType: AgentBase.Dispose
    fullName: SuperOffice.WebApi.Agents.AgentBase.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.Configuration
  commentId: P:SuperOffice.WebApi.Agents.AgentBase.Configuration
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: Configuration
  nameWithType: AgentBase.Configuration
  fullName: SuperOffice.WebApi.Agents.AgentBase.Configuration
- uid: SuperOffice.WebApi.Agents.AgentBase.Client
  commentId: P:SuperOffice.WebApi.Agents.AgentBase.Client
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: Client
  nameWithType: AgentBase.Client
  fullName: SuperOffice.WebApi.Agents.AgentBase.Client
- uid: SuperOffice.WebApi.Agents.AgentBase.HasRunningRequest
  commentId: P:SuperOffice.WebApi.Agents.AgentBase.HasRunningRequest
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: HasRunningRequest
  nameWithType: AgentBase.HasRunningRequest
  fullName: SuperOffice.WebApi.Agents.AgentBase.HasRunningRequest
- uid: SuperOffice.WebApi.Agents.AgentBase.ClientCancellationTokenSource
  commentId: P:SuperOffice.WebApi.Agents.AgentBase.ClientCancellationTokenSource
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: ClientCancellationTokenSource
  nameWithType: AgentBase.ClientCancellationTokenSource
  fullName: SuperOffice.WebApi.Agents.AgentBase.ClientCancellationTokenSource
- uid: SuperOffice.WebApi.Agents.AgentBase.ProgressListener
  commentId: P:SuperOffice.WebApi.Agents.AgentBase.ProgressListener
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: ProgressListener
  nameWithType: AgentBase.ProgressListener
  fullName: SuperOffice.WebApi.Agents.AgentBase.ProgressListener
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.WebApi.Agents.DatabaseTableAgent.#ctor*
  commentId: Overload:SuperOffice.WebApi.Agents.DatabaseTableAgent.#ctor
  isExternal: true
  name: DatabaseTableAgent
  nameWithType: DatabaseTableAgent.DatabaseTableAgent
  fullName: SuperOffice.WebApi.Agents.DatabaseTableAgent.DatabaseTableAgent
- uid: System.Net.Http.HttpClient
  isExternal: true
  name: HttpClient
  nameWithType: HttpClient
  fullName: System.Net.Http.HttpClient
- uid: SuperOffice.WebApi.WebApiOptions
  commentId: T:SuperOffice.WebApi.WebApiOptions
  parent: SuperOffice.WebApi
  isExternal: true
  name: WebApiOptions
  nameWithType: WebApiOptions
  fullName: SuperOffice.WebApi.WebApiOptions
- uid: SuperOffice.WebApi
  commentId: N:SuperOffice.WebApi
  isExternal: true
  name: SuperOffice.WebApi
  nameWithType: SuperOffice.WebApi
  fullName: SuperOffice.WebApi
- uid: SuperOffice.WebApi.Agents.DatabaseTableAgent.ReadRowAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.DatabaseTableAgent.ReadRowAsync
  isExternal: true
  name: ReadRowAsync
  nameWithType: DatabaseTableAgent.ReadRowAsync
  fullName: SuperOffice.WebApi.Agents.DatabaseTableAgent.ReadRowAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.WebApi.RequestOptions
  commentId: T:SuperOffice.WebApi.RequestOptions
  parent: SuperOffice.WebApi
  isExternal: true
  name: RequestOptions
  nameWithType: RequestOptions
  fullName: SuperOffice.WebApi.RequestOptions
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TableRecord}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TableRecord}'
  definition: System.Threading.Tasks.Task`1
  name: Task<TableRecord>
  nameWithType: Task<TableRecord>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.TableRecord>
  nameWithType.vb: Task(Of TableRecord)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.TableRecord)
  name.vb: Task(Of TableRecord)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.TableRecord
    name: TableRecord
    nameWithType: TableRecord
    fullName: SuperOffice.WebApi.Data.TableRecord
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.TableRecord
    name: TableRecord
    nameWithType: TableRecord
    fullName: SuperOffice.WebApi.Data.TableRecord
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.DatabaseTableAgent.InsertRowAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.DatabaseTableAgent.InsertRowAsync
  isExternal: true
  name: InsertRowAsync
  nameWithType: DatabaseTableAgent.InsertRowAsync
  fullName: SuperOffice.WebApi.Agents.DatabaseTableAgent.InsertRowAsync
- uid: SuperOffice.WebApi.Data.StringDictionary
  commentId: T:SuperOffice.WebApi.Data.StringDictionary
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: StringDictionary
  nameWithType: StringDictionary
  fullName: SuperOffice.WebApi.Data.StringDictionary
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: '!:System.Threading.Tasks.Task{System.Int32}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  nameWithType.vb: Task(Of Int32)
  fullName.vb: System.Threading.Tasks.Task(Of System.Int32)
  name.vb: Task(Of Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Data
  commentId: N:SuperOffice.WebApi.Data
  isExternal: true
  name: SuperOffice.WebApi.Data
  nameWithType: SuperOffice.WebApi.Data
  fullName: SuperOffice.WebApi.Data
- uid: SuperOffice.WebApi.Agents.DatabaseTableAgent.UpdateRowAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.DatabaseTableAgent.UpdateRowAsync
  isExternal: true
  name: UpdateRowAsync
  nameWithType: DatabaseTableAgent.UpdateRowAsync
  fullName: SuperOffice.WebApi.Agents.DatabaseTableAgent.UpdateRowAsync
- uid: System.Threading.Tasks.Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: SuperOffice.WebApi.Agents.DatabaseTableAgent.DeleteRowAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.DatabaseTableAgent.DeleteRowAsync
  isExternal: true
  name: DeleteRowAsync
  nameWithType: DatabaseTableAgent.DeleteRowAsync
  fullName: SuperOffice.WebApi.Agents.DatabaseTableAgent.DeleteRowAsync
- uid: SuperOffice.WebApi.Agents.DatabaseTableAgent.InsertAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.DatabaseTableAgent.InsertAsync
  isExternal: true
  name: InsertAsync
  nameWithType: DatabaseTableAgent.InsertAsync
  fullName: SuperOffice.WebApi.Agents.DatabaseTableAgent.InsertAsync
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.String[][]
  isExternal: true
  name: String[][]
  nameWithType: String[][]
  fullName: System.String[][]
  nameWithType.vb: String()()
  fullName.vb: System.String()()
  name.vb: String()()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.MassOperationResult}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.MassOperationResult}'
  definition: System.Threading.Tasks.Task`1
  name: Task<MassOperationResult>
  nameWithType: Task<MassOperationResult>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.MassOperationResult>
  nameWithType.vb: Task(Of MassOperationResult)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.MassOperationResult)
  name.vb: Task(Of MassOperationResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.MassOperationResult
    name: MassOperationResult
    nameWithType: MassOperationResult
    fullName: SuperOffice.WebApi.Data.MassOperationResult
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.MassOperationResult
    name: MassOperationResult
    nameWithType: MassOperationResult
    fullName: SuperOffice.WebApi.Data.MassOperationResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.DatabaseTableAgent.TruncateAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.DatabaseTableAgent.TruncateAsync
  isExternal: true
  name: TruncateAsync
  nameWithType: DatabaseTableAgent.TruncateAsync
  fullName: SuperOffice.WebApi.Agents.DatabaseTableAgent.TruncateAsync
- uid: SuperOffice.WebApi.Agents.DatabaseTableAgent.UpsertAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.DatabaseTableAgent.UpsertAsync
  isExternal: true
  name: UpsertAsync
  nameWithType: DatabaseTableAgent.UpsertAsync
  fullName: SuperOffice.WebApi.Agents.DatabaseTableAgent.UpsertAsync
- uid: SuperOffice.WebApi.Data.UpsertNomatchAction
  commentId: T:SuperOffice.WebApi.Data.UpsertNomatchAction
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: UpsertNomatchAction
  nameWithType: UpsertNomatchAction
  fullName: SuperOffice.WebApi.Data.UpsertNomatchAction
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.WebApi.Agents.DatabaseTableAgent.DeleteAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.DatabaseTableAgent.DeleteAsync
  isExternal: true
  name: DeleteAsync
  nameWithType: DatabaseTableAgent.DeleteAsync
  fullName: SuperOffice.WebApi.Agents.DatabaseTableAgent.DeleteAsync
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
