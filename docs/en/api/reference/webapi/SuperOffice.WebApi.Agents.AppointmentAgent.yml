### YamlMime:ManagedReference
items:
- uid: SuperOffice.WebApi.Agents.AppointmentAgent
  commentId: T:SuperOffice.WebApi.Agents.AppointmentAgent
  id: AppointmentAgent
  parent: SuperOffice.WebApi.Agents
  children:
  - SuperOffice.WebApi.Agents.AppointmentAgent.#ctor(SuperOffice.WebApi.WebApiOptions,System.Net.Http.HttpClient)
  - SuperOffice.WebApi.Agents.AppointmentAgent.#ctor(System.Net.Http.HttpClient)
  - SuperOffice.WebApi.Agents.AppointmentAgent.AcceptAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.AcceptRejectedAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.AcceptWithEmailConfirmationAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.AcceptWithSmtpEmailConfirmationAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.AssignToAsync(System.Int32,SuperOffice.WebApi.Data.ParticipantInfo,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.CalculateDaysAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.CanAssignToProjectMemberAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.CleanUpBookingDeletedAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.CleanUpBookingDeletedWithUpdateModeAsync(System.Int32[],SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.CleanUpRecurringBookingDeletedAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.ConvertAppointmentToTaskAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.CreateAndAcceptAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.CreateAndAcceptWithEmailConfirmationAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.CreateAppointmentEntityFromExistingAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.CreateAppointmentForUIDAsync(SuperOffice.WebApi.Data.AppointmentEntity,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultAppointmentEntityAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociateAsync(SuperOffice.WebApi.Data.TaskType,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultAppointmentEntityByTypeAsync(SuperOffice.WebApi.Data.TaskType,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestionAsync(System.Int32,System.Int32,System.Boolean,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestionAsync(System.Int32,System.Int32,System.Boolean,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultRecurrenceAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultRecurrenceByDateAsync(System.DateTime,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultReOpenAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultSuggestedAppointmentEntityAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultTaskListItemAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.DeclineInvitationFromEmailItemAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.DeleteAppointmentEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.DeleteAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GenerateLeadAsync(System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetActivityInformationListByDatesAndAssociateAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetAlarmsAsync(System.Boolean,System.Boolean,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentEmailInvitationAsync(SuperOffice.WebApi.Data.AppointmentEntity,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentFromUIDAsync(System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentHaveParticipantsWithEmailAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentRecordsAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentsByTaskHeadingAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetAssociateDiaryAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetAssociatesDiaryAsync(System.Int32[],System.DateTime,System.DateTime,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetAssociatesDiaryInfoAsync(System.Int32[],System.DateTime,System.DateTime,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetCanInsertForAssociatesAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetContactAppointmentsAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetContactAppointmentsByTaskAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetContactAppointmentsByTaskHeadingAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetContactAppointmentsByTasksAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetContactAppointmentsByTypeAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetDayInformationListByDatesAndAssociateAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetDiaryByGroupAsync(System.Int32,System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetMyAppointmentsAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetMyDiaryAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetMyPublishedAppointmentsAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetMySyncAppointmentsAsync(System.DateTime,System.DateTime,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetMyTasksAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetNextAvailableTimeAsync(System.Int32[],System.DateTime,System.DateTime,System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetNextSuggestedAppointmentBySaleAsync(System.Int32,System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetOrganizerNameAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonAppointmentsAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonAppointmentsByTaskAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonAppointmentsByTaskHeadingAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonAppointmentsByTasksAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonAppointmentsByTypeAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonDiaryAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonTasksAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectAppointmentsAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectAppointmentsByTaskAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectAppointmentsByTaskHeadingAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectAppointmentsByTasksAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectAppointmentsByTypeAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectMemberAppointmentsAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectMemberAppointmentsByTaskAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectMemberAppointmentsByTaskHeadingAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectMemberAppointmentsByTasksAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectMemberAppointmentsByTypeAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetPublishedAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetPublishedAppointmentsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetPublishedProjectAppointmentsAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetRedLetterInformationListByDatesAndAssociateAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetSuggestedAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetSuggestedAppointmentEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetTaskListItemAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetTaskListItemsAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.GetUIDFromAppointmentIdAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.MoveAsync(System.Int32,System.DateTime,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.MoveWithEmailAsync(System.Int32,System.DateTime,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.RejectAsync(System.Int32,System.String,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.RejectWithEmailConfirmationAsync(System.Int32,System.String,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.RejectWithSmtpEmailConfirmationAsync(System.Int32,System.String,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.RequestForInfoAsync(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.SaveAppointmentEntityAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.SaveAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.SaveSuggestedAppointmentEntityAsync(SuperOffice.WebApi.Data.SuggestedAppointmentEntity,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.SaveTaskListItemAsync(SuperOffice.WebApi.Data.TaskListItem,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.SaveWithCustomInvitationAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.SetActivityStatusAsync(System.String[],SuperOffice.WebApi.Data.ActivityStatus,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.SetSeenAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.SetSeenManyAsync(System.Int32[],SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.ToggleActivitiesAsync(System.String[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.ToggleActivityAsync(System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.ToggleAndSetActivitiesAsync(System.String[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.ToggleAppointmentStatusAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.UpdateAppointmentAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.UpdateAppointmentFromIcsResponseAsync(System.String,System.Byte[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.UpdateAppointmentWithModeAndEmailAsync(System.Int32,System.DateTime,System.DateTime,SuperOffice.WebApi.Data.AppointmentStatus,SuperOffice.WebApi.Data.AppointmentType,System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.UpdateAppointmentWithModeAsync(System.Int32,System.DateTime,System.DateTime,SuperOffice.WebApi.Data.AppointmentStatus,SuperOffice.WebApi.Data.AppointmentType,System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.ValidateAppointmentEntityAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.ValidateDaysAsync(SuperOffice.WebApi.Data.AppointmentEntity,System.DateTime[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AppointmentAgent.WillSendEmailAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
  langs:
  - csharp
  - vb
  name: AppointmentAgent
  nameWithType: AppointmentAgent
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent
  type: Class
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCollection of all services that works with Appointment data.\n"
  example:
  - "\n<pre><code>  using SuperOffice.WebApi;\n  using SuperOffice.WebApi.Agents;\n\n  var mySession = new WebApiOptions(&quot;http://example.com/super/api&quot;);\n  mySession.Authorization = new AuthorizationUsernamePassword(&quot;user&quot;, &quot;pass&quot;);\n  using (AppointmentAgent agent = new AppointmentAgent(mySession))\n  {\n        // call methods on agent here...\n  }</code></pre>\n"
  syntax:
    content: 'public class AppointmentAgent : AgentBase, IAppointmentAgent, IDisposable'
    content.vb: >-
      Public Class AppointmentAgent
          Inherits AgentBase
          Implements IAppointmentAgent, IDisposable
  inheritance:
  - System.Object
  - SuperOffice.WebApi.Agents.AgentBase
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent
  - System.IDisposable
  inheritedMembers:
  - SuperOffice.WebApi.Agents.AgentBase._json
  - SuperOffice.WebApi.Agents.AgentBase._binary
  - SuperOffice.WebApi.Agents.AgentBase._config
  - SuperOffice.WebApi.Agents.AgentBase._client
  - SuperOffice.WebApi.Agents.AgentBase._disposeClient
  - SuperOffice.WebApi.Agents.AgentBase.Merge(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
  - SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream(System.Net.Http.HttpMethod,System.String,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
  - SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObjectWithStream(System.Net.Http.HttpMethod,System.String,System.Object,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
  - SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization(SuperOffice.WebApi.Authorization.IAuthorization)
  - SuperOffice.WebApi.Agents.AgentBase.CancelRequest
  - SuperOffice.WebApi.Agents.AgentBase.SendRequestObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
  - SuperOffice.WebApi.Agents.AgentBase.SendRequestObjectWithStream(System.Net.Http.HttpMethod,System.String,System.Object,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
  - SuperOffice.WebApi.Agents.AgentBase.SendRequest(System.Net.Http.HttpRequestMessage,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage)
  - SuperOffice.WebApi.Agents.AgentBase.ParseResponse``1(System.Net.Http.HttpResponseMessage)
  - SuperOffice.WebApi.Agents.AgentBase.Finally(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AgentBase.Dispose
  - SuperOffice.WebApi.Agents.AgentBase.Configuration
  - SuperOffice.WebApi.Agents.AgentBase.Client
  - SuperOffice.WebApi.Agents.AgentBase.HasRunningRequest
  - SuperOffice.WebApi.Agents.AgentBase.ClientCancellationTokenSource
  - SuperOffice.WebApi.Agents.AgentBase.ProgressListener
  - SuperOffice.WebApi.Agents.AgentBase.UploadProgressListener
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.#ctor(System.Net.Http.HttpClient)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.#ctor(System.Net.Http.HttpClient)
  id: '#ctor(System.Net.Http.HttpClient)'
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: AppointmentAgent(HttpClient)
  nameWithType: AppointmentAgent.AppointmentAgent(HttpClient)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.AppointmentAgent(System.Net.Http.HttpClient)
  type: Constructor
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nConstructor: Collection of all services that works with Appointment data.\n"
  syntax:
    content: public AppointmentAgent(HttpClient httpClient)
    parameters:
    - id: httpClient
      type: System.Net.Http.HttpClient
      description: Use this HTTP client instead of making own HttpClient instance.
    content.vb: Public Sub New(httpClient As HttpClient)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.#ctor(SuperOffice.WebApi.WebApiOptions,System.Net.Http.HttpClient)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.#ctor(SuperOffice.WebApi.WebApiOptions,System.Net.Http.HttpClient)
  id: '#ctor(SuperOffice.WebApi.WebApiOptions,System.Net.Http.HttpClient)'
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: AppointmentAgent(WebApiOptions, HttpClient)
  nameWithType: AppointmentAgent.AppointmentAgent(WebApiOptions, HttpClient)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.AppointmentAgent(SuperOffice.WebApi.WebApiOptions, System.Net.Http.HttpClient)
  type: Constructor
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nConstructor: Collection of all services that works with Appointment data.\n"
  syntax:
    content: public AppointmentAgent(WebApiOptions options, HttpClient httpClient = null)
    parameters:
    - id: options
      type: SuperOffice.WebApi.WebApiOptions
      description: Base URL and authentication values.
    - id: httpClient
      type: System.Net.Http.HttpClient
      description: 'Optional: Use this HTTP client instead of making a new one.'
    content.vb: Public Sub New(options As WebApiOptions, httpClient As HttpClient = Nothing)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultAppointmentEntityAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultAppointmentEntityAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultAppointmentEntityAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultAppointmentEntityAsync(RequestOptions)
  nameWithType: AppointmentAgent.CreateDefaultAppointmentEntityAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultAppointmentEntityAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet default values into a new AppointmentEntity.\nNetServer calculates default values on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: public Task<AppointmentEntity> CreateDefaultAppointmentEntityAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentEntity}
      description: A blank AppointmentEntity
    content.vb: Public Function CreateDefaultAppointmentEntityAsync(requestOptions As RequestOptions = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultAppointmentEntityAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityAsync(SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.SaveAppointmentEntityAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.SaveAppointmentEntityAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
  id: SaveAppointmentEntityAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: SaveAppointmentEntityAsync(AppointmentEntity, RequestOptions)
  nameWithType: AppointmentAgent.SaveAppointmentEntityAsync(AppointmentEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.SaveAppointmentEntityAsync(SuperOffice.WebApi.Data.AppointmentEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdates the existing AppointmentEntity or creates a new AppointmentEntity if the id parameter is 0. Save the appointment entity\n"
  syntax:
    content: public Task<AppointmentEntity> SaveAppointmentEntityAsync(AppointmentEntity appointmentEntity, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentEntity
      type: SuperOffice.WebApi.Data.AppointmentEntity
      description: The AppointmentEntity that is saved.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentEntity}
      description: New or updated AppointmentEntity
    content.vb: Public Function SaveAppointmentEntityAsync(appointmentEntity As AppointmentEntity, requestOptions As RequestOptions = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.SaveAppointmentEntityAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.SaveAppointmentEntityAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.DeleteAppointmentEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.DeleteAppointmentEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: DeleteAppointmentEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: DeleteAppointmentEntityAsync(Int32, RequestOptions)
  nameWithType: AppointmentAgent.DeleteAppointmentEntityAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.DeleteAppointmentEntityAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nDeletes the AppointmentEntity\n"
  syntax:
    content: public Task DeleteAppointmentEntityAsync(int appointmentEntityId, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentEntityId
      type: System.Int32
      description: The identity of the AppointmentEntity
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function DeleteAppointmentEntityAsync(appointmentEntityId As Integer, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.DeleteAppointmentEntityAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.DeleteAppointmentEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultSuggestedAppointmentEntityAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultSuggestedAppointmentEntityAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultSuggestedAppointmentEntityAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultSuggestedAppointmentEntityAsync(RequestOptions)
  nameWithType: AppointmentAgent.CreateDefaultSuggestedAppointmentEntityAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultSuggestedAppointmentEntityAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet default values into a new SuggestedAppointmentEntity.\nNetServer calculates default values on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: public Task<SuggestedAppointmentEntity> CreateDefaultSuggestedAppointmentEntityAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SuggestedAppointmentEntity}
      description: A blank SuggestedAppointmentEntity
    content.vb: Public Function CreateDefaultSuggestedAppointmentEntityAsync(requestOptions As RequestOptions = Nothing) As Task(Of SuggestedAppointmentEntity)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultSuggestedAppointmentEntityAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultSuggestedAppointmentEntityAsync(SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.SaveSuggestedAppointmentEntityAsync(SuperOffice.WebApi.Data.SuggestedAppointmentEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.SaveSuggestedAppointmentEntityAsync(SuperOffice.WebApi.Data.SuggestedAppointmentEntity,SuperOffice.WebApi.RequestOptions)
  id: SaveSuggestedAppointmentEntityAsync(SuperOffice.WebApi.Data.SuggestedAppointmentEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: SaveSuggestedAppointmentEntityAsync(SuggestedAppointmentEntity, RequestOptions)
  nameWithType: AppointmentAgent.SaveSuggestedAppointmentEntityAsync(SuggestedAppointmentEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.SaveSuggestedAppointmentEntityAsync(SuperOffice.WebApi.Data.SuggestedAppointmentEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdates the existing SuggestedAppointmentEntity or creates a new SuggestedAppointmentEntity if the id parameter is 0. \n"
  syntax:
    content: public Task<SuggestedAppointmentEntity> SaveSuggestedAppointmentEntityAsync(SuggestedAppointmentEntity suggestedAppointmentEntity, RequestOptions requestOptions = null)
    parameters:
    - id: suggestedAppointmentEntity
      type: SuperOffice.WebApi.Data.SuggestedAppointmentEntity
      description: The SuggestedAppointmentEntity that is saved.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SuggestedAppointmentEntity}
      description: New or updated SuggestedAppointmentEntity
    content.vb: Public Function SaveSuggestedAppointmentEntityAsync(suggestedAppointmentEntity As SuggestedAppointmentEntity, requestOptions As RequestOptions = Nothing) As Task(Of SuggestedAppointmentEntity)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.SaveSuggestedAppointmentEntityAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.SaveSuggestedAppointmentEntityAsync(SuperOffice.WebApi.Data.SuggestedAppointmentEntity,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultTaskListItemAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultTaskListItemAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultTaskListItemAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultTaskListItemAsync(RequestOptions)
  nameWithType: AppointmentAgent.CreateDefaultTaskListItemAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultTaskListItemAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet default values into a new TaskListItem.\nNetServer calculates default values on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: public Task<TaskListItem> CreateDefaultTaskListItemAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TaskListItem}
      description: A blank TaskListItem
    content.vb: Public Function CreateDefaultTaskListItemAsync(requestOptions As RequestOptions = Nothing) As Task(Of TaskListItem)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultTaskListItemAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultTaskListItemAsync(SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.SaveTaskListItemAsync(SuperOffice.WebApi.Data.TaskListItem,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.SaveTaskListItemAsync(SuperOffice.WebApi.Data.TaskListItem,SuperOffice.WebApi.RequestOptions)
  id: SaveTaskListItemAsync(SuperOffice.WebApi.Data.TaskListItem,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: SaveTaskListItemAsync(TaskListItem, RequestOptions)
  nameWithType: AppointmentAgent.SaveTaskListItemAsync(TaskListItem, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.SaveTaskListItemAsync(SuperOffice.WebApi.Data.TaskListItem, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdates the existing TaskListItem or creates a new TaskListItem if the id parameter is 0. \n"
  syntax:
    content: public Task<TaskListItem> SaveTaskListItemAsync(TaskListItem taskListItem, RequestOptions requestOptions = null)
    parameters:
    - id: taskListItem
      type: SuperOffice.WebApi.Data.TaskListItem
      description: The TaskListItem that is saved.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TaskListItem}
      description: New or updated TaskListItem
    content.vb: Public Function SaveTaskListItemAsync(taskListItem As TaskListItem, requestOptions As RequestOptions = Nothing) As Task(Of TaskListItem)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.SaveTaskListItemAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.SaveTaskListItemAsync(SuperOffice.WebApi.Data.TaskListItem,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetAppointmentAsync(Int32, RequestOptions)
  nameWithType: AppointmentAgent.GetAppointmentAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific Appointment object.                        \n"
  syntax:
    content: public Task<Appointment> GetAppointmentAsync(int appointmentId, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The identifier of the Appointment object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment}
      description: Appointment
    content.vb: Public Function GetAppointmentAsync(appointmentId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Appointment)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.ToggleAppointmentStatusAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.ToggleAppointmentStatusAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: ToggleAppointmentStatusAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: ToggleAppointmentStatusAsync(Int32, RequestOptions)
  nameWithType: AppointmentAgent.ToggleAppointmentStatusAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.ToggleAppointmentStatusAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSets an appointment&apos;s status to Completed if the appointment had a different status, or sets the status to started if already set to completed.\n"
  syntax:
    content: public Task<AppointmentStatus> ToggleAppointmentStatusAsync(int appointmentId, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointment id.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentStatus}
      description: The new AppointmentStatus
    content.vb: Public Function ToggleAppointmentStatusAsync(appointmentId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of AppointmentStatus)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.ToggleAppointmentStatusAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleAppointmentStatusAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.ToggleActivityAsync(System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.ToggleActivityAsync(System.String,SuperOffice.WebApi.RequestOptions)
  id: ToggleActivityAsync(System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: ToggleActivityAsync(String, RequestOptions)
  nameWithType: AppointmentAgent.ToggleActivityAsync(String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.ToggleActivityAsync(System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nToggle the completed status for an activity. Activity may be sale, document or appointment. The changes are saved immediately. \n"
  syntax:
    content: public Task<ActivityStatus> ToggleActivityAsync(string activityIdentifier, RequestOptions requestOptions = null)
    parameters:
    - id: activityIdentifier
      type: System.String
      description: May contain of a mix of appointment_id, sale_id, document_id and todo_id
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ActivityStatus}
      description: What the result after toggling was.
    content.vb: Public Function ToggleActivityAsync(activityIdentifier As String, requestOptions As RequestOptions = Nothing) As Task(Of ActivityStatus)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.ToggleActivityAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleActivityAsync(System.String,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.ToggleActivitiesAsync(System.String[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.ToggleActivitiesAsync(System.String[],SuperOffice.WebApi.RequestOptions)
  id: ToggleActivitiesAsync(System.String[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: ToggleActivitiesAsync(String[], RequestOptions)
  nameWithType: AppointmentAgent.ToggleActivitiesAsync(String[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.ToggleActivitiesAsync(System.String[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nToggle the completed status for an array of activities. \n"
  syntax:
    content: public Task<ActivityStatus> ToggleActivitiesAsync(string[] activityIdentifier, RequestOptions requestOptions = null)
    parameters:
    - id: activityIdentifier
      type: System.String[]
      description: Contain of a mix of appointment_id, sale_id, document_id and todo_id.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ActivityStatus}
      description: The resulting ActivityStatus of the first in the array
    content.vb: Public Function ToggleActivitiesAsync(activityIdentifier As String(), requestOptions As RequestOptions = Nothing) As Task(Of ActivityStatus)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.ToggleActivitiesAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleActivitiesAsync(System.String[],SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: AppointmentAgent.ToggleActivitiesAsync(String(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.AppointmentAgent.ToggleActivitiesAsync(System.String(), SuperOffice.WebApi.RequestOptions)
  name.vb: ToggleActivitiesAsync(String(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.SetActivityStatusAsync(System.String[],SuperOffice.WebApi.Data.ActivityStatus,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.SetActivityStatusAsync(System.String[],SuperOffice.WebApi.Data.ActivityStatus,SuperOffice.WebApi.RequestOptions)
  id: SetActivityStatusAsync(System.String[],SuperOffice.WebApi.Data.ActivityStatus,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: SetActivityStatusAsync(String[], ActivityStatus, RequestOptions)
  nameWithType: AppointmentAgent.SetActivityStatusAsync(String[], ActivityStatus, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.SetActivityStatusAsync(System.String[], SuperOffice.WebApi.Data.ActivityStatus, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSets the completed status for an array of activities. The string activityIdentifier param may contain of a mix of appointment_id, sale_id, document_id and todo_id. The changes are saved immediately. If an invalid id is passed in (nonexistent record), no changes will be made. If there is no write access to the record being changed, a Sentry exception will be thrown in the usual manner.\n"
  syntax:
    content: public Task SetActivityStatusAsync(string[] activityIdentifier, ActivityStatus activityStatus, RequestOptions requestOptions = null)
    parameters:
    - id: activityIdentifier
      type: System.String[]
      description: Array of activity ids. ex. appointment_id=666
    - id: activityStatus
      type: SuperOffice.WebApi.Data.ActivityStatus
      description: The status to set the activities
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SetActivityStatusAsync(activityIdentifier As String(), activityStatus As ActivityStatus, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.SetActivityStatusAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.SetActivityStatusAsync(System.String[],SuperOffice.WebApi.Data.ActivityStatus,SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: AppointmentAgent.SetActivityStatusAsync(String(), ActivityStatus, RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.AppointmentAgent.SetActivityStatusAsync(System.String(), SuperOffice.WebApi.Data.ActivityStatus, SuperOffice.WebApi.RequestOptions)
  name.vb: SetActivityStatusAsync(String(), ActivityStatus, RequestOptions)
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.ToggleAndSetActivitiesAsync(System.String[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.ToggleAndSetActivitiesAsync(System.String[],SuperOffice.WebApi.RequestOptions)
  id: ToggleAndSetActivitiesAsync(System.String[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: ToggleAndSetActivitiesAsync(String[], RequestOptions)
  nameWithType: AppointmentAgent.ToggleAndSetActivitiesAsync(String[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.ToggleAndSetActivitiesAsync(System.String[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nToggles the first activity and sets the rest of the activities to the result of the first toggle. However, there are some special rules for appointments that trigger a suggested appointment when they are completed. If more than one appointment in the set of identifiers triggers a suggestion, we will not toggle those appointments. This rule is only active when changing the status of an appointment to complete. There must be more than one appointment that triggers such an event for this rule to take effect.\n"
  syntax:
    content: public Task<string[]> ToggleAndSetActivitiesAsync(string[] activityIdentifiers, RequestOptions requestOptions = null)
    parameters:
    - id: activityIdentifiers
      type: System.String[]
      description: Array of activity ids. ex. appointment_id=666
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.String[]}
      description: The identifiers that were not toggled.
    content.vb: Public Function ToggleAndSetActivitiesAsync(activityIdentifiers As String(), requestOptions As RequestOptions = Nothing) As Task(Of String())
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.ToggleAndSetActivitiesAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleAndSetActivitiesAsync(System.String[],SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: AppointmentAgent.ToggleAndSetActivitiesAsync(String(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.AppointmentAgent.ToggleAndSetActivitiesAsync(System.String(), SuperOffice.WebApi.RequestOptions)
  name.vb: ToggleAndSetActivitiesAsync(String(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetAppointmentEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetAppointmentEntityAsync(Int32, RequestOptions)
  nameWithType: AppointmentAgent.GetAppointmentEntityAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentEntityAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific AppointmentEntity object.                        \n"
  syntax:
    content: public Task<AppointmentEntity> GetAppointmentEntityAsync(int appointmentEntityId, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentEntityId
      type: System.Int32
      description: The identifier of the AppointmentEntity object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentEntity}
      description: AppointmentEntity
    content.vb: Public Function GetAppointmentEntityAsync(appointmentEntityId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentEntityAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultAppointmentEntityByTypeAsync(SuperOffice.WebApi.Data.TaskType,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultAppointmentEntityByTypeAsync(SuperOffice.WebApi.Data.TaskType,SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultAppointmentEntityByTypeAsync(SuperOffice.WebApi.Data.TaskType,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultAppointmentEntityByTypeAsync(TaskType, RequestOptions)
  nameWithType: AppointmentAgent.CreateDefaultAppointmentEntityByTypeAsync(TaskType, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultAppointmentEntityByTypeAsync(SuperOffice.WebApi.Data.TaskType, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCreates an AppointmentEntity populated with the default values for the specific type.\n"
  syntax:
    content: public Task<AppointmentEntity> CreateDefaultAppointmentEntityByTypeAsync(TaskType type, RequestOptions requestOptions = null)
    parameters:
    - id: type
      type: SuperOffice.WebApi.Data.TaskType
      description: The type of task requested.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentEntity}
      description: AppointmentEntity with default values.
    content.vb: Public Function CreateDefaultAppointmentEntityByTypeAsync(type As TaskType, requestOptions As RequestOptions = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultAppointmentEntityByTypeAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAsync(SuperOffice.WebApi.Data.TaskType,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.CreateAppointmentEntityFromExistingAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.CreateAppointmentEntityFromExistingAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: CreateAppointmentEntityFromExistingAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateAppointmentEntityFromExistingAsync(Int32, Int32, RequestOptions)
  nameWithType: AppointmentAgent.CreateAppointmentEntityFromExistingAsync(Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.CreateAppointmentEntityFromExistingAsync(System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCreates an AppointmentEntity populated with values from an existing appointment. The new appointment will get the same task type and participant list as the source appointment. The date of the new appointment will be set to today, but the time component is kept.\n"
  syntax:
    content: public Task<AppointmentEntity> CreateAppointmentEntityFromExistingAsync(int appointmentId, int associateId, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: Source appointment ID
    - id: associateId
      type: System.Int32
      description: Associate owning the new appointment. If 0 the current associate is used.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentEntity}
      description: AppointmentEntity with values copied from an existing appointment. Values that are not copied will be the default values.
    content.vb: Public Function CreateAppointmentEntityFromExistingAsync(appointmentId As Integer, associateId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.CreateAppointmentEntityFromExistingAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAppointmentEntityFromExistingAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.AcceptAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.AcceptAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  id: AcceptAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: AcceptAsync(Int32, RecurrenceUpdateMode, RequestOptions)
  nameWithType: AppointmentAgent.AcceptAsync(Int32, RecurrenceUpdateMode, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.AcceptAsync(System.Int32, SuperOffice.WebApi.Data.RecurrenceUpdateMode, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nAccepting an appointment invitation.\n"
  syntax:
    content: public Task AcceptAsync(int appointmentId, RecurrenceUpdateMode updateMode, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointmentId. Both master and child record ids are accepted.
    - id: updateMode
      type: SuperOffice.WebApi.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
      description: Updated AppointmentEntity
    content.vb: Public Function AcceptAsync(appointmentId As Integer, updateMode As RecurrenceUpdateMode, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.AcceptAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.CreateAndAcceptAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.CreateAndAcceptAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  id: CreateAndAcceptAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateAndAcceptAsync(Int32, RecurrenceUpdateMode, RequestOptions)
  nameWithType: AppointmentAgent.CreateAndAcceptAsync(Int32, RecurrenceUpdateMode, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.CreateAndAcceptAsync(System.Int32, SuperOffice.WebApi.Data.RecurrenceUpdateMode, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCreating an appointment from an emailItem invitation and accepting it.\n"
  syntax:
    content: public Task CreateAndAcceptAsync(int emailItemId, RecurrenceUpdateMode updateMode, RequestOptions requestOptions = null)
    parameters:
    - id: emailItemId
      type: System.Int32
      description: The emailItemId
    - id: updateMode
      type: SuperOffice.WebApi.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function CreateAndAcceptAsync(emailItemId As Integer, updateMode As RecurrenceUpdateMode, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.CreateAndAcceptAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAndAcceptAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.AcceptWithEmailConfirmationAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.AcceptWithEmailConfirmationAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  id: AcceptWithEmailConfirmationAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: AcceptWithEmailConfirmationAsync(Int32, RecurrenceUpdateMode, RequestOptions)
  nameWithType: AppointmentAgent.AcceptWithEmailConfirmationAsync(Int32, RecurrenceUpdateMode, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.AcceptWithEmailConfirmationAsync(System.Int32, SuperOffice.WebApi.Data.RecurrenceUpdateMode, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nAccepting an appointment invitation and send an email confirmation to the meeting organizer.\n"
  syntax:
    content: public Task AcceptWithEmailConfirmationAsync(int appointmentId, RecurrenceUpdateMode updateMode, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointmentId. Both master and child record ids are accepted.
    - id: updateMode
      type: SuperOffice.WebApi.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
      description: Updated AppointmentEntity
    content.vb: Public Function AcceptWithEmailConfirmationAsync(appointmentId As Integer, updateMode As RecurrenceUpdateMode, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.AcceptWithEmailConfirmationAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptWithEmailConfirmationAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.CreateAndAcceptWithEmailConfirmationAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.CreateAndAcceptWithEmailConfirmationAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  id: CreateAndAcceptWithEmailConfirmationAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateAndAcceptWithEmailConfirmationAsync(Int32, RecurrenceUpdateMode, RequestOptions)
  nameWithType: AppointmentAgent.CreateAndAcceptWithEmailConfirmationAsync(Int32, RecurrenceUpdateMode, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.CreateAndAcceptWithEmailConfirmationAsync(System.Int32, SuperOffice.WebApi.Data.RecurrenceUpdateMode, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCreating an appointment from an emailItem invitation and accepting it with email confirmation to the meeting organizer.\n"
  syntax:
    content: public Task CreateAndAcceptWithEmailConfirmationAsync(int emailItemId, RecurrenceUpdateMode updateMode, RequestOptions requestOptions = null)
    parameters:
    - id: emailItemId
      type: System.Int32
      description: The emailItemId
    - id: updateMode
      type: SuperOffice.WebApi.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function CreateAndAcceptWithEmailConfirmationAsync(emailItemId As Integer, updateMode As RecurrenceUpdateMode, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.CreateAndAcceptWithEmailConfirmationAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAndAcceptWithEmailConfirmationAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.RejectAsync(System.Int32,System.String,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.RejectAsync(System.Int32,System.String,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  id: RejectAsync(System.Int32,System.String,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: RejectAsync(Int32, String, RecurrenceUpdateMode, RequestOptions)
  nameWithType: AppointmentAgent.RejectAsync(Int32, String, RecurrenceUpdateMode, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.RejectAsync(System.Int32, System.String, SuperOffice.WebApi.Data.RecurrenceUpdateMode, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nRejecting an appointment invitation\n"
  syntax:
    content: public Task RejectAsync(int appointmentId, string rejectReason, RecurrenceUpdateMode updateMode, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointmentId. Both master and child record ids are accepted.
    - id: rejectReason
      type: System.String
      description: The reason the invitation was rejected.
    - id: updateMode
      type: SuperOffice.WebApi.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
      description: Updated AppointmentEntity
    content.vb: Public Function RejectAsync(appointmentId As Integer, rejectReason As String, updateMode As RecurrenceUpdateMode, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.RejectAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.RejectAsync(System.Int32,System.String,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.RejectWithEmailConfirmationAsync(System.Int32,System.String,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.RejectWithEmailConfirmationAsync(System.Int32,System.String,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  id: RejectWithEmailConfirmationAsync(System.Int32,System.String,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: RejectWithEmailConfirmationAsync(Int32, String, RecurrenceUpdateMode, RequestOptions)
  nameWithType: AppointmentAgent.RejectWithEmailConfirmationAsync(Int32, String, RecurrenceUpdateMode, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.RejectWithEmailConfirmationAsync(System.Int32, System.String, SuperOffice.WebApi.Data.RecurrenceUpdateMode, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nRejecting an appointment invitation and send an email confirmation to the meeting organizer.\n"
  syntax:
    content: public Task RejectWithEmailConfirmationAsync(int appointmentId, string rejectReason, RecurrenceUpdateMode updateMode, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointmentId. Both master and child record ids are accepted.
    - id: rejectReason
      type: System.String
      description: The reason the invitation was rejected.
    - id: updateMode
      type: SuperOffice.WebApi.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
      description: Updated AppointmentEntity
    content.vb: Public Function RejectWithEmailConfirmationAsync(appointmentId As Integer, rejectReason As String, updateMode As RecurrenceUpdateMode, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.RejectWithEmailConfirmationAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.RejectWithEmailConfirmationAsync(System.Int32,System.String,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.DeclineInvitationFromEmailItemAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.DeclineInvitationFromEmailItemAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: DeclineInvitationFromEmailItemAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: DeclineInvitationFromEmailItemAsync(Int32, String, RequestOptions)
  nameWithType: AppointmentAgent.DeclineInvitationFromEmailItemAsync(Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.DeclineInvitationFromEmailItemAsync(System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nDeclining an appointment invitation where no tentative appointments have been created.\n"
  syntax:
    content: public Task DeclineInvitationFromEmailItemAsync(int emailItemId, string rejectReason, RequestOptions requestOptions = null)
    parameters:
    - id: emailItemId
      type: System.Int32
      description: The emailItemId.
    - id: rejectReason
      type: System.String
      description: The reason the invitation was rejected.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function DeclineInvitationFromEmailItemAsync(emailItemId As Integer, rejectReason As String, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.DeclineInvitationFromEmailItemAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.DeclineInvitationFromEmailItemAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetOrganizerNameAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetOrganizerNameAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetOrganizerNameAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetOrganizerNameAsync(Int32, RequestOptions)
  nameWithType: AppointmentAgent.GetOrganizerNameAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetOrganizerNameAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nLookup the name / email of an event-organizer\n"
  syntax:
    content: public Task<string> GetOrganizerNameAsync(int motherAppointmentId, RequestOptions requestOptions = null)
    parameters:
    - id: motherAppointmentId
      type: System.Int32
      description: The id of the mother-appointment.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: 'The displayed name of the organizer: name or email'
    content.vb: Public Function GetOrganizerNameAsync(motherAppointmentId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of String)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetOrganizerNameAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetOrganizerNameAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.SaveAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.SaveAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  id: SaveAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: SaveAsync(AppointmentEntity, RecurrenceUpdateMode, Boolean, EMailConnectionInfo, EMailConnectionInfo, RequestOptions)
  nameWithType: AppointmentAgent.SaveAsync(AppointmentEntity, RecurrenceUpdateMode, Boolean, EMailConnectionInfo, EMailConnectionInfo, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.SaveAsync(SuperOffice.WebApi.Data.AppointmentEntity, SuperOffice.WebApi.Data.RecurrenceUpdateMode, System.Boolean, SuperOffice.WebApi.Data.EMailConnectionInfo, SuperOffice.WebApi.Data.EMailConnectionInfo, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSaving a booking.\n"
  syntax:
    content: public Task<AppointmentEntity> SaveAsync(AppointmentEntity appointmentEntity, RecurrenceUpdateMode updateMode, bool sendEmailToParticipants, EMailConnectionInfo smtpEMailConnectionInfo, EMailConnectionInfo imapEMailConnectionInfo, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentEntity
      type: SuperOffice.WebApi.Data.AppointmentEntity
    - id: updateMode
      type: SuperOffice.WebApi.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: sendEmailToParticipants
      type: System.Boolean
      description: If true, emails will be sent to all participants that is marked with send email flag. If false no mails will be sent even if the send email flag is true.
    - id: smtpEMailConnectionInfo
      type: SuperOffice.WebApi.Data.EMailConnectionInfo
      description: Login information for outgoing smtp email server. Will be null if no login information is relevant.
    - id: imapEMailConnectionInfo
      type: SuperOffice.WebApi.Data.EMailConnectionInfo
      description: Login information for imap server. Will be null if no login information is relevant.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentEntity}
      description: Updated AppointmentEntity
    content.vb: Public Function SaveAsync(appointmentEntity As AppointmentEntity, updateMode As RecurrenceUpdateMode, sendEmailToParticipants As Boolean, smtpEMailConnectionInfo As EMailConnectionInfo, imapEMailConnectionInfo As EMailConnectionInfo, requestOptions As RequestOptions = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.SaveAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.SaveAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.DeleteAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.DeleteAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  id: DeleteAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: DeleteAsync(Int32, RecurrenceUpdateMode, Boolean, EMailConnectionInfo, EMailConnectionInfo, RequestOptions)
  nameWithType: AppointmentAgent.DeleteAsync(Int32, RecurrenceUpdateMode, Boolean, EMailConnectionInfo, EMailConnectionInfo, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.DeleteAsync(System.Int32, SuperOffice.WebApi.Data.RecurrenceUpdateMode, System.Boolean, SuperOffice.WebApi.Data.EMailConnectionInfo, SuperOffice.WebApi.Data.EMailConnectionInfo, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nDeleting a booking\n"
  syntax:
    content: public Task DeleteAsync(int appointmentId, RecurrenceUpdateMode updateMode, bool sendEmailToParticipants, EMailConnectionInfo smtpEMailConnectionInfo, EMailConnectionInfo imapEMailConnectionInfo, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointmentId. Both master and child record ids are accepted.
    - id: updateMode
      type: SuperOffice.WebApi.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: sendEmailToParticipants
      type: System.Boolean
      description: If true, emails will be sent to all participants that is marked with send email flag. If false no mails will be sent even if the send email flag is true.
    - id: smtpEMailConnectionInfo
      type: SuperOffice.WebApi.Data.EMailConnectionInfo
      description: Login information for outgoing smtp email server. Will be null if no login information is relevant.
    - id: imapEMailConnectionInfo
      type: SuperOffice.WebApi.Data.EMailConnectionInfo
      description: Login information for imap server. Will be null if no login information is relevant.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function DeleteAsync(appointmentId As Integer, updateMode As RecurrenceUpdateMode, sendEmailToParticipants As Boolean, smtpEMailConnectionInfo As EMailConnectionInfo, imapEMailConnectionInfo As EMailConnectionInfo, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.DeleteAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.DeleteAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.CalculateDaysAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.CalculateDaysAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
  id: CalculateDaysAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: CalculateDaysAsync(AppointmentEntity, RequestOptions)
  nameWithType: AppointmentAgent.CalculateDaysAsync(AppointmentEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.CalculateDaysAsync(SuperOffice.WebApi.Data.AppointmentEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCalculates the set of dates that represents a recurrence pattern. Adds conflict information to each date.\n"
  syntax:
    content: public Task<RecurrenceInfo> CalculateDaysAsync(AppointmentEntity appointmentEntity, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentEntity
      type: SuperOffice.WebApi.Data.AppointmentEntity
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.RecurrenceInfo}
    content.vb: Public Function CalculateDaysAsync(appointmentEntity As AppointmentEntity, requestOptions As RequestOptions = Nothing) As Task(Of RecurrenceInfo)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.CalculateDaysAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.CalculateDaysAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.ValidateDaysAsync(SuperOffice.WebApi.Data.AppointmentEntity,System.DateTime[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.ValidateDaysAsync(SuperOffice.WebApi.Data.AppointmentEntity,System.DateTime[],SuperOffice.WebApi.RequestOptions)
  id: ValidateDaysAsync(SuperOffice.WebApi.Data.AppointmentEntity,System.DateTime[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: ValidateDaysAsync(AppointmentEntity, DateTime[], RequestOptions)
  nameWithType: AppointmentAgent.ValidateDaysAsync(AppointmentEntity, DateTime[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.ValidateDaysAsync(SuperOffice.WebApi.Data.AppointmentEntity, System.DateTime[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nValidates the set of dates to calculate any conflicts.\n"
  syntax:
    content: public Task<RecurrenceDate[]> ValidateDaysAsync(AppointmentEntity appointmentEntity, DateTime[] dates, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentEntity
      type: SuperOffice.WebApi.Data.AppointmentEntity
    - id: dates
      type: System.DateTime[]
      description: The dates to validate.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.RecurrenceDate[]}
      description: Array of RecurrenceDate object for each validated date.
    content.vb: Public Function ValidateDaysAsync(appointmentEntity As AppointmentEntity, dates As DateTime(), requestOptions As RequestOptions = Nothing) As Task(Of RecurrenceDate())
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.ValidateDaysAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.ValidateDaysAsync(SuperOffice.WebApi.Data.AppointmentEntity,System.DateTime[],SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: AppointmentAgent.ValidateDaysAsync(AppointmentEntity, DateTime(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.AppointmentAgent.ValidateDaysAsync(SuperOffice.WebApi.Data.AppointmentEntity, System.DateTime(), SuperOffice.WebApi.RequestOptions)
  name.vb: ValidateDaysAsync(AppointmentEntity, DateTime(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultRecurrenceAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultRecurrenceAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultRecurrenceAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultRecurrenceAsync(RequestOptions)
  nameWithType: AppointmentAgent.CreateDefaultRecurrenceAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultRecurrenceAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCreates a RecurrenceInfo object populated with the default values for the specific type.\n"
  syntax:
    content: public Task<RecurrenceInfo> CreateDefaultRecurrenceAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.RecurrenceInfo}
      description: RecurrenceInfo object with default values.
    content.vb: Public Function CreateDefaultRecurrenceAsync(requestOptions As RequestOptions = Nothing) As Task(Of RecurrenceInfo)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultRecurrenceAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultRecurrenceAsync(SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.AssignToAsync(System.Int32,SuperOffice.WebApi.Data.ParticipantInfo,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.AssignToAsync(System.Int32,SuperOffice.WebApi.Data.ParticipantInfo,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  id: AssignToAsync(System.Int32,SuperOffice.WebApi.Data.ParticipantInfo,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: AssignToAsync(Int32, ParticipantInfo, RecurrenceUpdateMode, RequestOptions)
  nameWithType: AppointmentAgent.AssignToAsync(Int32, ParticipantInfo, RecurrenceUpdateMode, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.AssignToAsync(System.Int32, SuperOffice.WebApi.Data.ParticipantInfo, SuperOffice.WebApi.Data.RecurrenceUpdateMode, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nAssigning an appointment to another person.\n"
  syntax:
    content: public Task<AppointmentEntity> AssignToAsync(int appointmentId, ParticipantInfo participant, RecurrenceUpdateMode updateMode, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointmentId. Both master and child record ids are accepted.
    - id: participant
      type: SuperOffice.WebApi.Data.ParticipantInfo
    - id: updateMode
      type: SuperOffice.WebApi.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentEntity}
      description: Updated AppointmentEntity
    content.vb: Public Function AssignToAsync(appointmentId As Integer, participant As ParticipantInfo, updateMode As RecurrenceUpdateMode, requestOptions As RequestOptions = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.AssignToAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.AssignToAsync(System.Int32,SuperOffice.WebApi.Data.ParticipantInfo,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.SetSeenAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.SetSeenAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  id: SetSeenAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: SetSeenAsync(Int32, RecurrenceUpdateMode, RequestOptions)
  nameWithType: AppointmentAgent.SetSeenAsync(Int32, RecurrenceUpdateMode, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.SetSeenAsync(System.Int32, SuperOffice.WebApi.Data.RecurrenceUpdateMode, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSets an appointment invitiation to seen.\n"
  syntax:
    content: public Task SetSeenAsync(int appointmentId, RecurrenceUpdateMode updateMode, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointmentId. Both master and child record ids are accepted.
    - id: updateMode
      type: SuperOffice.WebApi.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SetSeenAsync(appointmentId As Integer, updateMode As RecurrenceUpdateMode, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.SetSeenAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.SetSeenAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.SetSeenManyAsync(System.Int32[],SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.SetSeenManyAsync(System.Int32[],SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  id: SetSeenManyAsync(System.Int32[],SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: SetSeenManyAsync(Int32[], RecurrenceUpdateMode, RequestOptions)
  nameWithType: AppointmentAgent.SetSeenManyAsync(Int32[], RecurrenceUpdateMode, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.SetSeenManyAsync(System.Int32[], SuperOffice.WebApi.Data.RecurrenceUpdateMode, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSets a list of appointment invitations to seen. The same update mode will be used for all appointments in this batch.\n"
  syntax:
    content: public Task SetSeenManyAsync(int[] appointmentIds, RecurrenceUpdateMode updateMode, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentIds
      type: System.Int32[]
      description: List of appointment IDs
    - id: updateMode
      type: SuperOffice.WebApi.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SetSeenManyAsync(appointmentIds As Integer(), updateMode As RecurrenceUpdateMode, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.SetSeenManyAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.SetSeenManyAsync(System.Int32[],SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: AppointmentAgent.SetSeenManyAsync(Int32(), RecurrenceUpdateMode, RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.AppointmentAgent.SetSeenManyAsync(System.Int32(), SuperOffice.WebApi.Data.RecurrenceUpdateMode, SuperOffice.WebApi.RequestOptions)
  name.vb: SetSeenManyAsync(Int32(), RecurrenceUpdateMode, RequestOptions)
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.MoveAsync(System.Int32,System.DateTime,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.MoveAsync(System.Int32,System.DateTime,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  id: MoveAsync(System.Int32,System.DateTime,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: MoveAsync(Int32, DateTime, RecurrenceUpdateMode, RequestOptions)
  nameWithType: AppointmentAgent.MoveAsync(Int32, DateTime, RecurrenceUpdateMode, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.MoveAsync(System.Int32, System.DateTime, SuperOffice.WebApi.Data.RecurrenceUpdateMode, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMoving a booking to another start time.\n"
  syntax:
    content: public Task<AppointmentEntity> MoveAsync(int appointmentId, DateTime newStartTime, RecurrenceUpdateMode updateMode, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointmentId. Both master and child record ids are accepted.
    - id: newStartTime
      type: System.DateTime
      description: The new start time for the moved booking.
    - id: updateMode
      type: SuperOffice.WebApi.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentEntity}
      description: Updated AppointmentEntity
    content.vb: Public Function MoveAsync(appointmentId As Integer, newStartTime As DateTime, updateMode As RecurrenceUpdateMode, requestOptions As RequestOptions = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.MoveAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.MoveAsync(System.Int32,System.DateTime,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.MoveWithEmailAsync(System.Int32,System.DateTime,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.MoveWithEmailAsync(System.Int32,System.DateTime,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  id: MoveWithEmailAsync(System.Int32,System.DateTime,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: MoveWithEmailAsync(Int32, DateTime, RecurrenceUpdateMode, Boolean, EMailConnectionInfo, EMailConnectionInfo, RequestOptions)
  nameWithType: AppointmentAgent.MoveWithEmailAsync(Int32, DateTime, RecurrenceUpdateMode, Boolean, EMailConnectionInfo, EMailConnectionInfo, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.MoveWithEmailAsync(System.Int32, System.DateTime, SuperOffice.WebApi.Data.RecurrenceUpdateMode, System.Boolean, SuperOffice.WebApi.Data.EMailConnectionInfo, SuperOffice.WebApi.Data.EMailConnectionInfo, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMoving a booking to another start time.\n"
  syntax:
    content: public Task<AppointmentEntity> MoveWithEmailAsync(int appointmentId, DateTime newStartTime, RecurrenceUpdateMode updateMode, bool sendEmailToParticipants, EMailConnectionInfo smtpEMailConnectionInfo, EMailConnectionInfo imapEMailConnectionInfo, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointmentId. Both master and child record ids are accepted.
    - id: newStartTime
      type: System.DateTime
      description: The new start time for the moved booking.
    - id: updateMode
      type: SuperOffice.WebApi.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: sendEmailToParticipants
      type: System.Boolean
      description: If true, emails will be sent to all participants that is marked with send email flag if deemed necessary. If false no mails will be sent even if the send email flag is true.
    - id: smtpEMailConnectionInfo
      type: SuperOffice.WebApi.Data.EMailConnectionInfo
      description: Login information for outgoing smtp email server. Will be null if no login information is relevant.
    - id: imapEMailConnectionInfo
      type: SuperOffice.WebApi.Data.EMailConnectionInfo
      description: Login information for imap server. Will be null if no login information is relevant.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentEntity}
      description: Updated AppointmentEntity
    content.vb: Public Function MoveWithEmailAsync(appointmentId As Integer, newStartTime As DateTime, updateMode As RecurrenceUpdateMode, sendEmailToParticipants As Boolean, smtpEMailConnectionInfo As EMailConnectionInfo, imapEMailConnectionInfo As EMailConnectionInfo, requestOptions As RequestOptions = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.MoveWithEmailAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.MoveWithEmailAsync(System.Int32,System.DateTime,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.AcceptRejectedAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.AcceptRejectedAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  id: AcceptRejectedAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: AcceptRejectedAsync(Int32, RecurrenceUpdateMode, RequestOptions)
  nameWithType: AppointmentAgent.AcceptRejectedAsync(Int32, RecurrenceUpdateMode, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.AcceptRejectedAsync(System.Int32, SuperOffice.WebApi.Data.RecurrenceUpdateMode, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nAccept that an invited participant has rejected your invitation or assignment.\n"
  syntax:
    content: public Task<AppointmentEntity> AcceptRejectedAsync(int appointmentId, RecurrenceUpdateMode updateMode, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointmentId. Both master and child record ids are accepted.
    - id: updateMode
      type: SuperOffice.WebApi.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentEntity}
      description: Updated AppointmentEntity
    content.vb: Public Function AcceptRejectedAsync(appointmentId As Integer, updateMode As RecurrenceUpdateMode, requestOptions As RequestOptions = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.AcceptRejectedAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptRejectedAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultRecurrenceByDateAsync(System.DateTime,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultRecurrenceByDateAsync(System.DateTime,SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultRecurrenceByDateAsync(System.DateTime,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultRecurrenceByDateAsync(DateTime, RequestOptions)
  nameWithType: AppointmentAgent.CreateDefaultRecurrenceByDateAsync(DateTime, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultRecurrenceByDateAsync(System.DateTime, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCreates a RecurrenceInfo object populated with the default values for the specific type. Using startDate as start date for the recurreing pattern.\n"
  syntax:
    content: public Task<RecurrenceInfo> CreateDefaultRecurrenceByDateAsync(DateTime startDate, RequestOptions requestOptions = null)
    parameters:
    - id: startDate
      type: System.DateTime
      description: Date of which the recurring pattern should start.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.RecurrenceInfo}
    content.vb: Public Function CreateDefaultRecurrenceByDateAsync(startDate As DateTime, requestOptions As RequestOptions = Nothing) As Task(Of RecurrenceInfo)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultRecurrenceByDateAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultRecurrenceByDateAsync(System.DateTime,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.CleanUpBookingDeletedAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.CleanUpBookingDeletedAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: CleanUpBookingDeletedAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: CleanUpBookingDeletedAsync(Int32[], RequestOptions)
  nameWithType: AppointmentAgent.CleanUpBookingDeletedAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.CleanUpBookingDeletedAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nDeletes all appointments(within the appointmentIds array) with status BookingDeleted.\n"
  syntax:
    content: public Task<int> CleanUpBookingDeletedAsync(int[] appointmentIds, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentIds
      type: System.Int32[]
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: Number of modified or deleted appointments
    content.vb: Public Function CleanUpBookingDeletedAsync(appointmentIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of Integer)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.CleanUpBookingDeletedAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpBookingDeletedAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: AppointmentAgent.CleanUpBookingDeletedAsync(Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.AppointmentAgent.CleanUpBookingDeletedAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: CleanUpBookingDeletedAsync(Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.CleanUpBookingDeletedWithUpdateModeAsync(System.Int32[],SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.CleanUpBookingDeletedWithUpdateModeAsync(System.Int32[],SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  id: CleanUpBookingDeletedWithUpdateModeAsync(System.Int32[],SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: CleanUpBookingDeletedWithUpdateModeAsync(Int32[], RecurrenceUpdateMode, RequestOptions)
  nameWithType: AppointmentAgent.CleanUpBookingDeletedWithUpdateModeAsync(Int32[], RecurrenceUpdateMode, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.CleanUpBookingDeletedWithUpdateModeAsync(System.Int32[], SuperOffice.WebApi.Data.RecurrenceUpdateMode, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nDeletes all appointments(within the appointmentIds array) with status BookingDeleted. All appointments in the list will be deleted using the same recurrence update mode.\n"
  syntax:
    content: public Task CleanUpBookingDeletedWithUpdateModeAsync(int[] appointmentIds, RecurrenceUpdateMode updateMode, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentIds
      type: System.Int32[]
      description: List of appointment IDs
    - id: updateMode
      type: SuperOffice.WebApi.Data.RecurrenceUpdateMode
      description: Update mode
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function CleanUpBookingDeletedWithUpdateModeAsync(appointmentIds As Integer(), updateMode As RecurrenceUpdateMode, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.CleanUpBookingDeletedWithUpdateModeAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpBookingDeletedWithUpdateModeAsync(System.Int32[],SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: AppointmentAgent.CleanUpBookingDeletedWithUpdateModeAsync(Int32(), RecurrenceUpdateMode, RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.AppointmentAgent.CleanUpBookingDeletedWithUpdateModeAsync(System.Int32(), SuperOffice.WebApi.Data.RecurrenceUpdateMode, SuperOffice.WebApi.RequestOptions)
  name.vb: CleanUpBookingDeletedWithUpdateModeAsync(Int32(), RecurrenceUpdateMode, RequestOptions)
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.CleanUpRecurringBookingDeletedAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.CleanUpRecurringBookingDeletedAsync(SuperOffice.WebApi.RequestOptions)
  id: CleanUpRecurringBookingDeletedAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: CleanUpRecurringBookingDeletedAsync(RequestOptions)
  nameWithType: AppointmentAgent.CleanUpRecurringBookingDeletedAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.CleanUpRecurringBookingDeletedAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nDeletes all appointments with status BookingDeleted and for in logged user.\n"
  syntax:
    content: public Task<int> CleanUpRecurringBookingDeletedAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Int32}
    content.vb: Public Function CleanUpRecurringBookingDeletedAsync(requestOptions As RequestOptions = Nothing) As Task(Of Integer)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.CleanUpRecurringBookingDeletedAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpRecurringBookingDeletedAsync(SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociateAsync(SuperOffice.WebApi.Data.TaskType,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociateAsync(SuperOffice.WebApi.Data.TaskType,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultAppointmentEntityByTypeAndAssociateAsync(SuperOffice.WebApi.Data.TaskType,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultAppointmentEntityByTypeAndAssociateAsync(TaskType, Int32, RequestOptions)
  nameWithType: AppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociateAsync(TaskType, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociateAsync(SuperOffice.WebApi.Data.TaskType, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCreates a AppointmentEntity populated with the default values for the specific type and owner.\n"
  syntax:
    content: public Task<AppointmentEntity> CreateDefaultAppointmentEntityByTypeAndAssociateAsync(TaskType type, int associateId, RequestOptions requestOptions = null)
    parameters:
    - id: type
      type: SuperOffice.WebApi.Data.TaskType
      description: The type of task requested.
    - id: associateId
      type: System.Int32
      description: The associateId of the appointment owner.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentEntity}
      description: AppointmentEntity with default values.
    content.vb: Public Function CreateDefaultAppointmentEntityByTypeAndAssociateAsync(type As TaskType, associateId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociateAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociateAsync(SuperOffice.WebApi.Data.TaskType,System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetCanInsertForAssociatesAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetCanInsertForAssociatesAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetCanInsertForAssociatesAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetCanInsertForAssociatesAsync(Int32[], RequestOptions)
  nameWithType: AppointmentAgent.GetCanInsertForAssociatesAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetCanInsertForAssociatesAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCheck if current associate can create appointments in the diary of other associates.\n"
  syntax:
    content: public Task<bool[]> GetCanInsertForAssociatesAsync(int[] associateIds, RequestOptions requestOptions = null)
    parameters:
    - id: associateIds
      type: System.Int32[]
      description: Array of associate ids to check for.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Boolean[]}
      description: Returns an array of bool corresponding to the associate array input parameter.
    content.vb: Public Function GetCanInsertForAssociatesAsync(associateIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of Boolean())
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetCanInsertForAssociatesAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetCanInsertForAssociatesAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: AppointmentAgent.GetCanInsertForAssociatesAsync(Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.AppointmentAgent.GetCanInsertForAssociatesAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetCanInsertForAssociatesAsync(Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentHaveParticipantsWithEmailAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentHaveParticipantsWithEmailAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetAppointmentHaveParticipantsWithEmailAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetAppointmentHaveParticipantsWithEmailAsync(Int32, RequestOptions)
  nameWithType: AppointmentAgent.GetAppointmentHaveParticipantsWithEmailAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentHaveParticipantsWithEmailAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGetAppointmentHaveParticipantsWithEmail will check if any of the participants is marked to receive emails on this appointment. If no participants are defined, false will be returned.\n"
  syntax:
    content: public Task<bool> GetAppointmentHaveParticipantsWithEmailAsync(int appointmentId, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointmentId.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: Return true or false.
    content.vb: Public Function GetAppointmentHaveParticipantsWithEmailAsync(appointmentId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Boolean)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentHaveParticipantsWithEmailAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentHaveParticipantsWithEmailAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestionAsync(System.Int32,System.Int32,System.Boolean,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestionAsync(System.Int32,System.Int32,System.Boolean,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultAppointmentEntityFromSaleSuggestionAsync(System.Int32,System.Int32,System.Boolean,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultAppointmentEntityFromSaleSuggestionAsync(Int32, Int32, Boolean, Int32, RequestOptions)
  nameWithType: AppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestionAsync(Int32, Int32, Boolean, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestionAsync(System.Int32, System.Int32, System.Boolean, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCreates an appointment based on a suggested appointment. \n"
  syntax:
    content: public Task<AppointmentEntity> CreateDefaultAppointmentEntityFromSaleSuggestionAsync(int suggestedAppointmentId, int saleId, bool createNow, int ownerId, RequestOptions requestOptions = null)
    parameters:
    - id: suggestedAppointmentId
      type: System.Int32
      description: The id of the suggested appointment
    - id: saleId
      type: System.Int32
      description: This is the id of the sale the appointment is connected to. This will be used to give the appointment it&apos;s starting date. If the id is 0 or invalid, we assume the start date is now
    - id: createNow
      type: System.Boolean
      description: If this parameter is true, we override the suggested start time and create the appointment with the current date and time
    - id: ownerId
      type: System.Int32
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentEntity}
      description: The newly created appointment
    content.vb: Public Function CreateDefaultAppointmentEntityFromSaleSuggestionAsync(suggestedAppointmentId As Integer, saleId As Integer, createNow As Boolean, ownerId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestionAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestionAsync(System.Int32,System.Int32,System.Boolean,System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetNextSuggestedAppointmentBySaleAsync(System.Int32,System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetNextSuggestedAppointmentBySaleAsync(System.Int32,System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: GetNextSuggestedAppointmentBySaleAsync(System.Int32,System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetNextSuggestedAppointmentBySaleAsync(Int32, Int32, Boolean, RequestOptions)
  nameWithType: AppointmentAgent.GetNextSuggestedAppointmentBySaleAsync(Int32, Int32, Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetNextSuggestedAppointmentBySaleAsync(System.Int32, System.Int32, System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets the next suggested appointment for a given sale (or rather a given sale&apos;s guide).\n"
  syntax:
    content: public Task<SuggestedAppointment> GetNextSuggestedAppointmentBySaleAsync(int saleId, int currentAppointmentId, bool skipCompleteCheck, RequestOptions requestOptions = null)
    parameters:
    - id: saleId
      type: System.Int32
      description: The identifier of the (guided) sale from which we want to find a suggested appointment
    - id: currentAppointmentId
      type: System.Int32
      description: The identifier of the appointment from which we calculate the next suggestion. The next suggested appointment is the subsequent appointment defined in the SoAdmin&apos;s sales guide.
    - id: skipCompleteCheck
      type: System.Boolean
      description: If you want to get the next appointment step in a sales guide for an appointment which is not completed, this value must be true. In all other cases, this value should be false, as it would return the value of null if the current appointment is not completes.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SuggestedAppointment}
      description: The next suggestion based on the sale id of a guided sale and the id of the current apopintment. If we cannot find a next suggestion or the sale is not guided (or if any of the paramters are invalid), we will return null.
    content.vb: Public Function GetNextSuggestedAppointmentBySaleAsync(saleId As Integer, currentAppointmentId As Integer, skipCompleteCheck As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of SuggestedAppointment)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetNextSuggestedAppointmentBySaleAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetNextSuggestedAppointmentBySaleAsync(System.Int32,System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultReOpenAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultReOpenAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultReOpenAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultReOpenAppointmentAsync(Int32, RequestOptions)
  nameWithType: AppointmentAgent.CreateDefaultReOpenAppointmentAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultReOpenAppointmentAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nA re-open appointment should be created as a reminder to re-open the sale at a certain date with information regarding the stalled sale. \n"
  syntax:
    content: public Task<AppointmentEntity> CreateDefaultReOpenAppointmentAsync(int saleId, RequestOptions requestOptions = null)
    parameters:
    - id: saleId
      type: System.Int32
      description: The identifier of the stalled sale from which we create a re-open appointment
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentEntity}
      description: 'The re-open appointment with start date = the re-open date of the sale and a description matching the sales stalled reason. '
    content.vb: Public Function CreateDefaultReOpenAppointmentAsync(saleId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultReOpenAppointmentAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultReOpenAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestionAsync(System.Int32,System.Int32,System.Boolean,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestionAsync(System.Int32,System.Int32,System.Boolean,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultAppointmentEntityFromProjectSuggestionAsync(System.Int32,System.Int32,System.Boolean,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultAppointmentEntityFromProjectSuggestionAsync(Int32, Int32, Boolean, Int32, RequestOptions)
  nameWithType: AppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestionAsync(Int32, Int32, Boolean, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestionAsync(System.Int32, System.Int32, System.Boolean, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\n\n"
  syntax:
    content: public Task<AppointmentEntity> CreateDefaultAppointmentEntityFromProjectSuggestionAsync(int suggestedAppointmentId, int projectId, bool createNow, int ownerId, RequestOptions requestOptions = null)
    parameters:
    - id: suggestedAppointmentId
      type: System.Int32
    - id: projectId
      type: System.Int32
    - id: createNow
      type: System.Boolean
    - id: ownerId
      type: System.Int32
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentEntity}
    content.vb: Public Function CreateDefaultAppointmentEntityFromProjectSuggestionAsync(suggestedAppointmentId As Integer, projectId As Integer, createNow As Boolean, ownerId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestionAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestionAsync(System.Int32,System.Int32,System.Boolean,System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.CreateAppointmentForUIDAsync(SuperOffice.WebApi.Data.AppointmentEntity,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.CreateAppointmentForUIDAsync(SuperOffice.WebApi.Data.AppointmentEntity,System.String,SuperOffice.WebApi.RequestOptions)
  id: CreateAppointmentForUIDAsync(SuperOffice.WebApi.Data.AppointmentEntity,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateAppointmentForUIDAsync(AppointmentEntity, String, RequestOptions)
  nameWithType: AppointmentAgent.CreateAppointmentForUIDAsync(AppointmentEntity, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.CreateAppointmentForUIDAsync(SuperOffice.WebApi.Data.AppointmentEntity, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCreate an invitation record and an appointment with a given UID to reserve it if the UID is unused, otherwise null.\n"
  syntax:
    content: public Task<AppointmentEntity> CreateAppointmentForUIDAsync(AppointmentEntity appointmentEntity, string uID, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentEntity
      type: SuperOffice.WebApi.Data.AppointmentEntity
    - id: uID
      type: System.String
      description: The UID associated with the appointment
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentEntity}
      description: The newly created AppointmentEntity or null if the UID is in the DB already.
    content.vb: Public Function CreateAppointmentForUIDAsync(appointmentEntity As AppointmentEntity, uID As String, requestOptions As RequestOptions = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.CreateAppointmentForUIDAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAppointmentForUIDAsync(SuperOffice.WebApi.Data.AppointmentEntity,System.String,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentFromUIDAsync(System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentFromUIDAsync(System.String,SuperOffice.WebApi.RequestOptions)
  id: GetAppointmentFromUIDAsync(System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetAppointmentFromUIDAsync(String, RequestOptions)
  nameWithType: AppointmentAgent.GetAppointmentFromUIDAsync(String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentFromUIDAsync(System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet the appointment that corresponds to the given UID.\n"
  syntax:
    content: public Task<AppointmentEntity> GetAppointmentFromUIDAsync(string uID, RequestOptions requestOptions = null)
    parameters:
    - id: uID
      type: System.String
      description: The UID associated with the appointment
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentEntity}
      description: The corresponding AppointmentEntity if exists or a default appointment entity.
    content.vb: Public Function GetAppointmentFromUIDAsync(uID As String, requestOptions As RequestOptions = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentFromUIDAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentFromUIDAsync(System.String,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.CanAssignToProjectMemberAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.CanAssignToProjectMemberAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: CanAssignToProjectMemberAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: CanAssignToProjectMemberAsync(Int32, Int32, RequestOptions)
  nameWithType: AppointmentAgent.CanAssignToProjectMemberAsync(Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.CanAssignToProjectMemberAsync(System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\n\n"
  syntax:
    content: public Task<bool> CanAssignToProjectMemberAsync(int projectId, int suggestedAppointmentId, RequestOptions requestOptions = null)
    parameters:
    - id: projectId
      type: System.Int32
    - id: suggestedAppointmentId
      type: System.Int32
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function CanAssignToProjectMemberAsync(projectId As Integer, suggestedAppointmentId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Boolean)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.CanAssignToProjectMemberAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.CanAssignToProjectMemberAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetUIDFromAppointmentIdAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetUIDFromAppointmentIdAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: GetUIDFromAppointmentIdAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetUIDFromAppointmentIdAsync(Int32, Boolean, RequestOptions)
  nameWithType: AppointmentAgent.GetUIDFromAppointmentIdAsync(Int32, Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetUIDFromAppointmentIdAsync(System.Int32, System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet the UID associated with the appointment id in the Invitation table.\n"
  syntax:
    content: public Task<string> GetUIDFromAppointmentIdAsync(int appointmentId, bool useMotherId, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentId
      type: System.Int32
    - id: useMotherId
      type: System.Boolean
      description: Uses motherId if no UID is found for appointmentId.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The associated UID, or null if none exist.
    content.vb: Public Function GetUIDFromAppointmentIdAsync(appointmentId As Integer, useMotherId As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of String)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetUIDFromAppointmentIdAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetUIDFromAppointmentIdAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.UpdateAppointmentFromIcsResponseAsync(System.String,System.Byte[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.UpdateAppointmentFromIcsResponseAsync(System.String,System.Byte[],SuperOffice.WebApi.RequestOptions)
  id: UpdateAppointmentFromIcsResponseAsync(System.String,System.Byte[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: UpdateAppointmentFromIcsResponseAsync(String, Byte[], RequestOptions)
  nameWithType: AppointmentAgent.UpdateAppointmentFromIcsResponseAsync(String, Byte[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.UpdateAppointmentFromIcsResponseAsync(System.String, System.Byte[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdate the attendance to an appointment based on incoming ICS RSVPs.\n"
  syntax:
    content: public Task<bool> UpdateAppointmentFromIcsResponseAsync(string emailAddress, byte[] icsData, RequestOptions requestOptions = null)
    parameters:
    - id: emailAddress
      type: System.String
      description: The email-address of the person responding to our meeting-request.
    - id: icsData
      type: System.Byte[]
      description: The iCal ICS RSVP-content in byte-form.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if successfull.
    content.vb: Public Function UpdateAppointmentFromIcsResponseAsync(emailAddress As String, icsData As Byte(), requestOptions As RequestOptions = Nothing) As Task(Of Boolean)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.UpdateAppointmentFromIcsResponseAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentFromIcsResponseAsync(System.String,System.Byte[],SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: AppointmentAgent.UpdateAppointmentFromIcsResponseAsync(String, Byte(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.AppointmentAgent.UpdateAppointmentFromIcsResponseAsync(System.String, System.Byte(), SuperOffice.WebApi.RequestOptions)
  name.vb: UpdateAppointmentFromIcsResponseAsync(String, Byte(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.ValidateAppointmentEntityAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.ValidateAppointmentEntityAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
  id: ValidateAppointmentEntityAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: ValidateAppointmentEntityAsync(AppointmentEntity, RequestOptions)
  nameWithType: AppointmentAgent.ValidateAppointmentEntityAsync(AppointmentEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.ValidateAppointmentEntityAsync(SuperOffice.WebApi.Data.AppointmentEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCheck that entity is ready for saving.\n"
  syntax:
    content: public Task<StringDictionary> ValidateAppointmentEntityAsync(AppointmentEntity appointmentEntity, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentEntity
      type: SuperOffice.WebApi.Data.AppointmentEntity
      description: Entity to be checked.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.StringDictionary}
      description: Error messages tagged by field.
    content.vb: Public Function ValidateAppointmentEntityAsync(appointmentEntity As AppointmentEntity, requestOptions As RequestOptions = Nothing) As Task(Of StringDictionary)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.ValidateAppointmentEntityAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.ValidateAppointmentEntityAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.WillSendEmailAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.WillSendEmailAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
  id: WillSendEmailAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: WillSendEmailAsync(AppointmentEntity, RequestOptions)
  nameWithType: AppointmentAgent.WillSendEmailAsync(AppointmentEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.WillSendEmailAsync(SuperOffice.WebApi.Data.AppointmentEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns true if the changes will trigger email sending on Save, so you can inform the user.\n"
  syntax:
    content: public Task<bool> WillSendEmailAsync(AppointmentEntity appointment, RequestOptions requestOptions = null)
    parameters:
    - id: appointment
      type: SuperOffice.WebApi.Data.AppointmentEntity
      description: The appointment carrier with changes made, before saving the changes.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the changes to the appointment and preference settings etc. indicates an email should be sent.
    content.vb: Public Function WillSendEmailAsync(appointment As AppointmentEntity, requestOptions As RequestOptions = Nothing) As Task(Of Boolean)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.WillSendEmailAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.WillSendEmailAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.AcceptWithSmtpEmailConfirmationAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.AcceptWithSmtpEmailConfirmationAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  id: AcceptWithSmtpEmailConfirmationAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: AcceptWithSmtpEmailConfirmationAsync(Int32, RecurrenceUpdateMode, EMailConnectionInfo, RequestOptions)
  nameWithType: AppointmentAgent.AcceptWithSmtpEmailConfirmationAsync(Int32, RecurrenceUpdateMode, EMailConnectionInfo, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.AcceptWithSmtpEmailConfirmationAsync(System.Int32, SuperOffice.WebApi.Data.RecurrenceUpdateMode, SuperOffice.WebApi.Data.EMailConnectionInfo, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nAccepting an appointment invitation and send an email confirmation to the meeting organizer.\n"
  syntax:
    content: public Task AcceptWithSmtpEmailConfirmationAsync(int appointmentId, RecurrenceUpdateMode updateMode, EMailConnectionInfo smtpEMailConnectionInfo, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointmentId. Both master and child record ids are accepted.
    - id: updateMode
      type: SuperOffice.WebApi.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: smtpEMailConnectionInfo
      type: SuperOffice.WebApi.Data.EMailConnectionInfo
      description: Login information for outgoing smtp email server. Will be null if no login information is relevant.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
      description: Updated AppointmentEntity
    content.vb: Public Function AcceptWithSmtpEmailConfirmationAsync(appointmentId As Integer, updateMode As RecurrenceUpdateMode, smtpEMailConnectionInfo As EMailConnectionInfo, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.AcceptWithSmtpEmailConfirmationAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptWithSmtpEmailConfirmationAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.RejectWithSmtpEmailConfirmationAsync(System.Int32,System.String,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.RejectWithSmtpEmailConfirmationAsync(System.Int32,System.String,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  id: RejectWithSmtpEmailConfirmationAsync(System.Int32,System.String,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: RejectWithSmtpEmailConfirmationAsync(Int32, String, RecurrenceUpdateMode, EMailConnectionInfo, RequestOptions)
  nameWithType: AppointmentAgent.RejectWithSmtpEmailConfirmationAsync(Int32, String, RecurrenceUpdateMode, EMailConnectionInfo, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.RejectWithSmtpEmailConfirmationAsync(System.Int32, System.String, SuperOffice.WebApi.Data.RecurrenceUpdateMode, SuperOffice.WebApi.Data.EMailConnectionInfo, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nRejecting an appointment invitation and send an email confirmation to the meeting organizer.\n"
  syntax:
    content: public Task RejectWithSmtpEmailConfirmationAsync(int appointmentId, string rejectReason, RecurrenceUpdateMode updateMode, EMailConnectionInfo smtpEMailConnectionInfo, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointmentId. Both master and child record ids are accepted.
    - id: rejectReason
      type: System.String
      description: The reason the invitation was rejected.
    - id: updateMode
      type: SuperOffice.WebApi.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: smtpEMailConnectionInfo
      type: SuperOffice.WebApi.Data.EMailConnectionInfo
      description: Login information for outgoing smtp email server. Will be null if no login information is relevant.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
      description: Updated AppointmentEntity
    content.vb: Public Function RejectWithSmtpEmailConfirmationAsync(appointmentId As Integer, rejectReason As String, updateMode As RecurrenceUpdateMode, smtpEMailConnectionInfo As EMailConnectionInfo, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.RejectWithSmtpEmailConfirmationAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.RejectWithSmtpEmailConfirmationAsync(System.Int32,System.String,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentEmailInvitationAsync(SuperOffice.WebApi.Data.AppointmentEntity,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentEmailInvitationAsync(SuperOffice.WebApi.Data.AppointmentEntity,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetAppointmentEmailInvitationAsync(SuperOffice.WebApi.Data.AppointmentEntity,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetAppointmentEmailInvitationAsync(AppointmentEntity, String, String, RequestOptions)
  nameWithType: AppointmentAgent.GetAppointmentEmailInvitationAsync(AppointmentEntity, String, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentEmailInvitationAsync(SuperOffice.WebApi.Data.AppointmentEntity, System.String, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCreate an EMailEntity (without an ical attachment) with the email sent to participants when the appointment is saved\n"
  syntax:
    content: public Task<EMailEntity> GetAppointmentEmailInvitationAsync(AppointmentEntity appointment, string templateName, string language, RequestOptions requestOptions = null)
    parameters:
    - id: appointment
      type: SuperOffice.WebApi.Data.AppointmentEntity
      description: The appointment carrier with changes made.
    - id: templateName
      type: System.String
      description: Filename of invitation template
    - id: language
      type: System.String
      description: The desired SO-language for the template
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailEntity}
      description: Email entity with the preview in HTMLBody
    content.vb: Public Function GetAppointmentEmailInvitationAsync(appointment As AppointmentEntity, templateName As String, language As String, requestOptions As RequestOptions = Nothing) As Task(Of EMailEntity)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentEmailInvitationAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentEmailInvitationAsync(SuperOffice.WebApi.Data.AppointmentEntity,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.SaveWithCustomInvitationAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.SaveWithCustomInvitationAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  id: SaveWithCustomInvitationAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: SaveWithCustomInvitationAsync(AppointmentEntity, RecurrenceUpdateMode, Boolean, EMailConnectionInfo, EMailConnectionInfo, String, String, String, RequestOptions)
  nameWithType: AppointmentAgent.SaveWithCustomInvitationAsync(AppointmentEntity, RecurrenceUpdateMode, Boolean, EMailConnectionInfo, EMailConnectionInfo, String, String, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.SaveWithCustomInvitationAsync(SuperOffice.WebApi.Data.AppointmentEntity, SuperOffice.WebApi.Data.RecurrenceUpdateMode, System.Boolean, SuperOffice.WebApi.Data.EMailConnectionInfo, SuperOffice.WebApi.Data.EMailConnectionInfo, System.String, System.String, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSave a booking and send a custom invitation email to participants\n"
  syntax:
    content: public Task<AppointmentSaveData> SaveWithCustomInvitationAsync(AppointmentEntity appointmentEntity, RecurrenceUpdateMode updateMode, bool sendEmailToParticipants, EMailConnectionInfo smtpEMailConnectionInfo, EMailConnectionInfo imapEMailConnectionInfo, string emailBody, string subject, string templateLanguage, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentEntity
      type: SuperOffice.WebApi.Data.AppointmentEntity
    - id: updateMode
      type: SuperOffice.WebApi.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: sendEmailToParticipants
      type: System.Boolean
      description: If true, emails will be sent to all participants that is marked with send email flag. If false no mails will be sent even if the send email flag is true.
    - id: smtpEMailConnectionInfo
      type: SuperOffice.WebApi.Data.EMailConnectionInfo
      description: Login information for outgoing smtp email server. Will be null if no login information is relevant.
    - id: imapEMailConnectionInfo
      type: SuperOffice.WebApi.Data.EMailConnectionInfo
      description: Login information for imap server. Will be null if no login information is relevant.
    - id: emailBody
      type: System.String
      description: The email-body to be used for new invitations
    - id: subject
      type: System.String
      description: The email-subject to be used for new invitations
    - id: templateLanguage
      type: System.String
      description: The template language to use for invitation updates
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentSaveData}
      description: Appointment entity and flag for if email was queued to be sent
    content.vb: Public Function SaveWithCustomInvitationAsync(appointmentEntity As AppointmentEntity, updateMode As RecurrenceUpdateMode, sendEmailToParticipants As Boolean, smtpEMailConnectionInfo As EMailConnectionInfo, imapEMailConnectionInfo As EMailConnectionInfo, emailBody As String, subject As String, templateLanguage As String, requestOptions As RequestOptions = Nothing) As Task(Of AppointmentSaveData)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.SaveWithCustomInvitationAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.SaveWithCustomInvitationAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.ConvertAppointmentToTaskAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.ConvertAppointmentToTaskAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: ConvertAppointmentToTaskAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: ConvertAppointmentToTaskAsync(Int32, RequestOptions)
  nameWithType: AppointmentAgent.ConvertAppointmentToTaskAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.ConvertAppointmentToTaskAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nConvert appointment to task if certain criteria are met (participants &lt; 2)\n"
  syntax:
    content: public Task<AppointmentEntity> ConvertAppointmentToTaskAsync(int appointmentId, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: Appointment ID
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentEntity}
      description: Appointment entity
    content.vb: Public Function ConvertAppointmentToTaskAsync(appointmentId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.ConvertAppointmentToTaskAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.ConvertAppointmentToTaskAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetAppointmentListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetAppointmentListAsync(Int32[], RequestOptions)
  nameWithType: AppointmentAgent.GetAppointmentListAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentListAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets an array of specific Appointment objects.                        \n"
  syntax:
    content: public Task<Appointment[]> GetAppointmentListAsync(int[] appointmentIds, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentIds
      type: System.Int32[]
      description: The identifiers of the Appointment object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointment objects
    content.vb: Public Function GetAppointmentListAsync(appointmentIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentListAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: AppointmentAgent.GetAppointmentListAsync(Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentListAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetAppointmentListAsync(Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetMyAppointmentsAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetMyAppointmentsAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetMyAppointmentsAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetMyAppointmentsAsync(DateTime, DateTime, Int32, RequestOptions)
  nameWithType: AppointmentAgent.GetMyAppointmentsAsync(DateTime, DateTime, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetMyAppointmentsAsync(System.DateTime, System.DateTime, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments within a time range. The appointments belong to the currently logged on user.\n"
  syntax:
    content: public Task<Appointment[]> GetMyAppointmentsAsync(DateTime startTime, DateTime endTime, int count, RequestOptions requestOptions = null)
    parameters:
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Public Function GetMyAppointmentsAsync(startTime As DateTime, endTime As DateTime, count As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetMyAppointmentsAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyAppointmentsAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonAppointmentsAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonAppointmentsAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetPersonAppointmentsAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetPersonAppointmentsAsync(Int32, Boolean, DateTime, DateTime, Int32, RequestOptions)
  nameWithType: AppointmentAgent.GetPersonAppointmentsAsync(Int32, Boolean, DateTime, DateTime, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonAppointmentsAsync(System.Int32, System.Boolean, System.DateTime, System.DateTime, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments within a time range. The appointments belong to the person specified. If the person not is a SuperOffice user (associate) or the logged on user is not allowed to view this persons appointments an exception is thrown.\n"
  syntax:
    content: public Task<Appointment[]> GetPersonAppointmentsAsync(int personId, bool includeProjectAppointments, DateTime startTime, DateTime endTime, int count, RequestOptions requestOptions = null)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id of the SuperOffice user (associate).
    - id: includeProjectAppointments
      type: System.Boolean
      description: If true, all appointments that belong to projects where the user is a project member are included as well as the appointments belonging to the person.
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Public Function GetPersonAppointmentsAsync(personId As Integer, includeProjectAppointments As Boolean, startTime As DateTime, endTime As DateTime, count As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonAppointmentsAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetMyDiaryAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetMyDiaryAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetMyDiaryAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetMyDiaryAsync(DateTime, DateTime, Int32, RequestOptions)
  nameWithType: AppointmentAgent.GetMyDiaryAsync(DateTime, DateTime, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetMyDiaryAsync(System.DateTime, System.DateTime, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments within a time range. It only returns appointments that would be displayed in the user&apos;s diary. The appointments belong to the currently logged on user.\n"
  syntax:
    content: public Task<Appointment[]> GetMyDiaryAsync(DateTime startTime, DateTime endTime, int count, RequestOptions requestOptions = null)
    parameters:
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Public Function GetMyDiaryAsync(startTime As DateTime, endTime As DateTime, count As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetMyDiaryAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyDiaryAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetMyTasksAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetMyTasksAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetMyTasksAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetMyTasksAsync(Int32, RequestOptions)
  nameWithType: AppointmentAgent.GetMyTasksAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetMyTasksAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments within a time range. It only returns appointments that would be displayed in the user&apos;s task list. The appointments belong to the currently logged on user.\n"
  syntax:
    content: public Task<Appointment[]> GetMyTasksAsync(int count, RequestOptions requestOptions = null)
    parameters:
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Public Function GetMyTasksAsync(count As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetMyTasksAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyTasksAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonDiaryAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonDiaryAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetPersonDiaryAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetPersonDiaryAsync(Int32, DateTime, DateTime, Int32, RequestOptions)
  nameWithType: AppointmentAgent.GetPersonDiaryAsync(Int32, DateTime, DateTime, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonDiaryAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments within a time range. It only returns appointments that would be displayed in the user&apos;s diary. The appointments belong to the person specified. If the person not is a SuperOffice user (associate) or the logged on user is not allowed to view this persons appointments an exception is thrown.\n"
  syntax:
    content: public Task<Appointment[]> GetPersonDiaryAsync(int personId, DateTime startTime, DateTime endTime, int count, RequestOptions requestOptions = null)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id of the SuperOffice user (associate).
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Public Function GetPersonDiaryAsync(personId As Integer, startTime As DateTime, endTime As DateTime, count As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonDiaryAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonDiaryAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonTasksAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonTasksAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetPersonTasksAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetPersonTasksAsync(Int32, Int32, RequestOptions)
  nameWithType: AppointmentAgent.GetPersonTasksAsync(Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonTasksAsync(System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments within a time range. It only returns appointments that would be displayed in the user&apos;s task list. The appointments belong to the person specified. If the person not is a SuperOffice user (associate) or the logged on user is not allowed to view this persons appointments an exception is thrown.\n"
  syntax:
    content: public Task<Appointment[]> GetPersonTasksAsync(int personId, int count, RequestOptions requestOptions = null)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id of the SuperOffice user (associate).
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Public Function GetPersonTasksAsync(personId As Integer, count As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonTasksAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonTasksAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonAppointmentsByTypeAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonAppointmentsByTypeAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
  id: GetPersonAppointmentsByTypeAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetPersonAppointmentsByTypeAsync(Int32, Boolean, DateTime, DateTime, Int32, AppointmentType, RequestOptions)
  nameWithType: AppointmentAgent.GetPersonAppointmentsByTypeAsync(Int32, Boolean, DateTime, DateTime, Int32, AppointmentType, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonAppointmentsByTypeAsync(System.Int32, System.Boolean, System.DateTime, System.DateTime, System.Int32, SuperOffice.WebApi.Data.AppointmentType, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments of a specific appointment type within a time range. The appointments belong to the person specified.\n"
  syntax:
    content: public Task<Appointment[]> GetPersonAppointmentsByTypeAsync(int personId, bool includeProjectAppointments, DateTime startTime, DateTime endTime, int count, AppointmentType appointmentType, RequestOptions requestOptions = null)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id of the SuperOffice user (associate).
    - id: includeProjectAppointments
      type: System.Boolean
      description: If true, all appointments that belong to projects where the user is a project member are included as well as the appointments belonging to the person.
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: appointmentType
      type: SuperOffice.WebApi.Data.AppointmentType
      description: The appointment type, e.g. inDiary, inChecklist etc.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Public Function GetPersonAppointmentsByTypeAsync(personId As Integer, includeProjectAppointments As Boolean, startTime As DateTime, endTime As DateTime, count As Integer, appointmentType As AppointmentType, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonAppointmentsByTypeAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTypeAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectAppointmentsAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectAppointmentsAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetProjectAppointmentsAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetProjectAppointmentsAsync(Int32, DateTime, DateTime, Int32, RequestOptions)
  nameWithType: AppointmentAgent.GetProjectAppointmentsAsync(Int32, DateTime, DateTime, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectAppointmentsAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments within a time range. The appointments belong to the project specified. If the logged on user is not allowed to view this projects appointments an exception is thrown.\n"
  syntax:
    content: public Task<Appointment[]> GetProjectAppointmentsAsync(int projectId, DateTime startTime, DateTime endTime, int count, RequestOptions requestOptions = null)
    parameters:
    - id: projectId
      type: System.Int32
      description: The project id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Public Function GetProjectAppointmentsAsync(projectId As Integer, startTime As DateTime, endTime As DateTime, count As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectAppointmentsAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectAppointmentsByTypeAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectAppointmentsByTypeAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
  id: GetProjectAppointmentsByTypeAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetProjectAppointmentsByTypeAsync(Int32, DateTime, DateTime, Int32, AppointmentType, RequestOptions)
  nameWithType: AppointmentAgent.GetProjectAppointmentsByTypeAsync(Int32, DateTime, DateTime, Int32, AppointmentType, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectAppointmentsByTypeAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, SuperOffice.WebApi.Data.AppointmentType, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments of a specific appointment type within a time range. The appointments belong to the project specified.\n"
  syntax:
    content: public Task<Appointment[]> GetProjectAppointmentsByTypeAsync(int projectId, DateTime startTime, DateTime endTime, int count, AppointmentType appointmentType, RequestOptions requestOptions = null)
    parameters:
    - id: projectId
      type: System.Int32
      description: The project id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: appointmentType
      type: SuperOffice.WebApi.Data.AppointmentType
      description: The appointment type, e.g. inDiary, inChecklist etc.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Public Function GetProjectAppointmentsByTypeAsync(projectId As Integer, startTime As DateTime, endTime As DateTime, count As Integer, appointmentType As AppointmentType, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectAppointmentsByTypeAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTypeAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetContactAppointmentsAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetContactAppointmentsAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetContactAppointmentsAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetContactAppointmentsAsync(Int32, DateTime, DateTime, Int32, RequestOptions)
  nameWithType: AppointmentAgent.GetContactAppointmentsAsync(Int32, DateTime, DateTime, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetContactAppointmentsAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments within a time range. The appointments belong to the contact specified. If the logged on user is not allowed to view this persons appointments an exception is thrown.\n"
  syntax:
    content: public Task<Appointment[]> GetContactAppointmentsAsync(int contactId, DateTime startTime, DateTime endTime, int count, RequestOptions requestOptions = null)
    parameters:
    - id: contactId
      type: System.Int32
      description: The contact id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Public Function GetContactAppointmentsAsync(contactId As Integer, startTime As DateTime, endTime As DateTime, count As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetContactAppointmentsAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetContactAppointmentsByTypeAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetContactAppointmentsByTypeAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
  id: GetContactAppointmentsByTypeAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetContactAppointmentsByTypeAsync(Int32, DateTime, DateTime, Int32, AppointmentType, RequestOptions)
  nameWithType: AppointmentAgent.GetContactAppointmentsByTypeAsync(Int32, DateTime, DateTime, Int32, AppointmentType, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetContactAppointmentsByTypeAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, SuperOffice.WebApi.Data.AppointmentType, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments of a specific appointment type within a time range. The appointments belong to the contact specified. If the logged on user is not allowed to view this contacts appointments an exception is thrown.\n"
  syntax:
    content: public Task<Appointment[]> GetContactAppointmentsByTypeAsync(int contactId, DateTime startTime, DateTime endTime, int count, AppointmentType appointmentType, RequestOptions requestOptions = null)
    parameters:
    - id: contactId
      type: System.Int32
      description: The contact id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: appointmentType
      type: SuperOffice.WebApi.Data.AppointmentType
      description: The appointment type, e.g. inDiary, inChecklist etc.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Public Function GetContactAppointmentsByTypeAsync(contactId As Integer, startTime As DateTime, endTime As DateTime, count As Integer, appointmentType As AppointmentType, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetContactAppointmentsByTypeAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTypeAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectMemberAppointmentsAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectMemberAppointmentsAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetProjectMemberAppointmentsAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetProjectMemberAppointmentsAsync(Int32, DateTime, DateTime, Int32, RequestOptions)
  nameWithType: AppointmentAgent.GetProjectMemberAppointmentsAsync(Int32, DateTime, DateTime, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectMemberAppointmentsAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments within a time range. The appointments belong to the projects where the person specified is member.\n"
  syntax:
    content: public Task<Appointment[]> GetProjectMemberAppointmentsAsync(int personId, DateTime startTime, DateTime endTime, int count, RequestOptions requestOptions = null)
    parameters:
    - id: personId
      type: System.Int32
      description: The project member&apos;s person id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Public Function GetProjectMemberAppointmentsAsync(personId As Integer, startTime As DateTime, endTime As DateTime, count As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectMemberAppointmentsAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectMemberAppointmentsByTypeAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectMemberAppointmentsByTypeAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
  id: GetProjectMemberAppointmentsByTypeAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetProjectMemberAppointmentsByTypeAsync(Int32, DateTime, DateTime, Int32, AppointmentType, RequestOptions)
  nameWithType: AppointmentAgent.GetProjectMemberAppointmentsByTypeAsync(Int32, DateTime, DateTime, Int32, AppointmentType, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectMemberAppointmentsByTypeAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, SuperOffice.WebApi.Data.AppointmentType, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments of a specific appointment type within a time range. The appointments belong to the projects where the person specified is member.\n"
  syntax:
    content: public Task<Appointment[]> GetProjectMemberAppointmentsByTypeAsync(int personId, DateTime startTime, DateTime endTime, int count, AppointmentType appointmentType, RequestOptions requestOptions = null)
    parameters:
    - id: personId
      type: System.Int32
      description: The project member&apos;s person id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: appointmentType
      type: SuperOffice.WebApi.Data.AppointmentType
      description: The appointment type, e.g. inDiary, inChecklist etc.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Public Function GetProjectMemberAppointmentsByTypeAsync(personId As Integer, startTime As DateTime, endTime As DateTime, count As Integer, appointmentType As AppointmentType, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectMemberAppointmentsByTypeAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTypeAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonAppointmentsByTaskAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonAppointmentsByTaskAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetPersonAppointmentsByTaskAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetPersonAppointmentsByTaskAsync(Int32, Boolean, DateTime, DateTime, Int32, Int32, RequestOptions)
  nameWithType: AppointmentAgent.GetPersonAppointmentsByTaskAsync(Int32, Boolean, DateTime, DateTime, Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonAppointmentsByTaskAsync(System.Int32, System.Boolean, System.DateTime, System.DateTime, System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments of a specific appointment task type within a time range. The appointments belong to the person specified.  Task represents the different types of activities, like “Phone call”, “Meeting” and so on.\n"
  syntax:
    content: public Task<Appointment[]> GetPersonAppointmentsByTaskAsync(int personId, bool includeProjectAppointments, DateTime startTime, DateTime endTime, int count, int taskId, RequestOptions requestOptions = null)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id of the SuperOffice user (associate).
    - id: includeProjectAppointments
      type: System.Boolean
      description: If true, all appointments that belong to projects where the user is a project member are included as well as the appointments belonging to the person.
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: taskId
      type: System.Int32
      description: The task id. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Public Function GetPersonAppointmentsByTaskAsync(personId As Integer, includeProjectAppointments As Boolean, startTime As DateTime, endTime As DateTime, count As Integer, taskId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonAppointmentsByTaskAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTaskAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonAppointmentsByTasksAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonAppointmentsByTasksAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetPersonAppointmentsByTasksAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetPersonAppointmentsByTasksAsync(Int32, Boolean, DateTime, DateTime, Int32, Int32[], RequestOptions)
  nameWithType: AppointmentAgent.GetPersonAppointmentsByTasksAsync(Int32, Boolean, DateTime, DateTime, Int32, Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonAppointmentsByTasksAsync(System.Int32, System.Boolean, System.DateTime, System.DateTime, System.Int32, System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments from a list of appointment task types within a time range. The appointments belong to the person specified.  Task represents the different types of activities, like “Phone call”, “Meeting” and so on.\n"
  syntax:
    content: public Task<Appointment[]> GetPersonAppointmentsByTasksAsync(int personId, bool includeProjectAppointments, DateTime startTime, DateTime endTime, int count, int[] taskIds, RequestOptions requestOptions = null)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id of the SuperOffice user (associate).
    - id: includeProjectAppointments
      type: System.Boolean
      description: If true, all appointments that belong to projects where the user is a project member are included as well as the appointments belonging to the person.
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: taskIds
      type: System.Int32[]
      description: The task ids as an integer array. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Public Function GetPersonAppointmentsByTasksAsync(personId As Integer, includeProjectAppointments As Boolean, startTime As DateTime, endTime As DateTime, count As Integer, taskIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonAppointmentsByTasksAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTasksAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: AppointmentAgent.GetPersonAppointmentsByTasksAsync(Int32, Boolean, DateTime, DateTime, Int32, Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonAppointmentsByTasksAsync(System.Int32, System.Boolean, System.DateTime, System.DateTime, System.Int32, System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetPersonAppointmentsByTasksAsync(Int32, Boolean, DateTime, DateTime, Int32, Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonAppointmentsByTaskHeadingAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonAppointmentsByTaskHeadingAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetPersonAppointmentsByTaskHeadingAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetPersonAppointmentsByTaskHeadingAsync(Int32, Boolean, DateTime, DateTime, Int32, Int32, RequestOptions)
  nameWithType: AppointmentAgent.GetPersonAppointmentsByTaskHeadingAsync(Int32, Boolean, DateTime, DateTime, Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonAppointmentsByTaskHeadingAsync(System.Int32, System.Boolean, System.DateTime, System.DateTime, System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments of a specific appointment task heading within a time range. The appointments belong to the person specified.  Task represents the different types of activities, like “Phone call”, “Meeting” and so on. The heading represents a grouping or filtering of tasks.\n"
  syntax:
    content: public Task<Appointment[]> GetPersonAppointmentsByTaskHeadingAsync(int personId, bool includeProjectAppointments, DateTime startTime, DateTime endTime, int count, int taskHeadingId, RequestOptions requestOptions = null)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id of the SuperOffice user (associate).
    - id: includeProjectAppointments
      type: System.Boolean
      description: If true, all appointments that belong to projects where the user is a project member are included as well as the appointments belonging to the person.
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: taskHeadingId
      type: System.Int32
      description: The task heading id. The heading represents a grouping or filtering of tasks. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Public Function GetPersonAppointmentsByTaskHeadingAsync(personId As Integer, includeProjectAppointments As Boolean, startTime As DateTime, endTime As DateTime, count As Integer, taskHeadingId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonAppointmentsByTaskHeadingAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTaskHeadingAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectAppointmentsByTaskAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectAppointmentsByTaskAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetProjectAppointmentsByTaskAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetProjectAppointmentsByTaskAsync(Int32, DateTime, DateTime, Int32, Int32, RequestOptions)
  nameWithType: AppointmentAgent.GetProjectAppointmentsByTaskAsync(Int32, DateTime, DateTime, Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectAppointmentsByTaskAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments of a specific appointment task type within a time range. The appointments belong to the project specified.  Task represents the different types of activities, like “Phone call”, “Meeting” and so on.\n"
  syntax:
    content: public Task<Appointment[]> GetProjectAppointmentsByTaskAsync(int projectId, DateTime startTime, DateTime endTime, int count, int taskId, RequestOptions requestOptions = null)
    parameters:
    - id: projectId
      type: System.Int32
      description: The project id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: taskId
      type: System.Int32
      description: The task id. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Public Function GetProjectAppointmentsByTaskAsync(projectId As Integer, startTime As DateTime, endTime As DateTime, count As Integer, taskId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectAppointmentsByTaskAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTaskAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectAppointmentsByTasksAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectAppointmentsByTasksAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetProjectAppointmentsByTasksAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetProjectAppointmentsByTasksAsync(Int32, DateTime, DateTime, Int32, Int32[], RequestOptions)
  nameWithType: AppointmentAgent.GetProjectAppointmentsByTasksAsync(Int32, DateTime, DateTime, Int32, Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectAppointmentsByTasksAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments matching the list of appointment task types within a time range. The appointments belong to the project specified.  Task represents the different types of activities, like “Phone call”, “Meeting” and so on.\n"
  syntax:
    content: public Task<Appointment[]> GetProjectAppointmentsByTasksAsync(int projectId, DateTime startTime, DateTime endTime, int count, int[] taskIds, RequestOptions requestOptions = null)
    parameters:
    - id: projectId
      type: System.Int32
      description: The project id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: taskIds
      type: System.Int32[]
      description: The task ids as an integer array. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Public Function GetProjectAppointmentsByTasksAsync(projectId As Integer, startTime As DateTime, endTime As DateTime, count As Integer, taskIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectAppointmentsByTasksAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTasksAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: AppointmentAgent.GetProjectAppointmentsByTasksAsync(Int32, DateTime, DateTime, Int32, Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectAppointmentsByTasksAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetProjectAppointmentsByTasksAsync(Int32, DateTime, DateTime, Int32, Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectAppointmentsByTaskHeadingAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectAppointmentsByTaskHeadingAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetProjectAppointmentsByTaskHeadingAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetProjectAppointmentsByTaskHeadingAsync(Int32, DateTime, DateTime, Int32, Int32, RequestOptions)
  nameWithType: AppointmentAgent.GetProjectAppointmentsByTaskHeadingAsync(Int32, DateTime, DateTime, Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectAppointmentsByTaskHeadingAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments of a specific appointment task heading within a time range. The appointments belong to the project specified.  Task represents the different types of activities, like “Phone call”, “Meeting” and so on. The heading represents a grouping or filtering of tasks.\n"
  syntax:
    content: public Task<Appointment[]> GetProjectAppointmentsByTaskHeadingAsync(int projectId, DateTime startTime, DateTime endTime, int count, int taskHeadingId, RequestOptions requestOptions = null)
    parameters:
    - id: projectId
      type: System.Int32
      description: The project id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: taskHeadingId
      type: System.Int32
      description: The task heading id. The heading represents a grouping or filtering of tasks. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Public Function GetProjectAppointmentsByTaskHeadingAsync(projectId As Integer, startTime As DateTime, endTime As DateTime, count As Integer, taskHeadingId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectAppointmentsByTaskHeadingAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTaskHeadingAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectMemberAppointmentsByTaskAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectMemberAppointmentsByTaskAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetProjectMemberAppointmentsByTaskAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetProjectMemberAppointmentsByTaskAsync(Int32, DateTime, DateTime, Int32, Int32, RequestOptions)
  nameWithType: AppointmentAgent.GetProjectMemberAppointmentsByTaskAsync(Int32, DateTime, DateTime, Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectMemberAppointmentsByTaskAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments of a specific appointment task type within a time range. The appointments belong to the projects where the person specified is member. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.\n"
  syntax:
    content: public Task<Appointment[]> GetProjectMemberAppointmentsByTaskAsync(int personId, DateTime startTime, DateTime endTime, int count, int taskId, RequestOptions requestOptions = null)
    parameters:
    - id: personId
      type: System.Int32
      description: The project member&apos;s person id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: taskId
      type: System.Int32
      description: The task id. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Public Function GetProjectMemberAppointmentsByTaskAsync(personId As Integer, startTime As DateTime, endTime As DateTime, count As Integer, taskId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectMemberAppointmentsByTaskAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTaskAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectMemberAppointmentsByTasksAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectMemberAppointmentsByTasksAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetProjectMemberAppointmentsByTasksAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetProjectMemberAppointmentsByTasksAsync(Int32, DateTime, DateTime, Int32, Int32[], RequestOptions)
  nameWithType: AppointmentAgent.GetProjectMemberAppointmentsByTasksAsync(Int32, DateTime, DateTime, Int32, Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectMemberAppointmentsByTasksAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments matching a set of appointment task types within a time range. The appointments belong to the projects where the person specified is member. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.\n"
  syntax:
    content: public Task<Appointment[]> GetProjectMemberAppointmentsByTasksAsync(int personId, DateTime startTime, DateTime endTime, int count, int[] taskIds, RequestOptions requestOptions = null)
    parameters:
    - id: personId
      type: System.Int32
      description: The project member&apos;s person id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: taskIds
      type: System.Int32[]
      description: The task ids as an integer array. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Public Function GetProjectMemberAppointmentsByTasksAsync(personId As Integer, startTime As DateTime, endTime As DateTime, count As Integer, taskIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectMemberAppointmentsByTasksAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTasksAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: AppointmentAgent.GetProjectMemberAppointmentsByTasksAsync(Int32, DateTime, DateTime, Int32, Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectMemberAppointmentsByTasksAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetProjectMemberAppointmentsByTasksAsync(Int32, DateTime, DateTime, Int32, Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectMemberAppointmentsByTaskHeadingAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectMemberAppointmentsByTaskHeadingAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetProjectMemberAppointmentsByTaskHeadingAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetProjectMemberAppointmentsByTaskHeadingAsync(Int32, DateTime, DateTime, Int32, Int32, RequestOptions)
  nameWithType: AppointmentAgent.GetProjectMemberAppointmentsByTaskHeadingAsync(Int32, DateTime, DateTime, Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectMemberAppointmentsByTaskHeadingAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments of a specific appointment task heading within a time range. The appointments belong to the projects where the person specified is member. Task represents the different types of activities, like “Phone call”, “Meeting” and so on. The heading represents a grouping or filtering of tasks.\n"
  syntax:
    content: public Task<Appointment[]> GetProjectMemberAppointmentsByTaskHeadingAsync(int personId, DateTime startTime, DateTime endTime, int count, int taskHeadingId, RequestOptions requestOptions = null)
    parameters:
    - id: personId
      type: System.Int32
      description: The project member&apos;s person id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: taskHeadingId
      type: System.Int32
      description: The task heading id. The heading represents a grouping or filtering of tasks. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Public Function GetProjectMemberAppointmentsByTaskHeadingAsync(personId As Integer, startTime As DateTime, endTime As DateTime, count As Integer, taskHeadingId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectMemberAppointmentsByTaskHeadingAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTaskHeadingAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetContactAppointmentsByTaskAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetContactAppointmentsByTaskAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetContactAppointmentsByTaskAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetContactAppointmentsByTaskAsync(Int32, DateTime, DateTime, Int32, Int32, RequestOptions)
  nameWithType: AppointmentAgent.GetContactAppointmentsByTaskAsync(Int32, DateTime, DateTime, Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetContactAppointmentsByTaskAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments of a specific appointment task type within a time range. The appointments belong to the contact specified. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.\n"
  syntax:
    content: public Task<Appointment[]> GetContactAppointmentsByTaskAsync(int contactId, DateTime startTime, DateTime endTime, int count, int taskId, RequestOptions requestOptions = null)
    parameters:
    - id: contactId
      type: System.Int32
      description: The contact id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: taskId
      type: System.Int32
      description: The task id. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Public Function GetContactAppointmentsByTaskAsync(contactId As Integer, startTime As DateTime, endTime As DateTime, count As Integer, taskId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetContactAppointmentsByTaskAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTaskAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetContactAppointmentsByTasksAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetContactAppointmentsByTasksAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetContactAppointmentsByTasksAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetContactAppointmentsByTasksAsync(Int32, DateTime, DateTime, Int32, Int32[], RequestOptions)
  nameWithType: AppointmentAgent.GetContactAppointmentsByTasksAsync(Int32, DateTime, DateTime, Int32, Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetContactAppointmentsByTasksAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments belonging to an array of appointment task types within a time range. The appointments belong to the contact specified. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.\n"
  syntax:
    content: public Task<Appointment[]> GetContactAppointmentsByTasksAsync(int contactId, DateTime startTime, DateTime endTime, int count, int[] taskIds, RequestOptions requestOptions = null)
    parameters:
    - id: contactId
      type: System.Int32
      description: The contact id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: taskIds
      type: System.Int32[]
      description: The task ids as an integer array. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Public Function GetContactAppointmentsByTasksAsync(contactId As Integer, startTime As DateTime, endTime As DateTime, count As Integer, taskIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetContactAppointmentsByTasksAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTasksAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: AppointmentAgent.GetContactAppointmentsByTasksAsync(Int32, DateTime, DateTime, Int32, Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.AppointmentAgent.GetContactAppointmentsByTasksAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetContactAppointmentsByTasksAsync(Int32, DateTime, DateTime, Int32, Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetContactAppointmentsByTaskHeadingAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetContactAppointmentsByTaskHeadingAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetContactAppointmentsByTaskHeadingAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetContactAppointmentsByTaskHeadingAsync(Int32, DateTime, DateTime, Int32, Int32, RequestOptions)
  nameWithType: AppointmentAgent.GetContactAppointmentsByTaskHeadingAsync(Int32, DateTime, DateTime, Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetContactAppointmentsByTaskHeadingAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments of a specific appointment task heading within a time range. The appointments belong to the contact specified. Task represents the different types of activities, like “Phone call”, “Meeting” and so on. The heading represents a grouping or filtering of tasks.\n"
  syntax:
    content: public Task<Appointment[]> GetContactAppointmentsByTaskHeadingAsync(int contactId, DateTime startTime, DateTime endTime, int count, int taskHeadingId, RequestOptions requestOptions = null)
    parameters:
    - id: contactId
      type: System.Int32
      description: The contact id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: taskHeadingId
      type: System.Int32
      description: The task heading id. The heading represents a grouping or filtering of tasks. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Public Function GetContactAppointmentsByTaskHeadingAsync(contactId As Integer, startTime As DateTime, endTime As DateTime, count As Integer, taskHeadingId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetContactAppointmentsByTaskHeadingAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTaskHeadingAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetPublishedAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetPublishedAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetPublishedAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetPublishedAppointmentAsync(Int32, RequestOptions)
  nameWithType: AppointmentAgent.GetPublishedAppointmentAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetPublishedAppointmentAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet published appointment by appointment id.\n"
  syntax:
    content: public Task<Appointment> GetPublishedAppointmentAsync(int appointmentId, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointment id
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment}
      description: Appointment
    content.vb: Public Function GetPublishedAppointmentAsync(appointmentId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Appointment)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetPublishedAppointmentAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetPublishedAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetPublishedAppointmentsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetPublishedAppointmentsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetPublishedAppointmentsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetPublishedAppointmentsAsync(Int32[], RequestOptions)
  nameWithType: AppointmentAgent.GetPublishedAppointmentsAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetPublishedAppointmentsAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet published appointments by appointment ids.\n"
  syntax:
    content: public Task<Appointment[]> GetPublishedAppointmentsAsync(int[] appointmentIds, RequestOptions requestOptions = null)
    parameters:
    - id: appointmentIds
      type: System.Int32[]
      description: The array of appointment ids
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointment
    content.vb: Public Function GetPublishedAppointmentsAsync(appointmentIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetPublishedAppointmentsAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetPublishedAppointmentsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: AppointmentAgent.GetPublishedAppointmentsAsync(Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.AppointmentAgent.GetPublishedAppointmentsAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetPublishedAppointmentsAsync(Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetMyPublishedAppointmentsAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetMyPublishedAppointmentsAsync(SuperOffice.WebApi.RequestOptions)
  id: GetMyPublishedAppointmentsAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetMyPublishedAppointmentsAsync(RequestOptions)
  nameWithType: AppointmentAgent.GetMyPublishedAppointmentsAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetMyPublishedAppointmentsAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet published appointments from the logged in user.\n"
  syntax:
    content: public Task<Appointment[]> GetMyPublishedAppointmentsAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Appointments
    content.vb: Public Function GetMyPublishedAppointmentsAsync(requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetMyPublishedAppointmentsAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyPublishedAppointmentsAsync(SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetPublishedProjectAppointmentsAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetPublishedProjectAppointmentsAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetPublishedProjectAppointmentsAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetPublishedProjectAppointmentsAsync(Int32, RequestOptions)
  nameWithType: AppointmentAgent.GetPublishedProjectAppointmentsAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetPublishedProjectAppointmentsAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet published appointments by project id.\n"
  syntax:
    content: public Task<Appointment[]> GetPublishedProjectAppointmentsAsync(int projectId, RequestOptions requestOptions = null)
    parameters:
    - id: projectId
      type: System.Int32
      description: The project id
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointment
    content.vb: Public Function GetPublishedProjectAppointmentsAsync(projectId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetPublishedProjectAppointmentsAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetPublishedProjectAppointmentsAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentsByTaskHeadingAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentsByTaskHeadingAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetAppointmentsByTaskHeadingAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetAppointmentsByTaskHeadingAsync(Int32, RequestOptions)
  nameWithType: AppointmentAgent.GetAppointmentsByTaskHeadingAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentsByTaskHeadingAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns appointments of a specific appointment task heading. Task represents the different types of activities, like “Phone call”, “Meeting” and so on. The heading represents a grouping or filtering of tasks.\n"
  syntax:
    content: public Task<Appointment[]> GetAppointmentsByTaskHeadingAsync(int taskHeadingId, RequestOptions requestOptions = null)
    parameters:
    - id: taskHeadingId
      type: System.Int32
      description: The task heading id. The heading represents a grouping or filtering of tasks. Task represents the different types of activities, like “Phone call”, “Meeting” and so on
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
      description: Array of Appointments.
    content.vb: Public Function GetAppointmentsByTaskHeadingAsync(taskHeadingId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentsByTaskHeadingAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentsByTaskHeadingAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetAssociateDiaryAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetAssociateDiaryAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetAssociateDiaryAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetAssociateDiaryAsync(Int32, DateTime, DateTime, Int32, RequestOptions)
  nameWithType: AppointmentAgent.GetAssociateDiaryAsync(Int32, DateTime, DateTime, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetAssociateDiaryAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\n\n"
  syntax:
    content: public Task<Appointment[]> GetAssociateDiaryAsync(int associateId, DateTime startTime, DateTime endTime, int count, RequestOptions requestOptions = null)
    parameters:
    - id: associateId
      type: System.Int32
    - id: startTime
      type: System.DateTime
    - id: endTime
      type: System.DateTime
    - id: count
      type: System.Int32
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
    content.vb: Public Function GetAssociateDiaryAsync(associateId As Integer, startTime As DateTime, endTime As DateTime, count As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetAssociateDiaryAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociateDiaryAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetDiaryByGroupAsync(System.Int32,System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetDiaryByGroupAsync(System.Int32,System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetDiaryByGroupAsync(System.Int32,System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetDiaryByGroupAsync(Int32, Int32, DateTime, DateTime, Int32, RequestOptions)
  nameWithType: AppointmentAgent.GetDiaryByGroupAsync(Int32, Int32, DateTime, DateTime, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetDiaryByGroupAsync(System.Int32, System.Int32, System.DateTime, System.DateTime, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\n\n"
  syntax:
    content: public Task<Appointment[]> GetDiaryByGroupAsync(int groupId, int groupType, DateTime startTime, DateTime endTime, int count, RequestOptions requestOptions = null)
    parameters:
    - id: groupId
      type: System.Int32
    - id: groupType
      type: System.Int32
    - id: startTime
      type: System.DateTime
    - id: endTime
      type: System.DateTime
    - id: count
      type: System.Int32
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
    content.vb: Public Function GetDiaryByGroupAsync(groupId As Integer, groupType As Integer, startTime As DateTime, endTime As DateTime, count As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetDiaryByGroupAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetDiaryByGroupAsync(System.Int32,System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.UpdateAppointmentAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.UpdateAppointmentAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: UpdateAppointmentAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: UpdateAppointmentAsync(Int32, DateTime, DateTime, Int32, Int32, Int32, RequestOptions)
  nameWithType: AppointmentAgent.UpdateAppointmentAsync(Int32, DateTime, DateTime, Int32, Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.UpdateAppointmentAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdates an appointment record.\n"
  syntax:
    content: public Task<Appointment> UpdateAppointmentAsync(int id, DateTime startTime, DateTime endTime, int status, int type, int associateId, RequestOptions requestOptions = null)
    parameters:
    - id: id
      type: System.Int32
    - id: startTime
      type: System.DateTime
    - id: endTime
      type: System.DateTime
    - id: status
      type: System.Int32
    - id: type
      type: System.Int32
    - id: associateId
      type: System.Int32
      description: The appointment owner&apos;s id (associate id)
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment}
    content.vb: Public Function UpdateAppointmentAsync(id As Integer, startTime As DateTime, endTime As DateTime, status As Integer, type As Integer, associateId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Appointment)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.UpdateAppointmentAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.UpdateAppointmentWithModeAsync(System.Int32,System.DateTime,System.DateTime,SuperOffice.WebApi.Data.AppointmentStatus,SuperOffice.WebApi.Data.AppointmentType,System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.UpdateAppointmentWithModeAsync(System.Int32,System.DateTime,System.DateTime,SuperOffice.WebApi.Data.AppointmentStatus,SuperOffice.WebApi.Data.AppointmentType,System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  id: UpdateAppointmentWithModeAsync(System.Int32,System.DateTime,System.DateTime,SuperOffice.WebApi.Data.AppointmentStatus,SuperOffice.WebApi.Data.AppointmentType,System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: UpdateAppointmentWithModeAsync(Int32, DateTime, DateTime, AppointmentStatus, AppointmentType, Int32, RecurrenceUpdateMode, RequestOptions)
  nameWithType: AppointmentAgent.UpdateAppointmentWithModeAsync(Int32, DateTime, DateTime, AppointmentStatus, AppointmentType, Int32, RecurrenceUpdateMode, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.UpdateAppointmentWithModeAsync(System.Int32, System.DateTime, System.DateTime, SuperOffice.WebApi.Data.AppointmentStatus, SuperOffice.WebApi.Data.AppointmentType, System.Int32, SuperOffice.WebApi.Data.RecurrenceUpdateMode, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdates an appointment record, taking the given recurrence update mode into account.\n"
  syntax:
    content: public Task<Appointment> UpdateAppointmentWithModeAsync(int id, DateTime startTime, DateTime endTime, AppointmentStatus status, AppointmentType type, int associateId, RecurrenceUpdateMode updateMode, RequestOptions requestOptions = null)
    parameters:
    - id: id
      type: System.Int32
    - id: startTime
      type: System.DateTime
    - id: endTime
      type: System.DateTime
    - id: status
      type: SuperOffice.WebApi.Data.AppointmentStatus
    - id: type
      type: SuperOffice.WebApi.Data.AppointmentType
    - id: associateId
      type: System.Int32
      description: The appointment owner&apos;s id (associate id)
    - id: updateMode
      type: SuperOffice.WebApi.Data.RecurrenceUpdateMode
      description: Update mode for recurrence.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment}
    content.vb: Public Function UpdateAppointmentWithModeAsync(id As Integer, startTime As DateTime, endTime As DateTime, status As AppointmentStatus, type As AppointmentType, associateId As Integer, updateMode As RecurrenceUpdateMode, requestOptions As RequestOptions = Nothing) As Task(Of Appointment)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.UpdateAppointmentWithModeAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentWithModeAsync(System.Int32,System.DateTime,System.DateTime,SuperOffice.WebApi.Data.AppointmentStatus,SuperOffice.WebApi.Data.AppointmentType,System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.UpdateAppointmentWithModeAndEmailAsync(System.Int32,System.DateTime,System.DateTime,SuperOffice.WebApi.Data.AppointmentStatus,SuperOffice.WebApi.Data.AppointmentType,System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.UpdateAppointmentWithModeAndEmailAsync(System.Int32,System.DateTime,System.DateTime,SuperOffice.WebApi.Data.AppointmentStatus,SuperOffice.WebApi.Data.AppointmentType,System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  id: UpdateAppointmentWithModeAndEmailAsync(System.Int32,System.DateTime,System.DateTime,SuperOffice.WebApi.Data.AppointmentStatus,SuperOffice.WebApi.Data.AppointmentType,System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: UpdateAppointmentWithModeAndEmailAsync(Int32, DateTime, DateTime, AppointmentStatus, AppointmentType, Int32, RecurrenceUpdateMode, Boolean, EMailConnectionInfo, EMailConnectionInfo, RequestOptions)
  nameWithType: AppointmentAgent.UpdateAppointmentWithModeAndEmailAsync(Int32, DateTime, DateTime, AppointmentStatus, AppointmentType, Int32, RecurrenceUpdateMode, Boolean, EMailConnectionInfo, EMailConnectionInfo, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.UpdateAppointmentWithModeAndEmailAsync(System.Int32, System.DateTime, System.DateTime, SuperOffice.WebApi.Data.AppointmentStatus, SuperOffice.WebApi.Data.AppointmentType, System.Int32, SuperOffice.WebApi.Data.RecurrenceUpdateMode, System.Boolean, SuperOffice.WebApi.Data.EMailConnectionInfo, SuperOffice.WebApi.Data.EMailConnectionInfo, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdates an appointment record, taking the given recurrence update mode into account, possibly sending notification emails.\n"
  syntax:
    content: public Task<Appointment> UpdateAppointmentWithModeAndEmailAsync(int id, DateTime startTime, DateTime endTime, AppointmentStatus status, AppointmentType type, int associateId, RecurrenceUpdateMode updateMode, bool sendEmailToParticipants, EMailConnectionInfo smtpEMailConnectionInfo, EMailConnectionInfo imapEMailConnectionInfo, RequestOptions requestOptions = null)
    parameters:
    - id: id
      type: System.Int32
    - id: startTime
      type: System.DateTime
    - id: endTime
      type: System.DateTime
    - id: status
      type: SuperOffice.WebApi.Data.AppointmentStatus
    - id: type
      type: SuperOffice.WebApi.Data.AppointmentType
    - id: associateId
      type: System.Int32
      description: The appointment owner&apos;s id (associate id)
    - id: updateMode
      type: SuperOffice.WebApi.Data.RecurrenceUpdateMode
      description: Update mode for recurrence.
    - id: sendEmailToParticipants
      type: System.Boolean
      description: If true, emails will be sent to all participants that is marked with send email flag if deemed necessary. If false no mails will be sent even if the send email flag is true.
    - id: smtpEMailConnectionInfo
      type: SuperOffice.WebApi.Data.EMailConnectionInfo
      description: Login information for outgoing smtp email server. Will be null if no login information is relevant.
    - id: imapEMailConnectionInfo
      type: SuperOffice.WebApi.Data.EMailConnectionInfo
      description: Login information for imap server. Will be null if no login information is relevant.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment}
    content.vb: Public Function UpdateAppointmentWithModeAndEmailAsync(id As Integer, startTime As DateTime, endTime As DateTime, status As AppointmentStatus, type As AppointmentType, associateId As Integer, updateMode As RecurrenceUpdateMode, sendEmailToParticipants As Boolean, smtpEMailConnectionInfo As EMailConnectionInfo, imapEMailConnectionInfo As EMailConnectionInfo, requestOptions As RequestOptions = Nothing) As Task(Of Appointment)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.UpdateAppointmentWithModeAndEmailAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentWithModeAndEmailAsync(System.Int32,System.DateTime,System.DateTime,SuperOffice.WebApi.Data.AppointmentStatus,SuperOffice.WebApi.Data.AppointmentType,System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetAssociatesDiaryAsync(System.Int32[],System.DateTime,System.DateTime,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetAssociatesDiaryAsync(System.Int32[],System.DateTime,System.DateTime,SuperOffice.WebApi.RequestOptions)
  id: GetAssociatesDiaryAsync(System.Int32[],System.DateTime,System.DateTime,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetAssociatesDiaryAsync(Int32[], DateTime, DateTime, RequestOptions)
  nameWithType: AppointmentAgent.GetAssociatesDiaryAsync(Int32[], DateTime, DateTime, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetAssociatesDiaryAsync(System.Int32[], System.DateTime, System.DateTime, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nFetch appointments for given associates\n"
  syntax:
    content: public Task<Appointment[]> GetAssociatesDiaryAsync(int[] associateIds, DateTime startTime, DateTime endTime, RequestOptions requestOptions = null)
    parameters:
    - id: associateIds
      type: System.Int32[]
    - id: startTime
      type: System.DateTime
    - id: endTime
      type: System.DateTime
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
    content.vb: Public Function GetAssociatesDiaryAsync(associateIds As Integer(), startTime As DateTime, endTime As DateTime, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetAssociatesDiaryAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociatesDiaryAsync(System.Int32[],System.DateTime,System.DateTime,SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: AppointmentAgent.GetAssociatesDiaryAsync(Int32(), DateTime, DateTime, RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.AppointmentAgent.GetAssociatesDiaryAsync(System.Int32(), System.DateTime, System.DateTime, SuperOffice.WebApi.RequestOptions)
  name.vb: GetAssociatesDiaryAsync(Int32(), DateTime, DateTime, RequestOptions)
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetAssociatesDiaryInfoAsync(System.Int32[],System.DateTime,System.DateTime,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetAssociatesDiaryInfoAsync(System.Int32[],System.DateTime,System.DateTime,SuperOffice.WebApi.RequestOptions)
  id: GetAssociatesDiaryInfoAsync(System.Int32[],System.DateTime,System.DateTime,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetAssociatesDiaryInfoAsync(Int32[], DateTime, DateTime, RequestOptions)
  nameWithType: AppointmentAgent.GetAssociatesDiaryInfoAsync(Int32[], DateTime, DateTime, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetAssociatesDiaryInfoAsync(System.Int32[], System.DateTime, System.DateTime, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nFetch appointment info for given associates\n"
  syntax:
    content: public Task<AppointmentInfo[]> GetAssociatesDiaryInfoAsync(int[] associateIds, DateTime startTime, DateTime endTime, RequestOptions requestOptions = null)
    parameters:
    - id: associateIds
      type: System.Int32[]
    - id: startTime
      type: System.DateTime
    - id: endTime
      type: System.DateTime
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentInfo[]}
    content.vb: Public Function GetAssociatesDiaryInfoAsync(associateIds As Integer(), startTime As DateTime, endTime As DateTime, requestOptions As RequestOptions = Nothing) As Task(Of AppointmentInfo())
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetAssociatesDiaryInfoAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociatesDiaryInfoAsync(System.Int32[],System.DateTime,System.DateTime,SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: AppointmentAgent.GetAssociatesDiaryInfoAsync(Int32(), DateTime, DateTime, RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.AppointmentAgent.GetAssociatesDiaryInfoAsync(System.Int32(), System.DateTime, System.DateTime, SuperOffice.WebApi.RequestOptions)
  name.vb: GetAssociatesDiaryInfoAsync(Int32(), DateTime, DateTime, RequestOptions)
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentRecordsAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentRecordsAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetAppointmentRecordsAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetAppointmentRecordsAsync(Int32, Int32, RequestOptions)
  nameWithType: AppointmentAgent.GetAppointmentRecordsAsync(Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentRecordsAsync(System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet all records involved in a booking and/or recurring appointments. MotherId can be zero for repeating appointments or bookings, and recurrenceRuleId can be zero for bookings that are not repeating.\n"
  syntax:
    content: public Task<Appointment[]> GetAppointmentRecordsAsync(int motherId, int recurrenceRuleId, RequestOptions requestOptions = null)
    parameters:
    - id: motherId
      type: System.Int32
      description: Appointment id of the owner of a booking
    - id: recurrenceRuleId
      type: System.Int32
      description: RecurrenceId of a recuring appointment
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
    content.vb: Public Function GetAppointmentRecordsAsync(motherId As Integer, recurrenceRuleId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Appointment())
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentRecordsAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentRecordsAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetMySyncAppointmentsAsync(System.DateTime,System.DateTime,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetMySyncAppointmentsAsync(System.DateTime,System.DateTime,SuperOffice.WebApi.RequestOptions)
  id: GetMySyncAppointmentsAsync(System.DateTime,System.DateTime,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetMySyncAppointmentsAsync(DateTime, DateTime, RequestOptions)
  nameWithType: AppointmentAgent.GetMySyncAppointmentsAsync(DateTime, DateTime, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetMySyncAppointmentsAsync(System.DateTime, System.DateTime, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod that returns a specified number of appointments within a time range. The appointments belong to the currently logged on user.\n"
  syntax:
    content: public Task<AppointmentSyncData[]> GetMySyncAppointmentsAsync(DateTime startTime, DateTime endTime, RequestOptions requestOptions = null)
    parameters:
    - id: startTime
      type: System.DateTime
      description: The start of the time interval in which we want appointments. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentSyncData[]}
      description: Array of Appointments.
    content.vb: Public Function GetMySyncAppointmentsAsync(startTime As DateTime, endTime As DateTime, requestOptions As RequestOptions = Nothing) As Task(Of AppointmentSyncData())
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetMySyncAppointmentsAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetMySyncAppointmentsAsync(System.DateTime,System.DateTime,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetDayInformationListByDatesAndAssociateAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetDayInformationListByDatesAndAssociateAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetDayInformationListByDatesAndAssociateAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetDayInformationListByDatesAndAssociateAsync(DateTime, DateTime, Int32, RequestOptions)
  nameWithType: AppointmentAgent.GetDayInformationListByDatesAndAssociateAsync(DateTime, DateTime, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetDayInformationListByDatesAndAssociateAsync(System.DateTime, System.DateTime, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet combined day information (activity + redletter summary) for one or more days according to the given date interval. The time portion of the dates is ignored. Private appointments are counted, but may not be visible through tooltips or other more detailed services.\n"
  syntax:
    content: public Task<DayInformationListItem[]> GetDayInformationListByDatesAndAssociateAsync(DateTime startDate, DateTime endDate, int associateId, RequestOptions requestOptions = null)
    parameters:
    - id: startDate
      type: System.DateTime
      description: Start date of interval. Time portion is ignored.
    - id: endDate
      type: System.DateTime
      description: End date of interval. Time portion is ignored.
    - id: associateId
      type: System.Int32
      description: Associate id to identify the calendar to scan. If 0 is passed in, the currently authenticated associate is used instead.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DayInformationListItem[]}
      description: Exactly one item per day of the given time span is returned. Days where nothing happens will have all values set to 0, but will still be in the returned array. Start end dates are treated as inclusive.
    content.vb: Public Function GetDayInformationListByDatesAndAssociateAsync(startDate As DateTime, endDate As DateTime, associateId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of DayInformationListItem())
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetDayInformationListByDatesAndAssociateAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetDayInformationListByDatesAndAssociateAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetActivityInformationListByDatesAndAssociateAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetActivityInformationListByDatesAndAssociateAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetActivityInformationListByDatesAndAssociateAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetActivityInformationListByDatesAndAssociateAsync(DateTime, DateTime, Int32, RequestOptions)
  nameWithType: AppointmentAgent.GetActivityInformationListByDatesAndAssociateAsync(DateTime, DateTime, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetActivityInformationListByDatesAndAssociateAsync(System.DateTime, System.DateTime, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet activity information for one or more days according to the given date interval. The time portion of the dates is ignored. Private appointments are counted, but may not be visible through tooltips or other more detailed services.\n"
  syntax:
    content: public Task<ActivityInformationListItem[]> GetActivityInformationListByDatesAndAssociateAsync(DateTime startDate, DateTime endDate, int associateId, RequestOptions requestOptions = null)
    parameters:
    - id: startDate
      type: System.DateTime
      description: Start date of interval. Time portion is ignored.
    - id: endDate
      type: System.DateTime
      description: End date of interval. Time portion is ignored.
    - id: associateId
      type: System.Int32
      description: Associate id to identify the calendar to scan. If 0 is passed in, the currently authenticated associate is used instead.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ActivityInformationListItem[]}
      description: Exactly one item per day of the given time span is returned. Days where nothing happens will have all values set to 0, but will still be in the returned array. Start end dates are treated as inclusive.
    content.vb: Public Function GetActivityInformationListByDatesAndAssociateAsync(startDate As DateTime, endDate As DateTime, associateId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of ActivityInformationListItem())
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetActivityInformationListByDatesAndAssociateAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetActivityInformationListByDatesAndAssociateAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetRedLetterInformationListByDatesAndAssociateAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetRedLetterInformationListByDatesAndAssociateAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetRedLetterInformationListByDatesAndAssociateAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetRedLetterInformationListByDatesAndAssociateAsync(DateTime, DateTime, Int32, RequestOptions)
  nameWithType: AppointmentAgent.GetRedLetterInformationListByDatesAndAssociateAsync(DateTime, DateTime, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetRedLetterInformationListByDatesAndAssociateAsync(System.DateTime, System.DateTime, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet detailed red letter day information (redletter summary + individual day texts) for one or more days according to the given date interval. The time portion of the dates is ignored. \n"
  syntax:
    content: public Task<RedLetterInformationListItem[]> GetRedLetterInformationListByDatesAndAssociateAsync(DateTime startDate, DateTime endDate, int associateId, RequestOptions requestOptions = null)
    parameters:
    - id: startDate
      type: System.DateTime
      description: Start date of interval. Time portion is ignored.
    - id: endDate
      type: System.DateTime
      description: End date of interval. Time portion is ignored.
    - id: associateId
      type: System.Int32
      description: Associate id to identify the calendar to scan. If 0 is passed in, the currently authenticated associate is used instead.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.RedLetterInformationListItem[]}
      description: Exactly one item per day of the given time span is returned. Days where nothing happens will have all values set to 0, but will still be in the returned array. Start end dates are treated as inclusive.
    content.vb: Public Function GetRedLetterInformationListByDatesAndAssociateAsync(startDate As DateTime, endDate As DateTime, associateId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of RedLetterInformationListItem())
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetRedLetterInformationListByDatesAndAssociateAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetRedLetterInformationListByDatesAndAssociateAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetAlarmsAsync(System.Boolean,System.Boolean,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetAlarmsAsync(System.Boolean,System.Boolean,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetAlarmsAsync(System.Boolean,System.Boolean,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetAlarmsAsync(Boolean, Boolean, Int32, RequestOptions)
  nameWithType: AppointmentAgent.GetAlarmsAsync(Boolean, Boolean, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetAlarmsAsync(System.Boolean, System.Boolean, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\n\n"
  syntax:
    content: public Task<MultiAlarmData> GetAlarmsAsync(bool includeInvitations, bool includeAllAppointments, int defaultAlarmLeadTimeInMinutes, RequestOptions requestOptions = null)
    parameters:
    - id: includeInvitations
      type: System.Boolean
    - id: includeAllAppointments
      type: System.Boolean
    - id: defaultAlarmLeadTimeInMinutes
      type: System.Int32
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.MultiAlarmData}
    content.vb: Public Function GetAlarmsAsync(includeInvitations As Boolean, includeAllAppointments As Boolean, defaultAlarmLeadTimeInMinutes As Integer, requestOptions As RequestOptions = Nothing) As Task(Of MultiAlarmData)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetAlarmsAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetAlarmsAsync(System.Boolean,System.Boolean,System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetNextAvailableTimeAsync(System.Int32[],System.DateTime,System.DateTime,System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetNextAvailableTimeAsync(System.Int32[],System.DateTime,System.DateTime,System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: GetNextAvailableTimeAsync(System.Int32[],System.DateTime,System.DateTime,System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetNextAvailableTimeAsync(Int32[], DateTime, DateTime, Int32, Boolean, RequestOptions)
  nameWithType: AppointmentAgent.GetNextAvailableTimeAsync(Int32[], DateTime, DateTime, Int32, Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetNextAvailableTimeAsync(System.Int32[], System.DateTime, System.DateTime, System.Int32, System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nAn array of the soonest-available working time slots.\n"
  syntax:
    content: public Task<NextAvailableTime[]> GetNextAvailableTimeAsync(int[] associates, DateTime startTime, DateTime endTime, int count, bool isAllDay, RequestOptions requestOptions = null)
    parameters:
    - id: associates
      type: System.Int32[]
      description: Associate participants we want to account for while finding the next available times.
    - id: startTime
      type: System.DateTime
      description: 'The start of the time interval we want appointments from. '
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: How many next-available date time slots should be returned.
    - id: isAllDay
      type: System.Boolean
      description: Is the appointment an all day event.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.NextAvailableTime[]}
      description: Array of the soonest-available working time slots.
    content.vb: Public Function GetNextAvailableTimeAsync(associates As Integer(), startTime As DateTime, endTime As DateTime, count As Integer, isAllDay As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of NextAvailableTime())
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetNextAvailableTimeAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetNextAvailableTimeAsync(System.Int32[],System.DateTime,System.DateTime,System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: AppointmentAgent.GetNextAvailableTimeAsync(Int32(), DateTime, DateTime, Int32, Boolean, RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.AppointmentAgent.GetNextAvailableTimeAsync(System.Int32(), System.DateTime, System.DateTime, System.Int32, System.Boolean, SuperOffice.WebApi.RequestOptions)
  name.vb: GetNextAvailableTimeAsync(Int32(), DateTime, DateTime, Int32, Boolean, RequestOptions)
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GenerateLeadAsync(System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GenerateLeadAsync(System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  id: GenerateLeadAsync(System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GenerateLeadAsync(Int32, String, String, Int32, String, String, String, String, String, String, String, String, RequestOptions)
  nameWithType: AppointmentAgent.GenerateLeadAsync(Int32, String, String, Int32, String, String, String, String, String, String, String, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GenerateLeadAsync(System.Int32, System.String, System.String, System.Int32, System.String, System.String, System.String, System.String, System.String, System.String, System.String, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nAdds a sales lead (task) to a contact in SuperOffice. If the contact or person is known, the sales lead is added to the current contact. If not, a new contact is created, with the associate with ownerIdForNewContact as responsible (Our Contact). A relation is created between the contact and the person submitting the lead. Based on wether the person the request is made for is found or not, the following happens: If the person is found, the person, person&apos;s contact and sales representative is returned. If neither the person nor the contact is found a new person and contact is created (if sufficient data is supplied), and the person, person&apos;s contact and sales representative is returned. If the contact and not the person is found a new person is created on this contact, and the contact, salesrep, and person is returned (if there was enough data to return the person). If more than one contact is found a list of contacts is returned.\n"
  syntax:
    content: public Task<SalesActivity> GenerateLeadAsync(int associateIdForNewContact, string leadDescription, string relation, int relationId, string leadContact, string leadPersonFirstname, string leadPersonLastname, string leadPersonEmail, string leadPhoneNumber, string creatorsContact, string creatorsFirstname, string creatorsLastname, RequestOptions requestOptions = null)
    parameters:
    - id: associateIdForNewContact
      type: System.Int32
      description: Associate id of the person set as &quot;Our Contact&quot; if a new Contact is created. Ensures that the sales lead is assigned to the correct salesman.
    - id: leadDescription
      type: System.String
      description: Description of the lead. The lead text as shown in SuperOffice
    - id: relation
      type: System.String
      description: The relation the person submitting the lead has to the contact.
    - id: relationId
      type: System.Int32
      description: Id of the relation type. Database specific.
    - id: leadContact
      type: System.String
      description: Name of the new or existing contact (company) the lead is created for.
    - id: leadPersonFirstname
      type: System.String
      description: Firstname of the contact&apos;s person.
    - id: leadPersonLastname
      type: System.String
      description: Lastname of the contact&apos;s person.
    - id: leadPersonEmail
      type: System.String
      description: Email to the contact&apos;s person.
    - id: leadPhoneNumber
      type: System.String
      description: Phone number of the contact or contact&apos;s person.
    - id: creatorsContact
      type: System.String
      description: The contact (company) of the person creating the lead
    - id: creatorsFirstname
      type: System.String
      description: The firstname of the person creating the lead
    - id: creatorsLastname
      type: System.String
      description: The lastname of the person creating the lead
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SalesActivity}
      description: True if successfull.
    content.vb: Public Function GenerateLeadAsync(associateIdForNewContact As Integer, leadDescription As String, relation As String, relationId As Integer, leadContact As String, leadPersonFirstname As String, leadPersonLastname As String, leadPersonEmail As String, leadPhoneNumber As String, creatorsContact As String, creatorsFirstname As String, creatorsLastname As String, requestOptions As RequestOptions = Nothing) As Task(Of SalesActivity)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GenerateLeadAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GenerateLeadAsync(System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.RequestForInfoAsync(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.RequestForInfoAsync(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  id: RequestForInfoAsync(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: RequestForInfoAsync(Int32, String, String, String, String, String, String, String, RequestOptions)
  nameWithType: AppointmentAgent.RequestForInfoAsync(Int32, String, String, String, String, String, String, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.RequestForInfoAsync(System.Int32, System.String, System.String, System.String, System.String, System.String, System.String, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSubmits a request for information. The request is added to the task list of the user that is responsible for this contact. Based on wether the person the request is made for is found or not, the following happens: If the person is found, the person, person&apos;s contact and sales representative is returned. If neither the person nor the contact is found a new person and contact is created (if sufficient data is supplied), and the person, person&apos;s contact and sales representative is returned. If the contact and not the person is found a new person is created on this contact, and the contact, salesrep, and person is returned (if there was enough data to return the person). If more than one contact is found a list of contacts is returned.\n"
  syntax:
    content: public Task<SalesActivity> RequestForInfoAsync(int associateIdForNewContact, string channel, string regarding, string contactName, string personFirstname, string personLastname, string emailAddress, string phoneNumber, RequestOptions requestOptions = null)
    parameters:
    - id: associateIdForNewContact
      type: System.Int32
      description: Associate id of the person set as &quot;Our Contact&quot; if a new Contact is created. Ensures that the request is assigned to the correct salesman.
    - id: channel
      type: System.String
      description: The requested channel, e.g. &quot;Phone&quot;
    - id: regarding
      type: System.String
      description: The text submitted by the user.
    - id: contactName
      type: System.String
      description: The name of the contact that the RFI will be added to. May be empty.
    - id: personFirstname
      type: System.String
      description: The firstname of the person that the RFI will be added to. May be empty.
    - id: personLastname
      type: System.String
      description: The lastname of the person that the RFI will be added to. May be empty.
    - id: emailAddress
      type: System.String
      description: The email address of the person that the RFI will be added to.
    - id: phoneNumber
      type: System.String
      description: Phone number of the contact or contact&apos;s person.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SalesActivity}
      description: True if the submission was successful.
    content.vb: Public Function RequestForInfoAsync(associateIdForNewContact As Integer, channel As String, regarding As String, contactName As String, personFirstname As String, personLastname As String, emailAddress As String, phoneNumber As String, requestOptions As RequestOptions = Nothing) As Task(Of SalesActivity)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.RequestForInfoAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.RequestForInfoAsync(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetSuggestedAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetSuggestedAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetSuggestedAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetSuggestedAppointmentAsync(Int32, RequestOptions)
  nameWithType: AppointmentAgent.GetSuggestedAppointmentAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetSuggestedAppointmentAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific SuggestedAppointment object.                        \n"
  syntax:
    content: public Task<SuggestedAppointment> GetSuggestedAppointmentAsync(int suggestedAppointmentId, RequestOptions requestOptions = null)
    parameters:
    - id: suggestedAppointmentId
      type: System.Int32
      description: The identifier of the SuggestedAppointment object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SuggestedAppointment}
      description: SuggestedAppointment
    content.vb: Public Function GetSuggestedAppointmentAsync(suggestedAppointmentId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of SuggestedAppointment)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetSuggestedAppointmentAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetSuggestedAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetSuggestedAppointmentEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetSuggestedAppointmentEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetSuggestedAppointmentEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetSuggestedAppointmentEntityAsync(Int32, RequestOptions)
  nameWithType: AppointmentAgent.GetSuggestedAppointmentEntityAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetSuggestedAppointmentEntityAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific SuggestedAppointmentEntity object.                        \n"
  syntax:
    content: public Task<SuggestedAppointmentEntity> GetSuggestedAppointmentEntityAsync(int suggestedAppointmentEntityId, RequestOptions requestOptions = null)
    parameters:
    - id: suggestedAppointmentEntityId
      type: System.Int32
      description: The identifier of the SuggestedAppointmentEntity object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SuggestedAppointmentEntity}
      description: SuggestedAppointmentEntity
    content.vb: Public Function GetSuggestedAppointmentEntityAsync(suggestedAppointmentEntityId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of SuggestedAppointmentEntity)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetSuggestedAppointmentEntityAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetSuggestedAppointmentEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetTaskListItemAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetTaskListItemAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetTaskListItemAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetTaskListItemAsync(Int32, RequestOptions)
  nameWithType: AppointmentAgent.GetTaskListItemAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetTaskListItemAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific TaskListItem object.                        \n"
  syntax:
    content: public Task<TaskListItem> GetTaskListItemAsync(int taskListItemId, RequestOptions requestOptions = null)
    parameters:
    - id: taskListItemId
      type: System.Int32
      description: The identifier of the TaskListItem object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TaskListItem}
      description: TaskListItem
    content.vb: Public Function GetTaskListItemAsync(taskListItemId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of TaskListItem)
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetTaskListItemAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetTaskListItemAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetTaskListItemsAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AppointmentAgent.GetTaskListItemsAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: GetTaskListItemsAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AppointmentAgent
  langs:
  - csharp
  - vb
  name: GetTaskListItemsAsync(Boolean, RequestOptions)
  nameWithType: AppointmentAgent.GetTaskListItemsAsync(Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetTaskListItemsAsync(System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets all takslist items\n"
  syntax:
    content: public Task<TaskListItem[]> GetTaskListItemsAsync(bool includeDeleted, RequestOptions requestOptions = null)
    parameters:
    - id: includeDeleted
      type: System.Boolean
      description: Include deleted items
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TaskListItem[]}
      description: An array of tasklist items
    content.vb: Public Function GetTaskListItemsAsync(includeDeleted As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of TaskListItem())
  overload: SuperOffice.WebApi.Agents.AppointmentAgent.GetTaskListItemsAsync*
  implements:
  - SuperOffice.WebApi.Agents.IAppointmentAgent.GetTaskListItemsAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.WebApi.Agents
  commentId: N:SuperOffice.WebApi.Agents
  isExternal: true
  name: SuperOffice.WebApi.Agents
  nameWithType: SuperOffice.WebApi.Agents
  fullName: SuperOffice.WebApi.Agents
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.WebApi.Agents.AgentBase
  commentId: T:SuperOffice.WebApi.Agents.AgentBase
  parent: SuperOffice.WebApi.Agents
  isExternal: true
  name: AgentBase
  nameWithType: AgentBase
  fullName: SuperOffice.WebApi.Agents.AgentBase
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent
  commentId: T:SuperOffice.WebApi.Agents.IAppointmentAgent
  parent: SuperOffice.WebApi.Agents
  isExternal: true
  name: IAppointmentAgent
  nameWithType: IAppointmentAgent
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent
- uid: System.IDisposable
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: SuperOffice.WebApi.Agents.AgentBase._json
  commentId: F:SuperOffice.WebApi.Agents.AgentBase._json
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: _json
  nameWithType: AgentBase._json
  fullName: SuperOffice.WebApi.Agents.AgentBase._json
- uid: SuperOffice.WebApi.Agents.AgentBase._binary
  commentId: F:SuperOffice.WebApi.Agents.AgentBase._binary
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: _binary
  nameWithType: AgentBase._binary
  fullName: SuperOffice.WebApi.Agents.AgentBase._binary
- uid: SuperOffice.WebApi.Agents.AgentBase._config
  commentId: F:SuperOffice.WebApi.Agents.AgentBase._config
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: _config
  nameWithType: AgentBase._config
  fullName: SuperOffice.WebApi.Agents.AgentBase._config
- uid: SuperOffice.WebApi.Agents.AgentBase._client
  commentId: F:SuperOffice.WebApi.Agents.AgentBase._client
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: _client
  nameWithType: AgentBase._client
  fullName: SuperOffice.WebApi.Agents.AgentBase._client
- uid: SuperOffice.WebApi.Agents.AgentBase._disposeClient
  commentId: F:SuperOffice.WebApi.Agents.AgentBase._disposeClient
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: _disposeClient
  nameWithType: AgentBase._disposeClient
  fullName: SuperOffice.WebApi.Agents.AgentBase._disposeClient
- uid: SuperOffice.WebApi.Agents.AgentBase.Merge(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.Merge(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: Merge(RequestOptions)
  nameWithType: AgentBase.Merge(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AgentBase.Merge(SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.Merge(SuperOffice.WebApi.RequestOptions)
    name: Merge
    nameWithType: AgentBase.Merge
    fullName: SuperOffice.WebApi.Agents.AgentBase.Merge
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.Merge(SuperOffice.WebApi.RequestOptions)
    name: Merge
    nameWithType: AgentBase.Merge
    fullName: SuperOffice.WebApi.Agents.AgentBase.Merge
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: BuildRequestFromObject(HttpMethod, String, Object, WebApiOptions, String)
  nameWithType: AgentBase.BuildRequestFromObject(HttpMethod, String, Object, WebApiOptions, String)
  fullName: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject(System.Net.Http.HttpMethod, System.String, System.Object, SuperOffice.WebApi.WebApiOptions, System.String)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
    name: BuildRequestFromObject
    nameWithType: AgentBase.BuildRequestFromObject
    fullName: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.WebApiOptions
    name: WebApiOptions
    nameWithType: WebApiOptions
    fullName: SuperOffice.WebApi.WebApiOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
    name: BuildRequestFromObject
    nameWithType: AgentBase.BuildRequestFromObject
    fullName: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.WebApiOptions
    name: WebApiOptions
    nameWithType: WebApiOptions
    fullName: SuperOffice.WebApi.WebApiOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream(System.Net.Http.HttpMethod,System.String,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream(System.Net.Http.HttpMethod,System.String,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: BuildRequestFromStream(HttpMethod, String, Stream, WebApiOptions, String)
  nameWithType: AgentBase.BuildRequestFromStream(HttpMethod, String, Stream, WebApiOptions, String)
  fullName: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream(System.Net.Http.HttpMethod, System.String, System.IO.Stream, SuperOffice.WebApi.WebApiOptions, System.String)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream(System.Net.Http.HttpMethod,System.String,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
    name: BuildRequestFromStream
    nameWithType: AgentBase.BuildRequestFromStream
    fullName: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.WebApiOptions
    name: WebApiOptions
    nameWithType: WebApiOptions
    fullName: SuperOffice.WebApi.WebApiOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream(System.Net.Http.HttpMethod,System.String,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
    name: BuildRequestFromStream
    nameWithType: AgentBase.BuildRequestFromStream
    fullName: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.WebApiOptions
    name: WebApiOptions
    nameWithType: WebApiOptions
    fullName: SuperOffice.WebApi.WebApiOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObjectWithStream(System.Net.Http.HttpMethod,System.String,System.Object,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObjectWithStream(System.Net.Http.HttpMethod,System.String,System.Object,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: BuildRequestFromObjectWithStream(HttpMethod, String, Object, Stream, WebApiOptions, String)
  nameWithType: AgentBase.BuildRequestFromObjectWithStream(HttpMethod, String, Object, Stream, WebApiOptions, String)
  fullName: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObjectWithStream(System.Net.Http.HttpMethod, System.String, System.Object, System.IO.Stream, SuperOffice.WebApi.WebApiOptions, System.String)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObjectWithStream(System.Net.Http.HttpMethod,System.String,System.Object,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
    name: BuildRequestFromObjectWithStream
    nameWithType: AgentBase.BuildRequestFromObjectWithStream
    fullName: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObjectWithStream
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.WebApiOptions
    name: WebApiOptions
    nameWithType: WebApiOptions
    fullName: SuperOffice.WebApi.WebApiOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObjectWithStream(System.Net.Http.HttpMethod,System.String,System.Object,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
    name: BuildRequestFromObjectWithStream
    nameWithType: AgentBase.BuildRequestFromObjectWithStream
    fullName: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObjectWithStream
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.WebApiOptions
    name: WebApiOptions
    nameWithType: WebApiOptions
    fullName: SuperOffice.WebApi.WebApiOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization(SuperOffice.WebApi.Authorization.IAuthorization)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization(SuperOffice.WebApi.Authorization.IAuthorization)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: ParseAuthorization(IAuthorization)
  nameWithType: AgentBase.ParseAuthorization(IAuthorization)
  fullName: SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization(SuperOffice.WebApi.Authorization.IAuthorization)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization(SuperOffice.WebApi.Authorization.IAuthorization)
    name: ParseAuthorization
    nameWithType: AgentBase.ParseAuthorization
    fullName: SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.Authorization.IAuthorization
    name: IAuthorization
    nameWithType: IAuthorization
    fullName: SuperOffice.WebApi.Authorization.IAuthorization
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization(SuperOffice.WebApi.Authorization.IAuthorization)
    name: ParseAuthorization
    nameWithType: AgentBase.ParseAuthorization
    fullName: SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.Authorization.IAuthorization
    name: IAuthorization
    nameWithType: IAuthorization
    fullName: SuperOffice.WebApi.Authorization.IAuthorization
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.CancelRequest
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.CancelRequest
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: CancelRequest()
  nameWithType: AgentBase.CancelRequest()
  fullName: SuperOffice.WebApi.Agents.AgentBase.CancelRequest()
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.CancelRequest
    name: CancelRequest
    nameWithType: AgentBase.CancelRequest
    fullName: SuperOffice.WebApi.Agents.AgentBase.CancelRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.CancelRequest
    name: CancelRequest
    nameWithType: AgentBase.CancelRequest
    fullName: SuperOffice.WebApi.Agents.AgentBase.CancelRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.SendRequestObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.SendRequestObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: SendRequestObject(HttpMethod, String, Object, WebApiOptions, String)
  nameWithType: AgentBase.SendRequestObject(HttpMethod, String, Object, WebApiOptions, String)
  fullName: SuperOffice.WebApi.Agents.AgentBase.SendRequestObject(System.Net.Http.HttpMethod, System.String, System.Object, SuperOffice.WebApi.WebApiOptions, System.String)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.SendRequestObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
    name: SendRequestObject
    nameWithType: AgentBase.SendRequestObject
    fullName: SuperOffice.WebApi.Agents.AgentBase.SendRequestObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.WebApiOptions
    name: WebApiOptions
    nameWithType: WebApiOptions
    fullName: SuperOffice.WebApi.WebApiOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.SendRequestObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
    name: SendRequestObject
    nameWithType: AgentBase.SendRequestObject
    fullName: SuperOffice.WebApi.Agents.AgentBase.SendRequestObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.WebApiOptions
    name: WebApiOptions
    nameWithType: WebApiOptions
    fullName: SuperOffice.WebApi.WebApiOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.SendRequestObjectWithStream(System.Net.Http.HttpMethod,System.String,System.Object,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.SendRequestObjectWithStream(System.Net.Http.HttpMethod,System.String,System.Object,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: SendRequestObjectWithStream(HttpMethod, String, Object, Stream, WebApiOptions, String)
  nameWithType: AgentBase.SendRequestObjectWithStream(HttpMethod, String, Object, Stream, WebApiOptions, String)
  fullName: SuperOffice.WebApi.Agents.AgentBase.SendRequestObjectWithStream(System.Net.Http.HttpMethod, System.String, System.Object, System.IO.Stream, SuperOffice.WebApi.WebApiOptions, System.String)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.SendRequestObjectWithStream(System.Net.Http.HttpMethod,System.String,System.Object,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
    name: SendRequestObjectWithStream
    nameWithType: AgentBase.SendRequestObjectWithStream
    fullName: SuperOffice.WebApi.Agents.AgentBase.SendRequestObjectWithStream
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.WebApiOptions
    name: WebApiOptions
    nameWithType: WebApiOptions
    fullName: SuperOffice.WebApi.WebApiOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.SendRequestObjectWithStream(System.Net.Http.HttpMethod,System.String,System.Object,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
    name: SendRequestObjectWithStream
    nameWithType: AgentBase.SendRequestObjectWithStream
    fullName: SuperOffice.WebApi.Agents.AgentBase.SendRequestObjectWithStream
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.WebApiOptions
    name: WebApiOptions
    nameWithType: WebApiOptions
    fullName: SuperOffice.WebApi.WebApiOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.SendRequest(System.Net.Http.HttpRequestMessage,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.SendRequest(System.Net.Http.HttpRequestMessage,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: SendRequest(HttpRequestMessage, RequestOptions)
  nameWithType: AgentBase.SendRequest(HttpRequestMessage, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AgentBase.SendRequest(System.Net.Http.HttpRequestMessage, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.SendRequest(System.Net.Http.HttpRequestMessage,SuperOffice.WebApi.RequestOptions)
    name: SendRequest
    nameWithType: AgentBase.SendRequest
    fullName: SuperOffice.WebApi.Agents.AgentBase.SendRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.SendRequest(System.Net.Http.HttpRequestMessage,SuperOffice.WebApi.RequestOptions)
    name: SendRequest
    nameWithType: AgentBase.SendRequest
    fullName: SuperOffice.WebApi.Agents.AgentBase.SendRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: ThrowOnResponseError(HttpRequestMessage, HttpResponseMessage)
  nameWithType: AgentBase.ThrowOnResponseError(HttpRequestMessage, HttpResponseMessage)
  fullName: SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError(System.Net.Http.HttpRequestMessage, System.Net.Http.HttpResponseMessage)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage)
    name: ThrowOnResponseError
    nameWithType: AgentBase.ThrowOnResponseError
    fullName: SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage)
    name: ThrowOnResponseError
    nameWithType: AgentBase.ThrowOnResponseError
    fullName: SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.ParseResponse``1(System.Net.Http.HttpResponseMessage)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.ParseResponse``1(System.Net.Http.HttpResponseMessage)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: ParseResponse<T>(HttpResponseMessage)
  nameWithType: AgentBase.ParseResponse<T>(HttpResponseMessage)
  fullName: SuperOffice.WebApi.Agents.AgentBase.ParseResponse<T>(System.Net.Http.HttpResponseMessage)
  nameWithType.vb: AgentBase.ParseResponse(Of T)(HttpResponseMessage)
  fullName.vb: SuperOffice.WebApi.Agents.AgentBase.ParseResponse(Of T)(System.Net.Http.HttpResponseMessage)
  name.vb: ParseResponse(Of T)(HttpResponseMessage)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.ParseResponse``1(System.Net.Http.HttpResponseMessage)
    name: ParseResponse<T>
    nameWithType: AgentBase.ParseResponse<T>
    fullName: SuperOffice.WebApi.Agents.AgentBase.ParseResponse<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.ParseResponse``1(System.Net.Http.HttpResponseMessage)
    name: ParseResponse(Of T)
    nameWithType: AgentBase.ParseResponse(Of T)
    fullName: SuperOffice.WebApi.Agents.AgentBase.ParseResponse(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.Finally(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.Finally(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: Finally(RequestOptions)
  nameWithType: AgentBase.Finally(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AgentBase.Finally(SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.Finally(SuperOffice.WebApi.RequestOptions)
    name: Finally
    nameWithType: AgentBase.Finally
    fullName: SuperOffice.WebApi.Agents.AgentBase.Finally
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.Finally(SuperOffice.WebApi.RequestOptions)
    name: Finally
    nameWithType: AgentBase.Finally
    fullName: SuperOffice.WebApi.Agents.AgentBase.Finally
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.Dispose
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.Dispose
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: Dispose()
  nameWithType: AgentBase.Dispose()
  fullName: SuperOffice.WebApi.Agents.AgentBase.Dispose()
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.Dispose
    name: Dispose
    nameWithType: AgentBase.Dispose
    fullName: SuperOffice.WebApi.Agents.AgentBase.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.Dispose
    name: Dispose
    nameWithType: AgentBase.Dispose
    fullName: SuperOffice.WebApi.Agents.AgentBase.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.Configuration
  commentId: P:SuperOffice.WebApi.Agents.AgentBase.Configuration
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: Configuration
  nameWithType: AgentBase.Configuration
  fullName: SuperOffice.WebApi.Agents.AgentBase.Configuration
- uid: SuperOffice.WebApi.Agents.AgentBase.Client
  commentId: P:SuperOffice.WebApi.Agents.AgentBase.Client
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: Client
  nameWithType: AgentBase.Client
  fullName: SuperOffice.WebApi.Agents.AgentBase.Client
- uid: SuperOffice.WebApi.Agents.AgentBase.HasRunningRequest
  commentId: P:SuperOffice.WebApi.Agents.AgentBase.HasRunningRequest
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: HasRunningRequest
  nameWithType: AgentBase.HasRunningRequest
  fullName: SuperOffice.WebApi.Agents.AgentBase.HasRunningRequest
- uid: SuperOffice.WebApi.Agents.AgentBase.ClientCancellationTokenSource
  commentId: P:SuperOffice.WebApi.Agents.AgentBase.ClientCancellationTokenSource
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: ClientCancellationTokenSource
  nameWithType: AgentBase.ClientCancellationTokenSource
  fullName: SuperOffice.WebApi.Agents.AgentBase.ClientCancellationTokenSource
- uid: SuperOffice.WebApi.Agents.AgentBase.ProgressListener
  commentId: P:SuperOffice.WebApi.Agents.AgentBase.ProgressListener
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: ProgressListener
  nameWithType: AgentBase.ProgressListener
  fullName: SuperOffice.WebApi.Agents.AgentBase.ProgressListener
- uid: SuperOffice.WebApi.Agents.AgentBase.UploadProgressListener
  commentId: P:SuperOffice.WebApi.Agents.AgentBase.UploadProgressListener
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: UploadProgressListener
  nameWithType: AgentBase.UploadProgressListener
  fullName: SuperOffice.WebApi.Agents.AgentBase.UploadProgressListener
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.#ctor*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.#ctor
  isExternal: true
  name: AppointmentAgent
  nameWithType: AppointmentAgent.AppointmentAgent
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.AppointmentAgent
- uid: System.Net.Http.HttpClient
  isExternal: true
  name: HttpClient
  nameWithType: HttpClient
  fullName: System.Net.Http.HttpClient
- uid: SuperOffice.WebApi.WebApiOptions
  commentId: T:SuperOffice.WebApi.WebApiOptions
  parent: SuperOffice.WebApi
  isExternal: true
  name: WebApiOptions
  nameWithType: WebApiOptions
  fullName: SuperOffice.WebApi.WebApiOptions
- uid: SuperOffice.WebApi
  commentId: N:SuperOffice.WebApi
  isExternal: true
  name: SuperOffice.WebApi
  nameWithType: SuperOffice.WebApi
  fullName: SuperOffice.WebApi
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultAppointmentEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultAppointmentEntityAsync
  isExternal: true
  name: CreateDefaultAppointmentEntityAsync
  nameWithType: AppointmentAgent.CreateDefaultAppointmentEntityAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultAppointmentEntityAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: CreateDefaultAppointmentEntityAsync(RequestOptions)
  nameWithType: IAppointmentAgent.CreateDefaultAppointmentEntityAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityAsync(SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityAsync(SuperOffice.WebApi.RequestOptions)
    name: CreateDefaultAppointmentEntityAsync
    nameWithType: IAppointmentAgent.CreateDefaultAppointmentEntityAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityAsync(SuperOffice.WebApi.RequestOptions)
    name: CreateDefaultAppointmentEntityAsync
    nameWithType: IAppointmentAgent.CreateDefaultAppointmentEntityAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.RequestOptions
  commentId: T:SuperOffice.WebApi.RequestOptions
  parent: SuperOffice.WebApi
  isExternal: true
  name: RequestOptions
  nameWithType: RequestOptions
  fullName: SuperOffice.WebApi.RequestOptions
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentEntity}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentEntity}'
  definition: System.Threading.Tasks.Task`1
  name: Task<AppointmentEntity>
  nameWithType: Task<AppointmentEntity>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.AppointmentEntity>
  nameWithType.vb: Task(Of AppointmentEntity)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.AppointmentEntity)
  name.vb: Task(Of AppointmentEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.AppointmentEntity
    name: AppointmentEntity
    nameWithType: AppointmentEntity
    fullName: SuperOffice.WebApi.Data.AppointmentEntity
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.AppointmentEntity
    name: AppointmentEntity
    nameWithType: AppointmentEntity
    fullName: SuperOffice.WebApi.Data.AppointmentEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.SaveAppointmentEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.SaveAppointmentEntityAsync
  isExternal: true
  name: SaveAppointmentEntityAsync
  nameWithType: AppointmentAgent.SaveAppointmentEntityAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.SaveAppointmentEntityAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveAppointmentEntityAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.SaveAppointmentEntityAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: SaveAppointmentEntityAsync(AppointmentEntity, RequestOptions)
  nameWithType: IAppointmentAgent.SaveAppointmentEntityAsync(AppointmentEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveAppointmentEntityAsync(SuperOffice.WebApi.Data.AppointmentEntity, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveAppointmentEntityAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
    name: SaveAppointmentEntityAsync
    nameWithType: IAppointmentAgent.SaveAppointmentEntityAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveAppointmentEntityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.Data.AppointmentEntity
    name: AppointmentEntity
    nameWithType: AppointmentEntity
    fullName: SuperOffice.WebApi.Data.AppointmentEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveAppointmentEntityAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
    name: SaveAppointmentEntityAsync
    nameWithType: IAppointmentAgent.SaveAppointmentEntityAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveAppointmentEntityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.Data.AppointmentEntity
    name: AppointmentEntity
    nameWithType: AppointmentEntity
    fullName: SuperOffice.WebApi.Data.AppointmentEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Data.AppointmentEntity
  commentId: T:SuperOffice.WebApi.Data.AppointmentEntity
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: AppointmentEntity
  nameWithType: AppointmentEntity
  fullName: SuperOffice.WebApi.Data.AppointmentEntity
- uid: SuperOffice.WebApi.Data
  commentId: N:SuperOffice.WebApi.Data
  isExternal: true
  name: SuperOffice.WebApi.Data
  nameWithType: SuperOffice.WebApi.Data
  fullName: SuperOffice.WebApi.Data
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.DeleteAppointmentEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.DeleteAppointmentEntityAsync
  isExternal: true
  name: DeleteAppointmentEntityAsync
  nameWithType: AppointmentAgent.DeleteAppointmentEntityAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.DeleteAppointmentEntityAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.DeleteAppointmentEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.DeleteAppointmentEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: DeleteAppointmentEntityAsync(Int32, RequestOptions)
  nameWithType: IAppointmentAgent.DeleteAppointmentEntityAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.DeleteAppointmentEntityAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.DeleteAppointmentEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: DeleteAppointmentEntityAsync
    nameWithType: IAppointmentAgent.DeleteAppointmentEntityAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.DeleteAppointmentEntityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.DeleteAppointmentEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: DeleteAppointmentEntityAsync
    nameWithType: IAppointmentAgent.DeleteAppointmentEntityAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.DeleteAppointmentEntityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultSuggestedAppointmentEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultSuggestedAppointmentEntityAsync
  isExternal: true
  name: CreateDefaultSuggestedAppointmentEntityAsync
  nameWithType: AppointmentAgent.CreateDefaultSuggestedAppointmentEntityAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultSuggestedAppointmentEntityAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultSuggestedAppointmentEntityAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultSuggestedAppointmentEntityAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: CreateDefaultSuggestedAppointmentEntityAsync(RequestOptions)
  nameWithType: IAppointmentAgent.CreateDefaultSuggestedAppointmentEntityAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultSuggestedAppointmentEntityAsync(SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultSuggestedAppointmentEntityAsync(SuperOffice.WebApi.RequestOptions)
    name: CreateDefaultSuggestedAppointmentEntityAsync
    nameWithType: IAppointmentAgent.CreateDefaultSuggestedAppointmentEntityAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultSuggestedAppointmentEntityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultSuggestedAppointmentEntityAsync(SuperOffice.WebApi.RequestOptions)
    name: CreateDefaultSuggestedAppointmentEntityAsync
    nameWithType: IAppointmentAgent.CreateDefaultSuggestedAppointmentEntityAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultSuggestedAppointmentEntityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SuggestedAppointmentEntity}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SuggestedAppointmentEntity}'
  definition: System.Threading.Tasks.Task`1
  name: Task<SuggestedAppointmentEntity>
  nameWithType: Task<SuggestedAppointmentEntity>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.SuggestedAppointmentEntity>
  nameWithType.vb: Task(Of SuggestedAppointmentEntity)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.SuggestedAppointmentEntity)
  name.vb: Task(Of SuggestedAppointmentEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.SuggestedAppointmentEntity
    name: SuggestedAppointmentEntity
    nameWithType: SuggestedAppointmentEntity
    fullName: SuperOffice.WebApi.Data.SuggestedAppointmentEntity
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.SuggestedAppointmentEntity
    name: SuggestedAppointmentEntity
    nameWithType: SuggestedAppointmentEntity
    fullName: SuperOffice.WebApi.Data.SuggestedAppointmentEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.SaveSuggestedAppointmentEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.SaveSuggestedAppointmentEntityAsync
  isExternal: true
  name: SaveSuggestedAppointmentEntityAsync
  nameWithType: AppointmentAgent.SaveSuggestedAppointmentEntityAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.SaveSuggestedAppointmentEntityAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveSuggestedAppointmentEntityAsync(SuperOffice.WebApi.Data.SuggestedAppointmentEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.SaveSuggestedAppointmentEntityAsync(SuperOffice.WebApi.Data.SuggestedAppointmentEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: SaveSuggestedAppointmentEntityAsync(SuggestedAppointmentEntity, RequestOptions)
  nameWithType: IAppointmentAgent.SaveSuggestedAppointmentEntityAsync(SuggestedAppointmentEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveSuggestedAppointmentEntityAsync(SuperOffice.WebApi.Data.SuggestedAppointmentEntity, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveSuggestedAppointmentEntityAsync(SuperOffice.WebApi.Data.SuggestedAppointmentEntity,SuperOffice.WebApi.RequestOptions)
    name: SaveSuggestedAppointmentEntityAsync
    nameWithType: IAppointmentAgent.SaveSuggestedAppointmentEntityAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveSuggestedAppointmentEntityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.Data.SuggestedAppointmentEntity
    name: SuggestedAppointmentEntity
    nameWithType: SuggestedAppointmentEntity
    fullName: SuperOffice.WebApi.Data.SuggestedAppointmentEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveSuggestedAppointmentEntityAsync(SuperOffice.WebApi.Data.SuggestedAppointmentEntity,SuperOffice.WebApi.RequestOptions)
    name: SaveSuggestedAppointmentEntityAsync
    nameWithType: IAppointmentAgent.SaveSuggestedAppointmentEntityAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveSuggestedAppointmentEntityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.Data.SuggestedAppointmentEntity
    name: SuggestedAppointmentEntity
    nameWithType: SuggestedAppointmentEntity
    fullName: SuperOffice.WebApi.Data.SuggestedAppointmentEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Data.SuggestedAppointmentEntity
  commentId: T:SuperOffice.WebApi.Data.SuggestedAppointmentEntity
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: SuggestedAppointmentEntity
  nameWithType: SuggestedAppointmentEntity
  fullName: SuperOffice.WebApi.Data.SuggestedAppointmentEntity
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultTaskListItemAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultTaskListItemAsync
  isExternal: true
  name: CreateDefaultTaskListItemAsync
  nameWithType: AppointmentAgent.CreateDefaultTaskListItemAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultTaskListItemAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultTaskListItemAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultTaskListItemAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: CreateDefaultTaskListItemAsync(RequestOptions)
  nameWithType: IAppointmentAgent.CreateDefaultTaskListItemAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultTaskListItemAsync(SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultTaskListItemAsync(SuperOffice.WebApi.RequestOptions)
    name: CreateDefaultTaskListItemAsync
    nameWithType: IAppointmentAgent.CreateDefaultTaskListItemAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultTaskListItemAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultTaskListItemAsync(SuperOffice.WebApi.RequestOptions)
    name: CreateDefaultTaskListItemAsync
    nameWithType: IAppointmentAgent.CreateDefaultTaskListItemAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultTaskListItemAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TaskListItem}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TaskListItem}'
  definition: System.Threading.Tasks.Task`1
  name: Task<TaskListItem>
  nameWithType: Task<TaskListItem>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.TaskListItem>
  nameWithType.vb: Task(Of TaskListItem)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.TaskListItem)
  name.vb: Task(Of TaskListItem)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.TaskListItem
    name: TaskListItem
    nameWithType: TaskListItem
    fullName: SuperOffice.WebApi.Data.TaskListItem
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.TaskListItem
    name: TaskListItem
    nameWithType: TaskListItem
    fullName: SuperOffice.WebApi.Data.TaskListItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.SaveTaskListItemAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.SaveTaskListItemAsync
  isExternal: true
  name: SaveTaskListItemAsync
  nameWithType: AppointmentAgent.SaveTaskListItemAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.SaveTaskListItemAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveTaskListItemAsync(SuperOffice.WebApi.Data.TaskListItem,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.SaveTaskListItemAsync(SuperOffice.WebApi.Data.TaskListItem,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: SaveTaskListItemAsync(TaskListItem, RequestOptions)
  nameWithType: IAppointmentAgent.SaveTaskListItemAsync(TaskListItem, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveTaskListItemAsync(SuperOffice.WebApi.Data.TaskListItem, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveTaskListItemAsync(SuperOffice.WebApi.Data.TaskListItem,SuperOffice.WebApi.RequestOptions)
    name: SaveTaskListItemAsync
    nameWithType: IAppointmentAgent.SaveTaskListItemAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveTaskListItemAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.Data.TaskListItem
    name: TaskListItem
    nameWithType: TaskListItem
    fullName: SuperOffice.WebApi.Data.TaskListItem
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveTaskListItemAsync(SuperOffice.WebApi.Data.TaskListItem,SuperOffice.WebApi.RequestOptions)
    name: SaveTaskListItemAsync
    nameWithType: IAppointmentAgent.SaveTaskListItemAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveTaskListItemAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.Data.TaskListItem
    name: TaskListItem
    nameWithType: TaskListItem
    fullName: SuperOffice.WebApi.Data.TaskListItem
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Data.TaskListItem
  commentId: T:SuperOffice.WebApi.Data.TaskListItem
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: TaskListItem
  nameWithType: TaskListItem
  fullName: SuperOffice.WebApi.Data.TaskListItem
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentAsync
  isExternal: true
  name: GetAppointmentAsync
  nameWithType: AppointmentAgent.GetAppointmentAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetAppointmentAsync(Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetAppointmentAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetAppointmentAsync
    nameWithType: IAppointmentAgent.GetAppointmentAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetAppointmentAsync
    nameWithType: IAppointmentAgent.GetAppointmentAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Appointment>
  nameWithType: Task<Appointment>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.Appointment>
  nameWithType.vb: Task(Of Appointment)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.Appointment)
  name.vb: Task(Of Appointment)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.Appointment
    name: Appointment
    nameWithType: Appointment
    fullName: SuperOffice.WebApi.Data.Appointment
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.Appointment
    name: Appointment
    nameWithType: Appointment
    fullName: SuperOffice.WebApi.Data.Appointment
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.ToggleAppointmentStatusAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.ToggleAppointmentStatusAsync
  isExternal: true
  name: ToggleAppointmentStatusAsync
  nameWithType: AppointmentAgent.ToggleAppointmentStatusAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.ToggleAppointmentStatusAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleAppointmentStatusAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleAppointmentStatusAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: ToggleAppointmentStatusAsync(Int32, RequestOptions)
  nameWithType: IAppointmentAgent.ToggleAppointmentStatusAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleAppointmentStatusAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleAppointmentStatusAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: ToggleAppointmentStatusAsync
    nameWithType: IAppointmentAgent.ToggleAppointmentStatusAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleAppointmentStatusAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleAppointmentStatusAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: ToggleAppointmentStatusAsync
    nameWithType: IAppointmentAgent.ToggleAppointmentStatusAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleAppointmentStatusAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentStatus}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentStatus}'
  definition: System.Threading.Tasks.Task`1
  name: Task<AppointmentStatus>
  nameWithType: Task<AppointmentStatus>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.AppointmentStatus>
  nameWithType.vb: Task(Of AppointmentStatus)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.AppointmentStatus)
  name.vb: Task(Of AppointmentStatus)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.AppointmentStatus
    name: AppointmentStatus
    nameWithType: AppointmentStatus
    fullName: SuperOffice.WebApi.Data.AppointmentStatus
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.AppointmentStatus
    name: AppointmentStatus
    nameWithType: AppointmentStatus
    fullName: SuperOffice.WebApi.Data.AppointmentStatus
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.ToggleActivityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.ToggleActivityAsync
  isExternal: true
  name: ToggleActivityAsync
  nameWithType: AppointmentAgent.ToggleActivityAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.ToggleActivityAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleActivityAsync(System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleActivityAsync(System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: ToggleActivityAsync(String, RequestOptions)
  nameWithType: IAppointmentAgent.ToggleActivityAsync(String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleActivityAsync(System.String, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleActivityAsync(System.String,SuperOffice.WebApi.RequestOptions)
    name: ToggleActivityAsync
    nameWithType: IAppointmentAgent.ToggleActivityAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleActivityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleActivityAsync(System.String,SuperOffice.WebApi.RequestOptions)
    name: ToggleActivityAsync
    nameWithType: IAppointmentAgent.ToggleActivityAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleActivityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ActivityStatus}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ActivityStatus}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ActivityStatus>
  nameWithType: Task<ActivityStatus>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.ActivityStatus>
  nameWithType.vb: Task(Of ActivityStatus)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.ActivityStatus)
  name.vb: Task(Of ActivityStatus)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.ActivityStatus
    name: ActivityStatus
    nameWithType: ActivityStatus
    fullName: SuperOffice.WebApi.Data.ActivityStatus
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.ActivityStatus
    name: ActivityStatus
    nameWithType: ActivityStatus
    fullName: SuperOffice.WebApi.Data.ActivityStatus
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.ToggleActivitiesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.ToggleActivitiesAsync
  isExternal: true
  name: ToggleActivitiesAsync
  nameWithType: AppointmentAgent.ToggleActivitiesAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.ToggleActivitiesAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleActivitiesAsync(System.String[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleActivitiesAsync(System.String[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: ToggleActivitiesAsync(String[], RequestOptions)
  nameWithType: IAppointmentAgent.ToggleActivitiesAsync(String[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleActivitiesAsync(System.String[], SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: IAppointmentAgent.ToggleActivitiesAsync(String(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleActivitiesAsync(System.String(), SuperOffice.WebApi.RequestOptions)
  name.vb: ToggleActivitiesAsync(String(), RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleActivitiesAsync(System.String[],SuperOffice.WebApi.RequestOptions)
    name: ToggleActivitiesAsync
    nameWithType: IAppointmentAgent.ToggleActivitiesAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleActivitiesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleActivitiesAsync(System.String[],SuperOffice.WebApi.RequestOptions)
    name: ToggleActivitiesAsync
    nameWithType: IAppointmentAgent.ToggleActivitiesAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleActivitiesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.SetActivityStatusAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.SetActivityStatusAsync
  isExternal: true
  name: SetActivityStatusAsync
  nameWithType: AppointmentAgent.SetActivityStatusAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.SetActivityStatusAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.SetActivityStatusAsync(System.String[],SuperOffice.WebApi.Data.ActivityStatus,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.SetActivityStatusAsync(System.String[],SuperOffice.WebApi.Data.ActivityStatus,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: SetActivityStatusAsync(String[], ActivityStatus, RequestOptions)
  nameWithType: IAppointmentAgent.SetActivityStatusAsync(String[], ActivityStatus, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.SetActivityStatusAsync(System.String[], SuperOffice.WebApi.Data.ActivityStatus, SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: IAppointmentAgent.SetActivityStatusAsync(String(), ActivityStatus, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IAppointmentAgent.SetActivityStatusAsync(System.String(), SuperOffice.WebApi.Data.ActivityStatus, SuperOffice.WebApi.RequestOptions)
  name.vb: SetActivityStatusAsync(String(), ActivityStatus, RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.SetActivityStatusAsync(System.String[],SuperOffice.WebApi.Data.ActivityStatus,SuperOffice.WebApi.RequestOptions)
    name: SetActivityStatusAsync
    nameWithType: IAppointmentAgent.SetActivityStatusAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.SetActivityStatusAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.ActivityStatus
    name: ActivityStatus
    nameWithType: ActivityStatus
    fullName: SuperOffice.WebApi.Data.ActivityStatus
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.SetActivityStatusAsync(System.String[],SuperOffice.WebApi.Data.ActivityStatus,SuperOffice.WebApi.RequestOptions)
    name: SetActivityStatusAsync
    nameWithType: IAppointmentAgent.SetActivityStatusAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.SetActivityStatusAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.ActivityStatus
    name: ActivityStatus
    nameWithType: ActivityStatus
    fullName: SuperOffice.WebApi.Data.ActivityStatus
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Data.ActivityStatus
  commentId: T:SuperOffice.WebApi.Data.ActivityStatus
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: ActivityStatus
  nameWithType: ActivityStatus
  fullName: SuperOffice.WebApi.Data.ActivityStatus
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.ToggleAndSetActivitiesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.ToggleAndSetActivitiesAsync
  isExternal: true
  name: ToggleAndSetActivitiesAsync
  nameWithType: AppointmentAgent.ToggleAndSetActivitiesAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.ToggleAndSetActivitiesAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleAndSetActivitiesAsync(System.String[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleAndSetActivitiesAsync(System.String[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: ToggleAndSetActivitiesAsync(String[], RequestOptions)
  nameWithType: IAppointmentAgent.ToggleAndSetActivitiesAsync(String[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleAndSetActivitiesAsync(System.String[], SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: IAppointmentAgent.ToggleAndSetActivitiesAsync(String(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleAndSetActivitiesAsync(System.String(), SuperOffice.WebApi.RequestOptions)
  name.vb: ToggleAndSetActivitiesAsync(String(), RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleAndSetActivitiesAsync(System.String[],SuperOffice.WebApi.RequestOptions)
    name: ToggleAndSetActivitiesAsync
    nameWithType: IAppointmentAgent.ToggleAndSetActivitiesAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleAndSetActivitiesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleAndSetActivitiesAsync(System.String[],SuperOffice.WebApi.RequestOptions)
    name: ToggleAndSetActivitiesAsync
    nameWithType: IAppointmentAgent.ToggleAndSetActivitiesAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.ToggleAndSetActivitiesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.String[]}
  commentId: '!:System.Threading.Tasks.Task{System.String[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<String[]>
  nameWithType: Task<String[]>
  fullName: System.Threading.Tasks.Task<System.String[]>
  nameWithType.vb: Task(Of String())
  fullName.vb: System.Threading.Tasks.Task(Of System.String())
  name.vb: Task(Of String())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentEntityAsync
  isExternal: true
  name: GetAppointmentEntityAsync
  nameWithType: AppointmentAgent.GetAppointmentEntityAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentEntityAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetAppointmentEntityAsync(Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetAppointmentEntityAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentEntityAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetAppointmentEntityAsync
    nameWithType: IAppointmentAgent.GetAppointmentEntityAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentEntityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetAppointmentEntityAsync
    nameWithType: IAppointmentAgent.GetAppointmentEntityAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentEntityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultAppointmentEntityByTypeAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultAppointmentEntityByTypeAsync
  isExternal: true
  name: CreateDefaultAppointmentEntityByTypeAsync
  nameWithType: AppointmentAgent.CreateDefaultAppointmentEntityByTypeAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultAppointmentEntityByTypeAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAsync(SuperOffice.WebApi.Data.TaskType,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAsync(SuperOffice.WebApi.Data.TaskType,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: CreateDefaultAppointmentEntityByTypeAsync(TaskType, RequestOptions)
  nameWithType: IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAsync(TaskType, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAsync(SuperOffice.WebApi.Data.TaskType, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAsync(SuperOffice.WebApi.Data.TaskType,SuperOffice.WebApi.RequestOptions)
    name: CreateDefaultAppointmentEntityByTypeAsync
    nameWithType: IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.Data.TaskType
    name: TaskType
    nameWithType: TaskType
    fullName: SuperOffice.WebApi.Data.TaskType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAsync(SuperOffice.WebApi.Data.TaskType,SuperOffice.WebApi.RequestOptions)
    name: CreateDefaultAppointmentEntityByTypeAsync
    nameWithType: IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.Data.TaskType
    name: TaskType
    nameWithType: TaskType
    fullName: SuperOffice.WebApi.Data.TaskType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Data.TaskType
  commentId: T:SuperOffice.WebApi.Data.TaskType
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: TaskType
  nameWithType: TaskType
  fullName: SuperOffice.WebApi.Data.TaskType
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.CreateAppointmentEntityFromExistingAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.CreateAppointmentEntityFromExistingAsync
  isExternal: true
  name: CreateAppointmentEntityFromExistingAsync
  nameWithType: AppointmentAgent.CreateAppointmentEntityFromExistingAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.CreateAppointmentEntityFromExistingAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAppointmentEntityFromExistingAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAppointmentEntityFromExistingAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: CreateAppointmentEntityFromExistingAsync(Int32, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.CreateAppointmentEntityFromExistingAsync(Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAppointmentEntityFromExistingAsync(System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAppointmentEntityFromExistingAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: CreateAppointmentEntityFromExistingAsync
    nameWithType: IAppointmentAgent.CreateAppointmentEntityFromExistingAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAppointmentEntityFromExistingAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAppointmentEntityFromExistingAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: CreateAppointmentEntityFromExistingAsync
    nameWithType: IAppointmentAgent.CreateAppointmentEntityFromExistingAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAppointmentEntityFromExistingAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.AcceptAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.AcceptAsync
  isExternal: true
  name: AcceptAsync
  nameWithType: AppointmentAgent.AcceptAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.AcceptAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: AcceptAsync(Int32, RecurrenceUpdateMode, RequestOptions)
  nameWithType: IAppointmentAgent.AcceptAsync(Int32, RecurrenceUpdateMode, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptAsync(System.Int32, SuperOffice.WebApi.Data.RecurrenceUpdateMode, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
    name: AcceptAsync
    nameWithType: IAppointmentAgent.AcceptAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    name: RecurrenceUpdateMode
    nameWithType: RecurrenceUpdateMode
    fullName: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
    name: AcceptAsync
    nameWithType: IAppointmentAgent.AcceptAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    name: RecurrenceUpdateMode
    nameWithType: RecurrenceUpdateMode
    fullName: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Data.RecurrenceUpdateMode
  commentId: T:SuperOffice.WebApi.Data.RecurrenceUpdateMode
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: RecurrenceUpdateMode
  nameWithType: RecurrenceUpdateMode
  fullName: SuperOffice.WebApi.Data.RecurrenceUpdateMode
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.CreateAndAcceptAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.CreateAndAcceptAsync
  isExternal: true
  name: CreateAndAcceptAsync
  nameWithType: AppointmentAgent.CreateAndAcceptAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.CreateAndAcceptAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAndAcceptAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAndAcceptAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: CreateAndAcceptAsync(Int32, RecurrenceUpdateMode, RequestOptions)
  nameWithType: IAppointmentAgent.CreateAndAcceptAsync(Int32, RecurrenceUpdateMode, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAndAcceptAsync(System.Int32, SuperOffice.WebApi.Data.RecurrenceUpdateMode, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAndAcceptAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
    name: CreateAndAcceptAsync
    nameWithType: IAppointmentAgent.CreateAndAcceptAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAndAcceptAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    name: RecurrenceUpdateMode
    nameWithType: RecurrenceUpdateMode
    fullName: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAndAcceptAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
    name: CreateAndAcceptAsync
    nameWithType: IAppointmentAgent.CreateAndAcceptAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAndAcceptAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    name: RecurrenceUpdateMode
    nameWithType: RecurrenceUpdateMode
    fullName: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.AcceptWithEmailConfirmationAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.AcceptWithEmailConfirmationAsync
  isExternal: true
  name: AcceptWithEmailConfirmationAsync
  nameWithType: AppointmentAgent.AcceptWithEmailConfirmationAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.AcceptWithEmailConfirmationAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptWithEmailConfirmationAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptWithEmailConfirmationAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: AcceptWithEmailConfirmationAsync(Int32, RecurrenceUpdateMode, RequestOptions)
  nameWithType: IAppointmentAgent.AcceptWithEmailConfirmationAsync(Int32, RecurrenceUpdateMode, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptWithEmailConfirmationAsync(System.Int32, SuperOffice.WebApi.Data.RecurrenceUpdateMode, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptWithEmailConfirmationAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
    name: AcceptWithEmailConfirmationAsync
    nameWithType: IAppointmentAgent.AcceptWithEmailConfirmationAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptWithEmailConfirmationAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    name: RecurrenceUpdateMode
    nameWithType: RecurrenceUpdateMode
    fullName: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptWithEmailConfirmationAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
    name: AcceptWithEmailConfirmationAsync
    nameWithType: IAppointmentAgent.AcceptWithEmailConfirmationAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptWithEmailConfirmationAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    name: RecurrenceUpdateMode
    nameWithType: RecurrenceUpdateMode
    fullName: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.CreateAndAcceptWithEmailConfirmationAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.CreateAndAcceptWithEmailConfirmationAsync
  isExternal: true
  name: CreateAndAcceptWithEmailConfirmationAsync
  nameWithType: AppointmentAgent.CreateAndAcceptWithEmailConfirmationAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.CreateAndAcceptWithEmailConfirmationAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAndAcceptWithEmailConfirmationAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAndAcceptWithEmailConfirmationAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: CreateAndAcceptWithEmailConfirmationAsync(Int32, RecurrenceUpdateMode, RequestOptions)
  nameWithType: IAppointmentAgent.CreateAndAcceptWithEmailConfirmationAsync(Int32, RecurrenceUpdateMode, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAndAcceptWithEmailConfirmationAsync(System.Int32, SuperOffice.WebApi.Data.RecurrenceUpdateMode, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAndAcceptWithEmailConfirmationAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
    name: CreateAndAcceptWithEmailConfirmationAsync
    nameWithType: IAppointmentAgent.CreateAndAcceptWithEmailConfirmationAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAndAcceptWithEmailConfirmationAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    name: RecurrenceUpdateMode
    nameWithType: RecurrenceUpdateMode
    fullName: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAndAcceptWithEmailConfirmationAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
    name: CreateAndAcceptWithEmailConfirmationAsync
    nameWithType: IAppointmentAgent.CreateAndAcceptWithEmailConfirmationAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAndAcceptWithEmailConfirmationAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    name: RecurrenceUpdateMode
    nameWithType: RecurrenceUpdateMode
    fullName: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.RejectAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.RejectAsync
  isExternal: true
  name: RejectAsync
  nameWithType: AppointmentAgent.RejectAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.RejectAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.RejectAsync(System.Int32,System.String,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.RejectAsync(System.Int32,System.String,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: RejectAsync(Int32, String, RecurrenceUpdateMode, RequestOptions)
  nameWithType: IAppointmentAgent.RejectAsync(Int32, String, RecurrenceUpdateMode, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.RejectAsync(System.Int32, System.String, SuperOffice.WebApi.Data.RecurrenceUpdateMode, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.RejectAsync(System.Int32,System.String,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
    name: RejectAsync
    nameWithType: IAppointmentAgent.RejectAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.RejectAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    name: RecurrenceUpdateMode
    nameWithType: RecurrenceUpdateMode
    fullName: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.RejectAsync(System.Int32,System.String,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
    name: RejectAsync
    nameWithType: IAppointmentAgent.RejectAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.RejectAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    name: RecurrenceUpdateMode
    nameWithType: RecurrenceUpdateMode
    fullName: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.RejectWithEmailConfirmationAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.RejectWithEmailConfirmationAsync
  isExternal: true
  name: RejectWithEmailConfirmationAsync
  nameWithType: AppointmentAgent.RejectWithEmailConfirmationAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.RejectWithEmailConfirmationAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.RejectWithEmailConfirmationAsync(System.Int32,System.String,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.RejectWithEmailConfirmationAsync(System.Int32,System.String,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: RejectWithEmailConfirmationAsync(Int32, String, RecurrenceUpdateMode, RequestOptions)
  nameWithType: IAppointmentAgent.RejectWithEmailConfirmationAsync(Int32, String, RecurrenceUpdateMode, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.RejectWithEmailConfirmationAsync(System.Int32, System.String, SuperOffice.WebApi.Data.RecurrenceUpdateMode, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.RejectWithEmailConfirmationAsync(System.Int32,System.String,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
    name: RejectWithEmailConfirmationAsync
    nameWithType: IAppointmentAgent.RejectWithEmailConfirmationAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.RejectWithEmailConfirmationAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    name: RecurrenceUpdateMode
    nameWithType: RecurrenceUpdateMode
    fullName: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.RejectWithEmailConfirmationAsync(System.Int32,System.String,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
    name: RejectWithEmailConfirmationAsync
    nameWithType: IAppointmentAgent.RejectWithEmailConfirmationAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.RejectWithEmailConfirmationAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    name: RecurrenceUpdateMode
    nameWithType: RecurrenceUpdateMode
    fullName: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.DeclineInvitationFromEmailItemAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.DeclineInvitationFromEmailItemAsync
  isExternal: true
  name: DeclineInvitationFromEmailItemAsync
  nameWithType: AppointmentAgent.DeclineInvitationFromEmailItemAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.DeclineInvitationFromEmailItemAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.DeclineInvitationFromEmailItemAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.DeclineInvitationFromEmailItemAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: DeclineInvitationFromEmailItemAsync(Int32, String, RequestOptions)
  nameWithType: IAppointmentAgent.DeclineInvitationFromEmailItemAsync(Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.DeclineInvitationFromEmailItemAsync(System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.DeclineInvitationFromEmailItemAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
    name: DeclineInvitationFromEmailItemAsync
    nameWithType: IAppointmentAgent.DeclineInvitationFromEmailItemAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.DeclineInvitationFromEmailItemAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.DeclineInvitationFromEmailItemAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
    name: DeclineInvitationFromEmailItemAsync
    nameWithType: IAppointmentAgent.DeclineInvitationFromEmailItemAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.DeclineInvitationFromEmailItemAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetOrganizerNameAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetOrganizerNameAsync
  isExternal: true
  name: GetOrganizerNameAsync
  nameWithType: AppointmentAgent.GetOrganizerNameAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetOrganizerNameAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetOrganizerNameAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetOrganizerNameAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetOrganizerNameAsync(Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetOrganizerNameAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetOrganizerNameAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetOrganizerNameAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetOrganizerNameAsync
    nameWithType: IAppointmentAgent.GetOrganizerNameAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetOrganizerNameAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetOrganizerNameAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetOrganizerNameAsync
    nameWithType: IAppointmentAgent.GetOrganizerNameAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetOrganizerNameAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.String}
  commentId: '!:System.Threading.Tasks.Task{System.String}'
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.SaveAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.SaveAsync
  isExternal: true
  name: SaveAsync
  nameWithType: AppointmentAgent.SaveAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.SaveAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.SaveAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: SaveAsync(AppointmentEntity, RecurrenceUpdateMode, Boolean, EMailConnectionInfo, EMailConnectionInfo, RequestOptions)
  nameWithType: IAppointmentAgent.SaveAsync(AppointmentEntity, RecurrenceUpdateMode, Boolean, EMailConnectionInfo, EMailConnectionInfo, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveAsync(SuperOffice.WebApi.Data.AppointmentEntity, SuperOffice.WebApi.Data.RecurrenceUpdateMode, System.Boolean, SuperOffice.WebApi.Data.EMailConnectionInfo, SuperOffice.WebApi.Data.EMailConnectionInfo, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
    name: SaveAsync
    nameWithType: IAppointmentAgent.SaveAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.Data.AppointmentEntity
    name: AppointmentEntity
    nameWithType: AppointmentEntity
    fullName: SuperOffice.WebApi.Data.AppointmentEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    name: RecurrenceUpdateMode
    nameWithType: RecurrenceUpdateMode
    fullName: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.EMailConnectionInfo
    name: EMailConnectionInfo
    nameWithType: EMailConnectionInfo
    fullName: SuperOffice.WebApi.Data.EMailConnectionInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.EMailConnectionInfo
    name: EMailConnectionInfo
    nameWithType: EMailConnectionInfo
    fullName: SuperOffice.WebApi.Data.EMailConnectionInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
    name: SaveAsync
    nameWithType: IAppointmentAgent.SaveAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.Data.AppointmentEntity
    name: AppointmentEntity
    nameWithType: AppointmentEntity
    fullName: SuperOffice.WebApi.Data.AppointmentEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    name: RecurrenceUpdateMode
    nameWithType: RecurrenceUpdateMode
    fullName: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.EMailConnectionInfo
    name: EMailConnectionInfo
    nameWithType: EMailConnectionInfo
    fullName: SuperOffice.WebApi.Data.EMailConnectionInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.EMailConnectionInfo
    name: EMailConnectionInfo
    nameWithType: EMailConnectionInfo
    fullName: SuperOffice.WebApi.Data.EMailConnectionInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.WebApi.Data.EMailConnectionInfo
  commentId: T:SuperOffice.WebApi.Data.EMailConnectionInfo
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: EMailConnectionInfo
  nameWithType: EMailConnectionInfo
  fullName: SuperOffice.WebApi.Data.EMailConnectionInfo
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.DeleteAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.DeleteAsync
  isExternal: true
  name: DeleteAsync
  nameWithType: AppointmentAgent.DeleteAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.DeleteAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.DeleteAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.DeleteAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: DeleteAsync(Int32, RecurrenceUpdateMode, Boolean, EMailConnectionInfo, EMailConnectionInfo, RequestOptions)
  nameWithType: IAppointmentAgent.DeleteAsync(Int32, RecurrenceUpdateMode, Boolean, EMailConnectionInfo, EMailConnectionInfo, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.DeleteAsync(System.Int32, SuperOffice.WebApi.Data.RecurrenceUpdateMode, System.Boolean, SuperOffice.WebApi.Data.EMailConnectionInfo, SuperOffice.WebApi.Data.EMailConnectionInfo, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.DeleteAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
    name: DeleteAsync
    nameWithType: IAppointmentAgent.DeleteAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.DeleteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    name: RecurrenceUpdateMode
    nameWithType: RecurrenceUpdateMode
    fullName: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.EMailConnectionInfo
    name: EMailConnectionInfo
    nameWithType: EMailConnectionInfo
    fullName: SuperOffice.WebApi.Data.EMailConnectionInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.EMailConnectionInfo
    name: EMailConnectionInfo
    nameWithType: EMailConnectionInfo
    fullName: SuperOffice.WebApi.Data.EMailConnectionInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.DeleteAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
    name: DeleteAsync
    nameWithType: IAppointmentAgent.DeleteAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.DeleteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    name: RecurrenceUpdateMode
    nameWithType: RecurrenceUpdateMode
    fullName: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.EMailConnectionInfo
    name: EMailConnectionInfo
    nameWithType: EMailConnectionInfo
    fullName: SuperOffice.WebApi.Data.EMailConnectionInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.EMailConnectionInfo
    name: EMailConnectionInfo
    nameWithType: EMailConnectionInfo
    fullName: SuperOffice.WebApi.Data.EMailConnectionInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.CalculateDaysAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.CalculateDaysAsync
  isExternal: true
  name: CalculateDaysAsync
  nameWithType: AppointmentAgent.CalculateDaysAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.CalculateDaysAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CalculateDaysAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.CalculateDaysAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: CalculateDaysAsync(AppointmentEntity, RequestOptions)
  nameWithType: IAppointmentAgent.CalculateDaysAsync(AppointmentEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CalculateDaysAsync(SuperOffice.WebApi.Data.AppointmentEntity, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CalculateDaysAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
    name: CalculateDaysAsync
    nameWithType: IAppointmentAgent.CalculateDaysAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CalculateDaysAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.Data.AppointmentEntity
    name: AppointmentEntity
    nameWithType: AppointmentEntity
    fullName: SuperOffice.WebApi.Data.AppointmentEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CalculateDaysAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
    name: CalculateDaysAsync
    nameWithType: IAppointmentAgent.CalculateDaysAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CalculateDaysAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.Data.AppointmentEntity
    name: AppointmentEntity
    nameWithType: AppointmentEntity
    fullName: SuperOffice.WebApi.Data.AppointmentEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.RecurrenceInfo}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.RecurrenceInfo}'
  definition: System.Threading.Tasks.Task`1
  name: Task<RecurrenceInfo>
  nameWithType: Task<RecurrenceInfo>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.RecurrenceInfo>
  nameWithType.vb: Task(Of RecurrenceInfo)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.RecurrenceInfo)
  name.vb: Task(Of RecurrenceInfo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.RecurrenceInfo
    name: RecurrenceInfo
    nameWithType: RecurrenceInfo
    fullName: SuperOffice.WebApi.Data.RecurrenceInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.RecurrenceInfo
    name: RecurrenceInfo
    nameWithType: RecurrenceInfo
    fullName: SuperOffice.WebApi.Data.RecurrenceInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.ValidateDaysAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.ValidateDaysAsync
  isExternal: true
  name: ValidateDaysAsync
  nameWithType: AppointmentAgent.ValidateDaysAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.ValidateDaysAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.ValidateDaysAsync(SuperOffice.WebApi.Data.AppointmentEntity,System.DateTime[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.ValidateDaysAsync(SuperOffice.WebApi.Data.AppointmentEntity,System.DateTime[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: ValidateDaysAsync(AppointmentEntity, DateTime[], RequestOptions)
  nameWithType: IAppointmentAgent.ValidateDaysAsync(AppointmentEntity, DateTime[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.ValidateDaysAsync(SuperOffice.WebApi.Data.AppointmentEntity, System.DateTime[], SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: IAppointmentAgent.ValidateDaysAsync(AppointmentEntity, DateTime(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IAppointmentAgent.ValidateDaysAsync(SuperOffice.WebApi.Data.AppointmentEntity, System.DateTime(), SuperOffice.WebApi.RequestOptions)
  name.vb: ValidateDaysAsync(AppointmentEntity, DateTime(), RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.ValidateDaysAsync(SuperOffice.WebApi.Data.AppointmentEntity,System.DateTime[],SuperOffice.WebApi.RequestOptions)
    name: ValidateDaysAsync
    nameWithType: IAppointmentAgent.ValidateDaysAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.ValidateDaysAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.Data.AppointmentEntity
    name: AppointmentEntity
    nameWithType: AppointmentEntity
    fullName: SuperOffice.WebApi.Data.AppointmentEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.ValidateDaysAsync(SuperOffice.WebApi.Data.AppointmentEntity,System.DateTime[],SuperOffice.WebApi.RequestOptions)
    name: ValidateDaysAsync
    nameWithType: IAppointmentAgent.ValidateDaysAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.ValidateDaysAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.Data.AppointmentEntity
    name: AppointmentEntity
    nameWithType: AppointmentEntity
    fullName: SuperOffice.WebApi.Data.AppointmentEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.DateTime[]
  isExternal: true
  name: DateTime[]
  nameWithType: DateTime[]
  fullName: System.DateTime[]
  nameWithType.vb: DateTime()
  fullName.vb: System.DateTime()
  name.vb: DateTime()
  spec.csharp:
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.RecurrenceDate[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.RecurrenceDate[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<RecurrenceDate[]>
  nameWithType: Task<RecurrenceDate[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.RecurrenceDate[]>
  nameWithType.vb: Task(Of RecurrenceDate())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.RecurrenceDate())
  name.vb: Task(Of RecurrenceDate())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.RecurrenceDate
    name: RecurrenceDate
    nameWithType: RecurrenceDate
    fullName: SuperOffice.WebApi.Data.RecurrenceDate
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.RecurrenceDate
    name: RecurrenceDate
    nameWithType: RecurrenceDate
    fullName: SuperOffice.WebApi.Data.RecurrenceDate
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultRecurrenceAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultRecurrenceAsync
  isExternal: true
  name: CreateDefaultRecurrenceAsync
  nameWithType: AppointmentAgent.CreateDefaultRecurrenceAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultRecurrenceAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultRecurrenceAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultRecurrenceAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: CreateDefaultRecurrenceAsync(RequestOptions)
  nameWithType: IAppointmentAgent.CreateDefaultRecurrenceAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultRecurrenceAsync(SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultRecurrenceAsync(SuperOffice.WebApi.RequestOptions)
    name: CreateDefaultRecurrenceAsync
    nameWithType: IAppointmentAgent.CreateDefaultRecurrenceAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultRecurrenceAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultRecurrenceAsync(SuperOffice.WebApi.RequestOptions)
    name: CreateDefaultRecurrenceAsync
    nameWithType: IAppointmentAgent.CreateDefaultRecurrenceAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultRecurrenceAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.AssignToAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.AssignToAsync
  isExternal: true
  name: AssignToAsync
  nameWithType: AppointmentAgent.AssignToAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.AssignToAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.AssignToAsync(System.Int32,SuperOffice.WebApi.Data.ParticipantInfo,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.AssignToAsync(System.Int32,SuperOffice.WebApi.Data.ParticipantInfo,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: AssignToAsync(Int32, ParticipantInfo, RecurrenceUpdateMode, RequestOptions)
  nameWithType: IAppointmentAgent.AssignToAsync(Int32, ParticipantInfo, RecurrenceUpdateMode, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.AssignToAsync(System.Int32, SuperOffice.WebApi.Data.ParticipantInfo, SuperOffice.WebApi.Data.RecurrenceUpdateMode, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.AssignToAsync(System.Int32,SuperOffice.WebApi.Data.ParticipantInfo,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
    name: AssignToAsync
    nameWithType: IAppointmentAgent.AssignToAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.AssignToAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.ParticipantInfo
    name: ParticipantInfo
    nameWithType: ParticipantInfo
    fullName: SuperOffice.WebApi.Data.ParticipantInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    name: RecurrenceUpdateMode
    nameWithType: RecurrenceUpdateMode
    fullName: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.AssignToAsync(System.Int32,SuperOffice.WebApi.Data.ParticipantInfo,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
    name: AssignToAsync
    nameWithType: IAppointmentAgent.AssignToAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.AssignToAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.ParticipantInfo
    name: ParticipantInfo
    nameWithType: ParticipantInfo
    fullName: SuperOffice.WebApi.Data.ParticipantInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    name: RecurrenceUpdateMode
    nameWithType: RecurrenceUpdateMode
    fullName: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Data.ParticipantInfo
  commentId: T:SuperOffice.WebApi.Data.ParticipantInfo
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: ParticipantInfo
  nameWithType: ParticipantInfo
  fullName: SuperOffice.WebApi.Data.ParticipantInfo
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.SetSeenAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.SetSeenAsync
  isExternal: true
  name: SetSeenAsync
  nameWithType: AppointmentAgent.SetSeenAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.SetSeenAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.SetSeenAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.SetSeenAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: SetSeenAsync(Int32, RecurrenceUpdateMode, RequestOptions)
  nameWithType: IAppointmentAgent.SetSeenAsync(Int32, RecurrenceUpdateMode, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.SetSeenAsync(System.Int32, SuperOffice.WebApi.Data.RecurrenceUpdateMode, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.SetSeenAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
    name: SetSeenAsync
    nameWithType: IAppointmentAgent.SetSeenAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.SetSeenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    name: RecurrenceUpdateMode
    nameWithType: RecurrenceUpdateMode
    fullName: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.SetSeenAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
    name: SetSeenAsync
    nameWithType: IAppointmentAgent.SetSeenAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.SetSeenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    name: RecurrenceUpdateMode
    nameWithType: RecurrenceUpdateMode
    fullName: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.SetSeenManyAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.SetSeenManyAsync
  isExternal: true
  name: SetSeenManyAsync
  nameWithType: AppointmentAgent.SetSeenManyAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.SetSeenManyAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.SetSeenManyAsync(System.Int32[],SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.SetSeenManyAsync(System.Int32[],SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: SetSeenManyAsync(Int32[], RecurrenceUpdateMode, RequestOptions)
  nameWithType: IAppointmentAgent.SetSeenManyAsync(Int32[], RecurrenceUpdateMode, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.SetSeenManyAsync(System.Int32[], SuperOffice.WebApi.Data.RecurrenceUpdateMode, SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: IAppointmentAgent.SetSeenManyAsync(Int32(), RecurrenceUpdateMode, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IAppointmentAgent.SetSeenManyAsync(System.Int32(), SuperOffice.WebApi.Data.RecurrenceUpdateMode, SuperOffice.WebApi.RequestOptions)
  name.vb: SetSeenManyAsync(Int32(), RecurrenceUpdateMode, RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.SetSeenManyAsync(System.Int32[],SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
    name: SetSeenManyAsync
    nameWithType: IAppointmentAgent.SetSeenManyAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.SetSeenManyAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    name: RecurrenceUpdateMode
    nameWithType: RecurrenceUpdateMode
    fullName: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.SetSeenManyAsync(System.Int32[],SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
    name: SetSeenManyAsync
    nameWithType: IAppointmentAgent.SetSeenManyAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.SetSeenManyAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    name: RecurrenceUpdateMode
    nameWithType: RecurrenceUpdateMode
    fullName: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.MoveAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.MoveAsync
  isExternal: true
  name: MoveAsync
  nameWithType: AppointmentAgent.MoveAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.MoveAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.MoveAsync(System.Int32,System.DateTime,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.MoveAsync(System.Int32,System.DateTime,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: MoveAsync(Int32, DateTime, RecurrenceUpdateMode, RequestOptions)
  nameWithType: IAppointmentAgent.MoveAsync(Int32, DateTime, RecurrenceUpdateMode, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.MoveAsync(System.Int32, System.DateTime, SuperOffice.WebApi.Data.RecurrenceUpdateMode, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.MoveAsync(System.Int32,System.DateTime,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
    name: MoveAsync
    nameWithType: IAppointmentAgent.MoveAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.MoveAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    name: RecurrenceUpdateMode
    nameWithType: RecurrenceUpdateMode
    fullName: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.MoveAsync(System.Int32,System.DateTime,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
    name: MoveAsync
    nameWithType: IAppointmentAgent.MoveAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.MoveAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    name: RecurrenceUpdateMode
    nameWithType: RecurrenceUpdateMode
    fullName: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.MoveWithEmailAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.MoveWithEmailAsync
  isExternal: true
  name: MoveWithEmailAsync
  nameWithType: AppointmentAgent.MoveWithEmailAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.MoveWithEmailAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.MoveWithEmailAsync(System.Int32,System.DateTime,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.MoveWithEmailAsync(System.Int32,System.DateTime,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: MoveWithEmailAsync(Int32, DateTime, RecurrenceUpdateMode, Boolean, EMailConnectionInfo, EMailConnectionInfo, RequestOptions)
  nameWithType: IAppointmentAgent.MoveWithEmailAsync(Int32, DateTime, RecurrenceUpdateMode, Boolean, EMailConnectionInfo, EMailConnectionInfo, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.MoveWithEmailAsync(System.Int32, System.DateTime, SuperOffice.WebApi.Data.RecurrenceUpdateMode, System.Boolean, SuperOffice.WebApi.Data.EMailConnectionInfo, SuperOffice.WebApi.Data.EMailConnectionInfo, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.MoveWithEmailAsync(System.Int32,System.DateTime,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
    name: MoveWithEmailAsync
    nameWithType: IAppointmentAgent.MoveWithEmailAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.MoveWithEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    name: RecurrenceUpdateMode
    nameWithType: RecurrenceUpdateMode
    fullName: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.EMailConnectionInfo
    name: EMailConnectionInfo
    nameWithType: EMailConnectionInfo
    fullName: SuperOffice.WebApi.Data.EMailConnectionInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.EMailConnectionInfo
    name: EMailConnectionInfo
    nameWithType: EMailConnectionInfo
    fullName: SuperOffice.WebApi.Data.EMailConnectionInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.MoveWithEmailAsync(System.Int32,System.DateTime,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
    name: MoveWithEmailAsync
    nameWithType: IAppointmentAgent.MoveWithEmailAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.MoveWithEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    name: RecurrenceUpdateMode
    nameWithType: RecurrenceUpdateMode
    fullName: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.EMailConnectionInfo
    name: EMailConnectionInfo
    nameWithType: EMailConnectionInfo
    fullName: SuperOffice.WebApi.Data.EMailConnectionInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.EMailConnectionInfo
    name: EMailConnectionInfo
    nameWithType: EMailConnectionInfo
    fullName: SuperOffice.WebApi.Data.EMailConnectionInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.AcceptRejectedAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.AcceptRejectedAsync
  isExternal: true
  name: AcceptRejectedAsync
  nameWithType: AppointmentAgent.AcceptRejectedAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.AcceptRejectedAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptRejectedAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptRejectedAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: AcceptRejectedAsync(Int32, RecurrenceUpdateMode, RequestOptions)
  nameWithType: IAppointmentAgent.AcceptRejectedAsync(Int32, RecurrenceUpdateMode, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptRejectedAsync(System.Int32, SuperOffice.WebApi.Data.RecurrenceUpdateMode, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptRejectedAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
    name: AcceptRejectedAsync
    nameWithType: IAppointmentAgent.AcceptRejectedAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptRejectedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    name: RecurrenceUpdateMode
    nameWithType: RecurrenceUpdateMode
    fullName: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptRejectedAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
    name: AcceptRejectedAsync
    nameWithType: IAppointmentAgent.AcceptRejectedAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptRejectedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    name: RecurrenceUpdateMode
    nameWithType: RecurrenceUpdateMode
    fullName: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultRecurrenceByDateAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultRecurrenceByDateAsync
  isExternal: true
  name: CreateDefaultRecurrenceByDateAsync
  nameWithType: AppointmentAgent.CreateDefaultRecurrenceByDateAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultRecurrenceByDateAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultRecurrenceByDateAsync(System.DateTime,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultRecurrenceByDateAsync(System.DateTime,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: CreateDefaultRecurrenceByDateAsync(DateTime, RequestOptions)
  nameWithType: IAppointmentAgent.CreateDefaultRecurrenceByDateAsync(DateTime, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultRecurrenceByDateAsync(System.DateTime, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultRecurrenceByDateAsync(System.DateTime,SuperOffice.WebApi.RequestOptions)
    name: CreateDefaultRecurrenceByDateAsync
    nameWithType: IAppointmentAgent.CreateDefaultRecurrenceByDateAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultRecurrenceByDateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultRecurrenceByDateAsync(System.DateTime,SuperOffice.WebApi.RequestOptions)
    name: CreateDefaultRecurrenceByDateAsync
    nameWithType: IAppointmentAgent.CreateDefaultRecurrenceByDateAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultRecurrenceByDateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.CleanUpBookingDeletedAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.CleanUpBookingDeletedAsync
  isExternal: true
  name: CleanUpBookingDeletedAsync
  nameWithType: AppointmentAgent.CleanUpBookingDeletedAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.CleanUpBookingDeletedAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpBookingDeletedAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpBookingDeletedAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: CleanUpBookingDeletedAsync(Int32[], RequestOptions)
  nameWithType: IAppointmentAgent.CleanUpBookingDeletedAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpBookingDeletedAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: IAppointmentAgent.CleanUpBookingDeletedAsync(Int32(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpBookingDeletedAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: CleanUpBookingDeletedAsync(Int32(), RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpBookingDeletedAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
    name: CleanUpBookingDeletedAsync
    nameWithType: IAppointmentAgent.CleanUpBookingDeletedAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpBookingDeletedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpBookingDeletedAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
    name: CleanUpBookingDeletedAsync
    nameWithType: IAppointmentAgent.CleanUpBookingDeletedAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpBookingDeletedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: '!:System.Threading.Tasks.Task{System.Int32}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  nameWithType.vb: Task(Of Int32)
  fullName.vb: System.Threading.Tasks.Task(Of System.Int32)
  name.vb: Task(Of Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.CleanUpBookingDeletedWithUpdateModeAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.CleanUpBookingDeletedWithUpdateModeAsync
  isExternal: true
  name: CleanUpBookingDeletedWithUpdateModeAsync
  nameWithType: AppointmentAgent.CleanUpBookingDeletedWithUpdateModeAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.CleanUpBookingDeletedWithUpdateModeAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpBookingDeletedWithUpdateModeAsync(System.Int32[],SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpBookingDeletedWithUpdateModeAsync(System.Int32[],SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: CleanUpBookingDeletedWithUpdateModeAsync(Int32[], RecurrenceUpdateMode, RequestOptions)
  nameWithType: IAppointmentAgent.CleanUpBookingDeletedWithUpdateModeAsync(Int32[], RecurrenceUpdateMode, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpBookingDeletedWithUpdateModeAsync(System.Int32[], SuperOffice.WebApi.Data.RecurrenceUpdateMode, SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: IAppointmentAgent.CleanUpBookingDeletedWithUpdateModeAsync(Int32(), RecurrenceUpdateMode, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpBookingDeletedWithUpdateModeAsync(System.Int32(), SuperOffice.WebApi.Data.RecurrenceUpdateMode, SuperOffice.WebApi.RequestOptions)
  name.vb: CleanUpBookingDeletedWithUpdateModeAsync(Int32(), RecurrenceUpdateMode, RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpBookingDeletedWithUpdateModeAsync(System.Int32[],SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
    name: CleanUpBookingDeletedWithUpdateModeAsync
    nameWithType: IAppointmentAgent.CleanUpBookingDeletedWithUpdateModeAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpBookingDeletedWithUpdateModeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    name: RecurrenceUpdateMode
    nameWithType: RecurrenceUpdateMode
    fullName: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpBookingDeletedWithUpdateModeAsync(System.Int32[],SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
    name: CleanUpBookingDeletedWithUpdateModeAsync
    nameWithType: IAppointmentAgent.CleanUpBookingDeletedWithUpdateModeAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpBookingDeletedWithUpdateModeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    name: RecurrenceUpdateMode
    nameWithType: RecurrenceUpdateMode
    fullName: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.CleanUpRecurringBookingDeletedAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.CleanUpRecurringBookingDeletedAsync
  isExternal: true
  name: CleanUpRecurringBookingDeletedAsync
  nameWithType: AppointmentAgent.CleanUpRecurringBookingDeletedAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.CleanUpRecurringBookingDeletedAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpRecurringBookingDeletedAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpRecurringBookingDeletedAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: CleanUpRecurringBookingDeletedAsync(RequestOptions)
  nameWithType: IAppointmentAgent.CleanUpRecurringBookingDeletedAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpRecurringBookingDeletedAsync(SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpRecurringBookingDeletedAsync(SuperOffice.WebApi.RequestOptions)
    name: CleanUpRecurringBookingDeletedAsync
    nameWithType: IAppointmentAgent.CleanUpRecurringBookingDeletedAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpRecurringBookingDeletedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpRecurringBookingDeletedAsync(SuperOffice.WebApi.RequestOptions)
    name: CleanUpRecurringBookingDeletedAsync
    nameWithType: IAppointmentAgent.CleanUpRecurringBookingDeletedAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CleanUpRecurringBookingDeletedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociateAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociateAsync
  isExternal: true
  name: CreateDefaultAppointmentEntityByTypeAndAssociateAsync
  nameWithType: AppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociateAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociateAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociateAsync(SuperOffice.WebApi.Data.TaskType,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociateAsync(SuperOffice.WebApi.Data.TaskType,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: CreateDefaultAppointmentEntityByTypeAndAssociateAsync(TaskType, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociateAsync(TaskType, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociateAsync(SuperOffice.WebApi.Data.TaskType, System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociateAsync(SuperOffice.WebApi.Data.TaskType,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: CreateDefaultAppointmentEntityByTypeAndAssociateAsync
    nameWithType: IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociateAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.Data.TaskType
    name: TaskType
    nameWithType: TaskType
    fullName: SuperOffice.WebApi.Data.TaskType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociateAsync(SuperOffice.WebApi.Data.TaskType,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: CreateDefaultAppointmentEntityByTypeAndAssociateAsync
    nameWithType: IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociateAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.Data.TaskType
    name: TaskType
    nameWithType: TaskType
    fullName: SuperOffice.WebApi.Data.TaskType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetCanInsertForAssociatesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetCanInsertForAssociatesAsync
  isExternal: true
  name: GetCanInsertForAssociatesAsync
  nameWithType: AppointmentAgent.GetCanInsertForAssociatesAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetCanInsertForAssociatesAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetCanInsertForAssociatesAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetCanInsertForAssociatesAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetCanInsertForAssociatesAsync(Int32[], RequestOptions)
  nameWithType: IAppointmentAgent.GetCanInsertForAssociatesAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetCanInsertForAssociatesAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: IAppointmentAgent.GetCanInsertForAssociatesAsync(Int32(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IAppointmentAgent.GetCanInsertForAssociatesAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetCanInsertForAssociatesAsync(Int32(), RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetCanInsertForAssociatesAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
    name: GetCanInsertForAssociatesAsync
    nameWithType: IAppointmentAgent.GetCanInsertForAssociatesAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetCanInsertForAssociatesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetCanInsertForAssociatesAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
    name: GetCanInsertForAssociatesAsync
    nameWithType: IAppointmentAgent.GetCanInsertForAssociatesAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetCanInsertForAssociatesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Boolean[]}
  commentId: '!:System.Threading.Tasks.Task{System.Boolean[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean[]>
  nameWithType: Task<Boolean[]>
  fullName: System.Threading.Tasks.Task<System.Boolean[]>
  nameWithType.vb: Task(Of Boolean())
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean())
  name.vb: Task(Of Boolean())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentHaveParticipantsWithEmailAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentHaveParticipantsWithEmailAsync
  isExternal: true
  name: GetAppointmentHaveParticipantsWithEmailAsync
  nameWithType: AppointmentAgent.GetAppointmentHaveParticipantsWithEmailAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentHaveParticipantsWithEmailAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentHaveParticipantsWithEmailAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentHaveParticipantsWithEmailAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetAppointmentHaveParticipantsWithEmailAsync(Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetAppointmentHaveParticipantsWithEmailAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentHaveParticipantsWithEmailAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentHaveParticipantsWithEmailAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetAppointmentHaveParticipantsWithEmailAsync
    nameWithType: IAppointmentAgent.GetAppointmentHaveParticipantsWithEmailAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentHaveParticipantsWithEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentHaveParticipantsWithEmailAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetAppointmentHaveParticipantsWithEmailAsync
    nameWithType: IAppointmentAgent.GetAppointmentHaveParticipantsWithEmailAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentHaveParticipantsWithEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: '!:System.Threading.Tasks.Task{System.Boolean}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestionAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestionAsync
  isExternal: true
  name: CreateDefaultAppointmentEntityFromSaleSuggestionAsync
  nameWithType: AppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestionAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestionAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestionAsync(System.Int32,System.Int32,System.Boolean,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestionAsync(System.Int32,System.Int32,System.Boolean,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: CreateDefaultAppointmentEntityFromSaleSuggestionAsync(Int32, Int32, Boolean, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestionAsync(Int32, Int32, Boolean, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestionAsync(System.Int32, System.Int32, System.Boolean, System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestionAsync(System.Int32,System.Int32,System.Boolean,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: CreateDefaultAppointmentEntityFromSaleSuggestionAsync
    nameWithType: IAppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestionAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestionAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestionAsync(System.Int32,System.Int32,System.Boolean,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: CreateDefaultAppointmentEntityFromSaleSuggestionAsync
    nameWithType: IAppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestionAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestionAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetNextSuggestedAppointmentBySaleAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetNextSuggestedAppointmentBySaleAsync
  isExternal: true
  name: GetNextSuggestedAppointmentBySaleAsync
  nameWithType: AppointmentAgent.GetNextSuggestedAppointmentBySaleAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetNextSuggestedAppointmentBySaleAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetNextSuggestedAppointmentBySaleAsync(System.Int32,System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetNextSuggestedAppointmentBySaleAsync(System.Int32,System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetNextSuggestedAppointmentBySaleAsync(Int32, Int32, Boolean, RequestOptions)
  nameWithType: IAppointmentAgent.GetNextSuggestedAppointmentBySaleAsync(Int32, Int32, Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetNextSuggestedAppointmentBySaleAsync(System.Int32, System.Int32, System.Boolean, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetNextSuggestedAppointmentBySaleAsync(System.Int32,System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
    name: GetNextSuggestedAppointmentBySaleAsync
    nameWithType: IAppointmentAgent.GetNextSuggestedAppointmentBySaleAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetNextSuggestedAppointmentBySaleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetNextSuggestedAppointmentBySaleAsync(System.Int32,System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
    name: GetNextSuggestedAppointmentBySaleAsync
    nameWithType: IAppointmentAgent.GetNextSuggestedAppointmentBySaleAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetNextSuggestedAppointmentBySaleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SuggestedAppointment}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SuggestedAppointment}'
  definition: System.Threading.Tasks.Task`1
  name: Task<SuggestedAppointment>
  nameWithType: Task<SuggestedAppointment>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.SuggestedAppointment>
  nameWithType.vb: Task(Of SuggestedAppointment)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.SuggestedAppointment)
  name.vb: Task(Of SuggestedAppointment)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.SuggestedAppointment
    name: SuggestedAppointment
    nameWithType: SuggestedAppointment
    fullName: SuperOffice.WebApi.Data.SuggestedAppointment
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.SuggestedAppointment
    name: SuggestedAppointment
    nameWithType: SuggestedAppointment
    fullName: SuperOffice.WebApi.Data.SuggestedAppointment
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultReOpenAppointmentAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultReOpenAppointmentAsync
  isExternal: true
  name: CreateDefaultReOpenAppointmentAsync
  nameWithType: AppointmentAgent.CreateDefaultReOpenAppointmentAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultReOpenAppointmentAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultReOpenAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultReOpenAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: CreateDefaultReOpenAppointmentAsync(Int32, RequestOptions)
  nameWithType: IAppointmentAgent.CreateDefaultReOpenAppointmentAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultReOpenAppointmentAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultReOpenAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: CreateDefaultReOpenAppointmentAsync
    nameWithType: IAppointmentAgent.CreateDefaultReOpenAppointmentAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultReOpenAppointmentAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultReOpenAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: CreateDefaultReOpenAppointmentAsync
    nameWithType: IAppointmentAgent.CreateDefaultReOpenAppointmentAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultReOpenAppointmentAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestionAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestionAsync
  isExternal: true
  name: CreateDefaultAppointmentEntityFromProjectSuggestionAsync
  nameWithType: AppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestionAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestionAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestionAsync(System.Int32,System.Int32,System.Boolean,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestionAsync(System.Int32,System.Int32,System.Boolean,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: CreateDefaultAppointmentEntityFromProjectSuggestionAsync(Int32, Int32, Boolean, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestionAsync(Int32, Int32, Boolean, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestionAsync(System.Int32, System.Int32, System.Boolean, System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestionAsync(System.Int32,System.Int32,System.Boolean,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: CreateDefaultAppointmentEntityFromProjectSuggestionAsync
    nameWithType: IAppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestionAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestionAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestionAsync(System.Int32,System.Int32,System.Boolean,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: CreateDefaultAppointmentEntityFromProjectSuggestionAsync
    nameWithType: IAppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestionAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestionAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.CreateAppointmentForUIDAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.CreateAppointmentForUIDAsync
  isExternal: true
  name: CreateAppointmentForUIDAsync
  nameWithType: AppointmentAgent.CreateAppointmentForUIDAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.CreateAppointmentForUIDAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAppointmentForUIDAsync(SuperOffice.WebApi.Data.AppointmentEntity,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAppointmentForUIDAsync(SuperOffice.WebApi.Data.AppointmentEntity,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: CreateAppointmentForUIDAsync(AppointmentEntity, String, RequestOptions)
  nameWithType: IAppointmentAgent.CreateAppointmentForUIDAsync(AppointmentEntity, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAppointmentForUIDAsync(SuperOffice.WebApi.Data.AppointmentEntity, System.String, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAppointmentForUIDAsync(SuperOffice.WebApi.Data.AppointmentEntity,System.String,SuperOffice.WebApi.RequestOptions)
    name: CreateAppointmentForUIDAsync
    nameWithType: IAppointmentAgent.CreateAppointmentForUIDAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAppointmentForUIDAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.Data.AppointmentEntity
    name: AppointmentEntity
    nameWithType: AppointmentEntity
    fullName: SuperOffice.WebApi.Data.AppointmentEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAppointmentForUIDAsync(SuperOffice.WebApi.Data.AppointmentEntity,System.String,SuperOffice.WebApi.RequestOptions)
    name: CreateAppointmentForUIDAsync
    nameWithType: IAppointmentAgent.CreateAppointmentForUIDAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CreateAppointmentForUIDAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.Data.AppointmentEntity
    name: AppointmentEntity
    nameWithType: AppointmentEntity
    fullName: SuperOffice.WebApi.Data.AppointmentEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentFromUIDAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentFromUIDAsync
  isExternal: true
  name: GetAppointmentFromUIDAsync
  nameWithType: AppointmentAgent.GetAppointmentFromUIDAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentFromUIDAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentFromUIDAsync(System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentFromUIDAsync(System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetAppointmentFromUIDAsync(String, RequestOptions)
  nameWithType: IAppointmentAgent.GetAppointmentFromUIDAsync(String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentFromUIDAsync(System.String, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentFromUIDAsync(System.String,SuperOffice.WebApi.RequestOptions)
    name: GetAppointmentFromUIDAsync
    nameWithType: IAppointmentAgent.GetAppointmentFromUIDAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentFromUIDAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentFromUIDAsync(System.String,SuperOffice.WebApi.RequestOptions)
    name: GetAppointmentFromUIDAsync
    nameWithType: IAppointmentAgent.GetAppointmentFromUIDAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentFromUIDAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.CanAssignToProjectMemberAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.CanAssignToProjectMemberAsync
  isExternal: true
  name: CanAssignToProjectMemberAsync
  nameWithType: AppointmentAgent.CanAssignToProjectMemberAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.CanAssignToProjectMemberAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CanAssignToProjectMemberAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.CanAssignToProjectMemberAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: CanAssignToProjectMemberAsync(Int32, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.CanAssignToProjectMemberAsync(Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CanAssignToProjectMemberAsync(System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CanAssignToProjectMemberAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: CanAssignToProjectMemberAsync
    nameWithType: IAppointmentAgent.CanAssignToProjectMemberAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CanAssignToProjectMemberAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.CanAssignToProjectMemberAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: CanAssignToProjectMemberAsync
    nameWithType: IAppointmentAgent.CanAssignToProjectMemberAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.CanAssignToProjectMemberAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetUIDFromAppointmentIdAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetUIDFromAppointmentIdAsync
  isExternal: true
  name: GetUIDFromAppointmentIdAsync
  nameWithType: AppointmentAgent.GetUIDFromAppointmentIdAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetUIDFromAppointmentIdAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetUIDFromAppointmentIdAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetUIDFromAppointmentIdAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetUIDFromAppointmentIdAsync(Int32, Boolean, RequestOptions)
  nameWithType: IAppointmentAgent.GetUIDFromAppointmentIdAsync(Int32, Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetUIDFromAppointmentIdAsync(System.Int32, System.Boolean, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetUIDFromAppointmentIdAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
    name: GetUIDFromAppointmentIdAsync
    nameWithType: IAppointmentAgent.GetUIDFromAppointmentIdAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetUIDFromAppointmentIdAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetUIDFromAppointmentIdAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
    name: GetUIDFromAppointmentIdAsync
    nameWithType: IAppointmentAgent.GetUIDFromAppointmentIdAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetUIDFromAppointmentIdAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.UpdateAppointmentFromIcsResponseAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.UpdateAppointmentFromIcsResponseAsync
  isExternal: true
  name: UpdateAppointmentFromIcsResponseAsync
  nameWithType: AppointmentAgent.UpdateAppointmentFromIcsResponseAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.UpdateAppointmentFromIcsResponseAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentFromIcsResponseAsync(System.String,System.Byte[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentFromIcsResponseAsync(System.String,System.Byte[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: UpdateAppointmentFromIcsResponseAsync(String, Byte[], RequestOptions)
  nameWithType: IAppointmentAgent.UpdateAppointmentFromIcsResponseAsync(String, Byte[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentFromIcsResponseAsync(System.String, System.Byte[], SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: IAppointmentAgent.UpdateAppointmentFromIcsResponseAsync(String, Byte(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentFromIcsResponseAsync(System.String, System.Byte(), SuperOffice.WebApi.RequestOptions)
  name.vb: UpdateAppointmentFromIcsResponseAsync(String, Byte(), RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentFromIcsResponseAsync(System.String,System.Byte[],SuperOffice.WebApi.RequestOptions)
    name: UpdateAppointmentFromIcsResponseAsync
    nameWithType: IAppointmentAgent.UpdateAppointmentFromIcsResponseAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentFromIcsResponseAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentFromIcsResponseAsync(System.String,System.Byte[],SuperOffice.WebApi.RequestOptions)
    name: UpdateAppointmentFromIcsResponseAsync
    nameWithType: IAppointmentAgent.UpdateAppointmentFromIcsResponseAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentFromIcsResponseAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.ValidateAppointmentEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.ValidateAppointmentEntityAsync
  isExternal: true
  name: ValidateAppointmentEntityAsync
  nameWithType: AppointmentAgent.ValidateAppointmentEntityAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.ValidateAppointmentEntityAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.ValidateAppointmentEntityAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.ValidateAppointmentEntityAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: ValidateAppointmentEntityAsync(AppointmentEntity, RequestOptions)
  nameWithType: IAppointmentAgent.ValidateAppointmentEntityAsync(AppointmentEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.ValidateAppointmentEntityAsync(SuperOffice.WebApi.Data.AppointmentEntity, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.ValidateAppointmentEntityAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
    name: ValidateAppointmentEntityAsync
    nameWithType: IAppointmentAgent.ValidateAppointmentEntityAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.ValidateAppointmentEntityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.Data.AppointmentEntity
    name: AppointmentEntity
    nameWithType: AppointmentEntity
    fullName: SuperOffice.WebApi.Data.AppointmentEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.ValidateAppointmentEntityAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
    name: ValidateAppointmentEntityAsync
    nameWithType: IAppointmentAgent.ValidateAppointmentEntityAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.ValidateAppointmentEntityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.Data.AppointmentEntity
    name: AppointmentEntity
    nameWithType: AppointmentEntity
    fullName: SuperOffice.WebApi.Data.AppointmentEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.StringDictionary}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.StringDictionary}'
  definition: System.Threading.Tasks.Task`1
  name: Task<StringDictionary>
  nameWithType: Task<StringDictionary>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.StringDictionary>
  nameWithType.vb: Task(Of StringDictionary)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.StringDictionary)
  name.vb: Task(Of StringDictionary)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.StringDictionary
    name: StringDictionary
    nameWithType: StringDictionary
    fullName: SuperOffice.WebApi.Data.StringDictionary
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.StringDictionary
    name: StringDictionary
    nameWithType: StringDictionary
    fullName: SuperOffice.WebApi.Data.StringDictionary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.WillSendEmailAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.WillSendEmailAsync
  isExternal: true
  name: WillSendEmailAsync
  nameWithType: AppointmentAgent.WillSendEmailAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.WillSendEmailAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.WillSendEmailAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.WillSendEmailAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: WillSendEmailAsync(AppointmentEntity, RequestOptions)
  nameWithType: IAppointmentAgent.WillSendEmailAsync(AppointmentEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.WillSendEmailAsync(SuperOffice.WebApi.Data.AppointmentEntity, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.WillSendEmailAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
    name: WillSendEmailAsync
    nameWithType: IAppointmentAgent.WillSendEmailAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.WillSendEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.Data.AppointmentEntity
    name: AppointmentEntity
    nameWithType: AppointmentEntity
    fullName: SuperOffice.WebApi.Data.AppointmentEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.WillSendEmailAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.RequestOptions)
    name: WillSendEmailAsync
    nameWithType: IAppointmentAgent.WillSendEmailAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.WillSendEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.Data.AppointmentEntity
    name: AppointmentEntity
    nameWithType: AppointmentEntity
    fullName: SuperOffice.WebApi.Data.AppointmentEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.AcceptWithSmtpEmailConfirmationAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.AcceptWithSmtpEmailConfirmationAsync
  isExternal: true
  name: AcceptWithSmtpEmailConfirmationAsync
  nameWithType: AppointmentAgent.AcceptWithSmtpEmailConfirmationAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.AcceptWithSmtpEmailConfirmationAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptWithSmtpEmailConfirmationAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptWithSmtpEmailConfirmationAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: AcceptWithSmtpEmailConfirmationAsync(Int32, RecurrenceUpdateMode, EMailConnectionInfo, RequestOptions)
  nameWithType: IAppointmentAgent.AcceptWithSmtpEmailConfirmationAsync(Int32, RecurrenceUpdateMode, EMailConnectionInfo, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptWithSmtpEmailConfirmationAsync(System.Int32, SuperOffice.WebApi.Data.RecurrenceUpdateMode, SuperOffice.WebApi.Data.EMailConnectionInfo, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptWithSmtpEmailConfirmationAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
    name: AcceptWithSmtpEmailConfirmationAsync
    nameWithType: IAppointmentAgent.AcceptWithSmtpEmailConfirmationAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptWithSmtpEmailConfirmationAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    name: RecurrenceUpdateMode
    nameWithType: RecurrenceUpdateMode
    fullName: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.EMailConnectionInfo
    name: EMailConnectionInfo
    nameWithType: EMailConnectionInfo
    fullName: SuperOffice.WebApi.Data.EMailConnectionInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptWithSmtpEmailConfirmationAsync(System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
    name: AcceptWithSmtpEmailConfirmationAsync
    nameWithType: IAppointmentAgent.AcceptWithSmtpEmailConfirmationAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.AcceptWithSmtpEmailConfirmationAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    name: RecurrenceUpdateMode
    nameWithType: RecurrenceUpdateMode
    fullName: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.EMailConnectionInfo
    name: EMailConnectionInfo
    nameWithType: EMailConnectionInfo
    fullName: SuperOffice.WebApi.Data.EMailConnectionInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.RejectWithSmtpEmailConfirmationAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.RejectWithSmtpEmailConfirmationAsync
  isExternal: true
  name: RejectWithSmtpEmailConfirmationAsync
  nameWithType: AppointmentAgent.RejectWithSmtpEmailConfirmationAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.RejectWithSmtpEmailConfirmationAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.RejectWithSmtpEmailConfirmationAsync(System.Int32,System.String,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.RejectWithSmtpEmailConfirmationAsync(System.Int32,System.String,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: RejectWithSmtpEmailConfirmationAsync(Int32, String, RecurrenceUpdateMode, EMailConnectionInfo, RequestOptions)
  nameWithType: IAppointmentAgent.RejectWithSmtpEmailConfirmationAsync(Int32, String, RecurrenceUpdateMode, EMailConnectionInfo, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.RejectWithSmtpEmailConfirmationAsync(System.Int32, System.String, SuperOffice.WebApi.Data.RecurrenceUpdateMode, SuperOffice.WebApi.Data.EMailConnectionInfo, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.RejectWithSmtpEmailConfirmationAsync(System.Int32,System.String,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
    name: RejectWithSmtpEmailConfirmationAsync
    nameWithType: IAppointmentAgent.RejectWithSmtpEmailConfirmationAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.RejectWithSmtpEmailConfirmationAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    name: RecurrenceUpdateMode
    nameWithType: RecurrenceUpdateMode
    fullName: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.EMailConnectionInfo
    name: EMailConnectionInfo
    nameWithType: EMailConnectionInfo
    fullName: SuperOffice.WebApi.Data.EMailConnectionInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.RejectWithSmtpEmailConfirmationAsync(System.Int32,System.String,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
    name: RejectWithSmtpEmailConfirmationAsync
    nameWithType: IAppointmentAgent.RejectWithSmtpEmailConfirmationAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.RejectWithSmtpEmailConfirmationAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    name: RecurrenceUpdateMode
    nameWithType: RecurrenceUpdateMode
    fullName: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.EMailConnectionInfo
    name: EMailConnectionInfo
    nameWithType: EMailConnectionInfo
    fullName: SuperOffice.WebApi.Data.EMailConnectionInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentEmailInvitationAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentEmailInvitationAsync
  isExternal: true
  name: GetAppointmentEmailInvitationAsync
  nameWithType: AppointmentAgent.GetAppointmentEmailInvitationAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentEmailInvitationAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentEmailInvitationAsync(SuperOffice.WebApi.Data.AppointmentEntity,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentEmailInvitationAsync(SuperOffice.WebApi.Data.AppointmentEntity,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetAppointmentEmailInvitationAsync(AppointmentEntity, String, String, RequestOptions)
  nameWithType: IAppointmentAgent.GetAppointmentEmailInvitationAsync(AppointmentEntity, String, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentEmailInvitationAsync(SuperOffice.WebApi.Data.AppointmentEntity, System.String, System.String, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentEmailInvitationAsync(SuperOffice.WebApi.Data.AppointmentEntity,System.String,System.String,SuperOffice.WebApi.RequestOptions)
    name: GetAppointmentEmailInvitationAsync
    nameWithType: IAppointmentAgent.GetAppointmentEmailInvitationAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentEmailInvitationAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.Data.AppointmentEntity
    name: AppointmentEntity
    nameWithType: AppointmentEntity
    fullName: SuperOffice.WebApi.Data.AppointmentEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentEmailInvitationAsync(SuperOffice.WebApi.Data.AppointmentEntity,System.String,System.String,SuperOffice.WebApi.RequestOptions)
    name: GetAppointmentEmailInvitationAsync
    nameWithType: IAppointmentAgent.GetAppointmentEmailInvitationAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentEmailInvitationAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.Data.AppointmentEntity
    name: AppointmentEntity
    nameWithType: AppointmentEntity
    fullName: SuperOffice.WebApi.Data.AppointmentEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailEntity}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailEntity}'
  definition: System.Threading.Tasks.Task`1
  name: Task<EMailEntity>
  nameWithType: Task<EMailEntity>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.EMailEntity>
  nameWithType.vb: Task(Of EMailEntity)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.EMailEntity)
  name.vb: Task(Of EMailEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.EMailEntity
    name: EMailEntity
    nameWithType: EMailEntity
    fullName: SuperOffice.WebApi.Data.EMailEntity
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.EMailEntity
    name: EMailEntity
    nameWithType: EMailEntity
    fullName: SuperOffice.WebApi.Data.EMailEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.SaveWithCustomInvitationAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.SaveWithCustomInvitationAsync
  isExternal: true
  name: SaveWithCustomInvitationAsync
  nameWithType: AppointmentAgent.SaveWithCustomInvitationAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.SaveWithCustomInvitationAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveWithCustomInvitationAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.SaveWithCustomInvitationAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: SaveWithCustomInvitationAsync(AppointmentEntity, RecurrenceUpdateMode, Boolean, EMailConnectionInfo, EMailConnectionInfo, String, String, String, RequestOptions)
  nameWithType: IAppointmentAgent.SaveWithCustomInvitationAsync(AppointmentEntity, RecurrenceUpdateMode, Boolean, EMailConnectionInfo, EMailConnectionInfo, String, String, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveWithCustomInvitationAsync(SuperOffice.WebApi.Data.AppointmentEntity, SuperOffice.WebApi.Data.RecurrenceUpdateMode, System.Boolean, SuperOffice.WebApi.Data.EMailConnectionInfo, SuperOffice.WebApi.Data.EMailConnectionInfo, System.String, System.String, System.String, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveWithCustomInvitationAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
    name: SaveWithCustomInvitationAsync
    nameWithType: IAppointmentAgent.SaveWithCustomInvitationAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveWithCustomInvitationAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.Data.AppointmentEntity
    name: AppointmentEntity
    nameWithType: AppointmentEntity
    fullName: SuperOffice.WebApi.Data.AppointmentEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    name: RecurrenceUpdateMode
    nameWithType: RecurrenceUpdateMode
    fullName: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.EMailConnectionInfo
    name: EMailConnectionInfo
    nameWithType: EMailConnectionInfo
    fullName: SuperOffice.WebApi.Data.EMailConnectionInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.EMailConnectionInfo
    name: EMailConnectionInfo
    nameWithType: EMailConnectionInfo
    fullName: SuperOffice.WebApi.Data.EMailConnectionInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveWithCustomInvitationAsync(SuperOffice.WebApi.Data.AppointmentEntity,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
    name: SaveWithCustomInvitationAsync
    nameWithType: IAppointmentAgent.SaveWithCustomInvitationAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.SaveWithCustomInvitationAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.Data.AppointmentEntity
    name: AppointmentEntity
    nameWithType: AppointmentEntity
    fullName: SuperOffice.WebApi.Data.AppointmentEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    name: RecurrenceUpdateMode
    nameWithType: RecurrenceUpdateMode
    fullName: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.EMailConnectionInfo
    name: EMailConnectionInfo
    nameWithType: EMailConnectionInfo
    fullName: SuperOffice.WebApi.Data.EMailConnectionInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.EMailConnectionInfo
    name: EMailConnectionInfo
    nameWithType: EMailConnectionInfo
    fullName: SuperOffice.WebApi.Data.EMailConnectionInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentSaveData}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentSaveData}'
  definition: System.Threading.Tasks.Task`1
  name: Task<AppointmentSaveData>
  nameWithType: Task<AppointmentSaveData>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.AppointmentSaveData>
  nameWithType.vb: Task(Of AppointmentSaveData)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.AppointmentSaveData)
  name.vb: Task(Of AppointmentSaveData)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.AppointmentSaveData
    name: AppointmentSaveData
    nameWithType: AppointmentSaveData
    fullName: SuperOffice.WebApi.Data.AppointmentSaveData
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.AppointmentSaveData
    name: AppointmentSaveData
    nameWithType: AppointmentSaveData
    fullName: SuperOffice.WebApi.Data.AppointmentSaveData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.ConvertAppointmentToTaskAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.ConvertAppointmentToTaskAsync
  isExternal: true
  name: ConvertAppointmentToTaskAsync
  nameWithType: AppointmentAgent.ConvertAppointmentToTaskAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.ConvertAppointmentToTaskAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.ConvertAppointmentToTaskAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.ConvertAppointmentToTaskAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: ConvertAppointmentToTaskAsync(Int32, RequestOptions)
  nameWithType: IAppointmentAgent.ConvertAppointmentToTaskAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.ConvertAppointmentToTaskAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.ConvertAppointmentToTaskAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: ConvertAppointmentToTaskAsync
    nameWithType: IAppointmentAgent.ConvertAppointmentToTaskAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.ConvertAppointmentToTaskAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.ConvertAppointmentToTaskAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: ConvertAppointmentToTaskAsync
    nameWithType: IAppointmentAgent.ConvertAppointmentToTaskAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.ConvertAppointmentToTaskAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentListAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentListAsync
  isExternal: true
  name: GetAppointmentListAsync
  nameWithType: AppointmentAgent.GetAppointmentListAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentListAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetAppointmentListAsync(Int32[], RequestOptions)
  nameWithType: IAppointmentAgent.GetAppointmentListAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentListAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: IAppointmentAgent.GetAppointmentListAsync(Int32(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentListAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetAppointmentListAsync(Int32(), RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
    name: GetAppointmentListAsync
    nameWithType: IAppointmentAgent.GetAppointmentListAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentListAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
    name: GetAppointmentListAsync
    nameWithType: IAppointmentAgent.GetAppointmentListAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentListAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Appointment[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Appointment[]>
  nameWithType: Task<Appointment[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.Appointment[]>
  nameWithType.vb: Task(Of Appointment())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.Appointment())
  name.vb: Task(Of Appointment())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.Appointment
    name: Appointment
    nameWithType: Appointment
    fullName: SuperOffice.WebApi.Data.Appointment
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.Appointment
    name: Appointment
    nameWithType: Appointment
    fullName: SuperOffice.WebApi.Data.Appointment
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetMyAppointmentsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetMyAppointmentsAsync
  isExternal: true
  name: GetMyAppointmentsAsync
  nameWithType: AppointmentAgent.GetMyAppointmentsAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetMyAppointmentsAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyAppointmentsAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyAppointmentsAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetMyAppointmentsAsync(DateTime, DateTime, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetMyAppointmentsAsync(DateTime, DateTime, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyAppointmentsAsync(System.DateTime, System.DateTime, System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyAppointmentsAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetMyAppointmentsAsync
    nameWithType: IAppointmentAgent.GetMyAppointmentsAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyAppointmentsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyAppointmentsAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetMyAppointmentsAsync
    nameWithType: IAppointmentAgent.GetMyAppointmentsAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyAppointmentsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonAppointmentsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonAppointmentsAsync
  isExternal: true
  name: GetPersonAppointmentsAsync
  nameWithType: AppointmentAgent.GetPersonAppointmentsAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonAppointmentsAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetPersonAppointmentsAsync(Int32, Boolean, DateTime, DateTime, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetPersonAppointmentsAsync(Int32, Boolean, DateTime, DateTime, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsAsync(System.Int32, System.Boolean, System.DateTime, System.DateTime, System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetPersonAppointmentsAsync
    nameWithType: IAppointmentAgent.GetPersonAppointmentsAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetPersonAppointmentsAsync
    nameWithType: IAppointmentAgent.GetPersonAppointmentsAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetMyDiaryAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetMyDiaryAsync
  isExternal: true
  name: GetMyDiaryAsync
  nameWithType: AppointmentAgent.GetMyDiaryAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetMyDiaryAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyDiaryAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyDiaryAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetMyDiaryAsync(DateTime, DateTime, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetMyDiaryAsync(DateTime, DateTime, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyDiaryAsync(System.DateTime, System.DateTime, System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyDiaryAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetMyDiaryAsync
    nameWithType: IAppointmentAgent.GetMyDiaryAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyDiaryAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyDiaryAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetMyDiaryAsync
    nameWithType: IAppointmentAgent.GetMyDiaryAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyDiaryAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetMyTasksAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetMyTasksAsync
  isExternal: true
  name: GetMyTasksAsync
  nameWithType: AppointmentAgent.GetMyTasksAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetMyTasksAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyTasksAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyTasksAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetMyTasksAsync(Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetMyTasksAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyTasksAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyTasksAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetMyTasksAsync
    nameWithType: IAppointmentAgent.GetMyTasksAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyTasksAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyTasksAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetMyTasksAsync
    nameWithType: IAppointmentAgent.GetMyTasksAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyTasksAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonDiaryAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonDiaryAsync
  isExternal: true
  name: GetPersonDiaryAsync
  nameWithType: AppointmentAgent.GetPersonDiaryAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonDiaryAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonDiaryAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonDiaryAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetPersonDiaryAsync(Int32, DateTime, DateTime, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetPersonDiaryAsync(Int32, DateTime, DateTime, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonDiaryAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonDiaryAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetPersonDiaryAsync
    nameWithType: IAppointmentAgent.GetPersonDiaryAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonDiaryAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonDiaryAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetPersonDiaryAsync
    nameWithType: IAppointmentAgent.GetPersonDiaryAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonDiaryAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonTasksAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonTasksAsync
  isExternal: true
  name: GetPersonTasksAsync
  nameWithType: AppointmentAgent.GetPersonTasksAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonTasksAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonTasksAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonTasksAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetPersonTasksAsync(Int32, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetPersonTasksAsync(Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonTasksAsync(System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonTasksAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetPersonTasksAsync
    nameWithType: IAppointmentAgent.GetPersonTasksAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonTasksAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonTasksAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetPersonTasksAsync
    nameWithType: IAppointmentAgent.GetPersonTasksAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonTasksAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonAppointmentsByTypeAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonAppointmentsByTypeAsync
  isExternal: true
  name: GetPersonAppointmentsByTypeAsync
  nameWithType: AppointmentAgent.GetPersonAppointmentsByTypeAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonAppointmentsByTypeAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTypeAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTypeAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetPersonAppointmentsByTypeAsync(Int32, Boolean, DateTime, DateTime, Int32, AppointmentType, RequestOptions)
  nameWithType: IAppointmentAgent.GetPersonAppointmentsByTypeAsync(Int32, Boolean, DateTime, DateTime, Int32, AppointmentType, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTypeAsync(System.Int32, System.Boolean, System.DateTime, System.DateTime, System.Int32, SuperOffice.WebApi.Data.AppointmentType, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTypeAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
    name: GetPersonAppointmentsByTypeAsync
    nameWithType: IAppointmentAgent.GetPersonAppointmentsByTypeAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTypeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.AppointmentType
    name: AppointmentType
    nameWithType: AppointmentType
    fullName: SuperOffice.WebApi.Data.AppointmentType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTypeAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
    name: GetPersonAppointmentsByTypeAsync
    nameWithType: IAppointmentAgent.GetPersonAppointmentsByTypeAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTypeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.AppointmentType
    name: AppointmentType
    nameWithType: AppointmentType
    fullName: SuperOffice.WebApi.Data.AppointmentType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Data.AppointmentType
  commentId: T:SuperOffice.WebApi.Data.AppointmentType
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: AppointmentType
  nameWithType: AppointmentType
  fullName: SuperOffice.WebApi.Data.AppointmentType
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectAppointmentsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectAppointmentsAsync
  isExternal: true
  name: GetProjectAppointmentsAsync
  nameWithType: AppointmentAgent.GetProjectAppointmentsAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectAppointmentsAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetProjectAppointmentsAsync(Int32, DateTime, DateTime, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetProjectAppointmentsAsync(Int32, DateTime, DateTime, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetProjectAppointmentsAsync
    nameWithType: IAppointmentAgent.GetProjectAppointmentsAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetProjectAppointmentsAsync
    nameWithType: IAppointmentAgent.GetProjectAppointmentsAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectAppointmentsByTypeAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectAppointmentsByTypeAsync
  isExternal: true
  name: GetProjectAppointmentsByTypeAsync
  nameWithType: AppointmentAgent.GetProjectAppointmentsByTypeAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectAppointmentsByTypeAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTypeAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTypeAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetProjectAppointmentsByTypeAsync(Int32, DateTime, DateTime, Int32, AppointmentType, RequestOptions)
  nameWithType: IAppointmentAgent.GetProjectAppointmentsByTypeAsync(Int32, DateTime, DateTime, Int32, AppointmentType, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTypeAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, SuperOffice.WebApi.Data.AppointmentType, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTypeAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
    name: GetProjectAppointmentsByTypeAsync
    nameWithType: IAppointmentAgent.GetProjectAppointmentsByTypeAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTypeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.AppointmentType
    name: AppointmentType
    nameWithType: AppointmentType
    fullName: SuperOffice.WebApi.Data.AppointmentType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTypeAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
    name: GetProjectAppointmentsByTypeAsync
    nameWithType: IAppointmentAgent.GetProjectAppointmentsByTypeAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTypeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.AppointmentType
    name: AppointmentType
    nameWithType: AppointmentType
    fullName: SuperOffice.WebApi.Data.AppointmentType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetContactAppointmentsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetContactAppointmentsAsync
  isExternal: true
  name: GetContactAppointmentsAsync
  nameWithType: AppointmentAgent.GetContactAppointmentsAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetContactAppointmentsAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetContactAppointmentsAsync(Int32, DateTime, DateTime, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetContactAppointmentsAsync(Int32, DateTime, DateTime, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetContactAppointmentsAsync
    nameWithType: IAppointmentAgent.GetContactAppointmentsAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetContactAppointmentsAsync
    nameWithType: IAppointmentAgent.GetContactAppointmentsAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetContactAppointmentsByTypeAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetContactAppointmentsByTypeAsync
  isExternal: true
  name: GetContactAppointmentsByTypeAsync
  nameWithType: AppointmentAgent.GetContactAppointmentsByTypeAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetContactAppointmentsByTypeAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTypeAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTypeAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetContactAppointmentsByTypeAsync(Int32, DateTime, DateTime, Int32, AppointmentType, RequestOptions)
  nameWithType: IAppointmentAgent.GetContactAppointmentsByTypeAsync(Int32, DateTime, DateTime, Int32, AppointmentType, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTypeAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, SuperOffice.WebApi.Data.AppointmentType, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTypeAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
    name: GetContactAppointmentsByTypeAsync
    nameWithType: IAppointmentAgent.GetContactAppointmentsByTypeAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTypeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.AppointmentType
    name: AppointmentType
    nameWithType: AppointmentType
    fullName: SuperOffice.WebApi.Data.AppointmentType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTypeAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
    name: GetContactAppointmentsByTypeAsync
    nameWithType: IAppointmentAgent.GetContactAppointmentsByTypeAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTypeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.AppointmentType
    name: AppointmentType
    nameWithType: AppointmentType
    fullName: SuperOffice.WebApi.Data.AppointmentType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectMemberAppointmentsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectMemberAppointmentsAsync
  isExternal: true
  name: GetProjectMemberAppointmentsAsync
  nameWithType: AppointmentAgent.GetProjectMemberAppointmentsAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectMemberAppointmentsAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetProjectMemberAppointmentsAsync(Int32, DateTime, DateTime, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetProjectMemberAppointmentsAsync(Int32, DateTime, DateTime, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetProjectMemberAppointmentsAsync
    nameWithType: IAppointmentAgent.GetProjectMemberAppointmentsAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetProjectMemberAppointmentsAsync
    nameWithType: IAppointmentAgent.GetProjectMemberAppointmentsAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectMemberAppointmentsByTypeAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectMemberAppointmentsByTypeAsync
  isExternal: true
  name: GetProjectMemberAppointmentsByTypeAsync
  nameWithType: AppointmentAgent.GetProjectMemberAppointmentsByTypeAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectMemberAppointmentsByTypeAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTypeAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTypeAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetProjectMemberAppointmentsByTypeAsync(Int32, DateTime, DateTime, Int32, AppointmentType, RequestOptions)
  nameWithType: IAppointmentAgent.GetProjectMemberAppointmentsByTypeAsync(Int32, DateTime, DateTime, Int32, AppointmentType, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTypeAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, SuperOffice.WebApi.Data.AppointmentType, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTypeAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
    name: GetProjectMemberAppointmentsByTypeAsync
    nameWithType: IAppointmentAgent.GetProjectMemberAppointmentsByTypeAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTypeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.AppointmentType
    name: AppointmentType
    nameWithType: AppointmentType
    fullName: SuperOffice.WebApi.Data.AppointmentType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTypeAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.Data.AppointmentType,SuperOffice.WebApi.RequestOptions)
    name: GetProjectMemberAppointmentsByTypeAsync
    nameWithType: IAppointmentAgent.GetProjectMemberAppointmentsByTypeAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTypeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.AppointmentType
    name: AppointmentType
    nameWithType: AppointmentType
    fullName: SuperOffice.WebApi.Data.AppointmentType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonAppointmentsByTaskAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonAppointmentsByTaskAsync
  isExternal: true
  name: GetPersonAppointmentsByTaskAsync
  nameWithType: AppointmentAgent.GetPersonAppointmentsByTaskAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonAppointmentsByTaskAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTaskAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTaskAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetPersonAppointmentsByTaskAsync(Int32, Boolean, DateTime, DateTime, Int32, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetPersonAppointmentsByTaskAsync(Int32, Boolean, DateTime, DateTime, Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTaskAsync(System.Int32, System.Boolean, System.DateTime, System.DateTime, System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTaskAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetPersonAppointmentsByTaskAsync
    nameWithType: IAppointmentAgent.GetPersonAppointmentsByTaskAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTaskAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTaskAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetPersonAppointmentsByTaskAsync
    nameWithType: IAppointmentAgent.GetPersonAppointmentsByTaskAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTaskAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonAppointmentsByTasksAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonAppointmentsByTasksAsync
  isExternal: true
  name: GetPersonAppointmentsByTasksAsync
  nameWithType: AppointmentAgent.GetPersonAppointmentsByTasksAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonAppointmentsByTasksAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTasksAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTasksAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetPersonAppointmentsByTasksAsync(Int32, Boolean, DateTime, DateTime, Int32, Int32[], RequestOptions)
  nameWithType: IAppointmentAgent.GetPersonAppointmentsByTasksAsync(Int32, Boolean, DateTime, DateTime, Int32, Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTasksAsync(System.Int32, System.Boolean, System.DateTime, System.DateTime, System.Int32, System.Int32[], SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: IAppointmentAgent.GetPersonAppointmentsByTasksAsync(Int32, Boolean, DateTime, DateTime, Int32, Int32(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTasksAsync(System.Int32, System.Boolean, System.DateTime, System.DateTime, System.Int32, System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetPersonAppointmentsByTasksAsync(Int32, Boolean, DateTime, DateTime, Int32, Int32(), RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTasksAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
    name: GetPersonAppointmentsByTasksAsync
    nameWithType: IAppointmentAgent.GetPersonAppointmentsByTasksAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTasksAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTasksAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
    name: GetPersonAppointmentsByTasksAsync
    nameWithType: IAppointmentAgent.GetPersonAppointmentsByTasksAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTasksAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonAppointmentsByTaskHeadingAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonAppointmentsByTaskHeadingAsync
  isExternal: true
  name: GetPersonAppointmentsByTaskHeadingAsync
  nameWithType: AppointmentAgent.GetPersonAppointmentsByTaskHeadingAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetPersonAppointmentsByTaskHeadingAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTaskHeadingAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTaskHeadingAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetPersonAppointmentsByTaskHeadingAsync(Int32, Boolean, DateTime, DateTime, Int32, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetPersonAppointmentsByTaskHeadingAsync(Int32, Boolean, DateTime, DateTime, Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTaskHeadingAsync(System.Int32, System.Boolean, System.DateTime, System.DateTime, System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTaskHeadingAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetPersonAppointmentsByTaskHeadingAsync
    nameWithType: IAppointmentAgent.GetPersonAppointmentsByTaskHeadingAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTaskHeadingAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTaskHeadingAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetPersonAppointmentsByTaskHeadingAsync
    nameWithType: IAppointmentAgent.GetPersonAppointmentsByTaskHeadingAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPersonAppointmentsByTaskHeadingAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectAppointmentsByTaskAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectAppointmentsByTaskAsync
  isExternal: true
  name: GetProjectAppointmentsByTaskAsync
  nameWithType: AppointmentAgent.GetProjectAppointmentsByTaskAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectAppointmentsByTaskAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTaskAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTaskAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetProjectAppointmentsByTaskAsync(Int32, DateTime, DateTime, Int32, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetProjectAppointmentsByTaskAsync(Int32, DateTime, DateTime, Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTaskAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTaskAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetProjectAppointmentsByTaskAsync
    nameWithType: IAppointmentAgent.GetProjectAppointmentsByTaskAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTaskAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTaskAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetProjectAppointmentsByTaskAsync
    nameWithType: IAppointmentAgent.GetProjectAppointmentsByTaskAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTaskAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectAppointmentsByTasksAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectAppointmentsByTasksAsync
  isExternal: true
  name: GetProjectAppointmentsByTasksAsync
  nameWithType: AppointmentAgent.GetProjectAppointmentsByTasksAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectAppointmentsByTasksAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTasksAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTasksAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetProjectAppointmentsByTasksAsync(Int32, DateTime, DateTime, Int32, Int32[], RequestOptions)
  nameWithType: IAppointmentAgent.GetProjectAppointmentsByTasksAsync(Int32, DateTime, DateTime, Int32, Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTasksAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, System.Int32[], SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: IAppointmentAgent.GetProjectAppointmentsByTasksAsync(Int32, DateTime, DateTime, Int32, Int32(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTasksAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetProjectAppointmentsByTasksAsync(Int32, DateTime, DateTime, Int32, Int32(), RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTasksAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
    name: GetProjectAppointmentsByTasksAsync
    nameWithType: IAppointmentAgent.GetProjectAppointmentsByTasksAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTasksAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTasksAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
    name: GetProjectAppointmentsByTasksAsync
    nameWithType: IAppointmentAgent.GetProjectAppointmentsByTasksAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTasksAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectAppointmentsByTaskHeadingAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectAppointmentsByTaskHeadingAsync
  isExternal: true
  name: GetProjectAppointmentsByTaskHeadingAsync
  nameWithType: AppointmentAgent.GetProjectAppointmentsByTaskHeadingAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectAppointmentsByTaskHeadingAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTaskHeadingAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTaskHeadingAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetProjectAppointmentsByTaskHeadingAsync(Int32, DateTime, DateTime, Int32, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetProjectAppointmentsByTaskHeadingAsync(Int32, DateTime, DateTime, Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTaskHeadingAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTaskHeadingAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetProjectAppointmentsByTaskHeadingAsync
    nameWithType: IAppointmentAgent.GetProjectAppointmentsByTaskHeadingAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTaskHeadingAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTaskHeadingAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetProjectAppointmentsByTaskHeadingAsync
    nameWithType: IAppointmentAgent.GetProjectAppointmentsByTaskHeadingAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectAppointmentsByTaskHeadingAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectMemberAppointmentsByTaskAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectMemberAppointmentsByTaskAsync
  isExternal: true
  name: GetProjectMemberAppointmentsByTaskAsync
  nameWithType: AppointmentAgent.GetProjectMemberAppointmentsByTaskAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectMemberAppointmentsByTaskAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTaskAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTaskAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetProjectMemberAppointmentsByTaskAsync(Int32, DateTime, DateTime, Int32, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetProjectMemberAppointmentsByTaskAsync(Int32, DateTime, DateTime, Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTaskAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTaskAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetProjectMemberAppointmentsByTaskAsync
    nameWithType: IAppointmentAgent.GetProjectMemberAppointmentsByTaskAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTaskAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTaskAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetProjectMemberAppointmentsByTaskAsync
    nameWithType: IAppointmentAgent.GetProjectMemberAppointmentsByTaskAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTaskAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectMemberAppointmentsByTasksAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectMemberAppointmentsByTasksAsync
  isExternal: true
  name: GetProjectMemberAppointmentsByTasksAsync
  nameWithType: AppointmentAgent.GetProjectMemberAppointmentsByTasksAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectMemberAppointmentsByTasksAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTasksAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTasksAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetProjectMemberAppointmentsByTasksAsync(Int32, DateTime, DateTime, Int32, Int32[], RequestOptions)
  nameWithType: IAppointmentAgent.GetProjectMemberAppointmentsByTasksAsync(Int32, DateTime, DateTime, Int32, Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTasksAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, System.Int32[], SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: IAppointmentAgent.GetProjectMemberAppointmentsByTasksAsync(Int32, DateTime, DateTime, Int32, Int32(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTasksAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetProjectMemberAppointmentsByTasksAsync(Int32, DateTime, DateTime, Int32, Int32(), RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTasksAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
    name: GetProjectMemberAppointmentsByTasksAsync
    nameWithType: IAppointmentAgent.GetProjectMemberAppointmentsByTasksAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTasksAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTasksAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
    name: GetProjectMemberAppointmentsByTasksAsync
    nameWithType: IAppointmentAgent.GetProjectMemberAppointmentsByTasksAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTasksAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectMemberAppointmentsByTaskHeadingAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectMemberAppointmentsByTaskHeadingAsync
  isExternal: true
  name: GetProjectMemberAppointmentsByTaskHeadingAsync
  nameWithType: AppointmentAgent.GetProjectMemberAppointmentsByTaskHeadingAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetProjectMemberAppointmentsByTaskHeadingAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTaskHeadingAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTaskHeadingAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetProjectMemberAppointmentsByTaskHeadingAsync(Int32, DateTime, DateTime, Int32, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetProjectMemberAppointmentsByTaskHeadingAsync(Int32, DateTime, DateTime, Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTaskHeadingAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTaskHeadingAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetProjectMemberAppointmentsByTaskHeadingAsync
    nameWithType: IAppointmentAgent.GetProjectMemberAppointmentsByTaskHeadingAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTaskHeadingAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTaskHeadingAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetProjectMemberAppointmentsByTaskHeadingAsync
    nameWithType: IAppointmentAgent.GetProjectMemberAppointmentsByTaskHeadingAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetProjectMemberAppointmentsByTaskHeadingAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetContactAppointmentsByTaskAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetContactAppointmentsByTaskAsync
  isExternal: true
  name: GetContactAppointmentsByTaskAsync
  nameWithType: AppointmentAgent.GetContactAppointmentsByTaskAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetContactAppointmentsByTaskAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTaskAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTaskAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetContactAppointmentsByTaskAsync(Int32, DateTime, DateTime, Int32, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetContactAppointmentsByTaskAsync(Int32, DateTime, DateTime, Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTaskAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTaskAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetContactAppointmentsByTaskAsync
    nameWithType: IAppointmentAgent.GetContactAppointmentsByTaskAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTaskAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTaskAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetContactAppointmentsByTaskAsync
    nameWithType: IAppointmentAgent.GetContactAppointmentsByTaskAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTaskAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetContactAppointmentsByTasksAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetContactAppointmentsByTasksAsync
  isExternal: true
  name: GetContactAppointmentsByTasksAsync
  nameWithType: AppointmentAgent.GetContactAppointmentsByTasksAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetContactAppointmentsByTasksAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTasksAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTasksAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetContactAppointmentsByTasksAsync(Int32, DateTime, DateTime, Int32, Int32[], RequestOptions)
  nameWithType: IAppointmentAgent.GetContactAppointmentsByTasksAsync(Int32, DateTime, DateTime, Int32, Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTasksAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, System.Int32[], SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: IAppointmentAgent.GetContactAppointmentsByTasksAsync(Int32, DateTime, DateTime, Int32, Int32(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTasksAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetContactAppointmentsByTasksAsync(Int32, DateTime, DateTime, Int32, Int32(), RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTasksAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
    name: GetContactAppointmentsByTasksAsync
    nameWithType: IAppointmentAgent.GetContactAppointmentsByTasksAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTasksAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTasksAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
    name: GetContactAppointmentsByTasksAsync
    nameWithType: IAppointmentAgent.GetContactAppointmentsByTasksAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTasksAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetContactAppointmentsByTaskHeadingAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetContactAppointmentsByTaskHeadingAsync
  isExternal: true
  name: GetContactAppointmentsByTaskHeadingAsync
  nameWithType: AppointmentAgent.GetContactAppointmentsByTaskHeadingAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetContactAppointmentsByTaskHeadingAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTaskHeadingAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTaskHeadingAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetContactAppointmentsByTaskHeadingAsync(Int32, DateTime, DateTime, Int32, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetContactAppointmentsByTaskHeadingAsync(Int32, DateTime, DateTime, Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTaskHeadingAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTaskHeadingAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetContactAppointmentsByTaskHeadingAsync
    nameWithType: IAppointmentAgent.GetContactAppointmentsByTaskHeadingAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTaskHeadingAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTaskHeadingAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetContactAppointmentsByTaskHeadingAsync
    nameWithType: IAppointmentAgent.GetContactAppointmentsByTaskHeadingAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetContactAppointmentsByTaskHeadingAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetPublishedAppointmentAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetPublishedAppointmentAsync
  isExternal: true
  name: GetPublishedAppointmentAsync
  nameWithType: AppointmentAgent.GetPublishedAppointmentAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetPublishedAppointmentAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPublishedAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetPublishedAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetPublishedAppointmentAsync(Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetPublishedAppointmentAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPublishedAppointmentAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPublishedAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetPublishedAppointmentAsync
    nameWithType: IAppointmentAgent.GetPublishedAppointmentAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPublishedAppointmentAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPublishedAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetPublishedAppointmentAsync
    nameWithType: IAppointmentAgent.GetPublishedAppointmentAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPublishedAppointmentAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetPublishedAppointmentsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetPublishedAppointmentsAsync
  isExternal: true
  name: GetPublishedAppointmentsAsync
  nameWithType: AppointmentAgent.GetPublishedAppointmentsAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetPublishedAppointmentsAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPublishedAppointmentsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetPublishedAppointmentsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetPublishedAppointmentsAsync(Int32[], RequestOptions)
  nameWithType: IAppointmentAgent.GetPublishedAppointmentsAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPublishedAppointmentsAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: IAppointmentAgent.GetPublishedAppointmentsAsync(Int32(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPublishedAppointmentsAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetPublishedAppointmentsAsync(Int32(), RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPublishedAppointmentsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
    name: GetPublishedAppointmentsAsync
    nameWithType: IAppointmentAgent.GetPublishedAppointmentsAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPublishedAppointmentsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPublishedAppointmentsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
    name: GetPublishedAppointmentsAsync
    nameWithType: IAppointmentAgent.GetPublishedAppointmentsAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPublishedAppointmentsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetMyPublishedAppointmentsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetMyPublishedAppointmentsAsync
  isExternal: true
  name: GetMyPublishedAppointmentsAsync
  nameWithType: AppointmentAgent.GetMyPublishedAppointmentsAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetMyPublishedAppointmentsAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyPublishedAppointmentsAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyPublishedAppointmentsAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetMyPublishedAppointmentsAsync(RequestOptions)
  nameWithType: IAppointmentAgent.GetMyPublishedAppointmentsAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyPublishedAppointmentsAsync(SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyPublishedAppointmentsAsync(SuperOffice.WebApi.RequestOptions)
    name: GetMyPublishedAppointmentsAsync
    nameWithType: IAppointmentAgent.GetMyPublishedAppointmentsAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyPublishedAppointmentsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyPublishedAppointmentsAsync(SuperOffice.WebApi.RequestOptions)
    name: GetMyPublishedAppointmentsAsync
    nameWithType: IAppointmentAgent.GetMyPublishedAppointmentsAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMyPublishedAppointmentsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetPublishedProjectAppointmentsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetPublishedProjectAppointmentsAsync
  isExternal: true
  name: GetPublishedProjectAppointmentsAsync
  nameWithType: AppointmentAgent.GetPublishedProjectAppointmentsAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetPublishedProjectAppointmentsAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPublishedProjectAppointmentsAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetPublishedProjectAppointmentsAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetPublishedProjectAppointmentsAsync(Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetPublishedProjectAppointmentsAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPublishedProjectAppointmentsAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPublishedProjectAppointmentsAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetPublishedProjectAppointmentsAsync
    nameWithType: IAppointmentAgent.GetPublishedProjectAppointmentsAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPublishedProjectAppointmentsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPublishedProjectAppointmentsAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetPublishedProjectAppointmentsAsync
    nameWithType: IAppointmentAgent.GetPublishedProjectAppointmentsAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetPublishedProjectAppointmentsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentsByTaskHeadingAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentsByTaskHeadingAsync
  isExternal: true
  name: GetAppointmentsByTaskHeadingAsync
  nameWithType: AppointmentAgent.GetAppointmentsByTaskHeadingAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentsByTaskHeadingAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentsByTaskHeadingAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentsByTaskHeadingAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetAppointmentsByTaskHeadingAsync(Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetAppointmentsByTaskHeadingAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentsByTaskHeadingAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentsByTaskHeadingAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetAppointmentsByTaskHeadingAsync
    nameWithType: IAppointmentAgent.GetAppointmentsByTaskHeadingAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentsByTaskHeadingAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentsByTaskHeadingAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetAppointmentsByTaskHeadingAsync
    nameWithType: IAppointmentAgent.GetAppointmentsByTaskHeadingAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentsByTaskHeadingAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetAssociateDiaryAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetAssociateDiaryAsync
  isExternal: true
  name: GetAssociateDiaryAsync
  nameWithType: AppointmentAgent.GetAssociateDiaryAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetAssociateDiaryAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociateDiaryAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociateDiaryAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetAssociateDiaryAsync(Int32, DateTime, DateTime, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetAssociateDiaryAsync(Int32, DateTime, DateTime, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociateDiaryAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociateDiaryAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetAssociateDiaryAsync
    nameWithType: IAppointmentAgent.GetAssociateDiaryAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociateDiaryAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociateDiaryAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetAssociateDiaryAsync
    nameWithType: IAppointmentAgent.GetAssociateDiaryAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociateDiaryAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetDiaryByGroupAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetDiaryByGroupAsync
  isExternal: true
  name: GetDiaryByGroupAsync
  nameWithType: AppointmentAgent.GetDiaryByGroupAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetDiaryByGroupAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetDiaryByGroupAsync(System.Int32,System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetDiaryByGroupAsync(System.Int32,System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetDiaryByGroupAsync(Int32, Int32, DateTime, DateTime, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetDiaryByGroupAsync(Int32, Int32, DateTime, DateTime, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetDiaryByGroupAsync(System.Int32, System.Int32, System.DateTime, System.DateTime, System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetDiaryByGroupAsync(System.Int32,System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetDiaryByGroupAsync
    nameWithType: IAppointmentAgent.GetDiaryByGroupAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetDiaryByGroupAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetDiaryByGroupAsync(System.Int32,System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetDiaryByGroupAsync
    nameWithType: IAppointmentAgent.GetDiaryByGroupAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetDiaryByGroupAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.UpdateAppointmentAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.UpdateAppointmentAsync
  isExternal: true
  name: UpdateAppointmentAsync
  nameWithType: AppointmentAgent.UpdateAppointmentAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.UpdateAppointmentAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: UpdateAppointmentAsync(Int32, DateTime, DateTime, Int32, Int32, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.UpdateAppointmentAsync(Int32, DateTime, DateTime, Int32, Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentAsync(System.Int32, System.DateTime, System.DateTime, System.Int32, System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: UpdateAppointmentAsync
    nameWithType: IAppointmentAgent.UpdateAppointmentAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: UpdateAppointmentAsync
    nameWithType: IAppointmentAgent.UpdateAppointmentAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.UpdateAppointmentWithModeAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.UpdateAppointmentWithModeAsync
  isExternal: true
  name: UpdateAppointmentWithModeAsync
  nameWithType: AppointmentAgent.UpdateAppointmentWithModeAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.UpdateAppointmentWithModeAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentWithModeAsync(System.Int32,System.DateTime,System.DateTime,SuperOffice.WebApi.Data.AppointmentStatus,SuperOffice.WebApi.Data.AppointmentType,System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentWithModeAsync(System.Int32,System.DateTime,System.DateTime,SuperOffice.WebApi.Data.AppointmentStatus,SuperOffice.WebApi.Data.AppointmentType,System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: UpdateAppointmentWithModeAsync(Int32, DateTime, DateTime, AppointmentStatus, AppointmentType, Int32, RecurrenceUpdateMode, RequestOptions)
  nameWithType: IAppointmentAgent.UpdateAppointmentWithModeAsync(Int32, DateTime, DateTime, AppointmentStatus, AppointmentType, Int32, RecurrenceUpdateMode, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentWithModeAsync(System.Int32, System.DateTime, System.DateTime, SuperOffice.WebApi.Data.AppointmentStatus, SuperOffice.WebApi.Data.AppointmentType, System.Int32, SuperOffice.WebApi.Data.RecurrenceUpdateMode, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentWithModeAsync(System.Int32,System.DateTime,System.DateTime,SuperOffice.WebApi.Data.AppointmentStatus,SuperOffice.WebApi.Data.AppointmentType,System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
    name: UpdateAppointmentWithModeAsync
    nameWithType: IAppointmentAgent.UpdateAppointmentWithModeAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentWithModeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.AppointmentStatus
    name: AppointmentStatus
    nameWithType: AppointmentStatus
    fullName: SuperOffice.WebApi.Data.AppointmentStatus
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.AppointmentType
    name: AppointmentType
    nameWithType: AppointmentType
    fullName: SuperOffice.WebApi.Data.AppointmentType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    name: RecurrenceUpdateMode
    nameWithType: RecurrenceUpdateMode
    fullName: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentWithModeAsync(System.Int32,System.DateTime,System.DateTime,SuperOffice.WebApi.Data.AppointmentStatus,SuperOffice.WebApi.Data.AppointmentType,System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,SuperOffice.WebApi.RequestOptions)
    name: UpdateAppointmentWithModeAsync
    nameWithType: IAppointmentAgent.UpdateAppointmentWithModeAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentWithModeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.AppointmentStatus
    name: AppointmentStatus
    nameWithType: AppointmentStatus
    fullName: SuperOffice.WebApi.Data.AppointmentStatus
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.AppointmentType
    name: AppointmentType
    nameWithType: AppointmentType
    fullName: SuperOffice.WebApi.Data.AppointmentType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    name: RecurrenceUpdateMode
    nameWithType: RecurrenceUpdateMode
    fullName: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Data.AppointmentStatus
  commentId: T:SuperOffice.WebApi.Data.AppointmentStatus
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: AppointmentStatus
  nameWithType: AppointmentStatus
  fullName: SuperOffice.WebApi.Data.AppointmentStatus
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.UpdateAppointmentWithModeAndEmailAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.UpdateAppointmentWithModeAndEmailAsync
  isExternal: true
  name: UpdateAppointmentWithModeAndEmailAsync
  nameWithType: AppointmentAgent.UpdateAppointmentWithModeAndEmailAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.UpdateAppointmentWithModeAndEmailAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentWithModeAndEmailAsync(System.Int32,System.DateTime,System.DateTime,SuperOffice.WebApi.Data.AppointmentStatus,SuperOffice.WebApi.Data.AppointmentType,System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentWithModeAndEmailAsync(System.Int32,System.DateTime,System.DateTime,SuperOffice.WebApi.Data.AppointmentStatus,SuperOffice.WebApi.Data.AppointmentType,System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: UpdateAppointmentWithModeAndEmailAsync(Int32, DateTime, DateTime, AppointmentStatus, AppointmentType, Int32, RecurrenceUpdateMode, Boolean, EMailConnectionInfo, EMailConnectionInfo, RequestOptions)
  nameWithType: IAppointmentAgent.UpdateAppointmentWithModeAndEmailAsync(Int32, DateTime, DateTime, AppointmentStatus, AppointmentType, Int32, RecurrenceUpdateMode, Boolean, EMailConnectionInfo, EMailConnectionInfo, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentWithModeAndEmailAsync(System.Int32, System.DateTime, System.DateTime, SuperOffice.WebApi.Data.AppointmentStatus, SuperOffice.WebApi.Data.AppointmentType, System.Int32, SuperOffice.WebApi.Data.RecurrenceUpdateMode, System.Boolean, SuperOffice.WebApi.Data.EMailConnectionInfo, SuperOffice.WebApi.Data.EMailConnectionInfo, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentWithModeAndEmailAsync(System.Int32,System.DateTime,System.DateTime,SuperOffice.WebApi.Data.AppointmentStatus,SuperOffice.WebApi.Data.AppointmentType,System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
    name: UpdateAppointmentWithModeAndEmailAsync
    nameWithType: IAppointmentAgent.UpdateAppointmentWithModeAndEmailAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentWithModeAndEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.AppointmentStatus
    name: AppointmentStatus
    nameWithType: AppointmentStatus
    fullName: SuperOffice.WebApi.Data.AppointmentStatus
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.AppointmentType
    name: AppointmentType
    nameWithType: AppointmentType
    fullName: SuperOffice.WebApi.Data.AppointmentType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    name: RecurrenceUpdateMode
    nameWithType: RecurrenceUpdateMode
    fullName: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.EMailConnectionInfo
    name: EMailConnectionInfo
    nameWithType: EMailConnectionInfo
    fullName: SuperOffice.WebApi.Data.EMailConnectionInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.EMailConnectionInfo
    name: EMailConnectionInfo
    nameWithType: EMailConnectionInfo
    fullName: SuperOffice.WebApi.Data.EMailConnectionInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentWithModeAndEmailAsync(System.Int32,System.DateTime,System.DateTime,SuperOffice.WebApi.Data.AppointmentStatus,SuperOffice.WebApi.Data.AppointmentType,System.Int32,SuperOffice.WebApi.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
    name: UpdateAppointmentWithModeAndEmailAsync
    nameWithType: IAppointmentAgent.UpdateAppointmentWithModeAndEmailAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.UpdateAppointmentWithModeAndEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.AppointmentStatus
    name: AppointmentStatus
    nameWithType: AppointmentStatus
    fullName: SuperOffice.WebApi.Data.AppointmentStatus
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.AppointmentType
    name: AppointmentType
    nameWithType: AppointmentType
    fullName: SuperOffice.WebApi.Data.AppointmentType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    name: RecurrenceUpdateMode
    nameWithType: RecurrenceUpdateMode
    fullName: SuperOffice.WebApi.Data.RecurrenceUpdateMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.EMailConnectionInfo
    name: EMailConnectionInfo
    nameWithType: EMailConnectionInfo
    fullName: SuperOffice.WebApi.Data.EMailConnectionInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.EMailConnectionInfo
    name: EMailConnectionInfo
    nameWithType: EMailConnectionInfo
    fullName: SuperOffice.WebApi.Data.EMailConnectionInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetAssociatesDiaryAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetAssociatesDiaryAsync
  isExternal: true
  name: GetAssociatesDiaryAsync
  nameWithType: AppointmentAgent.GetAssociatesDiaryAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetAssociatesDiaryAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociatesDiaryAsync(System.Int32[],System.DateTime,System.DateTime,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociatesDiaryAsync(System.Int32[],System.DateTime,System.DateTime,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetAssociatesDiaryAsync(Int32[], DateTime, DateTime, RequestOptions)
  nameWithType: IAppointmentAgent.GetAssociatesDiaryAsync(Int32[], DateTime, DateTime, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociatesDiaryAsync(System.Int32[], System.DateTime, System.DateTime, SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: IAppointmentAgent.GetAssociatesDiaryAsync(Int32(), DateTime, DateTime, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociatesDiaryAsync(System.Int32(), System.DateTime, System.DateTime, SuperOffice.WebApi.RequestOptions)
  name.vb: GetAssociatesDiaryAsync(Int32(), DateTime, DateTime, RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociatesDiaryAsync(System.Int32[],System.DateTime,System.DateTime,SuperOffice.WebApi.RequestOptions)
    name: GetAssociatesDiaryAsync
    nameWithType: IAppointmentAgent.GetAssociatesDiaryAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociatesDiaryAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociatesDiaryAsync(System.Int32[],System.DateTime,System.DateTime,SuperOffice.WebApi.RequestOptions)
    name: GetAssociatesDiaryAsync
    nameWithType: IAppointmentAgent.GetAssociatesDiaryAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociatesDiaryAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetAssociatesDiaryInfoAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetAssociatesDiaryInfoAsync
  isExternal: true
  name: GetAssociatesDiaryInfoAsync
  nameWithType: AppointmentAgent.GetAssociatesDiaryInfoAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetAssociatesDiaryInfoAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociatesDiaryInfoAsync(System.Int32[],System.DateTime,System.DateTime,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociatesDiaryInfoAsync(System.Int32[],System.DateTime,System.DateTime,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetAssociatesDiaryInfoAsync(Int32[], DateTime, DateTime, RequestOptions)
  nameWithType: IAppointmentAgent.GetAssociatesDiaryInfoAsync(Int32[], DateTime, DateTime, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociatesDiaryInfoAsync(System.Int32[], System.DateTime, System.DateTime, SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: IAppointmentAgent.GetAssociatesDiaryInfoAsync(Int32(), DateTime, DateTime, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociatesDiaryInfoAsync(System.Int32(), System.DateTime, System.DateTime, SuperOffice.WebApi.RequestOptions)
  name.vb: GetAssociatesDiaryInfoAsync(Int32(), DateTime, DateTime, RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociatesDiaryInfoAsync(System.Int32[],System.DateTime,System.DateTime,SuperOffice.WebApi.RequestOptions)
    name: GetAssociatesDiaryInfoAsync
    nameWithType: IAppointmentAgent.GetAssociatesDiaryInfoAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociatesDiaryInfoAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociatesDiaryInfoAsync(System.Int32[],System.DateTime,System.DateTime,SuperOffice.WebApi.RequestOptions)
    name: GetAssociatesDiaryInfoAsync
    nameWithType: IAppointmentAgent.GetAssociatesDiaryInfoAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAssociatesDiaryInfoAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentInfo[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentInfo[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<AppointmentInfo[]>
  nameWithType: Task<AppointmentInfo[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.AppointmentInfo[]>
  nameWithType.vb: Task(Of AppointmentInfo())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.AppointmentInfo())
  name.vb: Task(Of AppointmentInfo())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.AppointmentInfo
    name: AppointmentInfo
    nameWithType: AppointmentInfo
    fullName: SuperOffice.WebApi.Data.AppointmentInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.AppointmentInfo
    name: AppointmentInfo
    nameWithType: AppointmentInfo
    fullName: SuperOffice.WebApi.Data.AppointmentInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentRecordsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentRecordsAsync
  isExternal: true
  name: GetAppointmentRecordsAsync
  nameWithType: AppointmentAgent.GetAppointmentRecordsAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetAppointmentRecordsAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentRecordsAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentRecordsAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetAppointmentRecordsAsync(Int32, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetAppointmentRecordsAsync(Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentRecordsAsync(System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentRecordsAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetAppointmentRecordsAsync
    nameWithType: IAppointmentAgent.GetAppointmentRecordsAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentRecordsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentRecordsAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetAppointmentRecordsAsync
    nameWithType: IAppointmentAgent.GetAppointmentRecordsAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAppointmentRecordsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetMySyncAppointmentsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetMySyncAppointmentsAsync
  isExternal: true
  name: GetMySyncAppointmentsAsync
  nameWithType: AppointmentAgent.GetMySyncAppointmentsAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetMySyncAppointmentsAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMySyncAppointmentsAsync(System.DateTime,System.DateTime,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetMySyncAppointmentsAsync(System.DateTime,System.DateTime,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetMySyncAppointmentsAsync(DateTime, DateTime, RequestOptions)
  nameWithType: IAppointmentAgent.GetMySyncAppointmentsAsync(DateTime, DateTime, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMySyncAppointmentsAsync(System.DateTime, System.DateTime, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMySyncAppointmentsAsync(System.DateTime,System.DateTime,SuperOffice.WebApi.RequestOptions)
    name: GetMySyncAppointmentsAsync
    nameWithType: IAppointmentAgent.GetMySyncAppointmentsAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMySyncAppointmentsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMySyncAppointmentsAsync(System.DateTime,System.DateTime,SuperOffice.WebApi.RequestOptions)
    name: GetMySyncAppointmentsAsync
    nameWithType: IAppointmentAgent.GetMySyncAppointmentsAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetMySyncAppointmentsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentSyncData[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AppointmentSyncData[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<AppointmentSyncData[]>
  nameWithType: Task<AppointmentSyncData[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.AppointmentSyncData[]>
  nameWithType.vb: Task(Of AppointmentSyncData())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.AppointmentSyncData())
  name.vb: Task(Of AppointmentSyncData())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.AppointmentSyncData
    name: AppointmentSyncData
    nameWithType: AppointmentSyncData
    fullName: SuperOffice.WebApi.Data.AppointmentSyncData
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.AppointmentSyncData
    name: AppointmentSyncData
    nameWithType: AppointmentSyncData
    fullName: SuperOffice.WebApi.Data.AppointmentSyncData
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetDayInformationListByDatesAndAssociateAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetDayInformationListByDatesAndAssociateAsync
  isExternal: true
  name: GetDayInformationListByDatesAndAssociateAsync
  nameWithType: AppointmentAgent.GetDayInformationListByDatesAndAssociateAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetDayInformationListByDatesAndAssociateAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetDayInformationListByDatesAndAssociateAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetDayInformationListByDatesAndAssociateAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetDayInformationListByDatesAndAssociateAsync(DateTime, DateTime, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetDayInformationListByDatesAndAssociateAsync(DateTime, DateTime, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetDayInformationListByDatesAndAssociateAsync(System.DateTime, System.DateTime, System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetDayInformationListByDatesAndAssociateAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetDayInformationListByDatesAndAssociateAsync
    nameWithType: IAppointmentAgent.GetDayInformationListByDatesAndAssociateAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetDayInformationListByDatesAndAssociateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetDayInformationListByDatesAndAssociateAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetDayInformationListByDatesAndAssociateAsync
    nameWithType: IAppointmentAgent.GetDayInformationListByDatesAndAssociateAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetDayInformationListByDatesAndAssociateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DayInformationListItem[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DayInformationListItem[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<DayInformationListItem[]>
  nameWithType: Task<DayInformationListItem[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.DayInformationListItem[]>
  nameWithType.vb: Task(Of DayInformationListItem())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.DayInformationListItem())
  name.vb: Task(Of DayInformationListItem())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.DayInformationListItem
    name: DayInformationListItem
    nameWithType: DayInformationListItem
    fullName: SuperOffice.WebApi.Data.DayInformationListItem
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.DayInformationListItem
    name: DayInformationListItem
    nameWithType: DayInformationListItem
    fullName: SuperOffice.WebApi.Data.DayInformationListItem
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetActivityInformationListByDatesAndAssociateAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetActivityInformationListByDatesAndAssociateAsync
  isExternal: true
  name: GetActivityInformationListByDatesAndAssociateAsync
  nameWithType: AppointmentAgent.GetActivityInformationListByDatesAndAssociateAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetActivityInformationListByDatesAndAssociateAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetActivityInformationListByDatesAndAssociateAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetActivityInformationListByDatesAndAssociateAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetActivityInformationListByDatesAndAssociateAsync(DateTime, DateTime, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetActivityInformationListByDatesAndAssociateAsync(DateTime, DateTime, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetActivityInformationListByDatesAndAssociateAsync(System.DateTime, System.DateTime, System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetActivityInformationListByDatesAndAssociateAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetActivityInformationListByDatesAndAssociateAsync
    nameWithType: IAppointmentAgent.GetActivityInformationListByDatesAndAssociateAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetActivityInformationListByDatesAndAssociateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetActivityInformationListByDatesAndAssociateAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetActivityInformationListByDatesAndAssociateAsync
    nameWithType: IAppointmentAgent.GetActivityInformationListByDatesAndAssociateAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetActivityInformationListByDatesAndAssociateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ActivityInformationListItem[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ActivityInformationListItem[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ActivityInformationListItem[]>
  nameWithType: Task<ActivityInformationListItem[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.ActivityInformationListItem[]>
  nameWithType.vb: Task(Of ActivityInformationListItem())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.ActivityInformationListItem())
  name.vb: Task(Of ActivityInformationListItem())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.ActivityInformationListItem
    name: ActivityInformationListItem
    nameWithType: ActivityInformationListItem
    fullName: SuperOffice.WebApi.Data.ActivityInformationListItem
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.ActivityInformationListItem
    name: ActivityInformationListItem
    nameWithType: ActivityInformationListItem
    fullName: SuperOffice.WebApi.Data.ActivityInformationListItem
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetRedLetterInformationListByDatesAndAssociateAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetRedLetterInformationListByDatesAndAssociateAsync
  isExternal: true
  name: GetRedLetterInformationListByDatesAndAssociateAsync
  nameWithType: AppointmentAgent.GetRedLetterInformationListByDatesAndAssociateAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetRedLetterInformationListByDatesAndAssociateAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetRedLetterInformationListByDatesAndAssociateAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetRedLetterInformationListByDatesAndAssociateAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetRedLetterInformationListByDatesAndAssociateAsync(DateTime, DateTime, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetRedLetterInformationListByDatesAndAssociateAsync(DateTime, DateTime, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetRedLetterInformationListByDatesAndAssociateAsync(System.DateTime, System.DateTime, System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetRedLetterInformationListByDatesAndAssociateAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetRedLetterInformationListByDatesAndAssociateAsync
    nameWithType: IAppointmentAgent.GetRedLetterInformationListByDatesAndAssociateAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetRedLetterInformationListByDatesAndAssociateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetRedLetterInformationListByDatesAndAssociateAsync(System.DateTime,System.DateTime,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetRedLetterInformationListByDatesAndAssociateAsync
    nameWithType: IAppointmentAgent.GetRedLetterInformationListByDatesAndAssociateAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetRedLetterInformationListByDatesAndAssociateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.RedLetterInformationListItem[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.RedLetterInformationListItem[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<RedLetterInformationListItem[]>
  nameWithType: Task<RedLetterInformationListItem[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.RedLetterInformationListItem[]>
  nameWithType.vb: Task(Of RedLetterInformationListItem())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.RedLetterInformationListItem())
  name.vb: Task(Of RedLetterInformationListItem())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.RedLetterInformationListItem
    name: RedLetterInformationListItem
    nameWithType: RedLetterInformationListItem
    fullName: SuperOffice.WebApi.Data.RedLetterInformationListItem
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.RedLetterInformationListItem
    name: RedLetterInformationListItem
    nameWithType: RedLetterInformationListItem
    fullName: SuperOffice.WebApi.Data.RedLetterInformationListItem
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetAlarmsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetAlarmsAsync
  isExternal: true
  name: GetAlarmsAsync
  nameWithType: AppointmentAgent.GetAlarmsAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetAlarmsAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAlarmsAsync(System.Boolean,System.Boolean,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetAlarmsAsync(System.Boolean,System.Boolean,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetAlarmsAsync(Boolean, Boolean, Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetAlarmsAsync(Boolean, Boolean, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAlarmsAsync(System.Boolean, System.Boolean, System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAlarmsAsync(System.Boolean,System.Boolean,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetAlarmsAsync
    nameWithType: IAppointmentAgent.GetAlarmsAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAlarmsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAlarmsAsync(System.Boolean,System.Boolean,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetAlarmsAsync
    nameWithType: IAppointmentAgent.GetAlarmsAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetAlarmsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.MultiAlarmData}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.MultiAlarmData}'
  definition: System.Threading.Tasks.Task`1
  name: Task<MultiAlarmData>
  nameWithType: Task<MultiAlarmData>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.MultiAlarmData>
  nameWithType.vb: Task(Of MultiAlarmData)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.MultiAlarmData)
  name.vb: Task(Of MultiAlarmData)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.MultiAlarmData
    name: MultiAlarmData
    nameWithType: MultiAlarmData
    fullName: SuperOffice.WebApi.Data.MultiAlarmData
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.MultiAlarmData
    name: MultiAlarmData
    nameWithType: MultiAlarmData
    fullName: SuperOffice.WebApi.Data.MultiAlarmData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetNextAvailableTimeAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetNextAvailableTimeAsync
  isExternal: true
  name: GetNextAvailableTimeAsync
  nameWithType: AppointmentAgent.GetNextAvailableTimeAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetNextAvailableTimeAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetNextAvailableTimeAsync(System.Int32[],System.DateTime,System.DateTime,System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetNextAvailableTimeAsync(System.Int32[],System.DateTime,System.DateTime,System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetNextAvailableTimeAsync(Int32[], DateTime, DateTime, Int32, Boolean, RequestOptions)
  nameWithType: IAppointmentAgent.GetNextAvailableTimeAsync(Int32[], DateTime, DateTime, Int32, Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetNextAvailableTimeAsync(System.Int32[], System.DateTime, System.DateTime, System.Int32, System.Boolean, SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: IAppointmentAgent.GetNextAvailableTimeAsync(Int32(), DateTime, DateTime, Int32, Boolean, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IAppointmentAgent.GetNextAvailableTimeAsync(System.Int32(), System.DateTime, System.DateTime, System.Int32, System.Boolean, SuperOffice.WebApi.RequestOptions)
  name.vb: GetNextAvailableTimeAsync(Int32(), DateTime, DateTime, Int32, Boolean, RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetNextAvailableTimeAsync(System.Int32[],System.DateTime,System.DateTime,System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
    name: GetNextAvailableTimeAsync
    nameWithType: IAppointmentAgent.GetNextAvailableTimeAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetNextAvailableTimeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetNextAvailableTimeAsync(System.Int32[],System.DateTime,System.DateTime,System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
    name: GetNextAvailableTimeAsync
    nameWithType: IAppointmentAgent.GetNextAvailableTimeAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetNextAvailableTimeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.NextAvailableTime[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.NextAvailableTime[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<NextAvailableTime[]>
  nameWithType: Task<NextAvailableTime[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.NextAvailableTime[]>
  nameWithType.vb: Task(Of NextAvailableTime())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.NextAvailableTime())
  name.vb: Task(Of NextAvailableTime())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.NextAvailableTime
    name: NextAvailableTime
    nameWithType: NextAvailableTime
    fullName: SuperOffice.WebApi.Data.NextAvailableTime
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.NextAvailableTime
    name: NextAvailableTime
    nameWithType: NextAvailableTime
    fullName: SuperOffice.WebApi.Data.NextAvailableTime
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GenerateLeadAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GenerateLeadAsync
  isExternal: true
  name: GenerateLeadAsync
  nameWithType: AppointmentAgent.GenerateLeadAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GenerateLeadAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GenerateLeadAsync(System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GenerateLeadAsync(System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GenerateLeadAsync(Int32, String, String, Int32, String, String, String, String, String, String, String, String, RequestOptions)
  nameWithType: IAppointmentAgent.GenerateLeadAsync(Int32, String, String, Int32, String, String, String, String, String, String, String, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GenerateLeadAsync(System.Int32, System.String, System.String, System.Int32, System.String, System.String, System.String, System.String, System.String, System.String, System.String, System.String, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GenerateLeadAsync(System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
    name: GenerateLeadAsync
    nameWithType: IAppointmentAgent.GenerateLeadAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GenerateLeadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GenerateLeadAsync(System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
    name: GenerateLeadAsync
    nameWithType: IAppointmentAgent.GenerateLeadAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GenerateLeadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SalesActivity}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SalesActivity}'
  definition: System.Threading.Tasks.Task`1
  name: Task<SalesActivity>
  nameWithType: Task<SalesActivity>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.SalesActivity>
  nameWithType.vb: Task(Of SalesActivity)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.SalesActivity)
  name.vb: Task(Of SalesActivity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.SalesActivity
    name: SalesActivity
    nameWithType: SalesActivity
    fullName: SuperOffice.WebApi.Data.SalesActivity
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.SalesActivity
    name: SalesActivity
    nameWithType: SalesActivity
    fullName: SuperOffice.WebApi.Data.SalesActivity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.RequestForInfoAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.RequestForInfoAsync
  isExternal: true
  name: RequestForInfoAsync
  nameWithType: AppointmentAgent.RequestForInfoAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.RequestForInfoAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.RequestForInfoAsync(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.RequestForInfoAsync(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: RequestForInfoAsync(Int32, String, String, String, String, String, String, String, RequestOptions)
  nameWithType: IAppointmentAgent.RequestForInfoAsync(Int32, String, String, String, String, String, String, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.RequestForInfoAsync(System.Int32, System.String, System.String, System.String, System.String, System.String, System.String, System.String, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.RequestForInfoAsync(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
    name: RequestForInfoAsync
    nameWithType: IAppointmentAgent.RequestForInfoAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.RequestForInfoAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.RequestForInfoAsync(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
    name: RequestForInfoAsync
    nameWithType: IAppointmentAgent.RequestForInfoAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.RequestForInfoAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetSuggestedAppointmentAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetSuggestedAppointmentAsync
  isExternal: true
  name: GetSuggestedAppointmentAsync
  nameWithType: AppointmentAgent.GetSuggestedAppointmentAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetSuggestedAppointmentAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetSuggestedAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetSuggestedAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetSuggestedAppointmentAsync(Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetSuggestedAppointmentAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetSuggestedAppointmentAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetSuggestedAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetSuggestedAppointmentAsync
    nameWithType: IAppointmentAgent.GetSuggestedAppointmentAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetSuggestedAppointmentAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetSuggestedAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetSuggestedAppointmentAsync
    nameWithType: IAppointmentAgent.GetSuggestedAppointmentAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetSuggestedAppointmentAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetSuggestedAppointmentEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetSuggestedAppointmentEntityAsync
  isExternal: true
  name: GetSuggestedAppointmentEntityAsync
  nameWithType: AppointmentAgent.GetSuggestedAppointmentEntityAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetSuggestedAppointmentEntityAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetSuggestedAppointmentEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetSuggestedAppointmentEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetSuggestedAppointmentEntityAsync(Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetSuggestedAppointmentEntityAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetSuggestedAppointmentEntityAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetSuggestedAppointmentEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetSuggestedAppointmentEntityAsync
    nameWithType: IAppointmentAgent.GetSuggestedAppointmentEntityAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetSuggestedAppointmentEntityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetSuggestedAppointmentEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetSuggestedAppointmentEntityAsync
    nameWithType: IAppointmentAgent.GetSuggestedAppointmentEntityAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetSuggestedAppointmentEntityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetTaskListItemAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetTaskListItemAsync
  isExternal: true
  name: GetTaskListItemAsync
  nameWithType: AppointmentAgent.GetTaskListItemAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetTaskListItemAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetTaskListItemAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetTaskListItemAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetTaskListItemAsync(Int32, RequestOptions)
  nameWithType: IAppointmentAgent.GetTaskListItemAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetTaskListItemAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetTaskListItemAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetTaskListItemAsync
    nameWithType: IAppointmentAgent.GetTaskListItemAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetTaskListItemAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetTaskListItemAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetTaskListItemAsync
    nameWithType: IAppointmentAgent.GetTaskListItemAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetTaskListItemAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AppointmentAgent.GetTaskListItemsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.AppointmentAgent.GetTaskListItemsAsync
  isExternal: true
  name: GetTaskListItemsAsync
  nameWithType: AppointmentAgent.GetTaskListItemsAsync
  fullName: SuperOffice.WebApi.Agents.AppointmentAgent.GetTaskListItemsAsync
- uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetTaskListItemsAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IAppointmentAgent.GetTaskListItemsAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IAppointmentAgent
  isExternal: true
  name: GetTaskListItemsAsync(Boolean, RequestOptions)
  nameWithType: IAppointmentAgent.GetTaskListItemsAsync(Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetTaskListItemsAsync(System.Boolean, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetTaskListItemsAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
    name: GetTaskListItemsAsync
    nameWithType: IAppointmentAgent.GetTaskListItemsAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetTaskListItemsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.IAppointmentAgent.GetTaskListItemsAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
    name: GetTaskListItemsAsync
    nameWithType: IAppointmentAgent.GetTaskListItemsAsync
    fullName: SuperOffice.WebApi.Agents.IAppointmentAgent.GetTaskListItemsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TaskListItem[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TaskListItem[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<TaskListItem[]>
  nameWithType: Task<TaskListItem[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.TaskListItem[]>
  nameWithType.vb: Task(Of TaskListItem())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.TaskListItem())
  name.vb: Task(Of TaskListItem())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.TaskListItem
    name: TaskListItem
    nameWithType: TaskListItem
    fullName: SuperOffice.WebApi.Data.TaskListItem
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.TaskListItem
    name: TaskListItem
    nameWithType: TaskListItem
    fullName: SuperOffice.WebApi.Data.TaskListItem
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
