### YamlMime:ManagedReference
items:
- uid: SuperOffice.WebApi.Agents.IEMailAgent
  commentId: T:SuperOffice.WebApi.Agents.IEMailAgent
  id: IEMailAgent
  parent: SuperOffice.WebApi.Agents
  children:
  - SuperOffice.WebApi.Agents.IEMailAgent.AuthenticateAsync(SuperOffice.WebApi.Data.EMailConnectionInfoExtended,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.AuthenticateIncomingAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.AuthenticateOutgoingAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.CacheFolderListAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailAccountAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailAddressAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailAppointmentAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailAttachmentAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailConnectionInfoAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailConnectionInfoExtendedAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailCustomHeaderAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailEntityAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailEnvelopeAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailFolderAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailSOInfoAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.CreateEMailFromDocumentEntityAsync(SuperOffice.WebApi.Data.DocumentEntity,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.CreateEMailFromMimeMessageAsync(System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.CreateFolderAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.CreateForwardEmailAsync(SuperOffice.WebApi.Data.EMailEntity,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.CreateInlineHtmlHeaderAsync(SuperOffice.WebApi.Data.EMailEntity,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.CreateNewPhysicalDocumentFromEmailAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.CreateNewPhysicalDocumentFromEmailAttachmentAsync(System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.DeleteAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,System.Int32[],System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.DeleteEMailAccountAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.DeleteEmailsAsync(System.Int32[],System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.DeleteExtendedAsync(SuperOffice.WebApi.Data.EMailConnectionInfoExtended,System.String[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.DeleteFolderAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.EmptyFolderAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.FindAddressAsync(System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.FindContactOrPersonByEmailNameAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.FindContactOrPersonByEmailNameWithLimitAsync(System.String,System.String,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.GetAttachmentAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.GetAttachmentFromIdAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.GetCurrentAccountAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.GetCurrentAccountIdAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.GetEMailAccountAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.GetEMailAccountFromEMailAddressAsync(System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.GetEMailAddressesAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.GetEmailAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.GetEmailAppointmentRecurrenceAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.GetEMailAsStreamAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,System.Int32,System.Boolean,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.GetEMailAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.GetEmailDocumentAsMimeStreamAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.GetEMailEnvelopesAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.GetEMailFromAttachmentIdAsync(System.Int32,System.String[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.GetEMailFromDocumentAttachmentIdAsync(System.Int32,System.String[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.GetEMailFromDocumentIdAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.GetEMailFromDocumentIdWithoutAttachmentStreamAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.GetEMailFromIdAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,System.Int32,System.Boolean,SuperOffice.WebApi.Data.EMailFlags,System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.GetEMailFromTempAsync(System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.GetEmailMessageIdsAsync(SuperOffice.WebApi.Data.EMailConnectionInfoExtended,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.GetEmailsAsStringAsync(SuperOffice.WebApi.Data.EMailConnectionInfoExtended,System.String[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.GetEMailSOInfoAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.GetExtendedEmailMessageIdsAsync(SuperOffice.WebApi.Data.EMailConnectionInfoExtended,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.GetFolderEMailCountAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.GetFolderHasNewEMailAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.GetFolderInfoAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,System.String[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.GetFolderListAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.GetMailFromInReplyToAsync(System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.GetMailFromMessageIdAsync(System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.GetNewMailAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.GetParticipantInfoFromEmailAddressAsync(System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.GetPersonEntitiesFromEmailAddressAsync(System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.GetPersonsFromEmailAddressAsync(System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.GetPreviewAttachmentFromDocIdAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.GetPreviewAttachmentFromIdAsync(System.Int32,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.GetReadySyncEmailAccountsAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedEMailAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedEMailFromAttachmentIdAsync(System.Int32,System.String[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedEMailFromDocumentAttachmentIdAsync(System.Int32,System.String[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedEMailFromDocumentIdAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedEMailFromDocumentIdWithoutAttachmentStreamAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedPreviewAttachmentFromDocIdAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedPreviewAttachmentFromIdAsync(System.Int32,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.HasMXRecordAsync(System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.HasNewMailAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.HasSPFRecordAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.LatestItemIdByFolderAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.MarkAsReadAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,System.Int32[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.MarkEmailsAsReadAsync(System.Int32[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.MoveEmailsToFolderAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.MoveEmailsToTrashAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.MoveToFolderAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,System.Int32[],System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.RefreshFolderAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,System.String[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.RefreshFolderForAssociateAsync(System.String[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.RelayMessageAsync(SuperOffice.WebApi.Data.EMailConnectionInfoExtended,System.String,System.String,System.String[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.ResolveEMailRecipientsAsync(System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.SaveAsync(SuperOffice.WebApi.Data.EMailEntity,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.SaveDraftAsync(SuperOffice.WebApi.Data.EMailEntity,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.SaveEMailAccountAsync(SuperOffice.WebApi.Data.EMailAccount,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.SaveEMailAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailEntity,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.SaveEmailToTmpDocumentAsync(SuperOffice.WebApi.Data.EMailEntity,System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.SaveToMailServerAsync(SuperOffice.WebApi.Data.EMailEntity,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.SendAndSaveEmailToTmpDocumentAsync(SuperOffice.WebApi.Data.EMailEntity,System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.SendAsync(SuperOffice.WebApi.Data.EMailEntity[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.SendEMailsAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailEntity[],SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.SetRepliedAtAsync(System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.SetSubscriptionAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailFolder[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.SyncEmailAccountAsync(SuperOffice.WebApi.Data.SyncUserAccount,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.SyncEmailAccountsAsync(SuperOffice.WebApi.Data.SyncUserAccount[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.TestAuthenticateAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IEMailAgent.ToggleSubscriptionAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  langs:
  - csharp
  - vb
  name: IEMailAgent
  nameWithType: IEMailAgent
  fullName: SuperOffice.WebApi.Agents.IEMailAgent
  type: Interface
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nEmail connection, reading, sending\n<p></p>\n<strong>Online Restricted:</strong> This agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: 'public interface IEMailAgent : IDisposable'
    content.vb: >-
      Public Interface IEMailAgent
          Inherits IDisposable
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailAccountAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailAccountAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultEMailAccountAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultEMailAccountAsync(RequestOptions)
  nameWithType: IEMailAgent.CreateDefaultEMailAccountAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailAccountAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet default values into a new EMailAccount.\nNetServer calculates default values on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: Task<EMailAccount> CreateDefaultEMailAccountAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailAccount}
      description: A blank EMailAccount
    content.vb: Function CreateDefaultEMailAccountAsync(requestOptions As RequestOptions = Nothing) As Task(Of EMailAccount)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailAccountAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.SaveEMailAccountAsync(SuperOffice.WebApi.Data.EMailAccount,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.SaveEMailAccountAsync(SuperOffice.WebApi.Data.EMailAccount,SuperOffice.WebApi.RequestOptions)
  id: SaveEMailAccountAsync(SuperOffice.WebApi.Data.EMailAccount,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: SaveEMailAccountAsync(EMailAccount, RequestOptions)
  nameWithType: IEMailAgent.SaveEMailAccountAsync(EMailAccount, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.SaveEMailAccountAsync(SuperOffice.WebApi.Data.EMailAccount, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdates the existing EMailAccount or creates a new EMailAccount if the id parameter is 0. \n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<EMailAccount> SaveEMailAccountAsync(EMailAccount eMailAccount, RequestOptions requestOptions = null)
    parameters:
    - id: eMailAccount
      type: SuperOffice.WebApi.Data.EMailAccount
      description: The EMailAccount that is saved.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailAccount}
      description: New or updated EMailAccount
    content.vb: Function SaveEMailAccountAsync(eMailAccount As EMailAccount, requestOptions As RequestOptions = Nothing) As Task(Of EMailAccount)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.SaveEMailAccountAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.DeleteEMailAccountAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.DeleteEMailAccountAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: DeleteEMailAccountAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: DeleteEMailAccountAsync(Int32, RequestOptions)
  nameWithType: IEMailAgent.DeleteEMailAccountAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.DeleteEMailAccountAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nDeletes the EMailAccount\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task DeleteEMailAccountAsync(int eMailAccountId, RequestOptions requestOptions = null)
    parameters:
    - id: eMailAccountId
      type: System.Int32
      description: The identity of the EMailAccount
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function DeleteEMailAccountAsync(eMailAccountId As Integer, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IEMailAgent.DeleteEMailAccountAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailAddressAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailAddressAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultEMailAddressAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultEMailAddressAsync(RequestOptions)
  nameWithType: IEMailAgent.CreateDefaultEMailAddressAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailAddressAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet default values into a new EMailAddress.\nNetServer calculates default values on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: Task<EMailAddress> CreateDefaultEMailAddressAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailAddress}
      description: A blank EMailAddress
    content.vb: Function CreateDefaultEMailAddressAsync(requestOptions As RequestOptions = Nothing) As Task(Of EMailAddress)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailAddressAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailAppointmentAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailAppointmentAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultEMailAppointmentAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultEMailAppointmentAsync(RequestOptions)
  nameWithType: IEMailAgent.CreateDefaultEMailAppointmentAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailAppointmentAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet default values into a new EMailAppointment.\nNetServer calculates default values on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: Task<EMailAppointment> CreateDefaultEMailAppointmentAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailAppointment}
      description: A blank EMailAppointment
    content.vb: Function CreateDefaultEMailAppointmentAsync(requestOptions As RequestOptions = Nothing) As Task(Of EMailAppointment)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailAppointmentAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailAttachmentAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailAttachmentAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultEMailAttachmentAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultEMailAttachmentAsync(RequestOptions)
  nameWithType: IEMailAgent.CreateDefaultEMailAttachmentAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailAttachmentAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet default values into a new EMailAttachment.\nNetServer calculates default values on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: Task<EMailAttachment> CreateDefaultEMailAttachmentAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailAttachment}
      description: A blank EMailAttachment
    content.vb: Function CreateDefaultEMailAttachmentAsync(requestOptions As RequestOptions = Nothing) As Task(Of EMailAttachment)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailAttachmentAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailConnectionInfoAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailConnectionInfoAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultEMailConnectionInfoAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultEMailConnectionInfoAsync(RequestOptions)
  nameWithType: IEMailAgent.CreateDefaultEMailConnectionInfoAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailConnectionInfoAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet default values into a new EMailConnectionInfo.\nNetServer calculates default values on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: Task<EMailConnectionInfo> CreateDefaultEMailConnectionInfoAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailConnectionInfo}
      description: A blank EMailConnectionInfo
    content.vb: Function CreateDefaultEMailConnectionInfoAsync(requestOptions As RequestOptions = Nothing) As Task(Of EMailConnectionInfo)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailConnectionInfoAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailConnectionInfoExtendedAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailConnectionInfoExtendedAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultEMailConnectionInfoExtendedAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultEMailConnectionInfoExtendedAsync(RequestOptions)
  nameWithType: IEMailAgent.CreateDefaultEMailConnectionInfoExtendedAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailConnectionInfoExtendedAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet default values into a new EMailConnectionInfoExtended.\nNetServer calculates default values on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: Task<EMailConnectionInfoExtended> CreateDefaultEMailConnectionInfoExtendedAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailConnectionInfoExtended}
      description: A blank EMailConnectionInfoExtended
    content.vb: Function CreateDefaultEMailConnectionInfoExtendedAsync(requestOptions As RequestOptions = Nothing) As Task(Of EMailConnectionInfoExtended)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailConnectionInfoExtendedAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailCustomHeaderAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailCustomHeaderAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultEMailCustomHeaderAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultEMailCustomHeaderAsync(RequestOptions)
  nameWithType: IEMailAgent.CreateDefaultEMailCustomHeaderAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailCustomHeaderAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet default values into a new EMailCustomHeader.\nNetServer calculates default values on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: Task<EMailCustomHeader> CreateDefaultEMailCustomHeaderAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailCustomHeader}
      description: A blank EMailCustomHeader
    content.vb: Function CreateDefaultEMailCustomHeaderAsync(requestOptions As RequestOptions = Nothing) As Task(Of EMailCustomHeader)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailCustomHeaderAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailEntityAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailEntityAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultEMailEntityAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultEMailEntityAsync(RequestOptions)
  nameWithType: IEMailAgent.CreateDefaultEMailEntityAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailEntityAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet default values into a new EMailEntity.\nNetServer calculates default values on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: Task<EMailEntity> CreateDefaultEMailEntityAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailEntity}
      description: A blank EMailEntity
    content.vb: Function CreateDefaultEMailEntityAsync(requestOptions As RequestOptions = Nothing) As Task(Of EMailEntity)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailEntityAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailEnvelopeAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailEnvelopeAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultEMailEnvelopeAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultEMailEnvelopeAsync(RequestOptions)
  nameWithType: IEMailAgent.CreateDefaultEMailEnvelopeAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailEnvelopeAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet default values into a new EMailEnvelope.\nNetServer calculates default values on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: Task<EMailEnvelope> CreateDefaultEMailEnvelopeAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailEnvelope}
      description: A blank EMailEnvelope
    content.vb: Function CreateDefaultEMailEnvelopeAsync(requestOptions As RequestOptions = Nothing) As Task(Of EMailEnvelope)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailEnvelopeAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailFolderAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailFolderAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultEMailFolderAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultEMailFolderAsync(RequestOptions)
  nameWithType: IEMailAgent.CreateDefaultEMailFolderAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailFolderAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet default values into a new EMailFolder.\nNetServer calculates default values on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: Task<EMailFolder> CreateDefaultEMailFolderAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailFolder}
      description: A blank EMailFolder
    content.vb: Function CreateDefaultEMailFolderAsync(requestOptions As RequestOptions = Nothing) As Task(Of EMailFolder)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailFolderAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailSOInfoAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailSOInfoAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultEMailSOInfoAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultEMailSOInfoAsync(RequestOptions)
  nameWithType: IEMailAgent.CreateDefaultEMailSOInfoAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailSOInfoAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet default values into a new EMailSOInfo.\nNetServer calculates default values on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: Task<EMailSOInfo> CreateDefaultEMailSOInfoAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailSOInfo}
      description: A blank EMailSOInfo
    content.vb: Function CreateDefaultEMailSOInfoAsync(requestOptions As RequestOptions = Nothing) As Task(Of EMailSOInfo)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailSOInfoAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailAccountAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.GetEMailAccountAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetEMailAccountAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: GetEMailAccountAsync(Int32, RequestOptions)
  nameWithType: IEMailAgent.GetEMailAccountAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailAccountAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific EMailAccount object.                        \n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<EMailAccount> GetEMailAccountAsync(int eMailAccountId, RequestOptions requestOptions = null)
    parameters:
    - id: eMailAccountId
      type: System.Int32
      description: The identifier of the EMailAccount object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailAccount}
      description: EMailAccount
    content.vb: Function GetEMailAccountAsync(eMailAccountId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of EMailAccount)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailAccountAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailAccountFromEMailAddressAsync(System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.GetEMailAccountFromEMailAddressAsync(System.String,SuperOffice.WebApi.RequestOptions)
  id: GetEMailAccountFromEMailAddressAsync(System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: GetEMailAccountFromEMailAddressAsync(String, RequestOptions)
  nameWithType: IEMailAgent.GetEMailAccountFromEMailAddressAsync(String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailAccountFromEMailAddressAsync(System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns the email account corresponding to this email address (for the current associate).\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<EMailAccount> GetEMailAccountFromEMailAddressAsync(string fromAddress, RequestOptions requestOptions = null)
    parameters:
    - id: fromAddress
      type: System.String
      description: The address associated with this email account
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailAccount}
      description: Found or empty email account
    content.vb: Function GetEMailAccountFromEMailAddressAsync(fromAddress As String, requestOptions As RequestOptions = Nothing) As Task(Of EMailAccount)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailAccountFromEMailAddressAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetCurrentAccountIdAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.GetCurrentAccountIdAsync(SuperOffice.WebApi.RequestOptions)
  id: GetCurrentAccountIdAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: GetCurrentAccountIdAsync(RequestOptions)
  nameWithType: IEMailAgent.GetCurrentAccountIdAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetCurrentAccountIdAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet current accountId (last logged into should normally be current) for logged in associate\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<int> GetCurrentAccountIdAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: Id of current account
    content.vb: Function GetCurrentAccountIdAsync(requestOptions As RequestOptions = Nothing) As Task(Of Integer)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.GetCurrentAccountIdAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetCurrentAccountAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.GetCurrentAccountAsync(SuperOffice.WebApi.RequestOptions)
  id: GetCurrentAccountAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: GetCurrentAccountAsync(RequestOptions)
  nameWithType: IEMailAgent.GetCurrentAccountAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetCurrentAccountAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet current account (last logged into should normally be current) for logged in associate\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<EMailAccount> GetCurrentAccountAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailAccount}
      description: Id of current account
    content.vb: Function GetCurrentAccountAsync(requestOptions As RequestOptions = Nothing) As Task(Of EMailAccount)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.GetCurrentAccountAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetPersonEntitiesFromEmailAddressAsync(System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.GetPersonEntitiesFromEmailAddressAsync(System.String,SuperOffice.WebApi.RequestOptions)
  id: GetPersonEntitiesFromEmailAddressAsync(System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: GetPersonEntitiesFromEmailAddressAsync(String, RequestOptions)
  nameWithType: IEMailAgent.GetPersonEntitiesFromEmailAddressAsync(String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetPersonEntitiesFromEmailAddressAsync(System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet all persons and contacts with the given email address\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<PersonEntity[]> GetPersonEntitiesFromEmailAddressAsync(string emailAddress, RequestOptions requestOptions = null)
    parameters:
    - id: emailAddress
      type: System.String
      description: The emailAddress to find persons and contacts for
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.PersonEntity[]}
    content.vb: Function GetPersonEntitiesFromEmailAddressAsync(emailAddress As String, requestOptions As RequestOptions = Nothing) As Task(Of PersonEntity())
  overload: SuperOffice.WebApi.Agents.IEMailAgent.GetPersonEntitiesFromEmailAddressAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetPersonsFromEmailAddressAsync(System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.GetPersonsFromEmailAddressAsync(System.String,SuperOffice.WebApi.RequestOptions)
  id: GetPersonsFromEmailAddressAsync(System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: GetPersonsFromEmailAddressAsync(String, RequestOptions)
  nameWithType: IEMailAgent.GetPersonsFromEmailAddressAsync(String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetPersonsFromEmailAddressAsync(System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet all persons and contacts with the given email address\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<Person[]> GetPersonsFromEmailAddressAsync(string emailAddress, RequestOptions requestOptions = null)
    parameters:
    - id: emailAddress
      type: System.String
      description: The emailAddress to find persons and contacts for
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Person[]}
    content.vb: Function GetPersonsFromEmailAddressAsync(emailAddress As String, requestOptions As RequestOptions = Nothing) As Task(Of Person())
  overload: SuperOffice.WebApi.Agents.IEMailAgent.GetPersonsFromEmailAddressAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.HasMXRecordAsync(System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.HasMXRecordAsync(System.String,SuperOffice.WebApi.RequestOptions)
  id: HasMXRecordAsync(System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: HasMXRecordAsync(String, RequestOptions)
  nameWithType: IEMailAgent.HasMXRecordAsync(String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.HasMXRecordAsync(System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturn true if there is one or more MX records in DNS for the given mail domain\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<bool> HasMXRecordAsync(string mailDomain, RequestOptions requestOptions = null)
    parameters:
    - id: mailDomain
      type: System.String
      description: The mail domain to check. Normally this is the part after @ in an email address
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if there is at least one MX record
    content.vb: Function HasMXRecordAsync(mailDomain As String, requestOptions As RequestOptions = Nothing) As Task(Of Boolean)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.HasMXRecordAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.HasSPFRecordAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.HasSPFRecordAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  id: HasSPFRecordAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: HasSPFRecordAsync(String, String, RequestOptions)
  nameWithType: IEMailAgent.HasSPFRecordAsync(String, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.HasSPFRecordAsync(System.String, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturn true if target domain contains a SPF record which is under the given SPF record\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<bool> HasSPFRecordAsync(string sourceSpf, string targetDomain, RequestOptions requestOptions = null)
    parameters:
    - id: sourceSpf
      type: System.String
      description: The SPF to match from
    - id: targetDomain
      type: System.String
      description: The domain to verify if it has at least one SPF record contained in the source SPF
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if a match is found
    content.vb: Function HasSPFRecordAsync(sourceSpf As String, targetDomain As String, requestOptions As RequestOptions = Nothing) As Task(Of Boolean)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.HasSPFRecordAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.ResolveEMailRecipientsAsync(System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.ResolveEMailRecipientsAsync(System.String,SuperOffice.WebApi.RequestOptions)
  id: ResolveEMailRecipientsAsync(System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: ResolveEMailRecipientsAsync(String, RequestOptions)
  nameWithType: IEMailAgent.ResolveEMailRecipientsAsync(String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.ResolveEMailRecipientsAsync(System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nResolve separate emails from single string. Also lookup persons by emails.\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<EMailAddress[]> ResolveEMailRecipientsAsync(string emailAddress, RequestOptions requestOptions = null)
    parameters:
    - id: emailAddress
      type: System.String
      description: The string to lookup emails from
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailAddress[]}
      description: Resolved EMail recipients
    content.vb: Function ResolveEMailRecipientsAsync(emailAddress As String, requestOptions As RequestOptions = Nothing) As Task(Of EMailAddress())
  overload: SuperOffice.WebApi.Agents.IEMailAgent.ResolveEMailRecipientsAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailFromIdAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,System.Int32,System.Boolean,SuperOffice.WebApi.Data.EMailFlags,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.GetEMailFromIdAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,System.Int32,System.Boolean,SuperOffice.WebApi.Data.EMailFlags,System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: GetEMailFromIdAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,System.Int32,System.Boolean,SuperOffice.WebApi.Data.EMailFlags,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: GetEMailFromIdAsync(EMailConnectionInfo, Int32, Boolean, EMailFlags, Boolean, RequestOptions)
  nameWithType: IEMailAgent.GetEMailFromIdAsync(EMailConnectionInfo, Int32, Boolean, EMailFlags, Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailFromIdAsync(SuperOffice.WebApi.Data.EMailConnectionInfo, System.Int32, System.Boolean, SuperOffice.WebApi.Data.EMailFlags, System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet en e-mail based on its unique id\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<EMailEntity> GetEMailFromIdAsync(EMailConnectionInfo connectionInfo, int messageServerId, bool lookupAddresses, EMailFlags flags, bool includeAttachments, RequestOptions requestOptions = null)
    parameters:
    - id: connectionInfo
      type: SuperOffice.WebApi.Data.EMailConnectionInfo
      description: All information needed to connect to the mailserver
    - id: messageServerId
      type: System.Int32
      description: Unique ID for the e-mail to retrieve
    - id: lookupAddresses
      type: System.Boolean
      description: If true try to look up e-mail addresses in from/to/cc/bcc fields against superoffice contacts
    - id: flags
      type: SuperOffice.WebApi.Data.EMailFlags
      description: 'Any flags to apply to the fetched item. Ex: Seen/Answered'
    - id: includeAttachments
      type: System.Boolean
      description: Should we retrieve attachments embedded in the e-mail from the server
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailEntity}
      description: The e-mail
    content.vb: Function GetEMailFromIdAsync(connectionInfo As EMailConnectionInfo, messageServerId As Integer, lookupAddresses As Boolean, flags As EMailFlags, includeAttachments As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of EMailEntity)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailFromIdAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.SendEMailsAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailEntity[],SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.SendEMailsAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailEntity[],SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  id: SendEMailsAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailEntity[],SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: SendEMailsAsync(EMailConnectionInfo, EMailEntity[], EMailConnectionInfo, RequestOptions)
  nameWithType: IEMailAgent.SendEMailsAsync(EMailConnectionInfo, EMailEntity[], EMailConnectionInfo, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.SendEMailsAsync(SuperOffice.WebApi.Data.EMailConnectionInfo, SuperOffice.WebApi.Data.EMailEntity[], SuperOffice.WebApi.Data.EMailConnectionInfo, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSend the provided e-mails\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<EMailEntity[]> SendEMailsAsync(EMailConnectionInfo outgoingConnectionInfo, EMailEntity[] emails, EMailConnectionInfo sentItemsConnectionInfo, RequestOptions requestOptions = null)
    parameters:
    - id: outgoingConnectionInfo
      type: SuperOffice.WebApi.Data.EMailConnectionInfo
      description: All information needed to connect to the mailserver
    - id: emails
      type: SuperOffice.WebApi.Data.EMailEntity[]
      description: The e-mails to send
    - id: sentItemsConnectionInfo
      type: SuperOffice.WebApi.Data.EMailConnectionInfo
      description: If provided, save sent item(s) in the folder specified.  May be null.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailEntity[]}
      description: The sent e-mails (updated with message id etc.)
    content.vb: Function SendEMailsAsync(outgoingConnectionInfo As EMailConnectionInfo, emails As EMailEntity(), sentItemsConnectionInfo As EMailConnectionInfo, requestOptions As RequestOptions = Nothing) As Task(Of EMailEntity())
  overload: SuperOffice.WebApi.Agents.IEMailAgent.SendEMailsAsync*
  nameWithType.vb: IEMailAgent.SendEMailsAsync(EMailConnectionInfo, EMailEntity(), EMailConnectionInfo, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IEMailAgent.SendEMailsAsync(SuperOffice.WebApi.Data.EMailConnectionInfo, SuperOffice.WebApi.Data.EMailEntity(), SuperOffice.WebApi.Data.EMailConnectionInfo, SuperOffice.WebApi.RequestOptions)
  name.vb: SendEMailsAsync(EMailConnectionInfo, EMailEntity(), EMailConnectionInfo, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IEMailAgent.SaveEMailAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.SaveEMailAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailEntity,SuperOffice.WebApi.RequestOptions)
  id: SaveEMailAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: SaveEMailAsync(EMailConnectionInfo, EMailEntity, RequestOptions)
  nameWithType: IEMailAgent.SaveEMailAsync(EMailConnectionInfo, EMailEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.SaveEMailAsync(SuperOffice.WebApi.Data.EMailConnectionInfo, SuperOffice.WebApi.Data.EMailEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSave the passed e-mail back to the server\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<EMailEntity> SaveEMailAsync(EMailConnectionInfo connectionInfo, EMailEntity email, RequestOptions requestOptions = null)
    parameters:
    - id: connectionInfo
      type: SuperOffice.WebApi.Data.EMailConnectionInfo
      description: All information needed to connect to the mailserver
    - id: email
      type: SuperOffice.WebApi.Data.EMailEntity
      description: The e-mail to save
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailEntity}
      description: The updated saved entity
    content.vb: Function SaveEMailAsync(connectionInfo As EMailConnectionInfo, email As EMailEntity, requestOptions As RequestOptions = Nothing) As Task(Of EMailEntity)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.SaveEMailAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.AuthenticateIncomingAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.AuthenticateIncomingAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  id: AuthenticateIncomingAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: AuthenticateIncomingAsync(EMailConnectionInfo, RequestOptions)
  nameWithType: IEMailAgent.AuthenticateIncomingAsync(EMailConnectionInfo, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.AuthenticateIncomingAsync(SuperOffice.WebApi.Data.EMailConnectionInfo, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nAuthenticate against a mail-server to retrieve e-mails from\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<bool> AuthenticateIncomingAsync(EMailConnectionInfo connectionInfo, RequestOptions requestOptions = null)
    parameters:
    - id: connectionInfo
      type: SuperOffice.WebApi.Data.EMailConnectionInfo
      description: All information needed to connect to the mailserver
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if authentication was succcesfull
    content.vb: Function AuthenticateIncomingAsync(connectionInfo As EMailConnectionInfo, requestOptions As RequestOptions = Nothing) As Task(Of Boolean)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.AuthenticateIncomingAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.AuthenticateOutgoingAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.AuthenticateOutgoingAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  id: AuthenticateOutgoingAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: AuthenticateOutgoingAsync(EMailConnectionInfo, RequestOptions)
  nameWithType: IEMailAgent.AuthenticateOutgoingAsync(EMailConnectionInfo, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.AuthenticateOutgoingAsync(SuperOffice.WebApi.Data.EMailConnectionInfo, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nAuthenticate against a mail server to send items with\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<bool> AuthenticateOutgoingAsync(EMailConnectionInfo connectionInfo, RequestOptions requestOptions = null)
    parameters:
    - id: connectionInfo
      type: SuperOffice.WebApi.Data.EMailConnectionInfo
      description: All information needed to connect to the mailserver
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if authentication was succcesfull
    content.vb: Function AuthenticateOutgoingAsync(connectionInfo As EMailConnectionInfo, requestOptions As RequestOptions = Nothing) As Task(Of Boolean)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.AuthenticateOutgoingAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetFolderListAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.GetFolderListAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: GetFolderListAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: GetFolderListAsync(EMailConnectionInfo, Boolean, RequestOptions)
  nameWithType: IEMailAgent.GetFolderListAsync(EMailConnectionInfo, Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetFolderListAsync(SuperOffice.WebApi.Data.EMailConnectionInfo, System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nRetrieve all folders for the mail account. String is separated in sections by the paragraph character.  First section contains the folder delimeter char. Next is folder name. Additional sections may be unread and total items.\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<string[]> GetFolderListAsync(EMailConnectionInfo connectionInfo, bool includeItemCount, RequestOptions requestOptions = null)
    parameters:
    - id: connectionInfo
      type: SuperOffice.WebApi.Data.EMailConnectionInfo
      description: All information needed to connect to the mailserver
    - id: includeItemCount
      type: System.Boolean
      description: If true, unread and total items are added to the foldername separated by a comma
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.String[]}
      description: List of available folders as a string array
    content.vb: Function GetFolderListAsync(connectionInfo As EMailConnectionInfo, includeItemCount As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of String())
  overload: SuperOffice.WebApi.Agents.IEMailAgent.GetFolderListAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetAttachmentAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.GetAttachmentAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetAttachmentAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: GetAttachmentAsync(EMailConnectionInfo, Int32, String, RequestOptions)
  nameWithType: IEMailAgent.GetAttachmentAsync(EMailConnectionInfo, Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetAttachmentAsync(SuperOffice.WebApi.Data.EMailConnectionInfo, System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nRetrieve an attachment from an e-mail\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<EMailAttachment> GetAttachmentAsync(EMailConnectionInfo connectionInfo, int messageServerId, string attachmentId, RequestOptions requestOptions = null)
    parameters:
    - id: connectionInfo
      type: SuperOffice.WebApi.Data.EMailConnectionInfo
      description: All information needed to connect to the mailserver
    - id: messageServerId
      type: System.Int32
      description: Unique ID for the e-mail to retrieve the attachment from
    - id: attachmentId
      type: System.String
      description: Id of the attachment in the e-mail
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailAttachment}
      description: The attachment
    content.vb: Function GetAttachmentAsync(connectionInfo As EMailConnectionInfo, messageServerId As Integer, attachmentId As String, requestOptions As RequestOptions = Nothing) As Task(Of EMailAttachment)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.GetAttachmentAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.MarkAsReadAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,System.Int32[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.MarkAsReadAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,System.Int32[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: MarkAsReadAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,System.Int32[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: MarkAsReadAsync(EMailConnectionInfo, Int32[], Boolean, RequestOptions)
  nameWithType: IEMailAgent.MarkAsReadAsync(EMailConnectionInfo, Int32[], Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.MarkAsReadAsync(SuperOffice.WebApi.Data.EMailConnectionInfo, System.Int32[], System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMark one or more e-mails as (un)read\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task MarkAsReadAsync(EMailConnectionInfo connectionInfo, int[] messageServerIds, bool read, RequestOptions requestOptions = null)
    parameters:
    - id: connectionInfo
      type: SuperOffice.WebApi.Data.EMailConnectionInfo
      description: All information needed to connect to the mailserver
    - id: messageServerIds
      type: System.Int32[]
      description: The e-mails to handle
    - id: read
      type: System.Boolean
      description: If true mails are marked as read. If false mails are marked as unread.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function MarkAsReadAsync(connectionInfo As EMailConnectionInfo, messageServerIds As Integer(), read As Boolean, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IEMailAgent.MarkAsReadAsync*
  nameWithType.vb: IEMailAgent.MarkAsReadAsync(EMailConnectionInfo, Int32(), Boolean, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IEMailAgent.MarkAsReadAsync(SuperOffice.WebApi.Data.EMailConnectionInfo, System.Int32(), System.Boolean, SuperOffice.WebApi.RequestOptions)
  name.vb: MarkAsReadAsync(EMailConnectionInfo, Int32(), Boolean, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetFolderEMailCountAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.GetFolderEMailCountAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: GetFolderEMailCountAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: GetFolderEMailCountAsync(EMailConnectionInfo, Boolean, RequestOptions)
  nameWithType: IEMailAgent.GetFolderEMailCountAsync(EMailConnectionInfo, Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetFolderEMailCountAsync(SuperOffice.WebApi.Data.EMailConnectionInfo, System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nRetrieve total/unread mail items in current folder\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<int> GetFolderEMailCountAsync(EMailConnectionInfo connectionInfo, bool onlyUnread, RequestOptions requestOptions = null)
    parameters:
    - id: connectionInfo
      type: SuperOffice.WebApi.Data.EMailConnectionInfo
      description: All information needed to connect to the mailserver
    - id: onlyUnread
      type: System.Boolean
      description: If true, only unread items are counted
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: Number of mail items
    content.vb: Function GetFolderEMailCountAsync(connectionInfo As EMailConnectionInfo, onlyUnread As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of Integer)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.GetFolderEMailCountAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.DeleteAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,System.Int32[],System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.DeleteAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,System.Int32[],System.String,SuperOffice.WebApi.RequestOptions)
  id: DeleteAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,System.Int32[],System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: DeleteAsync(EMailConnectionInfo, Int32[], String, RequestOptions)
  nameWithType: IEMailAgent.DeleteAsync(EMailConnectionInfo, Int32[], String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.DeleteAsync(SuperOffice.WebApi.Data.EMailConnectionInfo, System.Int32[], System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nDelete specified mail items\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task DeleteAsync(EMailConnectionInfo connectionInfo, int[] messageServerIds, string moveToFolder, RequestOptions requestOptions = null)
    parameters:
    - id: connectionInfo
      type: SuperOffice.WebApi.Data.EMailConnectionInfo
      description: All information needed to connect to the mailserver
    - id: messageServerIds
      type: System.Int32[]
      description: The e-mails to handle
    - id: moveToFolder
      type: System.String
      description: If set, move deleted items to this folder
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function DeleteAsync(connectionInfo As EMailConnectionInfo, messageServerIds As Integer(), moveToFolder As String, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IEMailAgent.DeleteAsync*
  nameWithType.vb: IEMailAgent.DeleteAsync(EMailConnectionInfo, Int32(), String, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IEMailAgent.DeleteAsync(SuperOffice.WebApi.Data.EMailConnectionInfo, System.Int32(), System.String, SuperOffice.WebApi.RequestOptions)
  name.vb: DeleteAsync(EMailConnectionInfo, Int32(), String, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IEMailAgent.MoveToFolderAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,System.Int32[],System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.MoveToFolderAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,System.Int32[],System.String,SuperOffice.WebApi.RequestOptions)
  id: MoveToFolderAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,System.Int32[],System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: MoveToFolderAsync(EMailConnectionInfo, Int32[], String, RequestOptions)
  nameWithType: IEMailAgent.MoveToFolderAsync(EMailConnectionInfo, Int32[], String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.MoveToFolderAsync(SuperOffice.WebApi.Data.EMailConnectionInfo, System.Int32[], System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMoved specified items from current folder to targetFolder\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task MoveToFolderAsync(EMailConnectionInfo connectionInfo, int[] messageServerIds, string targetFolder, RequestOptions requestOptions = null)
    parameters:
    - id: connectionInfo
      type: SuperOffice.WebApi.Data.EMailConnectionInfo
      description: All information needed to connect to the mailserver
    - id: messageServerIds
      type: System.Int32[]
      description: The e-mails to handle
    - id: targetFolder
      type: System.String
      description: Name of folder to move items to
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function MoveToFolderAsync(connectionInfo As EMailConnectionInfo, messageServerIds As Integer(), targetFolder As String, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IEMailAgent.MoveToFolderAsync*
  nameWithType.vb: IEMailAgent.MoveToFolderAsync(EMailConnectionInfo, Int32(), String, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IEMailAgent.MoveToFolderAsync(SuperOffice.WebApi.Data.EMailConnectionInfo, System.Int32(), System.String, SuperOffice.WebApi.RequestOptions)
  name.vb: MoveToFolderAsync(EMailConnectionInfo, Int32(), String, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IEMailAgent.EmptyFolderAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.EmptyFolderAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,System.String,SuperOffice.WebApi.RequestOptions)
  id: EmptyFolderAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: EmptyFolderAsync(EMailConnectionInfo, String, RequestOptions)
  nameWithType: IEMailAgent.EmptyFolderAsync(EMailConnectionInfo, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.EmptyFolderAsync(SuperOffice.WebApi.Data.EMailConnectionInfo, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nDelete all items in folder specified in the connection object\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task EmptyFolderAsync(EMailConnectionInfo connectionInfo, string moveToFolder, RequestOptions requestOptions = null)
    parameters:
    - id: connectionInfo
      type: SuperOffice.WebApi.Data.EMailConnectionInfo
      description: All information needed to connect to the mailserver
    - id: moveToFolder
      type: System.String
      description: If set, move deleted items to this folder
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function EmptyFolderAsync(connectionInfo As EMailConnectionInfo, moveToFolder As String, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IEMailAgent.EmptyFolderAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailAsStreamAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,System.Int32,System.Boolean,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.GetEMailAsStreamAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,System.Int32,System.Boolean,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetEMailAsStreamAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,System.Int32,System.Boolean,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: GetEMailAsStreamAsync(EMailConnectionInfo, Int32, Boolean, String, RequestOptions)
  nameWithType: IEMailAgent.GetEMailAsStreamAsync(EMailConnectionInfo, Int32, Boolean, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailAsStreamAsync(SuperOffice.WebApi.Data.EMailConnectionInfo, System.Int32, System.Boolean, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nRetrieve an e-mail optionally stripping attachments as a stream\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<byte[]> GetEMailAsStreamAsync(EMailConnectionInfo connectionInfo, int messageServerId, bool stripAttachments, string returnContentType = "application/octet-stream", RequestOptions requestOptions = null)
    parameters:
    - id: connectionInfo
      type: SuperOffice.WebApi.Data.EMailConnectionInfo
      description: All information needed to connect to the mailserver
    - id: messageServerId
      type: System.Int32
      description: Unique ID for the e-mail to retrieve
    - id: stripAttachments
      type: System.Boolean
      description: If true, do not include attachments in stream
    - id: returnContentType
      type: System.String
      description: Accept content-type. Default &quot;application/octet-stream&quot;. Could also be &quot;application/pdf&quot;, &quot;text/plain&quot;, &quot;text/html&quot;, or &quot;multipart/related&quot;
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Byte[]}
      description: The attachment as a stream
    content.vb: Function GetEMailAsStreamAsync(connectionInfo As EMailConnectionInfo, messageServerId As Integer, stripAttachments As Boolean, returnContentType As String = "application/octet-stream", requestOptions As RequestOptions = Nothing) As Task(Of Byte())
  overload: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailAsStreamAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.FindAddressAsync(System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.FindAddressAsync(System.String,SuperOffice.WebApi.RequestOptions)
  id: FindAddressAsync(System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: FindAddressAsync(String, RequestOptions)
  nameWithType: IEMailAgent.FindAddressAsync(String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.FindAddressAsync(System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSearch for contacts and persons with the specified e-mail address (exact match on the email address string required)\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<EMailAddress[]> FindAddressAsync(string address, RequestOptions requestOptions = null)
    parameters:
    - id: address
      type: System.String
      description: E-mail address to look for
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailAddress[]}
      description: All resolved contacts/persons
    content.vb: Function FindAddressAsync(address As String, requestOptions As RequestOptions = Nothing) As Task(Of EMailAddress())
  overload: SuperOffice.WebApi.Agents.IEMailAgent.FindAddressAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailFromDocumentIdAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.GetEMailFromDocumentIdAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetEMailFromDocumentIdAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: GetEMailFromDocumentIdAsync(Int32, RequestOptions)
  nameWithType: IEMailAgent.GetEMailFromDocumentIdAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailFromDocumentIdAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet an e-mail based on an archived document\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<EMailEntity> GetEMailFromDocumentIdAsync(int documentId, RequestOptions requestOptions = null)
    parameters:
    - id: documentId
      type: System.Int32
      description: Unique id of the document
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailEntity}
      description: The e-mail
    content.vb: Function GetEMailFromDocumentIdAsync(documentId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of EMailEntity)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailFromDocumentIdAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedEMailFromDocumentIdAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedEMailFromDocumentIdAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetUnsanitizedEMailFromDocumentIdAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: GetUnsanitizedEMailFromDocumentIdAsync(Int32, RequestOptions)
  nameWithType: IEMailAgent.GetUnsanitizedEMailFromDocumentIdAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedEMailFromDocumentIdAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet an e-mail based on an archived document. The returned value is not sanitized.\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<EMailEntity> GetUnsanitizedEMailFromDocumentIdAsync(int documentId, RequestOptions requestOptions = null)
    parameters:
    - id: documentId
      type: System.Int32
      description: Unique id of the document
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailEntity}
      description: The e-mail
    content.vb: Function GetUnsanitizedEMailFromDocumentIdAsync(documentId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of EMailEntity)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedEMailFromDocumentIdAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailFromAttachmentIdAsync(System.Int32,System.String[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.GetEMailFromAttachmentIdAsync(System.Int32,System.String[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: GetEMailFromAttachmentIdAsync(System.Int32,System.String[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: GetEMailFromAttachmentIdAsync(Int32, String[], Boolean, RequestOptions)
  nameWithType: IEMailAgent.GetEMailFromAttachmentIdAsync(Int32, String[], Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailFromAttachmentIdAsync(System.Int32, System.String[], System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet an e-mail based on an email and attachment id\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<EMailEntity> GetEMailFromAttachmentIdAsync(int emailId, string[] attachmentIds, bool includeAttachments, RequestOptions requestOptions = null)
    parameters:
    - id: emailId
      type: System.Int32
      description: The primary key of the email row in the DB
    - id: attachmentIds
      type: System.String[]
      description: Id of the attachment. If multiple elements this is treated as attachment in attachemnts, e.g. [1, 2] means attachment 2 in attachment 1 of email.
    - id: includeAttachments
      type: System.Boolean
      description: Should we retrieve attachments embedded in the e-mail from the server
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailEntity}
      description: The attachment as an e-mail
    content.vb: Function GetEMailFromAttachmentIdAsync(emailId As Integer, attachmentIds As String(), includeAttachments As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of EMailEntity)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailFromAttachmentIdAsync*
  nameWithType.vb: IEMailAgent.GetEMailFromAttachmentIdAsync(Int32, String(), Boolean, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailFromAttachmentIdAsync(System.Int32, System.String(), System.Boolean, SuperOffice.WebApi.RequestOptions)
  name.vb: GetEMailFromAttachmentIdAsync(Int32, String(), Boolean, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedEMailFromAttachmentIdAsync(System.Int32,System.String[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedEMailFromAttachmentIdAsync(System.Int32,System.String[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: GetUnsanitizedEMailFromAttachmentIdAsync(System.Int32,System.String[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: GetUnsanitizedEMailFromAttachmentIdAsync(Int32, String[], Boolean, RequestOptions)
  nameWithType: IEMailAgent.GetUnsanitizedEMailFromAttachmentIdAsync(Int32, String[], Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedEMailFromAttachmentIdAsync(System.Int32, System.String[], System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet an e-mail based on an email and attachment id. The returned value is not sanitized.\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<EMailEntity> GetUnsanitizedEMailFromAttachmentIdAsync(int emailId, string[] attachmentIds, bool includeAttachments, RequestOptions requestOptions = null)
    parameters:
    - id: emailId
      type: System.Int32
      description: The primary key of the email row in the DB
    - id: attachmentIds
      type: System.String[]
      description: Id of the attachment. If multiple elements this is treated as attachment in attachemnts, e.g. [1, 2] means attachment 2 in attachment 1 of email.
    - id: includeAttachments
      type: System.Boolean
      description: Should we retrieve attachments embedded in the e-mail from the server
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailEntity}
      description: The attachment as an e-mail
    content.vb: Function GetUnsanitizedEMailFromAttachmentIdAsync(emailId As Integer, attachmentIds As String(), includeAttachments As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of EMailEntity)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedEMailFromAttachmentIdAsync*
  nameWithType.vb: IEMailAgent.GetUnsanitizedEMailFromAttachmentIdAsync(Int32, String(), Boolean, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedEMailFromAttachmentIdAsync(System.Int32, System.String(), System.Boolean, SuperOffice.WebApi.RequestOptions)
  name.vb: GetUnsanitizedEMailFromAttachmentIdAsync(Int32, String(), Boolean, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailFromDocumentAttachmentIdAsync(System.Int32,System.String[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.GetEMailFromDocumentAttachmentIdAsync(System.Int32,System.String[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: GetEMailFromDocumentAttachmentIdAsync(System.Int32,System.String[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: GetEMailFromDocumentAttachmentIdAsync(Int32, String[], Boolean, RequestOptions)
  nameWithType: IEMailAgent.GetEMailFromDocumentAttachmentIdAsync(Int32, String[], Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailFromDocumentAttachmentIdAsync(System.Int32, System.String[], System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet an e-mail based on an email in the archive system and attachment id\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<EMailEntity> GetEMailFromDocumentAttachmentIdAsync(int docId, string[] attachmentIds, bool includeAttachments, RequestOptions requestOptions = null)
    parameters:
    - id: docId
      type: System.Int32
      description: The primary key of the document row in the DB
    - id: attachmentIds
      type: System.String[]
      description: Id of the attachment. If multiple elements this is treated as attachment in attachemnts, e.g. [1, 2] means attachment 2 in attachment 1 of email.
    - id: includeAttachments
      type: System.Boolean
      description: Should we retrieve attachments embedded in the e-mail from the server
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailEntity}
      description: The attachment as an e-mail
    content.vb: Function GetEMailFromDocumentAttachmentIdAsync(docId As Integer, attachmentIds As String(), includeAttachments As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of EMailEntity)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailFromDocumentAttachmentIdAsync*
  nameWithType.vb: IEMailAgent.GetEMailFromDocumentAttachmentIdAsync(Int32, String(), Boolean, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailFromDocumentAttachmentIdAsync(System.Int32, System.String(), System.Boolean, SuperOffice.WebApi.RequestOptions)
  name.vb: GetEMailFromDocumentAttachmentIdAsync(Int32, String(), Boolean, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedEMailFromDocumentAttachmentIdAsync(System.Int32,System.String[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedEMailFromDocumentAttachmentIdAsync(System.Int32,System.String[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: GetUnsanitizedEMailFromDocumentAttachmentIdAsync(System.Int32,System.String[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: GetUnsanitizedEMailFromDocumentAttachmentIdAsync(Int32, String[], Boolean, RequestOptions)
  nameWithType: IEMailAgent.GetUnsanitizedEMailFromDocumentAttachmentIdAsync(Int32, String[], Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedEMailFromDocumentAttachmentIdAsync(System.Int32, System.String[], System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet an e-mail based on an email in the archive system and attachment id. The returned value is not sanitized.\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<EMailEntity> GetUnsanitizedEMailFromDocumentAttachmentIdAsync(int docId, string[] attachmentIds, bool includeAttachments, RequestOptions requestOptions = null)
    parameters:
    - id: docId
      type: System.Int32
      description: The primary key of the document row in the DB
    - id: attachmentIds
      type: System.String[]
      description: Id of the attachment. If multiple elements this is treated as attachment in attachemnts, e.g. [1, 2] means attachment 2 in attachment 1 of email.
    - id: includeAttachments
      type: System.Boolean
      description: Should we retrieve attachments embedded in the e-mail from the server
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailEntity}
      description: The attachment as an e-mail
    content.vb: Function GetUnsanitizedEMailFromDocumentAttachmentIdAsync(docId As Integer, attachmentIds As String(), includeAttachments As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of EMailEntity)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedEMailFromDocumentAttachmentIdAsync*
  nameWithType.vb: IEMailAgent.GetUnsanitizedEMailFromDocumentAttachmentIdAsync(Int32, String(), Boolean, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedEMailFromDocumentAttachmentIdAsync(System.Int32, System.String(), System.Boolean, SuperOffice.WebApi.RequestOptions)
  name.vb: GetUnsanitizedEMailFromDocumentAttachmentIdAsync(Int32, String(), Boolean, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailEnvelopesAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.GetEMailEnvelopesAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetEMailEnvelopesAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: GetEMailEnvelopesAsync(EMailConnectionInfo, Int32[], RequestOptions)
  nameWithType: IEMailAgent.GetEMailEnvelopesAsync(EMailConnectionInfo, Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailEnvelopesAsync(SuperOffice.WebApi.Data.EMailConnectionInfo, System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nRetrieve a set of e-mail envelopes\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<EMailEnvelope[]> GetEMailEnvelopesAsync(EMailConnectionInfo connectionInfo, int[] messageServerIds, RequestOptions requestOptions = null)
    parameters:
    - id: connectionInfo
      type: SuperOffice.WebApi.Data.EMailConnectionInfo
      description: All information needed to connect to the mailserver
    - id: messageServerIds
      type: System.Int32[]
      description: Unique identitifiers for the e-mails to retrieve envelopes for
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailEnvelope[]}
      description: The e-mail envelope objects
    content.vb: Function GetEMailEnvelopesAsync(connectionInfo As EMailConnectionInfo, messageServerIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of EMailEnvelope())
  overload: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailEnvelopesAsync*
  nameWithType.vb: IEMailAgent.GetEMailEnvelopesAsync(EMailConnectionInfo, Int32(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailEnvelopesAsync(SuperOffice.WebApi.Data.EMailConnectionInfo, System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetEMailEnvelopesAsync(EMailConnectionInfo, Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.IEMailAgent.SetSubscriptionAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailFolder[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.SetSubscriptionAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailFolder[],SuperOffice.WebApi.RequestOptions)
  id: SetSubscriptionAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.Data.EMailFolder[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: SetSubscriptionAsync(EMailConnectionInfo, EMailFolder[], RequestOptions)
  nameWithType: IEMailAgent.SetSubscriptionAsync(EMailConnectionInfo, EMailFolder[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.SetSubscriptionAsync(SuperOffice.WebApi.Data.EMailConnectionInfo, SuperOffice.WebApi.Data.EMailFolder[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet subscription on or off on a set of folders\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task SetSubscriptionAsync(EMailConnectionInfo connectionInfo, EMailFolder[] folders, RequestOptions requestOptions = null)
    parameters:
    - id: connectionInfo
      type: SuperOffice.WebApi.Data.EMailConnectionInfo
      description: All information needed to connect to the mailserver
    - id: folders
      type: SuperOffice.WebApi.Data.EMailFolder[]
      description: Folders to set subscription value on
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function SetSubscriptionAsync(connectionInfo As EMailConnectionInfo, folders As EMailFolder(), requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IEMailAgent.SetSubscriptionAsync*
  nameWithType.vb: IEMailAgent.SetSubscriptionAsync(EMailConnectionInfo, EMailFolder(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IEMailAgent.SetSubscriptionAsync(SuperOffice.WebApi.Data.EMailConnectionInfo, SuperOffice.WebApi.Data.EMailFolder(), SuperOffice.WebApi.RequestOptions)
  name.vb: SetSubscriptionAsync(EMailConnectionInfo, EMailFolder(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.IEMailAgent.CreateFolderAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.CreateFolderAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  id: CreateFolderAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: CreateFolderAsync(EMailConnectionInfo, RequestOptions)
  nameWithType: IEMailAgent.CreateFolderAsync(EMailConnectionInfo, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.CreateFolderAsync(SuperOffice.WebApi.Data.EMailConnectionInfo, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCreate a new folder on the server\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task CreateFolderAsync(EMailConnectionInfo connectionInfo, RequestOptions requestOptions = null)
    parameters:
    - id: connectionInfo
      type: SuperOffice.WebApi.Data.EMailConnectionInfo
      description: All information needed to connect to the mailserver
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function CreateFolderAsync(connectionInfo As EMailConnectionInfo, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IEMailAgent.CreateFolderAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.DeleteFolderAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.DeleteFolderAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  id: DeleteFolderAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: DeleteFolderAsync(EMailConnectionInfo, RequestOptions)
  nameWithType: IEMailAgent.DeleteFolderAsync(EMailConnectionInfo, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.DeleteFolderAsync(SuperOffice.WebApi.Data.EMailConnectionInfo, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nDelete a folder from the server\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task DeleteFolderAsync(EMailConnectionInfo connectionInfo, RequestOptions requestOptions = null)
    parameters:
    - id: connectionInfo
      type: SuperOffice.WebApi.Data.EMailConnectionInfo
      description: All information needed to connect to the mailserver
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function DeleteFolderAsync(connectionInfo As EMailConnectionInfo, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IEMailAgent.DeleteFolderAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.CreateEMailFromDocumentEntityAsync(SuperOffice.WebApi.Data.DocumentEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.CreateEMailFromDocumentEntityAsync(SuperOffice.WebApi.Data.DocumentEntity,SuperOffice.WebApi.RequestOptions)
  id: CreateEMailFromDocumentEntityAsync(SuperOffice.WebApi.Data.DocumentEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: CreateEMailFromDocumentEntityAsync(DocumentEntity, RequestOptions)
  nameWithType: IEMailAgent.CreateEMailFromDocumentEntityAsync(DocumentEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.CreateEMailFromDocumentEntityAsync(SuperOffice.WebApi.Data.DocumentEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet an e-mail based on the provided DocumentEntity\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<EMailEntity> CreateEMailFromDocumentEntityAsync(DocumentEntity documentEntity, RequestOptions requestOptions = null)
    parameters:
    - id: documentEntity
      type: SuperOffice.WebApi.Data.DocumentEntity
      description: DocumentEntity data
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailEntity}
      description: The e-mail
    content.vb: Function CreateEMailFromDocumentEntityAsync(documentEntity As DocumentEntity, requestOptions As RequestOptions = Nothing) As Task(Of EMailEntity)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.CreateEMailFromDocumentEntityAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.CreateEMailFromMimeMessageAsync(System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.CreateEMailFromMimeMessageAsync(System.String,SuperOffice.WebApi.RequestOptions)
  id: CreateEMailFromMimeMessageAsync(System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: CreateEMailFromMimeMessageAsync(String, RequestOptions)
  nameWithType: IEMailAgent.CreateEMailFromMimeMessageAsync(String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.CreateEMailFromMimeMessageAsync(System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet an e-mail based on the provided MIME-message\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<EMailEntity> CreateEMailFromMimeMessageAsync(string mimeMessage, RequestOptions requestOptions = null)
    parameters:
    - id: mimeMessage
      type: System.String
      description: string representing a MIME-formatted message
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailEntity}
      description: The e-mail
    content.vb: Function CreateEMailFromMimeMessageAsync(mimeMessage As String, requestOptions As RequestOptions = Nothing) As Task(Of EMailEntity)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.CreateEMailFromMimeMessageAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetFolderInfoAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,System.String[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.GetFolderInfoAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,System.String[],SuperOffice.WebApi.RequestOptions)
  id: GetFolderInfoAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,System.String[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: GetFolderInfoAsync(EMailConnectionInfo, String[], RequestOptions)
  nameWithType: IEMailAgent.GetFolderInfoAsync(EMailConnectionInfo, String[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetFolderInfoAsync(SuperOffice.WebApi.Data.EMailConnectionInfo, System.String[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nRetrieve information about folders.  If folders parameter is not specified(null), information about all subscribed folders will be returned.\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<EMailFolder[]> GetFolderInfoAsync(EMailConnectionInfo connectionInfo, string[] folders, RequestOptions requestOptions = null)
    parameters:
    - id: connectionInfo
      type: SuperOffice.WebApi.Data.EMailConnectionInfo
      description: All information needed to connect to the mailserver
    - id: folders
      type: System.String[]
      description: Folders to get information about.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailFolder[]}
      description: Folder information
    content.vb: Function GetFolderInfoAsync(connectionInfo As EMailConnectionInfo, folders As String(), requestOptions As RequestOptions = Nothing) As Task(Of EMailFolder())
  overload: SuperOffice.WebApi.Agents.IEMailAgent.GetFolderInfoAsync*
  nameWithType.vb: IEMailAgent.GetFolderInfoAsync(EMailConnectionInfo, String(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IEMailAgent.GetFolderInfoAsync(SuperOffice.WebApi.Data.EMailConnectionInfo, System.String(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetFolderInfoAsync(EMailConnectionInfo, String(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetFolderHasNewEMailAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.GetFolderHasNewEMailAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  id: GetFolderHasNewEMailAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: GetFolderHasNewEMailAsync(EMailConnectionInfo, RequestOptions)
  nameWithType: IEMailAgent.GetFolderHasNewEMailAsync(EMailConnectionInfo, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetFolderHasNewEMailAsync(SuperOffice.WebApi.Data.EMailConnectionInfo, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCheck if folder has received new items since previous access.\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<bool> GetFolderHasNewEMailAsync(EMailConnectionInfo connectionInfo, RequestOptions requestOptions = null)
    parameters:
    - id: connectionInfo
      type: SuperOffice.WebApi.Data.EMailConnectionInfo
      description: All information needed to connect to the mailserver
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if new mail is available.
    content.vb: Function GetFolderHasNewEMailAsync(connectionInfo As EMailConnectionInfo, requestOptions As RequestOptions = Nothing) As Task(Of Boolean)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.GetFolderHasNewEMailAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailAddressesAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.GetEMailAddressesAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetEMailAddressesAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: GetEMailAddressesAsync(Int32[], RequestOptions)
  nameWithType: IEMailAgent.GetEMailAddressesAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailAddressesAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet information about one or more email addresses, identified by IDs\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<EMailAddress[]> GetEMailAddressesAsync(int[] emailIds, RequestOptions requestOptions = null)
    parameters:
    - id: emailIds
      type: System.Int32[]
      description: Array of IDs from the email table, each identifying one email address
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailAddress[]}
      description: Array of email information objects
    content.vb: Function GetEMailAddressesAsync(emailIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of EMailAddress())
  overload: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailAddressesAsync*
  nameWithType.vb: IEMailAgent.GetEMailAddressesAsync(Int32(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailAddressesAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetEMailAddressesAsync(Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.IEMailAgent.RefreshFolderAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,System.String[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.RefreshFolderAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,System.String[],SuperOffice.WebApi.RequestOptions)
  id: RefreshFolderAsync(SuperOffice.WebApi.Data.EMailConnectionInfo,System.String[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: RefreshFolderAsync(EMailConnectionInfo, String[], RequestOptions)
  nameWithType: IEMailAgent.RefreshFolderAsync(EMailConnectionInfo, String[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.RefreshFolderAsync(SuperOffice.WebApi.Data.EMailConnectionInfo, System.String[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nRefresh the given folders - i.e., fetch data from the mail server and update the in-database cache. This may happen synchronously or as a batch task, the return value will be 0 if the processing was synchronous, or the batch task id if a batch task is used.\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<int> RefreshFolderAsync(EMailConnectionInfo connectionInfo, string[] folders, RequestOptions requestOptions = null)
    parameters:
    - id: connectionInfo
      type: SuperOffice.WebApi.Data.EMailConnectionInfo
      description: Email connection info credentials
    - id: folders
      type: System.String[]
      description: List of folder names to refresh
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: Batch task id, or 0 if the processing was synchronous
    content.vb: Function RefreshFolderAsync(connectionInfo As EMailConnectionInfo, folders As String(), requestOptions As RequestOptions = Nothing) As Task(Of Integer)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.RefreshFolderAsync*
  nameWithType.vb: IEMailAgent.RefreshFolderAsync(EMailConnectionInfo, String(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IEMailAgent.RefreshFolderAsync(SuperOffice.WebApi.Data.EMailConnectionInfo, System.String(), SuperOffice.WebApi.RequestOptions)
  name.vb: RefreshFolderAsync(EMailConnectionInfo, String(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailFromTempAsync(System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.GetEMailFromTempAsync(System.String,SuperOffice.WebApi.RequestOptions)
  id: GetEMailFromTempAsync(System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: GetEMailFromTempAsync(String, RequestOptions)
  nameWithType: IEMailAgent.GetEMailFromTempAsync(String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailFromTempAsync(System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\n\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<EMailEntity> GetEMailFromTempAsync(string fileName, RequestOptions requestOptions = null)
    parameters:
    - id: fileName
      type: System.String
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailEntity}
    content.vb: Function GetEMailFromTempAsync(fileName As String, requestOptions As RequestOptions = Nothing) As Task(Of EMailEntity)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailFromTempAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.AuthenticateAsync(SuperOffice.WebApi.Data.EMailConnectionInfoExtended,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.AuthenticateAsync(SuperOffice.WebApi.Data.EMailConnectionInfoExtended,SuperOffice.WebApi.RequestOptions)
  id: AuthenticateAsync(SuperOffice.WebApi.Data.EMailConnectionInfoExtended,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: AuthenticateAsync(EMailConnectionInfoExtended, RequestOptions)
  nameWithType: IEMailAgent.AuthenticateAsync(EMailConnectionInfoExtended, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.AuthenticateAsync(SuperOffice.WebApi.Data.EMailConnectionInfoExtended, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\n\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<bool> AuthenticateAsync(EMailConnectionInfoExtended connectionInfoExtended, RequestOptions requestOptions = null)
    parameters:
    - id: connectionInfoExtended
      type: SuperOffice.WebApi.Data.EMailConnectionInfoExtended
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Function AuthenticateAsync(connectionInfoExtended As EMailConnectionInfoExtended, requestOptions As RequestOptions = Nothing) As Task(Of Boolean)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.AuthenticateAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetEmailMessageIdsAsync(SuperOffice.WebApi.Data.EMailConnectionInfoExtended,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.GetEmailMessageIdsAsync(SuperOffice.WebApi.Data.EMailConnectionInfoExtended,SuperOffice.WebApi.RequestOptions)
  id: GetEmailMessageIdsAsync(SuperOffice.WebApi.Data.EMailConnectionInfoExtended,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: GetEmailMessageIdsAsync(EMailConnectionInfoExtended, RequestOptions)
  nameWithType: IEMailAgent.GetEmailMessageIdsAsync(EMailConnectionInfoExtended, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetEmailMessageIdsAsync(SuperOffice.WebApi.Data.EMailConnectionInfoExtended, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\n\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<string[]> GetEmailMessageIdsAsync(EMailConnectionInfoExtended connectionInfoExtended, RequestOptions requestOptions = null)
    parameters:
    - id: connectionInfoExtended
      type: SuperOffice.WebApi.Data.EMailConnectionInfoExtended
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.String[]}
    content.vb: Function GetEmailMessageIdsAsync(connectionInfoExtended As EMailConnectionInfoExtended, requestOptions As RequestOptions = Nothing) As Task(Of String())
  overload: SuperOffice.WebApi.Agents.IEMailAgent.GetEmailMessageIdsAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetExtendedEmailMessageIdsAsync(SuperOffice.WebApi.Data.EMailConnectionInfoExtended,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.GetExtendedEmailMessageIdsAsync(SuperOffice.WebApi.Data.EMailConnectionInfoExtended,SuperOffice.WebApi.RequestOptions)
  id: GetExtendedEmailMessageIdsAsync(SuperOffice.WebApi.Data.EMailConnectionInfoExtended,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: GetExtendedEmailMessageIdsAsync(EMailConnectionInfoExtended, RequestOptions)
  nameWithType: IEMailAgent.GetExtendedEmailMessageIdsAsync(EMailConnectionInfoExtended, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetExtendedEmailMessageIdsAsync(SuperOffice.WebApi.Data.EMailConnectionInfoExtended, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets not only the Message-Id&apos;s but also the UID&apos;s and the uniquevalidity property in this format-> uvalidity:uid:MsgId - and this format should be understood by GetEmailsAsString() and DeleteExtended().\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<string[]> GetExtendedEmailMessageIdsAsync(EMailConnectionInfoExtended connectionInfoExtended, RequestOptions requestOptions = null)
    parameters:
    - id: connectionInfoExtended
      type: SuperOffice.WebApi.Data.EMailConnectionInfoExtended
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.String[]}
    content.vb: Function GetExtendedEmailMessageIdsAsync(connectionInfoExtended As EMailConnectionInfoExtended, requestOptions As RequestOptions = Nothing) As Task(Of String())
  overload: SuperOffice.WebApi.Agents.IEMailAgent.GetExtendedEmailMessageIdsAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetEmailsAsStringAsync(SuperOffice.WebApi.Data.EMailConnectionInfoExtended,System.String[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.GetEmailsAsStringAsync(SuperOffice.WebApi.Data.EMailConnectionInfoExtended,System.String[],SuperOffice.WebApi.RequestOptions)
  id: GetEmailsAsStringAsync(SuperOffice.WebApi.Data.EMailConnectionInfoExtended,System.String[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: GetEmailsAsStringAsync(EMailConnectionInfoExtended, String[], RequestOptions)
  nameWithType: IEMailAgent.GetEmailsAsStringAsync(EMailConnectionInfoExtended, String[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetEmailsAsStringAsync(SuperOffice.WebApi.Data.EMailConnectionInfoExtended, System.String[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\n\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<string[]> GetEmailsAsStringAsync(EMailConnectionInfoExtended connectionInfoExtended, string[] messageIds, RequestOptions requestOptions = null)
    parameters:
    - id: connectionInfoExtended
      type: SuperOffice.WebApi.Data.EMailConnectionInfoExtended
    - id: messageIds
      type: System.String[]
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.String[]}
    content.vb: Function GetEmailsAsStringAsync(connectionInfoExtended As EMailConnectionInfoExtended, messageIds As String(), requestOptions As RequestOptions = Nothing) As Task(Of String())
  overload: SuperOffice.WebApi.Agents.IEMailAgent.GetEmailsAsStringAsync*
  nameWithType.vb: IEMailAgent.GetEmailsAsStringAsync(EMailConnectionInfoExtended, String(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IEMailAgent.GetEmailsAsStringAsync(SuperOffice.WebApi.Data.EMailConnectionInfoExtended, System.String(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetEmailsAsStringAsync(EMailConnectionInfoExtended, String(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.IEMailAgent.DeleteExtendedAsync(SuperOffice.WebApi.Data.EMailConnectionInfoExtended,System.String[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.DeleteExtendedAsync(SuperOffice.WebApi.Data.EMailConnectionInfoExtended,System.String[],SuperOffice.WebApi.RequestOptions)
  id: DeleteExtendedAsync(SuperOffice.WebApi.Data.EMailConnectionInfoExtended,System.String[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: DeleteExtendedAsync(EMailConnectionInfoExtended, String[], RequestOptions)
  nameWithType: IEMailAgent.DeleteExtendedAsync(EMailConnectionInfoExtended, String[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.DeleteExtendedAsync(SuperOffice.WebApi.Data.EMailConnectionInfoExtended, System.String[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\n\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task DeleteExtendedAsync(EMailConnectionInfoExtended connectionInfoExtended, string[] messageIds, RequestOptions requestOptions = null)
    parameters:
    - id: connectionInfoExtended
      type: SuperOffice.WebApi.Data.EMailConnectionInfoExtended
    - id: messageIds
      type: System.String[]
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function DeleteExtendedAsync(connectionInfoExtended As EMailConnectionInfoExtended, messageIds As String(), requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IEMailAgent.DeleteExtendedAsync*
  nameWithType.vb: IEMailAgent.DeleteExtendedAsync(EMailConnectionInfoExtended, String(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IEMailAgent.DeleteExtendedAsync(SuperOffice.WebApi.Data.EMailConnectionInfoExtended, System.String(), SuperOffice.WebApi.RequestOptions)
  name.vb: DeleteExtendedAsync(EMailConnectionInfoExtended, String(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.IEMailAgent.RelayMessageAsync(SuperOffice.WebApi.Data.EMailConnectionInfoExtended,System.String,System.String,System.String[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.RelayMessageAsync(SuperOffice.WebApi.Data.EMailConnectionInfoExtended,System.String,System.String,System.String[],SuperOffice.WebApi.RequestOptions)
  id: RelayMessageAsync(SuperOffice.WebApi.Data.EMailConnectionInfoExtended,System.String,System.String,System.String[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: RelayMessageAsync(EMailConnectionInfoExtended, String, String, String[], RequestOptions)
  nameWithType: IEMailAgent.RelayMessageAsync(EMailConnectionInfoExtended, String, String, String[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.RelayMessageAsync(SuperOffice.WebApi.Data.EMailConnectionInfoExtended, System.String, System.String, System.String[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\n\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task RelayMessageAsync(EMailConnectionInfoExtended connectionInfoExtended, string rfc822, string from, string[] recipients, RequestOptions requestOptions = null)
    parameters:
    - id: connectionInfoExtended
      type: SuperOffice.WebApi.Data.EMailConnectionInfoExtended
    - id: rfc822
      type: System.String
    - id: from
      type: System.String
    - id: recipients
      type: System.String[]
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function RelayMessageAsync(connectionInfoExtended As EMailConnectionInfoExtended, rfc822 As String, from As String, recipients As String(), requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IEMailAgent.RelayMessageAsync*
  nameWithType.vb: IEMailAgent.RelayMessageAsync(EMailConnectionInfoExtended, String, String, String(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IEMailAgent.RelayMessageAsync(SuperOffice.WebApi.Data.EMailConnectionInfoExtended, System.String, System.String, System.String(), SuperOffice.WebApi.RequestOptions)
  name.vb: RelayMessageAsync(EMailConnectionInfoExtended, String, String, String(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.GetEMailAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: GetEMailAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: GetEMailAsync(Int32, Boolean, RequestOptions)
  nameWithType: IEMailAgent.GetEMailAsync(Int32, Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailAsync(System.Int32, System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet en e-mail based on its primary key in the DB\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<EMailEntity> GetEMailAsync(int id, bool includeAttachments, RequestOptions requestOptions = null)
    parameters:
    - id: id
      type: System.Int32
      description: The primary key of the email row in the DB
    - id: includeAttachments
      type: System.Boolean
      description: Should we retrieve attachments embedded in the e-mail from the server
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailEntity}
      description: The e-mail
    content.vb: Function GetEMailAsync(id As Integer, includeAttachments As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of EMailEntity)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedEMailAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedEMailAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: GetUnsanitizedEMailAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: GetUnsanitizedEMailAsync(Int32, Boolean, RequestOptions)
  nameWithType: IEMailAgent.GetUnsanitizedEMailAsync(Int32, Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedEMailAsync(System.Int32, System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet en e-mail based on its primary key in the DB. The returned value is not sanitized.\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<EMailEntity> GetUnsanitizedEMailAsync(int id, bool includeAttachments, RequestOptions requestOptions = null)
    parameters:
    - id: id
      type: System.Int32
      description: The primary key of the email row in the DB
    - id: includeAttachments
      type: System.Boolean
      description: Should we retrieve attachments embedded in the e-mail from the server
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailEntity}
      description: The e-mail
    content.vb: Function GetUnsanitizedEMailAsync(id As Integer, includeAttachments As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of EMailEntity)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedEMailAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.MarkEmailsAsReadAsync(System.Int32[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.MarkEmailsAsReadAsync(System.Int32[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: MarkEmailsAsReadAsync(System.Int32[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: MarkEmailsAsReadAsync(Int32[], Boolean, RequestOptions)
  nameWithType: IEMailAgent.MarkEmailsAsReadAsync(Int32[], Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.MarkEmailsAsReadAsync(System.Int32[], System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMark one or more e-mails as (un)read\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task MarkEmailsAsReadAsync(int[] ids, bool read, RequestOptions requestOptions = null)
    parameters:
    - id: ids
      type: System.Int32[]
      description: The e-mails to handle
    - id: read
      type: System.Boolean
      description: If true mails are marked as read. If false mails are marked as unread.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function MarkEmailsAsReadAsync(ids As Integer(), read As Boolean, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IEMailAgent.MarkEmailsAsReadAsync*
  nameWithType.vb: IEMailAgent.MarkEmailsAsReadAsync(Int32(), Boolean, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IEMailAgent.MarkEmailsAsReadAsync(System.Int32(), System.Boolean, SuperOffice.WebApi.RequestOptions)
  name.vb: MarkEmailsAsReadAsync(Int32(), Boolean, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IEMailAgent.DeleteEmailsAsync(System.Int32[],System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.DeleteEmailsAsync(System.Int32[],System.String,SuperOffice.WebApi.RequestOptions)
  id: DeleteEmailsAsync(System.Int32[],System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: DeleteEmailsAsync(Int32[], String, RequestOptions)
  nameWithType: IEMailAgent.DeleteEmailsAsync(Int32[], String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.DeleteEmailsAsync(System.Int32[], System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nDelete specified mail items and optionally move to the specified folder\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task DeleteEmailsAsync(int[] ids, string moveToFolder, RequestOptions requestOptions = null)
    parameters:
    - id: ids
      type: System.Int32[]
      description: The e-mails to handle
    - id: moveToFolder
      type: System.String
      description: If set, move deleted items to this folder
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function DeleteEmailsAsync(ids As Integer(), moveToFolder As String, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IEMailAgent.DeleteEmailsAsync*
  nameWithType.vb: IEMailAgent.DeleteEmailsAsync(Int32(), String, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IEMailAgent.DeleteEmailsAsync(System.Int32(), System.String, SuperOffice.WebApi.RequestOptions)
  name.vb: DeleteEmailsAsync(Int32(), String, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IEMailAgent.MoveEmailsToTrashAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.MoveEmailsToTrashAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: MoveEmailsToTrashAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: MoveEmailsToTrashAsync(Int32[], RequestOptions)
  nameWithType: IEMailAgent.MoveEmailsToTrashAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.MoveEmailsToTrashAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nDelete specified mail items and move to the Trash folder\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task MoveEmailsToTrashAsync(int[] ids, RequestOptions requestOptions = null)
    parameters:
    - id: ids
      type: System.Int32[]
      description: The e-mails to handle
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function MoveEmailsToTrashAsync(ids As Integer(), requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IEMailAgent.MoveEmailsToTrashAsync*
  nameWithType.vb: IEMailAgent.MoveEmailsToTrashAsync(Int32(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IEMailAgent.MoveEmailsToTrashAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: MoveEmailsToTrashAsync(Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.IEMailAgent.SaveAsync(SuperOffice.WebApi.Data.EMailEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.SaveAsync(SuperOffice.WebApi.Data.EMailEntity,SuperOffice.WebApi.RequestOptions)
  id: SaveAsync(SuperOffice.WebApi.Data.EMailEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: SaveAsync(EMailEntity, RequestOptions)
  nameWithType: IEMailAgent.SaveAsync(EMailEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.SaveAsync(SuperOffice.WebApi.Data.EMailEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSave the e-mail back to the database\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<EMailEntity> SaveAsync(EMailEntity email, RequestOptions requestOptions = null)
    parameters:
    - id: email
      type: SuperOffice.WebApi.Data.EMailEntity
      description: The e-mail to save
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailEntity}
      description: The updated saved entity
    content.vb: Function SaveAsync(email As EMailEntity, requestOptions As RequestOptions = Nothing) As Task(Of EMailEntity)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.SaveAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.SaveToMailServerAsync(SuperOffice.WebApi.Data.EMailEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.SaveToMailServerAsync(SuperOffice.WebApi.Data.EMailEntity,SuperOffice.WebApi.RequestOptions)
  id: SaveToMailServerAsync(SuperOffice.WebApi.Data.EMailEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: SaveToMailServerAsync(EMailEntity, RequestOptions)
  nameWithType: IEMailAgent.SaveToMailServerAsync(EMailEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.SaveToMailServerAsync(SuperOffice.WebApi.Data.EMailEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSave the passed e-mail back to the mail server\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<EMailEntity> SaveToMailServerAsync(EMailEntity email, RequestOptions requestOptions = null)
    parameters:
    - id: email
      type: SuperOffice.WebApi.Data.EMailEntity
      description: The e-mail to save
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailEntity}
      description: The updated saved entity
    content.vb: Function SaveToMailServerAsync(email As EMailEntity, requestOptions As RequestOptions = Nothing) As Task(Of EMailEntity)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.SaveToMailServerAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.SendAsync(SuperOffice.WebApi.Data.EMailEntity[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.SendAsync(SuperOffice.WebApi.Data.EMailEntity[],SuperOffice.WebApi.RequestOptions)
  id: SendAsync(SuperOffice.WebApi.Data.EMailEntity[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: SendAsync(EMailEntity[], RequestOptions)
  nameWithType: IEMailAgent.SendAsync(EMailEntity[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.SendAsync(SuperOffice.WebApi.Data.EMailEntity[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSend the provided e-mails\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<EMailEntity[]> SendAsync(EMailEntity[] emails, RequestOptions requestOptions = null)
    parameters:
    - id: emails
      type: SuperOffice.WebApi.Data.EMailEntity[]
      description: The e-mails to send
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailEntity[]}
      description: The sent e-mails (updated with message id etc.)
    content.vb: Function SendAsync(emails As EMailEntity(), requestOptions As RequestOptions = Nothing) As Task(Of EMailEntity())
  overload: SuperOffice.WebApi.Agents.IEMailAgent.SendAsync*
  nameWithType.vb: IEMailAgent.SendAsync(EMailEntity(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IEMailAgent.SendAsync(SuperOffice.WebApi.Data.EMailEntity(), SuperOffice.WebApi.RequestOptions)
  name.vb: SendAsync(EMailEntity(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.IEMailAgent.CreateForwardEmailAsync(SuperOffice.WebApi.Data.EMailEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.CreateForwardEmailAsync(SuperOffice.WebApi.Data.EMailEntity,SuperOffice.WebApi.RequestOptions)
  id: CreateForwardEmailAsync(SuperOffice.WebApi.Data.EMailEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: CreateForwardEmailAsync(EMailEntity, RequestOptions)
  nameWithType: IEMailAgent.CreateForwardEmailAsync(EMailEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.CreateForwardEmailAsync(SuperOffice.WebApi.Data.EMailEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCreate forward email\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<EMailEntity> CreateForwardEmailAsync(EMailEntity email, RequestOptions requestOptions = null)
    parameters:
    - id: email
      type: SuperOffice.WebApi.Data.EMailEntity
      description: The e-mail to forward
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailEntity}
      description: The new forward email entity
    content.vb: Function CreateForwardEmailAsync(email As EMailEntity, requestOptions As RequestOptions = Nothing) As Task(Of EMailEntity)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.CreateForwardEmailAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.FindContactOrPersonByEmailNameAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.FindContactOrPersonByEmailNameAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  id: FindContactOrPersonByEmailNameAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: FindContactOrPersonByEmailNameAsync(String, String, RequestOptions)
  nameWithType: IEMailAgent.FindContactOrPersonByEmailNameAsync(String, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.FindContactOrPersonByEmailNameAsync(System.String, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\n\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<ContactOrPersonFromEmail[]> FindContactOrPersonByEmailNameAsync(string name, string emailAddress, RequestOptions requestOptions = null)
    parameters:
    - id: name
      type: System.String
      description: The sender name
    - id: emailAddress
      type: System.String
      description: The sender email address
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ContactOrPersonFromEmail[]}
      description: Contacts and persons matching emailaddress and name
    content.vb: Function FindContactOrPersonByEmailNameAsync(name As String, emailAddress As String, requestOptions As RequestOptions = Nothing) As Task(Of ContactOrPersonFromEmail())
  overload: SuperOffice.WebApi.Agents.IEMailAgent.FindContactOrPersonByEmailNameAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.FindContactOrPersonByEmailNameWithLimitAsync(System.String,System.String,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.FindContactOrPersonByEmailNameWithLimitAsync(System.String,System.String,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: FindContactOrPersonByEmailNameWithLimitAsync(System.String,System.String,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: FindContactOrPersonByEmailNameWithLimitAsync(String, String, Int32, Int32, RequestOptions)
  nameWithType: IEMailAgent.FindContactOrPersonByEmailNameWithLimitAsync(String, String, Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.FindContactOrPersonByEmailNameWithLimitAsync(System.String, System.String, System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\n\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<ContactOrPersonFromEmail[]> FindContactOrPersonByEmailNameWithLimitAsync(string name, string emailAddress, int numberOfContacts, int numberOfPersons, RequestOptions requestOptions = null)
    parameters:
    - id: name
      type: System.String
      description: The sender name
    - id: emailAddress
      type: System.String
      description: The sender email address
    - id: numberOfContacts
      type: System.Int32
      description: Maximum returned number of contacts
    - id: numberOfPersons
      type: System.Int32
      description: Maximum returned number of persons
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ContactOrPersonFromEmail[]}
      description: Contacts and persons matching emailaddress and name
    content.vb: Function FindContactOrPersonByEmailNameWithLimitAsync(name As String, emailAddress As String, numberOfContacts As Integer, numberOfPersons As Integer, requestOptions As RequestOptions = Nothing) As Task(Of ContactOrPersonFromEmail())
  overload: SuperOffice.WebApi.Agents.IEMailAgent.FindContactOrPersonByEmailNameWithLimitAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.RefreshFolderForAssociateAsync(System.String[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.RefreshFolderForAssociateAsync(System.String[],SuperOffice.WebApi.RequestOptions)
  id: RefreshFolderForAssociateAsync(System.String[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: RefreshFolderForAssociateAsync(String[], RequestOptions)
  nameWithType: IEMailAgent.RefreshFolderForAssociateAsync(String[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.RefreshFolderForAssociateAsync(System.String[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet all emails in folder(s) from current associate\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<string> RefreshFolderForAssociateAsync(string[] folders, RequestOptions requestOptions = null)
    parameters:
    - id: folders
      type: System.String[]
      description: List of folder names to refresh
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: JSON serialized string containing array of data about each folder
    content.vb: Function RefreshFolderForAssociateAsync(folders As String(), requestOptions As RequestOptions = Nothing) As Task(Of String)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.RefreshFolderForAssociateAsync*
  nameWithType.vb: IEMailAgent.RefreshFolderForAssociateAsync(String(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IEMailAgent.RefreshFolderForAssociateAsync(System.String(), SuperOffice.WebApi.RequestOptions)
  name.vb: RefreshFolderForAssociateAsync(String(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetNewMailAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.GetNewMailAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetNewMailAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: GetNewMailAsync(Int32[], RequestOptions)
  nameWithType: IEMailAgent.GetNewMailAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetNewMailAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet new email in folder(s) for current associate\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<EMailEnvelope[]> GetNewMailAsync(int[] folders, RequestOptions requestOptions = null)
    parameters:
    - id: folders
      type: System.Int32[]
      description: List of folder ids to check for new email
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailEnvelope[]}
      description: The downloaded email envelopes
    content.vb: Function GetNewMailAsync(folders As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of EMailEnvelope())
  overload: SuperOffice.WebApi.Agents.IEMailAgent.GetNewMailAsync*
  nameWithType.vb: IEMailAgent.GetNewMailAsync(Int32(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IEMailAgent.GetNewMailAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetNewMailAsync(Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.IEMailAgent.CacheFolderListAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.CacheFolderListAsync(SuperOffice.WebApi.RequestOptions)
  id: CacheFolderListAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: CacheFolderListAsync(RequestOptions)
  nameWithType: IEMailAgent.CacheFolderListAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.CacheFolderListAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nFetch list of folders from email server for the current account, and cache in DB\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<EMailFolder[]> CacheFolderListAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailFolder[]}
      description: List of folders from mail server
    content.vb: Function CacheFolderListAsync(requestOptions As RequestOptions = Nothing) As Task(Of EMailFolder())
  overload: SuperOffice.WebApi.Agents.IEMailAgent.CacheFolderListAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.MoveEmailsToFolderAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.MoveEmailsToFolderAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: MoveEmailsToFolderAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: MoveEmailsToFolderAsync(Int32, Int32[], RequestOptions)
  nameWithType: IEMailAgent.MoveEmailsToFolderAsync(Int32, Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.MoveEmailsToFolderAsync(System.Int32, System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMove one or more emails to the specified folder in the DB, and on the server\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task MoveEmailsToFolderAsync(int folderId, int[] emailItemIds, RequestOptions requestOptions = null)
    parameters:
    - id: folderId
      type: System.Int32
      description: The EmailFolderId of the folder to move to
    - id: emailItemIds
      type: System.Int32[]
      description: The emails to move
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function MoveEmailsToFolderAsync(folderId As Integer, emailItemIds As Integer(), requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IEMailAgent.MoveEmailsToFolderAsync*
  nameWithType.vb: IEMailAgent.MoveEmailsToFolderAsync(Int32, Int32(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IEMailAgent.MoveEmailsToFolderAsync(System.Int32, System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: MoveEmailsToFolderAsync(Int32, Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetMailFromMessageIdAsync(System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.GetMailFromMessageIdAsync(System.String,SuperOffice.WebApi.RequestOptions)
  id: GetMailFromMessageIdAsync(System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: GetMailFromMessageIdAsync(String, RequestOptions)
  nameWithType: IEMailAgent.GetMailFromMessageIdAsync(String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetMailFromMessageIdAsync(System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet email from db based on Message Id\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<EMailEntity> GetMailFromMessageIdAsync(string messageId, RequestOptions requestOptions = null)
    parameters:
    - id: messageId
      type: System.String
      description: The message id
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailEntity}
      description: EMailEntity with the provided message id
    content.vb: Function GetMailFromMessageIdAsync(messageId As String, requestOptions As RequestOptions = Nothing) As Task(Of EMailEntity)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.GetMailFromMessageIdAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetMailFromInReplyToAsync(System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.GetMailFromInReplyToAsync(System.String,SuperOffice.WebApi.RequestOptions)
  id: GetMailFromInReplyToAsync(System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: GetMailFromInReplyToAsync(String, RequestOptions)
  nameWithType: IEMailAgent.GetMailFromInReplyToAsync(String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetMailFromInReplyToAsync(System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet email from db based on In-Reply-To Message Id\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<EMailEntity> GetMailFromInReplyToAsync(string messageId, RequestOptions requestOptions = null)
    parameters:
    - id: messageId
      type: System.String
      description: The message id
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailEntity}
      description: EMailEntity that is in reply to the provided messageId
    content.vb: Function GetMailFromInReplyToAsync(messageId As String, requestOptions As RequestOptions = Nothing) As Task(Of EMailEntity)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.GetMailFromInReplyToAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.SendAndSaveEmailToTmpDocumentAsync(SuperOffice.WebApi.Data.EMailEntity,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.SendAndSaveEmailToTmpDocumentAsync(SuperOffice.WebApi.Data.EMailEntity,System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: SendAndSaveEmailToTmpDocumentAsync(SuperOffice.WebApi.Data.EMailEntity,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: SendAndSaveEmailToTmpDocumentAsync(EMailEntity, Boolean, RequestOptions)
  nameWithType: IEMailAgent.SendAndSaveEmailToTmpDocumentAsync(EMailEntity, Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.SendAndSaveEmailToTmpDocumentAsync(SuperOffice.WebApi.Data.EMailEntity, System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSend the provided e-mail and create tmp document ready to archive\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<string> SendAndSaveEmailToTmpDocumentAsync(EMailEntity email, bool stripAttachments, RequestOptions requestOptions = null)
    parameters:
    - id: email
      type: SuperOffice.WebApi.Data.EMailEntity
      description: The e-mail to send
    - id: stripAttachments
      type: System.Boolean
      description: If true, do not include attachments in tmp document
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Filename of the tmp document
    content.vb: Function SendAndSaveEmailToTmpDocumentAsync(email As EMailEntity, stripAttachments As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of String)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.SendAndSaveEmailToTmpDocumentAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.SaveEmailToTmpDocumentAsync(SuperOffice.WebApi.Data.EMailEntity,System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.SaveEmailToTmpDocumentAsync(SuperOffice.WebApi.Data.EMailEntity,System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: SaveEmailToTmpDocumentAsync(SuperOffice.WebApi.Data.EMailEntity,System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: SaveEmailToTmpDocumentAsync(EMailEntity, Int32, Boolean, RequestOptions)
  nameWithType: IEMailAgent.SaveEmailToTmpDocumentAsync(EMailEntity, Int32, Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.SaveEmailToTmpDocumentAsync(SuperOffice.WebApi.Data.EMailEntity, System.Int32, System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSave the Email as a tmp document ready to archive\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<string> SaveEmailToTmpDocumentAsync(EMailEntity email, int folderId, bool stripAttachments, RequestOptions requestOptions = null)
    parameters:
    - id: email
      type: SuperOffice.WebApi.Data.EMailEntity
      description: The e-mail to save
    - id: folderId
      type: System.Int32
      description: The folder id where the email is
    - id: stripAttachments
      type: System.Boolean
      description: If true, do not include attachments in tmp document
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Filename of the tmp document
    content.vb: Function SaveEmailToTmpDocumentAsync(email As EMailEntity, folderId As Integer, stripAttachments As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of String)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.SaveEmailToTmpDocumentAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.CreateNewPhysicalDocumentFromEmailAttachmentAsync(System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.CreateNewPhysicalDocumentFromEmailAttachmentAsync(System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: CreateNewPhysicalDocumentFromEmailAttachmentAsync(System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: CreateNewPhysicalDocumentFromEmailAttachmentAsync(Int32, Int32, String, RequestOptions)
  nameWithType: IEMailAgent.CreateNewPhysicalDocumentFromEmailAttachmentAsync(Int32, Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.CreateNewPhysicalDocumentFromEmailAttachmentAsync(System.Int32, System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSave the Email from the server as a document file connected to existing document\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<DocumentEntity> CreateNewPhysicalDocumentFromEmailAttachmentAsync(int documentId, int emailItemId, string attachmentId, RequestOptions requestOptions = null)
    parameters:
    - id: documentId
      type: System.Int32
      description: The document ID int the DB
    - id: emailItemId
      type: System.Int32
      description: The emails ID int the DB
    - id: attachmentId
      type: System.String
      description: Id string of the attachment
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DocumentEntity}
      description: The document
    content.vb: Function CreateNewPhysicalDocumentFromEmailAttachmentAsync(documentId As Integer, emailItemId As Integer, attachmentId As String, requestOptions As RequestOptions = Nothing) As Task(Of DocumentEntity)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.CreateNewPhysicalDocumentFromEmailAttachmentAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.CreateNewPhysicalDocumentFromEmailAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.CreateNewPhysicalDocumentFromEmailAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: CreateNewPhysicalDocumentFromEmailAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: CreateNewPhysicalDocumentFromEmailAsync(Int32, Int32, RequestOptions)
  nameWithType: IEMailAgent.CreateNewPhysicalDocumentFromEmailAsync(Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.CreateNewPhysicalDocumentFromEmailAsync(System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSave the Email from the server as a document file connected to existing document\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<DocumentEntity> CreateNewPhysicalDocumentFromEmailAsync(int documentId, int emailItemId, RequestOptions requestOptions = null)
    parameters:
    - id: documentId
      type: System.Int32
      description: The document ID int the DB
    - id: emailItemId
      type: System.Int32
      description: The emails ID in the DB
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DocumentEntity}
      description: The document
    content.vb: Function CreateNewPhysicalDocumentFromEmailAsync(documentId As Integer, emailItemId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of DocumentEntity)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.CreateNewPhysicalDocumentFromEmailAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.SaveDraftAsync(SuperOffice.WebApi.Data.EMailEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.SaveDraftAsync(SuperOffice.WebApi.Data.EMailEntity,SuperOffice.WebApi.RequestOptions)
  id: SaveDraftAsync(SuperOffice.WebApi.Data.EMailEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: SaveDraftAsync(EMailEntity, RequestOptions)
  nameWithType: IEMailAgent.SaveDraftAsync(EMailEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.SaveDraftAsync(SuperOffice.WebApi.Data.EMailEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSave the Email entity to the drafts folder\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<EMailEntity> SaveDraftAsync(EMailEntity entity, RequestOptions requestOptions = null)
    parameters:
    - id: entity
      type: SuperOffice.WebApi.Data.EMailEntity
      description: The entity to save
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailEntity}
      description: The saved e-mail entity
    content.vb: Function SaveDraftAsync(entity As EMailEntity, requestOptions As RequestOptions = Nothing) As Task(Of EMailEntity)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.SaveDraftAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.SetRepliedAtAsync(System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.SetRepliedAtAsync(System.String,SuperOffice.WebApi.RequestOptions)
  id: SetRepliedAtAsync(System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: SetRepliedAtAsync(String, RequestOptions)
  nameWithType: IEMailAgent.SetRepliedAtAsync(String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.SetRepliedAtAsync(System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet the replied_at field based on the MessageID\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task SetRepliedAtAsync(string messageId, RequestOptions requestOptions = null)
    parameters:
    - id: messageId
      type: System.String
      description: The MessageID
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function SetRepliedAtAsync(messageId As String, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IEMailAgent.SetRepliedAtAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailFromDocumentIdWithoutAttachmentStreamAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.GetEMailFromDocumentIdWithoutAttachmentStreamAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetEMailFromDocumentIdWithoutAttachmentStreamAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: GetEMailFromDocumentIdWithoutAttachmentStreamAsync(Int32, RequestOptions)
  nameWithType: IEMailAgent.GetEMailFromDocumentIdWithoutAttachmentStreamAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailFromDocumentIdWithoutAttachmentStreamAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet an e-mail based on an archived document\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<EMailEntity> GetEMailFromDocumentIdWithoutAttachmentStreamAsync(int documentId, RequestOptions requestOptions = null)
    parameters:
    - id: documentId
      type: System.Int32
      description: Unique id of the document
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailEntity}
      description: The e-mail
    content.vb: Function GetEMailFromDocumentIdWithoutAttachmentStreamAsync(documentId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of EMailEntity)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailFromDocumentIdWithoutAttachmentStreamAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedEMailFromDocumentIdWithoutAttachmentStreamAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedEMailFromDocumentIdWithoutAttachmentStreamAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetUnsanitizedEMailFromDocumentIdWithoutAttachmentStreamAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: GetUnsanitizedEMailFromDocumentIdWithoutAttachmentStreamAsync(Int32, RequestOptions)
  nameWithType: IEMailAgent.GetUnsanitizedEMailFromDocumentIdWithoutAttachmentStreamAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedEMailFromDocumentIdWithoutAttachmentStreamAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet an e-mail based on an archived document. The returned value is not sanitized.\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<EMailEntity> GetUnsanitizedEMailFromDocumentIdWithoutAttachmentStreamAsync(int documentId, RequestOptions requestOptions = null)
    parameters:
    - id: documentId
      type: System.Int32
      description: Unique id of the document
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailEntity}
      description: The e-mail
    content.vb: Function GetUnsanitizedEMailFromDocumentIdWithoutAttachmentStreamAsync(documentId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of EMailEntity)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedEMailFromDocumentIdWithoutAttachmentStreamAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetAttachmentFromIdAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.GetAttachmentFromIdAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetAttachmentFromIdAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: GetAttachmentFromIdAsync(Int32, String, RequestOptions)
  nameWithType: IEMailAgent.GetAttachmentFromIdAsync(Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetAttachmentFromIdAsync(System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nRetrieve an attachment from an e-mail\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<EMailAttachment> GetAttachmentFromIdAsync(int mailItemId, string attachmentId, RequestOptions requestOptions = null)
    parameters:
    - id: mailItemId
      type: System.Int32
      description: Unique ID for the e-mail to retrieve the attachment from
    - id: attachmentId
      type: System.String
      description: Id of the attachment in the e-mail
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailAttachment}
      description: The attachment
    content.vb: Function GetAttachmentFromIdAsync(mailItemId As Integer, attachmentId As String, requestOptions As RequestOptions = Nothing) As Task(Of EMailAttachment)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.GetAttachmentFromIdAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetPreviewAttachmentFromIdAsync(System.Int32,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.GetPreviewAttachmentFromIdAsync(System.Int32,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetPreviewAttachmentFromIdAsync(System.Int32,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: GetPreviewAttachmentFromIdAsync(Int32, String, String, String, RequestOptions)
  nameWithType: IEMailAgent.GetPreviewAttachmentFromIdAsync(Int32, String, String, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetPreviewAttachmentFromIdAsync(System.Int32, System.String, System.String, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nRetrieve an attachment from an e-mail. The returned data is intended to be use for a preview.\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<EMailAttachment> GetPreviewAttachmentFromIdAsync(int mailItemId, string attachmentId, string attachmentType, string attachmentFilename, RequestOptions requestOptions = null)
    parameters:
    - id: mailItemId
      type: System.Int32
      description: Unique ID for the e-mail to retrieve the attachment from
    - id: attachmentId
      type: System.String
      description: Id of the attachment in the e-mail
    - id: attachmentType
      type: System.String
      description: Mimetype of the attachment. Must be set if attachmentId contains a chain.
    - id: attachmentFilename
      type: System.String
      description: Filename of the attachment. Must be set if attachmentId contains a chain.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailAttachment}
      description: The attachment
    content.vb: Function GetPreviewAttachmentFromIdAsync(mailItemId As Integer, attachmentId As String, attachmentType As String, attachmentFilename As String, requestOptions As RequestOptions = Nothing) As Task(Of EMailAttachment)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.GetPreviewAttachmentFromIdAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedPreviewAttachmentFromIdAsync(System.Int32,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedPreviewAttachmentFromIdAsync(System.Int32,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetUnsanitizedPreviewAttachmentFromIdAsync(System.Int32,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: GetUnsanitizedPreviewAttachmentFromIdAsync(Int32, String, String, String, RequestOptions)
  nameWithType: IEMailAgent.GetUnsanitizedPreviewAttachmentFromIdAsync(Int32, String, String, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedPreviewAttachmentFromIdAsync(System.Int32, System.String, System.String, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nRetrieve an attachment from an e-mail. The returned data is intended to be use for a preview. The returned data is not sanitized.\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<EMailAttachment> GetUnsanitizedPreviewAttachmentFromIdAsync(int mailItemId, string attachmentId, string attachmentType, string attachmentFilename, RequestOptions requestOptions = null)
    parameters:
    - id: mailItemId
      type: System.Int32
      description: Unique ID for the e-mail to retrieve the attachment from
    - id: attachmentId
      type: System.String
      description: Id of the attachment in the e-mail
    - id: attachmentType
      type: System.String
      description: Mimetype of the attachment. Must be set if attachmentId contains a chain.
    - id: attachmentFilename
      type: System.String
      description: Filename of the attachment. Must be set if attachmentId contains a chain.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailAttachment}
      description: The attachment
    content.vb: Function GetUnsanitizedPreviewAttachmentFromIdAsync(mailItemId As Integer, attachmentId As String, attachmentType As String, attachmentFilename As String, requestOptions As RequestOptions = Nothing) As Task(Of EMailAttachment)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedPreviewAttachmentFromIdAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetPreviewAttachmentFromDocIdAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.GetPreviewAttachmentFromDocIdAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetPreviewAttachmentFromDocIdAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: GetPreviewAttachmentFromDocIdAsync(Int32, String, RequestOptions)
  nameWithType: IEMailAgent.GetPreviewAttachmentFromDocIdAsync(Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetPreviewAttachmentFromDocIdAsync(System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nRetrieve an attachment from an e-mail stored in the document archive. The returned data is intended to be use for a preview.\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<EMailAttachment> GetPreviewAttachmentFromDocIdAsync(int docId, string attachmentId, RequestOptions requestOptions = null)
    parameters:
    - id: docId
      type: System.Int32
      description: Unique ID for the e-mail in the document archive to retrieve the attachment from
    - id: attachmentId
      type: System.String
      description: Id of the attachment in the e-mail
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailAttachment}
      description: The attachment
    content.vb: Function GetPreviewAttachmentFromDocIdAsync(docId As Integer, attachmentId As String, requestOptions As RequestOptions = Nothing) As Task(Of EMailAttachment)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.GetPreviewAttachmentFromDocIdAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedPreviewAttachmentFromDocIdAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedPreviewAttachmentFromDocIdAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetUnsanitizedPreviewAttachmentFromDocIdAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: GetUnsanitizedPreviewAttachmentFromDocIdAsync(Int32, String, RequestOptions)
  nameWithType: IEMailAgent.GetUnsanitizedPreviewAttachmentFromDocIdAsync(Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedPreviewAttachmentFromDocIdAsync(System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nRetrieve an attachment from an e-mail stored in the document archive. The returned data is intended to be use for a preview. The returned data is not sanitized.\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<EMailAttachment> GetUnsanitizedPreviewAttachmentFromDocIdAsync(int docId, string attachmentId, RequestOptions requestOptions = null)
    parameters:
    - id: docId
      type: System.Int32
      description: Unique ID for the e-mail in the document archive to retrieve the attachment from
    - id: attachmentId
      type: System.String
      description: Id of the attachment in the e-mail
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailAttachment}
      description: The attachment
    content.vb: Function GetUnsanitizedPreviewAttachmentFromDocIdAsync(docId As Integer, attachmentId As String, requestOptions As RequestOptions = Nothing) As Task(Of EMailAttachment)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedPreviewAttachmentFromDocIdAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.TestAuthenticateAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.TestAuthenticateAsync(SuperOffice.WebApi.RequestOptions)
  id: TestAuthenticateAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: TestAuthenticateAsync(RequestOptions)
  nameWithType: IEMailAgent.TestAuthenticateAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.TestAuthenticateAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nTest if logged-in user has a working mail account \n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<bool> TestAuthenticateAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Function TestAuthenticateAsync(requestOptions As RequestOptions = Nothing) As Task(Of Boolean)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.TestAuthenticateAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.ToggleSubscriptionAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.ToggleSubscriptionAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: ToggleSubscriptionAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: ToggleSubscriptionAsync(Int32, Boolean, RequestOptions)
  nameWithType: IEMailAgent.ToggleSubscriptionAsync(Int32, Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.ToggleSubscriptionAsync(System.Int32, System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet subscription on or off on a set of folders\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task ToggleSubscriptionAsync(int folderId, bool subscriptionStatus, RequestOptions requestOptions = null)
    parameters:
    - id: folderId
      type: System.Int32
      description: The folder id to set subscription value on
    - id: subscriptionStatus
      type: System.Boolean
      description: The subscription status to set
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function ToggleSubscriptionAsync(folderId As Integer, subscriptionStatus As Boolean, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IEMailAgent.ToggleSubscriptionAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.HasNewMailAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.HasNewMailAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: HasNewMailAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: HasNewMailAsync(Int32, Int32, RequestOptions)
  nameWithType: IEMailAgent.HasNewMailAsync(Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.HasNewMailAsync(System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nFast check for new mail in the database\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<bool> HasNewMailAsync(int mailItemId, int folderId, RequestOptions requestOptions = null)
    parameters:
    - id: mailItemId
      type: System.Int32
      description: The last known mailitemid
    - id: folderId
      type: System.Int32
      description: The folderId for the folder to check for new mail
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: Has new mail if true
    content.vb: Function HasNewMailAsync(mailItemId As Integer, folderId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Boolean)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.HasNewMailAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.LatestItemIdByFolderAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.LatestItemIdByFolderAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: LatestItemIdByFolderAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: LatestItemIdByFolderAsync(Int32, RequestOptions)
  nameWithType: IEMailAgent.LatestItemIdByFolderAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.LatestItemIdByFolderAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns the latest id of the mail item by folder\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<int> LatestItemIdByFolderAsync(int folderId, RequestOptions requestOptions = null)
    parameters:
    - id: folderId
      type: System.Int32
      description: The folderId for the folder to check for the latest mail id
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: Mail Item id
    content.vb: Function LatestItemIdByFolderAsync(folderId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Integer)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.LatestItemIdByFolderAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.CreateInlineHtmlHeaderAsync(SuperOffice.WebApi.Data.EMailEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.CreateInlineHtmlHeaderAsync(SuperOffice.WebApi.Data.EMailEntity,SuperOffice.WebApi.RequestOptions)
  id: CreateInlineHtmlHeaderAsync(SuperOffice.WebApi.Data.EMailEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: CreateInlineHtmlHeaderAsync(EMailEntity, RequestOptions)
  nameWithType: IEMailAgent.CreateInlineHtmlHeaderAsync(EMailEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.CreateInlineHtmlHeaderAsync(SuperOffice.WebApi.Data.EMailEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCreate Outlook style HTML header to use in for instance reply entities and when printing\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<string> CreateInlineHtmlHeaderAsync(EMailEntity email, RequestOptions requestOptions = null)
    parameters:
    - id: email
      type: SuperOffice.WebApi.Data.EMailEntity
      description: The e-mail to generate header based on
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The generated HTML header
    content.vb: Function CreateInlineHtmlHeaderAsync(email As EMailEntity, requestOptions As RequestOptions = Nothing) As Task(Of String)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.CreateInlineHtmlHeaderAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetEmailAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.GetEmailAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetEmailAppointmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: GetEmailAppointmentAsync(Int32, RequestOptions)
  nameWithType: IEMailAgent.GetEmailAppointmentAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetEmailAppointmentAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet appointment data contained in the emails iCal attachment\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<EMailAppointment> GetEmailAppointmentAsync(int mailItemId, RequestOptions requestOptions = null)
    parameters:
    - id: mailItemId
      type: System.Int32
      description: Id identifying the email
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailAppointment}
      description: Appointment data
    content.vb: Function GetEmailAppointmentAsync(mailItemId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of EMailAppointment)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.GetEmailAppointmentAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetEmailAppointmentRecurrenceAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.GetEmailAppointmentRecurrenceAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetEmailAppointmentRecurrenceAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: GetEmailAppointmentRecurrenceAsync(Int32, RequestOptions)
  nameWithType: IEMailAgent.GetEmailAppointmentRecurrenceAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetEmailAppointmentRecurrenceAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet recurrence data contained in the email iCal attachment\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<RecurrenceInfo> GetEmailAppointmentRecurrenceAsync(int mailItemId, RequestOptions requestOptions = null)
    parameters:
    - id: mailItemId
      type: System.Int32
      description: Id identifying the email
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.RecurrenceInfo}
      description: Recurrence information
    content.vb: Function GetEmailAppointmentRecurrenceAsync(mailItemId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of RecurrenceInfo)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.GetEmailAppointmentRecurrenceAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetParticipantInfoFromEmailAddressAsync(System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.GetParticipantInfoFromEmailAddressAsync(System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetParticipantInfoFromEmailAddressAsync(System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: GetParticipantInfoFromEmailAddressAsync(String, Int32, RequestOptions)
  nameWithType: IEMailAgent.GetParticipantInfoFromEmailAddressAsync(String, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetParticipantInfoFromEmailAddressAsync(System.String, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet participant data associated with the participant in the emails iCal attachment\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<Person> GetParticipantInfoFromEmailAddressAsync(string emailAddress, int appointmentId, RequestOptions requestOptions = null)
    parameters:
    - id: emailAddress
      type: System.String
      description: Email address of participant
    - id: appointmentId
      type: System.Int32
      description: Appointment id of participant
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Person}
      description: Person information
    content.vb: Function GetParticipantInfoFromEmailAddressAsync(emailAddress As String, appointmentId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Person)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.GetParticipantInfoFromEmailAddressAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetEmailDocumentAsMimeStreamAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.GetEmailDocumentAsMimeStreamAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetEmailDocumentAsMimeStreamAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: GetEmailDocumentAsMimeStreamAsync(Int32, String, RequestOptions)
  nameWithType: IEMailAgent.GetEmailDocumentAsMimeStreamAsync(Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetEmailDocumentAsMimeStreamAsync(System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a particular document, and tries to parse it, and returns it in MIME/RFC822 format.\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<byte[]> GetEmailDocumentAsMimeStreamAsync(int documentId, string returnContentType = "application/octet-stream", RequestOptions requestOptions = null)
    parameters:
    - id: documentId
      type: System.Int32
      description: SuperOffice document ID
    - id: returnContentType
      type: System.String
      description: Accept content-type. Default &quot;application/octet-stream&quot;. Could also be &quot;application/pdf&quot;, &quot;text/plain&quot;, &quot;text/html&quot;, or &quot;multipart/related&quot;
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Byte[]}
      description: A document-stream representing the document in MIME/RFC822 format.
    content.vb: Function GetEmailDocumentAsMimeStreamAsync(documentId As Integer, returnContentType As String = "application/octet-stream", requestOptions As RequestOptions = Nothing) As Task(Of Byte())
  overload: SuperOffice.WebApi.Agents.IEMailAgent.GetEmailDocumentAsMimeStreamAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailSOInfoAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.GetEMailSOInfoAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetEMailSOInfoAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: GetEMailSOInfoAsync(Int32, RequestOptions)
  nameWithType: IEMailAgent.GetEMailSOInfoAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailSOInfoAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific EMailSOInfo object.                        \n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<EMailSOInfo> GetEMailSOInfoAsync(int eMailSOInfoId, RequestOptions requestOptions = null)
    parameters:
    - id: eMailSOInfoId
      type: System.Int32
      description: The identifier of the EMailSOInfo object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailSOInfo}
      description: EMailSOInfo
    content.vb: Function GetEMailSOInfoAsync(eMailSOInfoId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of EMailSOInfo)
  overload: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailSOInfoAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetReadySyncEmailAccountsAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.GetReadySyncEmailAccountsAsync(SuperOffice.WebApi.RequestOptions)
  id: GetReadySyncEmailAccountsAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: GetReadySyncEmailAccountsAsync(RequestOptions)
  nameWithType: IEMailAgent.GetReadySyncEmailAccountsAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetReadySyncEmailAccountsAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets the list of SyncUserAccounts that should be synced.\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task<SyncUserAccount[]> GetReadySyncEmailAccountsAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SyncUserAccount[]}
      description: List of accounts to sync
    content.vb: Function GetReadySyncEmailAccountsAsync(requestOptions As RequestOptions = Nothing) As Task(Of SyncUserAccount())
  overload: SuperOffice.WebApi.Agents.IEMailAgent.GetReadySyncEmailAccountsAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.SyncEmailAccountAsync(SuperOffice.WebApi.Data.SyncUserAccount,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.SyncEmailAccountAsync(SuperOffice.WebApi.Data.SyncUserAccount,SuperOffice.WebApi.RequestOptions)
  id: SyncEmailAccountAsync(SuperOffice.WebApi.Data.SyncUserAccount,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: SyncEmailAccountAsync(SyncUserAccount, RequestOptions)
  nameWithType: IEMailAgent.SyncEmailAccountAsync(SyncUserAccount, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.SyncEmailAccountAsync(SuperOffice.WebApi.Data.SyncUserAccount, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSync the given account\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task SyncEmailAccountAsync(SyncUserAccount syncUserAccount, RequestOptions requestOptions = null)
    parameters:
    - id: syncUserAccount
      type: SuperOffice.WebApi.Data.SyncUserAccount
      description: Account to sync
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
      description: A void return
    content.vb: Function SyncEmailAccountAsync(syncUserAccount As SyncUserAccount, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IEMailAgent.SyncEmailAccountAsync*
- uid: SuperOffice.WebApi.Agents.IEMailAgent.SyncEmailAccountsAsync(SuperOffice.WebApi.Data.SyncUserAccount[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IEMailAgent.SyncEmailAccountsAsync(SuperOffice.WebApi.Data.SyncUserAccount[],SuperOffice.WebApi.RequestOptions)
  id: SyncEmailAccountsAsync(SuperOffice.WebApi.Data.SyncUserAccount[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IEMailAgent
  langs:
  - csharp
  - vb
  name: SyncEmailAccountsAsync(SyncUserAccount[], RequestOptions)
  nameWithType: IEMailAgent.SyncEmailAccountsAsync(SyncUserAccount[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.SyncEmailAccountsAsync(SuperOffice.WebApi.Data.SyncUserAccount[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nStart syncing of the given accounts\n<p></p>\n<strong>Online Restricted:</strong> The EMail agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  syntax:
    content: Task SyncEmailAccountsAsync(SyncUserAccount[] syncUserAccounts, RequestOptions requestOptions = null)
    parameters:
    - id: syncUserAccounts
      type: SuperOffice.WebApi.Data.SyncUserAccount[]
      description: Accounts to sync
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
      description: A void return
    content.vb: Function SyncEmailAccountsAsync(syncUserAccounts As SyncUserAccount(), requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IEMailAgent.SyncEmailAccountsAsync*
  nameWithType.vb: IEMailAgent.SyncEmailAccountsAsync(SyncUserAccount(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IEMailAgent.SyncEmailAccountsAsync(SuperOffice.WebApi.Data.SyncUserAccount(), SuperOffice.WebApi.RequestOptions)
  name.vb: SyncEmailAccountsAsync(SyncUserAccount(), RequestOptions)
references:
- uid: SuperOffice.WebApi.Agents
  commentId: N:SuperOffice.WebApi.Agents
  isExternal: true
  name: SuperOffice.WebApi.Agents
  nameWithType: SuperOffice.WebApi.Agents
  fullName: SuperOffice.WebApi.Agents
- uid: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailAccountAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailAccountAsync
  isExternal: true
  name: CreateDefaultEMailAccountAsync
  nameWithType: IEMailAgent.CreateDefaultEMailAccountAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailAccountAsync
- uid: SuperOffice.WebApi.RequestOptions
  commentId: T:SuperOffice.WebApi.RequestOptions
  parent: SuperOffice.WebApi
  isExternal: true
  name: RequestOptions
  nameWithType: RequestOptions
  fullName: SuperOffice.WebApi.RequestOptions
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailAccount}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailAccount}'
  definition: System.Threading.Tasks.Task`1
  name: Task<EMailAccount>
  nameWithType: Task<EMailAccount>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.EMailAccount>
  nameWithType.vb: Task(Of EMailAccount)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.EMailAccount)
  name.vb: Task(Of EMailAccount)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.EMailAccount
    name: EMailAccount
    nameWithType: EMailAccount
    fullName: SuperOffice.WebApi.Data.EMailAccount
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.EMailAccount
    name: EMailAccount
    nameWithType: EMailAccount
    fullName: SuperOffice.WebApi.Data.EMailAccount
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi
  commentId: N:SuperOffice.WebApi
  isExternal: true
  name: SuperOffice.WebApi
  nameWithType: SuperOffice.WebApi
  fullName: SuperOffice.WebApi
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IEMailAgent.SaveEMailAccountAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.SaveEMailAccountAsync
  isExternal: true
  name: SaveEMailAccountAsync
  nameWithType: IEMailAgent.SaveEMailAccountAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.SaveEMailAccountAsync
- uid: SuperOffice.WebApi.Data.EMailAccount
  commentId: T:SuperOffice.WebApi.Data.EMailAccount
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: EMailAccount
  nameWithType: EMailAccount
  fullName: SuperOffice.WebApi.Data.EMailAccount
- uid: SuperOffice.WebApi.Data
  commentId: N:SuperOffice.WebApi.Data
  isExternal: true
  name: SuperOffice.WebApi.Data
  nameWithType: SuperOffice.WebApi.Data
  fullName: SuperOffice.WebApi.Data
- uid: SuperOffice.WebApi.Agents.IEMailAgent.DeleteEMailAccountAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.DeleteEMailAccountAsync
  isExternal: true
  name: DeleteEMailAccountAsync
  nameWithType: IEMailAgent.DeleteEMailAccountAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.DeleteEMailAccountAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailAddressAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailAddressAsync
  isExternal: true
  name: CreateDefaultEMailAddressAsync
  nameWithType: IEMailAgent.CreateDefaultEMailAddressAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailAddressAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailAddress}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailAddress}'
  definition: System.Threading.Tasks.Task`1
  name: Task<EMailAddress>
  nameWithType: Task<EMailAddress>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.EMailAddress>
  nameWithType.vb: Task(Of EMailAddress)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.EMailAddress)
  name.vb: Task(Of EMailAddress)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.EMailAddress
    name: EMailAddress
    nameWithType: EMailAddress
    fullName: SuperOffice.WebApi.Data.EMailAddress
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.EMailAddress
    name: EMailAddress
    nameWithType: EMailAddress
    fullName: SuperOffice.WebApi.Data.EMailAddress
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailAppointmentAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailAppointmentAsync
  isExternal: true
  name: CreateDefaultEMailAppointmentAsync
  nameWithType: IEMailAgent.CreateDefaultEMailAppointmentAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailAppointmentAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailAppointment}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailAppointment}'
  definition: System.Threading.Tasks.Task`1
  name: Task<EMailAppointment>
  nameWithType: Task<EMailAppointment>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.EMailAppointment>
  nameWithType.vb: Task(Of EMailAppointment)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.EMailAppointment)
  name.vb: Task(Of EMailAppointment)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.EMailAppointment
    name: EMailAppointment
    nameWithType: EMailAppointment
    fullName: SuperOffice.WebApi.Data.EMailAppointment
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.EMailAppointment
    name: EMailAppointment
    nameWithType: EMailAppointment
    fullName: SuperOffice.WebApi.Data.EMailAppointment
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailAttachmentAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailAttachmentAsync
  isExternal: true
  name: CreateDefaultEMailAttachmentAsync
  nameWithType: IEMailAgent.CreateDefaultEMailAttachmentAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailAttachmentAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailAttachment}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailAttachment}'
  definition: System.Threading.Tasks.Task`1
  name: Task<EMailAttachment>
  nameWithType: Task<EMailAttachment>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.EMailAttachment>
  nameWithType.vb: Task(Of EMailAttachment)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.EMailAttachment)
  name.vb: Task(Of EMailAttachment)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.EMailAttachment
    name: EMailAttachment
    nameWithType: EMailAttachment
    fullName: SuperOffice.WebApi.Data.EMailAttachment
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.EMailAttachment
    name: EMailAttachment
    nameWithType: EMailAttachment
    fullName: SuperOffice.WebApi.Data.EMailAttachment
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailConnectionInfoAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailConnectionInfoAsync
  isExternal: true
  name: CreateDefaultEMailConnectionInfoAsync
  nameWithType: IEMailAgent.CreateDefaultEMailConnectionInfoAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailConnectionInfoAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailConnectionInfo}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailConnectionInfo}'
  definition: System.Threading.Tasks.Task`1
  name: Task<EMailConnectionInfo>
  nameWithType: Task<EMailConnectionInfo>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.EMailConnectionInfo>
  nameWithType.vb: Task(Of EMailConnectionInfo)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.EMailConnectionInfo)
  name.vb: Task(Of EMailConnectionInfo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.EMailConnectionInfo
    name: EMailConnectionInfo
    nameWithType: EMailConnectionInfo
    fullName: SuperOffice.WebApi.Data.EMailConnectionInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.EMailConnectionInfo
    name: EMailConnectionInfo
    nameWithType: EMailConnectionInfo
    fullName: SuperOffice.WebApi.Data.EMailConnectionInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailConnectionInfoExtendedAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailConnectionInfoExtendedAsync
  isExternal: true
  name: CreateDefaultEMailConnectionInfoExtendedAsync
  nameWithType: IEMailAgent.CreateDefaultEMailConnectionInfoExtendedAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailConnectionInfoExtendedAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailConnectionInfoExtended}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailConnectionInfoExtended}'
  definition: System.Threading.Tasks.Task`1
  name: Task<EMailConnectionInfoExtended>
  nameWithType: Task<EMailConnectionInfoExtended>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.EMailConnectionInfoExtended>
  nameWithType.vb: Task(Of EMailConnectionInfoExtended)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.EMailConnectionInfoExtended)
  name.vb: Task(Of EMailConnectionInfoExtended)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.EMailConnectionInfoExtended
    name: EMailConnectionInfoExtended
    nameWithType: EMailConnectionInfoExtended
    fullName: SuperOffice.WebApi.Data.EMailConnectionInfoExtended
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.EMailConnectionInfoExtended
    name: EMailConnectionInfoExtended
    nameWithType: EMailConnectionInfoExtended
    fullName: SuperOffice.WebApi.Data.EMailConnectionInfoExtended
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailCustomHeaderAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailCustomHeaderAsync
  isExternal: true
  name: CreateDefaultEMailCustomHeaderAsync
  nameWithType: IEMailAgent.CreateDefaultEMailCustomHeaderAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailCustomHeaderAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailCustomHeader}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailCustomHeader}'
  definition: System.Threading.Tasks.Task`1
  name: Task<EMailCustomHeader>
  nameWithType: Task<EMailCustomHeader>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.EMailCustomHeader>
  nameWithType.vb: Task(Of EMailCustomHeader)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.EMailCustomHeader)
  name.vb: Task(Of EMailCustomHeader)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.EMailCustomHeader
    name: EMailCustomHeader
    nameWithType: EMailCustomHeader
    fullName: SuperOffice.WebApi.Data.EMailCustomHeader
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.EMailCustomHeader
    name: EMailCustomHeader
    nameWithType: EMailCustomHeader
    fullName: SuperOffice.WebApi.Data.EMailCustomHeader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailEntityAsync
  isExternal: true
  name: CreateDefaultEMailEntityAsync
  nameWithType: IEMailAgent.CreateDefaultEMailEntityAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailEntityAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailEntity}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailEntity}'
  definition: System.Threading.Tasks.Task`1
  name: Task<EMailEntity>
  nameWithType: Task<EMailEntity>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.EMailEntity>
  nameWithType.vb: Task(Of EMailEntity)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.EMailEntity)
  name.vb: Task(Of EMailEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.EMailEntity
    name: EMailEntity
    nameWithType: EMailEntity
    fullName: SuperOffice.WebApi.Data.EMailEntity
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.EMailEntity
    name: EMailEntity
    nameWithType: EMailEntity
    fullName: SuperOffice.WebApi.Data.EMailEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailEnvelopeAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailEnvelopeAsync
  isExternal: true
  name: CreateDefaultEMailEnvelopeAsync
  nameWithType: IEMailAgent.CreateDefaultEMailEnvelopeAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailEnvelopeAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailEnvelope}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailEnvelope}'
  definition: System.Threading.Tasks.Task`1
  name: Task<EMailEnvelope>
  nameWithType: Task<EMailEnvelope>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.EMailEnvelope>
  nameWithType.vb: Task(Of EMailEnvelope)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.EMailEnvelope)
  name.vb: Task(Of EMailEnvelope)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.EMailEnvelope
    name: EMailEnvelope
    nameWithType: EMailEnvelope
    fullName: SuperOffice.WebApi.Data.EMailEnvelope
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.EMailEnvelope
    name: EMailEnvelope
    nameWithType: EMailEnvelope
    fullName: SuperOffice.WebApi.Data.EMailEnvelope
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailFolderAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailFolderAsync
  isExternal: true
  name: CreateDefaultEMailFolderAsync
  nameWithType: IEMailAgent.CreateDefaultEMailFolderAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailFolderAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailFolder}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailFolder}'
  definition: System.Threading.Tasks.Task`1
  name: Task<EMailFolder>
  nameWithType: Task<EMailFolder>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.EMailFolder>
  nameWithType.vb: Task(Of EMailFolder)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.EMailFolder)
  name.vb: Task(Of EMailFolder)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.EMailFolder
    name: EMailFolder
    nameWithType: EMailFolder
    fullName: SuperOffice.WebApi.Data.EMailFolder
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.EMailFolder
    name: EMailFolder
    nameWithType: EMailFolder
    fullName: SuperOffice.WebApi.Data.EMailFolder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailSOInfoAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailSOInfoAsync
  isExternal: true
  name: CreateDefaultEMailSOInfoAsync
  nameWithType: IEMailAgent.CreateDefaultEMailSOInfoAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.CreateDefaultEMailSOInfoAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailSOInfo}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailSOInfo}'
  definition: System.Threading.Tasks.Task`1
  name: Task<EMailSOInfo>
  nameWithType: Task<EMailSOInfo>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.EMailSOInfo>
  nameWithType.vb: Task(Of EMailSOInfo)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.EMailSOInfo)
  name.vb: Task(Of EMailSOInfo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.EMailSOInfo
    name: EMailSOInfo
    nameWithType: EMailSOInfo
    fullName: SuperOffice.WebApi.Data.EMailSOInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.EMailSOInfo
    name: EMailSOInfo
    nameWithType: EMailSOInfo
    fullName: SuperOffice.WebApi.Data.EMailSOInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailAccountAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.GetEMailAccountAsync
  isExternal: true
  name: GetEMailAccountAsync
  nameWithType: IEMailAgent.GetEMailAccountAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailAccountAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailAccountFromEMailAddressAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.GetEMailAccountFromEMailAddressAsync
  isExternal: true
  name: GetEMailAccountFromEMailAddressAsync
  nameWithType: IEMailAgent.GetEMailAccountFromEMailAddressAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailAccountFromEMailAddressAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetCurrentAccountIdAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.GetCurrentAccountIdAsync
  isExternal: true
  name: GetCurrentAccountIdAsync
  nameWithType: IEMailAgent.GetCurrentAccountIdAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetCurrentAccountIdAsync
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: '!:System.Threading.Tasks.Task{System.Int32}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  nameWithType.vb: Task(Of Int32)
  fullName.vb: System.Threading.Tasks.Task(Of System.Int32)
  name.vb: Task(Of Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetCurrentAccountAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.GetCurrentAccountAsync
  isExternal: true
  name: GetCurrentAccountAsync
  nameWithType: IEMailAgent.GetCurrentAccountAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetCurrentAccountAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetPersonEntitiesFromEmailAddressAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.GetPersonEntitiesFromEmailAddressAsync
  isExternal: true
  name: GetPersonEntitiesFromEmailAddressAsync
  nameWithType: IEMailAgent.GetPersonEntitiesFromEmailAddressAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetPersonEntitiesFromEmailAddressAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.PersonEntity[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.PersonEntity[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<PersonEntity[]>
  nameWithType: Task<PersonEntity[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.PersonEntity[]>
  nameWithType.vb: Task(Of PersonEntity())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.PersonEntity())
  name.vb: Task(Of PersonEntity())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.PersonEntity
    name: PersonEntity
    nameWithType: PersonEntity
    fullName: SuperOffice.WebApi.Data.PersonEntity
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.PersonEntity
    name: PersonEntity
    nameWithType: PersonEntity
    fullName: SuperOffice.WebApi.Data.PersonEntity
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetPersonsFromEmailAddressAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.GetPersonsFromEmailAddressAsync
  isExternal: true
  name: GetPersonsFromEmailAddressAsync
  nameWithType: IEMailAgent.GetPersonsFromEmailAddressAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetPersonsFromEmailAddressAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Person[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Person[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Person[]>
  nameWithType: Task<Person[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.Person[]>
  nameWithType.vb: Task(Of Person())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.Person())
  name.vb: Task(Of Person())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.Person
    name: Person
    nameWithType: Person
    fullName: SuperOffice.WebApi.Data.Person
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.Person
    name: Person
    nameWithType: Person
    fullName: SuperOffice.WebApi.Data.Person
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IEMailAgent.HasMXRecordAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.HasMXRecordAsync
  isExternal: true
  name: HasMXRecordAsync
  nameWithType: IEMailAgent.HasMXRecordAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.HasMXRecordAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: '!:System.Threading.Tasks.Task{System.Boolean}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IEMailAgent.HasSPFRecordAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.HasSPFRecordAsync
  isExternal: true
  name: HasSPFRecordAsync
  nameWithType: IEMailAgent.HasSPFRecordAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.HasSPFRecordAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.ResolveEMailRecipientsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.ResolveEMailRecipientsAsync
  isExternal: true
  name: ResolveEMailRecipientsAsync
  nameWithType: IEMailAgent.ResolveEMailRecipientsAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.ResolveEMailRecipientsAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailAddress[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailAddress[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<EMailAddress[]>
  nameWithType: Task<EMailAddress[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.EMailAddress[]>
  nameWithType.vb: Task(Of EMailAddress())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.EMailAddress())
  name.vb: Task(Of EMailAddress())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.EMailAddress
    name: EMailAddress
    nameWithType: EMailAddress
    fullName: SuperOffice.WebApi.Data.EMailAddress
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.EMailAddress
    name: EMailAddress
    nameWithType: EMailAddress
    fullName: SuperOffice.WebApi.Data.EMailAddress
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailFromIdAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.GetEMailFromIdAsync
  isExternal: true
  name: GetEMailFromIdAsync
  nameWithType: IEMailAgent.GetEMailFromIdAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailFromIdAsync
- uid: SuperOffice.WebApi.Data.EMailConnectionInfo
  commentId: T:SuperOffice.WebApi.Data.EMailConnectionInfo
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: EMailConnectionInfo
  nameWithType: EMailConnectionInfo
  fullName: SuperOffice.WebApi.Data.EMailConnectionInfo
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.WebApi.Data.EMailFlags
  commentId: T:SuperOffice.WebApi.Data.EMailFlags
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: EMailFlags
  nameWithType: EMailFlags
  fullName: SuperOffice.WebApi.Data.EMailFlags
- uid: SuperOffice.WebApi.Agents.IEMailAgent.SendEMailsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.SendEMailsAsync
  isExternal: true
  name: SendEMailsAsync
  nameWithType: IEMailAgent.SendEMailsAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.SendEMailsAsync
- uid: SuperOffice.WebApi.Data.EMailEntity[]
  isExternal: true
  name: EMailEntity[]
  nameWithType: EMailEntity[]
  fullName: SuperOffice.WebApi.Data.EMailEntity[]
  nameWithType.vb: EMailEntity()
  fullName.vb: SuperOffice.WebApi.Data.EMailEntity()
  name.vb: EMailEntity()
  spec.csharp:
  - uid: SuperOffice.WebApi.Data.EMailEntity
    name: EMailEntity
    nameWithType: EMailEntity
    fullName: SuperOffice.WebApi.Data.EMailEntity
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.WebApi.Data.EMailEntity
    name: EMailEntity
    nameWithType: EMailEntity
    fullName: SuperOffice.WebApi.Data.EMailEntity
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailEntity[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailEntity[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<EMailEntity[]>
  nameWithType: Task<EMailEntity[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.EMailEntity[]>
  nameWithType.vb: Task(Of EMailEntity())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.EMailEntity())
  name.vb: Task(Of EMailEntity())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.EMailEntity
    name: EMailEntity
    nameWithType: EMailEntity
    fullName: SuperOffice.WebApi.Data.EMailEntity
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.EMailEntity
    name: EMailEntity
    nameWithType: EMailEntity
    fullName: SuperOffice.WebApi.Data.EMailEntity
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IEMailAgent.SaveEMailAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.SaveEMailAsync
  isExternal: true
  name: SaveEMailAsync
  nameWithType: IEMailAgent.SaveEMailAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.SaveEMailAsync
- uid: SuperOffice.WebApi.Data.EMailEntity
  commentId: T:SuperOffice.WebApi.Data.EMailEntity
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: EMailEntity
  nameWithType: EMailEntity
  fullName: SuperOffice.WebApi.Data.EMailEntity
- uid: SuperOffice.WebApi.Agents.IEMailAgent.AuthenticateIncomingAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.AuthenticateIncomingAsync
  isExternal: true
  name: AuthenticateIncomingAsync
  nameWithType: IEMailAgent.AuthenticateIncomingAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.AuthenticateIncomingAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.AuthenticateOutgoingAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.AuthenticateOutgoingAsync
  isExternal: true
  name: AuthenticateOutgoingAsync
  nameWithType: IEMailAgent.AuthenticateOutgoingAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.AuthenticateOutgoingAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetFolderListAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.GetFolderListAsync
  isExternal: true
  name: GetFolderListAsync
  nameWithType: IEMailAgent.GetFolderListAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetFolderListAsync
- uid: System.Threading.Tasks.Task{System.String[]}
  commentId: '!:System.Threading.Tasks.Task{System.String[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<String[]>
  nameWithType: Task<String[]>
  fullName: System.Threading.Tasks.Task<System.String[]>
  nameWithType.vb: Task(Of String())
  fullName.vb: System.Threading.Tasks.Task(Of System.String())
  name.vb: Task(Of String())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetAttachmentAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.GetAttachmentAsync
  isExternal: true
  name: GetAttachmentAsync
  nameWithType: IEMailAgent.GetAttachmentAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetAttachmentAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.MarkAsReadAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.MarkAsReadAsync
  isExternal: true
  name: MarkAsReadAsync
  nameWithType: IEMailAgent.MarkAsReadAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.MarkAsReadAsync
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetFolderEMailCountAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.GetFolderEMailCountAsync
  isExternal: true
  name: GetFolderEMailCountAsync
  nameWithType: IEMailAgent.GetFolderEMailCountAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetFolderEMailCountAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.DeleteAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.DeleteAsync
  isExternal: true
  name: DeleteAsync
  nameWithType: IEMailAgent.DeleteAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.DeleteAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.MoveToFolderAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.MoveToFolderAsync
  isExternal: true
  name: MoveToFolderAsync
  nameWithType: IEMailAgent.MoveToFolderAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.MoveToFolderAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.EmptyFolderAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.EmptyFolderAsync
  isExternal: true
  name: EmptyFolderAsync
  nameWithType: IEMailAgent.EmptyFolderAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.EmptyFolderAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailAsStreamAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.GetEMailAsStreamAsync
  isExternal: true
  name: GetEMailAsStreamAsync
  nameWithType: IEMailAgent.GetEMailAsStreamAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailAsStreamAsync
- uid: System.Threading.Tasks.Task{System.Byte[]}
  commentId: '!:System.Threading.Tasks.Task{System.Byte[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Byte[]>
  nameWithType: Task<Byte[]>
  fullName: System.Threading.Tasks.Task<System.Byte[]>
  nameWithType.vb: Task(Of Byte())
  fullName.vb: System.Threading.Tasks.Task(Of System.Byte())
  name.vb: Task(Of Byte())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IEMailAgent.FindAddressAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.FindAddressAsync
  isExternal: true
  name: FindAddressAsync
  nameWithType: IEMailAgent.FindAddressAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.FindAddressAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailFromDocumentIdAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.GetEMailFromDocumentIdAsync
  isExternal: true
  name: GetEMailFromDocumentIdAsync
  nameWithType: IEMailAgent.GetEMailFromDocumentIdAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailFromDocumentIdAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedEMailFromDocumentIdAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedEMailFromDocumentIdAsync
  isExternal: true
  name: GetUnsanitizedEMailFromDocumentIdAsync
  nameWithType: IEMailAgent.GetUnsanitizedEMailFromDocumentIdAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedEMailFromDocumentIdAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailFromAttachmentIdAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.GetEMailFromAttachmentIdAsync
  isExternal: true
  name: GetEMailFromAttachmentIdAsync
  nameWithType: IEMailAgent.GetEMailFromAttachmentIdAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailFromAttachmentIdAsync
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedEMailFromAttachmentIdAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedEMailFromAttachmentIdAsync
  isExternal: true
  name: GetUnsanitizedEMailFromAttachmentIdAsync
  nameWithType: IEMailAgent.GetUnsanitizedEMailFromAttachmentIdAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedEMailFromAttachmentIdAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailFromDocumentAttachmentIdAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.GetEMailFromDocumentAttachmentIdAsync
  isExternal: true
  name: GetEMailFromDocumentAttachmentIdAsync
  nameWithType: IEMailAgent.GetEMailFromDocumentAttachmentIdAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailFromDocumentAttachmentIdAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedEMailFromDocumentAttachmentIdAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedEMailFromDocumentAttachmentIdAsync
  isExternal: true
  name: GetUnsanitizedEMailFromDocumentAttachmentIdAsync
  nameWithType: IEMailAgent.GetUnsanitizedEMailFromDocumentAttachmentIdAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedEMailFromDocumentAttachmentIdAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailEnvelopesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.GetEMailEnvelopesAsync
  isExternal: true
  name: GetEMailEnvelopesAsync
  nameWithType: IEMailAgent.GetEMailEnvelopesAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailEnvelopesAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailEnvelope[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailEnvelope[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<EMailEnvelope[]>
  nameWithType: Task<EMailEnvelope[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.EMailEnvelope[]>
  nameWithType.vb: Task(Of EMailEnvelope())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.EMailEnvelope())
  name.vb: Task(Of EMailEnvelope())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.EMailEnvelope
    name: EMailEnvelope
    nameWithType: EMailEnvelope
    fullName: SuperOffice.WebApi.Data.EMailEnvelope
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.EMailEnvelope
    name: EMailEnvelope
    nameWithType: EMailEnvelope
    fullName: SuperOffice.WebApi.Data.EMailEnvelope
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IEMailAgent.SetSubscriptionAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.SetSubscriptionAsync
  isExternal: true
  name: SetSubscriptionAsync
  nameWithType: IEMailAgent.SetSubscriptionAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.SetSubscriptionAsync
- uid: SuperOffice.WebApi.Data.EMailFolder[]
  isExternal: true
  name: EMailFolder[]
  nameWithType: EMailFolder[]
  fullName: SuperOffice.WebApi.Data.EMailFolder[]
  nameWithType.vb: EMailFolder()
  fullName.vb: SuperOffice.WebApi.Data.EMailFolder()
  name.vb: EMailFolder()
  spec.csharp:
  - uid: SuperOffice.WebApi.Data.EMailFolder
    name: EMailFolder
    nameWithType: EMailFolder
    fullName: SuperOffice.WebApi.Data.EMailFolder
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.WebApi.Data.EMailFolder
    name: EMailFolder
    nameWithType: EMailFolder
    fullName: SuperOffice.WebApi.Data.EMailFolder
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.WebApi.Agents.IEMailAgent.CreateFolderAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.CreateFolderAsync
  isExternal: true
  name: CreateFolderAsync
  nameWithType: IEMailAgent.CreateFolderAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.CreateFolderAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.DeleteFolderAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.DeleteFolderAsync
  isExternal: true
  name: DeleteFolderAsync
  nameWithType: IEMailAgent.DeleteFolderAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.DeleteFolderAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.CreateEMailFromDocumentEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.CreateEMailFromDocumentEntityAsync
  isExternal: true
  name: CreateEMailFromDocumentEntityAsync
  nameWithType: IEMailAgent.CreateEMailFromDocumentEntityAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.CreateEMailFromDocumentEntityAsync
- uid: SuperOffice.WebApi.Data.DocumentEntity
  commentId: T:SuperOffice.WebApi.Data.DocumentEntity
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: DocumentEntity
  nameWithType: DocumentEntity
  fullName: SuperOffice.WebApi.Data.DocumentEntity
- uid: SuperOffice.WebApi.Agents.IEMailAgent.CreateEMailFromMimeMessageAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.CreateEMailFromMimeMessageAsync
  isExternal: true
  name: CreateEMailFromMimeMessageAsync
  nameWithType: IEMailAgent.CreateEMailFromMimeMessageAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.CreateEMailFromMimeMessageAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetFolderInfoAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.GetFolderInfoAsync
  isExternal: true
  name: GetFolderInfoAsync
  nameWithType: IEMailAgent.GetFolderInfoAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetFolderInfoAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailFolder[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EMailFolder[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<EMailFolder[]>
  nameWithType: Task<EMailFolder[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.EMailFolder[]>
  nameWithType.vb: Task(Of EMailFolder())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.EMailFolder())
  name.vb: Task(Of EMailFolder())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.EMailFolder
    name: EMailFolder
    nameWithType: EMailFolder
    fullName: SuperOffice.WebApi.Data.EMailFolder
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.EMailFolder
    name: EMailFolder
    nameWithType: EMailFolder
    fullName: SuperOffice.WebApi.Data.EMailFolder
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetFolderHasNewEMailAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.GetFolderHasNewEMailAsync
  isExternal: true
  name: GetFolderHasNewEMailAsync
  nameWithType: IEMailAgent.GetFolderHasNewEMailAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetFolderHasNewEMailAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailAddressesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.GetEMailAddressesAsync
  isExternal: true
  name: GetEMailAddressesAsync
  nameWithType: IEMailAgent.GetEMailAddressesAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailAddressesAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.RefreshFolderAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.RefreshFolderAsync
  isExternal: true
  name: RefreshFolderAsync
  nameWithType: IEMailAgent.RefreshFolderAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.RefreshFolderAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailFromTempAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.GetEMailFromTempAsync
  isExternal: true
  name: GetEMailFromTempAsync
  nameWithType: IEMailAgent.GetEMailFromTempAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailFromTempAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.AuthenticateAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.AuthenticateAsync
  isExternal: true
  name: AuthenticateAsync
  nameWithType: IEMailAgent.AuthenticateAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.AuthenticateAsync
- uid: SuperOffice.WebApi.Data.EMailConnectionInfoExtended
  commentId: T:SuperOffice.WebApi.Data.EMailConnectionInfoExtended
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: EMailConnectionInfoExtended
  nameWithType: EMailConnectionInfoExtended
  fullName: SuperOffice.WebApi.Data.EMailConnectionInfoExtended
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetEmailMessageIdsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.GetEmailMessageIdsAsync
  isExternal: true
  name: GetEmailMessageIdsAsync
  nameWithType: IEMailAgent.GetEmailMessageIdsAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetEmailMessageIdsAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetExtendedEmailMessageIdsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.GetExtendedEmailMessageIdsAsync
  isExternal: true
  name: GetExtendedEmailMessageIdsAsync
  nameWithType: IEMailAgent.GetExtendedEmailMessageIdsAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetExtendedEmailMessageIdsAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetEmailsAsStringAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.GetEmailsAsStringAsync
  isExternal: true
  name: GetEmailsAsStringAsync
  nameWithType: IEMailAgent.GetEmailsAsStringAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetEmailsAsStringAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.DeleteExtendedAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.DeleteExtendedAsync
  isExternal: true
  name: DeleteExtendedAsync
  nameWithType: IEMailAgent.DeleteExtendedAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.DeleteExtendedAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.RelayMessageAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.RelayMessageAsync
  isExternal: true
  name: RelayMessageAsync
  nameWithType: IEMailAgent.RelayMessageAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.RelayMessageAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.GetEMailAsync
  isExternal: true
  name: GetEMailAsync
  nameWithType: IEMailAgent.GetEMailAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedEMailAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedEMailAsync
  isExternal: true
  name: GetUnsanitizedEMailAsync
  nameWithType: IEMailAgent.GetUnsanitizedEMailAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedEMailAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.MarkEmailsAsReadAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.MarkEmailsAsReadAsync
  isExternal: true
  name: MarkEmailsAsReadAsync
  nameWithType: IEMailAgent.MarkEmailsAsReadAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.MarkEmailsAsReadAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.DeleteEmailsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.DeleteEmailsAsync
  isExternal: true
  name: DeleteEmailsAsync
  nameWithType: IEMailAgent.DeleteEmailsAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.DeleteEmailsAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.MoveEmailsToTrashAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.MoveEmailsToTrashAsync
  isExternal: true
  name: MoveEmailsToTrashAsync
  nameWithType: IEMailAgent.MoveEmailsToTrashAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.MoveEmailsToTrashAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.SaveAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.SaveAsync
  isExternal: true
  name: SaveAsync
  nameWithType: IEMailAgent.SaveAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.SaveAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.SaveToMailServerAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.SaveToMailServerAsync
  isExternal: true
  name: SaveToMailServerAsync
  nameWithType: IEMailAgent.SaveToMailServerAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.SaveToMailServerAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.SendAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.SendAsync
  isExternal: true
  name: SendAsync
  nameWithType: IEMailAgent.SendAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.SendAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.CreateForwardEmailAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.CreateForwardEmailAsync
  isExternal: true
  name: CreateForwardEmailAsync
  nameWithType: IEMailAgent.CreateForwardEmailAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.CreateForwardEmailAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.FindContactOrPersonByEmailNameAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.FindContactOrPersonByEmailNameAsync
  isExternal: true
  name: FindContactOrPersonByEmailNameAsync
  nameWithType: IEMailAgent.FindContactOrPersonByEmailNameAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.FindContactOrPersonByEmailNameAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ContactOrPersonFromEmail[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ContactOrPersonFromEmail[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ContactOrPersonFromEmail[]>
  nameWithType: Task<ContactOrPersonFromEmail[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.ContactOrPersonFromEmail[]>
  nameWithType.vb: Task(Of ContactOrPersonFromEmail())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.ContactOrPersonFromEmail())
  name.vb: Task(Of ContactOrPersonFromEmail())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.ContactOrPersonFromEmail
    name: ContactOrPersonFromEmail
    nameWithType: ContactOrPersonFromEmail
    fullName: SuperOffice.WebApi.Data.ContactOrPersonFromEmail
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.ContactOrPersonFromEmail
    name: ContactOrPersonFromEmail
    nameWithType: ContactOrPersonFromEmail
    fullName: SuperOffice.WebApi.Data.ContactOrPersonFromEmail
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IEMailAgent.FindContactOrPersonByEmailNameWithLimitAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.FindContactOrPersonByEmailNameWithLimitAsync
  isExternal: true
  name: FindContactOrPersonByEmailNameWithLimitAsync
  nameWithType: IEMailAgent.FindContactOrPersonByEmailNameWithLimitAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.FindContactOrPersonByEmailNameWithLimitAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.RefreshFolderForAssociateAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.RefreshFolderForAssociateAsync
  isExternal: true
  name: RefreshFolderForAssociateAsync
  nameWithType: IEMailAgent.RefreshFolderForAssociateAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.RefreshFolderForAssociateAsync
- uid: System.Threading.Tasks.Task{System.String}
  commentId: '!:System.Threading.Tasks.Task{System.String}'
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetNewMailAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.GetNewMailAsync
  isExternal: true
  name: GetNewMailAsync
  nameWithType: IEMailAgent.GetNewMailAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetNewMailAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.CacheFolderListAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.CacheFolderListAsync
  isExternal: true
  name: CacheFolderListAsync
  nameWithType: IEMailAgent.CacheFolderListAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.CacheFolderListAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.MoveEmailsToFolderAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.MoveEmailsToFolderAsync
  isExternal: true
  name: MoveEmailsToFolderAsync
  nameWithType: IEMailAgent.MoveEmailsToFolderAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.MoveEmailsToFolderAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetMailFromMessageIdAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.GetMailFromMessageIdAsync
  isExternal: true
  name: GetMailFromMessageIdAsync
  nameWithType: IEMailAgent.GetMailFromMessageIdAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetMailFromMessageIdAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetMailFromInReplyToAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.GetMailFromInReplyToAsync
  isExternal: true
  name: GetMailFromInReplyToAsync
  nameWithType: IEMailAgent.GetMailFromInReplyToAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetMailFromInReplyToAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.SendAndSaveEmailToTmpDocumentAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.SendAndSaveEmailToTmpDocumentAsync
  isExternal: true
  name: SendAndSaveEmailToTmpDocumentAsync
  nameWithType: IEMailAgent.SendAndSaveEmailToTmpDocumentAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.SendAndSaveEmailToTmpDocumentAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.SaveEmailToTmpDocumentAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.SaveEmailToTmpDocumentAsync
  isExternal: true
  name: SaveEmailToTmpDocumentAsync
  nameWithType: IEMailAgent.SaveEmailToTmpDocumentAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.SaveEmailToTmpDocumentAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.CreateNewPhysicalDocumentFromEmailAttachmentAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.CreateNewPhysicalDocumentFromEmailAttachmentAsync
  isExternal: true
  name: CreateNewPhysicalDocumentFromEmailAttachmentAsync
  nameWithType: IEMailAgent.CreateNewPhysicalDocumentFromEmailAttachmentAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.CreateNewPhysicalDocumentFromEmailAttachmentAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DocumentEntity}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DocumentEntity}'
  definition: System.Threading.Tasks.Task`1
  name: Task<DocumentEntity>
  nameWithType: Task<DocumentEntity>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.DocumentEntity>
  nameWithType.vb: Task(Of DocumentEntity)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.DocumentEntity)
  name.vb: Task(Of DocumentEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.DocumentEntity
    name: DocumentEntity
    nameWithType: DocumentEntity
    fullName: SuperOffice.WebApi.Data.DocumentEntity
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.DocumentEntity
    name: DocumentEntity
    nameWithType: DocumentEntity
    fullName: SuperOffice.WebApi.Data.DocumentEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IEMailAgent.CreateNewPhysicalDocumentFromEmailAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.CreateNewPhysicalDocumentFromEmailAsync
  isExternal: true
  name: CreateNewPhysicalDocumentFromEmailAsync
  nameWithType: IEMailAgent.CreateNewPhysicalDocumentFromEmailAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.CreateNewPhysicalDocumentFromEmailAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.SaveDraftAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.SaveDraftAsync
  isExternal: true
  name: SaveDraftAsync
  nameWithType: IEMailAgent.SaveDraftAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.SaveDraftAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.SetRepliedAtAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.SetRepliedAtAsync
  isExternal: true
  name: SetRepliedAtAsync
  nameWithType: IEMailAgent.SetRepliedAtAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.SetRepliedAtAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailFromDocumentIdWithoutAttachmentStreamAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.GetEMailFromDocumentIdWithoutAttachmentStreamAsync
  isExternal: true
  name: GetEMailFromDocumentIdWithoutAttachmentStreamAsync
  nameWithType: IEMailAgent.GetEMailFromDocumentIdWithoutAttachmentStreamAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailFromDocumentIdWithoutAttachmentStreamAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedEMailFromDocumentIdWithoutAttachmentStreamAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedEMailFromDocumentIdWithoutAttachmentStreamAsync
  isExternal: true
  name: GetUnsanitizedEMailFromDocumentIdWithoutAttachmentStreamAsync
  nameWithType: IEMailAgent.GetUnsanitizedEMailFromDocumentIdWithoutAttachmentStreamAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedEMailFromDocumentIdWithoutAttachmentStreamAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetAttachmentFromIdAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.GetAttachmentFromIdAsync
  isExternal: true
  name: GetAttachmentFromIdAsync
  nameWithType: IEMailAgent.GetAttachmentFromIdAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetAttachmentFromIdAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetPreviewAttachmentFromIdAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.GetPreviewAttachmentFromIdAsync
  isExternal: true
  name: GetPreviewAttachmentFromIdAsync
  nameWithType: IEMailAgent.GetPreviewAttachmentFromIdAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetPreviewAttachmentFromIdAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedPreviewAttachmentFromIdAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedPreviewAttachmentFromIdAsync
  isExternal: true
  name: GetUnsanitizedPreviewAttachmentFromIdAsync
  nameWithType: IEMailAgent.GetUnsanitizedPreviewAttachmentFromIdAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedPreviewAttachmentFromIdAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetPreviewAttachmentFromDocIdAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.GetPreviewAttachmentFromDocIdAsync
  isExternal: true
  name: GetPreviewAttachmentFromDocIdAsync
  nameWithType: IEMailAgent.GetPreviewAttachmentFromDocIdAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetPreviewAttachmentFromDocIdAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedPreviewAttachmentFromDocIdAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedPreviewAttachmentFromDocIdAsync
  isExternal: true
  name: GetUnsanitizedPreviewAttachmentFromDocIdAsync
  nameWithType: IEMailAgent.GetUnsanitizedPreviewAttachmentFromDocIdAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetUnsanitizedPreviewAttachmentFromDocIdAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.TestAuthenticateAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.TestAuthenticateAsync
  isExternal: true
  name: TestAuthenticateAsync
  nameWithType: IEMailAgent.TestAuthenticateAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.TestAuthenticateAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.ToggleSubscriptionAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.ToggleSubscriptionAsync
  isExternal: true
  name: ToggleSubscriptionAsync
  nameWithType: IEMailAgent.ToggleSubscriptionAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.ToggleSubscriptionAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.HasNewMailAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.HasNewMailAsync
  isExternal: true
  name: HasNewMailAsync
  nameWithType: IEMailAgent.HasNewMailAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.HasNewMailAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.LatestItemIdByFolderAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.LatestItemIdByFolderAsync
  isExternal: true
  name: LatestItemIdByFolderAsync
  nameWithType: IEMailAgent.LatestItemIdByFolderAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.LatestItemIdByFolderAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.CreateInlineHtmlHeaderAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.CreateInlineHtmlHeaderAsync
  isExternal: true
  name: CreateInlineHtmlHeaderAsync
  nameWithType: IEMailAgent.CreateInlineHtmlHeaderAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.CreateInlineHtmlHeaderAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetEmailAppointmentAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.GetEmailAppointmentAsync
  isExternal: true
  name: GetEmailAppointmentAsync
  nameWithType: IEMailAgent.GetEmailAppointmentAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetEmailAppointmentAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetEmailAppointmentRecurrenceAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.GetEmailAppointmentRecurrenceAsync
  isExternal: true
  name: GetEmailAppointmentRecurrenceAsync
  nameWithType: IEMailAgent.GetEmailAppointmentRecurrenceAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetEmailAppointmentRecurrenceAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.RecurrenceInfo}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.RecurrenceInfo}'
  definition: System.Threading.Tasks.Task`1
  name: Task<RecurrenceInfo>
  nameWithType: Task<RecurrenceInfo>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.RecurrenceInfo>
  nameWithType.vb: Task(Of RecurrenceInfo)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.RecurrenceInfo)
  name.vb: Task(Of RecurrenceInfo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.RecurrenceInfo
    name: RecurrenceInfo
    nameWithType: RecurrenceInfo
    fullName: SuperOffice.WebApi.Data.RecurrenceInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.RecurrenceInfo
    name: RecurrenceInfo
    nameWithType: RecurrenceInfo
    fullName: SuperOffice.WebApi.Data.RecurrenceInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetParticipantInfoFromEmailAddressAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.GetParticipantInfoFromEmailAddressAsync
  isExternal: true
  name: GetParticipantInfoFromEmailAddressAsync
  nameWithType: IEMailAgent.GetParticipantInfoFromEmailAddressAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetParticipantInfoFromEmailAddressAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Person}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Person}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Person>
  nameWithType: Task<Person>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.Person>
  nameWithType.vb: Task(Of Person)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.Person)
  name.vb: Task(Of Person)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.Person
    name: Person
    nameWithType: Person
    fullName: SuperOffice.WebApi.Data.Person
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.Person
    name: Person
    nameWithType: Person
    fullName: SuperOffice.WebApi.Data.Person
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetEmailDocumentAsMimeStreamAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.GetEmailDocumentAsMimeStreamAsync
  isExternal: true
  name: GetEmailDocumentAsMimeStreamAsync
  nameWithType: IEMailAgent.GetEmailDocumentAsMimeStreamAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetEmailDocumentAsMimeStreamAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailSOInfoAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.GetEMailSOInfoAsync
  isExternal: true
  name: GetEMailSOInfoAsync
  nameWithType: IEMailAgent.GetEMailSOInfoAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetEMailSOInfoAsync
- uid: SuperOffice.WebApi.Agents.IEMailAgent.GetReadySyncEmailAccountsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.GetReadySyncEmailAccountsAsync
  isExternal: true
  name: GetReadySyncEmailAccountsAsync
  nameWithType: IEMailAgent.GetReadySyncEmailAccountsAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.GetReadySyncEmailAccountsAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SyncUserAccount[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SyncUserAccount[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<SyncUserAccount[]>
  nameWithType: Task<SyncUserAccount[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.SyncUserAccount[]>
  nameWithType.vb: Task(Of SyncUserAccount())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.SyncUserAccount())
  name.vb: Task(Of SyncUserAccount())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.SyncUserAccount
    name: SyncUserAccount
    nameWithType: SyncUserAccount
    fullName: SuperOffice.WebApi.Data.SyncUserAccount
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.SyncUserAccount
    name: SyncUserAccount
    nameWithType: SyncUserAccount
    fullName: SuperOffice.WebApi.Data.SyncUserAccount
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IEMailAgent.SyncEmailAccountAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.SyncEmailAccountAsync
  isExternal: true
  name: SyncEmailAccountAsync
  nameWithType: IEMailAgent.SyncEmailAccountAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.SyncEmailAccountAsync
- uid: SuperOffice.WebApi.Data.SyncUserAccount
  commentId: T:SuperOffice.WebApi.Data.SyncUserAccount
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: SyncUserAccount
  nameWithType: SyncUserAccount
  fullName: SuperOffice.WebApi.Data.SyncUserAccount
- uid: SuperOffice.WebApi.Agents.IEMailAgent.SyncEmailAccountsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IEMailAgent.SyncEmailAccountsAsync
  isExternal: true
  name: SyncEmailAccountsAsync
  nameWithType: IEMailAgent.SyncEmailAccountsAsync
  fullName: SuperOffice.WebApi.Agents.IEMailAgent.SyncEmailAccountsAsync
- uid: SuperOffice.WebApi.Data.SyncUserAccount[]
  isExternal: true
  name: SyncUserAccount[]
  nameWithType: SyncUserAccount[]
  fullName: SuperOffice.WebApi.Data.SyncUserAccount[]
  nameWithType.vb: SyncUserAccount()
  fullName.vb: SuperOffice.WebApi.Data.SyncUserAccount()
  name.vb: SyncUserAccount()
  spec.csharp:
  - uid: SuperOffice.WebApi.Data.SyncUserAccount
    name: SyncUserAccount
    nameWithType: SyncUserAccount
    fullName: SuperOffice.WebApi.Data.SyncUserAccount
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.WebApi.Data.SyncUserAccount
    name: SyncUserAccount
    nameWithType: SyncUserAccount
    fullName: SuperOffice.WebApi.Data.SyncUserAccount
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
