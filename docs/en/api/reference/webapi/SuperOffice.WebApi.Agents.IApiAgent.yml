### YamlMime:ManagedReference
items:
- uid: SuperOffice.WebApi.Agents.IApiAgent
  commentId: T:SuperOffice.WebApi.Agents.IApiAgent
  id: IApiAgent
  parent: SuperOffice.WebApi.Agents
  children:
  - SuperOffice.WebApi.Agents.IApiAgent.GetApiVersionAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IApiAgent.GetTenantStatusAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  langs:
  - csharp
  - vb
  name: IApiAgent
  nameWithType: IApiAgent
  fullName: SuperOffice.WebApi.Agents.IApiAgent
  type: Interface
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nInterface for API agents: API info, tenant status, Client library version\n"
  syntax:
    content: 'public interface IApiAgent : IDisposable'
    content.vb: >-
      Public Interface IApiAgent
          Inherits IDisposable
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.WebApi.Agents.IApiAgent.GetApiVersionAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IApiAgent.GetApiVersionAsync(SuperOffice.WebApi.RequestOptions)
  id: GetApiVersionAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IApiAgent
  langs:
  - csharp
  - vb
  name: GetApiVersionAsync(RequestOptions)
  nameWithType: IApiAgent.GetApiVersionAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IApiAgent.GetApiVersionAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets version info from base URL.\n"
  syntax:
    content: Task<StringDictionary> GetApiVersionAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.StringDictionary}
      description: 'Dictionary containing meta-data: &quot;NetServerVersion&quot;, &quot;Services&quot;, &quot;Version&quot;'
    content.vb: Function GetApiVersionAsync(requestOptions As RequestOptions = Nothing) As Task(Of StringDictionary)
  overload: SuperOffice.WebApi.Agents.IApiAgent.GetApiVersionAsync*
- uid: SuperOffice.WebApi.Agents.IApiAgent.GetTenantStatusAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IApiAgent.GetTenantStatusAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetTenantStatusAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IApiAgent
  langs:
  - csharp
  - vb
  name: GetTenantStatusAsync(String, String, RequestOptions)
  nameWithType: IApiAgent.GetTenantStatusAsync(String, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IApiAgent.GetTenantStatusAsync(System.String, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns the tenant status for a given customer, in a given environment. \nDoes not need base URL to be set.\n"
  syntax:
    content: Task<TenantStatus> GetTenantStatusAsync(string tenantCustId, string subdomain, RequestOptions requestOptions = null)
    parameters:
    - id: tenantCustId
      type: System.String
      description: 'The Online customer id: &quot;Cust1234&quot; '
    - id: subdomain
      type: System.String
      description: '&quot;sod&quot;, &quot;qastage&quot; or &quot;online&quot;. Default &quot;online&quot; (production). See <xref href="SuperOffice.WebApi.SubDomain" data-throw-if-not-resolved="false"></xref>'
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TenantStatus}
      description: Tenant status
    content.vb: Function GetTenantStatusAsync(tenantCustId As String, subdomain As String, requestOptions As RequestOptions = Nothing) As Task(Of TenantStatus)
  overload: SuperOffice.WebApi.Agents.IApiAgent.GetTenantStatusAsync*
references:
- uid: SuperOffice.WebApi.Agents
  commentId: N:SuperOffice.WebApi.Agents
  isExternal: true
  name: SuperOffice.WebApi.Agents
  nameWithType: SuperOffice.WebApi.Agents
  fullName: SuperOffice.WebApi.Agents
- uid: SuperOffice.WebApi.Agents.IApiAgent.GetApiVersionAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IApiAgent.GetApiVersionAsync
  isExternal: true
  name: GetApiVersionAsync
  nameWithType: IApiAgent.GetApiVersionAsync
  fullName: SuperOffice.WebApi.Agents.IApiAgent.GetApiVersionAsync
- uid: SuperOffice.WebApi.RequestOptions
  commentId: T:SuperOffice.WebApi.RequestOptions
  parent: SuperOffice.WebApi
  isExternal: true
  name: RequestOptions
  nameWithType: RequestOptions
  fullName: SuperOffice.WebApi.RequestOptions
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.StringDictionary}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.StringDictionary}'
  definition: System.Threading.Tasks.Task`1
  name: Task<StringDictionary>
  nameWithType: Task<StringDictionary>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.StringDictionary>
  nameWithType.vb: Task(Of StringDictionary)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.StringDictionary)
  name.vb: Task(Of StringDictionary)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.StringDictionary
    name: StringDictionary
    nameWithType: StringDictionary
    fullName: SuperOffice.WebApi.Data.StringDictionary
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.StringDictionary
    name: StringDictionary
    nameWithType: StringDictionary
    fullName: SuperOffice.WebApi.Data.StringDictionary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi
  commentId: N:SuperOffice.WebApi
  isExternal: true
  name: SuperOffice.WebApi
  nameWithType: SuperOffice.WebApi
  fullName: SuperOffice.WebApi
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IApiAgent.GetTenantStatusAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IApiAgent.GetTenantStatusAsync
  isExternal: true
  name: GetTenantStatusAsync
  nameWithType: IApiAgent.GetTenantStatusAsync
  fullName: SuperOffice.WebApi.Agents.IApiAgent.GetTenantStatusAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TenantStatus}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TenantStatus}'
  definition: System.Threading.Tasks.Task`1
  name: Task<TenantStatus>
  nameWithType: Task<TenantStatus>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.TenantStatus>
  nameWithType.vb: Task(Of TenantStatus)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.TenantStatus)
  name.vb: Task(Of TenantStatus)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.TenantStatus
    name: TenantStatus
    nameWithType: TenantStatus
    fullName: SuperOffice.WebApi.Data.TenantStatus
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.TenantStatus
    name: TenantStatus
    nameWithType: TenantStatus
    fullName: SuperOffice.WebApi.Data.TenantStatus
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
