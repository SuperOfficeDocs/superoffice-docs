### YamlMime:ManagedReference
items:
- uid: SuperOffice.License.SoLicenseNames
  commentId: T:SuperOffice.License.SoLicenseNames
  id: SoLicenseNames
  parent: SuperOffice.License
  children:
  - SuperOffice.License.SoLicenseNames.AI
  - SuperOffice.License.SoLicenseNames.AdAuth
  - SuperOffice.License.SoLicenseNames.AdminAnonymousUser
  - SuperOffice.License.SoLicenseNames.AdminExternUser
  - SuperOffice.License.SoLicenseNames.AdminSystemUser
  - SuperOffice.License.SoLicenseNames.AiCategorization
  - SuperOffice.License.SoLicenseNames.AiChatbot
  - SuperOffice.License.SoLicenseNames.AiPlatform
  - SuperOffice.License.SoLicenseNames.AiTextServices
  - SuperOffice.License.SoLicenseNames.AnonymousUser
  - SuperOffice.License.SoLicenseNames.AnonymousUserCal
  - SuperOffice.License.SoLicenseNames.AreaMgt
  - SuperOffice.License.SoLicenseNames.Audience
  - SuperOffice.License.SoLicenseNames.Chat
  - SuperOffice.License.SoLicenseNames.ChatCal
  - SuperOffice.License.SoLicenseNames.ChatFree
  - SuperOffice.License.SoLicenseNames.ConfigScreens
  - SuperOffice.License.SoLicenseNames.CustomApps
  - SuperOffice.License.SoLicenseNames.CustomObjects
  - SuperOffice.License.SoLicenseNames.Dash
  - SuperOffice.License.SoLicenseNames.DashCal
  - SuperOffice.License.SoLicenseNames.DataBridge
  - SuperOffice.License.SoLicenseNames.DbMirror
  - SuperOffice.License.SoLicenseNames.Devnet
  - SuperOffice.License.SoLicenseNames.Document
  - SuperOffice.License.SoLicenseNames.EJournalAdmin
  - SuperOffice.License.SoLicenseNames.EJournalAdvancedFaq
  - SuperOffice.License.SoLicenseNames.EJournalBlogic
  - SuperOffice.License.SoLicenseNames.EJournalClient
  - SuperOffice.License.SoLicenseNames.EJournalCustomer
  - SuperOffice.License.SoLicenseNames.EJournalCustomerLang
  - SuperOffice.License.SoLicenseNames.EJournalDocument
  - SuperOffice.License.SoLicenseNames.EJournalExtdb
  - SuperOffice.License.SoLicenseNames.EJournalHelp
  - SuperOffice.License.SoLicenseNames.EJournalKnowledge
  - SuperOffice.License.SoLicenseNames.EJournalMacro
  - SuperOffice.License.SoLicenseNames.EJournalReadonlyClient
  - SuperOffice.License.SoLicenseNames.EJournalRms
  - SuperOffice.License.SoLicenseNames.EJournalSimClient
  - SuperOffice.License.SoLicenseNames.EJournalSimReadonlyClient
  - SuperOffice.License.SoLicenseNames.EJournalSms
  - SuperOffice.License.SoLicenseNames.EJournalSoap
  - SuperOffice.License.SoLicenseNames.EJournalSoapPublic
  - SuperOffice.License.SoLicenseNames.EJournalSpm
  - SuperOffice.License.SoLicenseNames.EJournalSpmCal
  - SuperOffice.License.SoLicenseNames.EJournalStandardEdition
  - SuperOffice.License.SoLicenseNames.EJournalStat
  - SuperOffice.License.SoLicenseNames.EJournalTicket
  - SuperOffice.License.SoLicenseNames.Engagement
  - SuperOffice.License.SoLicenseNames.ErpSync
  - SuperOffice.License.SoLicenseNames.Escalate
  - SuperOffice.License.SoLicenseNames.ExchangeSync
  - SuperOffice.License.SoLicenseNames.ExpanderServices
  - SuperOffice.License.SoLicenseNames.ExternUser
  - SuperOffice.License.SoLicenseNames.ExternUserCal
  - SuperOffice.License.SoLicenseNames.ExtraStorage
  - SuperOffice.License.SoLicenseNames.FeaturePricing
  - SuperOffice.License.SoLicenseNames.Federation
  - SuperOffice.License.SoLicenseNames.Forms
  - SuperOffice.License.SoLicenseNames.FormsCal
  - SuperOffice.License.SoLicenseNames.FormsFree
  - SuperOffice.License.SoLicenseNames.FreeMailings
  - SuperOffice.License.SoLicenseNames.FreeProjects
  - SuperOffice.License.SoLicenseNames.FreeTrial
  - SuperOffice.License.SoLicenseNames.G9
  - SuperOffice.License.SoLicenseNames.GoogleApps
  - SuperOffice.License.SoLicenseNames.Guide
  - SuperOffice.License.SoLicenseNames.GuideCal
  - SuperOffice.License.SoLicenseNames.HugoAI
  - SuperOffice.License.SoLicenseNames.Import
  - SuperOffice.License.SoLicenseNames.InboxFilter
  - SuperOffice.License.SoLicenseNames.MailMergeCal
  - SuperOffice.License.SoLicenseNames.Maintenance
  - SuperOffice.License.SoLicenseNames.MarketingAutomation
  - SuperOffice.License.SoLicenseNames.MarketingAutomationCal
  - SuperOffice.License.SoLicenseNames.MarketingPlatform
  - SuperOffice.License.SoLicenseNames.MarketingT1
  - SuperOffice.License.SoLicenseNames.MarketingT2
  - SuperOffice.License.SoLicenseNames.Nebula
  - SuperOffice.License.SoLicenseNames.NeedConsent
  - SuperOffice.License.SoLicenseNames.Office365
  - SuperOffice.License.SoLicenseNames.Online
  - SuperOffice.License.SoLicenseNames.OnlineServices
  - SuperOffice.License.SoLicenseNames.OnlineWebServices
  - SuperOffice.License.SoLicenseNames.OutlookSynchronizer
  - SuperOffice.License.SoLicenseNames.PocketCrmCal
  - SuperOffice.License.SoLicenseNames.PocketCrmServer
  - SuperOffice.License.SoLicenseNames.PremiumSupport
  - SuperOffice.License.SoLicenseNames.Project
  - SuperOffice.License.SoLicenseNames.ProjectCal
  - SuperOffice.License.SoLicenseNames.Publish
  - SuperOffice.License.SoLicenseNames.Quote
  - SuperOffice.License.SoLicenseNames.QuoteCal
  - SuperOffice.License.SoLicenseNames.Relation
  - SuperOffice.License.SoLicenseNames.RelationCal
  - SuperOffice.License.SoLicenseNames.RemoteTravel
  - SuperOffice.License.SoLicenseNames.Rental
  - SuperOffice.License.SoLicenseNames.Report
  - SuperOffice.License.SoLicenseNames.ReportCal
  - SuperOffice.License.SoLicenseNames.ReporterStudio
  - SuperOffice.License.SoLicenseNames.ReporterStudioUser
  - SuperOffice.License.SoLicenseNames.RequestBatch
  - SuperOffice.License.SoLicenseNames.SCIM
  - SuperOffice.License.SoLicenseNames.Saint
  - SuperOffice.License.SoLicenseNames.SaintCal
  - SuperOffice.License.SoLicenseNames.Sale
  - SuperOffice.License.SoLicenseNames.SaleCal
  - SuperOffice.License.SoLicenseNames.SalesT1
  - SuperOffice.License.SoLicenseNames.SalesT2
  - SuperOffice.License.SoLicenseNames.Sandbox
  - SuperOffice.License.SoLicenseNames.Sapb1link
  - SuperOffice.License.SoLicenseNames.Satellite
  - SuperOffice.License.SoLicenseNames.Selection
  - SuperOffice.License.SoLicenseNames.SelectionCal
  - SuperOffice.License.SoLicenseNames.SelectionCombinedCal
  - SuperOffice.License.SoLicenseNames.Server
  - SuperOffice.License.SoLicenseNames.ServiceT1
  - SuperOffice.License.SoLicenseNames.ServiceT2
  - SuperOffice.License.SoLicenseNames.SmsMailings
  - SuperOffice.License.SoLicenseNames.Solo
  - SuperOffice.License.SoLicenseNames.Stakeholder
  - SuperOffice.License.SoLicenseNames.StakeholderCal
  - SuperOffice.License.SoLicenseNames.Subscription
  - SuperOffice.License.SoLicenseNames.SuperLicenseAssistant
  - SuperOffice.License.SoLicenseNames.SuperLicenseComplete
  - SuperOffice.License.SoLicenseNames.SuperLicenseContactManager
  - SuperOffice.License.SoLicenseNames.SuperLicenseMarketingPro
  - SuperOffice.License.SoLicenseNames.SuperLicenseNoSelection
  - SuperOffice.License.SoLicenseNames.SuperLicenseSalesPro
  - SuperOffice.License.SoLicenseNames.SuperLicenseServicePro
  - SuperOffice.License.SoLicenseNames.SuperlicenseAimCustomerCentre
  - SuperOffice.License.SoLicenseNames.SuperlicenseAimCustomerPages
  - SuperOffice.License.SoLicenseNames.SuperlicenseAimCustomerPortal
  - SuperOffice.License.SoLicenseNames.SuperlicenseAimFaq
  - SuperOffice.License.SoLicenseNames.SuperlicenseAimIntegrator
  - SuperOffice.License.SoLicenseNames.SuperlicenseAimSdk
  - SuperOffice.License.SoLicenseNames.SuperlicenseEJournalCustomerCentre
  - SuperOffice.License.SoLicenseNames.SuperlicenseEJournalDesigner
  - SuperOffice.License.SoLicenseNames.SuperlicenseEJournalEmarketing
  - SuperOffice.License.SoLicenseNames.SuperlicenseEJournalIntegrator
  - SuperOffice.License.SoLicenseNames.SuperlicenseEjOnlinePro
  - SuperOffice.License.SoLicenseNames.SuperlicenseEjOnlineStd
  - SuperOffice.License.SoLicenseNames.SuperlicenseExpanderForCollaboration
  - SuperOffice.License.SoLicenseNames.SuperlicenseOnlinePro
  - SuperOffice.License.SoLicenseNames.SuperlicenseOnlineStd
  - SuperOffice.License.SoLicenseNames.SuperlicenseVismaNetPro
  - SuperOffice.License.SoLicenseNames.SyncServer
  - SuperOffice.License.SoLicenseNames.SynchronizerCal
  - SuperOffice.License.SoLicenseNames.SystemUser
  - SuperOffice.License.SoLicenseNames.SystemUserCal
  - SuperOffice.License.SoLicenseNames.T1
  - SuperOffice.License.SoLicenseNames.T2
  - SuperOffice.License.SoLicenseNames.Target
  - SuperOffice.License.SoLicenseNames.TargetAppointment
  - SuperOffice.License.SoLicenseNames.TargetAppointmentUnlimited
  - SuperOffice.License.SoLicenseNames.TargetCal
  - SuperOffice.License.SoLicenseNames.TargetProject
  - SuperOffice.License.SoLicenseNames.TargetProjectUnlimited
  - SuperOffice.License.SoLicenseNames.TargetSale
  - SuperOffice.License.SoLicenseNames.TargetSaleUnlimited
  - SuperOffice.License.SoLicenseNames.TargetTicket
  - SuperOffice.License.SoLicenseNames.TargetTicketUnlimited
  - SuperOffice.License.SoLicenseNames.Ten
  - SuperOffice.License.SoLicenseNames.TenMarketing
  - SuperOffice.License.SoLicenseNames.TenSales
  - SuperOffice.License.SoLicenseNames.TenSalesMarketing
  - SuperOffice.License.SoLicenseNames.TenSalesService
  - SuperOffice.License.SoLicenseNames.TenSalesServiceMarketing
  - SuperOffice.License.SoLicenseNames.TenService
  - SuperOffice.License.SoLicenseNames.TenServiceMarketing
  - SuperOffice.License.SoLicenseNames.Test
  - SuperOffice.License.SoLicenseNames.TestDrive
  - SuperOffice.License.SoLicenseNames.Travel
  - SuperOffice.License.SoLicenseNames.Udef
  - SuperOffice.License.SoLicenseNames.User
  - SuperOffice.License.SoLicenseNames.UserManagement
  - SuperOffice.License.SoLicenseNames.VideoMeet
  - SuperOffice.License.SoLicenseNames.VisibleFor
  - SuperOffice.License.SoLicenseNames.Web
  - SuperOffice.License.SoLicenseNames.Windows
  langs:
  - csharp
  - vb
  name: SoLicenseNames
  nameWithType: SoLicenseNames
  fullName: SuperOffice.License.SoLicenseNames
  type: Class
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    License names for SuperOffice Module Licenses. Use

    SuperOffice.Security.Principal.SoPrincipal.GetLicense and 

    SuperOffice.Security.Principal.SoPrincipal.HasLicense with these constants.
  example: []
  syntax:
    content: public static class SoLicenseNames
    content.vb: Public Module SoLicenseNames
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: SuperOffice.License.SoLicenseNames.Server
  commentId: F:SuperOffice.License.SoLicenseNames.Server
  id: Server
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: Server
  nameWithType: SoLicenseNames.Server
  fullName: SuperOffice.License.SoLicenseNames.Server
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.server: SuperOffice NetServer 

    System License:
  example: []
  syntax:
    content: public const string Server = "superoffice.server"
    return:
      type: System.String
    content.vb: Public Const Server As String = "superoffice.server"
- uid: SuperOffice.License.SoLicenseNames.Saint
  commentId: F:SuperOffice.License.SoLicenseNames.Saint
  id: Saint
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: Saint
  nameWithType: SoLicenseNames.Saint
  fullName: SuperOffice.License.SoLicenseNames.Saint
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.saint: Sales Intelligence Turns on SAINT counters, status monitors in admin+clients

    System License:
  example: []
  syntax:
    content: public const string Saint = "superoffice.saint"
    return:
      type: System.String
    content.vb: Public Const Saint As String = "superoffice.saint"
- uid: SuperOffice.License.SoLicenseNames.Quote
  commentId: F:SuperOffice.License.SoLicenseNames.Quote
  id: Quote
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: Quote
  nameWithType: SoLicenseNames.Quote
  fullName: SuperOffice.License.SoLicenseNames.Quote
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.quote: Quote Turns on products and quotes in admin

    System License:
  example: []
  syntax:
    content: public const string Quote = "superoffice.quote"
    return:
      type: System.String
    content.vb: Public Const Quote As String = "superoffice.quote"
- uid: SuperOffice.License.SoLicenseNames.ErpSync
  commentId: F:SuperOffice.License.SoLicenseNames.ErpSync
  id: ErpSync
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: ErpSync
  nameWithType: SoLicenseNames.ErpSync
  fullName: SuperOffice.License.SoLicenseNames.ErpSync
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.erp-sync: Turns on ERP Sync in admin + clients

    System License:
  example: []
  syntax:
    content: public const string ErpSync = "superoffice.erp-sync"
    return:
      type: System.String
    content.vb: Public Const ErpSync As String = "superoffice.erp-sync"
- uid: SuperOffice.License.SoLicenseNames.AreaMgt
  commentId: F:SuperOffice.License.SoLicenseNames.AreaMgt
  id: AreaMgt
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: AreaMgt
  nameWithType: SoLicenseNames.AreaMgt
  fullName: SuperOffice.License.SoLicenseNames.AreaMgt
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.area-mgt: Area Management Turns on Area Mgt in SOADMIN

    System License:
  example: []
  syntax:
    content: public const string AreaMgt = "superoffice.area-mgt"
    return:
      type: System.String
    content.vb: Public Const AreaMgt As String = "superoffice.area-mgt"
- uid: SuperOffice.License.SoLicenseNames.SuperlicenseExpanderForCollaboration
  commentId: F:SuperOffice.License.SoLicenseNames.SuperlicenseExpanderForCollaboration
  id: SuperlicenseExpanderForCollaboration
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: SuperlicenseExpanderForCollaboration
  nameWithType: SoLicenseNames.SuperlicenseExpanderForCollaboration
  fullName: SuperOffice.License.SoLicenseNames.SuperlicenseExpanderForCollaboration
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.superlicense-expander-for-collaboration: Expander for Collaboration Enables External and Anonymous access to NetServer

    System License:
  example: []
  syntax:
    content: public const string SuperlicenseExpanderForCollaboration = "superoffice.superlicense-expander-for-collaboration"
    return:
      type: System.String
    content.vb: Public Const SuperlicenseExpanderForCollaboration As String = "superoffice.superlicense-expander-for-collaboration"
- uid: SuperOffice.License.SoLicenseNames.ExternUser
  commentId: F:SuperOffice.License.SoLicenseNames.ExternUser
  id: ExternUser
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: ExternUser
  nameWithType: SoLicenseNames.ExternUser
  fullName: SuperOffice.License.SoLicenseNames.ExternUser
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.extern-user: External Users Turns on external users in SOADMIN user panel and NetServer

    System License: Hidden
  example: []
  syntax:
    content: public const string ExternUser = "superoffice.extern-user"
    return:
      type: System.String
    content.vb: Public Const ExternUser As String = "superoffice.extern-user"
- uid: SuperOffice.License.SoLicenseNames.CustomApps
  commentId: F:SuperOffice.License.SoLicenseNames.CustomApps
  id: CustomApps
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: CustomApps
  nameWithType: SoLicenseNames.CustomApps
  fullName: SuperOffice.License.SoLicenseNames.CustomApps
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.custom-apps: Enables un-certified apps without going through app store.

    System License: Hidden
  example: []
  syntax:
    content: public const string CustomApps = "superoffice.custom-apps"
    return:
      type: System.String
    content.vb: Public Const CustomApps As String = "superoffice.custom-apps"
- uid: SuperOffice.License.SoLicenseNames.SystemUser
  commentId: F:SuperOffice.License.SoLicenseNames.SystemUser
  id: SystemUser
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: SystemUser
  nameWithType: SoLicenseNames.SystemUser
  fullName: SuperOffice.License.SoLicenseNames.SystemUser
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.system-user: System Users Turns on system user in SOADMIN user panel and NetServer

    System License: Hidden
  example: []
  syntax:
    content: public const string SystemUser = "superoffice.system-user"
    return:
      type: System.String
    content.vb: Public Const SystemUser As String = "superoffice.system-user"
- uid: SuperOffice.License.SoLicenseNames.AnonymousUser
  commentId: F:SuperOffice.License.SoLicenseNames.AnonymousUser
  id: AnonymousUser
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: AnonymousUser
  nameWithType: SoLicenseNames.AnonymousUser
  fullName: SuperOffice.License.SoLicenseNames.AnonymousUser
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.anonymous-user: Anonymous Users Turns on anonymous user in SOADMIN user panel and NetServer

    System License: Hidden
  example: []
  syntax:
    content: public const string AnonymousUser = "superoffice.anonymous-user"
    return:
      type: System.String
    content.vb: Public Const AnonymousUser As String = "superoffice.anonymous-user"
- uid: SuperOffice.License.SoLicenseNames.Udef
  commentId: F:SuperOffice.License.SoLicenseNames.Udef
  id: Udef
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: Udef
  nameWithType: SoLicenseNames.Udef
  fullName: SuperOffice.License.SoLicenseNames.Udef
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.udef: User-def fields Turns on udef field panel in SOADMIN and in CRM clients, NetServer.

    System License: Hidden
  example: []
  syntax:
    content: public const string Udef = "superoffice.udef"
    return:
      type: System.String
    content.vb: Public Const Udef As String = "superoffice.udef"
- uid: SuperOffice.License.SoLicenseNames.Import
  commentId: F:SuperOffice.License.SoLicenseNames.Import
  id: Import
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: Import
  nameWithType: SoLicenseNames.Import
  fullName: SuperOffice.License.SoLicenseNames.Import
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.import: Import Turns on import panel in SOADMIN

    System License: Hidden
  example: []
  syntax:
    content: public const string Import = "superoffice.import"
    return:
      type: System.String
    content.vb: Public Const Import As String = "superoffice.import"
- uid: SuperOffice.License.SoLicenseNames.AdAuth
  commentId: F:SuperOffice.License.SoLicenseNames.AdAuth
  id: AdAuth
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: AdAuth
  nameWithType: SoLicenseNames.AdAuth
  fullName: SuperOffice.License.SoLicenseNames.AdAuth
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.ad-auth: Active Directory Authentication integration

    System License: Hidden
  example: []
  syntax:
    content: public const string AdAuth = "superoffice.ad-auth"
    return:
      type: System.String
    content.vb: Public Const AdAuth As String = "superoffice.ad-auth"
- uid: SuperOffice.License.SoLicenseNames.Federation
  commentId: F:SuperOffice.License.SoLicenseNames.Federation
  id: Federation
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: Federation
  nameWithType: SoLicenseNames.Federation
  fullName: SuperOffice.License.SoLicenseNames.Federation
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.federation: Cloud login integration marker

    System License: Hidden
  example: []
  syntax:
    content: public const string Federation = "superoffice.federation"
    return:
      type: System.String
    content.vb: Public Const Federation As String = "superoffice.federation"
- uid: SuperOffice.License.SoLicenseNames.Office365
  commentId: F:SuperOffice.License.SoLicenseNames.Office365
  id: Office365
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: Office365
  nameWithType: SoLicenseNames.Office365
  fullName: SuperOffice.License.SoLicenseNames.Office365
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.office365: Cloud Office 365 authentication and document integration

    System License: Hidden
  example: []
  syntax:
    content: public const string Office365 = "superoffice.office365"
    return:
      type: System.String
    content.vb: Public Const Office365 As String = "superoffice.office365"
- uid: SuperOffice.License.SoLicenseNames.GoogleApps
  commentId: F:SuperOffice.License.SoLicenseNames.GoogleApps
  id: GoogleApps
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: GoogleApps
  nameWithType: SoLicenseNames.GoogleApps
  fullName: SuperOffice.License.SoLicenseNames.GoogleApps
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.GoogleApps: Cloud Google Apps authentication and document integration

    System License: Hidden
  example: []
  syntax:
    content: public const string GoogleApps = "superoffice.googleapps"
    return:
      type: System.String
    content.vb: Public Const GoogleApps As String = "superoffice.googleapps"
- uid: SuperOffice.License.SoLicenseNames.UserManagement
  commentId: F:SuperOffice.License.SoLicenseNames.UserManagement
  id: UserManagement
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: UserManagement
  nameWithType: SoLicenseNames.UserManagement
  fullName: SuperOffice.License.SoLicenseNames.UserManagement
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.user-management: User Management in Admin; disabled in Visma.NET where user management is in ODP/VARPAD instead

    System License: Hidden
  example: []
  syntax:
    content: public const string UserManagement = "superoffice.user-management"
    return:
      type: System.String
    content.vb: Public Const UserManagement As String = "superoffice.user-management"
- uid: SuperOffice.License.SoLicenseNames.PocketCrmServer
  commentId: F:SuperOffice.License.SoLicenseNames.PocketCrmServer
  id: PocketCrmServer
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: PocketCrmServer
  nameWithType: SoLicenseNames.PocketCrmServer
  fullName: SuperOffice.License.SoLicenseNames.PocketCrmServer
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.pocket-crm-server: Pocket CRM Server Enables pocket CRM usage – still need CAL assigned though.

    System License:
  example: []
  syntax:
    content: public const string PocketCrmServer = "superoffice.pocket-crm-server"
    return:
      type: System.String
    content.vb: Public Const PocketCrmServer As String = "superoffice.pocket-crm-server"
- uid: SuperOffice.License.SoLicenseNames.SuperlicenseEJournalDesigner
  commentId: F:SuperOffice.License.SoLicenseNames.SuperlicenseEJournalDesigner
  id: SuperlicenseEJournalDesigner
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: SuperlicenseEJournalDesigner
  nameWithType: SoLicenseNames.SuperlicenseEJournalDesigner
  fullName: SuperOffice.License.SoLicenseNames.SuperlicenseEJournalDesigner
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.superlicense-ej-designer: eJournal Designer Studio Extra Tables/Fields, System design and scripting, e-mail filters.

    System License:
  example: []
  syntax:
    content: public const string SuperlicenseEJournalDesigner = "superoffice.superlicense-ej-designer"
    return:
      type: System.String
    content.vb: Public Const SuperlicenseEJournalDesigner As String = "superoffice.superlicense-ej-designer"
- uid: SuperOffice.License.SoLicenseNames.SuperlicenseEJournalIntegrator
  commentId: F:SuperOffice.License.SoLicenseNames.SuperlicenseEJournalIntegrator
  id: SuperlicenseEJournalIntegrator
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: SuperlicenseEJournalIntegrator
  nameWithType: SoLicenseNames.SuperlicenseEJournalIntegrator
  fullName: SuperOffice.License.SoLicenseNames.SuperlicenseEJournalIntegrator
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.superlicense-ej-integrator: eJournal Integrators Includes MAPI, LDAP, ODBC and SDK. DevNet membership included.

    System License:
  example: []
  syntax:
    content: public const string SuperlicenseEJournalIntegrator = "superoffice.superlicense-ej-integrator"
    return:
      type: System.String
    content.vb: Public Const SuperlicenseEJournalIntegrator As String = "superoffice.superlicense-ej-integrator"
- uid: SuperOffice.License.SoLicenseNames.SuperlicenseEJournalCustomerCentre
  commentId: F:SuperOffice.License.SoLicenseNames.SuperlicenseEJournalCustomerCentre
  id: SuperlicenseEJournalCustomerCentre
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: SuperlicenseEJournalCustomerCentre
  nameWithType: SoLicenseNames.SuperlicenseEJournalCustomerCentre
  fullName: SuperOffice.License.SoLicenseNames.SuperlicenseEJournalCustomerCentre
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.superlicense-ej-customer centre: eJournal Customer Centre Language dependent customer login, case tracking, web forms, FAQ and knowledgebase

    System License:
  example: []
  syntax:
    content: public const string SuperlicenseEJournalCustomerCentre = "superoffice.superlicense-ej-customer centre"
    return:
      type: System.String
    content.vb: Public Const SuperlicenseEJournalCustomerCentre As String = "superoffice.superlicense-ej-customer centre"
- uid: SuperOffice.License.SoLicenseNames.SuperlicenseEJournalEmarketing
  commentId: F:SuperOffice.License.SoLicenseNames.SuperlicenseEJournalEmarketing
  id: SuperlicenseEJournalEmarketing
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: SuperlicenseEJournalEmarketing
  nameWithType: SoLicenseNames.SuperlicenseEJournalEmarketing
  fullName: SuperOffice.License.SoLicenseNames.SuperlicenseEJournalEmarketing
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.superlicense-ej-emarketing: eJournal eMarketing Mass distribution of e-mails.

    System License:
  example: []
  syntax:
    content: public const string SuperlicenseEJournalEmarketing = "superoffice.superlicense-ej-emarketing"
    return:
      type: System.String
    content.vb: Public Const SuperlicenseEJournalEmarketing As String = "superoffice.superlicense-ej-emarketing"
- uid: SuperOffice.License.SoLicenseNames.SuperlicenseAimSdk
  commentId: F:SuperOffice.License.SoLicenseNames.SuperlicenseAimSdk
  id: SuperlicenseAimSdk
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: SuperlicenseAimSdk
  nameWithType: SoLicenseNames.SuperlicenseAimSdk
  fullName: SuperOffice.License.SoLicenseNames.SuperlicenseAimSdk
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.superlicense-aim-sdk: eJournal AIM SDK AIM License - Design and scripting.

    System License:
  example: []
  syntax:
    content: public const string SuperlicenseAimSdk = "superoffice.superlicense-aim-sdk"
    return:
      type: System.String
    content.vb: Public Const SuperlicenseAimSdk As String = "superoffice.superlicense-aim-sdk"
- uid: SuperOffice.License.SoLicenseNames.SuperlicenseAimIntegrator
  commentId: F:SuperOffice.License.SoLicenseNames.SuperlicenseAimIntegrator
  id: SuperlicenseAimIntegrator
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: SuperlicenseAimIntegrator
  nameWithType: SoLicenseNames.SuperlicenseAimIntegrator
  fullName: SuperOffice.License.SoLicenseNames.SuperlicenseAimIntegrator
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.superlicense-aim-integrator: eJournal AIM DB Integrators AIM License - ODBC and SDK.

    System License:
  example: []
  syntax:
    content: public const string SuperlicenseAimIntegrator = "superoffice.superlicense-aim-integrator"
    return:
      type: System.String
    content.vb: Public Const SuperlicenseAimIntegrator As String = "superoffice.superlicense-aim-integrator"
- uid: SuperOffice.License.SoLicenseNames.SuperlicenseAimCustomerCentre
  commentId: F:SuperOffice.License.SoLicenseNames.SuperlicenseAimCustomerCentre
  id: SuperlicenseAimCustomerCentre
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: SuperlicenseAimCustomerCentre
  nameWithType: SoLicenseNames.SuperlicenseAimCustomerCentre
  fullName: SuperOffice.License.SoLicenseNames.SuperlicenseAimCustomerCentre
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.superlicense-aim-customer-centre: eJournal AIM Customer Centre AIM License - Customer login

    System License:
  example: []
  syntax:
    content: public const string SuperlicenseAimCustomerCentre = "superoffice.superlicense-aim-customer-centre"
    return:
      type: System.String
    content.vb: Public Const SuperlicenseAimCustomerCentre As String = "superoffice.superlicense-aim-customer-centre"
- uid: SuperOffice.License.SoLicenseNames.SuperlicenseAimCustomerPages
  commentId: F:SuperOffice.License.SoLicenseNames.SuperlicenseAimCustomerPages
  id: SuperlicenseAimCustomerPages
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: SuperlicenseAimCustomerPages
  nameWithType: SoLicenseNames.SuperlicenseAimCustomerPages
  fullName: SuperOffice.License.SoLicenseNames.SuperlicenseAimCustomerPages
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.superlicense-aim-customer-pages: eJournal AIM Customer Pages AIM License - Web forms and knowledgebase

    System License:
  example: []
  syntax:
    content: public const string SuperlicenseAimCustomerPages = "superoffice.superlicense-aim-customer-pages"
    return:
      type: System.String
    content.vb: Public Const SuperlicenseAimCustomerPages As String = "superoffice.superlicense-aim-customer-pages"
- uid: SuperOffice.License.SoLicenseNames.SuperlicenseAimCustomerPortal
  commentId: F:SuperOffice.License.SoLicenseNames.SuperlicenseAimCustomerPortal
  id: SuperlicenseAimCustomerPortal
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: SuperlicenseAimCustomerPortal
  nameWithType: SoLicenseNames.SuperlicenseAimCustomerPortal
  fullName: SuperOffice.License.SoLicenseNames.SuperlicenseAimCustomerPortal
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.superlicense-aim-customer-portal: eJournal AIM Customer Portal AIM License - customer login, case tracking

    System License:
  example: []
  syntax:
    content: public const string SuperlicenseAimCustomerPortal = "superoffice.superlicense-aim-customer-portal"
    return:
      type: System.String
    content.vb: Public Const SuperlicenseAimCustomerPortal As String = "superoffice.superlicense-aim-customer-portal"
- uid: SuperOffice.License.SoLicenseNames.SuperlicenseAimFaq
  commentId: F:SuperOffice.License.SoLicenseNames.SuperlicenseAimFaq
  id: SuperlicenseAimFaq
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: SuperlicenseAimFaq
  nameWithType: SoLicenseNames.SuperlicenseAimFaq
  fullName: SuperOffice.License.SoLicenseNames.SuperlicenseAimFaq
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.superlicense-aim-faq: eJournal AIM FAQ AIM License - Frequently Asked Questions, Knowledgebase.

    System License:
  example: []
  syntax:
    content: public const string SuperlicenseAimFaq = "superoffice.superlicense-aim-faq"
    return:
      type: System.String
    content.vb: Public Const SuperlicenseAimFaq As String = "superoffice.superlicense-aim-faq"
- uid: SuperOffice.License.SoLicenseNames.EJournalAdmin
  commentId: F:SuperOffice.License.SoLicenseNames.EJournalAdmin
  id: EJournalAdmin
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: EJournalAdmin
  nameWithType: SoLicenseNames.EJournalAdmin
  fullName: SuperOffice.License.SoLicenseNames.EJournalAdmin
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.ej-mod-admin: eJournal admin and settings 

    System License: Hidden
  example: []
  syntax:
    content: public const string EJournalAdmin = "superoffice.ej-mod-admin"
    return:
      type: System.String
    content.vb: Public Const EJournalAdmin As String = "superoffice.ej-mod-admin"
- uid: SuperOffice.License.SoLicenseNames.EJournalAdvancedFaq
  commentId: F:SuperOffice.License.SoLicenseNames.EJournalAdvancedFaq
  id: EJournalAdvancedFaq
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: EJournalAdvancedFaq
  nameWithType: SoLicenseNames.EJournalAdvancedFaq
  fullName: SuperOffice.License.SoLicenseNames.EJournalAdvancedFaq
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.ej-mod-advanced-faq: eJournal FAQ with advanced features (top 10, score, etc) 

    System License: Hidden
  example: []
  syntax:
    content: public const string EJournalAdvancedFaq = "superoffice.ej-mod-advanced-faq"
    return:
      type: System.String
    content.vb: Public Const EJournalAdvancedFaq As String = "superoffice.ej-mod-advanced-faq"
- uid: SuperOffice.License.SoLicenseNames.EJournalBlogic
  commentId: F:SuperOffice.License.SoLicenseNames.EJournalBlogic
  id: EJournalBlogic
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: EJournalBlogic
  nameWithType: SoLicenseNames.EJournalBlogic
  fullName: SuperOffice.License.SoLicenseNames.EJournalBlogic
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.ej-mod-blogic: eJournal Business Logic, scripting, custom screens 

    System License: Hidden
  example: []
  syntax:
    content: public const string EJournalBlogic = "superoffice.ej-mod-blogic"
    return:
      type: System.String
    content.vb: Public Const EJournalBlogic As String = "superoffice.ej-mod-blogic"
- uid: SuperOffice.License.SoLicenseNames.EJournalMacro
  commentId: F:SuperOffice.License.SoLicenseNames.EJournalMacro
  id: EJournalMacro
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: EJournalMacro
  nameWithType: SoLicenseNames.EJournalMacro
  fullName: SuperOffice.License.SoLicenseNames.EJournalMacro
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.ej-mod-macro: eJournal Macro scripting 

    System License: Hidden
  example: []
  syntax:
    content: public const string EJournalMacro = "superoffice.ej-mod-macro"
    return:
      type: System.String
    content.vb: Public Const EJournalMacro As String = "superoffice.ej-mod-macro"
- uid: SuperOffice.License.SoLicenseNames.EJournalCustomer
  commentId: F:SuperOffice.License.SoLicenseNames.EJournalCustomer
  id: EJournalCustomer
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: EJournalCustomer
  nameWithType: SoLicenseNames.EJournalCustomer
  fullName: SuperOffice.License.SoLicenseNames.EJournalCustomer
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.ej-mod-customer: eJournal Customer Center 

    System License: Hidden
  example: []
  syntax:
    content: public const string EJournalCustomer = "superoffice.ej-mod-customer"
    return:
      type: System.String
    content.vb: Public Const EJournalCustomer As String = "superoffice.ej-mod-customer"
- uid: SuperOffice.License.SoLicenseNames.EJournalCustomerLang
  commentId: F:SuperOffice.License.SoLicenseNames.EJournalCustomerLang
  id: EJournalCustomerLang
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: EJournalCustomerLang
  nameWithType: SoLicenseNames.EJournalCustomerLang
  fullName: SuperOffice.License.SoLicenseNames.EJournalCustomerLang
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.ej-mod-customer-lang: eJournal Customer Center in multiple languages 

    System License: Hidden
  example: []
  syntax:
    content: public const string EJournalCustomerLang = "superoffice.ej-mod-customer-lang"
    return:
      type: System.String
    content.vb: Public Const EJournalCustomerLang As String = "superoffice.ej-mod-customer-lang"
- uid: SuperOffice.License.SoLicenseNames.EJournalDocument
  commentId: F:SuperOffice.License.SoLicenseNames.EJournalDocument
  id: EJournalDocument
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: EJournalDocument
  nameWithType: SoLicenseNames.EJournalDocument
  fullName: SuperOffice.License.SoLicenseNames.EJournalDocument
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.ej-mod-document: eJournal documents 

    System License: Hidden
  example: []
  syntax:
    content: public const string EJournalDocument = "superoffice.ej-mod-document"
    return:
      type: System.String
    content.vb: Public Const EJournalDocument As String = "superoffice.ej-mod-document"
- uid: SuperOffice.License.SoLicenseNames.EJournalExtdb
  commentId: F:SuperOffice.License.SoLicenseNames.EJournalExtdb
  id: EJournalExtdb
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: EJournalExtdb
  nameWithType: SoLicenseNames.EJournalExtdb
  fullName: SuperOffice.License.SoLicenseNames.EJournalExtdb
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.ej-mod-extdb: eJournal Database Integration 

    System License: Hidden
  example: []
  syntax:
    content: public const string EJournalExtdb = "superoffice.ej-mod-extdb"
    return:
      type: System.String
    content.vb: Public Const EJournalExtdb As String = "superoffice.ej-mod-extdb"
- uid: SuperOffice.License.SoLicenseNames.EJournalHelp
  commentId: F:SuperOffice.License.SoLicenseNames.EJournalHelp
  id: EJournalHelp
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: EJournalHelp
  nameWithType: SoLicenseNames.EJournalHelp
  fullName: SuperOffice.License.SoLicenseNames.EJournalHelp
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.ej-mod-help: eJournal Help pages 

    System License: Hidden
  example: []
  syntax:
    content: public const string EJournalHelp = "superoffice.ej-mod-help"
    return:
      type: System.String
    content.vb: Public Const EJournalHelp As String = "superoffice.ej-mod-help"
- uid: SuperOffice.License.SoLicenseNames.EJournalKnowledge
  commentId: F:SuperOffice.License.SoLicenseNames.EJournalKnowledge
  id: EJournalKnowledge
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: EJournalKnowledge
  nameWithType: SoLicenseNames.EJournalKnowledge
  fullName: SuperOffice.License.SoLicenseNames.EJournalKnowledge
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.ej-mod-knowledge: eJournal Knowledge Base and Reply templates 

    System License: Hidden
  example: []
  syntax:
    content: public const string EJournalKnowledge = "superoffice.ej-mod-knowledge"
    return:
      type: System.String
    content.vb: Public Const EJournalKnowledge As String = "superoffice.ej-mod-knowledge"
- uid: SuperOffice.License.SoLicenseNames.EJournalRms
  commentId: F:SuperOffice.License.SoLicenseNames.EJournalRms
  id: EJournalRms
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: EJournalRms
  nameWithType: SoLicenseNames.EJournalRms
  fullName: SuperOffice.License.SoLicenseNames.EJournalRms
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.ej-mod-rms: eJournal Login pages 

    System License: Hidden
  example: []
  syntax:
    content: public const string EJournalRms = "superoffice.ej-mod-rms"
    return:
      type: System.String
    content.vb: Public Const EJournalRms As String = "superoffice.ej-mod-rms"
- uid: SuperOffice.License.SoLicenseNames.EJournalSoap
  commentId: F:SuperOffice.License.SoLicenseNames.EJournalSoap
  id: EJournalSoap
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: EJournalSoap
  nameWithType: SoLicenseNames.EJournalSoap
  fullName: SuperOffice.License.SoLicenseNames.EJournalSoap
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.ej-mod-soap: eJournal Developer SOAP SDK 

    System License: Hidden
  example: []
  syntax:
    content: public const string EJournalSoap = "superoffice.ej-mod-soap"
    return:
      type: System.String
    content.vb: Public Const EJournalSoap As String = "superoffice.ej-mod-soap"
- uid: SuperOffice.License.SoLicenseNames.EJournalSoapPublic
  commentId: F:SuperOffice.License.SoLicenseNames.EJournalSoapPublic
  id: EJournalSoapPublic
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: EJournalSoapPublic
  nameWithType: SoLicenseNames.EJournalSoapPublic
  fullName: SuperOffice.License.SoLicenseNames.EJournalSoapPublic
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.ej-mod-soap-public: eJournal Public SOAP API 

    System License: Hidden
  example: []
  syntax:
    content: public const string EJournalSoapPublic = "superoffice.ej-mod-soap-public"
    return:
      type: System.String
    content.vb: Public Const EJournalSoapPublic As String = "superoffice.ej-mod-soap-public"
- uid: SuperOffice.License.SoLicenseNames.EJournalStat
  commentId: F:SuperOffice.License.SoLicenseNames.EJournalStat
  id: EJournalStat
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: EJournalStat
  nameWithType: SoLicenseNames.EJournalStat
  fullName: SuperOffice.License.SoLicenseNames.EJournalStat
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.ej-mod-stat: eJournal statistics 

    System License: Hidden
  example: []
  syntax:
    content: public const string EJournalStat = "superoffice.ej-mod-stat"
    return:
      type: System.String
    content.vb: Public Const EJournalStat As String = "superoffice.ej-mod-stat"
- uid: SuperOffice.License.SoLicenseNames.EJournalStandardEdition
  commentId: F:SuperOffice.License.SoLicenseNames.EJournalStandardEdition
  id: EJournalStandardEdition
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: EJournalStandardEdition
  nameWithType: SoLicenseNames.EJournalStandardEdition
  fullName: SuperOffice.License.SoLicenseNames.EJournalStandardEdition
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.ej-mod-standard-edition: eJournal standard edition: no scripts, custom screens, extra tables. 

    System License: Hidden
  example: []
  syntax:
    content: public const string EJournalStandardEdition = "superoffice.ej-mod-standard-edition"
    return:
      type: System.String
    content.vb: Public Const EJournalStandardEdition As String = "superoffice.ej-mod-standard-edition"
- uid: SuperOffice.License.SoLicenseNames.EJournalSpm
  commentId: F:SuperOffice.License.SoLicenseNames.EJournalSpm
  id: EJournalSpm
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: EJournalSpm
  nameWithType: SoLicenseNames.EJournalSpm
  fullName: SuperOffice.License.SoLicenseNames.EJournalSpm
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.ej-mod-spm: eJournal eMarketing module 

    System License: Hidden
  example: []
  syntax:
    content: public const string EJournalSpm = "superoffice.ej-mod-spm"
    return:
      type: System.String
    content.vb: Public Const EJournalSpm As String = "superoffice.ej-mod-spm"
- uid: SuperOffice.License.SoLicenseNames.EJournalSms
  commentId: F:SuperOffice.License.SoLicenseNames.EJournalSms
  id: EJournalSms
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: EJournalSms
  nameWithType: SoLicenseNames.EJournalSms
  fullName: SuperOffice.License.SoLicenseNames.EJournalSms
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.ej-mod-sms: eJournal SMS module 

    System License:
  example: []
  syntax:
    content: public const string EJournalSms = "superoffice.ej-mod-sms"
    return:
      type: System.String
    content.vb: Public Const EJournalSms As String = "superoffice.ej-mod-sms"
- uid: SuperOffice.License.SoLicenseNames.EJournalTicket
  commentId: F:SuperOffice.License.SoLicenseNames.EJournalTicket
  id: EJournalTicket
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: EJournalTicket
  nameWithType: SoLicenseNames.EJournalTicket
  fullName: SuperOffice.License.SoLicenseNames.EJournalTicket
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.ej-mod-ticket: Enables request management 

    System License: Hidden
  example: []
  syntax:
    content: public const string EJournalTicket = "superoffice.ej-mod-ticket"
    return:
      type: System.String
    content.vb: Public Const EJournalTicket As String = "superoffice.ej-mod-ticket"
- uid: SuperOffice.License.SoLicenseNames.Devnet
  commentId: F:SuperOffice.License.SoLicenseNames.Devnet
  id: Devnet
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: Devnet
  nameWithType: SoLicenseNames.Devnet
  fullName: SuperOffice.License.SoLicenseNames.Devnet
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.devnet: DevNet membership Developer network membership. Enables Test License Tool

    System License:
  example: []
  syntax:
    content: public const string Devnet = "superoffice.devnet"
    return:
      type: System.String
    content.vb: Public Const Devnet As String = "superoffice.devnet"
- uid: SuperOffice.License.SoLicenseNames.Maintenance
  commentId: F:SuperOffice.License.SoLicenseNames.Maintenance
  id: Maintenance
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: Maintenance
  nameWithType: SoLicenseNames.Maintenance
  fullName: SuperOffice.License.SoLicenseNames.Maintenance
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.maintenance: On-premises Maintenance customer. Pays yearly fee.

    System license. Hidden.
  example: []
  syntax:
    content: public const string Maintenance = "superoffice.maintenance"
    return:
      type: System.String
    content.vb: Public Const Maintenance As String = "superoffice.maintenance"
- uid: SuperOffice.License.SoLicenseNames.Subscription
  commentId: F:SuperOffice.License.SoLicenseNames.Subscription
  id: Subscription
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: Subscription
  nameWithType: SoLicenseNames.Subscription
  fullName: SuperOffice.License.SoLicenseNames.Subscription
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.subscription: On-premises Subscription customer. Pays monthly or quarterly.

    System license. Hidden.
  example: []
  syntax:
    content: public const string Subscription = "superoffice.subscription"
    return:
      type: System.String
    content.vb: Public Const Subscription As String = "superoffice.subscription"
- uid: SuperOffice.License.SoLicenseNames.Rental
  commentId: F:SuperOffice.License.SoLicenseNames.Rental
  id: Rental
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: Rental
  nameWithType: SoLicenseNames.Rental
  fullName: SuperOffice.License.SoLicenseNames.Rental
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.rental: On-premises Rental customer. Pays monthly or quarterly.

    System license. Hidden.
  example: []
  syntax:
    content: public const string Rental = "superoffice.rental"
    return:
      type: System.String
    content.vb: Public Const Rental As String = "superoffice.rental"
- uid: SuperOffice.License.SoLicenseNames.NeedConsent
  commentId: F:SuperOffice.License.SoLicenseNames.NeedConsent
  id: NeedConsent
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: NeedConsent
  nameWithType: SoLicenseNames.NeedConsent
  fullName: SuperOffice.License.SoLicenseNames.NeedConsent
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.need-consent: On-premises Maintenance customer that needs to show consent dialog to accept addendum.

    System license. Hidden.
  example: []
  syntax:
    content: public const string NeedConsent = "superoffice.need-consent"
    return:
      type: System.String
    content.vb: Public Const NeedConsent As String = "superoffice.need-consent"
- uid: SuperOffice.License.SoLicenseNames.Online
  commentId: F:SuperOffice.License.SoLicenseNames.Online
  id: Online
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: Online
  nameWithType: SoLicenseNames.Online
  fullName: SuperOffice.License.SoLicenseNames.Online
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.online: SuperOffice Online Customer 

    System License:
  example: []
  syntax:
    content: public const string Online = "superoffice.online"
    return:
      type: System.String
    content.vb: Public Const Online As String = "superoffice.online"
- uid: SuperOffice.License.SoLicenseNames.FreeTrial
  commentId: F:SuperOffice.License.SoLicenseNames.FreeTrial
  id: FreeTrial
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: FreeTrial
  nameWithType: SoLicenseNames.FreeTrial
  fullName: SuperOffice.License.SoLicenseNames.FreeTrial
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.freetrial: This free license will expire shortly.

    System License
  example: []
  syntax:
    content: public const string FreeTrial = "superoffice.freetrial"
    return:
      type: System.String
    content.vb: Public Const FreeTrial As String = "superoffice.freetrial"
- uid: SuperOffice.License.SoLicenseNames.Solo
  commentId: F:SuperOffice.License.SoLicenseNames.Solo
  id: Solo
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: Solo
  nameWithType: SoLicenseNames.Solo
  fullName: SuperOffice.License.SoLicenseNames.Solo
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.solo: SuperOffice SOLO Customer 

    System License:
  example: []
  syntax:
    content: public const string Solo = "superoffice.solo"
    return:
      type: System.String
    content.vb: Public Const Solo As String = "superoffice.solo"
- uid: SuperOffice.License.SoLicenseNames.SuperlicenseOnlineStd
  commentId: F:SuperOffice.License.SoLicenseNames.SuperlicenseOnlineStd
  id: SuperlicenseOnlineStd
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: SuperlicenseOnlineStd
  nameWithType: SoLicenseNames.SuperlicenseOnlineStd
  fullName: SuperOffice.License.SoLicenseNames.SuperlicenseOnlineStd
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.superlicense-online-std: Online Standard

    System License:
  example: []
  syntax:
    content: public const string SuperlicenseOnlineStd = "superoffice.superlicense-online-std"
    return:
      type: System.String
    content.vb: Public Const SuperlicenseOnlineStd As String = "superoffice.superlicense-online-std"
- uid: SuperOffice.License.SoLicenseNames.SuperlicenseOnlinePro
  commentId: F:SuperOffice.License.SoLicenseNames.SuperlicenseOnlinePro
  id: SuperlicenseOnlinePro
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: SuperlicenseOnlinePro
  nameWithType: SoLicenseNames.SuperlicenseOnlinePro
  fullName: SuperOffice.License.SoLicenseNames.SuperlicenseOnlinePro
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.superlicense-online-pro: Online Pro

    System License:
  example: []
  syntax:
    content: public const string SuperlicenseOnlinePro = "superoffice.superlicense-online-pro"
    return:
      type: System.String
    content.vb: Public Const SuperlicenseOnlinePro As String = "superoffice.superlicense-online-pro"
- uid: SuperOffice.License.SoLicenseNames.SuperlicenseEjOnlineStd
  commentId: F:SuperOffice.License.SoLicenseNames.SuperlicenseEjOnlineStd
  id: SuperlicenseEjOnlineStd
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: SuperlicenseEjOnlineStd
  nameWithType: SoLicenseNames.SuperlicenseEjOnlineStd
  fullName: SuperOffice.License.SoLicenseNames.SuperlicenseEjOnlineStd
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.superlicense-ej-online-std: eJournal Online Standard

    System License:
  example: []
  syntax:
    content: public const string SuperlicenseEjOnlineStd = "superoffice.superlicense-ej-online-std"
    return:
      type: System.String
    content.vb: Public Const SuperlicenseEjOnlineStd As String = "superoffice.superlicense-ej-online-std"
- uid: SuperOffice.License.SoLicenseNames.SuperlicenseEjOnlinePro
  commentId: F:SuperOffice.License.SoLicenseNames.SuperlicenseEjOnlinePro
  id: SuperlicenseEjOnlinePro
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: SuperlicenseEjOnlinePro
  nameWithType: SoLicenseNames.SuperlicenseEjOnlinePro
  fullName: SuperOffice.License.SoLicenseNames.SuperlicenseEjOnlinePro
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.superlicense-ej-online-pro: eJournal Online Pro

    System License:
  example: []
  syntax:
    content: public const string SuperlicenseEjOnlinePro = "superoffice.superlicense-ej-online-pro"
    return:
      type: System.String
    content.vb: Public Const SuperlicenseEjOnlinePro As String = "superoffice.superlicense-ej-online-pro"
- uid: SuperOffice.License.SoLicenseNames.SuperlicenseVismaNetPro
  commentId: F:SuperOffice.License.SoLicenseNames.SuperlicenseVismaNetPro
  id: SuperlicenseVismaNetPro
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: SuperlicenseVismaNetPro
  nameWithType: SoLicenseNames.SuperlicenseVismaNetPro
  fullName: SuperOffice.License.SoLicenseNames.SuperlicenseVismaNetPro
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.superlicense-online-pro: Online Pro

    System License:
  example: []
  syntax:
    content: public const string SuperlicenseVismaNetPro = "superoffice.superlicense-vismanet-pro"
    return:
      type: System.String
    content.vb: Public Const SuperlicenseVismaNetPro As String = "superoffice.superlicense-vismanet-pro"
- uid: SuperOffice.License.SoLicenseNames.OnlineWebServices
  commentId: F:SuperOffice.License.SoLicenseNames.OnlineWebServices
  id: OnlineWebServices
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: OnlineWebServices
  nameWithType: SoLicenseNames.OnlineWebServices
  fullName: SuperOffice.License.SoLicenseNames.OnlineWebServices
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.online-webservices: Online WebService activation

    System License:   Not needed on-site
  example: []
  syntax:
    content: public const string OnlineWebServices = "superoffice.online-webservices"
    return:
      type: System.String
    content.vb: Public Const OnlineWebServices As String = "superoffice.online-webservices"
- uid: SuperOffice.License.SoLicenseNames.ExpanderServices
  commentId: F:SuperOffice.License.SoLicenseNames.ExpanderServices
  id: ExpanderServices
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: ExpanderServices
  nameWithType: SoLicenseNames.ExpanderServices
  fullName: SuperOffice.License.SoLicenseNames.ExpanderServices
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.expander-services: Expander Services activation - turns on CS extra tables, external users, custom apps

    System License:
  example: []
  syntax:
    content: public const string ExpanderServices = "superoffice.expander-services"
    return:
      type: System.String
    content.vb: Public Const ExpanderServices As String = "superoffice.expander-services"
- uid: SuperOffice.License.SoLicenseNames.Satellite
  commentId: F:SuperOffice.License.SoLicenseNames.Satellite
  id: Satellite
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: Satellite
  nameWithType: SoLicenseNames.Satellite
  fullName: SuperOffice.License.SoLicenseNames.Satellite
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.satellite: Satellite Turns on satellite dialogs in SOADMIN Replication panel

    Site License:
  example: []
  syntax:
    content: public const string Satellite = "superoffice.satellite"
    return:
      type: System.String
    content.vb: Public Const Satellite As String = "superoffice.satellite"
- uid: SuperOffice.License.SoLicenseNames.Audience
  commentId: F:SuperOffice.License.SoLicenseNames.Audience
  id: Audience
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: Audience
  nameWithType: SoLicenseNames.Audience
  fullName: SuperOffice.License.SoLicenseNames.Audience
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.audience: Audience Enables Audience web site.

    Site License:     Requires: extern-user
  example: []
  syntax:
    content: public const string Audience = "superoffice.audience"
    return:
      type: System.String
    content.vb: Public Const Audience As String = "superoffice.audience"
- uid: SuperOffice.License.SoLicenseNames.ReporterStudio
  commentId: F:SuperOffice.License.SoLicenseNames.ReporterStudio
  id: ReporterStudio
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: ReporterStudio
  nameWithType: SoLicenseNames.ReporterStudio
  fullName: SuperOffice.License.SoLicenseNames.ReporterStudio
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.reporter-studio: Reporter Studio Custom reports through Reporter Studio. Also need RepStudio CAL.

    Site License:
  example: []
  syntax:
    content: public const string ReporterStudio = "superoffice.reporter-studio"
    return:
      type: System.String
    content.vb: Public Const ReporterStudio As String = "superoffice.reporter-studio"
- uid: SuperOffice.License.SoLicenseNames.Sapb1link
  commentId: F:SuperOffice.License.SoLicenseNames.Sapb1link
  id: Sapb1link
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: Sapb1link
  nameWithType: SoLicenseNames.Sapb1link
  fullName: SuperOffice.License.SoLicenseNames.Sapb1link
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.sapb1link: SAP B1 Link Enables SAP B1 Link client.

    Site License:
  example: []
  syntax:
    content: public const string Sapb1link = "superoffice.sapb1link"
    return:
      type: System.String
    content.vb: Public Const Sapb1link As String = "superoffice.sapb1link"
- uid: SuperOffice.License.SoLicenseNames.ExchangeSync
  commentId: F:SuperOffice.License.SoLicenseNames.ExchangeSync
  id: ExchangeSync
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: ExchangeSync
  nameWithType: SoLicenseNames.ExchangeSync
  fullName: SuperOffice.License.SoLicenseNames.ExchangeSync
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.exchange-sync: Exchange Synchronizer Enables InfoBridge Exchange synchronizer

    Site License:
  example: []
  syntax:
    content: public const string ExchangeSync = "superoffice.exchange-sync"
    return:
      type: System.String
    content.vb: Public Const ExchangeSync As String = "superoffice.exchange-sync"
- uid: SuperOffice.License.SoLicenseNames.Nebula
  commentId: F:SuperOffice.License.SoLicenseNames.Nebula
  id: Nebula
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: Nebula
  nameWithType: SoLicenseNames.Nebula
  fullName: SuperOffice.License.SoLicenseNames.Nebula
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.nebula: InfoBridge SuperOffice Synchronizer

    Site License:
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string Nebula = "superoffice.nebula"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const Nebula As String = "superoffice.nebula"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.SyncServer
  commentId: F:SuperOffice.License.SoLicenseNames.SyncServer
  id: SyncServer
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: SyncServer
  nameWithType: SoLicenseNames.SyncServer
  fullName: SuperOffice.License.SoLicenseNames.SyncServer
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.sync-server: Intellisync Server Enables Intellisync Server (Notes)

    Site License:
  example: []
  syntax:
    content: public const string SyncServer = "superoffice.sync-server"
    return:
      type: System.String
    content.vb: Public Const SyncServer As String = "superoffice.sync-server"
- uid: SuperOffice.License.SoLicenseNames.ExtraStorage
  commentId: F:SuperOffice.License.SoLicenseNames.ExtraStorage
  id: ExtraStorage
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: ExtraStorage
  nameWithType: SoLicenseNames.ExtraStorage
  fullName: SuperOffice.License.SoLicenseNames.ExtraStorage
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.extra-storage: Extra Storage Information about storage capacity for Online CRM use.

    Site License:
  example: []
  syntax:
    content: public const string ExtraStorage = "superoffice.extra-storage"
    return:
      type: System.String
    content.vb: Public Const ExtraStorage As String = "superoffice.extra-storage"
- uid: SuperOffice.License.SoLicenseNames.HugoAI
  commentId: F:SuperOffice.License.SoLicenseNames.HugoAI
  id: HugoAI
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: HugoAI
  nameWithType: SoLicenseNames.HugoAI
  fullName: SuperOffice.License.SoLicenseNames.HugoAI
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.ai : Activate Artificial Intelligence System.

    System license.
  example: []
  syntax:
    content: public const string HugoAI = "superoffice.ai"
    return:
      type: System.String
    content.vb: Public Const HugoAI As String = "superoffice.ai"
- uid: SuperOffice.License.SoLicenseNames.VideoMeet
  commentId: F:SuperOffice.License.SoLicenseNames.VideoMeet
  id: VideoMeet
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: VideoMeet
  nameWithType: SoLicenseNames.VideoMeet
  fullName: SuperOffice.License.SoLicenseNames.VideoMeet
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.video-meet : Activate Video Meetings in Appointment dialog.

    System license.
  example: []
  syntax:
    content: public const string VideoMeet = "superoffice.video-meet"
    return:
      type: System.String
    content.vb: Public Const VideoMeet As String = "superoffice.video-meet"
- uid: SuperOffice.License.SoLicenseNames.User
  commentId: F:SuperOffice.License.SoLicenseNames.User
  id: User
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: User
  nameWithType: SoLicenseNames.User
  fullName: SuperOffice.License.SoLicenseNames.User
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.user: User login Allows user to log in half-way. You also need a client license.

    User License:
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string User = "superoffice.user"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const User As String = "superoffice.user"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.Web
  commentId: F:SuperOffice.License.SoLicenseNames.Web
  id: Web
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: Web
  nameWithType: SoLicenseNames.Web
  fullName: SuperOffice.License.SoLicenseNames.Web
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.web: Web login Allows user to log in to web client.

    User License:     Requires: User
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string Web = "superoffice.web"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const Web As String = "superoffice.web"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.Windows
  commentId: F:SuperOffice.License.SoLicenseNames.Windows
  id: Windows
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: Windows
  nameWithType: SoLicenseNames.Windows
  fullName: SuperOffice.License.SoLicenseNames.Windows
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.windows: Windows login Allows user to log in to win client.

    User License:     Requires: User
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string Windows = "superoffice.windows"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const Windows As String = "superoffice.windows"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.EJournalClient
  commentId: F:SuperOffice.License.SoLicenseNames.EJournalClient
  id: EJournalClient
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: EJournalClient
  nameWithType: SoLicenseNames.EJournalClient
  fullName: SuperOffice.License.SoLicenseNames.EJournalClient
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.ej-client: eJournal login Allows user to log in to eJournal web client.

    User License:     Requires: User
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string EJournalClient = "superoffice.ej-client"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const EJournalClient As String = "superoffice.ej-client"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.EJournalReadonlyClient
  commentId: F:SuperOffice.License.SoLicenseNames.EJournalReadonlyClient
  id: EJournalReadonlyClient
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: EJournalReadonlyClient
  nameWithType: SoLicenseNames.EJournalReadonlyClient
  fullName: SuperOffice.License.SoLicenseNames.EJournalReadonlyClient
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.ej-readonly-client: eJournal Read-only login Allows user to use eJournal read-only client.

    User License:     Requires: User
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string EJournalReadonlyClient = "superoffice.ej-readonly-client"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const EJournalReadonlyClient As String = "superoffice.ej-readonly-client"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.EJournalSimClient
  commentId: F:SuperOffice.License.SoLicenseNames.EJournalSimClient
  id: EJournalSimClient
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: EJournalSimClient
  nameWithType: SoLicenseNames.EJournalSimClient
  fullName: SuperOffice.License.SoLicenseNames.EJournalSimClient
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.ej-sim-client: eJournal sim login eJournal Simultaneous client user.

    User License:     Requires: User
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string EJournalSimClient = "superoffice.ej-sim-client"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const EJournalSimClient As String = "superoffice.ej-sim-client"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.EJournalSimReadonlyClient
  commentId: F:SuperOffice.License.SoLicenseNames.EJournalSimReadonlyClient
  id: EJournalSimReadonlyClient
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: EJournalSimReadonlyClient
  nameWithType: SoLicenseNames.EJournalSimReadonlyClient
  fullName: SuperOffice.License.SoLicenseNames.EJournalSimReadonlyClient
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.ej-sim-readonly-client: eJournal sim read-only eJournal Simultaneous read-only user

    User License:     Requires: User
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string EJournalSimReadonlyClient = "superoffice.ej-sim-readonly-client"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const EJournalSimReadonlyClient As String = "superoffice.ej-sim-readonly-client"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.PocketCrmCal
  commentId: F:SuperOffice.License.SoLicenseNames.PocketCrmCal
  id: PocketCrmCal
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: PocketCrmCal
  nameWithType: SoLicenseNames.PocketCrmCal
  fullName: SuperOffice.License.SoLicenseNames.PocketCrmCal
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.pocket-crm-cal: Pocket login Allows user to log in to pocket client.

    User License:     Requires: User
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string PocketCrmCal = "superoffice.pocket-crm-cal"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const PocketCrmCal As String = "superoffice.pocket-crm-cal"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.ExternUserCal
  commentId: F:SuperOffice.License.SoLicenseNames.ExternUserCal
  id: ExternUserCal
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: ExternUserCal
  nameWithType: SoLicenseNames.ExternUserCal
  fullName: SuperOffice.License.SoLicenseNames.ExternUserCal
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.extern-user-cal: External user login Allows log in to audience client, eJournal portal, NetServer

    User License:  Unrestricted
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string ExternUserCal = "superoffice.extern-user-cal"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const ExternUserCal As String = "superoffice.extern-user-cal"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.SystemUserCal
  commentId: F:SuperOffice.License.SoLicenseNames.SystemUserCal
  id: SystemUserCal
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: SystemUserCal
  nameWithType: SoLicenseNames.SystemUserCal
  fullName: SuperOffice.License.SoLicenseNames.SystemUserCal
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.system-user-cal: System user login Allows log in to NetServer

    User License:  Unrestricted
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string SystemUserCal = "superoffice.system-user-cal"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const SystemUserCal As String = "superoffice.system-user-cal"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.AnonymousUserCal
  commentId: F:SuperOffice.License.SoLicenseNames.AnonymousUserCal
  id: AnonymousUserCal
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: AnonymousUserCal
  nameWithType: SoLicenseNames.AnonymousUserCal
  fullName: SuperOffice.License.SoLicenseNames.AnonymousUserCal
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.anonymous-user-cal: Anonymous user login Allows log in to NetServer, Audience

    User License:  Unrestricted
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string AnonymousUserCal = "superoffice.anonymous-user-cal"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const AnonymousUserCal As String = "superoffice.anonymous-user-cal"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.Publish
  commentId: F:SuperOffice.License.SoLicenseNames.Publish
  id: Publish
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: Publish
  nameWithType: SoLicenseNames.Publish
  fullName: SuperOffice.License.SoLicenseNames.Publish
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.publish: Publish to external Enables Publish checkbox in CRM client. Requires Extern-user

    User License:  Unrestricted
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string Publish = "superoffice.publish"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const Publish As String = "superoffice.publish"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.VisibleFor
  commentId: F:SuperOffice.License.SoLicenseNames.VisibleFor
  id: VisibleFor
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: VisibleFor
  nameWithType: SoLicenseNames.VisibleFor
  fullName: SuperOffice.License.SoLicenseNames.VisibleFor
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.visible-for: Confidential activities Enables the visible-for dropdown in the CRM client

    User License:  Unrestricted
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string VisibleFor = "superoffice.visible-for"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const VisibleFor As String = "superoffice.visible-for"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.Travel
  commentId: F:SuperOffice.License.SoLicenseNames.Travel
  id: Travel
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: Travel
  nameWithType: SoLicenseNames.Travel
  fullName: SuperOffice.License.SoLicenseNames.Travel
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.travel: Travel Enables the travel menu. Requires Windows.

    User License:  Unrestricted   Requires: Windows
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string Travel = "superoffice.travel"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const Travel As String = "superoffice.travel"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.RemoteTravel
  commentId: F:SuperOffice.License.SoLicenseNames.RemoteTravel
  id: RemoteTravel
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: RemoteTravel
  nameWithType: SoLicenseNames.RemoteTravel
  fullName: SuperOffice.License.SoLicenseNames.RemoteTravel
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.remote-travel: Remote Travel Enables remote travel client for user.

    User License:     Requires: Travel
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string RemoteTravel = "superoffice.remote-travel"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const RemoteTravel As String = "superoffice.remote-travel"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.OutlookSynchronizer
  commentId: F:SuperOffice.License.SoLicenseNames.OutlookSynchronizer
  id: OutlookSynchronizer
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: OutlookSynchronizer
  nameWithType: SoLicenseNames.OutlookSynchronizer
  fullName: SuperOffice.License.SoLicenseNames.OutlookSynchronizer
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.outlook-synchronizer: Outlook Synchronizer Enables Outlook client sync (??)

    User License:
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string OutlookSynchronizer = "superoffice.outlook-synchronizer"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const OutlookSynchronizer As String = "superoffice.outlook-synchronizer"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.SynchronizerCal
  commentId: F:SuperOffice.License.SoLicenseNames.SynchronizerCal
  id: SynchronizerCal
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: SynchronizerCal
  nameWithType: SoLicenseNames.SynchronizerCal
  fullName: SuperOffice.License.SoLicenseNames.SynchronizerCal
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.synchronizer-cal: Exchange synch login Allows user to use Exchange-sync site license

    User License:
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string SynchronizerCal = "superoffice.synchronizer-cal"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const SynchronizerCal As String = "superoffice.synchronizer-cal"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.ReporterStudioUser
  commentId: F:SuperOffice.License.SoLicenseNames.ReporterStudioUser
  id: ReporterStudioUser
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: ReporterStudioUser
  nameWithType: SoLicenseNames.ReporterStudioUser
  fullName: SuperOffice.License.SoLicenseNames.ReporterStudioUser
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.reporter-studio-user: Reporter Studio login Allows user to log in to Reporter Studio.

    User License:  Unrestricted   Requires: rep-studio
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string ReporterStudioUser = "superoffice.reporter-studio-user"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const ReporterStudioUser As String = "superoffice.reporter-studio-user"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.AdminExternUser
  commentId: F:SuperOffice.License.SoLicenseNames.AdminExternUser
  id: AdminExternUser
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: AdminExternUser
  nameWithType: SoLicenseNames.AdminExternUser
  fullName: SuperOffice.License.SoLicenseNames.AdminExternUser
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.admin-extern-user: External user administrator Allows user to admin external user in CRM client

    User License:  Unrestricted
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string AdminExternUser = "superoffice.admin-extern-user"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const AdminExternUser As String = "superoffice.admin-extern-user"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.AdminSystemUser
  commentId: F:SuperOffice.License.SoLicenseNames.AdminSystemUser
  id: AdminSystemUser
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: AdminSystemUser
  nameWithType: SoLicenseNames.AdminSystemUser
  fullName: SuperOffice.License.SoLicenseNames.AdminSystemUser
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.admin-system-user: System user administrator Allows user to admin system user in SOADMIN user panel.

    User License: Hidden Unrestricted
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string AdminSystemUser = "superoffice.admin-system-user"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const AdminSystemUser As String = "superoffice.admin-system-user"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.AdminAnonymousUser
  commentId: F:SuperOffice.License.SoLicenseNames.AdminAnonymousUser
  id: AdminAnonymousUser
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: AdminAnonymousUser
  nameWithType: SoLicenseNames.AdminAnonymousUser
  fullName: SuperOffice.License.SoLicenseNames.AdminAnonymousUser
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.admin-anonymous-user: Anonymous user admin Allows user to admin anonymous user in SOADMIN user panel.

    User License: Hidden Unrestricted
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string AdminAnonymousUser = "superoffice.admin-anonymous-user"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const AdminAnonymousUser As String = "superoffice.admin-anonymous-user"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.EJournalSpmCal
  commentId: F:SuperOffice.License.SoLicenseNames.EJournalSpmCal
  id: EJournalSpmCal
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: EJournalSpmCal
  nameWithType: SoLicenseNames.EJournalSpmCal
  fullName: SuperOffice.License.SoLicenseNames.EJournalSpmCal
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.ej-mod-spm-cal: eJournal eMarketing user

    User License: Unrestricted
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string EJournalSpmCal = "superoffice.ej-mod-spm-cal"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const EJournalSpmCal As String = "superoffice.ej-mod-spm-cal"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.SaintCal
  commentId: F:SuperOffice.License.SoLicenseNames.SaintCal
  id: SaintCal
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: SaintCal
  nameWithType: SoLicenseNames.SaintCal
  fullName: SuperOffice.License.SoLicenseNames.SaintCal
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.saint-cal: Sales Intelligence user

    User License:
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string SaintCal = "superoffice.saint-cal"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const SaintCal As String = "superoffice.saint-cal"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.QuoteCal
  commentId: F:SuperOffice.License.SoLicenseNames.QuoteCal
  id: QuoteCal
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: QuoteCal
  nameWithType: SoLicenseNames.QuoteCal
  fullName: SuperOffice.License.SoLicenseNames.QuoteCal
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.quote-cal: Turns on products and quotes in client for this user

    User License: Restricted.
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string QuoteCal = "superoffice.quote-cal"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const QuoteCal As String = "superoffice.quote-cal"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.Document
  commentId: F:SuperOffice.License.SoLicenseNames.Document
  id: Document
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: Document
  nameWithType: SoLicenseNames.Document
  fullName: SuperOffice.License.SoLicenseNames.Document
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  syntax:
    content: public const string Document = "superoffice.document"
    return:
      type: System.String
    content.vb: Public Const Document As String = "superoffice.document"
- uid: SuperOffice.License.SoLicenseNames.Sale
  commentId: F:SuperOffice.License.SoLicenseNames.Sale
  id: Sale
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: Sale
  nameWithType: SoLicenseNames.Sale
  fullName: SuperOffice.License.SoLicenseNames.Sale
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.sale: Turn on Sale panel in client for users.

    User license
  example: []
  syntax:
    content: public const string Sale = "superoffice.sale"
    return:
      type: System.String
    content.vb: Public Const Sale As String = "superoffice.sale"
- uid: SuperOffice.License.SoLicenseNames.SaleCal
  commentId: F:SuperOffice.License.SoLicenseNames.SaleCal
  id: SaleCal
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: SaleCal
  nameWithType: SoLicenseNames.SaleCal
  fullName: SuperOffice.License.SoLicenseNames.SaleCal
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.sale-cal: Turn on EDIT rights for sales for this user. Without this CAL the user has read-only rights.

    User license
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string SaleCal = "superoffice.sale-cal"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const SaleCal As String = "superoffice.sale-cal"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.Stakeholder
  commentId: F:SuperOffice.License.SoLicenseNames.Stakeholder
  id: Stakeholder
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: Stakeholder
  nameWithType: SoLicenseNames.Stakeholder
  fullName: SuperOffice.License.SoLicenseNames.Stakeholder
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.stakeholder: Turn on VIEW sale stakeholders. 

    System license
  example: []
  syntax:
    content: public const string Stakeholder = "superoffice.stakeholder"
    return:
      type: System.String
    content.vb: Public Const Stakeholder As String = "superoffice.stakeholder"
- uid: SuperOffice.License.SoLicenseNames.StakeholderCal
  commentId: F:SuperOffice.License.SoLicenseNames.StakeholderCal
  id: StakeholderCal
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: StakeholderCal
  nameWithType: SoLicenseNames.StakeholderCal
  fullName: SuperOffice.License.SoLicenseNames.StakeholderCal
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.stakeholder-cal: Turn on EDIT rights for sale stakeholders for this user. 

    User license
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string StakeholderCal = "superoffice.stakeholder-cal"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const StakeholderCal As String = "superoffice.stakeholder-cal"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.Selection
  commentId: F:SuperOffice.License.SoLicenseNames.Selection
  id: Selection
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: Selection
  nameWithType: SoLicenseNames.Selection
  fullName: SuperOffice.License.SoLicenseNames.Selection
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.selection: Turn on Selection panel for users

    User license.
  example: []
  syntax:
    content: public const string Selection = "superoffice.selection"
    return:
      type: System.String
    content.vb: Public Const Selection As String = "superoffice.selection"
- uid: SuperOffice.License.SoLicenseNames.SelectionCal
  commentId: F:SuperOffice.License.SoLicenseNames.SelectionCal
  id: SelectionCal
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: SelectionCal
  nameWithType: SoLicenseNames.SelectionCal
  fullName: SuperOffice.License.SoLicenseNames.SelectionCal
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.selection-cal: Turn on EDIT rights for selections for this user. Without this CAL the user has read-only rights.

    User licenes.
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string SelectionCal = "superoffice.selection-cal"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const SelectionCal As String = "superoffice.selection-cal"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.SelectionCombinedCal
  commentId: F:SuperOffice.License.SoLicenseNames.SelectionCombinedCal
  id: SelectionCombinedCal
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: SelectionCombinedCal
  nameWithType: SoLicenseNames.SelectionCombinedCal
  fullName: SuperOffice.License.SoLicenseNames.SelectionCombinedCal
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.selection-combined-cal: Enable combined-selections when creating selections in client.

    User license.
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string SelectionCombinedCal = "superoffice.selection-combined-cal"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const SelectionCombinedCal As String = "superoffice.selection-combined-cal"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.Target
  commentId: F:SuperOffice.License.SoLicenseNames.Target
  id: Target
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: Target
  nameWithType: SoLicenseNames.Target
  fullName: SuperOffice.License.SoLicenseNames.Target
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.target: Activate Target system in client.

    System license
  example: []
  syntax:
    content: public const string Target = "superoffice.target"
    return:
      type: System.String
    content.vb: Public Const Target As String = "superoffice.target"
- uid: SuperOffice.License.SoLicenseNames.TargetCal
  commentId: F:SuperOffice.License.SoLicenseNames.TargetCal
  id: TargetCal
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: TargetCal
  nameWithType: SoLicenseNames.TargetCal
  fullName: SuperOffice.License.SoLicenseNames.TargetCal
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.target-cal: Turn on EDIT rights for Targets for this user. Without this CAL the user has read-only rights.

    User license
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string TargetCal = "superoffice.target-cal"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const TargetCal As String = "superoffice.target-cal"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.TargetSale
  commentId: F:SuperOffice.License.SoLicenseNames.TargetSale
  id: TargetSale
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: TargetSale
  nameWithType: SoLicenseNames.TargetSale
  fullName: SuperOffice.License.SoLicenseNames.TargetSale
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.target-sale: Activate Target for Sales in client.

    System license
  example: []
  syntax:
    content: public const string TargetSale = "superoffice.target-sale"
    return:
      type: System.String
    content.vb: Public Const TargetSale As String = "superoffice.target-sale"
- uid: SuperOffice.License.SoLicenseNames.TargetSaleUnlimited
  commentId: F:SuperOffice.License.SoLicenseNames.TargetSaleUnlimited
  id: TargetSaleUnlimited
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: TargetSaleUnlimited
  nameWithType: SoLicenseNames.TargetSaleUnlimited
  fullName: SuperOffice.License.SoLicenseNames.TargetSaleUnlimited
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.target-sales-u: Activate Unlimited Target for Sales in client.

    System license
  example: []
  syntax:
    content: public const string TargetSaleUnlimited = "superoffice.target-sale-u"
    return:
      type: System.String
    content.vb: Public Const TargetSaleUnlimited As String = "superoffice.target-sale-u"
- uid: SuperOffice.License.SoLicenseNames.TargetProject
  commentId: F:SuperOffice.License.SoLicenseNames.TargetProject
  id: TargetProject
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: TargetProject
  nameWithType: SoLicenseNames.TargetProject
  fullName: SuperOffice.License.SoLicenseNames.TargetProject
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.target-proj: Activate Target for Projects in client.

    System license
  example: []
  syntax:
    content: public const string TargetProject = "superoffice.target-proj"
    return:
      type: System.String
    content.vb: Public Const TargetProject As String = "superoffice.target-proj"
- uid: SuperOffice.License.SoLicenseNames.TargetProjectUnlimited
  commentId: F:SuperOffice.License.SoLicenseNames.TargetProjectUnlimited
  id: TargetProjectUnlimited
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: TargetProjectUnlimited
  nameWithType: SoLicenseNames.TargetProjectUnlimited
  fullName: SuperOffice.License.SoLicenseNames.TargetProjectUnlimited
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.target-proj-u: Activate Unlimited Target for Projects in client.

    System license
  example: []
  syntax:
    content: public const string TargetProjectUnlimited = "superoffice.target-proj-u"
    return:
      type: System.String
    content.vb: Public Const TargetProjectUnlimited As String = "superoffice.target-proj-u"
- uid: SuperOffice.License.SoLicenseNames.TargetAppointment
  commentId: F:SuperOffice.License.SoLicenseNames.TargetAppointment
  id: TargetAppointment
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: TargetAppointment
  nameWithType: SoLicenseNames.TargetAppointment
  fullName: SuperOffice.License.SoLicenseNames.TargetAppointment
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.target-appnt: Activate Target for Appointments in client.

    System license
  example: []
  syntax:
    content: public const string TargetAppointment = "superoffice.target-appnt"
    return:
      type: System.String
    content.vb: Public Const TargetAppointment As String = "superoffice.target-appnt"
- uid: SuperOffice.License.SoLicenseNames.TargetAppointmentUnlimited
  commentId: F:SuperOffice.License.SoLicenseNames.TargetAppointmentUnlimited
  id: TargetAppointmentUnlimited
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: TargetAppointmentUnlimited
  nameWithType: SoLicenseNames.TargetAppointmentUnlimited
  fullName: SuperOffice.License.SoLicenseNames.TargetAppointmentUnlimited
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.target-appnt-u: Activate Unlimited Target for Sales in client.

    System license
  example: []
  syntax:
    content: public const string TargetAppointmentUnlimited = "superoffice.target-appnt-u"
    return:
      type: System.String
    content.vb: Public Const TargetAppointmentUnlimited As String = "superoffice.target-appnt-u"
- uid: SuperOffice.License.SoLicenseNames.TargetTicket
  commentId: F:SuperOffice.License.SoLicenseNames.TargetTicket
  id: TargetTicket
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: TargetTicket
  nameWithType: SoLicenseNames.TargetTicket
  fullName: SuperOffice.License.SoLicenseNames.TargetTicket
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.target-tick: Activate Target for Tickets in client.

    System license
  example: []
  syntax:
    content: public const string TargetTicket = "superoffice.target-tick"
    return:
      type: System.String
    content.vb: Public Const TargetTicket As String = "superoffice.target-tick"
- uid: SuperOffice.License.SoLicenseNames.TargetTicketUnlimited
  commentId: F:SuperOffice.License.SoLicenseNames.TargetTicketUnlimited
  id: TargetTicketUnlimited
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: TargetTicketUnlimited
  nameWithType: SoLicenseNames.TargetTicketUnlimited
  fullName: SuperOffice.License.SoLicenseNames.TargetTicketUnlimited
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.target-tick-u: Activate Unlimited Target for Tickets in client.

    System license
  example: []
  syntax:
    content: public const string TargetTicketUnlimited = "superoffice.target-tick-u"
    return:
      type: System.String
    content.vb: Public Const TargetTicketUnlimited As String = "superoffice.target-tick-u"
- uid: SuperOffice.License.SoLicenseNames.Project
  commentId: F:SuperOffice.License.SoLicenseNames.Project
  id: Project
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: Project
  nameWithType: SoLicenseNames.Project
  fullName: SuperOffice.License.SoLicenseNames.Project
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.project: Turn on the project panel in the client for users.

    System license.
  example: []
  syntax:
    content: public const string Project = "superoffice.project"
    return:
      type: System.String
    content.vb: Public Const Project As String = "superoffice.project"
- uid: SuperOffice.License.SoLicenseNames.ProjectCal
  commentId: F:SuperOffice.License.SoLicenseNames.ProjectCal
  id: ProjectCal
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: ProjectCal
  nameWithType: SoLicenseNames.ProjectCal
  fullName: SuperOffice.License.SoLicenseNames.ProjectCal
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.project-cal: Turn on EDIT rights for projects for this user. Without this CAL the user has read-only rights.

    User license.
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string ProjectCal = "superoffice.project-cal"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const ProjectCal As String = "superoffice.project-cal"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.Report
  commentId: F:SuperOffice.License.SoLicenseNames.Report
  id: Report
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: Report
  nameWithType: SoLicenseNames.Report
  fullName: SuperOffice.License.SoLicenseNames.Report
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.report: Turn on report panel in the client for users.

    System license.
  example: []
  syntax:
    content: public const string Report = "superoffice.report"
    return:
      type: System.String
    content.vb: Public Const Report As String = "superoffice.report"
- uid: SuperOffice.License.SoLicenseNames.ReportCal
  commentId: F:SuperOffice.License.SoLicenseNames.ReportCal
  id: ReportCal
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: ReportCal
  nameWithType: SoLicenseNames.ReportCal
  fullName: SuperOffice.License.SoLicenseNames.ReportCal
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.report-cal: Turn on editing of reports for this user. Without this CAL the user can only read/view reports.

    User license.
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string ReportCal = "superoffice.report-cal"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const ReportCal As String = "superoffice.report-cal"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.Relation
  commentId: F:SuperOffice.License.SoLicenseNames.Relation
  id: Relation
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: Relation
  nameWithType: SoLicenseNames.Relation
  fullName: SuperOffice.License.SoLicenseNames.Relation
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.relation: Turn on relation archive/dialog in the client for users.

    System license.
  example: []
  syntax:
    content: public const string Relation = "superoffice.relation"
    return:
      type: System.String
    content.vb: Public Const Relation As String = "superoffice.relation"
- uid: SuperOffice.License.SoLicenseNames.RelationCal
  commentId: F:SuperOffice.License.SoLicenseNames.RelationCal
  id: RelationCal
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: RelationCal
  nameWithType: SoLicenseNames.RelationCal
  fullName: SuperOffice.License.SoLicenseNames.RelationCal
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.relation-cal: Turn on create/editing of relations in the client for this user. Without this CAL the user can only read/view relations.

    User license.
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string RelationCal = "superoffice.relation-cal"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const RelationCal As String = "superoffice.relation-cal"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.MailMergeCal
  commentId: F:SuperOffice.License.SoLicenseNames.MailMergeCal
  id: MailMergeCal
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: MailMergeCal
  nameWithType: SoLicenseNames.MailMergeCal
  fullName: SuperOffice.License.SoLicenseNames.MailMergeCal
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.mail-merge-cal: Can access mail merge function, subject to functional right restrictions.

    User License.
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string MailMergeCal = "superoffice.mail-merge-cal"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const MailMergeCal As String = "superoffice.mail-merge-cal"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.SuperLicenseContactManager
  commentId: F:SuperOffice.License.SoLicenseNames.SuperLicenseContactManager
  id: SuperLicenseContactManager
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: SuperLicenseContactManager
  nameWithType: SoLicenseNames.SuperLicenseContactManager
  fullName: SuperOffice.License.SoLicenseNames.SuperLicenseContactManager
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.superlicense-contact-manager: Enables user, web, project-cal, selection-cal, report-cal, relation-cal   licenses automatically when used. See ExtraInfo field for details.

    User license. Type 1 (Radio button)
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string SuperLicenseContactManager = "superoffice.superlicense-contact-manager"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const SuperLicenseContactManager As String = "superoffice.superlicense-contact-manager"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.SuperLicenseSalesPro
  commentId: F:SuperOffice.License.SoLicenseNames.SuperLicenseSalesPro
  id: SuperLicenseSalesPro
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: SuperLicenseSalesPro
  nameWithType: SoLicenseNames.SuperLicenseSalesPro
  fullName: SuperOffice.License.SoLicenseNames.SuperLicenseSalesPro
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.superlicense-sales-pro: Enables user, web, project-cal, sale-cal, quote-cal, selection-cal, selection-combined-cal, report-cal, relation-cal   licenses automatically when used. See ExtraInfo field for details.

    User license. Type 1 (Radio button)
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string SuperLicenseSalesPro = "superoffice.superlicense-sales-pro"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const SuperLicenseSalesPro As String = "superoffice.superlicense-sales-pro"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.SuperLicenseMarketingPro
  commentId: F:SuperOffice.License.SoLicenseNames.SuperLicenseMarketingPro
  id: SuperLicenseMarketingPro
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: SuperLicenseMarketingPro
  nameWithType: SoLicenseNames.SuperLicenseMarketingPro
  fullName: SuperOffice.License.SoLicenseNames.SuperLicenseMarketingPro
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.superlicense-marketing-pro: Enables user, web, project-cal, selection-cal, selection-combined-cal, ej-mod-spm-cal, report-cal, relation-cal  licenses automatically when used. See ExtraInfo field for details.

    User license. Type 1 (Radio button)
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string SuperLicenseMarketingPro = "superoffice.superlicense-marketing-pro"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const SuperLicenseMarketingPro As String = "superoffice.superlicense-marketing-pro"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.SuperLicenseServicePro
  commentId: F:SuperOffice.License.SoLicenseNames.SuperLicenseServicePro
  id: SuperLicenseServicePro
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: SuperLicenseServicePro
  nameWithType: SoLicenseNames.SuperLicenseServicePro
  fullName: SuperOffice.License.SoLicenseNames.SuperLicenseServicePro
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.superlicense-service-pro: Enables user, web, ej-client, project-cal, selection-cal, report-cal, relation-cal  licenses automatically when used. See ExtraInfo field for details.

    User license. Type 1 (Radio button)
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string SuperLicenseServicePro = "superoffice.superlicense-service-pro"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const SuperLicenseServicePro As String = "superoffice.superlicense-service-pro"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.SuperLicenseComplete
  commentId: F:SuperOffice.License.SoLicenseNames.SuperLicenseComplete
  id: SuperLicenseComplete
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: SuperLicenseComplete
  nameWithType: SoLicenseNames.SuperLicenseComplete
  fullName: SuperOffice.License.SoLicenseNames.SuperLicenseComplete
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.superlicense-complete: Enables user, web, ej-client, sale-cal, quote-cal, project-cal, selection-cal, selection-combined-cal, ej-mod-spm-cal, report-cal, relation-cal  licenses automatically when used. See ExtraInfo field for details.

    User license. Type 1 (Radio button)
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string SuperLicenseComplete = "superoffice.superlicense-complete"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const SuperLicenseComplete As String = "superoffice.superlicense-complete"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.SuperLicenseAssistant
  commentId: F:SuperOffice.License.SoLicenseNames.SuperLicenseAssistant
  id: SuperLicenseAssistant
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: SuperLicenseAssistant
  nameWithType: SoLicenseNames.SuperLicenseAssistant
  fullName: SuperOffice.License.SoLicenseNames.SuperLicenseAssistant
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.superlicense-assistant: Enables user, web licenses automatically when used. See ExtraInfo field for details.

    User license. Type 1 (Radio button)
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string SuperLicenseAssistant = "superoffice.superlicense-assistant"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const SuperLicenseAssistant As String = "superoffice.superlicense-assistant"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.SuperLicenseNoSelection
  commentId: F:SuperOffice.License.SoLicenseNames.SuperLicenseNoSelection
  id: SuperLicenseNoSelection
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: SuperLicenseNoSelection
  nameWithType: SoLicenseNames.SuperLicenseNoSelection
  fullName: SuperOffice.License.SoLicenseNames.SuperLicenseNoSelection
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.superlicense-no-selection: Enables no licenses automatically when used. Is used for disabling users/swapping between user types.

    User license. Type 1 (Radio button)  UNRESTRICTED.
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string SuperLicenseNoSelection = "superoffice.superlicense-no-selection"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const SuperLicenseNoSelection As String = "superoffice.superlicense-no-selection"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.FeaturePricing
  commentId: F:SuperOffice.License.SoLicenseNames.FeaturePricing
  id: FeaturePricing
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: FeaturePricing
  nameWithType: SoLicenseNames.FeaturePricing
  fullName: SuperOffice.License.SoLicenseNames.FeaturePricing
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.feature-pricing: Indicates that the new pricelist is in use. Applies to both Online and On-Prem installations.

    System license. Hidden.
  example: []
  syntax:
    content: public const string FeaturePricing = "superoffice.feature-pricing"
    return:
      type: System.String
    content.vb: Public Const FeaturePricing As String = "superoffice.feature-pricing"
- uid: SuperOffice.License.SoLicenseNames.G9
  commentId: F:SuperOffice.License.SoLicenseNames.G9
  id: G9
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: G9
  nameWithType: SoLicenseNames.G9
  fullName: SuperOffice.License.SoLicenseNames.G9
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.g9: Indicates that the 9.x pricelist is in use, and we have cleaned out BUY licenses. Applies to both Online and On-Prem installations.

    System license. Hidden.
  example: []
  syntax:
    content: public const string G9 = "superoffice.g9"
    return:
      type: System.String
    content.vb: Public Const G9 As String = "superoffice.g9"
- uid: SuperOffice.License.SoLicenseNames.OnlineServices
  commentId: F:SuperOffice.License.SoLicenseNames.OnlineServices
  id: OnlineServices
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: OnlineServices
  nameWithType: SoLicenseNames.OnlineServices
  fullName: SuperOffice.License.SoLicenseNames.OnlineServices
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.online-services: Online services (Google,Office,Mailings services, etc). Applies to both Online and On-Prem installations.

    System license. Hidden.
  example: []
  syntax:
    content: public const string OnlineServices = "superoffice.online-services"
    return:
      type: System.String
    content.vb: Public Const OnlineServices As String = "superoffice.online-services"
- uid: SuperOffice.License.SoLicenseNames.Test
  commentId: F:SuperOffice.License.SoLicenseNames.Test
  id: Test
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: Test
  nameWithType: SoLicenseNames.Test
  fullName: SuperOffice.License.SoLicenseNames.Test
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.test: Test installation marker. Applies to both Online and On-Prem installations.

    System license.
  example: []
  syntax:
    content: public const string Test = "superoffice.test"
    return:
      type: System.String
    content.vb: Public Const Test As String = "superoffice.test"
- uid: SuperOffice.License.SoLicenseNames.DbMirror
  commentId: F:SuperOffice.License.SoLicenseNames.DbMirror
  id: DbMirror
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: DbMirror
  nameWithType: SoLicenseNames.DbMirror
  fullName: SuperOffice.License.SoLicenseNames.DbMirror
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.db-mirror: Database Mirroring active. Database changes are copied to remote location for processing.

    System license.
  example: []
  syntax:
    content: public const string DbMirror = "superoffice.db-mirror"
    return:
      type: System.String
    content.vb: Public Const DbMirror As String = "superoffice.db-mirror"
- uid: SuperOffice.License.SoLicenseNames.TestDrive
  commentId: F:SuperOffice.License.SoLicenseNames.TestDrive
  id: TestDrive
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: TestDrive
  nameWithType: SoLicenseNames.TestDrive
  fullName: SuperOffice.License.SoLicenseNames.TestDrive
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.testdrive: Test Drive installation marker. Applies to Online installations.

    System license.
  example: []
  syntax:
    content: public const string TestDrive = "superoffice.testdrive"
    return:
      type: System.String
    content.vb: Public Const TestDrive As String = "superoffice.testdrive"
- uid: SuperOffice.License.SoLicenseNames.Chat
  commentId: F:SuperOffice.License.SoLicenseNames.Chat
  id: Chat
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: Chat
  nameWithType: SoLicenseNames.Chat
  fullName: SuperOffice.License.SoLicenseNames.Chat
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.chat : Activate chat system. Without this license the Chat Admin does not appear.

    System license.
  example: []
  syntax:
    content: public const string Chat = "superoffice.chat"
    return:
      type: System.String
    content.vb: Public Const Chat As String = "superoffice.chat"
- uid: SuperOffice.License.SoLicenseNames.ChatCal
  commentId: F:SuperOffice.License.SoLicenseNames.ChatCal
  id: ChatCal
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: ChatCal
  nameWithType: SoLicenseNames.ChatCal
  fullName: SuperOffice.License.SoLicenseNames.ChatCal
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.chat-cal: Turn on chat for this user. Without this CAL the user cannot access Chat system.

    Chat permissions are controlled separately in admin.

    User license.
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string ChatCal = "superoffice.chat-cal"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const ChatCal As String = "superoffice.chat-cal"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.Forms
  commentId: F:SuperOffice.License.SoLicenseNames.Forms
  id: Forms
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: Forms
  nameWithType: SoLicenseNames.Forms
  fullName: SuperOffice.License.SoLicenseNames.Forms
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.forms : Activate forms system. Without this license the Forms panel does not appear.

    System license.
  example: []
  syntax:
    content: public const string Forms = "superoffice.forms"
    return:
      type: System.String
    content.vb: Public Const Forms As String = "superoffice.forms"
- uid: SuperOffice.License.SoLicenseNames.FormsCal
  commentId: F:SuperOffice.License.SoLicenseNames.FormsCal
  id: FormsCal
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: FormsCal
  nameWithType: SoLicenseNames.FormsCal
  fullName: SuperOffice.License.SoLicenseNames.FormsCal
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.forms-cal: Turn on forms for this user. Without this CAL the user cannot access Forms designer.

    User license.
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string FormsCal = "superoffice.forms-cal"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const FormsCal As String = "superoffice.forms-cal"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.MarketingAutomation
  commentId: F:SuperOffice.License.SoLicenseNames.MarketingAutomation
  id: MarketingAutomation
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: MarketingAutomation
  nameWithType: SoLicenseNames.MarketingAutomation
  fullName: SuperOffice.License.SoLicenseNames.MarketingAutomation
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.mktg-auto: Activate marketing automation system. Without this license the Automation panel does not appear.

    System license.
  example: []
  syntax:
    content: public const string MarketingAutomation = "superoffice.mktg-auto"
    return:
      type: System.String
    content.vb: Public Const MarketingAutomation As String = "superoffice.mktg-auto"
- uid: SuperOffice.License.SoLicenseNames.MarketingAutomationCal
  commentId: F:SuperOffice.License.SoLicenseNames.MarketingAutomationCal
  id: MarketingAutomationCal
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: MarketingAutomationCal
  nameWithType: SoLicenseNames.MarketingAutomationCal
  fullName: SuperOffice.License.SoLicenseNames.MarketingAutomationCal
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.mktg-auto-cal: Turn on marketing automation for this user. Without this CAL the user cannot access automation designer.

    User license.
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string MarketingAutomationCal = "superoffice.mktg-auto-cal"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const MarketingAutomationCal As String = "superoffice.mktg-auto-cal"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.AI
  commentId: F:SuperOffice.License.SoLicenseNames.AI
  id: AI
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: AI
  nameWithType: SoLicenseNames.AI
  fullName: SuperOffice.License.SoLicenseNames.AI
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.ai: Artificial Intelligence

    System license.
  example: []
  syntax:
    content: public const string AI = "superoffice.ai"
    return:
      type: System.String
    content.vb: Public Const AI As String = "superoffice.ai"
- uid: SuperOffice.License.SoLicenseNames.Engagement
  commentId: F:SuperOffice.License.SoLicenseNames.Engagement
  id: Engagement
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: Engagement
  nameWithType: SoLicenseNames.Engagement
  fullName: SuperOffice.License.SoLicenseNames.Engagement
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.cep: Engagement Platform. Enables chat, forms, cust ctr

    System license.
  example: []
  syntax:
    content: public const string Engagement = "superoffice.cep"
    return:
      type: System.String
    content.vb: Public Const Engagement As String = "superoffice.cep"
- uid: SuperOffice.License.SoLicenseNames.FormsFree
  commentId: F:SuperOffice.License.SoLicenseNames.FormsFree
  id: FormsFree
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: FormsFree
  nameWithType: SoLicenseNames.FormsFree
  fullName: SuperOffice.License.SoLicenseNames.FormsFree
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.forms-free: Enables forms

    System license.
  example: []
  syntax:
    content: public const string FormsFree = "superoffice.forms-free"
    return:
      type: System.String
    content.vb: Public Const FormsFree As String = "superoffice.forms-free"
- uid: SuperOffice.License.SoLicenseNames.ChatFree
  commentId: F:SuperOffice.License.SoLicenseNames.ChatFree
  id: ChatFree
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: ChatFree
  nameWithType: SoLicenseNames.ChatFree
  fullName: SuperOffice.License.SoLicenseNames.ChatFree
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.chat-free: Enables chat

    System license.
  example: []
  syntax:
    content: public const string ChatFree = "superoffice.chat-free"
    return:
      type: System.String
    content.vb: Public Const ChatFree As String = "superoffice.chat-free"
- uid: SuperOffice.License.SoLicenseNames.Ten
  commentId: F:SuperOffice.License.SoLicenseNames.Ten
  id: Ten
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: Ten
  nameWithType: SoLicenseNames.Ten
  fullName: SuperOffice.License.SoLicenseNames.Ten
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.ten: Indicates that the new new Ten pricelist is in use, and we have cleaned out BUY licenses. 

    Applies to both Online and On-Prem installations.

    System license. Hidden.
  example: []
  syntax:
    content: public const string Ten = "superoffice.ten"
    return:
      type: System.String
    content.vb: Public Const Ten As String = "superoffice.ten"
- uid: SuperOffice.License.SoLicenseNames.T1
  commentId: F:SuperOffice.License.SoLicenseNames.T1
  id: T1
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: T1
  nameWithType: SoLicenseNames.T1
  fullName: SuperOffice.License.SoLicenseNames.T1
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.t1: Indicates user is on Tier 1 

    Applies to both Online and On-Prem installations.

    User license. Hidden.
  example: []
  syntax:
    content: public const string T1 = "superoffice.t1"
    return:
      type: System.String
    content.vb: Public Const T1 As String = "superoffice.t1"
- uid: SuperOffice.License.SoLicenseNames.T2
  commentId: F:SuperOffice.License.SoLicenseNames.T2
  id: T2
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: T2
  nameWithType: SoLicenseNames.T2
  fullName: SuperOffice.License.SoLicenseNames.T2
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.t2: Indicates user is on Tier 2

    Applies to both Online and On-Prem installations.

    User license. Hidden.
  example: []
  syntax:
    content: public const string T2 = "superoffice.t2"
    return:
      type: System.String
    content.vb: Public Const T2 As String = "superoffice.t2"
- uid: SuperOffice.License.SoLicenseNames.SalesT1
  commentId: F:SuperOffice.License.SoLicenseNames.SalesT1
  id: SalesT1
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: SalesT1
  nameWithType: SoLicenseNames.SalesT1
  fullName: SuperOffice.License.SoLicenseNames.SalesT1
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.sales-t1: Sales Cloud Tier1 marker

    System license. Hidden
  example: []
  syntax:
    content: public const string SalesT1 = "superoffice.sales-t1"
    return:
      type: System.String
    content.vb: Public Const SalesT1 As String = "superoffice.sales-t1"
- uid: SuperOffice.License.SoLicenseNames.SalesT2
  commentId: F:SuperOffice.License.SoLicenseNames.SalesT2
  id: SalesT2
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: SalesT2
  nameWithType: SoLicenseNames.SalesT2
  fullName: SuperOffice.License.SoLicenseNames.SalesT2
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.sales-t2: Sales Cloud Tier2 marker

    System license. Hidden
  example: []
  syntax:
    content: public const string SalesT2 = "superoffice.sales-t2"
    return:
      type: System.String
    content.vb: Public Const SalesT2 As String = "superoffice.sales-t2"
- uid: SuperOffice.License.SoLicenseNames.ServiceT1
  commentId: F:SuperOffice.License.SoLicenseNames.ServiceT1
  id: ServiceT1
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: ServiceT1
  nameWithType: SoLicenseNames.ServiceT1
  fullName: SuperOffice.License.SoLicenseNames.ServiceT1
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.service-t1: Service Cloud Tier1 marker

    System license. Hidden
  example: []
  syntax:
    content: public const string ServiceT1 = "superoffice.service-t1"
    return:
      type: System.String
    content.vb: Public Const ServiceT1 As String = "superoffice.service-t1"
- uid: SuperOffice.License.SoLicenseNames.ServiceT2
  commentId: F:SuperOffice.License.SoLicenseNames.ServiceT2
  id: ServiceT2
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: ServiceT2
  nameWithType: SoLicenseNames.ServiceT2
  fullName: SuperOffice.License.SoLicenseNames.ServiceT2
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.service-t2: Service Cloud Tier2 marker

    System license. Hidden
  example: []
  syntax:
    content: public const string ServiceT2 = "superoffice.service-t2"
    return:
      type: System.String
    content.vb: Public Const ServiceT2 As String = "superoffice.service-t2"
- uid: SuperOffice.License.SoLicenseNames.MarketingT1
  commentId: F:SuperOffice.License.SoLicenseNames.MarketingT1
  id: MarketingT1
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: MarketingT1
  nameWithType: SoLicenseNames.MarketingT1
  fullName: SuperOffice.License.SoLicenseNames.MarketingT1
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.marketing-t1: Marketing Cloud Tier1 marker

    System license. Hidden
  example: []
  syntax:
    content: public const string MarketingT1 = "superoffice.marketing-t1"
    return:
      type: System.String
    content.vb: Public Const MarketingT1 As String = "superoffice.marketing-t1"
- uid: SuperOffice.License.SoLicenseNames.MarketingT2
  commentId: F:SuperOffice.License.SoLicenseNames.MarketingT2
  id: MarketingT2
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: MarketingT2
  nameWithType: SoLicenseNames.MarketingT2
  fullName: SuperOffice.License.SoLicenseNames.MarketingT2
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.marketing-t2: Marketing Cloud Tier2 marker

    System license. Hidden
  example: []
  syntax:
    content: public const string MarketingT2 = "superoffice.marketing-t2"
    return:
      type: System.String
    content.vb: Public Const MarketingT2 As String = "superoffice.marketing-t2"
- uid: SuperOffice.License.SoLicenseNames.TenSales
  commentId: F:SuperOffice.License.SoLicenseNames.TenSales
  id: TenSales
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: TenSales
  nameWithType: SoLicenseNames.TenSales
  fullName: SuperOffice.License.SoLicenseNames.TenSales
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.ten-sales: Enables user, web, project-cal, sale-cal, quote-cal, selection-cal, selection-combined-cal, report-cal, relation-cal   licenses automatically when used. See ExtraInfo field for details.

    Can be T1 or T2

    User license. Type 1 (Radio button)
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string TenSales = "superoffice.ten-sales"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const TenSales As String = "superoffice.ten-sales"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.TenService
  commentId: F:SuperOffice.License.SoLicenseNames.TenService
  id: TenService
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: TenService
  nameWithType: SoLicenseNames.TenService
  fullName: SuperOffice.License.SoLicenseNames.TenService
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.ten-service: Enables user, web, project-cal, sale-cal, quote-cal, selection-cal, selection-combined-cal, report-cal, relation-cal   licenses automatically when used. See ExtraInfo field for details.

    Can be T1 or T2

    User license. Type 1 (Radio button)
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string TenService = "superoffice.ten-service"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const TenService As String = "superoffice.ten-service"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.TenMarketing
  commentId: F:SuperOffice.License.SoLicenseNames.TenMarketing
  id: TenMarketing
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: TenMarketing
  nameWithType: SoLicenseNames.TenMarketing
  fullName: SuperOffice.License.SoLicenseNames.TenMarketing
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.ten-marketing: Enables user, web, project-cal, sale-cal, quote-cal, selection-cal, selection-combined-cal, report-cal, relation-cal   licenses automatically when used. See ExtraInfo field for details.

    Can be T1 or T2

    User license. Type 1 (Radio button)
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string TenMarketing = "superoffice.ten-marketing"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const TenMarketing As String = "superoffice.ten-marketing"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.TenSalesService
  commentId: F:SuperOffice.License.SoLicenseNames.TenSalesService
  id: TenSalesService
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: TenSalesService
  nameWithType: SoLicenseNames.TenSalesService
  fullName: SuperOffice.License.SoLicenseNames.TenSalesService
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.ten-salesservice: Enables user, web, project-cal, sale-cal, quote-cal, selection-cal, selection-combined-cal, report-cal, relation-cal   licenses automatically when used. See ExtraInfo field for details.

    Can be T1 or T2

    User license. Type 1 (Radio button)
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string TenSalesService = "superoffice.ten-salesservice"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const TenSalesService As String = "superoffice.ten-salesservice"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.TenSalesMarketing
  commentId: F:SuperOffice.License.SoLicenseNames.TenSalesMarketing
  id: TenSalesMarketing
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: TenSalesMarketing
  nameWithType: SoLicenseNames.TenSalesMarketing
  fullName: SuperOffice.License.SoLicenseNames.TenSalesMarketing
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.ten-salesmarketing: Enables user, web, project-cal, sale-cal, quote-cal, selection-cal, selection-combined-cal, report-cal, relation-cal   licenses automatically when used. See ExtraInfo field for details.

    Can be T1 or T2

    User license. Type 1 (Radio button)
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string TenSalesMarketing = "superoffice.ten-salesmarketing"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const TenSalesMarketing As String = "superoffice.ten-salesmarketing"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.TenServiceMarketing
  commentId: F:SuperOffice.License.SoLicenseNames.TenServiceMarketing
  id: TenServiceMarketing
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: TenServiceMarketing
  nameWithType: SoLicenseNames.TenServiceMarketing
  fullName: SuperOffice.License.SoLicenseNames.TenServiceMarketing
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.ten-servicemarketing: Enables user, web, project-cal, sale-cal, quote-cal, selection-cal, selection-combined-cal, report-cal, relation-cal   licenses automatically when used. See ExtraInfo field for details.

    Can be T1 or T2

    User license. Type 1 (Radio button)
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string TenServiceMarketing = "superoffice.ten-servicemarketing"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const TenServiceMarketing As String = "superoffice.ten-servicemarketing"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.TenSalesServiceMarketing
  commentId: F:SuperOffice.License.SoLicenseNames.TenSalesServiceMarketing
  id: TenSalesServiceMarketing
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: TenSalesServiceMarketing
  nameWithType: SoLicenseNames.TenSalesServiceMarketing
  fullName: SuperOffice.License.SoLicenseNames.TenSalesServiceMarketing
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.ten-salesservicemarketing: Enables user, web, project-cal, sale-cal, quote-cal, selection-cal, selection-combined-cal, report-cal, relation-cal   licenses automatically when used. See ExtraInfo field for details.

    Can be T1 or T2

    User license. Type 1 (Radio button)
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string TenSalesServiceMarketing = "superoffice.ten-salesservicemarketing"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const TenSalesServiceMarketing As String = "superoffice.ten-salesservicemarketing"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.AiCategorization
  commentId: F:SuperOffice.License.SoLicenseNames.AiCategorization
  id: AiCategorization
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: AiCategorization
  nameWithType: SoLicenseNames.AiCategorization
  fullName: SuperOffice.License.SoLicenseNames.AiCategorization
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.aicategorization: Enables auto categorization of service messages

    Site license.
  example: []
  syntax:
    content: public const string AiCategorization = "superoffice.aicategorization"
    return:
      type: System.String
    content.vb: Public Const AiCategorization As String = "superoffice.aicategorization"
- uid: SuperOffice.License.SoLicenseNames.AiPlatform
  commentId: F:SuperOffice.License.SoLicenseNames.AiPlatform
  id: AiPlatform
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: AiPlatform
  nameWithType: SoLicenseNames.AiPlatform
  fullName: SuperOffice.License.SoLicenseNames.AiPlatform
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.aiplatform: Enables AI features

    Site license.
  example: []
  syntax:
    content: public const string AiPlatform = "superoffice.aiplatform"
    return:
      type: System.String
    content.vb: Public Const AiPlatform As String = "superoffice.aiplatform"
- uid: SuperOffice.License.SoLicenseNames.AiChatbot
  commentId: F:SuperOffice.License.SoLicenseNames.AiChatbot
  id: AiChatbot
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: AiChatbot
  nameWithType: SoLicenseNames.AiChatbot
  fullName: SuperOffice.License.SoLicenseNames.AiChatbot
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.aichatbot: Enables Chatbot features

    Site license.
  example: []
  syntax:
    content: public const string AiChatbot = "superoffice.aichatbot"
    return:
      type: System.String
    content.vb: Public Const AiChatbot As String = "superoffice.aichatbot"
- uid: SuperOffice.License.SoLicenseNames.AiTextServices
  commentId: F:SuperOffice.License.SoLicenseNames.AiTextServices
  id: AiTextServices
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: AiTextServices
  nameWithType: SoLicenseNames.AiTextServices
  fullName: SuperOffice.License.SoLicenseNames.AiTextServices
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.aitextservices: Enables AI translation and sentiment features

    Site license.
  example: []
  syntax:
    content: public const string AiTextServices = "superoffice.aitextservices"
    return:
      type: System.String
    content.vb: Public Const AiTextServices As String = "superoffice.aitextservices"
- uid: SuperOffice.License.SoLicenseNames.DataBridge
  commentId: F:SuperOffice.License.SoLicenseNames.DataBridge
  id: DataBridge
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: DataBridge
  nameWithType: SoLicenseNames.DataBridge
  fullName: SuperOffice.License.SoLicenseNames.DataBridge
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.databridge: Enables DataBridge

    Site license.
  example: []
  syntax:
    content: public const string DataBridge = "superoffice.databridge"
    return:
      type: System.String
    content.vb: Public Const DataBridge As String = "superoffice.databridge"
- uid: SuperOffice.License.SoLicenseNames.MarketingPlatform
  commentId: F:SuperOffice.License.SoLicenseNames.MarketingPlatform
  id: MarketingPlatform
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: MarketingPlatform
  nameWithType: SoLicenseNames.MarketingPlatform
  fullName: SuperOffice.License.SoLicenseNames.MarketingPlatform
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.marketingplatform: Enables Marketing features

    Site license.
  example: []
  syntax:
    content: public const string MarketingPlatform = "superoffice.marketingplatform"
    return:
      type: System.String
    content.vb: Public Const MarketingPlatform As String = "superoffice.marketingplatform"
- uid: SuperOffice.License.SoLicenseNames.FreeMailings
  commentId: F:SuperOffice.License.SoLicenseNames.FreeMailings
  id: FreeMailings
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: FreeMailings
  nameWithType: SoLicenseNames.FreeMailings
  fullName: SuperOffice.License.SoLicenseNames.FreeMailings
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.free-mailings: Enables old mailings license

    Site license.
  example: []
  syntax:
    content: public const string FreeMailings = "superoffice.free-mailings"
    return:
      type: System.String
    content.vb: Public Const FreeMailings As String = "superoffice.free-mailings"
- uid: SuperOffice.License.SoLicenseNames.FreeProjects
  commentId: F:SuperOffice.License.SoLicenseNames.FreeProjects
  id: FreeProjects
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: FreeProjects
  nameWithType: SoLicenseNames.FreeProjects
  fullName: SuperOffice.License.SoLicenseNames.FreeProjects
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.free-projects: Enables projects for T1 users

    Site license.
  example: []
  syntax:
    content: public const string FreeProjects = "superoffice.free-projects"
    return:
      type: System.String
    content.vb: Public Const FreeProjects As String = "superoffice.free-projects"
- uid: SuperOffice.License.SoLicenseNames.Dash
  commentId: F:SuperOffice.License.SoLicenseNames.Dash
  id: Dash
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: Dash
  nameWithType: SoLicenseNames.Dash
  fullName: SuperOffice.License.SoLicenseNames.Dash
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.dash: Enables dashboard viewing, basic editing of tiles

    Site license.
  example: []
  syntax:
    content: public const string Dash = "superoffice.dash"
    return:
      type: System.String
    content.vb: Public Const Dash As String = "superoffice.dash"
- uid: SuperOffice.License.SoLicenseNames.DashCal
  commentId: F:SuperOffice.License.SoLicenseNames.DashCal
  id: DashCal
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: DashCal
  nameWithType: SoLicenseNames.DashCal
  fullName: SuperOffice.License.SoLicenseNames.DashCal
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.dash-cal: Enables dashboard editing for user, tile and graph editor

    User license.
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string DashCal = "superoffice.dash-cal"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const DashCal As String = "superoffice.dash-cal"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.Guide
  commentId: F:SuperOffice.License.SoLicenseNames.Guide
  id: Guide
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: Guide
  nameWithType: SoLicenseNames.Guide
  fullName: SuperOffice.License.SoLicenseNames.Guide
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.guide: Enables guides panel in admin

    Site license.
  example: []
  syntax:
    content: public const string Guide = "superoffice.guide"
    return:
      type: System.String
    content.vb: Public Const Guide As String = "superoffice.guide"
- uid: SuperOffice.License.SoLicenseNames.GuideCal
  commentId: F:SuperOffice.License.SoLicenseNames.GuideCal
  id: GuideCal
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: GuideCal
  nameWithType: SoLicenseNames.GuideCal
  fullName: SuperOffice.License.SoLicenseNames.GuideCal
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.guide-cal: Enables project/sale guide tab for user if Sale/Project has guide enabled.

    User license.
  example: []
  syntax:
    content: >-
      [UserLicense]

      public const string GuideCal = "superoffice.guide-cal"
    return:
      type: System.String
    content.vb: >-
      <UserLicense>

      Public Const GuideCal As String = "superoffice.guide-cal"
  attributes:
  - type: SuperOffice.License.UserLicenseAttribute
    ctor: SuperOffice.License.UserLicenseAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.SoLicenseNames.Escalate
  commentId: F:SuperOffice.License.SoLicenseNames.Escalate
  id: Escalate
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: Escalate
  nameWithType: SoLicenseNames.Escalate
  fullName: SuperOffice.License.SoLicenseNames.Escalate
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.escalate: Enables ticket escalation

    Site license.
  example: []
  syntax:
    content: public const string Escalate = "superoffice.escalate"
    return:
      type: System.String
    content.vb: Public Const Escalate As String = "superoffice.escalate"
- uid: SuperOffice.License.SoLicenseNames.InboxFilter
  commentId: F:SuperOffice.License.SoLicenseNames.InboxFilter
  id: InboxFilter
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: InboxFilter
  nameWithType: SoLicenseNames.InboxFilter
  fullName: SuperOffice.License.SoLicenseNames.InboxFilter
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.inbox-filter: Enables filter rules on incoming requests

    Site license.
  example: []
  syntax:
    content: public const string InboxFilter = "superoffice.inbox-filter"
    return:
      type: System.String
    content.vb: Public Const InboxFilter As String = "superoffice.inbox-filter"
- uid: SuperOffice.License.SoLicenseNames.RequestBatch
  commentId: F:SuperOffice.License.SoLicenseNames.RequestBatch
  id: RequestBatch
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: RequestBatch
  nameWithType: SoLicenseNames.RequestBatch
  fullName: SuperOffice.License.SoLicenseNames.RequestBatch
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.request-batch: Enables bulk operations on requests, change logging

    Site license.
  example: []
  syntax:
    content: public const string RequestBatch = "superoffice.request-batch"
    return:
      type: System.String
    content.vb: Public Const RequestBatch As String = "superoffice.request-batch"
- uid: SuperOffice.License.SoLicenseNames.SmsMailings
  commentId: F:SuperOffice.License.SoLicenseNames.SmsMailings
  id: SmsMailings
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: SmsMailings
  nameWithType: SoLicenseNames.SmsMailings
  fullName: SuperOffice.License.SoLicenseNames.SmsMailings
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.mod-sms-mailings: Enables SMS in mailings

    Site license.
  example: []
  syntax:
    content: public const string SmsMailings = "superoffice.mod-sms-mailings"
    return:
      type: System.String
    content.vb: Public Const SmsMailings As String = "superoffice.mod-sms-mailings"
- uid: SuperOffice.License.SoLicenseNames.ConfigScreens
  commentId: F:SuperOffice.License.SoLicenseNames.ConfigScreens
  id: ConfigScreens
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: ConfigScreens
  nameWithType: SoLicenseNames.ConfigScreens
  fullName: SuperOffice.License.SoLicenseNames.ConfigScreens
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.config-screens: Enables configurable screens

    Site license.
  example: []
  syntax:
    content: public const string ConfigScreens = "superoffice.config-screens"
    return:
      type: System.String
    content.vb: Public Const ConfigScreens As String = "superoffice.config-screens"
- uid: SuperOffice.License.SoLicenseNames.CustomObjects
  commentId: F:SuperOffice.License.SoLicenseNames.CustomObjects
  id: CustomObjects
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: CustomObjects
  nameWithType: SoLicenseNames.CustomObjects
  fullName: SuperOffice.License.SoLicenseNames.CustomObjects
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.custom-objects: Enables custom screens for extra tables.

    Site license.
  example: []
  syntax:
    content: public const string CustomObjects = "superoffice.custom-objects"
    return:
      type: System.String
    content.vb: Public Const CustomObjects As String = "superoffice.custom-objects"
- uid: SuperOffice.License.SoLicenseNames.SCIM
  commentId: F:SuperOffice.License.SoLicenseNames.SCIM
  id: SCIM
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: SCIM
  nameWithType: SoLicenseNames.SCIM
  fullName: SuperOffice.License.SoLicenseNames.SCIM
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.scim: Automated user management via ActiveDirectory

    Site license.
  example: []
  syntax:
    content: public const string SCIM = "superoffice.scim"
    return:
      type: System.String
    content.vb: Public Const SCIM As String = "superoffice.scim"
- uid: SuperOffice.License.SoLicenseNames.Sandbox
  commentId: F:SuperOffice.License.SoLicenseNames.Sandbox
  id: Sandbox
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: Sandbox
  nameWithType: SoLicenseNames.Sandbox
  fullName: SuperOffice.License.SoLicenseNames.Sandbox
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.sandbox: Not a production installation / for dev and test.

    Site license.
  example: []
  syntax:
    content: public const string Sandbox = "superoffice.sandbox"
    return:
      type: System.String
    content.vb: Public Const Sandbox As String = "superoffice.sandbox"
- uid: SuperOffice.License.SoLicenseNames.PremiumSupport
  commentId: F:SuperOffice.License.SoLicenseNames.PremiumSupport
  id: PremiumSupport
  parent: SuperOffice.License.SoLicenseNames
  langs:
  - csharp
  - vb
  name: PremiumSupport
  nameWithType: SoLicenseNames.PremiumSupport
  fullName: SuperOffice.License.SoLicenseNames.PremiumSupport
  type: Field
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.License
  summary: >-
    superoffice.premium-support: Premium support purchased

    Site license.
  example: []
  syntax:
    content: public const string PremiumSupport = "superoffice.premium-support"
    return:
      type: System.String
    content.vb: Public Const PremiumSupport As String = "superoffice.premium-support"
references:
- uid: SuperOffice.License
  commentId: N:SuperOffice.License
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.License
  nameWithType: SuperOffice.License
  fullName: SuperOffice.License
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.License
    name: License
    isExternal: true
    href: SuperOffice.License.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.License
    name: License
    isExternal: true
    href: SuperOffice.License.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
