### YamlMime:ManagedReference
items:
- uid: SuperOffice.WebApi.Agents.TicketAgent
  commentId: T:SuperOffice.WebApi.Agents.TicketAgent
  id: TicketAgent
  parent: SuperOffice.WebApi.Agents
  children:
  - SuperOffice.WebApi.Agents.TicketAgent.#ctor(SuperOffice.WebApi.WebApiOptions,System.Net.Http.HttpClient)
  - SuperOffice.WebApi.Agents.TicketAgent.#ctor(System.Net.Http.HttpClient)
  - SuperOffice.WebApi.Agents.TicketAgent.AddAttachmentsAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.BatchForwardAsync(System.Int32[],System.String[],System.String[],System.String[],System.String,System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.BatchReplyAsync(SuperOffice.WebApi.Data.TicketBatchReplyData,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.CalculateMessageRecipientsAsync(System.Int32,SuperOffice.WebApi.Data.MessageActionType,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.ClearNotifyAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.CopyFromCRMDocumentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.CopyToTempFileAsync(System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.CreateDefaultAttachmentEntityAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.CreateDefaultForTicketTypeAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.CreateDefaultTicketEntityAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.CreateDefaultTicketMessageEntityAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.DeleteMessageHeadersAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.DeleteTicketEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.DeleteTicketMessageEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.DoEscalatingAsync(System.Int32,SuperOffice.WebApi.Data.TicketPriorityEscalateAction,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.GetAttachmentEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.GetAttachmentInfoAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.GetAttachmentInfoNonInlineAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.GetAttachmentPreviewAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.GetAttachmentStreamAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.GetDefaultMessageContentAsync(System.Int32,SuperOffice.WebApi.Data.MessageActionType,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.GetDefaultMessageContentFullAsync(System.Int32,SuperOffice.WebApi.Data.MessageActionType,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.GetDefaultMessageContentWithOptionsAsync(System.Int32,SuperOffice.WebApi.Data.MessageActionType,System.Int32,System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.GetForRmUiAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.GetNextInQueueAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.GetPreviewAttachmentStreamAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.GetRfcAttachmentStreamAsync(System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.GetTicketAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.GetTicketAttachmentsAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.GetTicketEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.GetTicketMessageAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.GetTicketMessageEntitiesAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.GetTicketMessageEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.GetTicketMessageWithEmbeddedDataAsync(System.Int32,SuperOffice.WebApi.Data.ImageEmbedType,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.GetTicketMessageWithOptionsAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.GetTicketsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.GetTicketSummariesAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.Html2TextAsync(System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.MergeTicketsAsync(SuperOffice.WebApi.Data.TicketEntity,System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.NotifyNewTicketAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.NotifyNewTicketMessageAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.ProcessTicketWhenReadAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.RemoveMessageAttachmentsAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.ResolveTicketIdAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.SanitizeMailContentAsync(System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.SanitizeMailContentsAsync(System.String[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.SanitizeMailContentWithOptionsAsync(System.String,SuperOffice.WebApi.Data.HtmlSanitizerOptions,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.SaveAttachmentEntityAsync(SuperOffice.WebApi.Data.AttachmentEntity,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.SaveTicketEntityAsync(SuperOffice.WebApi.Data.TicketEntity,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.SaveTicketEntityWithNotifyAsync(SuperOffice.WebApi.Data.TicketEntity,System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.SaveTicketMessageEntityAsync(SuperOffice.WebApi.Data.TicketMessageEntity,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.SaveTicketMessageEntityWithNotifyAsync(SuperOffice.WebApi.Data.TicketMessageEntity,System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.SaveTicketMessageEntityWithOptionsAsync(SuperOffice.WebApi.Data.TicketMessageEntity,System.Boolean,System.Int32[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.SendTicketMessageAsync(System.Int32,System.String[],System.String[],System.String[],System.String,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.SendTicketMessageSmsAsync(System.Int32,System.Int32,System.String[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.SetDeletedStatusByIdsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.SetDeletedStatusByProviderAsync(System.String,SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.SetTicketMessageImportantAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.SetTicketReadByOwnerAsync(System.Int32,SuperOffice.WebApi.Data.TicketReadStatus,System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.SplitTicketAsync(System.Int32,System.Int32,System.DateTime,System.Int32[],SuperOffice.WebApi.Data.TicketEntity,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.SplitTicketMessageAsync(SuperOffice.WebApi.Data.TicketMessageEntity,SuperOffice.WebApi.Data.TicketEntity,SuperOffice.WebApi.Data.TicketMessageEntity,System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.UndeleteByIdsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.UpdateTicketsReadStatusAsync(System.Int32[],SuperOffice.WebApi.Data.TicketReadStatus,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.UpdateTicketsReadStatusByProviderAsync(System.String,SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],SuperOffice.WebApi.Data.TicketReadStatus,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.UploadAttachmentAsync(System.Int32,System.Byte[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.TicketAgent.ValidateAttachmentsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  langs:
  - csharp
  - vb
  name: TicketAgent
  nameWithType: TicketAgent
  fullName: SuperOffice.WebApi.Agents.TicketAgent
  type: Class
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nAgent used for Ticket functions\n"
  example:
  - "\n<pre><code>  using SuperOffice.WebApi;\n  using SuperOffice.WebApi.Agents;\n\n  var mySession = new WebApiOptions(&quot;http://example.com/super/api&quot;);\n  mySession.Authorization = new AuthorizationUsernamePassword(&quot;user&quot;, &quot;pass&quot;);\n  using (TicketAgent agent = new TicketAgent(mySession))\n  {\n        // call methods on agent here...\n  }</code></pre>\n"
  syntax:
    content: 'public class TicketAgent : AgentBase, ITicketAgent, IDisposable'
    content.vb: >-
      Public Class TicketAgent
          Inherits AgentBase
          Implements ITicketAgent, IDisposable
  inheritance:
  - System.Object
  - SuperOffice.WebApi.Agents.AgentBase
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent
  - System.IDisposable
  inheritedMembers:
  - SuperOffice.WebApi.Agents.AgentBase._json
  - SuperOffice.WebApi.Agents.AgentBase._binary
  - SuperOffice.WebApi.Agents.AgentBase._config
  - SuperOffice.WebApi.Agents.AgentBase._client
  - SuperOffice.WebApi.Agents.AgentBase._disposeClient
  - SuperOffice.WebApi.Agents.AgentBase.Merge(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
  - SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream(System.Net.Http.HttpMethod,System.String,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
  - SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObjectWithStream(System.Net.Http.HttpMethod,System.String,System.Object,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
  - SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization(SuperOffice.WebApi.Authorization.IAuthorization)
  - SuperOffice.WebApi.Agents.AgentBase.CancelRequest
  - SuperOffice.WebApi.Agents.AgentBase.SendRequestObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
  - SuperOffice.WebApi.Agents.AgentBase.SendRequestObjectWithStream(System.Net.Http.HttpMethod,System.String,System.Object,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
  - SuperOffice.WebApi.Agents.AgentBase.SendRequest(System.Net.Http.HttpRequestMessage,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage)
  - SuperOffice.WebApi.Agents.AgentBase.ParseResponse``1(System.Net.Http.HttpResponseMessage)
  - SuperOffice.WebApi.Agents.AgentBase.Finally(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AgentBase.Dispose
  - SuperOffice.WebApi.Agents.AgentBase.Configuration
  - SuperOffice.WebApi.Agents.AgentBase.Client
  - SuperOffice.WebApi.Agents.AgentBase.HasRunningRequest
  - SuperOffice.WebApi.Agents.AgentBase.ClientCancellationTokenSource
  - SuperOffice.WebApi.Agents.AgentBase.ProgressListener
  - SuperOffice.WebApi.Agents.AgentBase.UploadProgressListener
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.WebApi.Agents.TicketAgent.#ctor(System.Net.Http.HttpClient)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.#ctor(System.Net.Http.HttpClient)
  id: '#ctor(System.Net.Http.HttpClient)'
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: TicketAgent(HttpClient)
  nameWithType: TicketAgent.TicketAgent(HttpClient)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.TicketAgent(System.Net.Http.HttpClient)
  type: Constructor
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nConstructor: Agent used for Ticket functions\n"
  syntax:
    content: public TicketAgent(HttpClient httpClient)
    parameters:
    - id: httpClient
      type: System.Net.Http.HttpClient
      description: Use this HTTP client instead of making own HttpClient instance.
    content.vb: Public Sub New(httpClient As HttpClient)
  overload: SuperOffice.WebApi.Agents.TicketAgent.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.TicketAgent.#ctor(SuperOffice.WebApi.WebApiOptions,System.Net.Http.HttpClient)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.#ctor(SuperOffice.WebApi.WebApiOptions,System.Net.Http.HttpClient)
  id: '#ctor(SuperOffice.WebApi.WebApiOptions,System.Net.Http.HttpClient)'
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: TicketAgent(WebApiOptions, HttpClient)
  nameWithType: TicketAgent.TicketAgent(WebApiOptions, HttpClient)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.TicketAgent(SuperOffice.WebApi.WebApiOptions, System.Net.Http.HttpClient)
  type: Constructor
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nConstructor: Agent used for Ticket functions\n"
  syntax:
    content: public TicketAgent(WebApiOptions options, HttpClient httpClient = null)
    parameters:
    - id: options
      type: SuperOffice.WebApi.WebApiOptions
      description: Base URL and authentication values.
    - id: httpClient
      type: System.Net.Http.HttpClient
      description: 'Optional: Use this HTTP client instead of making a new one.'
    content.vb: Public Sub New(options As WebApiOptions, httpClient As HttpClient = Nothing)
  overload: SuperOffice.WebApi.Agents.TicketAgent.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.TicketAgent.CreateDefaultAttachmentEntityAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.CreateDefaultAttachmentEntityAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultAttachmentEntityAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultAttachmentEntityAsync(RequestOptions)
  nameWithType: TicketAgent.CreateDefaultAttachmentEntityAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.CreateDefaultAttachmentEntityAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet default values into a new AttachmentEntity.\nNetServer calculates default values on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: public Task<AttachmentEntity> CreateDefaultAttachmentEntityAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AttachmentEntity}
      description: A blank AttachmentEntity
    content.vb: Public Function CreateDefaultAttachmentEntityAsync(requestOptions As RequestOptions = Nothing) As Task(Of AttachmentEntity)
  overload: SuperOffice.WebApi.Agents.TicketAgent.CreateDefaultAttachmentEntityAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.CreateDefaultAttachmentEntityAsync(SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.TicketAgent.SaveAttachmentEntityAsync(SuperOffice.WebApi.Data.AttachmentEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.SaveAttachmentEntityAsync(SuperOffice.WebApi.Data.AttachmentEntity,SuperOffice.WebApi.RequestOptions)
  id: SaveAttachmentEntityAsync(SuperOffice.WebApi.Data.AttachmentEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: SaveAttachmentEntityAsync(AttachmentEntity, RequestOptions)
  nameWithType: TicketAgent.SaveAttachmentEntityAsync(AttachmentEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.SaveAttachmentEntityAsync(SuperOffice.WebApi.Data.AttachmentEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdates the existing AttachmentEntity or creates a new AttachmentEntity if the id parameter is 0. \n"
  syntax:
    content: public Task<AttachmentEntity> SaveAttachmentEntityAsync(AttachmentEntity attachmentEntity, RequestOptions requestOptions = null)
    parameters:
    - id: attachmentEntity
      type: SuperOffice.WebApi.Data.AttachmentEntity
      description: The AttachmentEntity that is saved.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AttachmentEntity}
      description: New or updated AttachmentEntity
    content.vb: Public Function SaveAttachmentEntityAsync(attachmentEntity As AttachmentEntity, requestOptions As RequestOptions = Nothing) As Task(Of AttachmentEntity)
  overload: SuperOffice.WebApi.Agents.TicketAgent.SaveAttachmentEntityAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.SaveAttachmentEntityAsync(SuperOffice.WebApi.Data.AttachmentEntity,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.TicketAgent.CreateDefaultTicketEntityAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.CreateDefaultTicketEntityAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultTicketEntityAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultTicketEntityAsync(RequestOptions)
  nameWithType: TicketAgent.CreateDefaultTicketEntityAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.CreateDefaultTicketEntityAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet default values into a new TicketEntity.\nNetServer calculates default values on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: public Task<TicketEntity> CreateDefaultTicketEntityAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketEntity}
      description: A blank TicketEntity
    content.vb: Public Function CreateDefaultTicketEntityAsync(requestOptions As RequestOptions = Nothing) As Task(Of TicketEntity)
  overload: SuperOffice.WebApi.Agents.TicketAgent.CreateDefaultTicketEntityAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.CreateDefaultTicketEntityAsync(SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.TicketAgent.SaveTicketEntityAsync(SuperOffice.WebApi.Data.TicketEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.SaveTicketEntityAsync(SuperOffice.WebApi.Data.TicketEntity,SuperOffice.WebApi.RequestOptions)
  id: SaveTicketEntityAsync(SuperOffice.WebApi.Data.TicketEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: SaveTicketEntityAsync(TicketEntity, RequestOptions)
  nameWithType: TicketAgent.SaveTicketEntityAsync(TicketEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.SaveTicketEntityAsync(SuperOffice.WebApi.Data.TicketEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdates the existing TicketEntity or creates a new TicketEntity if the id parameter is 0. Does not notify users of save.\n"
  syntax:
    content: public Task<TicketEntity> SaveTicketEntityAsync(TicketEntity ticketEntity, RequestOptions requestOptions = null)
    parameters:
    - id: ticketEntity
      type: SuperOffice.WebApi.Data.TicketEntity
      description: The TicketEntity that is saved.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketEntity}
      description: New or updated TicketEntity
    content.vb: Public Function SaveTicketEntityAsync(ticketEntity As TicketEntity, requestOptions As RequestOptions = Nothing) As Task(Of TicketEntity)
  overload: SuperOffice.WebApi.Agents.TicketAgent.SaveTicketEntityAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.SaveTicketEntityAsync(SuperOffice.WebApi.Data.TicketEntity,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.TicketAgent.CreateDefaultTicketMessageEntityAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.CreateDefaultTicketMessageEntityAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultTicketMessageEntityAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultTicketMessageEntityAsync(RequestOptions)
  nameWithType: TicketAgent.CreateDefaultTicketMessageEntityAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.CreateDefaultTicketMessageEntityAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet default values into a new TicketMessageEntity.\nNetServer calculates default values on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: public Task<TicketMessageEntity> CreateDefaultTicketMessageEntityAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketMessageEntity}
      description: A blank TicketMessageEntity
    content.vb: Public Function CreateDefaultTicketMessageEntityAsync(requestOptions As RequestOptions = Nothing) As Task(Of TicketMessageEntity)
  overload: SuperOffice.WebApi.Agents.TicketAgent.CreateDefaultTicketMessageEntityAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.CreateDefaultTicketMessageEntityAsync(SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.TicketAgent.SaveTicketMessageEntityAsync(SuperOffice.WebApi.Data.TicketMessageEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.SaveTicketMessageEntityAsync(SuperOffice.WebApi.Data.TicketMessageEntity,SuperOffice.WebApi.RequestOptions)
  id: SaveTicketMessageEntityAsync(SuperOffice.WebApi.Data.TicketMessageEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: SaveTicketMessageEntityAsync(TicketMessageEntity, RequestOptions)
  nameWithType: TicketAgent.SaveTicketMessageEntityAsync(TicketMessageEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.SaveTicketMessageEntityAsync(SuperOffice.WebApi.Data.TicketMessageEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdates the existing TicketMessageEntity or creates a new TicketMessageEntity if the id parameter is 0. Does not notify users of save.\n"
  syntax:
    content: public Task<TicketMessageEntity> SaveTicketMessageEntityAsync(TicketMessageEntity ticketMessageEntity, RequestOptions requestOptions = null)
    parameters:
    - id: ticketMessageEntity
      type: SuperOffice.WebApi.Data.TicketMessageEntity
      description: The TicketMessageEntity that is saved.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketMessageEntity}
      description: New or updated TicketMessageEntity
    content.vb: Public Function SaveTicketMessageEntityAsync(ticketMessageEntity As TicketMessageEntity, requestOptions As RequestOptions = Nothing) As Task(Of TicketMessageEntity)
  overload: SuperOffice.WebApi.Agents.TicketAgent.SaveTicketMessageEntityAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.SaveTicketMessageEntityAsync(SuperOffice.WebApi.Data.TicketMessageEntity,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.TicketAgent.GetAttachmentEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.GetAttachmentEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetAttachmentEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: GetAttachmentEntityAsync(Int32, RequestOptions)
  nameWithType: TicketAgent.GetAttachmentEntityAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.GetAttachmentEntityAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific AttachmentEntity object.                        \n"
  syntax:
    content: public Task<AttachmentEntity> GetAttachmentEntityAsync(int attachmentEntityId, RequestOptions requestOptions = null)
    parameters:
    - id: attachmentEntityId
      type: System.Int32
      description: The identifier of the AttachmentEntity object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AttachmentEntity}
      description: AttachmentEntity
    content.vb: Public Function GetAttachmentEntityAsync(attachmentEntityId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of AttachmentEntity)
  overload: SuperOffice.WebApi.Agents.TicketAgent.GetAttachmentEntityAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.GetAttachmentEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.TicketAgent.CopyFromCRMDocumentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.CopyFromCRMDocumentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: CopyFromCRMDocumentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: CopyFromCRMDocumentAsync(Int32, RequestOptions)
  nameWithType: TicketAgent.CopyFromCRMDocumentAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.CopyFromCRMDocumentAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCopy CRM document to an attachment\n"
  syntax:
    content: public Task<AttachmentEntity> CopyFromCRMDocumentAsync(int documentId, RequestOptions requestOptions = null)
    parameters:
    - id: documentId
      type: System.Int32
      description: The id of the document to copy to an attachment
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AttachmentEntity}
    content.vb: Public Function CopyFromCRMDocumentAsync(documentId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of AttachmentEntity)
  overload: SuperOffice.WebApi.Agents.TicketAgent.CopyFromCRMDocumentAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.CopyFromCRMDocumentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.TicketAgent.CopyToTempFileAsync(System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.CopyToTempFileAsync(System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: CopyToTempFileAsync(System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: CopyToTempFileAsync(String, Int32, RequestOptions)
  nameWithType: TicketAgent.CopyToTempFileAsync(String, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.CopyToTempFileAsync(System.String, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCopy ticket attachment to temporary file. Needed for existing document dialog compatibility\n"
  syntax:
    content: public Task<string> CopyToTempFileAsync(string filename, int attachmentId, RequestOptions requestOptions = null)
    parameters:
    - id: filename
      type: System.String
      description: Preferred filename
    - id: attachmentId
      type: System.Int32
      description: The id of the attachment to copy
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Temporary document filename
    content.vb: Public Function CopyToTempFileAsync(filename As String, attachmentId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of String)
  overload: SuperOffice.WebApi.Agents.TicketAgent.CopyToTempFileAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.CopyToTempFileAsync(System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.TicketAgent.UploadAttachmentAsync(System.Int32,System.Byte[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.UploadAttachmentAsync(System.Int32,System.Byte[],SuperOffice.WebApi.RequestOptions)
  id: UploadAttachmentAsync(System.Int32,System.Byte[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: UploadAttachmentAsync(Int32, Byte[], RequestOptions)
  nameWithType: TicketAgent.UploadAttachmentAsync(Int32, Byte[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.UploadAttachmentAsync(System.Int32, System.Byte[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpload the content for an attachment\n"
  syntax:
    content: public Task UploadAttachmentAsync(int attachmentId, byte[] content, RequestOptions requestOptions = null)
    parameters:
    - id: attachmentId
      type: System.Int32
      description: The id of the attachment row, for which to attach the upload data
    - id: content
      type: System.Byte[]
      description: A stream to the content to be uploaded
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Public Function UploadAttachmentAsync(attachmentId As Integer, content As Byte(), requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.TicketAgent.UploadAttachmentAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.UploadAttachmentAsync(System.Int32,System.Byte[],SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: TicketAgent.UploadAttachmentAsync(Int32, Byte(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.TicketAgent.UploadAttachmentAsync(System.Int32, System.Byte(), SuperOffice.WebApi.RequestOptions)
  name.vb: UploadAttachmentAsync(Int32, Byte(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.TicketAgent.GetAttachmentStreamAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.GetAttachmentStreamAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetAttachmentStreamAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: GetAttachmentStreamAsync(Int32, String, RequestOptions)
  nameWithType: TicketAgent.GetAttachmentStreamAsync(Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.GetAttachmentStreamAsync(System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet the content of an attachment\n"
  syntax:
    content: public Task<byte[]> GetAttachmentStreamAsync(int attachmentId, string returnContentType = "application/octet-stream", RequestOptions requestOptions = null)
    parameters:
    - id: attachmentId
      type: System.Int32
      description: The id of the attachment to retrieve
    - id: returnContentType
      type: System.String
      description: Accept content-type. Default &quot;application/octet-stream&quot;. Could also be &quot;application/pdf&quot;, &quot;text/plain&quot;, &quot;text/html&quot;, or &quot;multipart/related&quot;
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Byte[]}
      description: A stream to the attachment content
    content.vb: Public Function GetAttachmentStreamAsync(attachmentId As Integer, returnContentType As String = "application/octet-stream", requestOptions As RequestOptions = Nothing) As Task(Of Byte())
  overload: SuperOffice.WebApi.Agents.TicketAgent.GetAttachmentStreamAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.GetAttachmentStreamAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.TicketAgent.GetTicketAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.GetTicketAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetTicketAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: GetTicketAsync(Int32, RequestOptions)
  nameWithType: TicketAgent.GetTicketAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.GetTicketAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific Ticket object.                        \n"
  syntax:
    content: public Task<Ticket> GetTicketAsync(int ticketId, RequestOptions requestOptions = null)
    parameters:
    - id: ticketId
      type: System.Int32
      description: The identifier of the Ticket object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Ticket}
      description: Ticket
    content.vb: Public Function GetTicketAsync(ticketId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Ticket)
  overload: SuperOffice.WebApi.Agents.TicketAgent.GetTicketAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.GetTicketAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.TicketAgent.GetTicketsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.GetTicketsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetTicketsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: GetTicketsAsync(Int32[], RequestOptions)
  nameWithType: TicketAgent.GetTicketsAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.GetTicketsAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet multiple tickets\n"
  syntax:
    content: public Task<Ticket[]> GetTicketsAsync(int[] ticketIds, RequestOptions requestOptions = null)
    parameters:
    - id: ticketIds
      type: System.Int32[]
      description: The ids of tickets to get
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Ticket[]}
      description: Returns array of tickets in same order as input ids
    content.vb: Public Function GetTicketsAsync(ticketIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of Ticket())
  overload: SuperOffice.WebApi.Agents.TicketAgent.GetTicketsAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.GetTicketsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: TicketAgent.GetTicketsAsync(Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.TicketAgent.GetTicketsAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetTicketsAsync(Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.TicketAgent.GetTicketEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.GetTicketEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetTicketEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: GetTicketEntityAsync(Int32, RequestOptions)
  nameWithType: TicketAgent.GetTicketEntityAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.GetTicketEntityAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific TicketEntity object.                        \n"
  syntax:
    content: public Task<TicketEntity> GetTicketEntityAsync(int ticketEntityId, RequestOptions requestOptions = null)
    parameters:
    - id: ticketEntityId
      type: System.Int32
      description: The identifier of the TicketEntity object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketEntity}
      description: TicketEntity
    content.vb: Public Function GetTicketEntityAsync(ticketEntityId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of TicketEntity)
  overload: SuperOffice.WebApi.Agents.TicketAgent.GetTicketEntityAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.GetTicketEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.TicketAgent.GetForRmUiAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.GetForRmUiAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetForRmUiAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: GetForRmUiAsync(Int32, RequestOptions)
  nameWithType: TicketAgent.GetForRmUiAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.GetForRmUiAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet a ticket entity, adapted to the specific needs of the Request Management UI. WARNING: This endpoint is not guaranteed to be stable/compatible between versions\n"
  syntax:
    content: public Task<TicketEntity> GetForRmUiAsync(int ticketId, RequestOptions requestOptions = null)
    parameters:
    - id: ticketId
      type: System.Int32
      description: Primary key of ticket to fetch
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketEntity}
      description: The ticket entity. Information is filtered/adapted to the current needs of the UI
    content.vb: Public Function GetForRmUiAsync(ticketId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of TicketEntity)
  overload: SuperOffice.WebApi.Agents.TicketAgent.GetForRmUiAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.GetForRmUiAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.TicketAgent.DeleteTicketEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.DeleteTicketEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: DeleteTicketEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: DeleteTicketEntityAsync(Int32, RequestOptions)
  nameWithType: TicketAgent.DeleteTicketEntityAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.DeleteTicketEntityAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nDelete a ticket\n"
  syntax:
    content: public Task DeleteTicketEntityAsync(int ticketEntityId, RequestOptions requestOptions = null)
    parameters:
    - id: ticketEntityId
      type: System.Int32
      description: The ticket to delete
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Public Function DeleteTicketEntityAsync(ticketEntityId As Integer, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.TicketAgent.DeleteTicketEntityAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.DeleteTicketEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.TicketAgent.NotifyNewTicketAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.NotifyNewTicketAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: NotifyNewTicketAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: NotifyNewTicketAsync(Int32, RequestOptions)
  nameWithType: TicketAgent.NotifyNewTicketAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.NotifyNewTicketAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nNotify user agents about the creation of a new ticket\n"
  syntax:
    content: public Task NotifyNewTicketAsync(int ticketEntityId, RequestOptions requestOptions = null)
    parameters:
    - id: ticketEntityId
      type: System.Int32
      description: The id of the ticket to notify about
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Public Function NotifyNewTicketAsync(ticketEntityId As Integer, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.TicketAgent.NotifyNewTicketAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.NotifyNewTicketAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.TicketAgent.NotifyNewTicketMessageAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.NotifyNewTicketMessageAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: NotifyNewTicketMessageAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: NotifyNewTicketMessageAsync(Int32, RequestOptions)
  nameWithType: TicketAgent.NotifyNewTicketMessageAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.NotifyNewTicketMessageAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nNotify user agents about the creation of a new message on a ticket\n"
  syntax:
    content: public Task NotifyNewTicketMessageAsync(int ticketEntityId, RequestOptions requestOptions = null)
    parameters:
    - id: ticketEntityId
      type: System.Int32
      description: The id of the ticket to notify about
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Public Function NotifyNewTicketMessageAsync(ticketEntityId As Integer, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.TicketAgent.NotifyNewTicketMessageAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.NotifyNewTicketMessageAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.TicketAgent.GetTicketAttachmentsAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.GetTicketAttachmentsAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetTicketAttachmentsAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: GetTicketAttachmentsAsync(Int32, RequestOptions)
  nameWithType: TicketAgent.GetTicketAttachmentsAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.GetTicketAttachmentsAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet attachment infos for all attachments connected to messages in specified ticket\n"
  syntax:
    content: public Task<AttachmentEntity[]> GetTicketAttachmentsAsync(int ticketEntityId, RequestOptions requestOptions = null)
    parameters:
    - id: ticketEntityId
      type: System.Int32
      description: The id of the ticket to get attachment infos from
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AttachmentEntity[]}
      description: An array containing attachment info objects for all the attachments
    content.vb: Public Function GetTicketAttachmentsAsync(ticketEntityId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of AttachmentEntity())
  overload: SuperOffice.WebApi.Agents.TicketAgent.GetTicketAttachmentsAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.GetTicketAttachmentsAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.TicketAgent.ValidateAttachmentsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.ValidateAttachmentsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: ValidateAttachmentsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: ValidateAttachmentsAsync(Int32[], RequestOptions)
  nameWithType: TicketAgent.ValidateAttachmentsAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.ValidateAttachmentsAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCheck attachments, return validation result for each item\n"
  syntax:
    content: public Task<AttachmentValidationResult[]> ValidateAttachmentsAsync(int[] attachmentIds, RequestOptions requestOptions = null)
    parameters:
    - id: attachmentIds
      type: System.Int32[]
      description: The IDs of the attachments to validate
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AttachmentValidationResult[]}
      description: Validation result
    content.vb: Public Function ValidateAttachmentsAsync(attachmentIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of AttachmentValidationResult())
  overload: SuperOffice.WebApi.Agents.TicketAgent.ValidateAttachmentsAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.ValidateAttachmentsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: TicketAgent.ValidateAttachmentsAsync(Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.TicketAgent.ValidateAttachmentsAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: ValidateAttachmentsAsync(Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.TicketAgent.SetTicketReadByOwnerAsync(System.Int32,SuperOffice.WebApi.Data.TicketReadStatus,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.SetTicketReadByOwnerAsync(System.Int32,SuperOffice.WebApi.Data.TicketReadStatus,System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: SetTicketReadByOwnerAsync(System.Int32,SuperOffice.WebApi.Data.TicketReadStatus,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: SetTicketReadByOwnerAsync(Int32, TicketReadStatus, Boolean, RequestOptions)
  nameWithType: TicketAgent.SetTicketReadByOwnerAsync(Int32, TicketReadStatus, Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.SetTicketReadByOwnerAsync(System.Int32, SuperOffice.WebApi.Data.TicketReadStatus, System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet the ReadByOwner status for a ticket. It will only have an effect if the calling user is the same as the owner of the ticket\n"
  syntax:
    content: public Task<TicketEntity> SetTicketReadByOwnerAsync(int ticketEntityId, TicketReadStatus readStatus, bool checkEscalating, RequestOptions requestOptions = null)
    parameters:
    - id: ticketEntityId
      type: System.Int32
      description: The id of the ticket to set
    - id: readStatus
      type: SuperOffice.WebApi.Data.TicketReadStatus
      description: The read status to set. See the enum for explanation of the different colors. Setting Unknown does nothing
    - id: checkEscalating
      type: System.Boolean
      description: If true, then the escalation system will be called and executed when setting the ReadByOwner
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketEntity}
      description: The ticket entity after setting the ReadByOwner
    content.vb: Public Function SetTicketReadByOwnerAsync(ticketEntityId As Integer, readStatus As TicketReadStatus, checkEscalating As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of TicketEntity)
  overload: SuperOffice.WebApi.Agents.TicketAgent.SetTicketReadByOwnerAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.SetTicketReadByOwnerAsync(System.Int32,SuperOffice.WebApi.Data.TicketReadStatus,System.Boolean,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.TicketAgent.SaveTicketEntityWithNotifyAsync(SuperOffice.WebApi.Data.TicketEntity,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.SaveTicketEntityWithNotifyAsync(SuperOffice.WebApi.Data.TicketEntity,System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: SaveTicketEntityWithNotifyAsync(SuperOffice.WebApi.Data.TicketEntity,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: SaveTicketEntityWithNotifyAsync(TicketEntity, Boolean, RequestOptions)
  nameWithType: TicketAgent.SaveTicketEntityWithNotifyAsync(TicketEntity, Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.SaveTicketEntityWithNotifyAsync(SuperOffice.WebApi.Data.TicketEntity, System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSaves a ticket and performs any user notifications\n"
  syntax:
    content: public Task<TicketEntity> SaveTicketEntityWithNotifyAsync(TicketEntity newEntity, bool notify, RequestOptions requestOptions = null)
    parameters:
    - id: newEntity
      type: SuperOffice.WebApi.Data.TicketEntity
      description: The ticket to save
    - id: notify
      type: System.Boolean
      description: If true, then the notifications will be sent
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketEntity}
      description: The newly saved entity
    content.vb: Public Function SaveTicketEntityWithNotifyAsync(newEntity As TicketEntity, notify As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of TicketEntity)
  overload: SuperOffice.WebApi.Agents.TicketAgent.SaveTicketEntityWithNotifyAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.SaveTicketEntityWithNotifyAsync(SuperOffice.WebApi.Data.TicketEntity,System.Boolean,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.TicketAgent.GetNextInQueueAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.GetNextInQueueAsync(SuperOffice.WebApi.RequestOptions)
  id: GetNextInQueueAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: GetNextInQueueAsync(RequestOptions)
  nameWithType: TicketAgent.GetNextInQueueAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.GetNextInQueueAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nAssign a ticket to the caller based on intelligent queue system\n"
  syntax:
    content: public Task<TicketEntity> GetNextInQueueAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketEntity}
      description: The ticket entity after assigning it to the caller
    content.vb: Public Function GetNextInQueueAsync(requestOptions As RequestOptions = Nothing) As Task(Of TicketEntity)
  overload: SuperOffice.WebApi.Agents.TicketAgent.GetNextInQueueAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.GetNextInQueueAsync(SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.TicketAgent.ProcessTicketWhenReadAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.ProcessTicketWhenReadAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: ProcessTicketWhenReadAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: ProcessTicketWhenReadAsync(Int32, RequestOptions)
  nameWithType: TicketAgent.ProcessTicketWhenReadAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.ProcessTicketWhenReadAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nWhen a user view/read a ticket, a number of action should be performed: set read status, escalation handling, remove notifications, etc. Which actions will be performed depends on owner, caller and configuration\n"
  syntax:
    content: public Task<TicketEntity> ProcessTicketWhenReadAsync(int ticketEntityId, RequestOptions requestOptions = null)
    parameters:
    - id: ticketEntityId
      type: System.Int32
      description: The id of the ticket to mark as read
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketEntity}
      description: The ticket entity after marking it as read
    content.vb: Public Function ProcessTicketWhenReadAsync(ticketEntityId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of TicketEntity)
  overload: SuperOffice.WebApi.Agents.TicketAgent.ProcessTicketWhenReadAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.ProcessTicketWhenReadAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.TicketAgent.SplitTicketAsync(System.Int32,System.Int32,System.DateTime,System.Int32[],SuperOffice.WebApi.Data.TicketEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.SplitTicketAsync(System.Int32,System.Int32,System.DateTime,System.Int32[],SuperOffice.WebApi.Data.TicketEntity,SuperOffice.WebApi.RequestOptions)
  id: SplitTicketAsync(System.Int32,System.Int32,System.DateTime,System.Int32[],SuperOffice.WebApi.Data.TicketEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: SplitTicketAsync(Int32, Int32, DateTime, Int32[], TicketEntity, RequestOptions)
  nameWithType: TicketAgent.SplitTicketAsync(Int32, Int32, DateTime, Int32[], TicketEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.SplitTicketAsync(System.Int32, System.Int32, System.DateTime, System.Int32[], SuperOffice.WebApi.Data.TicketEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSave new ticket and move/copy data from existing ticket in a single request. Specified messages will be moved.\n"
  syntax:
    content: public Task<TicketEntity> SplitTicketAsync(int sourceTicketEntityId, int sourceTicketEntityStatusId, DateTime sourceTicketEntityActivate, int[] transferMessageIds, TicketEntity newTicketEntity, RequestOptions requestOptions = null)
    parameters:
    - id: sourceTicketEntityId
      type: System.Int32
      description: The id of the ticket to split
    - id: sourceTicketEntityStatusId
      type: System.Int32
      description: The id of the source ticket&apos;s status
    - id: sourceTicketEntityActivate
      type: System.DateTime
      description: The activate date of the source ticket
    - id: transferMessageIds
      type: System.Int32[]
      description: IDs of messages that should be transferred from the original ticket to the new one
    - id: newTicketEntity
      type: SuperOffice.WebApi.Data.TicketEntity
      description: The new ticket to save. Includes new values for simple properties like title, category, status, etc., but not messages.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketEntity}
      description: The newly created entity
    content.vb: Public Function SplitTicketAsync(sourceTicketEntityId As Integer, sourceTicketEntityStatusId As Integer, sourceTicketEntityActivate As DateTime, transferMessageIds As Integer(), newTicketEntity As TicketEntity, requestOptions As RequestOptions = Nothing) As Task(Of TicketEntity)
  overload: SuperOffice.WebApi.Agents.TicketAgent.SplitTicketAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.SplitTicketAsync(System.Int32,System.Int32,System.DateTime,System.Int32[],SuperOffice.WebApi.Data.TicketEntity,SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: TicketAgent.SplitTicketAsync(Int32, Int32, DateTime, Int32(), TicketEntity, RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.TicketAgent.SplitTicketAsync(System.Int32, System.Int32, System.DateTime, System.Int32(), SuperOffice.WebApi.Data.TicketEntity, SuperOffice.WebApi.RequestOptions)
  name.vb: SplitTicketAsync(Int32, Int32, DateTime, Int32(), TicketEntity, RequestOptions)
- uid: SuperOffice.WebApi.Agents.TicketAgent.SplitTicketMessageAsync(SuperOffice.WebApi.Data.TicketMessageEntity,SuperOffice.WebApi.Data.TicketEntity,SuperOffice.WebApi.Data.TicketMessageEntity,System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.SplitTicketMessageAsync(SuperOffice.WebApi.Data.TicketMessageEntity,SuperOffice.WebApi.Data.TicketEntity,SuperOffice.WebApi.Data.TicketMessageEntity,System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: SplitTicketMessageAsync(SuperOffice.WebApi.Data.TicketMessageEntity,SuperOffice.WebApi.Data.TicketEntity,SuperOffice.WebApi.Data.TicketMessageEntity,System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: SplitTicketMessageAsync(TicketMessageEntity, TicketEntity, TicketMessageEntity, Int32[], RequestOptions)
  nameWithType: TicketAgent.SplitTicketMessageAsync(TicketMessageEntity, TicketEntity, TicketMessageEntity, Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.SplitTicketMessageAsync(SuperOffice.WebApi.Data.TicketMessageEntity, SuperOffice.WebApi.Data.TicketEntity, SuperOffice.WebApi.Data.TicketMessageEntity, System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCreate new ticket and move/copy data from existing ticket in addition update old message and save new message in a single request.\n"
  syntax:
    content: public Task<TicketEntity> SplitTicketMessageAsync(TicketMessageEntity sourceTicketMessage, TicketEntity newTicketEntity, TicketMessageEntity newTicketMessage, int[] transferAttachmentsIds, RequestOptions requestOptions = null)
    parameters:
    - id: sourceTicketMessage
      type: SuperOffice.WebApi.Data.TicketMessageEntity
      description: The message being splitted, content can be modified as part of the split.
    - id: newTicketEntity
      type: SuperOffice.WebApi.Data.TicketEntity
      description: The new ticket to save. Includes new values for simple properties like title, category, status, etc., but not messages.
    - id: newTicketMessage
      type: SuperOffice.WebApi.Data.TicketMessageEntity
      description: The new message to be saved
    - id: transferAttachmentsIds
      type: System.Int32[]
      description: IDs of attachments that should be transferred from the original message to the new one
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketEntity}
      description: The newly created entity
    content.vb: Public Function SplitTicketMessageAsync(sourceTicketMessage As TicketMessageEntity, newTicketEntity As TicketEntity, newTicketMessage As TicketMessageEntity, transferAttachmentsIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of TicketEntity)
  overload: SuperOffice.WebApi.Agents.TicketAgent.SplitTicketMessageAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.SplitTicketMessageAsync(SuperOffice.WebApi.Data.TicketMessageEntity,SuperOffice.WebApi.Data.TicketEntity,SuperOffice.WebApi.Data.TicketMessageEntity,System.Int32[],SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: TicketAgent.SplitTicketMessageAsync(TicketMessageEntity, TicketEntity, TicketMessageEntity, Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.TicketAgent.SplitTicketMessageAsync(SuperOffice.WebApi.Data.TicketMessageEntity, SuperOffice.WebApi.Data.TicketEntity, SuperOffice.WebApi.Data.TicketMessageEntity, System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: SplitTicketMessageAsync(TicketMessageEntity, TicketEntity, TicketMessageEntity, Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.TicketAgent.UpdateTicketsReadStatusAsync(System.Int32[],SuperOffice.WebApi.Data.TicketReadStatus,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.UpdateTicketsReadStatusAsync(System.Int32[],SuperOffice.WebApi.Data.TicketReadStatus,SuperOffice.WebApi.RequestOptions)
  id: UpdateTicketsReadStatusAsync(System.Int32[],SuperOffice.WebApi.Data.TicketReadStatus,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: UpdateTicketsReadStatusAsync(Int32[], TicketReadStatus, RequestOptions)
  nameWithType: TicketAgent.UpdateTicketsReadStatusAsync(Int32[], TicketReadStatus, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.UpdateTicketsReadStatusAsync(System.Int32[], SuperOffice.WebApi.Data.TicketReadStatus, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nThis method changes multiple tickets&apos; read status\n"
  syntax:
    content: public Task<int[]> UpdateTicketsReadStatusAsync(int[] ticketIds, TicketReadStatus newStatus, RequestOptions requestOptions = null)
    parameters:
    - id: ticketIds
      type: System.Int32[]
      description: Ticket ids to be updated
    - id: newStatus
      type: SuperOffice.WebApi.Data.TicketReadStatus
      description: New read status
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Int32[]}
      description: Updated ticket ids
    content.vb: Public Function UpdateTicketsReadStatusAsync(ticketIds As Integer(), newStatus As TicketReadStatus, requestOptions As RequestOptions = Nothing) As Task(Of Integer())
  overload: SuperOffice.WebApi.Agents.TicketAgent.UpdateTicketsReadStatusAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.UpdateTicketsReadStatusAsync(System.Int32[],SuperOffice.WebApi.Data.TicketReadStatus,SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: TicketAgent.UpdateTicketsReadStatusAsync(Int32(), TicketReadStatus, RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.TicketAgent.UpdateTicketsReadStatusAsync(System.Int32(), SuperOffice.WebApi.Data.TicketReadStatus, SuperOffice.WebApi.RequestOptions)
  name.vb: UpdateTicketsReadStatusAsync(Int32(), TicketReadStatus, RequestOptions)
- uid: SuperOffice.WebApi.Agents.TicketAgent.UpdateTicketsReadStatusByProviderAsync(System.String,SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],SuperOffice.WebApi.Data.TicketReadStatus,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.UpdateTicketsReadStatusByProviderAsync(System.String,SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],SuperOffice.WebApi.Data.TicketReadStatus,SuperOffice.WebApi.RequestOptions)
  id: UpdateTicketsReadStatusByProviderAsync(System.String,SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],SuperOffice.WebApi.Data.TicketReadStatus,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: UpdateTicketsReadStatusByProviderAsync(String, ArchiveRestrictionInfo[], TicketReadStatus, RequestOptions)
  nameWithType: TicketAgent.UpdateTicketsReadStatusByProviderAsync(String, ArchiveRestrictionInfo[], TicketReadStatus, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.UpdateTicketsReadStatusByProviderAsync(System.String, SuperOffice.WebApi.Data.ArchiveRestrictionInfo[], SuperOffice.WebApi.Data.TicketReadStatus, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nThis method changes multiple tickets&apos; read status\n"
  syntax:
    content: public Task<int[]> UpdateTicketsReadStatusByProviderAsync(string provider, ArchiveRestrictionInfo[] restrictions, TicketReadStatus newStatus, RequestOptions requestOptions = null)
    parameters:
    - id: provider
      type: System.String
      description: Name of the provider that returns ticket rows.
    - id: restrictions
      type: SuperOffice.WebApi.Data.ArchiveRestrictionInfo[]
      description: Query restrictions to be added to provider. Fixed providers, such as LastTicketsProvider, FavouriteTicketsProvider etc. already have mandatory restrictions setup - in such case extra restrictions will be combined, however for general use case for fixed providers you can pass an empty array and provider will return default results. For selection providers generally you should pass selectionId as a restriction.
    - id: newStatus
      type: SuperOffice.WebApi.Data.TicketReadStatus
      description: New read status
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Int32[]}
      description: Updated ticket ids
    content.vb: Public Function UpdateTicketsReadStatusByProviderAsync(provider As String, restrictions As ArchiveRestrictionInfo(), newStatus As TicketReadStatus, requestOptions As RequestOptions = Nothing) As Task(Of Integer())
  overload: SuperOffice.WebApi.Agents.TicketAgent.UpdateTicketsReadStatusByProviderAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.UpdateTicketsReadStatusByProviderAsync(System.String,SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],SuperOffice.WebApi.Data.TicketReadStatus,SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: TicketAgent.UpdateTicketsReadStatusByProviderAsync(String, ArchiveRestrictionInfo(), TicketReadStatus, RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.TicketAgent.UpdateTicketsReadStatusByProviderAsync(System.String, SuperOffice.WebApi.Data.ArchiveRestrictionInfo(), SuperOffice.WebApi.Data.TicketReadStatus, SuperOffice.WebApi.RequestOptions)
  name.vb: UpdateTicketsReadStatusByProviderAsync(String, ArchiveRestrictionInfo(), TicketReadStatus, RequestOptions)
- uid: SuperOffice.WebApi.Agents.TicketAgent.MergeTicketsAsync(SuperOffice.WebApi.Data.TicketEntity,System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.MergeTicketsAsync(SuperOffice.WebApi.Data.TicketEntity,System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: MergeTicketsAsync(SuperOffice.WebApi.Data.TicketEntity,System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: MergeTicketsAsync(TicketEntity, Int32[], RequestOptions)
  nameWithType: TicketAgent.MergeTicketsAsync(TicketEntity, Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.MergeTicketsAsync(SuperOffice.WebApi.Data.TicketEntity, System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMerge one or more tickets into one primary ticket\n"
  syntax:
    content: public Task<TicketEntity> MergeTicketsAsync(TicketEntity mergedTicketEntity, int[] secondaryTicketIds, RequestOptions requestOptions = null)
    parameters:
    - id: mergedTicketEntity
      type: SuperOffice.WebApi.Data.TicketEntity
      description: Merged ticket entity
    - id: secondaryTicketIds
      type: System.Int32[]
      description: Ids of secondary tickets
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketEntity}
      description: The newly merged entity
    content.vb: Public Function MergeTicketsAsync(mergedTicketEntity As TicketEntity, secondaryTicketIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of TicketEntity)
  overload: SuperOffice.WebApi.Agents.TicketAgent.MergeTicketsAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.MergeTicketsAsync(SuperOffice.WebApi.Data.TicketEntity,System.Int32[],SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: TicketAgent.MergeTicketsAsync(TicketEntity, Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.TicketAgent.MergeTicketsAsync(SuperOffice.WebApi.Data.TicketEntity, System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: MergeTicketsAsync(TicketEntity, Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.TicketAgent.SetDeletedStatusByIdsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.SetDeletedStatusByIdsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: SetDeletedStatusByIdsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: SetDeletedStatusByIdsAsync(Int32[], RequestOptions)
  nameWithType: TicketAgent.SetDeletedStatusByIdsAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.SetDeletedStatusByIdsAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSets tickets&apos; status to Deleted. After a grace period these tickets will be deleted by a background job.\n"
  syntax:
    content: public Task<int[]> SetDeletedStatusByIdsAsync(int[] ticketIds, RequestOptions requestOptions = null)
    parameters:
    - id: ticketIds
      type: System.Int32[]
      description: Ids of tickets to be set for deletion.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Int32[]}
      description: Ids of tickets set for deletion.
    content.vb: Public Function SetDeletedStatusByIdsAsync(ticketIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of Integer())
  overload: SuperOffice.WebApi.Agents.TicketAgent.SetDeletedStatusByIdsAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.SetDeletedStatusByIdsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: TicketAgent.SetDeletedStatusByIdsAsync(Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.TicketAgent.SetDeletedStatusByIdsAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: SetDeletedStatusByIdsAsync(Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.TicketAgent.SetDeletedStatusByProviderAsync(System.String,SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.SetDeletedStatusByProviderAsync(System.String,SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],SuperOffice.WebApi.RequestOptions)
  id: SetDeletedStatusByProviderAsync(System.String,SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: SetDeletedStatusByProviderAsync(String, ArchiveRestrictionInfo[], RequestOptions)
  nameWithType: TicketAgent.SetDeletedStatusByProviderAsync(String, ArchiveRestrictionInfo[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.SetDeletedStatusByProviderAsync(System.String, SuperOffice.WebApi.Data.ArchiveRestrictionInfo[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSets tickets&apos; status to Deleted. After a grace period these tickets will be deleted by a background job.\n"
  syntax:
    content: public Task<int[]> SetDeletedStatusByProviderAsync(string providerName, ArchiveRestrictionInfo[] restrictions, RequestOptions requestOptions = null)
    parameters:
    - id: providerName
      type: System.String
      description: Name of the provider that returns ticket rows.
    - id: restrictions
      type: SuperOffice.WebApi.Data.ArchiveRestrictionInfo[]
      description: Query restrictions to be added to provider. Fixed providers, such as LastTicketsProvider, FavouriteTicketsProvider etc. already have mandatory restrictions setup - in such case extra restrictions will be combined, however for general use case for fixed providers you can pass an empty array and provider will return default results. For selection providers generally you should pass selectionId as a restriction.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Int32[]}
      description: Ids of tickets set for deletion.
    content.vb: Public Function SetDeletedStatusByProviderAsync(providerName As String, restrictions As ArchiveRestrictionInfo(), requestOptions As RequestOptions = Nothing) As Task(Of Integer())
  overload: SuperOffice.WebApi.Agents.TicketAgent.SetDeletedStatusByProviderAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.SetDeletedStatusByProviderAsync(System.String,SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: TicketAgent.SetDeletedStatusByProviderAsync(String, ArchiveRestrictionInfo(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.TicketAgent.SetDeletedStatusByProviderAsync(System.String, SuperOffice.WebApi.Data.ArchiveRestrictionInfo(), SuperOffice.WebApi.RequestOptions)
  name.vb: SetDeletedStatusByProviderAsync(String, ArchiveRestrictionInfo(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.TicketAgent.UndeleteByIdsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.UndeleteByIdsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: UndeleteByIdsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: UndeleteByIdsAsync(Int32[], RequestOptions)
  nameWithType: TicketAgent.UndeleteByIdsAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.UndeleteByIdsAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nRestores deleted tickets by their ids. Status is set to a default open status defined in Registry table\n"
  syntax:
    content: public Task UndeleteByIdsAsync(int[] ticketIds, RequestOptions requestOptions = null)
    parameters:
    - id: ticketIds
      type: System.Int32[]
      description: Ids of tickets to be restored.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Public Function UndeleteByIdsAsync(ticketIds As Integer(), requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.TicketAgent.UndeleteByIdsAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.UndeleteByIdsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: TicketAgent.UndeleteByIdsAsync(Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.TicketAgent.UndeleteByIdsAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: UndeleteByIdsAsync(Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.TicketAgent.ResolveTicketIdAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.ResolveTicketIdAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: ResolveTicketIdAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: ResolveTicketIdAsync(Int32, RequestOptions)
  nameWithType: TicketAgent.ResolveTicketIdAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.ResolveTicketIdAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nTicket can be connected (merged) to another ticket. This method traverses through its connection(s) and returns proper ticketId\n"
  syntax:
    content: public Task<int> ResolveTicketIdAsync(int ticketId, RequestOptions requestOptions = null)
    parameters:
    - id: ticketId
      type: System.Int32
      description: Potentially correct ticketId
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: Correct ticketId. Returns 0 in case ticket does not exists
    content.vb: Public Function ResolveTicketIdAsync(ticketId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Integer)
  overload: SuperOffice.WebApi.Agents.TicketAgent.ResolveTicketIdAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.ResolveTicketIdAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.TicketAgent.BatchForwardAsync(System.Int32[],System.String[],System.String[],System.String[],System.String,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.BatchForwardAsync(System.Int32[],System.String[],System.String[],System.String[],System.String,System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: BatchForwardAsync(System.Int32[],System.String[],System.String[],System.String[],System.String,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: BatchForwardAsync(Int32[], String[], String[], String[], String, Boolean, RequestOptions)
  nameWithType: TicketAgent.BatchForwardAsync(Int32[], String[], String[], String[], String, Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.BatchForwardAsync(System.Int32[], System.String[], System.String[], System.String[], System.String, System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nForwards selected tickets to specified recipients. This method starts a batch task.\n"
  syntax:
    content: public Task<int> BatchForwardAsync(int[] ticketIds, string[] to, string[] cc, string[] bcc, string comment, bool closeTicket, RequestOptions requestOptions = null)
    parameters:
    - id: ticketIds
      type: System.Int32[]
      description: Ids of tickets to be forwarded.
    - id: to
      type: System.String[]
      description: The To-recipients. Each recipient must be in correct mailbox format (john@example.com or John Doe &lt;john@example.com>).
    - id: cc
      type: System.String[]
      description: The Cc-recipients. Each recipient must be in correct mailbox format (john@example.com or John Doe &lt;john@example.com>).
    - id: bcc
      type: System.String[]
      description: The Bcc-recipients. Each recipient must be in correct mailbox format (john@example.com or John Doe &lt;john@example.com>).
    - id: comment
      type: System.String
      description: Comment will be included before ticket messages. Might be empty
    - id: closeTicket
      type: System.Boolean
      description: If true, ticket will be closed after forwarding
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: ID of the new batch task.
    content.vb: Public Function BatchForwardAsync(ticketIds As Integer(), to As String(), cc As String(), bcc As String(), comment As String, closeTicket As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of Integer)
  overload: SuperOffice.WebApi.Agents.TicketAgent.BatchForwardAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.BatchForwardAsync(System.Int32[],System.String[],System.String[],System.String[],System.String,System.Boolean,SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: TicketAgent.BatchForwardAsync(Int32(), String(), String(), String(), String, Boolean, RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.TicketAgent.BatchForwardAsync(System.Int32(), System.String(), System.String(), System.String(), System.String, System.Boolean, SuperOffice.WebApi.RequestOptions)
  name.vb: BatchForwardAsync(Int32(), String(), String(), String(), String, Boolean, RequestOptions)
- uid: SuperOffice.WebApi.Agents.TicketAgent.BatchReplyAsync(SuperOffice.WebApi.Data.TicketBatchReplyData,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.BatchReplyAsync(SuperOffice.WebApi.Data.TicketBatchReplyData,SuperOffice.WebApi.RequestOptions)
  id: BatchReplyAsync(SuperOffice.WebApi.Data.TicketBatchReplyData,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: BatchReplyAsync(TicketBatchReplyData, RequestOptions)
  nameWithType: TicketAgent.BatchReplyAsync(TicketBatchReplyData, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.BatchReplyAsync(SuperOffice.WebApi.Data.TicketBatchReplyData, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReplies to the specified tickets. This method starts a batch task.\n"
  syntax:
    content: public Task<int> BatchReplyAsync(TicketBatchReplyData batchReplyData, RequestOptions requestOptions = null)
    parameters:
    - id: batchReplyData
      type: SuperOffice.WebApi.Data.TicketBatchReplyData
      description: All data needed to initiate a mass ticket reply sending.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: ID of the new batch task.
    content.vb: Public Function BatchReplyAsync(batchReplyData As TicketBatchReplyData, requestOptions As RequestOptions = Nothing) As Task(Of Integer)
  overload: SuperOffice.WebApi.Agents.TicketAgent.BatchReplyAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.BatchReplyAsync(SuperOffice.WebApi.Data.TicketBatchReplyData,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.TicketAgent.ClearNotifyAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.ClearNotifyAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: ClearNotifyAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: ClearNotifyAsync(Int32[], RequestOptions)
  nameWithType: TicketAgent.ClearNotifyAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.ClearNotifyAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nClear notification status for one or more tickets.\n"
  syntax:
    content: public Task ClearNotifyAsync(int[] ids, RequestOptions requestOptions = null)
    parameters:
    - id: ids
      type: System.Int32[]
      description: List of notify IDs.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Public Function ClearNotifyAsync(ids As Integer(), requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.TicketAgent.ClearNotifyAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.ClearNotifyAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: TicketAgent.ClearNotifyAsync(Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.TicketAgent.ClearNotifyAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: ClearNotifyAsync(Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.TicketAgent.GetTicketMessageEntitiesAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.GetTicketMessageEntitiesAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetTicketMessageEntitiesAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: GetTicketMessageEntitiesAsync(Int32, Int32[], RequestOptions)
  nameWithType: TicketAgent.GetTicketMessageEntitiesAsync(Int32, Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.GetTicketMessageEntitiesAsync(System.Int32, System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet ticket message entities with attachment info for given ticket\n"
  syntax:
    content: public Task<TicketMessageEntity[]> GetTicketMessageEntitiesAsync(int ticketId, int[] messageIds, RequestOptions requestOptions = null)
    parameters:
    - id: ticketId
      type: System.Int32
      description: The id of the ticket to get message entities from
    - id: messageIds
      type: System.Int32[]
      description: Optional ids of message entities to get. If not provided, all ticket message entities will be returned.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketMessageEntity[]}
      description: An array containing ticket message entities
    content.vb: Public Function GetTicketMessageEntitiesAsync(ticketId As Integer, messageIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of TicketMessageEntity())
  overload: SuperOffice.WebApi.Agents.TicketAgent.GetTicketMessageEntitiesAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.GetTicketMessageEntitiesAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: TicketAgent.GetTicketMessageEntitiesAsync(Int32, Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.TicketAgent.GetTicketMessageEntitiesAsync(System.Int32, System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetTicketMessageEntitiesAsync(Int32, Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.TicketAgent.CreateDefaultForTicketTypeAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.CreateDefaultForTicketTypeAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultForTicketTypeAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultForTicketTypeAsync(Int32, RequestOptions)
  nameWithType: TicketAgent.CreateDefaultForTicketTypeAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.CreateDefaultForTicketTypeAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCreate default ticket entity for particular TicketType\n"
  syntax:
    content: public Task<TicketEntity> CreateDefaultForTicketTypeAsync(int ticketTypeId, RequestOptions requestOptions = null)
    parameters:
    - id: ticketTypeId
      type: System.Int32
      description: ID of ticket type
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketEntity}
      description: Default ticket entity
    content.vb: Public Function CreateDefaultForTicketTypeAsync(ticketTypeId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of TicketEntity)
  overload: SuperOffice.WebApi.Agents.TicketAgent.CreateDefaultForTicketTypeAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.CreateDefaultForTicketTypeAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.TicketAgent.DoEscalatingAsync(System.Int32,SuperOffice.WebApi.Data.TicketPriorityEscalateAction,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.DoEscalatingAsync(System.Int32,SuperOffice.WebApi.Data.TicketPriorityEscalateAction,SuperOffice.WebApi.RequestOptions)
  id: DoEscalatingAsync(System.Int32,SuperOffice.WebApi.Data.TicketPriorityEscalateAction,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: DoEscalatingAsync(Int32, TicketPriorityEscalateAction, RequestOptions)
  nameWithType: TicketAgent.DoEscalatingAsync(Int32, TicketPriorityEscalateAction, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.DoEscalatingAsync(System.Int32, SuperOffice.WebApi.Data.TicketPriorityEscalateAction, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nChecks if the ticket should change its alert level based on the priority and action. If it is to change, the alert level and alert timeout for the ticket will be updated.\n"
  syntax:
    content: public Task DoEscalatingAsync(int ticketId, TicketPriorityEscalateAction action, RequestOptions requestOptions = null)
    parameters:
    - id: ticketId
      type: System.Int32
      description: The id of ticket
    - id: action
      type: SuperOffice.WebApi.Data.TicketPriorityEscalateAction
      description: The action to use when calculating the escalation
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Public Function DoEscalatingAsync(ticketId As Integer, action As TicketPriorityEscalateAction, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.TicketAgent.DoEscalatingAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.DoEscalatingAsync(System.Int32,SuperOffice.WebApi.Data.TicketPriorityEscalateAction,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.TicketAgent.GetTicketMessageAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.GetTicketMessageAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetTicketMessageAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: GetTicketMessageAsync(Int32, RequestOptions)
  nameWithType: TicketAgent.GetTicketMessageAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.GetTicketMessageAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific TicketMessage object.                        \n"
  syntax:
    content: public Task<TicketMessage> GetTicketMessageAsync(int ticketMessageId, RequestOptions requestOptions = null)
    parameters:
    - id: ticketMessageId
      type: System.Int32
      description: The identifier of the TicketMessage object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketMessage}
      description: TicketMessage
    content.vb: Public Function GetTicketMessageAsync(ticketMessageId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of TicketMessage)
  overload: SuperOffice.WebApi.Agents.TicketAgent.GetTicketMessageAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.GetTicketMessageAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.TicketAgent.GetTicketMessageEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.GetTicketMessageEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetTicketMessageEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: GetTicketMessageEntityAsync(Int32, RequestOptions)
  nameWithType: TicketAgent.GetTicketMessageEntityAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.GetTicketMessageEntityAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific TicketMessageEntity object.                        \n"
  syntax:
    content: public Task<TicketMessageEntity> GetTicketMessageEntityAsync(int ticketMessageEntityId, RequestOptions requestOptions = null)
    parameters:
    - id: ticketMessageEntityId
      type: System.Int32
      description: The identifier of the TicketMessageEntity object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketMessageEntity}
      description: TicketMessageEntity
    content.vb: Public Function GetTicketMessageEntityAsync(ticketMessageEntityId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of TicketMessageEntity)
  overload: SuperOffice.WebApi.Agents.TicketAgent.GetTicketMessageEntityAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.GetTicketMessageEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.TicketAgent.DeleteTicketMessageEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.DeleteTicketMessageEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: DeleteTicketMessageEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: DeleteTicketMessageEntityAsync(Int32, RequestOptions)
  nameWithType: TicketAgent.DeleteTicketMessageEntityAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.DeleteTicketMessageEntityAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nDelete a ticket message\n"
  syntax:
    content: public Task DeleteTicketMessageEntityAsync(int ticketMessageEntityId, RequestOptions requestOptions = null)
    parameters:
    - id: ticketMessageEntityId
      type: System.Int32
      description: The ticket message to delete
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Public Function DeleteTicketMessageEntityAsync(ticketMessageEntityId As Integer, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.TicketAgent.DeleteTicketMessageEntityAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.DeleteTicketMessageEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.TicketAgent.SanitizeMailContentAsync(System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.SanitizeMailContentAsync(System.String,SuperOffice.WebApi.RequestOptions)
  id: SanitizeMailContentAsync(System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: SanitizeMailContentAsync(String, RequestOptions)
  nameWithType: TicketAgent.SanitizeMailContentAsync(String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.SanitizeMailContentAsync(System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nRemove harmful HTML tags and attributes from an email\n"
  syntax:
    content: public Task<string> SanitizeMailContentAsync(string content, RequestOptions requestOptions = null)
    parameters:
    - id: content
      type: System.String
      description: The email content to sanitize
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The sanitized email content
    content.vb: Public Function SanitizeMailContentAsync(content As String, requestOptions As RequestOptions = Nothing) As Task(Of String)
  overload: SuperOffice.WebApi.Agents.TicketAgent.SanitizeMailContentAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.SanitizeMailContentAsync(System.String,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.TicketAgent.SanitizeMailContentWithOptionsAsync(System.String,SuperOffice.WebApi.Data.HtmlSanitizerOptions,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.SanitizeMailContentWithOptionsAsync(System.String,SuperOffice.WebApi.Data.HtmlSanitizerOptions,SuperOffice.WebApi.RequestOptions)
  id: SanitizeMailContentWithOptionsAsync(System.String,SuperOffice.WebApi.Data.HtmlSanitizerOptions,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: SanitizeMailContentWithOptionsAsync(String, HtmlSanitizerOptions, RequestOptions)
  nameWithType: TicketAgent.SanitizeMailContentWithOptionsAsync(String, HtmlSanitizerOptions, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.SanitizeMailContentWithOptionsAsync(System.String, SuperOffice.WebApi.Data.HtmlSanitizerOptions, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nRemove harmful HTML tags and attributes from an email, using specified options\n"
  syntax:
    content: public Task<string> SanitizeMailContentWithOptionsAsync(string content, HtmlSanitizerOptions options, RequestOptions requestOptions = null)
    parameters:
    - id: content
      type: System.String
      description: The email content to sanitize
    - id: options
      type: SuperOffice.WebApi.Data.HtmlSanitizerOptions
      description: The options for the sanitizer engine
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The sanitized email content
    content.vb: Public Function SanitizeMailContentWithOptionsAsync(content As String, options As HtmlSanitizerOptions, requestOptions As RequestOptions = Nothing) As Task(Of String)
  overload: SuperOffice.WebApi.Agents.TicketAgent.SanitizeMailContentWithOptionsAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.SanitizeMailContentWithOptionsAsync(System.String,SuperOffice.WebApi.Data.HtmlSanitizerOptions,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.TicketAgent.SanitizeMailContentsAsync(System.String[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.SanitizeMailContentsAsync(System.String[],SuperOffice.WebApi.RequestOptions)
  id: SanitizeMailContentsAsync(System.String[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: SanitizeMailContentsAsync(String[], RequestOptions)
  nameWithType: TicketAgent.SanitizeMailContentsAsync(String[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.SanitizeMailContentsAsync(System.String[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nRemove harmful HTML tags and attributes from an email\n"
  syntax:
    content: public Task<string[]> SanitizeMailContentsAsync(string[] contents, RequestOptions requestOptions = null)
    parameters:
    - id: contents
      type: System.String[]
      description: The email contents to sanitize
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.String[]}
      description: The sanitized email contents
    content.vb: Public Function SanitizeMailContentsAsync(contents As String(), requestOptions As RequestOptions = Nothing) As Task(Of String())
  overload: SuperOffice.WebApi.Agents.TicketAgent.SanitizeMailContentsAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.SanitizeMailContentsAsync(System.String[],SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: TicketAgent.SanitizeMailContentsAsync(String(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.TicketAgent.SanitizeMailContentsAsync(System.String(), SuperOffice.WebApi.RequestOptions)
  name.vb: SanitizeMailContentsAsync(String(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.TicketAgent.Html2TextAsync(System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.Html2TextAsync(System.String,SuperOffice.WebApi.RequestOptions)
  id: Html2TextAsync(System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: Html2TextAsync(String, RequestOptions)
  nameWithType: TicketAgent.Html2TextAsync(String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.Html2TextAsync(System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCreate a plain text version of the html, suitable for email\n"
  syntax:
    content: public Task<string> Html2TextAsync(string content, RequestOptions requestOptions = null)
    parameters:
    - id: content
      type: System.String
      description: The html version
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The plain text version
    content.vb: Public Function Html2TextAsync(content As String, requestOptions As RequestOptions = Nothing) As Task(Of String)
  overload: SuperOffice.WebApi.Agents.TicketAgent.Html2TextAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.Html2TextAsync(System.String,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.TicketAgent.GetAttachmentInfoAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.GetAttachmentInfoAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetAttachmentInfoAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: GetAttachmentInfoAsync(Int32, RequestOptions)
  nameWithType: TicketAgent.GetAttachmentInfoAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.GetAttachmentInfoAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet a list with meta data for all attached attachments\n"
  syntax:
    content: public Task<AttachmentEntity[]> GetAttachmentInfoAsync(int ticketMessageEntityId, RequestOptions requestOptions = null)
    parameters:
    - id: ticketMessageEntityId
      type: System.Int32
      description: The id of the ticket message to get attachment infos for
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AttachmentEntity[]}
      description: An array with AttachmentEntity objects, describing each attachment
    content.vb: Public Function GetAttachmentInfoAsync(ticketMessageEntityId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of AttachmentEntity())
  overload: SuperOffice.WebApi.Agents.TicketAgent.GetAttachmentInfoAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.GetAttachmentInfoAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.TicketAgent.GetAttachmentInfoNonInlineAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.GetAttachmentInfoNonInlineAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetAttachmentInfoNonInlineAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: GetAttachmentInfoNonInlineAsync(Int32, RequestOptions)
  nameWithType: TicketAgent.GetAttachmentInfoNonInlineAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.GetAttachmentInfoNonInlineAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet a list with meta data for all attached attachments, EXCEPT those marked as inline\n"
  syntax:
    content: public Task<AttachmentEntity[]> GetAttachmentInfoNonInlineAsync(int ticketMessageEntityId, RequestOptions requestOptions = null)
    parameters:
    - id: ticketMessageEntityId
      type: System.Int32
      description: The id of the ticket message to get attachment infos for
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AttachmentEntity[]}
      description: An array with AttachmentEntity objects, describing each attachment; those marked as INLINE will be skipped
    content.vb: Public Function GetAttachmentInfoNonInlineAsync(ticketMessageEntityId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of AttachmentEntity())
  overload: SuperOffice.WebApi.Agents.TicketAgent.GetAttachmentInfoNonInlineAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.GetAttachmentInfoNonInlineAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.TicketAgent.AddAttachmentsAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.AddAttachmentsAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: AddAttachmentsAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: AddAttachmentsAsync(Int32, Int32[], RequestOptions)
  nameWithType: TicketAgent.AddAttachmentsAsync(Int32, Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.AddAttachmentsAsync(System.Int32, System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nConnect existing attachments with this TicketMessage. Can connect multiple attachments\n"
  syntax:
    content: public Task AddAttachmentsAsync(int ticketMessageEntityId, int[] attachmentIds, RequestOptions requestOptions = null)
    parameters:
    - id: ticketMessageEntityId
      type: System.Int32
      description: The id of the ticket message to connect the attachments to
    - id: attachmentIds
      type: System.Int32[]
      description: An array of attachments to connect to this TicketMessage
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function AddAttachmentsAsync(ticketMessageEntityId As Integer, attachmentIds As Integer(), requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.TicketAgent.AddAttachmentsAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.AddAttachmentsAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: TicketAgent.AddAttachmentsAsync(Int32, Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.TicketAgent.AddAttachmentsAsync(System.Int32, System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: AddAttachmentsAsync(Int32, Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.TicketAgent.RemoveMessageAttachmentsAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.RemoveMessageAttachmentsAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: RemoveMessageAttachmentsAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: RemoveMessageAttachmentsAsync(Int32, Int32[], RequestOptions)
  nameWithType: TicketAgent.RemoveMessageAttachmentsAsync(Int32, Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.RemoveMessageAttachmentsAsync(System.Int32, System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nRemoves attachments from the message as specified in the collection of entity ids. The ids are attachment ids (attachment primary key)\n"
  syntax:
    content: public Task RemoveMessageAttachmentsAsync(int ticketMessageEntityId, int[] attachmentIds, RequestOptions requestOptions = null)
    parameters:
    - id: ticketMessageEntityId
      type: System.Int32
      description: The id of the ticket message to remove attachments from
    - id: attachmentIds
      type: System.Int32[]
      description: Attachment primary keys
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Public Function RemoveMessageAttachmentsAsync(ticketMessageEntityId As Integer, attachmentIds As Integer(), requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.TicketAgent.RemoveMessageAttachmentsAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.RemoveMessageAttachmentsAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: TicketAgent.RemoveMessageAttachmentsAsync(Int32, Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.TicketAgent.RemoveMessageAttachmentsAsync(System.Int32, System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: RemoveMessageAttachmentsAsync(Int32, Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.TicketAgent.GetAttachmentPreviewAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.GetAttachmentPreviewAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetAttachmentPreviewAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: GetAttachmentPreviewAsync(Int32, RequestOptions)
  nameWithType: TicketAgent.GetAttachmentPreviewAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.GetAttachmentPreviewAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nRetrieve an attachment from ticket message. The returned data is intended to be used for a preview. The returned data is sanitized.\n"
  syntax:
    content: public Task<AttachmentPreview> GetAttachmentPreviewAsync(int attachmentId, RequestOptions requestOptions = null)
    parameters:
    - id: attachmentId
      type: System.Int32
      description: The id of the attachment to retrieve
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AttachmentPreview}
      description: Sanitized preview version of the attachment and additional metadata, if available
    content.vb: Public Function GetAttachmentPreviewAsync(attachmentId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of AttachmentPreview)
  overload: SuperOffice.WebApi.Agents.TicketAgent.GetAttachmentPreviewAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.GetAttachmentPreviewAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.TicketAgent.GetPreviewAttachmentStreamAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.GetPreviewAttachmentStreamAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetPreviewAttachmentStreamAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: GetPreviewAttachmentStreamAsync(Int32, RequestOptions)
  nameWithType: TicketAgent.GetPreviewAttachmentStreamAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.GetPreviewAttachmentStreamAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nDeprecated, see GetPreviewAttachment instead. Retrieve an attachment from ticket message. The returned data is intended to be used for a preview. The returned data is sanitized.\n"
  syntax:
    content: public Task<DocumentPreview> GetPreviewAttachmentStreamAsync(int attachmentId, RequestOptions requestOptions = null)
    parameters:
    - id: attachmentId
      type: System.Int32
      description: The id of the attachment to retrieve
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DocumentPreview}
      description: Sanitized preview version of the attachment
    content.vb: Public Function GetPreviewAttachmentStreamAsync(attachmentId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of DocumentPreview)
  overload: SuperOffice.WebApi.Agents.TicketAgent.GetPreviewAttachmentStreamAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.GetPreviewAttachmentStreamAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.TicketAgent.GetRfcAttachmentStreamAsync(System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.GetRfcAttachmentStreamAsync(System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetRfcAttachmentStreamAsync(System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: GetRfcAttachmentStreamAsync(Int32, Int32, String, RequestOptions)
  nameWithType: TicketAgent.GetRfcAttachmentStreamAsync(Int32, Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.GetRfcAttachmentStreamAsync(System.Int32, System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet the content of an attachment which is part of RFC822 email attachment\n"
  syntax:
    content: public Task<byte[]> GetRfcAttachmentStreamAsync(int attachmentId, int position, string returnContentType = "application/octet-stream", RequestOptions requestOptions = null)
    parameters:
    - id: attachmentId
      type: System.Int32
      description: The id of the root attachment
    - id: position
      type: System.Int32
      description: The position (index) of the attachment within the root attachment. Numbering starts from 0
    - id: returnContentType
      type: System.String
      description: Accept content-type. Default &quot;application/octet-stream&quot;. Could also be &quot;application/pdf&quot;, &quot;text/plain&quot;, &quot;text/html&quot;, or &quot;multipart/related&quot;
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Byte[]}
      description: RFC822 attachment content as a Stream
    content.vb: Public Function GetRfcAttachmentStreamAsync(attachmentId As Integer, position As Integer, returnContentType As String = "application/octet-stream", requestOptions As RequestOptions = Nothing) As Task(Of Byte())
  overload: SuperOffice.WebApi.Agents.TicketAgent.GetRfcAttachmentStreamAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.GetRfcAttachmentStreamAsync(System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.TicketAgent.SendTicketMessageAsync(System.Int32,System.String[],System.String[],System.String[],System.String,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.SendTicketMessageAsync(System.Int32,System.String[],System.String[],System.String[],System.String,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: SendTicketMessageAsync(System.Int32,System.String[],System.String[],System.String[],System.String,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: SendTicketMessageAsync(Int32, String[], String[], String[], String, Int32, String, RequestOptions)
  nameWithType: TicketAgent.SendTicketMessageAsync(Int32, String[], String[], String[], String, Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.SendTicketMessageAsync(System.Int32, System.String[], System.String[], System.String[], System.String, System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSend a message to recipients by email\n"
  syntax:
    content: public Task SendTicketMessageAsync(int ticketMessageEntityId, string[] to, string[] cc, string[] bcc, string subject, int replyTemplateId, string gdprSource, RequestOptions requestOptions = null)
    parameters:
    - id: ticketMessageEntityId
      type: System.Int32
      description: The id of the ticket message to send
    - id: to
      type: System.String[]
      description: The To-recipients. Each recipient must be in correct format
    - id: cc
      type: System.String[]
      description: The Cc-recipients. Each recipient must be in correct format
    - id: bcc
      type: System.String[]
      description: The Bcc-recipients. Each recipient must be in correct format
    - id: subject
      type: System.String
      description: The subject
    - id: replyTemplateId
      type: System.Int32
      description: Optional ID of reply template to merge message with. &lt;= 0 to skip.
    - id: gdprSource
      type: System.String
      description: Obsolete
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Public Function SendTicketMessageAsync(ticketMessageEntityId As Integer, to As String(), cc As String(), bcc As String(), subject As String, replyTemplateId As Integer, gdprSource As String, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.TicketAgent.SendTicketMessageAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.SendTicketMessageAsync(System.Int32,System.String[],System.String[],System.String[],System.String,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: TicketAgent.SendTicketMessageAsync(Int32, String(), String(), String(), String, Int32, String, RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.TicketAgent.SendTicketMessageAsync(System.Int32, System.String(), System.String(), System.String(), System.String, System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  name.vb: SendTicketMessageAsync(Int32, String(), String(), String(), String, Int32, String, RequestOptions)
- uid: SuperOffice.WebApi.Agents.TicketAgent.SendTicketMessageSmsAsync(System.Int32,System.Int32,System.String[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.SendTicketMessageSmsAsync(System.Int32,System.Int32,System.String[],SuperOffice.WebApi.RequestOptions)
  id: SendTicketMessageSmsAsync(System.Int32,System.Int32,System.String[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: SendTicketMessageSmsAsync(Int32, Int32, String[], RequestOptions)
  nameWithType: TicketAgent.SendTicketMessageSmsAsync(Int32, Int32, String[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.SendTicketMessageSmsAsync(System.Int32, System.Int32, System.String[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSend a message to recipients by sms\n"
  syntax:
    content: public Task SendTicketMessageSmsAsync(int ticketMessageEntityId, int replyTemplateId, string[] sms, RequestOptions requestOptions = null)
    parameters:
    - id: ticketMessageEntityId
      type: System.Int32
      description: The id of the ticket message to send
    - id: replyTemplateId
      type: System.Int32
      description: Optional ID of reply template to merge message with. &lt;= 0 to skip.
    - id: sms
      type: System.String[]
      description: The Sms-recipients. Each recipient must be in correct format
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Public Function SendTicketMessageSmsAsync(ticketMessageEntityId As Integer, replyTemplateId As Integer, sms As String(), requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.TicketAgent.SendTicketMessageSmsAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.SendTicketMessageSmsAsync(System.Int32,System.Int32,System.String[],SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: TicketAgent.SendTicketMessageSmsAsync(Int32, Int32, String(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.TicketAgent.SendTicketMessageSmsAsync(System.Int32, System.Int32, System.String(), SuperOffice.WebApi.RequestOptions)
  name.vb: SendTicketMessageSmsAsync(Int32, Int32, String(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.TicketAgent.SetTicketMessageImportantAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.SetTicketMessageImportantAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: SetTicketMessageImportantAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: SetTicketMessageImportantAsync(Int32, Boolean, RequestOptions)
  nameWithType: TicketAgent.SetTicketMessageImportantAsync(Int32, Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.SetTicketMessageImportantAsync(System.Int32, System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet the important flag on or off for a ticket message\n"
  syntax:
    content: public Task SetTicketMessageImportantAsync(int ticketMessageId, bool important, RequestOptions requestOptions = null)
    parameters:
    - id: ticketMessageId
      type: System.Int32
      description: The id of the ticket message to set the important flag on
    - id: important
      type: System.Boolean
      description: Turn on or off the important flag
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Public Function SetTicketMessageImportantAsync(ticketMessageId As Integer, important As Boolean, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.TicketAgent.SetTicketMessageImportantAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.SetTicketMessageImportantAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.TicketAgent.CalculateMessageRecipientsAsync(System.Int32,SuperOffice.WebApi.Data.MessageActionType,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.CalculateMessageRecipientsAsync(System.Int32,SuperOffice.WebApi.Data.MessageActionType,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: CalculateMessageRecipientsAsync(System.Int32,SuperOffice.WebApi.Data.MessageActionType,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: CalculateMessageRecipientsAsync(Int32, MessageActionType, Int32, RequestOptions)
  nameWithType: TicketAgent.CalculateMessageRecipientsAsync(Int32, MessageActionType, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.CalculateMessageRecipientsAsync(System.Int32, SuperOffice.WebApi.Data.MessageActionType, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets recipients for new message\n"
  syntax:
    content: public Task<Recipient[]> CalculateMessageRecipientsAsync(int ticketId, MessageActionType actionType, int messageId, RequestOptions requestOptions = null)
    parameters:
    - id: ticketId
      type: System.Int32
      description: The id of the ticket
    - id: actionType
      type: SuperOffice.WebApi.Data.MessageActionType
      description: Message action
    - id: messageId
      type: System.Int32
      description: Optional ID of message being replied. Value &lt;= 0 ignores parameter
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Recipient[]}
      description: An array with Recipient objects
    content.vb: Public Function CalculateMessageRecipientsAsync(ticketId As Integer, actionType As MessageActionType, messageId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Recipient())
  overload: SuperOffice.WebApi.Agents.TicketAgent.CalculateMessageRecipientsAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.CalculateMessageRecipientsAsync(System.Int32,SuperOffice.WebApi.Data.MessageActionType,System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.TicketAgent.SaveTicketMessageEntityWithNotifyAsync(SuperOffice.WebApi.Data.TicketMessageEntity,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.SaveTicketMessageEntityWithNotifyAsync(SuperOffice.WebApi.Data.TicketMessageEntity,System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: SaveTicketMessageEntityWithNotifyAsync(SuperOffice.WebApi.Data.TicketMessageEntity,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: SaveTicketMessageEntityWithNotifyAsync(TicketMessageEntity, Boolean, RequestOptions)
  nameWithType: TicketAgent.SaveTicketMessageEntityWithNotifyAsync(TicketMessageEntity, Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.SaveTicketMessageEntityWithNotifyAsync(SuperOffice.WebApi.Data.TicketMessageEntity, System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSaves a ticket message and performs any user notifications\n"
  syntax:
    content: public Task<TicketMessageEntity> SaveTicketMessageEntityWithNotifyAsync(TicketMessageEntity newEntity, bool notify, RequestOptions requestOptions = null)
    parameters:
    - id: newEntity
      type: SuperOffice.WebApi.Data.TicketMessageEntity
      description: The ticket message to save
    - id: notify
      type: System.Boolean
      description: If true, then the notification will be sent along with the save
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketMessageEntity}
      description: The saved entity
    content.vb: Public Function SaveTicketMessageEntityWithNotifyAsync(newEntity As TicketMessageEntity, notify As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of TicketMessageEntity)
  overload: SuperOffice.WebApi.Agents.TicketAgent.SaveTicketMessageEntityWithNotifyAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.SaveTicketMessageEntityWithNotifyAsync(SuperOffice.WebApi.Data.TicketMessageEntity,System.Boolean,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.TicketAgent.SaveTicketMessageEntityWithOptionsAsync(SuperOffice.WebApi.Data.TicketMessageEntity,System.Boolean,System.Int32[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.SaveTicketMessageEntityWithOptionsAsync(SuperOffice.WebApi.Data.TicketMessageEntity,System.Boolean,System.Int32[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: SaveTicketMessageEntityWithOptionsAsync(SuperOffice.WebApi.Data.TicketMessageEntity,System.Boolean,System.Int32[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: SaveTicketMessageEntityWithOptionsAsync(TicketMessageEntity, Boolean, Int32[], Boolean, RequestOptions)
  nameWithType: TicketAgent.SaveTicketMessageEntityWithOptionsAsync(TicketMessageEntity, Boolean, Int32[], Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.SaveTicketMessageEntityWithOptionsAsync(SuperOffice.WebApi.Data.TicketMessageEntity, System.Boolean, System.Int32[], System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSaves a ticket message and performs additional actions\n"
  syntax:
    content: public Task<TicketMessageEntity> SaveTicketMessageEntityWithOptionsAsync(TicketMessageEntity entity, bool notify, int[] attachmentIds, bool updateRepliedAt, RequestOptions requestOptions = null)
    parameters:
    - id: entity
      type: SuperOffice.WebApi.Data.TicketMessageEntity
      description: The ticket message to save
    - id: notify
      type: System.Boolean
      description: If true, then the notification will be sent along with the save
    - id: attachmentIds
      type: System.Int32[]
      description: An array of attachments to connect to this TicketMessage
    - id: updateRepliedAt
      type: System.Boolean
      description: Updates ticket&apos;s replied_at field if needed
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketMessageEntity}
      description: The saved entity
    content.vb: Public Function SaveTicketMessageEntityWithOptionsAsync(entity As TicketMessageEntity, notify As Boolean, attachmentIds As Integer(), updateRepliedAt As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of TicketMessageEntity)
  overload: SuperOffice.WebApi.Agents.TicketAgent.SaveTicketMessageEntityWithOptionsAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.SaveTicketMessageEntityWithOptionsAsync(SuperOffice.WebApi.Data.TicketMessageEntity,System.Boolean,System.Int32[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: TicketAgent.SaveTicketMessageEntityWithOptionsAsync(TicketMessageEntity, Boolean, Int32(), Boolean, RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.TicketAgent.SaveTicketMessageEntityWithOptionsAsync(SuperOffice.WebApi.Data.TicketMessageEntity, System.Boolean, System.Int32(), System.Boolean, SuperOffice.WebApi.RequestOptions)
  name.vb: SaveTicketMessageEntityWithOptionsAsync(TicketMessageEntity, Boolean, Int32(), Boolean, RequestOptions)
- uid: SuperOffice.WebApi.Agents.TicketAgent.GetDefaultMessageContentAsync(System.Int32,SuperOffice.WebApi.Data.MessageActionType,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.GetDefaultMessageContentAsync(System.Int32,SuperOffice.WebApi.Data.MessageActionType,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetDefaultMessageContentAsync(System.Int32,SuperOffice.WebApi.Data.MessageActionType,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: GetDefaultMessageContentAsync(Int32, MessageActionType, Int32, RequestOptions)
  nameWithType: TicketAgent.GetDefaultMessageContentAsync(Int32, MessageActionType, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.GetDefaultMessageContentAsync(System.Int32, SuperOffice.WebApi.Data.MessageActionType, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nObsolete, use GetDefaultMessageContentFull instead\n"
  syntax:
    content: public Task<string> GetDefaultMessageContentAsync(int ticketId, MessageActionType messageActionType, int ticketMessageId, RequestOptions requestOptions = null)
    parameters:
    - id: ticketId
      type: System.Int32
      description: The id of the ticket
    - id: messageActionType
      type: SuperOffice.WebApi.Data.MessageActionType
      description: 'Message action type: None/Reply/ReplyAll/Forward'
    - id: ticketMessageId
      type: System.Int32
      description: The id of the message to quote in the returned content. 0 to skip/ignore
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Sanitized HTML content
    content.vb: Public Function GetDefaultMessageContentAsync(ticketId As Integer, messageActionType As MessageActionType, ticketMessageId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of String)
  overload: SuperOffice.WebApi.Agents.TicketAgent.GetDefaultMessageContentAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.GetDefaultMessageContentAsync(System.Int32,SuperOffice.WebApi.Data.MessageActionType,System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.TicketAgent.GetDefaultMessageContentFullAsync(System.Int32,SuperOffice.WebApi.Data.MessageActionType,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.GetDefaultMessageContentFullAsync(System.Int32,SuperOffice.WebApi.Data.MessageActionType,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetDefaultMessageContentFullAsync(System.Int32,SuperOffice.WebApi.Data.MessageActionType,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: GetDefaultMessageContentFullAsync(Int32, MessageActionType, Int32, Int32, RequestOptions)
  nameWithType: TicketAgent.GetDefaultMessageContentFullAsync(Int32, MessageActionType, Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.GetDefaultMessageContentFullAsync(System.Int32, SuperOffice.WebApi.Data.MessageActionType, System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGenerate a default message content: attachments and body as sanitized HTML\n"
  syntax:
    content: public Task<TicketMessageContent> GetDefaultMessageContentFullAsync(int ticketId, MessageActionType messageActionType, int ticketMessageId, int ticketTypeId, RequestOptions requestOptions = null)
    parameters:
    - id: ticketId
      type: System.Int32
      description: The id of the ticket
    - id: messageActionType
      type: SuperOffice.WebApi.Data.MessageActionType
      description: 'Message action type: None/Reply/ReplyAll/Forward'
    - id: ticketMessageId
      type: System.Int32
      description: The id of the message to quote in the returned content. 0 to skip/ignore
    - id: ticketTypeId
      type: System.Int32
      description: The id of the ticket type to look for reply template. 0 to use current ticket type
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketMessageContent}
      description: Generated default message content
    content.vb: Public Function GetDefaultMessageContentFullAsync(ticketId As Integer, messageActionType As MessageActionType, ticketMessageId As Integer, ticketTypeId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of TicketMessageContent)
  overload: SuperOffice.WebApi.Agents.TicketAgent.GetDefaultMessageContentFullAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.GetDefaultMessageContentFullAsync(System.Int32,SuperOffice.WebApi.Data.MessageActionType,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.TicketAgent.GetDefaultMessageContentWithOptionsAsync(System.Int32,SuperOffice.WebApi.Data.MessageActionType,System.Int32,System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.GetDefaultMessageContentWithOptionsAsync(System.Int32,SuperOffice.WebApi.Data.MessageActionType,System.Int32,System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: GetDefaultMessageContentWithOptionsAsync(System.Int32,SuperOffice.WebApi.Data.MessageActionType,System.Int32,System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: GetDefaultMessageContentWithOptionsAsync(Int32, MessageActionType, Int32, Int32, Boolean, RequestOptions)
  nameWithType: TicketAgent.GetDefaultMessageContentWithOptionsAsync(Int32, MessageActionType, Int32, Int32, Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.GetDefaultMessageContentWithOptionsAsync(System.Int32, SuperOffice.WebApi.Data.MessageActionType, System.Int32, System.Int32, System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGenerate a default message content with option to exclude signature: attachments and body as sanitized HTML\n"
  syntax:
    content: public Task<TicketMessageContent> GetDefaultMessageContentWithOptionsAsync(int ticketId, MessageActionType messageActionType, int ticketMessageId, int ticketTypeId, bool excludeSignature, RequestOptions requestOptions = null)
    parameters:
    - id: ticketId
      type: System.Int32
      description: The id of the ticket
    - id: messageActionType
      type: SuperOffice.WebApi.Data.MessageActionType
      description: 'Message action type: None/Reply/ReplyAll/Forward'
    - id: ticketMessageId
      type: System.Int32
      description: The id of the message to quote in the returned content. 0 to skip/ignore
    - id: ticketTypeId
      type: System.Int32
      description: The id of the ticket type to look for reply template. 0 to use current ticket type
    - id: excludeSignature
      type: System.Boolean
      description: Flag to exclude a signature when generating the return content
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketMessageContent}
      description: Generated default message content
    content.vb: Public Function GetDefaultMessageContentWithOptionsAsync(ticketId As Integer, messageActionType As MessageActionType, ticketMessageId As Integer, ticketTypeId As Integer, excludeSignature As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of TicketMessageContent)
  overload: SuperOffice.WebApi.Agents.TicketAgent.GetDefaultMessageContentWithOptionsAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.GetDefaultMessageContentWithOptionsAsync(System.Int32,SuperOffice.WebApi.Data.MessageActionType,System.Int32,System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.TicketAgent.GetTicketMessageWithEmbeddedDataAsync(System.Int32,SuperOffice.WebApi.Data.ImageEmbedType,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.GetTicketMessageWithEmbeddedDataAsync(System.Int32,SuperOffice.WebApi.Data.ImageEmbedType,SuperOffice.WebApi.RequestOptions)
  id: GetTicketMessageWithEmbeddedDataAsync(System.Int32,SuperOffice.WebApi.Data.ImageEmbedType,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: GetTicketMessageWithEmbeddedDataAsync(Int32, ImageEmbedType, RequestOptions)
  nameWithType: TicketAgent.GetTicketMessageWithEmbeddedDataAsync(Int32, ImageEmbedType, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.GetTicketMessageWithEmbeddedDataAsync(System.Int32, SuperOffice.WebApi.Data.ImageEmbedType, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet a ticket message entity with posibillity to change embedded images to be represented with inline data within the HTML body. If using inline data, be sure not to save this back to the database.\n"
  syntax:
    content: public Task<TicketMessageEntity> GetTicketMessageWithEmbeddedDataAsync(int id, ImageEmbedType embedImages, RequestOptions requestOptions = null)
    parameters:
    - id: id
      type: System.Int32
      description: The id of the ticket message entity
    - id: embedImages
      type: SuperOffice.WebApi.Data.ImageEmbedType
      description: 'If set to Inline, then use inline base64 data to represent the images in the HTML body. Default: Link will use link to the image.'
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketMessageEntity}
      description: The entity to get
    content.vb: Public Function GetTicketMessageWithEmbeddedDataAsync(id As Integer, embedImages As ImageEmbedType, requestOptions As RequestOptions = Nothing) As Task(Of TicketMessageEntity)
  overload: SuperOffice.WebApi.Agents.TicketAgent.GetTicketMessageWithEmbeddedDataAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.GetTicketMessageWithEmbeddedDataAsync(System.Int32,SuperOffice.WebApi.Data.ImageEmbedType,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.TicketAgent.DeleteMessageHeadersAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.DeleteMessageHeadersAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: DeleteMessageHeadersAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: DeleteMessageHeadersAsync(Int32[], RequestOptions)
  nameWithType: TicketAgent.DeleteMessageHeadersAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.DeleteMessageHeadersAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nRemoves headers from the message as specified in the collection of entity ids. The ids are message header ids (message header primary key)\n"
  syntax:
    content: public Task DeleteMessageHeadersAsync(int[] headerIds, RequestOptions requestOptions = null)
    parameters:
    - id: headerIds
      type: System.Int32[]
      description: Message header primary keys
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Public Function DeleteMessageHeadersAsync(headerIds As Integer(), requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.TicketAgent.DeleteMessageHeadersAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.DeleteMessageHeadersAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: TicketAgent.DeleteMessageHeadersAsync(Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.TicketAgent.DeleteMessageHeadersAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: DeleteMessageHeadersAsync(Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.TicketAgent.GetTicketMessageWithOptionsAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.GetTicketMessageWithOptionsAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: GetTicketMessageWithOptionsAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: GetTicketMessageWithOptionsAsync(Int32, Boolean, RequestOptions)
  nameWithType: TicketAgent.GetTicketMessageWithOptionsAsync(Int32, Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.GetTicketMessageWithOptionsAsync(System.Int32, System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet a ticket message entity with additional options.\n"
  syntax:
    content: public Task<TicketMessageEntity> GetTicketMessageWithOptionsAsync(int ticketMessageEntityId, bool includeNonInlineAttachmentsInfo, RequestOptions requestOptions = null)
    parameters:
    - id: ticketMessageEntityId
      type: System.Int32
      description: The id of the ticket message entity
    - id: includeNonInlineAttachmentsInfo
      type: System.Boolean
      description: If true, then non inline attachments info will be loaded into TicketMessageEntity
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketMessageEntity}
      description: The entity to get
    content.vb: Public Function GetTicketMessageWithOptionsAsync(ticketMessageEntityId As Integer, includeNonInlineAttachmentsInfo As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of TicketMessageEntity)
  overload: SuperOffice.WebApi.Agents.TicketAgent.GetTicketMessageWithOptionsAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.GetTicketMessageWithOptionsAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.TicketAgent.GetTicketSummariesAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.TicketAgent.GetTicketSummariesAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetTicketSummariesAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.TicketAgent
  langs:
  - csharp
  - vb
  name: GetTicketSummariesAsync(Int32[], RequestOptions)
  nameWithType: TicketAgent.GetTicketSummariesAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.TicketAgent.GetTicketSummariesAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet an array of summaryitem for the given tickets\n"
  syntax:
    content: public Task<TicketSummaryItem[]> GetTicketSummariesAsync(int[] ticketIds, RequestOptions requestOptions = null)
    parameters:
    - id: ticketIds
      type: System.Int32[]
      description: The tickets to fetch summaries for
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketSummaryItem[]}
      description: Summary items for the given id&apos;s, in no particular order
    content.vb: Public Function GetTicketSummariesAsync(ticketIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of TicketSummaryItem())
  overload: SuperOffice.WebApi.Agents.TicketAgent.GetTicketSummariesAsync*
  implements:
  - SuperOffice.WebApi.Agents.ITicketAgent.GetTicketSummariesAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: TicketAgent.GetTicketSummariesAsync(Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.TicketAgent.GetTicketSummariesAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetTicketSummariesAsync(Int32(), RequestOptions)
references:
- uid: SuperOffice.WebApi.Agents
  commentId: N:SuperOffice.WebApi.Agents
  isExternal: true
  name: SuperOffice.WebApi.Agents
  nameWithType: SuperOffice.WebApi.Agents
  fullName: SuperOffice.WebApi.Agents
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.WebApi.Agents.AgentBase
  commentId: T:SuperOffice.WebApi.Agents.AgentBase
  parent: SuperOffice.WebApi.Agents
  isExternal: true
  name: AgentBase
  nameWithType: AgentBase
  fullName: SuperOffice.WebApi.Agents.AgentBase
- uid: SuperOffice.WebApi.Agents.ITicketAgent
  commentId: T:SuperOffice.WebApi.Agents.ITicketAgent
  parent: SuperOffice.WebApi.Agents
  isExternal: true
  name: ITicketAgent
  nameWithType: ITicketAgent
  fullName: SuperOffice.WebApi.Agents.ITicketAgent
- uid: System.IDisposable
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: SuperOffice.WebApi.Agents.AgentBase._json
  commentId: F:SuperOffice.WebApi.Agents.AgentBase._json
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: _json
  nameWithType: AgentBase._json
  fullName: SuperOffice.WebApi.Agents.AgentBase._json
- uid: SuperOffice.WebApi.Agents.AgentBase._binary
  commentId: F:SuperOffice.WebApi.Agents.AgentBase._binary
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: _binary
  nameWithType: AgentBase._binary
  fullName: SuperOffice.WebApi.Agents.AgentBase._binary
- uid: SuperOffice.WebApi.Agents.AgentBase._config
  commentId: F:SuperOffice.WebApi.Agents.AgentBase._config
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: _config
  nameWithType: AgentBase._config
  fullName: SuperOffice.WebApi.Agents.AgentBase._config
- uid: SuperOffice.WebApi.Agents.AgentBase._client
  commentId: F:SuperOffice.WebApi.Agents.AgentBase._client
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: _client
  nameWithType: AgentBase._client
  fullName: SuperOffice.WebApi.Agents.AgentBase._client
- uid: SuperOffice.WebApi.Agents.AgentBase._disposeClient
  commentId: F:SuperOffice.WebApi.Agents.AgentBase._disposeClient
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: _disposeClient
  nameWithType: AgentBase._disposeClient
  fullName: SuperOffice.WebApi.Agents.AgentBase._disposeClient
- uid: SuperOffice.WebApi.Agents.AgentBase.Merge(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.Merge(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: Merge(RequestOptions)
  nameWithType: AgentBase.Merge(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AgentBase.Merge(SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.Merge(SuperOffice.WebApi.RequestOptions)
    name: Merge
    nameWithType: AgentBase.Merge
    fullName: SuperOffice.WebApi.Agents.AgentBase.Merge
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.Merge(SuperOffice.WebApi.RequestOptions)
    name: Merge
    nameWithType: AgentBase.Merge
    fullName: SuperOffice.WebApi.Agents.AgentBase.Merge
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: BuildRequestFromObject(HttpMethod, String, Object, WebApiOptions, String)
  nameWithType: AgentBase.BuildRequestFromObject(HttpMethod, String, Object, WebApiOptions, String)
  fullName: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject(System.Net.Http.HttpMethod, System.String, System.Object, SuperOffice.WebApi.WebApiOptions, System.String)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
    name: BuildRequestFromObject
    nameWithType: AgentBase.BuildRequestFromObject
    fullName: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.WebApiOptions
    name: WebApiOptions
    nameWithType: WebApiOptions
    fullName: SuperOffice.WebApi.WebApiOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
    name: BuildRequestFromObject
    nameWithType: AgentBase.BuildRequestFromObject
    fullName: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.WebApiOptions
    name: WebApiOptions
    nameWithType: WebApiOptions
    fullName: SuperOffice.WebApi.WebApiOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream(System.Net.Http.HttpMethod,System.String,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream(System.Net.Http.HttpMethod,System.String,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: BuildRequestFromStream(HttpMethod, String, Stream, WebApiOptions, String)
  nameWithType: AgentBase.BuildRequestFromStream(HttpMethod, String, Stream, WebApiOptions, String)
  fullName: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream(System.Net.Http.HttpMethod, System.String, System.IO.Stream, SuperOffice.WebApi.WebApiOptions, System.String)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream(System.Net.Http.HttpMethod,System.String,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
    name: BuildRequestFromStream
    nameWithType: AgentBase.BuildRequestFromStream
    fullName: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.WebApiOptions
    name: WebApiOptions
    nameWithType: WebApiOptions
    fullName: SuperOffice.WebApi.WebApiOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream(System.Net.Http.HttpMethod,System.String,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
    name: BuildRequestFromStream
    nameWithType: AgentBase.BuildRequestFromStream
    fullName: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.WebApiOptions
    name: WebApiOptions
    nameWithType: WebApiOptions
    fullName: SuperOffice.WebApi.WebApiOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObjectWithStream(System.Net.Http.HttpMethod,System.String,System.Object,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObjectWithStream(System.Net.Http.HttpMethod,System.String,System.Object,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: BuildRequestFromObjectWithStream(HttpMethod, String, Object, Stream, WebApiOptions, String)
  nameWithType: AgentBase.BuildRequestFromObjectWithStream(HttpMethod, String, Object, Stream, WebApiOptions, String)
  fullName: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObjectWithStream(System.Net.Http.HttpMethod, System.String, System.Object, System.IO.Stream, SuperOffice.WebApi.WebApiOptions, System.String)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObjectWithStream(System.Net.Http.HttpMethod,System.String,System.Object,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
    name: BuildRequestFromObjectWithStream
    nameWithType: AgentBase.BuildRequestFromObjectWithStream
    fullName: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObjectWithStream
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.WebApiOptions
    name: WebApiOptions
    nameWithType: WebApiOptions
    fullName: SuperOffice.WebApi.WebApiOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObjectWithStream(System.Net.Http.HttpMethod,System.String,System.Object,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
    name: BuildRequestFromObjectWithStream
    nameWithType: AgentBase.BuildRequestFromObjectWithStream
    fullName: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObjectWithStream
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.WebApiOptions
    name: WebApiOptions
    nameWithType: WebApiOptions
    fullName: SuperOffice.WebApi.WebApiOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization(SuperOffice.WebApi.Authorization.IAuthorization)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization(SuperOffice.WebApi.Authorization.IAuthorization)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: ParseAuthorization(IAuthorization)
  nameWithType: AgentBase.ParseAuthorization(IAuthorization)
  fullName: SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization(SuperOffice.WebApi.Authorization.IAuthorization)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization(SuperOffice.WebApi.Authorization.IAuthorization)
    name: ParseAuthorization
    nameWithType: AgentBase.ParseAuthorization
    fullName: SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.Authorization.IAuthorization
    name: IAuthorization
    nameWithType: IAuthorization
    fullName: SuperOffice.WebApi.Authorization.IAuthorization
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization(SuperOffice.WebApi.Authorization.IAuthorization)
    name: ParseAuthorization
    nameWithType: AgentBase.ParseAuthorization
    fullName: SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.Authorization.IAuthorization
    name: IAuthorization
    nameWithType: IAuthorization
    fullName: SuperOffice.WebApi.Authorization.IAuthorization
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.CancelRequest
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.CancelRequest
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: CancelRequest()
  nameWithType: AgentBase.CancelRequest()
  fullName: SuperOffice.WebApi.Agents.AgentBase.CancelRequest()
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.CancelRequest
    name: CancelRequest
    nameWithType: AgentBase.CancelRequest
    fullName: SuperOffice.WebApi.Agents.AgentBase.CancelRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.CancelRequest
    name: CancelRequest
    nameWithType: AgentBase.CancelRequest
    fullName: SuperOffice.WebApi.Agents.AgentBase.CancelRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.SendRequestObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.SendRequestObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: SendRequestObject(HttpMethod, String, Object, WebApiOptions, String)
  nameWithType: AgentBase.SendRequestObject(HttpMethod, String, Object, WebApiOptions, String)
  fullName: SuperOffice.WebApi.Agents.AgentBase.SendRequestObject(System.Net.Http.HttpMethod, System.String, System.Object, SuperOffice.WebApi.WebApiOptions, System.String)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.SendRequestObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
    name: SendRequestObject
    nameWithType: AgentBase.SendRequestObject
    fullName: SuperOffice.WebApi.Agents.AgentBase.SendRequestObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.WebApiOptions
    name: WebApiOptions
    nameWithType: WebApiOptions
    fullName: SuperOffice.WebApi.WebApiOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.SendRequestObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
    name: SendRequestObject
    nameWithType: AgentBase.SendRequestObject
    fullName: SuperOffice.WebApi.Agents.AgentBase.SendRequestObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.WebApiOptions
    name: WebApiOptions
    nameWithType: WebApiOptions
    fullName: SuperOffice.WebApi.WebApiOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.SendRequestObjectWithStream(System.Net.Http.HttpMethod,System.String,System.Object,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.SendRequestObjectWithStream(System.Net.Http.HttpMethod,System.String,System.Object,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: SendRequestObjectWithStream(HttpMethod, String, Object, Stream, WebApiOptions, String)
  nameWithType: AgentBase.SendRequestObjectWithStream(HttpMethod, String, Object, Stream, WebApiOptions, String)
  fullName: SuperOffice.WebApi.Agents.AgentBase.SendRequestObjectWithStream(System.Net.Http.HttpMethod, System.String, System.Object, System.IO.Stream, SuperOffice.WebApi.WebApiOptions, System.String)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.SendRequestObjectWithStream(System.Net.Http.HttpMethod,System.String,System.Object,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
    name: SendRequestObjectWithStream
    nameWithType: AgentBase.SendRequestObjectWithStream
    fullName: SuperOffice.WebApi.Agents.AgentBase.SendRequestObjectWithStream
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.WebApiOptions
    name: WebApiOptions
    nameWithType: WebApiOptions
    fullName: SuperOffice.WebApi.WebApiOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.SendRequestObjectWithStream(System.Net.Http.HttpMethod,System.String,System.Object,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
    name: SendRequestObjectWithStream
    nameWithType: AgentBase.SendRequestObjectWithStream
    fullName: SuperOffice.WebApi.Agents.AgentBase.SendRequestObjectWithStream
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.WebApiOptions
    name: WebApiOptions
    nameWithType: WebApiOptions
    fullName: SuperOffice.WebApi.WebApiOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.SendRequest(System.Net.Http.HttpRequestMessage,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.SendRequest(System.Net.Http.HttpRequestMessage,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: SendRequest(HttpRequestMessage, RequestOptions)
  nameWithType: AgentBase.SendRequest(HttpRequestMessage, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AgentBase.SendRequest(System.Net.Http.HttpRequestMessage, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.SendRequest(System.Net.Http.HttpRequestMessage,SuperOffice.WebApi.RequestOptions)
    name: SendRequest
    nameWithType: AgentBase.SendRequest
    fullName: SuperOffice.WebApi.Agents.AgentBase.SendRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.SendRequest(System.Net.Http.HttpRequestMessage,SuperOffice.WebApi.RequestOptions)
    name: SendRequest
    nameWithType: AgentBase.SendRequest
    fullName: SuperOffice.WebApi.Agents.AgentBase.SendRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: ThrowOnResponseError(HttpRequestMessage, HttpResponseMessage)
  nameWithType: AgentBase.ThrowOnResponseError(HttpRequestMessage, HttpResponseMessage)
  fullName: SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError(System.Net.Http.HttpRequestMessage, System.Net.Http.HttpResponseMessage)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage)
    name: ThrowOnResponseError
    nameWithType: AgentBase.ThrowOnResponseError
    fullName: SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage)
    name: ThrowOnResponseError
    nameWithType: AgentBase.ThrowOnResponseError
    fullName: SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.ParseResponse``1(System.Net.Http.HttpResponseMessage)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.ParseResponse``1(System.Net.Http.HttpResponseMessage)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: ParseResponse<T>(HttpResponseMessage)
  nameWithType: AgentBase.ParseResponse<T>(HttpResponseMessage)
  fullName: SuperOffice.WebApi.Agents.AgentBase.ParseResponse<T>(System.Net.Http.HttpResponseMessage)
  nameWithType.vb: AgentBase.ParseResponse(Of T)(HttpResponseMessage)
  fullName.vb: SuperOffice.WebApi.Agents.AgentBase.ParseResponse(Of T)(System.Net.Http.HttpResponseMessage)
  name.vb: ParseResponse(Of T)(HttpResponseMessage)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.ParseResponse``1(System.Net.Http.HttpResponseMessage)
    name: ParseResponse<T>
    nameWithType: AgentBase.ParseResponse<T>
    fullName: SuperOffice.WebApi.Agents.AgentBase.ParseResponse<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.ParseResponse``1(System.Net.Http.HttpResponseMessage)
    name: ParseResponse(Of T)
    nameWithType: AgentBase.ParseResponse(Of T)
    fullName: SuperOffice.WebApi.Agents.AgentBase.ParseResponse(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.Finally(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.Finally(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: Finally(RequestOptions)
  nameWithType: AgentBase.Finally(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AgentBase.Finally(SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.Finally(SuperOffice.WebApi.RequestOptions)
    name: Finally
    nameWithType: AgentBase.Finally
    fullName: SuperOffice.WebApi.Agents.AgentBase.Finally
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.Finally(SuperOffice.WebApi.RequestOptions)
    name: Finally
    nameWithType: AgentBase.Finally
    fullName: SuperOffice.WebApi.Agents.AgentBase.Finally
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.Dispose
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.Dispose
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: Dispose()
  nameWithType: AgentBase.Dispose()
  fullName: SuperOffice.WebApi.Agents.AgentBase.Dispose()
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.Dispose
    name: Dispose
    nameWithType: AgentBase.Dispose
    fullName: SuperOffice.WebApi.Agents.AgentBase.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.Dispose
    name: Dispose
    nameWithType: AgentBase.Dispose
    fullName: SuperOffice.WebApi.Agents.AgentBase.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.Configuration
  commentId: P:SuperOffice.WebApi.Agents.AgentBase.Configuration
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: Configuration
  nameWithType: AgentBase.Configuration
  fullName: SuperOffice.WebApi.Agents.AgentBase.Configuration
- uid: SuperOffice.WebApi.Agents.AgentBase.Client
  commentId: P:SuperOffice.WebApi.Agents.AgentBase.Client
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: Client
  nameWithType: AgentBase.Client
  fullName: SuperOffice.WebApi.Agents.AgentBase.Client
- uid: SuperOffice.WebApi.Agents.AgentBase.HasRunningRequest
  commentId: P:SuperOffice.WebApi.Agents.AgentBase.HasRunningRequest
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: HasRunningRequest
  nameWithType: AgentBase.HasRunningRequest
  fullName: SuperOffice.WebApi.Agents.AgentBase.HasRunningRequest
- uid: SuperOffice.WebApi.Agents.AgentBase.ClientCancellationTokenSource
  commentId: P:SuperOffice.WebApi.Agents.AgentBase.ClientCancellationTokenSource
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: ClientCancellationTokenSource
  nameWithType: AgentBase.ClientCancellationTokenSource
  fullName: SuperOffice.WebApi.Agents.AgentBase.ClientCancellationTokenSource
- uid: SuperOffice.WebApi.Agents.AgentBase.ProgressListener
  commentId: P:SuperOffice.WebApi.Agents.AgentBase.ProgressListener
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: ProgressListener
  nameWithType: AgentBase.ProgressListener
  fullName: SuperOffice.WebApi.Agents.AgentBase.ProgressListener
- uid: SuperOffice.WebApi.Agents.AgentBase.UploadProgressListener
  commentId: P:SuperOffice.WebApi.Agents.AgentBase.UploadProgressListener
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: UploadProgressListener
  nameWithType: AgentBase.UploadProgressListener
  fullName: SuperOffice.WebApi.Agents.AgentBase.UploadProgressListener
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.WebApi.Agents.TicketAgent.#ctor*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.#ctor
  isExternal: true
  name: TicketAgent
  nameWithType: TicketAgent.TicketAgent
  fullName: SuperOffice.WebApi.Agents.TicketAgent.TicketAgent
- uid: System.Net.Http.HttpClient
  isExternal: true
  name: HttpClient
  nameWithType: HttpClient
  fullName: System.Net.Http.HttpClient
- uid: SuperOffice.WebApi.WebApiOptions
  commentId: T:SuperOffice.WebApi.WebApiOptions
  parent: SuperOffice.WebApi
  isExternal: true
  name: WebApiOptions
  nameWithType: WebApiOptions
  fullName: SuperOffice.WebApi.WebApiOptions
- uid: SuperOffice.WebApi
  commentId: N:SuperOffice.WebApi
  isExternal: true
  name: SuperOffice.WebApi
  nameWithType: SuperOffice.WebApi
  fullName: SuperOffice.WebApi
- uid: SuperOffice.WebApi.Agents.TicketAgent.CreateDefaultAttachmentEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.CreateDefaultAttachmentEntityAsync
  isExternal: true
  name: CreateDefaultAttachmentEntityAsync
  nameWithType: TicketAgent.CreateDefaultAttachmentEntityAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.CreateDefaultAttachmentEntityAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.CreateDefaultAttachmentEntityAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.CreateDefaultAttachmentEntityAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: CreateDefaultAttachmentEntityAsync(RequestOptions)
  nameWithType: ITicketAgent.CreateDefaultAttachmentEntityAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.CreateDefaultAttachmentEntityAsync(SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.CreateDefaultAttachmentEntityAsync(SuperOffice.WebApi.RequestOptions)
    name: CreateDefaultAttachmentEntityAsync
    nameWithType: ITicketAgent.CreateDefaultAttachmentEntityAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.CreateDefaultAttachmentEntityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.CreateDefaultAttachmentEntityAsync(SuperOffice.WebApi.RequestOptions)
    name: CreateDefaultAttachmentEntityAsync
    nameWithType: ITicketAgent.CreateDefaultAttachmentEntityAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.CreateDefaultAttachmentEntityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.RequestOptions
  commentId: T:SuperOffice.WebApi.RequestOptions
  parent: SuperOffice.WebApi
  isExternal: true
  name: RequestOptions
  nameWithType: RequestOptions
  fullName: SuperOffice.WebApi.RequestOptions
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AttachmentEntity}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AttachmentEntity}'
  definition: System.Threading.Tasks.Task`1
  name: Task<AttachmentEntity>
  nameWithType: Task<AttachmentEntity>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.AttachmentEntity>
  nameWithType.vb: Task(Of AttachmentEntity)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.AttachmentEntity)
  name.vb: Task(Of AttachmentEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.AttachmentEntity
    name: AttachmentEntity
    nameWithType: AttachmentEntity
    fullName: SuperOffice.WebApi.Data.AttachmentEntity
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.AttachmentEntity
    name: AttachmentEntity
    nameWithType: AttachmentEntity
    fullName: SuperOffice.WebApi.Data.AttachmentEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.SaveAttachmentEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.SaveAttachmentEntityAsync
  isExternal: true
  name: SaveAttachmentEntityAsync
  nameWithType: TicketAgent.SaveAttachmentEntityAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.SaveAttachmentEntityAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.SaveAttachmentEntityAsync(SuperOffice.WebApi.Data.AttachmentEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.SaveAttachmentEntityAsync(SuperOffice.WebApi.Data.AttachmentEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: SaveAttachmentEntityAsync(AttachmentEntity, RequestOptions)
  nameWithType: ITicketAgent.SaveAttachmentEntityAsync(AttachmentEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.SaveAttachmentEntityAsync(SuperOffice.WebApi.Data.AttachmentEntity, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.SaveAttachmentEntityAsync(SuperOffice.WebApi.Data.AttachmentEntity,SuperOffice.WebApi.RequestOptions)
    name: SaveAttachmentEntityAsync
    nameWithType: ITicketAgent.SaveAttachmentEntityAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.SaveAttachmentEntityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.Data.AttachmentEntity
    name: AttachmentEntity
    nameWithType: AttachmentEntity
    fullName: SuperOffice.WebApi.Data.AttachmentEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.SaveAttachmentEntityAsync(SuperOffice.WebApi.Data.AttachmentEntity,SuperOffice.WebApi.RequestOptions)
    name: SaveAttachmentEntityAsync
    nameWithType: ITicketAgent.SaveAttachmentEntityAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.SaveAttachmentEntityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.Data.AttachmentEntity
    name: AttachmentEntity
    nameWithType: AttachmentEntity
    fullName: SuperOffice.WebApi.Data.AttachmentEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Data.AttachmentEntity
  commentId: T:SuperOffice.WebApi.Data.AttachmentEntity
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: AttachmentEntity
  nameWithType: AttachmentEntity
  fullName: SuperOffice.WebApi.Data.AttachmentEntity
- uid: SuperOffice.WebApi.Data
  commentId: N:SuperOffice.WebApi.Data
  isExternal: true
  name: SuperOffice.WebApi.Data
  nameWithType: SuperOffice.WebApi.Data
  fullName: SuperOffice.WebApi.Data
- uid: SuperOffice.WebApi.Agents.TicketAgent.CreateDefaultTicketEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.CreateDefaultTicketEntityAsync
  isExternal: true
  name: CreateDefaultTicketEntityAsync
  nameWithType: TicketAgent.CreateDefaultTicketEntityAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.CreateDefaultTicketEntityAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.CreateDefaultTicketEntityAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.CreateDefaultTicketEntityAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: CreateDefaultTicketEntityAsync(RequestOptions)
  nameWithType: ITicketAgent.CreateDefaultTicketEntityAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.CreateDefaultTicketEntityAsync(SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.CreateDefaultTicketEntityAsync(SuperOffice.WebApi.RequestOptions)
    name: CreateDefaultTicketEntityAsync
    nameWithType: ITicketAgent.CreateDefaultTicketEntityAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.CreateDefaultTicketEntityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.CreateDefaultTicketEntityAsync(SuperOffice.WebApi.RequestOptions)
    name: CreateDefaultTicketEntityAsync
    nameWithType: ITicketAgent.CreateDefaultTicketEntityAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.CreateDefaultTicketEntityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketEntity}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketEntity}'
  definition: System.Threading.Tasks.Task`1
  name: Task<TicketEntity>
  nameWithType: Task<TicketEntity>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.TicketEntity>
  nameWithType.vb: Task(Of TicketEntity)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.TicketEntity)
  name.vb: Task(Of TicketEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.TicketEntity
    name: TicketEntity
    nameWithType: TicketEntity
    fullName: SuperOffice.WebApi.Data.TicketEntity
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.TicketEntity
    name: TicketEntity
    nameWithType: TicketEntity
    fullName: SuperOffice.WebApi.Data.TicketEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.SaveTicketEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.SaveTicketEntityAsync
  isExternal: true
  name: SaveTicketEntityAsync
  nameWithType: TicketAgent.SaveTicketEntityAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.SaveTicketEntityAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.SaveTicketEntityAsync(SuperOffice.WebApi.Data.TicketEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.SaveTicketEntityAsync(SuperOffice.WebApi.Data.TicketEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: SaveTicketEntityAsync(TicketEntity, RequestOptions)
  nameWithType: ITicketAgent.SaveTicketEntityAsync(TicketEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.SaveTicketEntityAsync(SuperOffice.WebApi.Data.TicketEntity, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.SaveTicketEntityAsync(SuperOffice.WebApi.Data.TicketEntity,SuperOffice.WebApi.RequestOptions)
    name: SaveTicketEntityAsync
    nameWithType: ITicketAgent.SaveTicketEntityAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.SaveTicketEntityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.Data.TicketEntity
    name: TicketEntity
    nameWithType: TicketEntity
    fullName: SuperOffice.WebApi.Data.TicketEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.SaveTicketEntityAsync(SuperOffice.WebApi.Data.TicketEntity,SuperOffice.WebApi.RequestOptions)
    name: SaveTicketEntityAsync
    nameWithType: ITicketAgent.SaveTicketEntityAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.SaveTicketEntityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.Data.TicketEntity
    name: TicketEntity
    nameWithType: TicketEntity
    fullName: SuperOffice.WebApi.Data.TicketEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Data.TicketEntity
  commentId: T:SuperOffice.WebApi.Data.TicketEntity
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: TicketEntity
  nameWithType: TicketEntity
  fullName: SuperOffice.WebApi.Data.TicketEntity
- uid: SuperOffice.WebApi.Agents.TicketAgent.CreateDefaultTicketMessageEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.CreateDefaultTicketMessageEntityAsync
  isExternal: true
  name: CreateDefaultTicketMessageEntityAsync
  nameWithType: TicketAgent.CreateDefaultTicketMessageEntityAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.CreateDefaultTicketMessageEntityAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.CreateDefaultTicketMessageEntityAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.CreateDefaultTicketMessageEntityAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: CreateDefaultTicketMessageEntityAsync(RequestOptions)
  nameWithType: ITicketAgent.CreateDefaultTicketMessageEntityAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.CreateDefaultTicketMessageEntityAsync(SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.CreateDefaultTicketMessageEntityAsync(SuperOffice.WebApi.RequestOptions)
    name: CreateDefaultTicketMessageEntityAsync
    nameWithType: ITicketAgent.CreateDefaultTicketMessageEntityAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.CreateDefaultTicketMessageEntityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.CreateDefaultTicketMessageEntityAsync(SuperOffice.WebApi.RequestOptions)
    name: CreateDefaultTicketMessageEntityAsync
    nameWithType: ITicketAgent.CreateDefaultTicketMessageEntityAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.CreateDefaultTicketMessageEntityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketMessageEntity}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketMessageEntity}'
  definition: System.Threading.Tasks.Task`1
  name: Task<TicketMessageEntity>
  nameWithType: Task<TicketMessageEntity>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.TicketMessageEntity>
  nameWithType.vb: Task(Of TicketMessageEntity)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.TicketMessageEntity)
  name.vb: Task(Of TicketMessageEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.TicketMessageEntity
    name: TicketMessageEntity
    nameWithType: TicketMessageEntity
    fullName: SuperOffice.WebApi.Data.TicketMessageEntity
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.TicketMessageEntity
    name: TicketMessageEntity
    nameWithType: TicketMessageEntity
    fullName: SuperOffice.WebApi.Data.TicketMessageEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.SaveTicketMessageEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.SaveTicketMessageEntityAsync
  isExternal: true
  name: SaveTicketMessageEntityAsync
  nameWithType: TicketAgent.SaveTicketMessageEntityAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.SaveTicketMessageEntityAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.SaveTicketMessageEntityAsync(SuperOffice.WebApi.Data.TicketMessageEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.SaveTicketMessageEntityAsync(SuperOffice.WebApi.Data.TicketMessageEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: SaveTicketMessageEntityAsync(TicketMessageEntity, RequestOptions)
  nameWithType: ITicketAgent.SaveTicketMessageEntityAsync(TicketMessageEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.SaveTicketMessageEntityAsync(SuperOffice.WebApi.Data.TicketMessageEntity, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.SaveTicketMessageEntityAsync(SuperOffice.WebApi.Data.TicketMessageEntity,SuperOffice.WebApi.RequestOptions)
    name: SaveTicketMessageEntityAsync
    nameWithType: ITicketAgent.SaveTicketMessageEntityAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.SaveTicketMessageEntityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.Data.TicketMessageEntity
    name: TicketMessageEntity
    nameWithType: TicketMessageEntity
    fullName: SuperOffice.WebApi.Data.TicketMessageEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.SaveTicketMessageEntityAsync(SuperOffice.WebApi.Data.TicketMessageEntity,SuperOffice.WebApi.RequestOptions)
    name: SaveTicketMessageEntityAsync
    nameWithType: ITicketAgent.SaveTicketMessageEntityAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.SaveTicketMessageEntityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.Data.TicketMessageEntity
    name: TicketMessageEntity
    nameWithType: TicketMessageEntity
    fullName: SuperOffice.WebApi.Data.TicketMessageEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Data.TicketMessageEntity
  commentId: T:SuperOffice.WebApi.Data.TicketMessageEntity
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: TicketMessageEntity
  nameWithType: TicketMessageEntity
  fullName: SuperOffice.WebApi.Data.TicketMessageEntity
- uid: SuperOffice.WebApi.Agents.TicketAgent.GetAttachmentEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.GetAttachmentEntityAsync
  isExternal: true
  name: GetAttachmentEntityAsync
  nameWithType: TicketAgent.GetAttachmentEntityAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.GetAttachmentEntityAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.GetAttachmentEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.GetAttachmentEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: GetAttachmentEntityAsync(Int32, RequestOptions)
  nameWithType: ITicketAgent.GetAttachmentEntityAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetAttachmentEntityAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.GetAttachmentEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetAttachmentEntityAsync
    nameWithType: ITicketAgent.GetAttachmentEntityAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetAttachmentEntityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.GetAttachmentEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetAttachmentEntityAsync
    nameWithType: ITicketAgent.GetAttachmentEntityAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetAttachmentEntityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.WebApi.Agents.TicketAgent.CopyFromCRMDocumentAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.CopyFromCRMDocumentAsync
  isExternal: true
  name: CopyFromCRMDocumentAsync
  nameWithType: TicketAgent.CopyFromCRMDocumentAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.CopyFromCRMDocumentAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.CopyFromCRMDocumentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.CopyFromCRMDocumentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: CopyFromCRMDocumentAsync(Int32, RequestOptions)
  nameWithType: ITicketAgent.CopyFromCRMDocumentAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.CopyFromCRMDocumentAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.CopyFromCRMDocumentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: CopyFromCRMDocumentAsync
    nameWithType: ITicketAgent.CopyFromCRMDocumentAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.CopyFromCRMDocumentAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.CopyFromCRMDocumentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: CopyFromCRMDocumentAsync
    nameWithType: ITicketAgent.CopyFromCRMDocumentAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.CopyFromCRMDocumentAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.CopyToTempFileAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.CopyToTempFileAsync
  isExternal: true
  name: CopyToTempFileAsync
  nameWithType: TicketAgent.CopyToTempFileAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.CopyToTempFileAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.CopyToTempFileAsync(System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.CopyToTempFileAsync(System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: CopyToTempFileAsync(String, Int32, RequestOptions)
  nameWithType: ITicketAgent.CopyToTempFileAsync(String, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.CopyToTempFileAsync(System.String, System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.CopyToTempFileAsync(System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: CopyToTempFileAsync
    nameWithType: ITicketAgent.CopyToTempFileAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.CopyToTempFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.CopyToTempFileAsync(System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: CopyToTempFileAsync
    nameWithType: ITicketAgent.CopyToTempFileAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.CopyToTempFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Task{System.String}
  commentId: '!:System.Threading.Tasks.Task{System.String}'
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.UploadAttachmentAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.UploadAttachmentAsync
  isExternal: true
  name: UploadAttachmentAsync
  nameWithType: TicketAgent.UploadAttachmentAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.UploadAttachmentAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.UploadAttachmentAsync(System.Int32,System.Byte[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.UploadAttachmentAsync(System.Int32,System.Byte[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: UploadAttachmentAsync(Int32, Byte[], RequestOptions)
  nameWithType: ITicketAgent.UploadAttachmentAsync(Int32, Byte[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.UploadAttachmentAsync(System.Int32, System.Byte[], SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: ITicketAgent.UploadAttachmentAsync(Int32, Byte(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.ITicketAgent.UploadAttachmentAsync(System.Int32, System.Byte(), SuperOffice.WebApi.RequestOptions)
  name.vb: UploadAttachmentAsync(Int32, Byte(), RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.UploadAttachmentAsync(System.Int32,System.Byte[],SuperOffice.WebApi.RequestOptions)
    name: UploadAttachmentAsync
    nameWithType: ITicketAgent.UploadAttachmentAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.UploadAttachmentAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.UploadAttachmentAsync(System.Int32,System.Byte[],SuperOffice.WebApi.RequestOptions)
    name: UploadAttachmentAsync
    nameWithType: ITicketAgent.UploadAttachmentAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.UploadAttachmentAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Threading.Tasks.Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: SuperOffice.WebApi.Agents.TicketAgent.GetAttachmentStreamAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.GetAttachmentStreamAsync
  isExternal: true
  name: GetAttachmentStreamAsync
  nameWithType: TicketAgent.GetAttachmentStreamAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.GetAttachmentStreamAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.GetAttachmentStreamAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.GetAttachmentStreamAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: GetAttachmentStreamAsync(Int32, String, RequestOptions)
  nameWithType: ITicketAgent.GetAttachmentStreamAsync(Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetAttachmentStreamAsync(System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.GetAttachmentStreamAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
    name: GetAttachmentStreamAsync
    nameWithType: ITicketAgent.GetAttachmentStreamAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetAttachmentStreamAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.GetAttachmentStreamAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
    name: GetAttachmentStreamAsync
    nameWithType: ITicketAgent.GetAttachmentStreamAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetAttachmentStreamAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Byte[]}
  commentId: '!:System.Threading.Tasks.Task{System.Byte[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Byte[]>
  nameWithType: Task<Byte[]>
  fullName: System.Threading.Tasks.Task<System.Byte[]>
  nameWithType.vb: Task(Of Byte())
  fullName.vb: System.Threading.Tasks.Task(Of System.Byte())
  name.vb: Task(Of Byte())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.GetTicketAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.GetTicketAsync
  isExternal: true
  name: GetTicketAsync
  nameWithType: TicketAgent.GetTicketAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.GetTicketAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.GetTicketAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: GetTicketAsync(Int32, RequestOptions)
  nameWithType: ITicketAgent.GetTicketAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetTicketAsync
    nameWithType: ITicketAgent.GetTicketAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetTicketAsync
    nameWithType: ITicketAgent.GetTicketAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Ticket}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Ticket}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Ticket>
  nameWithType: Task<Ticket>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.Ticket>
  nameWithType.vb: Task(Of Ticket)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.Ticket)
  name.vb: Task(Of Ticket)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.Ticket
    name: Ticket
    nameWithType: Ticket
    fullName: SuperOffice.WebApi.Data.Ticket
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.Ticket
    name: Ticket
    nameWithType: Ticket
    fullName: SuperOffice.WebApi.Data.Ticket
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.GetTicketsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.GetTicketsAsync
  isExternal: true
  name: GetTicketsAsync
  nameWithType: TicketAgent.GetTicketsAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.GetTicketsAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.GetTicketsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: GetTicketsAsync(Int32[], RequestOptions)
  nameWithType: ITicketAgent.GetTicketsAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketsAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: ITicketAgent.GetTicketsAsync(Int32(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketsAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetTicketsAsync(Int32(), RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
    name: GetTicketsAsync
    nameWithType: ITicketAgent.GetTicketsAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
    name: GetTicketsAsync
    nameWithType: ITicketAgent.GetTicketsAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Ticket[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Ticket[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Ticket[]>
  nameWithType: Task<Ticket[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.Ticket[]>
  nameWithType.vb: Task(Of Ticket())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.Ticket())
  name.vb: Task(Of Ticket())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.Ticket
    name: Ticket
    nameWithType: Ticket
    fullName: SuperOffice.WebApi.Data.Ticket
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.Ticket
    name: Ticket
    nameWithType: Ticket
    fullName: SuperOffice.WebApi.Data.Ticket
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.GetTicketEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.GetTicketEntityAsync
  isExternal: true
  name: GetTicketEntityAsync
  nameWithType: TicketAgent.GetTicketEntityAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.GetTicketEntityAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.GetTicketEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: GetTicketEntityAsync(Int32, RequestOptions)
  nameWithType: ITicketAgent.GetTicketEntityAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketEntityAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetTicketEntityAsync
    nameWithType: ITicketAgent.GetTicketEntityAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketEntityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetTicketEntityAsync
    nameWithType: ITicketAgent.GetTicketEntityAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketEntityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.GetForRmUiAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.GetForRmUiAsync
  isExternal: true
  name: GetForRmUiAsync
  nameWithType: TicketAgent.GetForRmUiAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.GetForRmUiAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.GetForRmUiAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.GetForRmUiAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: GetForRmUiAsync(Int32, RequestOptions)
  nameWithType: ITicketAgent.GetForRmUiAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetForRmUiAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.GetForRmUiAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetForRmUiAsync
    nameWithType: ITicketAgent.GetForRmUiAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetForRmUiAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.GetForRmUiAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetForRmUiAsync
    nameWithType: ITicketAgent.GetForRmUiAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetForRmUiAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.DeleteTicketEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.DeleteTicketEntityAsync
  isExternal: true
  name: DeleteTicketEntityAsync
  nameWithType: TicketAgent.DeleteTicketEntityAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.DeleteTicketEntityAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.DeleteTicketEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.DeleteTicketEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: DeleteTicketEntityAsync(Int32, RequestOptions)
  nameWithType: ITicketAgent.DeleteTicketEntityAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.DeleteTicketEntityAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.DeleteTicketEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: DeleteTicketEntityAsync
    nameWithType: ITicketAgent.DeleteTicketEntityAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.DeleteTicketEntityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.DeleteTicketEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: DeleteTicketEntityAsync
    nameWithType: ITicketAgent.DeleteTicketEntityAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.DeleteTicketEntityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.NotifyNewTicketAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.NotifyNewTicketAsync
  isExternal: true
  name: NotifyNewTicketAsync
  nameWithType: TicketAgent.NotifyNewTicketAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.NotifyNewTicketAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.NotifyNewTicketAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.NotifyNewTicketAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: NotifyNewTicketAsync(Int32, RequestOptions)
  nameWithType: ITicketAgent.NotifyNewTicketAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.NotifyNewTicketAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.NotifyNewTicketAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: NotifyNewTicketAsync
    nameWithType: ITicketAgent.NotifyNewTicketAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.NotifyNewTicketAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.NotifyNewTicketAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: NotifyNewTicketAsync
    nameWithType: ITicketAgent.NotifyNewTicketAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.NotifyNewTicketAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.NotifyNewTicketMessageAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.NotifyNewTicketMessageAsync
  isExternal: true
  name: NotifyNewTicketMessageAsync
  nameWithType: TicketAgent.NotifyNewTicketMessageAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.NotifyNewTicketMessageAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.NotifyNewTicketMessageAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.NotifyNewTicketMessageAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: NotifyNewTicketMessageAsync(Int32, RequestOptions)
  nameWithType: ITicketAgent.NotifyNewTicketMessageAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.NotifyNewTicketMessageAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.NotifyNewTicketMessageAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: NotifyNewTicketMessageAsync
    nameWithType: ITicketAgent.NotifyNewTicketMessageAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.NotifyNewTicketMessageAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.NotifyNewTicketMessageAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: NotifyNewTicketMessageAsync
    nameWithType: ITicketAgent.NotifyNewTicketMessageAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.NotifyNewTicketMessageAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.GetTicketAttachmentsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.GetTicketAttachmentsAsync
  isExternal: true
  name: GetTicketAttachmentsAsync
  nameWithType: TicketAgent.GetTicketAttachmentsAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.GetTicketAttachmentsAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketAttachmentsAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.GetTicketAttachmentsAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: GetTicketAttachmentsAsync(Int32, RequestOptions)
  nameWithType: ITicketAgent.GetTicketAttachmentsAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketAttachmentsAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketAttachmentsAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetTicketAttachmentsAsync
    nameWithType: ITicketAgent.GetTicketAttachmentsAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketAttachmentsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketAttachmentsAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetTicketAttachmentsAsync
    nameWithType: ITicketAgent.GetTicketAttachmentsAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketAttachmentsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AttachmentEntity[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AttachmentEntity[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<AttachmentEntity[]>
  nameWithType: Task<AttachmentEntity[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.AttachmentEntity[]>
  nameWithType.vb: Task(Of AttachmentEntity())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.AttachmentEntity())
  name.vb: Task(Of AttachmentEntity())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.AttachmentEntity
    name: AttachmentEntity
    nameWithType: AttachmentEntity
    fullName: SuperOffice.WebApi.Data.AttachmentEntity
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.AttachmentEntity
    name: AttachmentEntity
    nameWithType: AttachmentEntity
    fullName: SuperOffice.WebApi.Data.AttachmentEntity
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.ValidateAttachmentsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.ValidateAttachmentsAsync
  isExternal: true
  name: ValidateAttachmentsAsync
  nameWithType: TicketAgent.ValidateAttachmentsAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.ValidateAttachmentsAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.ValidateAttachmentsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.ValidateAttachmentsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: ValidateAttachmentsAsync(Int32[], RequestOptions)
  nameWithType: ITicketAgent.ValidateAttachmentsAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.ValidateAttachmentsAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: ITicketAgent.ValidateAttachmentsAsync(Int32(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.ITicketAgent.ValidateAttachmentsAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: ValidateAttachmentsAsync(Int32(), RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.ValidateAttachmentsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
    name: ValidateAttachmentsAsync
    nameWithType: ITicketAgent.ValidateAttachmentsAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.ValidateAttachmentsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.ValidateAttachmentsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
    name: ValidateAttachmentsAsync
    nameWithType: ITicketAgent.ValidateAttachmentsAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.ValidateAttachmentsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AttachmentValidationResult[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AttachmentValidationResult[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<AttachmentValidationResult[]>
  nameWithType: Task<AttachmentValidationResult[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.AttachmentValidationResult[]>
  nameWithType.vb: Task(Of AttachmentValidationResult())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.AttachmentValidationResult())
  name.vb: Task(Of AttachmentValidationResult())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.AttachmentValidationResult
    name: AttachmentValidationResult
    nameWithType: AttachmentValidationResult
    fullName: SuperOffice.WebApi.Data.AttachmentValidationResult
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.AttachmentValidationResult
    name: AttachmentValidationResult
    nameWithType: AttachmentValidationResult
    fullName: SuperOffice.WebApi.Data.AttachmentValidationResult
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.SetTicketReadByOwnerAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.SetTicketReadByOwnerAsync
  isExternal: true
  name: SetTicketReadByOwnerAsync
  nameWithType: TicketAgent.SetTicketReadByOwnerAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.SetTicketReadByOwnerAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.SetTicketReadByOwnerAsync(System.Int32,SuperOffice.WebApi.Data.TicketReadStatus,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.SetTicketReadByOwnerAsync(System.Int32,SuperOffice.WebApi.Data.TicketReadStatus,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: SetTicketReadByOwnerAsync(Int32, TicketReadStatus, Boolean, RequestOptions)
  nameWithType: ITicketAgent.SetTicketReadByOwnerAsync(Int32, TicketReadStatus, Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.SetTicketReadByOwnerAsync(System.Int32, SuperOffice.WebApi.Data.TicketReadStatus, System.Boolean, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.SetTicketReadByOwnerAsync(System.Int32,SuperOffice.WebApi.Data.TicketReadStatus,System.Boolean,SuperOffice.WebApi.RequestOptions)
    name: SetTicketReadByOwnerAsync
    nameWithType: ITicketAgent.SetTicketReadByOwnerAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.SetTicketReadByOwnerAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.TicketReadStatus
    name: TicketReadStatus
    nameWithType: TicketReadStatus
    fullName: SuperOffice.WebApi.Data.TicketReadStatus
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.SetTicketReadByOwnerAsync(System.Int32,SuperOffice.WebApi.Data.TicketReadStatus,System.Boolean,SuperOffice.WebApi.RequestOptions)
    name: SetTicketReadByOwnerAsync
    nameWithType: ITicketAgent.SetTicketReadByOwnerAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.SetTicketReadByOwnerAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.TicketReadStatus
    name: TicketReadStatus
    nameWithType: TicketReadStatus
    fullName: SuperOffice.WebApi.Data.TicketReadStatus
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Data.TicketReadStatus
  commentId: T:SuperOffice.WebApi.Data.TicketReadStatus
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: TicketReadStatus
  nameWithType: TicketReadStatus
  fullName: SuperOffice.WebApi.Data.TicketReadStatus
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.WebApi.Agents.TicketAgent.SaveTicketEntityWithNotifyAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.SaveTicketEntityWithNotifyAsync
  isExternal: true
  name: SaveTicketEntityWithNotifyAsync
  nameWithType: TicketAgent.SaveTicketEntityWithNotifyAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.SaveTicketEntityWithNotifyAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.SaveTicketEntityWithNotifyAsync(SuperOffice.WebApi.Data.TicketEntity,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.SaveTicketEntityWithNotifyAsync(SuperOffice.WebApi.Data.TicketEntity,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: SaveTicketEntityWithNotifyAsync(TicketEntity, Boolean, RequestOptions)
  nameWithType: ITicketAgent.SaveTicketEntityWithNotifyAsync(TicketEntity, Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.SaveTicketEntityWithNotifyAsync(SuperOffice.WebApi.Data.TicketEntity, System.Boolean, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.SaveTicketEntityWithNotifyAsync(SuperOffice.WebApi.Data.TicketEntity,System.Boolean,SuperOffice.WebApi.RequestOptions)
    name: SaveTicketEntityWithNotifyAsync
    nameWithType: ITicketAgent.SaveTicketEntityWithNotifyAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.SaveTicketEntityWithNotifyAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.Data.TicketEntity
    name: TicketEntity
    nameWithType: TicketEntity
    fullName: SuperOffice.WebApi.Data.TicketEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.SaveTicketEntityWithNotifyAsync(SuperOffice.WebApi.Data.TicketEntity,System.Boolean,SuperOffice.WebApi.RequestOptions)
    name: SaveTicketEntityWithNotifyAsync
    nameWithType: ITicketAgent.SaveTicketEntityWithNotifyAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.SaveTicketEntityWithNotifyAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.Data.TicketEntity
    name: TicketEntity
    nameWithType: TicketEntity
    fullName: SuperOffice.WebApi.Data.TicketEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.GetNextInQueueAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.GetNextInQueueAsync
  isExternal: true
  name: GetNextInQueueAsync
  nameWithType: TicketAgent.GetNextInQueueAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.GetNextInQueueAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.GetNextInQueueAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.GetNextInQueueAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: GetNextInQueueAsync(RequestOptions)
  nameWithType: ITicketAgent.GetNextInQueueAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetNextInQueueAsync(SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.GetNextInQueueAsync(SuperOffice.WebApi.RequestOptions)
    name: GetNextInQueueAsync
    nameWithType: ITicketAgent.GetNextInQueueAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetNextInQueueAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.GetNextInQueueAsync(SuperOffice.WebApi.RequestOptions)
    name: GetNextInQueueAsync
    nameWithType: ITicketAgent.GetNextInQueueAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetNextInQueueAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.ProcessTicketWhenReadAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.ProcessTicketWhenReadAsync
  isExternal: true
  name: ProcessTicketWhenReadAsync
  nameWithType: TicketAgent.ProcessTicketWhenReadAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.ProcessTicketWhenReadAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.ProcessTicketWhenReadAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.ProcessTicketWhenReadAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: ProcessTicketWhenReadAsync(Int32, RequestOptions)
  nameWithType: ITicketAgent.ProcessTicketWhenReadAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.ProcessTicketWhenReadAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.ProcessTicketWhenReadAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: ProcessTicketWhenReadAsync
    nameWithType: ITicketAgent.ProcessTicketWhenReadAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.ProcessTicketWhenReadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.ProcessTicketWhenReadAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: ProcessTicketWhenReadAsync
    nameWithType: ITicketAgent.ProcessTicketWhenReadAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.ProcessTicketWhenReadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.SplitTicketAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.SplitTicketAsync
  isExternal: true
  name: SplitTicketAsync
  nameWithType: TicketAgent.SplitTicketAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.SplitTicketAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.SplitTicketAsync(System.Int32,System.Int32,System.DateTime,System.Int32[],SuperOffice.WebApi.Data.TicketEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.SplitTicketAsync(System.Int32,System.Int32,System.DateTime,System.Int32[],SuperOffice.WebApi.Data.TicketEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: SplitTicketAsync(Int32, Int32, DateTime, Int32[], TicketEntity, RequestOptions)
  nameWithType: ITicketAgent.SplitTicketAsync(Int32, Int32, DateTime, Int32[], TicketEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.SplitTicketAsync(System.Int32, System.Int32, System.DateTime, System.Int32[], SuperOffice.WebApi.Data.TicketEntity, SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: ITicketAgent.SplitTicketAsync(Int32, Int32, DateTime, Int32(), TicketEntity, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.ITicketAgent.SplitTicketAsync(System.Int32, System.Int32, System.DateTime, System.Int32(), SuperOffice.WebApi.Data.TicketEntity, SuperOffice.WebApi.RequestOptions)
  name.vb: SplitTicketAsync(Int32, Int32, DateTime, Int32(), TicketEntity, RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.SplitTicketAsync(System.Int32,System.Int32,System.DateTime,System.Int32[],SuperOffice.WebApi.Data.TicketEntity,SuperOffice.WebApi.RequestOptions)
    name: SplitTicketAsync
    nameWithType: ITicketAgent.SplitTicketAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.SplitTicketAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.TicketEntity
    name: TicketEntity
    nameWithType: TicketEntity
    fullName: SuperOffice.WebApi.Data.TicketEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.SplitTicketAsync(System.Int32,System.Int32,System.DateTime,System.Int32[],SuperOffice.WebApi.Data.TicketEntity,SuperOffice.WebApi.RequestOptions)
    name: SplitTicketAsync
    nameWithType: ITicketAgent.SplitTicketAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.SplitTicketAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.TicketEntity
    name: TicketEntity
    nameWithType: TicketEntity
    fullName: SuperOffice.WebApi.Data.TicketEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: SuperOffice.WebApi.Agents.TicketAgent.SplitTicketMessageAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.SplitTicketMessageAsync
  isExternal: true
  name: SplitTicketMessageAsync
  nameWithType: TicketAgent.SplitTicketMessageAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.SplitTicketMessageAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.SplitTicketMessageAsync(SuperOffice.WebApi.Data.TicketMessageEntity,SuperOffice.WebApi.Data.TicketEntity,SuperOffice.WebApi.Data.TicketMessageEntity,System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.SplitTicketMessageAsync(SuperOffice.WebApi.Data.TicketMessageEntity,SuperOffice.WebApi.Data.TicketEntity,SuperOffice.WebApi.Data.TicketMessageEntity,System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: SplitTicketMessageAsync(TicketMessageEntity, TicketEntity, TicketMessageEntity, Int32[], RequestOptions)
  nameWithType: ITicketAgent.SplitTicketMessageAsync(TicketMessageEntity, TicketEntity, TicketMessageEntity, Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.SplitTicketMessageAsync(SuperOffice.WebApi.Data.TicketMessageEntity, SuperOffice.WebApi.Data.TicketEntity, SuperOffice.WebApi.Data.TicketMessageEntity, System.Int32[], SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: ITicketAgent.SplitTicketMessageAsync(TicketMessageEntity, TicketEntity, TicketMessageEntity, Int32(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.ITicketAgent.SplitTicketMessageAsync(SuperOffice.WebApi.Data.TicketMessageEntity, SuperOffice.WebApi.Data.TicketEntity, SuperOffice.WebApi.Data.TicketMessageEntity, System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: SplitTicketMessageAsync(TicketMessageEntity, TicketEntity, TicketMessageEntity, Int32(), RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.SplitTicketMessageAsync(SuperOffice.WebApi.Data.TicketMessageEntity,SuperOffice.WebApi.Data.TicketEntity,SuperOffice.WebApi.Data.TicketMessageEntity,System.Int32[],SuperOffice.WebApi.RequestOptions)
    name: SplitTicketMessageAsync
    nameWithType: ITicketAgent.SplitTicketMessageAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.SplitTicketMessageAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.Data.TicketMessageEntity
    name: TicketMessageEntity
    nameWithType: TicketMessageEntity
    fullName: SuperOffice.WebApi.Data.TicketMessageEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.TicketEntity
    name: TicketEntity
    nameWithType: TicketEntity
    fullName: SuperOffice.WebApi.Data.TicketEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.TicketMessageEntity
    name: TicketMessageEntity
    nameWithType: TicketMessageEntity
    fullName: SuperOffice.WebApi.Data.TicketMessageEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.SplitTicketMessageAsync(SuperOffice.WebApi.Data.TicketMessageEntity,SuperOffice.WebApi.Data.TicketEntity,SuperOffice.WebApi.Data.TicketMessageEntity,System.Int32[],SuperOffice.WebApi.RequestOptions)
    name: SplitTicketMessageAsync
    nameWithType: ITicketAgent.SplitTicketMessageAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.SplitTicketMessageAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.Data.TicketMessageEntity
    name: TicketMessageEntity
    nameWithType: TicketMessageEntity
    fullName: SuperOffice.WebApi.Data.TicketMessageEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.TicketEntity
    name: TicketEntity
    nameWithType: TicketEntity
    fullName: SuperOffice.WebApi.Data.TicketEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.TicketMessageEntity
    name: TicketMessageEntity
    nameWithType: TicketMessageEntity
    fullName: SuperOffice.WebApi.Data.TicketMessageEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.UpdateTicketsReadStatusAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.UpdateTicketsReadStatusAsync
  isExternal: true
  name: UpdateTicketsReadStatusAsync
  nameWithType: TicketAgent.UpdateTicketsReadStatusAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.UpdateTicketsReadStatusAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.UpdateTicketsReadStatusAsync(System.Int32[],SuperOffice.WebApi.Data.TicketReadStatus,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.UpdateTicketsReadStatusAsync(System.Int32[],SuperOffice.WebApi.Data.TicketReadStatus,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: UpdateTicketsReadStatusAsync(Int32[], TicketReadStatus, RequestOptions)
  nameWithType: ITicketAgent.UpdateTicketsReadStatusAsync(Int32[], TicketReadStatus, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.UpdateTicketsReadStatusAsync(System.Int32[], SuperOffice.WebApi.Data.TicketReadStatus, SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: ITicketAgent.UpdateTicketsReadStatusAsync(Int32(), TicketReadStatus, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.ITicketAgent.UpdateTicketsReadStatusAsync(System.Int32(), SuperOffice.WebApi.Data.TicketReadStatus, SuperOffice.WebApi.RequestOptions)
  name.vb: UpdateTicketsReadStatusAsync(Int32(), TicketReadStatus, RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.UpdateTicketsReadStatusAsync(System.Int32[],SuperOffice.WebApi.Data.TicketReadStatus,SuperOffice.WebApi.RequestOptions)
    name: UpdateTicketsReadStatusAsync
    nameWithType: ITicketAgent.UpdateTicketsReadStatusAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.UpdateTicketsReadStatusAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.TicketReadStatus
    name: TicketReadStatus
    nameWithType: TicketReadStatus
    fullName: SuperOffice.WebApi.Data.TicketReadStatus
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.UpdateTicketsReadStatusAsync(System.Int32[],SuperOffice.WebApi.Data.TicketReadStatus,SuperOffice.WebApi.RequestOptions)
    name: UpdateTicketsReadStatusAsync
    nameWithType: ITicketAgent.UpdateTicketsReadStatusAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.UpdateTicketsReadStatusAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.TicketReadStatus
    name: TicketReadStatus
    nameWithType: TicketReadStatus
    fullName: SuperOffice.WebApi.Data.TicketReadStatus
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Int32[]}
  commentId: '!:System.Threading.Tasks.Task{System.Int32[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Int32[]>
  nameWithType: Task<Int32[]>
  fullName: System.Threading.Tasks.Task<System.Int32[]>
  nameWithType.vb: Task(Of Int32())
  fullName.vb: System.Threading.Tasks.Task(Of System.Int32())
  name.vb: Task(Of Int32())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.UpdateTicketsReadStatusByProviderAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.UpdateTicketsReadStatusByProviderAsync
  isExternal: true
  name: UpdateTicketsReadStatusByProviderAsync
  nameWithType: TicketAgent.UpdateTicketsReadStatusByProviderAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.UpdateTicketsReadStatusByProviderAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.UpdateTicketsReadStatusByProviderAsync(System.String,SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],SuperOffice.WebApi.Data.TicketReadStatus,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.UpdateTicketsReadStatusByProviderAsync(System.String,SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],SuperOffice.WebApi.Data.TicketReadStatus,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: UpdateTicketsReadStatusByProviderAsync(String, ArchiveRestrictionInfo[], TicketReadStatus, RequestOptions)
  nameWithType: ITicketAgent.UpdateTicketsReadStatusByProviderAsync(String, ArchiveRestrictionInfo[], TicketReadStatus, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.UpdateTicketsReadStatusByProviderAsync(System.String, SuperOffice.WebApi.Data.ArchiveRestrictionInfo[], SuperOffice.WebApi.Data.TicketReadStatus, SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: ITicketAgent.UpdateTicketsReadStatusByProviderAsync(String, ArchiveRestrictionInfo(), TicketReadStatus, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.ITicketAgent.UpdateTicketsReadStatusByProviderAsync(System.String, SuperOffice.WebApi.Data.ArchiveRestrictionInfo(), SuperOffice.WebApi.Data.TicketReadStatus, SuperOffice.WebApi.RequestOptions)
  name.vb: UpdateTicketsReadStatusByProviderAsync(String, ArchiveRestrictionInfo(), TicketReadStatus, RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.UpdateTicketsReadStatusByProviderAsync(System.String,SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],SuperOffice.WebApi.Data.TicketReadStatus,SuperOffice.WebApi.RequestOptions)
    name: UpdateTicketsReadStatusByProviderAsync
    nameWithType: ITicketAgent.UpdateTicketsReadStatusByProviderAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.UpdateTicketsReadStatusByProviderAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.WebApi.Data.ArchiveRestrictionInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.TicketReadStatus
    name: TicketReadStatus
    nameWithType: TicketReadStatus
    fullName: SuperOffice.WebApi.Data.TicketReadStatus
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.UpdateTicketsReadStatusByProviderAsync(System.String,SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],SuperOffice.WebApi.Data.TicketReadStatus,SuperOffice.WebApi.RequestOptions)
    name: UpdateTicketsReadStatusByProviderAsync
    nameWithType: ITicketAgent.UpdateTicketsReadStatusByProviderAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.UpdateTicketsReadStatusByProviderAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.WebApi.Data.ArchiveRestrictionInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.TicketReadStatus
    name: TicketReadStatus
    nameWithType: TicketReadStatus
    fullName: SuperOffice.WebApi.Data.TicketReadStatus
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Data.ArchiveRestrictionInfo[]
  isExternal: true
  name: ArchiveRestrictionInfo[]
  nameWithType: ArchiveRestrictionInfo[]
  fullName: SuperOffice.WebApi.Data.ArchiveRestrictionInfo[]
  nameWithType.vb: ArchiveRestrictionInfo()
  fullName.vb: SuperOffice.WebApi.Data.ArchiveRestrictionInfo()
  name.vb: ArchiveRestrictionInfo()
  spec.csharp:
  - uid: SuperOffice.WebApi.Data.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.WebApi.Data.ArchiveRestrictionInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.WebApi.Data.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.WebApi.Data.ArchiveRestrictionInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.WebApi.Agents.TicketAgent.MergeTicketsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.MergeTicketsAsync
  isExternal: true
  name: MergeTicketsAsync
  nameWithType: TicketAgent.MergeTicketsAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.MergeTicketsAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.MergeTicketsAsync(SuperOffice.WebApi.Data.TicketEntity,System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.MergeTicketsAsync(SuperOffice.WebApi.Data.TicketEntity,System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: MergeTicketsAsync(TicketEntity, Int32[], RequestOptions)
  nameWithType: ITicketAgent.MergeTicketsAsync(TicketEntity, Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.MergeTicketsAsync(SuperOffice.WebApi.Data.TicketEntity, System.Int32[], SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: ITicketAgent.MergeTicketsAsync(TicketEntity, Int32(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.ITicketAgent.MergeTicketsAsync(SuperOffice.WebApi.Data.TicketEntity, System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: MergeTicketsAsync(TicketEntity, Int32(), RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.MergeTicketsAsync(SuperOffice.WebApi.Data.TicketEntity,System.Int32[],SuperOffice.WebApi.RequestOptions)
    name: MergeTicketsAsync
    nameWithType: ITicketAgent.MergeTicketsAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.MergeTicketsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.Data.TicketEntity
    name: TicketEntity
    nameWithType: TicketEntity
    fullName: SuperOffice.WebApi.Data.TicketEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.MergeTicketsAsync(SuperOffice.WebApi.Data.TicketEntity,System.Int32[],SuperOffice.WebApi.RequestOptions)
    name: MergeTicketsAsync
    nameWithType: ITicketAgent.MergeTicketsAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.MergeTicketsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.Data.TicketEntity
    name: TicketEntity
    nameWithType: TicketEntity
    fullName: SuperOffice.WebApi.Data.TicketEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.SetDeletedStatusByIdsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.SetDeletedStatusByIdsAsync
  isExternal: true
  name: SetDeletedStatusByIdsAsync
  nameWithType: TicketAgent.SetDeletedStatusByIdsAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.SetDeletedStatusByIdsAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.SetDeletedStatusByIdsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.SetDeletedStatusByIdsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: SetDeletedStatusByIdsAsync(Int32[], RequestOptions)
  nameWithType: ITicketAgent.SetDeletedStatusByIdsAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.SetDeletedStatusByIdsAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: ITicketAgent.SetDeletedStatusByIdsAsync(Int32(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.ITicketAgent.SetDeletedStatusByIdsAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: SetDeletedStatusByIdsAsync(Int32(), RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.SetDeletedStatusByIdsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
    name: SetDeletedStatusByIdsAsync
    nameWithType: ITicketAgent.SetDeletedStatusByIdsAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.SetDeletedStatusByIdsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.SetDeletedStatusByIdsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
    name: SetDeletedStatusByIdsAsync
    nameWithType: ITicketAgent.SetDeletedStatusByIdsAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.SetDeletedStatusByIdsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.SetDeletedStatusByProviderAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.SetDeletedStatusByProviderAsync
  isExternal: true
  name: SetDeletedStatusByProviderAsync
  nameWithType: TicketAgent.SetDeletedStatusByProviderAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.SetDeletedStatusByProviderAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.SetDeletedStatusByProviderAsync(System.String,SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.SetDeletedStatusByProviderAsync(System.String,SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: SetDeletedStatusByProviderAsync(String, ArchiveRestrictionInfo[], RequestOptions)
  nameWithType: ITicketAgent.SetDeletedStatusByProviderAsync(String, ArchiveRestrictionInfo[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.SetDeletedStatusByProviderAsync(System.String, SuperOffice.WebApi.Data.ArchiveRestrictionInfo[], SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: ITicketAgent.SetDeletedStatusByProviderAsync(String, ArchiveRestrictionInfo(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.ITicketAgent.SetDeletedStatusByProviderAsync(System.String, SuperOffice.WebApi.Data.ArchiveRestrictionInfo(), SuperOffice.WebApi.RequestOptions)
  name.vb: SetDeletedStatusByProviderAsync(String, ArchiveRestrictionInfo(), RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.SetDeletedStatusByProviderAsync(System.String,SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],SuperOffice.WebApi.RequestOptions)
    name: SetDeletedStatusByProviderAsync
    nameWithType: ITicketAgent.SetDeletedStatusByProviderAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.SetDeletedStatusByProviderAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.WebApi.Data.ArchiveRestrictionInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.SetDeletedStatusByProviderAsync(System.String,SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],SuperOffice.WebApi.RequestOptions)
    name: SetDeletedStatusByProviderAsync
    nameWithType: ITicketAgent.SetDeletedStatusByProviderAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.SetDeletedStatusByProviderAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.WebApi.Data.ArchiveRestrictionInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.UndeleteByIdsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.UndeleteByIdsAsync
  isExternal: true
  name: UndeleteByIdsAsync
  nameWithType: TicketAgent.UndeleteByIdsAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.UndeleteByIdsAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.UndeleteByIdsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.UndeleteByIdsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: UndeleteByIdsAsync(Int32[], RequestOptions)
  nameWithType: ITicketAgent.UndeleteByIdsAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.UndeleteByIdsAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: ITicketAgent.UndeleteByIdsAsync(Int32(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.ITicketAgent.UndeleteByIdsAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: UndeleteByIdsAsync(Int32(), RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.UndeleteByIdsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
    name: UndeleteByIdsAsync
    nameWithType: ITicketAgent.UndeleteByIdsAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.UndeleteByIdsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.UndeleteByIdsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
    name: UndeleteByIdsAsync
    nameWithType: ITicketAgent.UndeleteByIdsAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.UndeleteByIdsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.ResolveTicketIdAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.ResolveTicketIdAsync
  isExternal: true
  name: ResolveTicketIdAsync
  nameWithType: TicketAgent.ResolveTicketIdAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.ResolveTicketIdAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.ResolveTicketIdAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.ResolveTicketIdAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: ResolveTicketIdAsync(Int32, RequestOptions)
  nameWithType: ITicketAgent.ResolveTicketIdAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.ResolveTicketIdAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.ResolveTicketIdAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: ResolveTicketIdAsync
    nameWithType: ITicketAgent.ResolveTicketIdAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.ResolveTicketIdAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.ResolveTicketIdAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: ResolveTicketIdAsync
    nameWithType: ITicketAgent.ResolveTicketIdAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.ResolveTicketIdAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: '!:System.Threading.Tasks.Task{System.Int32}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  nameWithType.vb: Task(Of Int32)
  fullName.vb: System.Threading.Tasks.Task(Of System.Int32)
  name.vb: Task(Of Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.BatchForwardAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.BatchForwardAsync
  isExternal: true
  name: BatchForwardAsync
  nameWithType: TicketAgent.BatchForwardAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.BatchForwardAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.BatchForwardAsync(System.Int32[],System.String[],System.String[],System.String[],System.String,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.BatchForwardAsync(System.Int32[],System.String[],System.String[],System.String[],System.String,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: BatchForwardAsync(Int32[], String[], String[], String[], String, Boolean, RequestOptions)
  nameWithType: ITicketAgent.BatchForwardAsync(Int32[], String[], String[], String[], String, Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.BatchForwardAsync(System.Int32[], System.String[], System.String[], System.String[], System.String, System.Boolean, SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: ITicketAgent.BatchForwardAsync(Int32(), String(), String(), String(), String, Boolean, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.ITicketAgent.BatchForwardAsync(System.Int32(), System.String(), System.String(), System.String(), System.String, System.Boolean, SuperOffice.WebApi.RequestOptions)
  name.vb: BatchForwardAsync(Int32(), String(), String(), String(), String, Boolean, RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.BatchForwardAsync(System.Int32[],System.String[],System.String[],System.String[],System.String,System.Boolean,SuperOffice.WebApi.RequestOptions)
    name: BatchForwardAsync
    nameWithType: ITicketAgent.BatchForwardAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.BatchForwardAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.BatchForwardAsync(System.Int32[],System.String[],System.String[],System.String[],System.String,System.Boolean,SuperOffice.WebApi.RequestOptions)
    name: BatchForwardAsync
    nameWithType: ITicketAgent.BatchForwardAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.BatchForwardAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.WebApi.Agents.TicketAgent.BatchReplyAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.BatchReplyAsync
  isExternal: true
  name: BatchReplyAsync
  nameWithType: TicketAgent.BatchReplyAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.BatchReplyAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.BatchReplyAsync(SuperOffice.WebApi.Data.TicketBatchReplyData,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.BatchReplyAsync(SuperOffice.WebApi.Data.TicketBatchReplyData,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: BatchReplyAsync(TicketBatchReplyData, RequestOptions)
  nameWithType: ITicketAgent.BatchReplyAsync(TicketBatchReplyData, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.BatchReplyAsync(SuperOffice.WebApi.Data.TicketBatchReplyData, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.BatchReplyAsync(SuperOffice.WebApi.Data.TicketBatchReplyData,SuperOffice.WebApi.RequestOptions)
    name: BatchReplyAsync
    nameWithType: ITicketAgent.BatchReplyAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.BatchReplyAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.Data.TicketBatchReplyData
    name: TicketBatchReplyData
    nameWithType: TicketBatchReplyData
    fullName: SuperOffice.WebApi.Data.TicketBatchReplyData
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.BatchReplyAsync(SuperOffice.WebApi.Data.TicketBatchReplyData,SuperOffice.WebApi.RequestOptions)
    name: BatchReplyAsync
    nameWithType: ITicketAgent.BatchReplyAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.BatchReplyAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.Data.TicketBatchReplyData
    name: TicketBatchReplyData
    nameWithType: TicketBatchReplyData
    fullName: SuperOffice.WebApi.Data.TicketBatchReplyData
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Data.TicketBatchReplyData
  commentId: T:SuperOffice.WebApi.Data.TicketBatchReplyData
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: TicketBatchReplyData
  nameWithType: TicketBatchReplyData
  fullName: SuperOffice.WebApi.Data.TicketBatchReplyData
- uid: SuperOffice.WebApi.Agents.TicketAgent.ClearNotifyAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.ClearNotifyAsync
  isExternal: true
  name: ClearNotifyAsync
  nameWithType: TicketAgent.ClearNotifyAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.ClearNotifyAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.ClearNotifyAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.ClearNotifyAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: ClearNotifyAsync(Int32[], RequestOptions)
  nameWithType: ITicketAgent.ClearNotifyAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.ClearNotifyAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: ITicketAgent.ClearNotifyAsync(Int32(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.ITicketAgent.ClearNotifyAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: ClearNotifyAsync(Int32(), RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.ClearNotifyAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
    name: ClearNotifyAsync
    nameWithType: ITicketAgent.ClearNotifyAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.ClearNotifyAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.ClearNotifyAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
    name: ClearNotifyAsync
    nameWithType: ITicketAgent.ClearNotifyAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.ClearNotifyAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.GetTicketMessageEntitiesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.GetTicketMessageEntitiesAsync
  isExternal: true
  name: GetTicketMessageEntitiesAsync
  nameWithType: TicketAgent.GetTicketMessageEntitiesAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.GetTicketMessageEntitiesAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketMessageEntitiesAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.GetTicketMessageEntitiesAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: GetTicketMessageEntitiesAsync(Int32, Int32[], RequestOptions)
  nameWithType: ITicketAgent.GetTicketMessageEntitiesAsync(Int32, Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketMessageEntitiesAsync(System.Int32, System.Int32[], SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: ITicketAgent.GetTicketMessageEntitiesAsync(Int32, Int32(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketMessageEntitiesAsync(System.Int32, System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetTicketMessageEntitiesAsync(Int32, Int32(), RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketMessageEntitiesAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
    name: GetTicketMessageEntitiesAsync
    nameWithType: ITicketAgent.GetTicketMessageEntitiesAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketMessageEntitiesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketMessageEntitiesAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
    name: GetTicketMessageEntitiesAsync
    nameWithType: ITicketAgent.GetTicketMessageEntitiesAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketMessageEntitiesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketMessageEntity[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketMessageEntity[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<TicketMessageEntity[]>
  nameWithType: Task<TicketMessageEntity[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.TicketMessageEntity[]>
  nameWithType.vb: Task(Of TicketMessageEntity())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.TicketMessageEntity())
  name.vb: Task(Of TicketMessageEntity())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.TicketMessageEntity
    name: TicketMessageEntity
    nameWithType: TicketMessageEntity
    fullName: SuperOffice.WebApi.Data.TicketMessageEntity
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.TicketMessageEntity
    name: TicketMessageEntity
    nameWithType: TicketMessageEntity
    fullName: SuperOffice.WebApi.Data.TicketMessageEntity
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.CreateDefaultForTicketTypeAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.CreateDefaultForTicketTypeAsync
  isExternal: true
  name: CreateDefaultForTicketTypeAsync
  nameWithType: TicketAgent.CreateDefaultForTicketTypeAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.CreateDefaultForTicketTypeAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.CreateDefaultForTicketTypeAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.CreateDefaultForTicketTypeAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: CreateDefaultForTicketTypeAsync(Int32, RequestOptions)
  nameWithType: ITicketAgent.CreateDefaultForTicketTypeAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.CreateDefaultForTicketTypeAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.CreateDefaultForTicketTypeAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: CreateDefaultForTicketTypeAsync
    nameWithType: ITicketAgent.CreateDefaultForTicketTypeAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.CreateDefaultForTicketTypeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.CreateDefaultForTicketTypeAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: CreateDefaultForTicketTypeAsync
    nameWithType: ITicketAgent.CreateDefaultForTicketTypeAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.CreateDefaultForTicketTypeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.DoEscalatingAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.DoEscalatingAsync
  isExternal: true
  name: DoEscalatingAsync
  nameWithType: TicketAgent.DoEscalatingAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.DoEscalatingAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.DoEscalatingAsync(System.Int32,SuperOffice.WebApi.Data.TicketPriorityEscalateAction,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.DoEscalatingAsync(System.Int32,SuperOffice.WebApi.Data.TicketPriorityEscalateAction,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: DoEscalatingAsync(Int32, TicketPriorityEscalateAction, RequestOptions)
  nameWithType: ITicketAgent.DoEscalatingAsync(Int32, TicketPriorityEscalateAction, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.DoEscalatingAsync(System.Int32, SuperOffice.WebApi.Data.TicketPriorityEscalateAction, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.DoEscalatingAsync(System.Int32,SuperOffice.WebApi.Data.TicketPriorityEscalateAction,SuperOffice.WebApi.RequestOptions)
    name: DoEscalatingAsync
    nameWithType: ITicketAgent.DoEscalatingAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.DoEscalatingAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.TicketPriorityEscalateAction
    name: TicketPriorityEscalateAction
    nameWithType: TicketPriorityEscalateAction
    fullName: SuperOffice.WebApi.Data.TicketPriorityEscalateAction
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.DoEscalatingAsync(System.Int32,SuperOffice.WebApi.Data.TicketPriorityEscalateAction,SuperOffice.WebApi.RequestOptions)
    name: DoEscalatingAsync
    nameWithType: ITicketAgent.DoEscalatingAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.DoEscalatingAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.TicketPriorityEscalateAction
    name: TicketPriorityEscalateAction
    nameWithType: TicketPriorityEscalateAction
    fullName: SuperOffice.WebApi.Data.TicketPriorityEscalateAction
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Data.TicketPriorityEscalateAction
  commentId: T:SuperOffice.WebApi.Data.TicketPriorityEscalateAction
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: TicketPriorityEscalateAction
  nameWithType: TicketPriorityEscalateAction
  fullName: SuperOffice.WebApi.Data.TicketPriorityEscalateAction
- uid: SuperOffice.WebApi.Agents.TicketAgent.GetTicketMessageAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.GetTicketMessageAsync
  isExternal: true
  name: GetTicketMessageAsync
  nameWithType: TicketAgent.GetTicketMessageAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.GetTicketMessageAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketMessageAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.GetTicketMessageAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: GetTicketMessageAsync(Int32, RequestOptions)
  nameWithType: ITicketAgent.GetTicketMessageAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketMessageAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketMessageAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetTicketMessageAsync
    nameWithType: ITicketAgent.GetTicketMessageAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketMessageAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketMessageAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetTicketMessageAsync
    nameWithType: ITicketAgent.GetTicketMessageAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketMessageAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketMessage}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketMessage}'
  definition: System.Threading.Tasks.Task`1
  name: Task<TicketMessage>
  nameWithType: Task<TicketMessage>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.TicketMessage>
  nameWithType.vb: Task(Of TicketMessage)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.TicketMessage)
  name.vb: Task(Of TicketMessage)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.TicketMessage
    name: TicketMessage
    nameWithType: TicketMessage
    fullName: SuperOffice.WebApi.Data.TicketMessage
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.TicketMessage
    name: TicketMessage
    nameWithType: TicketMessage
    fullName: SuperOffice.WebApi.Data.TicketMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.GetTicketMessageEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.GetTicketMessageEntityAsync
  isExternal: true
  name: GetTicketMessageEntityAsync
  nameWithType: TicketAgent.GetTicketMessageEntityAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.GetTicketMessageEntityAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketMessageEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.GetTicketMessageEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: GetTicketMessageEntityAsync(Int32, RequestOptions)
  nameWithType: ITicketAgent.GetTicketMessageEntityAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketMessageEntityAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketMessageEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetTicketMessageEntityAsync
    nameWithType: ITicketAgent.GetTicketMessageEntityAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketMessageEntityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketMessageEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetTicketMessageEntityAsync
    nameWithType: ITicketAgent.GetTicketMessageEntityAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketMessageEntityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.DeleteTicketMessageEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.DeleteTicketMessageEntityAsync
  isExternal: true
  name: DeleteTicketMessageEntityAsync
  nameWithType: TicketAgent.DeleteTicketMessageEntityAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.DeleteTicketMessageEntityAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.DeleteTicketMessageEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.DeleteTicketMessageEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: DeleteTicketMessageEntityAsync(Int32, RequestOptions)
  nameWithType: ITicketAgent.DeleteTicketMessageEntityAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.DeleteTicketMessageEntityAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.DeleteTicketMessageEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: DeleteTicketMessageEntityAsync
    nameWithType: ITicketAgent.DeleteTicketMessageEntityAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.DeleteTicketMessageEntityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.DeleteTicketMessageEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: DeleteTicketMessageEntityAsync
    nameWithType: ITicketAgent.DeleteTicketMessageEntityAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.DeleteTicketMessageEntityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.SanitizeMailContentAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.SanitizeMailContentAsync
  isExternal: true
  name: SanitizeMailContentAsync
  nameWithType: TicketAgent.SanitizeMailContentAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.SanitizeMailContentAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.SanitizeMailContentAsync(System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.SanitizeMailContentAsync(System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: SanitizeMailContentAsync(String, RequestOptions)
  nameWithType: ITicketAgent.SanitizeMailContentAsync(String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.SanitizeMailContentAsync(System.String, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.SanitizeMailContentAsync(System.String,SuperOffice.WebApi.RequestOptions)
    name: SanitizeMailContentAsync
    nameWithType: ITicketAgent.SanitizeMailContentAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.SanitizeMailContentAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.SanitizeMailContentAsync(System.String,SuperOffice.WebApi.RequestOptions)
    name: SanitizeMailContentAsync
    nameWithType: ITicketAgent.SanitizeMailContentAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.SanitizeMailContentAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.SanitizeMailContentWithOptionsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.SanitizeMailContentWithOptionsAsync
  isExternal: true
  name: SanitizeMailContentWithOptionsAsync
  nameWithType: TicketAgent.SanitizeMailContentWithOptionsAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.SanitizeMailContentWithOptionsAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.SanitizeMailContentWithOptionsAsync(System.String,SuperOffice.WebApi.Data.HtmlSanitizerOptions,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.SanitizeMailContentWithOptionsAsync(System.String,SuperOffice.WebApi.Data.HtmlSanitizerOptions,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: SanitizeMailContentWithOptionsAsync(String, HtmlSanitizerOptions, RequestOptions)
  nameWithType: ITicketAgent.SanitizeMailContentWithOptionsAsync(String, HtmlSanitizerOptions, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.SanitizeMailContentWithOptionsAsync(System.String, SuperOffice.WebApi.Data.HtmlSanitizerOptions, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.SanitizeMailContentWithOptionsAsync(System.String,SuperOffice.WebApi.Data.HtmlSanitizerOptions,SuperOffice.WebApi.RequestOptions)
    name: SanitizeMailContentWithOptionsAsync
    nameWithType: ITicketAgent.SanitizeMailContentWithOptionsAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.SanitizeMailContentWithOptionsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.HtmlSanitizerOptions
    name: HtmlSanitizerOptions
    nameWithType: HtmlSanitizerOptions
    fullName: SuperOffice.WebApi.Data.HtmlSanitizerOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.SanitizeMailContentWithOptionsAsync(System.String,SuperOffice.WebApi.Data.HtmlSanitizerOptions,SuperOffice.WebApi.RequestOptions)
    name: SanitizeMailContentWithOptionsAsync
    nameWithType: ITicketAgent.SanitizeMailContentWithOptionsAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.SanitizeMailContentWithOptionsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.HtmlSanitizerOptions
    name: HtmlSanitizerOptions
    nameWithType: HtmlSanitizerOptions
    fullName: SuperOffice.WebApi.Data.HtmlSanitizerOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Data.HtmlSanitizerOptions
  commentId: T:SuperOffice.WebApi.Data.HtmlSanitizerOptions
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: HtmlSanitizerOptions
  nameWithType: HtmlSanitizerOptions
  fullName: SuperOffice.WebApi.Data.HtmlSanitizerOptions
- uid: SuperOffice.WebApi.Agents.TicketAgent.SanitizeMailContentsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.SanitizeMailContentsAsync
  isExternal: true
  name: SanitizeMailContentsAsync
  nameWithType: TicketAgent.SanitizeMailContentsAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.SanitizeMailContentsAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.SanitizeMailContentsAsync(System.String[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.SanitizeMailContentsAsync(System.String[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: SanitizeMailContentsAsync(String[], RequestOptions)
  nameWithType: ITicketAgent.SanitizeMailContentsAsync(String[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.SanitizeMailContentsAsync(System.String[], SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: ITicketAgent.SanitizeMailContentsAsync(String(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.ITicketAgent.SanitizeMailContentsAsync(System.String(), SuperOffice.WebApi.RequestOptions)
  name.vb: SanitizeMailContentsAsync(String(), RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.SanitizeMailContentsAsync(System.String[],SuperOffice.WebApi.RequestOptions)
    name: SanitizeMailContentsAsync
    nameWithType: ITicketAgent.SanitizeMailContentsAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.SanitizeMailContentsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.SanitizeMailContentsAsync(System.String[],SuperOffice.WebApi.RequestOptions)
    name: SanitizeMailContentsAsync
    nameWithType: ITicketAgent.SanitizeMailContentsAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.SanitizeMailContentsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.String[]}
  commentId: '!:System.Threading.Tasks.Task{System.String[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<String[]>
  nameWithType: Task<String[]>
  fullName: System.Threading.Tasks.Task<System.String[]>
  nameWithType.vb: Task(Of String())
  fullName.vb: System.Threading.Tasks.Task(Of System.String())
  name.vb: Task(Of String())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.Html2TextAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.Html2TextAsync
  isExternal: true
  name: Html2TextAsync
  nameWithType: TicketAgent.Html2TextAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.Html2TextAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.Html2TextAsync(System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.Html2TextAsync(System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: Html2TextAsync(String, RequestOptions)
  nameWithType: ITicketAgent.Html2TextAsync(String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.Html2TextAsync(System.String, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.Html2TextAsync(System.String,SuperOffice.WebApi.RequestOptions)
    name: Html2TextAsync
    nameWithType: ITicketAgent.Html2TextAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.Html2TextAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.Html2TextAsync(System.String,SuperOffice.WebApi.RequestOptions)
    name: Html2TextAsync
    nameWithType: ITicketAgent.Html2TextAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.Html2TextAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.GetAttachmentInfoAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.GetAttachmentInfoAsync
  isExternal: true
  name: GetAttachmentInfoAsync
  nameWithType: TicketAgent.GetAttachmentInfoAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.GetAttachmentInfoAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.GetAttachmentInfoAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.GetAttachmentInfoAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: GetAttachmentInfoAsync(Int32, RequestOptions)
  nameWithType: ITicketAgent.GetAttachmentInfoAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetAttachmentInfoAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.GetAttachmentInfoAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetAttachmentInfoAsync
    nameWithType: ITicketAgent.GetAttachmentInfoAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetAttachmentInfoAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.GetAttachmentInfoAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetAttachmentInfoAsync
    nameWithType: ITicketAgent.GetAttachmentInfoAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetAttachmentInfoAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.GetAttachmentInfoNonInlineAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.GetAttachmentInfoNonInlineAsync
  isExternal: true
  name: GetAttachmentInfoNonInlineAsync
  nameWithType: TicketAgent.GetAttachmentInfoNonInlineAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.GetAttachmentInfoNonInlineAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.GetAttachmentInfoNonInlineAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.GetAttachmentInfoNonInlineAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: GetAttachmentInfoNonInlineAsync(Int32, RequestOptions)
  nameWithType: ITicketAgent.GetAttachmentInfoNonInlineAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetAttachmentInfoNonInlineAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.GetAttachmentInfoNonInlineAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetAttachmentInfoNonInlineAsync
    nameWithType: ITicketAgent.GetAttachmentInfoNonInlineAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetAttachmentInfoNonInlineAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.GetAttachmentInfoNonInlineAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetAttachmentInfoNonInlineAsync
    nameWithType: ITicketAgent.GetAttachmentInfoNonInlineAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetAttachmentInfoNonInlineAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.AddAttachmentsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.AddAttachmentsAsync
  isExternal: true
  name: AddAttachmentsAsync
  nameWithType: TicketAgent.AddAttachmentsAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.AddAttachmentsAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.AddAttachmentsAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.AddAttachmentsAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: AddAttachmentsAsync(Int32, Int32[], RequestOptions)
  nameWithType: ITicketAgent.AddAttachmentsAsync(Int32, Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.AddAttachmentsAsync(System.Int32, System.Int32[], SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: ITicketAgent.AddAttachmentsAsync(Int32, Int32(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.ITicketAgent.AddAttachmentsAsync(System.Int32, System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: AddAttachmentsAsync(Int32, Int32(), RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.AddAttachmentsAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
    name: AddAttachmentsAsync
    nameWithType: ITicketAgent.AddAttachmentsAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.AddAttachmentsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.AddAttachmentsAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
    name: AddAttachmentsAsync
    nameWithType: ITicketAgent.AddAttachmentsAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.AddAttachmentsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.RemoveMessageAttachmentsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.RemoveMessageAttachmentsAsync
  isExternal: true
  name: RemoveMessageAttachmentsAsync
  nameWithType: TicketAgent.RemoveMessageAttachmentsAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.RemoveMessageAttachmentsAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.RemoveMessageAttachmentsAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.RemoveMessageAttachmentsAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: RemoveMessageAttachmentsAsync(Int32, Int32[], RequestOptions)
  nameWithType: ITicketAgent.RemoveMessageAttachmentsAsync(Int32, Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.RemoveMessageAttachmentsAsync(System.Int32, System.Int32[], SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: ITicketAgent.RemoveMessageAttachmentsAsync(Int32, Int32(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.ITicketAgent.RemoveMessageAttachmentsAsync(System.Int32, System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: RemoveMessageAttachmentsAsync(Int32, Int32(), RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.RemoveMessageAttachmentsAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
    name: RemoveMessageAttachmentsAsync
    nameWithType: ITicketAgent.RemoveMessageAttachmentsAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.RemoveMessageAttachmentsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.RemoveMessageAttachmentsAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
    name: RemoveMessageAttachmentsAsync
    nameWithType: ITicketAgent.RemoveMessageAttachmentsAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.RemoveMessageAttachmentsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.GetAttachmentPreviewAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.GetAttachmentPreviewAsync
  isExternal: true
  name: GetAttachmentPreviewAsync
  nameWithType: TicketAgent.GetAttachmentPreviewAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.GetAttachmentPreviewAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.GetAttachmentPreviewAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.GetAttachmentPreviewAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: GetAttachmentPreviewAsync(Int32, RequestOptions)
  nameWithType: ITicketAgent.GetAttachmentPreviewAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetAttachmentPreviewAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.GetAttachmentPreviewAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetAttachmentPreviewAsync
    nameWithType: ITicketAgent.GetAttachmentPreviewAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetAttachmentPreviewAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.GetAttachmentPreviewAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetAttachmentPreviewAsync
    nameWithType: ITicketAgent.GetAttachmentPreviewAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetAttachmentPreviewAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AttachmentPreview}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AttachmentPreview}'
  definition: System.Threading.Tasks.Task`1
  name: Task<AttachmentPreview>
  nameWithType: Task<AttachmentPreview>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.AttachmentPreview>
  nameWithType.vb: Task(Of AttachmentPreview)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.AttachmentPreview)
  name.vb: Task(Of AttachmentPreview)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.AttachmentPreview
    name: AttachmentPreview
    nameWithType: AttachmentPreview
    fullName: SuperOffice.WebApi.Data.AttachmentPreview
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.AttachmentPreview
    name: AttachmentPreview
    nameWithType: AttachmentPreview
    fullName: SuperOffice.WebApi.Data.AttachmentPreview
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.GetPreviewAttachmentStreamAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.GetPreviewAttachmentStreamAsync
  isExternal: true
  name: GetPreviewAttachmentStreamAsync
  nameWithType: TicketAgent.GetPreviewAttachmentStreamAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.GetPreviewAttachmentStreamAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.GetPreviewAttachmentStreamAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.GetPreviewAttachmentStreamAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: GetPreviewAttachmentStreamAsync(Int32, RequestOptions)
  nameWithType: ITicketAgent.GetPreviewAttachmentStreamAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetPreviewAttachmentStreamAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.GetPreviewAttachmentStreamAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetPreviewAttachmentStreamAsync
    nameWithType: ITicketAgent.GetPreviewAttachmentStreamAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetPreviewAttachmentStreamAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.GetPreviewAttachmentStreamAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetPreviewAttachmentStreamAsync
    nameWithType: ITicketAgent.GetPreviewAttachmentStreamAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetPreviewAttachmentStreamAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DocumentPreview}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DocumentPreview}'
  definition: System.Threading.Tasks.Task`1
  name: Task<DocumentPreview>
  nameWithType: Task<DocumentPreview>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.DocumentPreview>
  nameWithType.vb: Task(Of DocumentPreview)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.DocumentPreview)
  name.vb: Task(Of DocumentPreview)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.DocumentPreview
    name: DocumentPreview
    nameWithType: DocumentPreview
    fullName: SuperOffice.WebApi.Data.DocumentPreview
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.DocumentPreview
    name: DocumentPreview
    nameWithType: DocumentPreview
    fullName: SuperOffice.WebApi.Data.DocumentPreview
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.GetRfcAttachmentStreamAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.GetRfcAttachmentStreamAsync
  isExternal: true
  name: GetRfcAttachmentStreamAsync
  nameWithType: TicketAgent.GetRfcAttachmentStreamAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.GetRfcAttachmentStreamAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.GetRfcAttachmentStreamAsync(System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.GetRfcAttachmentStreamAsync(System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: GetRfcAttachmentStreamAsync(Int32, Int32, String, RequestOptions)
  nameWithType: ITicketAgent.GetRfcAttachmentStreamAsync(Int32, Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetRfcAttachmentStreamAsync(System.Int32, System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.GetRfcAttachmentStreamAsync(System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
    name: GetRfcAttachmentStreamAsync
    nameWithType: ITicketAgent.GetRfcAttachmentStreamAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetRfcAttachmentStreamAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.GetRfcAttachmentStreamAsync(System.Int32,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
    name: GetRfcAttachmentStreamAsync
    nameWithType: ITicketAgent.GetRfcAttachmentStreamAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetRfcAttachmentStreamAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.SendTicketMessageAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.SendTicketMessageAsync
  isExternal: true
  name: SendTicketMessageAsync
  nameWithType: TicketAgent.SendTicketMessageAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.SendTicketMessageAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.SendTicketMessageAsync(System.Int32,System.String[],System.String[],System.String[],System.String,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.SendTicketMessageAsync(System.Int32,System.String[],System.String[],System.String[],System.String,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: SendTicketMessageAsync(Int32, String[], String[], String[], String, Int32, String, RequestOptions)
  nameWithType: ITicketAgent.SendTicketMessageAsync(Int32, String[], String[], String[], String, Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.SendTicketMessageAsync(System.Int32, System.String[], System.String[], System.String[], System.String, System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: ITicketAgent.SendTicketMessageAsync(Int32, String(), String(), String(), String, Int32, String, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.ITicketAgent.SendTicketMessageAsync(System.Int32, System.String(), System.String(), System.String(), System.String, System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  name.vb: SendTicketMessageAsync(Int32, String(), String(), String(), String, Int32, String, RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.SendTicketMessageAsync(System.Int32,System.String[],System.String[],System.String[],System.String,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
    name: SendTicketMessageAsync
    nameWithType: ITicketAgent.SendTicketMessageAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.SendTicketMessageAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.SendTicketMessageAsync(System.Int32,System.String[],System.String[],System.String[],System.String,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
    name: SendTicketMessageAsync
    nameWithType: ITicketAgent.SendTicketMessageAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.SendTicketMessageAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.SendTicketMessageSmsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.SendTicketMessageSmsAsync
  isExternal: true
  name: SendTicketMessageSmsAsync
  nameWithType: TicketAgent.SendTicketMessageSmsAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.SendTicketMessageSmsAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.SendTicketMessageSmsAsync(System.Int32,System.Int32,System.String[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.SendTicketMessageSmsAsync(System.Int32,System.Int32,System.String[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: SendTicketMessageSmsAsync(Int32, Int32, String[], RequestOptions)
  nameWithType: ITicketAgent.SendTicketMessageSmsAsync(Int32, Int32, String[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.SendTicketMessageSmsAsync(System.Int32, System.Int32, System.String[], SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: ITicketAgent.SendTicketMessageSmsAsync(Int32, Int32, String(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.ITicketAgent.SendTicketMessageSmsAsync(System.Int32, System.Int32, System.String(), SuperOffice.WebApi.RequestOptions)
  name.vb: SendTicketMessageSmsAsync(Int32, Int32, String(), RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.SendTicketMessageSmsAsync(System.Int32,System.Int32,System.String[],SuperOffice.WebApi.RequestOptions)
    name: SendTicketMessageSmsAsync
    nameWithType: ITicketAgent.SendTicketMessageSmsAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.SendTicketMessageSmsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.SendTicketMessageSmsAsync(System.Int32,System.Int32,System.String[],SuperOffice.WebApi.RequestOptions)
    name: SendTicketMessageSmsAsync
    nameWithType: ITicketAgent.SendTicketMessageSmsAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.SendTicketMessageSmsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.SetTicketMessageImportantAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.SetTicketMessageImportantAsync
  isExternal: true
  name: SetTicketMessageImportantAsync
  nameWithType: TicketAgent.SetTicketMessageImportantAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.SetTicketMessageImportantAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.SetTicketMessageImportantAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.SetTicketMessageImportantAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: SetTicketMessageImportantAsync(Int32, Boolean, RequestOptions)
  nameWithType: ITicketAgent.SetTicketMessageImportantAsync(Int32, Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.SetTicketMessageImportantAsync(System.Int32, System.Boolean, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.SetTicketMessageImportantAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
    name: SetTicketMessageImportantAsync
    nameWithType: ITicketAgent.SetTicketMessageImportantAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.SetTicketMessageImportantAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.SetTicketMessageImportantAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
    name: SetTicketMessageImportantAsync
    nameWithType: ITicketAgent.SetTicketMessageImportantAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.SetTicketMessageImportantAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.CalculateMessageRecipientsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.CalculateMessageRecipientsAsync
  isExternal: true
  name: CalculateMessageRecipientsAsync
  nameWithType: TicketAgent.CalculateMessageRecipientsAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.CalculateMessageRecipientsAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.CalculateMessageRecipientsAsync(System.Int32,SuperOffice.WebApi.Data.MessageActionType,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.CalculateMessageRecipientsAsync(System.Int32,SuperOffice.WebApi.Data.MessageActionType,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: CalculateMessageRecipientsAsync(Int32, MessageActionType, Int32, RequestOptions)
  nameWithType: ITicketAgent.CalculateMessageRecipientsAsync(Int32, MessageActionType, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.CalculateMessageRecipientsAsync(System.Int32, SuperOffice.WebApi.Data.MessageActionType, System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.CalculateMessageRecipientsAsync(System.Int32,SuperOffice.WebApi.Data.MessageActionType,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: CalculateMessageRecipientsAsync
    nameWithType: ITicketAgent.CalculateMessageRecipientsAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.CalculateMessageRecipientsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.MessageActionType
    name: MessageActionType
    nameWithType: MessageActionType
    fullName: SuperOffice.WebApi.Data.MessageActionType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.CalculateMessageRecipientsAsync(System.Int32,SuperOffice.WebApi.Data.MessageActionType,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: CalculateMessageRecipientsAsync
    nameWithType: ITicketAgent.CalculateMessageRecipientsAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.CalculateMessageRecipientsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.MessageActionType
    name: MessageActionType
    nameWithType: MessageActionType
    fullName: SuperOffice.WebApi.Data.MessageActionType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Data.MessageActionType
  commentId: T:SuperOffice.WebApi.Data.MessageActionType
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: MessageActionType
  nameWithType: MessageActionType
  fullName: SuperOffice.WebApi.Data.MessageActionType
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Recipient[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Recipient[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Recipient[]>
  nameWithType: Task<Recipient[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.Recipient[]>
  nameWithType.vb: Task(Of Recipient())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.Recipient())
  name.vb: Task(Of Recipient())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.Recipient
    name: Recipient
    nameWithType: Recipient
    fullName: SuperOffice.WebApi.Data.Recipient
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.Recipient
    name: Recipient
    nameWithType: Recipient
    fullName: SuperOffice.WebApi.Data.Recipient
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.SaveTicketMessageEntityWithNotifyAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.SaveTicketMessageEntityWithNotifyAsync
  isExternal: true
  name: SaveTicketMessageEntityWithNotifyAsync
  nameWithType: TicketAgent.SaveTicketMessageEntityWithNotifyAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.SaveTicketMessageEntityWithNotifyAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.SaveTicketMessageEntityWithNotifyAsync(SuperOffice.WebApi.Data.TicketMessageEntity,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.SaveTicketMessageEntityWithNotifyAsync(SuperOffice.WebApi.Data.TicketMessageEntity,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: SaveTicketMessageEntityWithNotifyAsync(TicketMessageEntity, Boolean, RequestOptions)
  nameWithType: ITicketAgent.SaveTicketMessageEntityWithNotifyAsync(TicketMessageEntity, Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.SaveTicketMessageEntityWithNotifyAsync(SuperOffice.WebApi.Data.TicketMessageEntity, System.Boolean, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.SaveTicketMessageEntityWithNotifyAsync(SuperOffice.WebApi.Data.TicketMessageEntity,System.Boolean,SuperOffice.WebApi.RequestOptions)
    name: SaveTicketMessageEntityWithNotifyAsync
    nameWithType: ITicketAgent.SaveTicketMessageEntityWithNotifyAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.SaveTicketMessageEntityWithNotifyAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.Data.TicketMessageEntity
    name: TicketMessageEntity
    nameWithType: TicketMessageEntity
    fullName: SuperOffice.WebApi.Data.TicketMessageEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.SaveTicketMessageEntityWithNotifyAsync(SuperOffice.WebApi.Data.TicketMessageEntity,System.Boolean,SuperOffice.WebApi.RequestOptions)
    name: SaveTicketMessageEntityWithNotifyAsync
    nameWithType: ITicketAgent.SaveTicketMessageEntityWithNotifyAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.SaveTicketMessageEntityWithNotifyAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.Data.TicketMessageEntity
    name: TicketMessageEntity
    nameWithType: TicketMessageEntity
    fullName: SuperOffice.WebApi.Data.TicketMessageEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.SaveTicketMessageEntityWithOptionsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.SaveTicketMessageEntityWithOptionsAsync
  isExternal: true
  name: SaveTicketMessageEntityWithOptionsAsync
  nameWithType: TicketAgent.SaveTicketMessageEntityWithOptionsAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.SaveTicketMessageEntityWithOptionsAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.SaveTicketMessageEntityWithOptionsAsync(SuperOffice.WebApi.Data.TicketMessageEntity,System.Boolean,System.Int32[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.SaveTicketMessageEntityWithOptionsAsync(SuperOffice.WebApi.Data.TicketMessageEntity,System.Boolean,System.Int32[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: SaveTicketMessageEntityWithOptionsAsync(TicketMessageEntity, Boolean, Int32[], Boolean, RequestOptions)
  nameWithType: ITicketAgent.SaveTicketMessageEntityWithOptionsAsync(TicketMessageEntity, Boolean, Int32[], Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.SaveTicketMessageEntityWithOptionsAsync(SuperOffice.WebApi.Data.TicketMessageEntity, System.Boolean, System.Int32[], System.Boolean, SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: ITicketAgent.SaveTicketMessageEntityWithOptionsAsync(TicketMessageEntity, Boolean, Int32(), Boolean, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.ITicketAgent.SaveTicketMessageEntityWithOptionsAsync(SuperOffice.WebApi.Data.TicketMessageEntity, System.Boolean, System.Int32(), System.Boolean, SuperOffice.WebApi.RequestOptions)
  name.vb: SaveTicketMessageEntityWithOptionsAsync(TicketMessageEntity, Boolean, Int32(), Boolean, RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.SaveTicketMessageEntityWithOptionsAsync(SuperOffice.WebApi.Data.TicketMessageEntity,System.Boolean,System.Int32[],System.Boolean,SuperOffice.WebApi.RequestOptions)
    name: SaveTicketMessageEntityWithOptionsAsync
    nameWithType: ITicketAgent.SaveTicketMessageEntityWithOptionsAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.SaveTicketMessageEntityWithOptionsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.Data.TicketMessageEntity
    name: TicketMessageEntity
    nameWithType: TicketMessageEntity
    fullName: SuperOffice.WebApi.Data.TicketMessageEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.SaveTicketMessageEntityWithOptionsAsync(SuperOffice.WebApi.Data.TicketMessageEntity,System.Boolean,System.Int32[],System.Boolean,SuperOffice.WebApi.RequestOptions)
    name: SaveTicketMessageEntityWithOptionsAsync
    nameWithType: ITicketAgent.SaveTicketMessageEntityWithOptionsAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.SaveTicketMessageEntityWithOptionsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.Data.TicketMessageEntity
    name: TicketMessageEntity
    nameWithType: TicketMessageEntity
    fullName: SuperOffice.WebApi.Data.TicketMessageEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.GetDefaultMessageContentAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.GetDefaultMessageContentAsync
  isExternal: true
  name: GetDefaultMessageContentAsync
  nameWithType: TicketAgent.GetDefaultMessageContentAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.GetDefaultMessageContentAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.GetDefaultMessageContentAsync(System.Int32,SuperOffice.WebApi.Data.MessageActionType,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.GetDefaultMessageContentAsync(System.Int32,SuperOffice.WebApi.Data.MessageActionType,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: GetDefaultMessageContentAsync(Int32, MessageActionType, Int32, RequestOptions)
  nameWithType: ITicketAgent.GetDefaultMessageContentAsync(Int32, MessageActionType, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetDefaultMessageContentAsync(System.Int32, SuperOffice.WebApi.Data.MessageActionType, System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.GetDefaultMessageContentAsync(System.Int32,SuperOffice.WebApi.Data.MessageActionType,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetDefaultMessageContentAsync
    nameWithType: ITicketAgent.GetDefaultMessageContentAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetDefaultMessageContentAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.MessageActionType
    name: MessageActionType
    nameWithType: MessageActionType
    fullName: SuperOffice.WebApi.Data.MessageActionType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.GetDefaultMessageContentAsync(System.Int32,SuperOffice.WebApi.Data.MessageActionType,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetDefaultMessageContentAsync
    nameWithType: ITicketAgent.GetDefaultMessageContentAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetDefaultMessageContentAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.MessageActionType
    name: MessageActionType
    nameWithType: MessageActionType
    fullName: SuperOffice.WebApi.Data.MessageActionType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.GetDefaultMessageContentFullAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.GetDefaultMessageContentFullAsync
  isExternal: true
  name: GetDefaultMessageContentFullAsync
  nameWithType: TicketAgent.GetDefaultMessageContentFullAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.GetDefaultMessageContentFullAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.GetDefaultMessageContentFullAsync(System.Int32,SuperOffice.WebApi.Data.MessageActionType,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.GetDefaultMessageContentFullAsync(System.Int32,SuperOffice.WebApi.Data.MessageActionType,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: GetDefaultMessageContentFullAsync(Int32, MessageActionType, Int32, Int32, RequestOptions)
  nameWithType: ITicketAgent.GetDefaultMessageContentFullAsync(Int32, MessageActionType, Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetDefaultMessageContentFullAsync(System.Int32, SuperOffice.WebApi.Data.MessageActionType, System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.GetDefaultMessageContentFullAsync(System.Int32,SuperOffice.WebApi.Data.MessageActionType,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetDefaultMessageContentFullAsync
    nameWithType: ITicketAgent.GetDefaultMessageContentFullAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetDefaultMessageContentFullAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.MessageActionType
    name: MessageActionType
    nameWithType: MessageActionType
    fullName: SuperOffice.WebApi.Data.MessageActionType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.GetDefaultMessageContentFullAsync(System.Int32,SuperOffice.WebApi.Data.MessageActionType,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
    name: GetDefaultMessageContentFullAsync
    nameWithType: ITicketAgent.GetDefaultMessageContentFullAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetDefaultMessageContentFullAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.MessageActionType
    name: MessageActionType
    nameWithType: MessageActionType
    fullName: SuperOffice.WebApi.Data.MessageActionType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketMessageContent}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketMessageContent}'
  definition: System.Threading.Tasks.Task`1
  name: Task<TicketMessageContent>
  nameWithType: Task<TicketMessageContent>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.TicketMessageContent>
  nameWithType.vb: Task(Of TicketMessageContent)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.TicketMessageContent)
  name.vb: Task(Of TicketMessageContent)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.TicketMessageContent
    name: TicketMessageContent
    nameWithType: TicketMessageContent
    fullName: SuperOffice.WebApi.Data.TicketMessageContent
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.TicketMessageContent
    name: TicketMessageContent
    nameWithType: TicketMessageContent
    fullName: SuperOffice.WebApi.Data.TicketMessageContent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.GetDefaultMessageContentWithOptionsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.GetDefaultMessageContentWithOptionsAsync
  isExternal: true
  name: GetDefaultMessageContentWithOptionsAsync
  nameWithType: TicketAgent.GetDefaultMessageContentWithOptionsAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.GetDefaultMessageContentWithOptionsAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.GetDefaultMessageContentWithOptionsAsync(System.Int32,SuperOffice.WebApi.Data.MessageActionType,System.Int32,System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.GetDefaultMessageContentWithOptionsAsync(System.Int32,SuperOffice.WebApi.Data.MessageActionType,System.Int32,System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: GetDefaultMessageContentWithOptionsAsync(Int32, MessageActionType, Int32, Int32, Boolean, RequestOptions)
  nameWithType: ITicketAgent.GetDefaultMessageContentWithOptionsAsync(Int32, MessageActionType, Int32, Int32, Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetDefaultMessageContentWithOptionsAsync(System.Int32, SuperOffice.WebApi.Data.MessageActionType, System.Int32, System.Int32, System.Boolean, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.GetDefaultMessageContentWithOptionsAsync(System.Int32,SuperOffice.WebApi.Data.MessageActionType,System.Int32,System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
    name: GetDefaultMessageContentWithOptionsAsync
    nameWithType: ITicketAgent.GetDefaultMessageContentWithOptionsAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetDefaultMessageContentWithOptionsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.MessageActionType
    name: MessageActionType
    nameWithType: MessageActionType
    fullName: SuperOffice.WebApi.Data.MessageActionType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.GetDefaultMessageContentWithOptionsAsync(System.Int32,SuperOffice.WebApi.Data.MessageActionType,System.Int32,System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
    name: GetDefaultMessageContentWithOptionsAsync
    nameWithType: ITicketAgent.GetDefaultMessageContentWithOptionsAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetDefaultMessageContentWithOptionsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.MessageActionType
    name: MessageActionType
    nameWithType: MessageActionType
    fullName: SuperOffice.WebApi.Data.MessageActionType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.GetTicketMessageWithEmbeddedDataAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.GetTicketMessageWithEmbeddedDataAsync
  isExternal: true
  name: GetTicketMessageWithEmbeddedDataAsync
  nameWithType: TicketAgent.GetTicketMessageWithEmbeddedDataAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.GetTicketMessageWithEmbeddedDataAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketMessageWithEmbeddedDataAsync(System.Int32,SuperOffice.WebApi.Data.ImageEmbedType,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.GetTicketMessageWithEmbeddedDataAsync(System.Int32,SuperOffice.WebApi.Data.ImageEmbedType,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: GetTicketMessageWithEmbeddedDataAsync(Int32, ImageEmbedType, RequestOptions)
  nameWithType: ITicketAgent.GetTicketMessageWithEmbeddedDataAsync(Int32, ImageEmbedType, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketMessageWithEmbeddedDataAsync(System.Int32, SuperOffice.WebApi.Data.ImageEmbedType, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketMessageWithEmbeddedDataAsync(System.Int32,SuperOffice.WebApi.Data.ImageEmbedType,SuperOffice.WebApi.RequestOptions)
    name: GetTicketMessageWithEmbeddedDataAsync
    nameWithType: ITicketAgent.GetTicketMessageWithEmbeddedDataAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketMessageWithEmbeddedDataAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.ImageEmbedType
    name: ImageEmbedType
    nameWithType: ImageEmbedType
    fullName: SuperOffice.WebApi.Data.ImageEmbedType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketMessageWithEmbeddedDataAsync(System.Int32,SuperOffice.WebApi.Data.ImageEmbedType,SuperOffice.WebApi.RequestOptions)
    name: GetTicketMessageWithEmbeddedDataAsync
    nameWithType: ITicketAgent.GetTicketMessageWithEmbeddedDataAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketMessageWithEmbeddedDataAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.Data.ImageEmbedType
    name: ImageEmbedType
    nameWithType: ImageEmbedType
    fullName: SuperOffice.WebApi.Data.ImageEmbedType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Data.ImageEmbedType
  commentId: T:SuperOffice.WebApi.Data.ImageEmbedType
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: ImageEmbedType
  nameWithType: ImageEmbedType
  fullName: SuperOffice.WebApi.Data.ImageEmbedType
- uid: SuperOffice.WebApi.Agents.TicketAgent.DeleteMessageHeadersAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.DeleteMessageHeadersAsync
  isExternal: true
  name: DeleteMessageHeadersAsync
  nameWithType: TicketAgent.DeleteMessageHeadersAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.DeleteMessageHeadersAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.DeleteMessageHeadersAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.DeleteMessageHeadersAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: DeleteMessageHeadersAsync(Int32[], RequestOptions)
  nameWithType: ITicketAgent.DeleteMessageHeadersAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.DeleteMessageHeadersAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: ITicketAgent.DeleteMessageHeadersAsync(Int32(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.ITicketAgent.DeleteMessageHeadersAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: DeleteMessageHeadersAsync(Int32(), RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.DeleteMessageHeadersAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
    name: DeleteMessageHeadersAsync
    nameWithType: ITicketAgent.DeleteMessageHeadersAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.DeleteMessageHeadersAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.DeleteMessageHeadersAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
    name: DeleteMessageHeadersAsync
    nameWithType: ITicketAgent.DeleteMessageHeadersAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.DeleteMessageHeadersAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.GetTicketMessageWithOptionsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.GetTicketMessageWithOptionsAsync
  isExternal: true
  name: GetTicketMessageWithOptionsAsync
  nameWithType: TicketAgent.GetTicketMessageWithOptionsAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.GetTicketMessageWithOptionsAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketMessageWithOptionsAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.GetTicketMessageWithOptionsAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: GetTicketMessageWithOptionsAsync(Int32, Boolean, RequestOptions)
  nameWithType: ITicketAgent.GetTicketMessageWithOptionsAsync(Int32, Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketMessageWithOptionsAsync(System.Int32, System.Boolean, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketMessageWithOptionsAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
    name: GetTicketMessageWithOptionsAsync
    nameWithType: ITicketAgent.GetTicketMessageWithOptionsAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketMessageWithOptionsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketMessageWithOptionsAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
    name: GetTicketMessageWithOptionsAsync
    nameWithType: ITicketAgent.GetTicketMessageWithOptionsAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketMessageWithOptionsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.TicketAgent.GetTicketSummariesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.TicketAgent.GetTicketSummariesAsync
  isExternal: true
  name: GetTicketSummariesAsync
  nameWithType: TicketAgent.GetTicketSummariesAsync
  fullName: SuperOffice.WebApi.Agents.TicketAgent.GetTicketSummariesAsync
- uid: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketSummariesAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ITicketAgent.GetTicketSummariesAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ITicketAgent
  isExternal: true
  name: GetTicketSummariesAsync(Int32[], RequestOptions)
  nameWithType: ITicketAgent.GetTicketSummariesAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketSummariesAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  nameWithType.vb: ITicketAgent.GetTicketSummariesAsync(Int32(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketSummariesAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetTicketSummariesAsync(Int32(), RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketSummariesAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
    name: GetTicketSummariesAsync
    nameWithType: ITicketAgent.GetTicketSummariesAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketSummariesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketSummariesAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
    name: GetTicketSummariesAsync
    nameWithType: ITicketAgent.GetTicketSummariesAsync
    fullName: SuperOffice.WebApi.Agents.ITicketAgent.GetTicketSummariesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketSummaryItem[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketSummaryItem[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<TicketSummaryItem[]>
  nameWithType: Task<TicketSummaryItem[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.TicketSummaryItem[]>
  nameWithType.vb: Task(Of TicketSummaryItem())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.TicketSummaryItem())
  name.vb: Task(Of TicketSummaryItem())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.TicketSummaryItem
    name: TicketSummaryItem
    nameWithType: TicketSummaryItem
    fullName: SuperOffice.WebApi.Data.TicketSummaryItem
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.TicketSummaryItem
    name: TicketSummaryItem
    nameWithType: TicketSummaryItem
    fullName: SuperOffice.WebApi.Data.TicketSummaryItem
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
