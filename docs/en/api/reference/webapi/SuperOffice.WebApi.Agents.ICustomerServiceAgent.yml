### YamlMime:ManagedReference
items:
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent
  commentId: T:SuperOffice.WebApi.Agents.ICustomerServiceAgent
  id: ICustomerServiceAgent
  parent: SuperOffice.WebApi.Agents
  children:
  - SuperOffice.WebApi.Agents.ICustomerServiceAgent.AddMessageFromMailDataAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ICustomerServiceAgent.CheckIfCustomizedTemplatesAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ICustomerServiceAgent.CheckSymmetricEncryptionAsync(System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ICustomerServiceAgent.CreateDefaultCustomerCenterConfigAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ICustomerServiceAgent.CreateDefaultMailboxEntityAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ICustomerServiceAgent.CreateDefaultSmsConfigAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ICustomerServiceAgent.CreateSessionAsync(System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ICustomerServiceAgent.CreateTicketFromMailDataAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ICustomerServiceAgent.DeleteCustomerCenterConfigAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ICustomerServiceAgent.EventHandlerExistsAsync(SuperOffice.WebApi.Data.EventHandlerType,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ICustomerServiceAgent.ExecuteEventHandlersAsync(SuperOffice.WebApi.Data.EventData,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ICustomerServiceAgent.FindTicketsByTitleOrIdAsync(System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetAllCustomerCenterConfigsAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetCustomerCenterConfigAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetCustomerServiceStartupAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetFaqForCustomerAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetMailboxEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetMailboxesAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetParsedTemplateAsync(System.Int32,System.Int32,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetPreviewFaqEntryAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetPreviewQuickReplyAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetPreviewReplyTemplateAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetProgramUrlAsync(System.String,System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetSmsConfigAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetStatisticsAsync(SuperOffice.WebApi.Data.StatusScreenPanelType[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetSystemTemplateSettingsAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetUnparsedTemplateAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ICustomerServiceAgent.HasChatNotifyAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ICustomerServiceAgent.RemoveSessionAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ICustomerServiceAgent.ReportSessionActiveAsync(System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ICustomerServiceAgent.SaveAllCustomerCenterConfigsAsync(SuperOffice.WebApi.Data.CustomerCenterConfig[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ICustomerServiceAgent.SaveCustomerCenterConfigAsync(SuperOffice.WebApi.Data.CustomerCenterConfig,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ICustomerServiceAgent.SaveMailboxEntityAsync(SuperOffice.WebApi.Data.MailboxEntity,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ICustomerServiceAgent.SaveSmsConfigAsync(SuperOffice.WebApi.Data.SmsConfig,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ICustomerServiceAgent.SaveSystemTemplateSettingsAsync(SuperOffice.WebApi.Data.SystemTemplateSettings,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ICustomerServiceAgent.SessionIsValidAsync(System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ICustomerServiceAgent.TestSmtpServerAsync(System.String,System.String,System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ICustomerServiceAgent.UpdateFeatureTogglesAsync(SuperOffice.WebApi.Data.CsFeatureToggle[],SuperOffice.WebApi.RequestOptions)
  langs:
  - csharp
  - vb
  name: ICustomerServiceAgent
  nameWithType: ICustomerServiceAgent
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent
  type: Interface
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nAgent used for Customer Service methods\n"
  syntax:
    content: 'public interface ICustomerServiceAgent : IDisposable'
    content.vb: >-
      Public Interface ICustomerServiceAgent
          Inherits IDisposable
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.CreateDefaultCustomerCenterConfigAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ICustomerServiceAgent.CreateDefaultCustomerCenterConfigAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultCustomerCenterConfigAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultCustomerCenterConfigAsync(RequestOptions)
  nameWithType: ICustomerServiceAgent.CreateDefaultCustomerCenterConfigAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.CreateDefaultCustomerCenterConfigAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet default values into a new CustomerCenterConfig.\nNetServer calculates default values on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: Task<CustomerCenterConfig> CreateDefaultCustomerCenterConfigAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.CustomerCenterConfig}
      description: A blank CustomerCenterConfig
    content.vb: Function CreateDefaultCustomerCenterConfigAsync(requestOptions As RequestOptions = Nothing) As Task(Of CustomerCenterConfig)
  overload: SuperOffice.WebApi.Agents.ICustomerServiceAgent.CreateDefaultCustomerCenterConfigAsync*
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.SaveCustomerCenterConfigAsync(SuperOffice.WebApi.Data.CustomerCenterConfig,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ICustomerServiceAgent.SaveCustomerCenterConfigAsync(SuperOffice.WebApi.Data.CustomerCenterConfig,SuperOffice.WebApi.RequestOptions)
  id: SaveCustomerCenterConfigAsync(SuperOffice.WebApi.Data.CustomerCenterConfig,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: SaveCustomerCenterConfigAsync(CustomerCenterConfig, RequestOptions)
  nameWithType: ICustomerServiceAgent.SaveCustomerCenterConfigAsync(CustomerCenterConfig, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.SaveCustomerCenterConfigAsync(SuperOffice.WebApi.Data.CustomerCenterConfig, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdates the existing CustomerCenterConfig or creates a new CustomerCenterConfig if the id parameter is 0. \n"
  syntax:
    content: Task<CustomerCenterConfig> SaveCustomerCenterConfigAsync(CustomerCenterConfig customerCenterConfig, RequestOptions requestOptions = null)
    parameters:
    - id: customerCenterConfig
      type: SuperOffice.WebApi.Data.CustomerCenterConfig
      description: The CustomerCenterConfig that is saved.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.CustomerCenterConfig}
      description: New or updated CustomerCenterConfig
    content.vb: Function SaveCustomerCenterConfigAsync(customerCenterConfig As CustomerCenterConfig, requestOptions As RequestOptions = Nothing) As Task(Of CustomerCenterConfig)
  overload: SuperOffice.WebApi.Agents.ICustomerServiceAgent.SaveCustomerCenterConfigAsync*
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.DeleteCustomerCenterConfigAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ICustomerServiceAgent.DeleteCustomerCenterConfigAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: DeleteCustomerCenterConfigAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: DeleteCustomerCenterConfigAsync(Int32, RequestOptions)
  nameWithType: ICustomerServiceAgent.DeleteCustomerCenterConfigAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.DeleteCustomerCenterConfigAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nDeletes the CustomerCenterConfig\n"
  syntax:
    content: Task DeleteCustomerCenterConfigAsync(int customerCenterConfigId, RequestOptions requestOptions = null)
    parameters:
    - id: customerCenterConfigId
      type: System.Int32
      description: The identity of the CustomerCenterConfig
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function DeleteCustomerCenterConfigAsync(customerCenterConfigId As Integer, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.ICustomerServiceAgent.DeleteCustomerCenterConfigAsync*
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.CreateDefaultMailboxEntityAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ICustomerServiceAgent.CreateDefaultMailboxEntityAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultMailboxEntityAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultMailboxEntityAsync(RequestOptions)
  nameWithType: ICustomerServiceAgent.CreateDefaultMailboxEntityAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.CreateDefaultMailboxEntityAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet default values into a new MailboxEntity.\nNetServer calculates default values on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: Task<MailboxEntity> CreateDefaultMailboxEntityAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.MailboxEntity}
      description: A blank MailboxEntity
    content.vb: Function CreateDefaultMailboxEntityAsync(requestOptions As RequestOptions = Nothing) As Task(Of MailboxEntity)
  overload: SuperOffice.WebApi.Agents.ICustomerServiceAgent.CreateDefaultMailboxEntityAsync*
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.SaveMailboxEntityAsync(SuperOffice.WebApi.Data.MailboxEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ICustomerServiceAgent.SaveMailboxEntityAsync(SuperOffice.WebApi.Data.MailboxEntity,SuperOffice.WebApi.RequestOptions)
  id: SaveMailboxEntityAsync(SuperOffice.WebApi.Data.MailboxEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: SaveMailboxEntityAsync(MailboxEntity, RequestOptions)
  nameWithType: ICustomerServiceAgent.SaveMailboxEntityAsync(MailboxEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.SaveMailboxEntityAsync(SuperOffice.WebApi.Data.MailboxEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdates the existing MailboxEntity or creates a new MailboxEntity if the id parameter is 0. \n"
  syntax:
    content: Task<MailboxEntity> SaveMailboxEntityAsync(MailboxEntity mailboxEntity, RequestOptions requestOptions = null)
    parameters:
    - id: mailboxEntity
      type: SuperOffice.WebApi.Data.MailboxEntity
      description: The MailboxEntity that is saved.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.MailboxEntity}
      description: New or updated MailboxEntity
    content.vb: Function SaveMailboxEntityAsync(mailboxEntity As MailboxEntity, requestOptions As RequestOptions = Nothing) As Task(Of MailboxEntity)
  overload: SuperOffice.WebApi.Agents.ICustomerServiceAgent.SaveMailboxEntityAsync*
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.CreateDefaultSmsConfigAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ICustomerServiceAgent.CreateDefaultSmsConfigAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultSmsConfigAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultSmsConfigAsync(RequestOptions)
  nameWithType: ICustomerServiceAgent.CreateDefaultSmsConfigAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.CreateDefaultSmsConfigAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet default values into a new SmsConfig.\nNetServer calculates default values on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: Task<SmsConfig> CreateDefaultSmsConfigAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SmsConfig}
      description: A blank SmsConfig
    content.vb: Function CreateDefaultSmsConfigAsync(requestOptions As RequestOptions = Nothing) As Task(Of SmsConfig)
  overload: SuperOffice.WebApi.Agents.ICustomerServiceAgent.CreateDefaultSmsConfigAsync*
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.SaveSmsConfigAsync(SuperOffice.WebApi.Data.SmsConfig,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ICustomerServiceAgent.SaveSmsConfigAsync(SuperOffice.WebApi.Data.SmsConfig,SuperOffice.WebApi.RequestOptions)
  id: SaveSmsConfigAsync(SuperOffice.WebApi.Data.SmsConfig,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: SaveSmsConfigAsync(SmsConfig, RequestOptions)
  nameWithType: ICustomerServiceAgent.SaveSmsConfigAsync(SmsConfig, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.SaveSmsConfigAsync(SuperOffice.WebApi.Data.SmsConfig, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdates the existing SmsConfig or creates a new SmsConfig if the id parameter is 0. \n"
  syntax:
    content: Task<SmsConfig> SaveSmsConfigAsync(SmsConfig smsConfig, RequestOptions requestOptions = null)
    parameters:
    - id: smsConfig
      type: SuperOffice.WebApi.Data.SmsConfig
      description: The SmsConfig that is saved.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SmsConfig}
      description: New or updated SmsConfig
    content.vb: Function SaveSmsConfigAsync(smsConfig As SmsConfig, requestOptions As RequestOptions = Nothing) As Task(Of SmsConfig)
  overload: SuperOffice.WebApi.Agents.ICustomerServiceAgent.SaveSmsConfigAsync*
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.UpdateFeatureTogglesAsync(SuperOffice.WebApi.Data.CsFeatureToggle[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ICustomerServiceAgent.UpdateFeatureTogglesAsync(SuperOffice.WebApi.Data.CsFeatureToggle[],SuperOffice.WebApi.RequestOptions)
  id: UpdateFeatureTogglesAsync(SuperOffice.WebApi.Data.CsFeatureToggle[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: UpdateFeatureTogglesAsync(CsFeatureToggle[], RequestOptions)
  nameWithType: ICustomerServiceAgent.UpdateFeatureTogglesAsync(CsFeatureToggle[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.UpdateFeatureTogglesAsync(SuperOffice.WebApi.Data.CsFeatureToggle[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdate the cached FeatureToggles for CS\n"
  syntax:
    content: Task UpdateFeatureTogglesAsync(CsFeatureToggle[] featureToggles, RequestOptions requestOptions = null)
    parameters:
    - id: featureToggles
      type: SuperOffice.WebApi.Data.CsFeatureToggle[]
      description: Feature toggle name / state
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function UpdateFeatureTogglesAsync(featureToggles As CsFeatureToggle(), requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.ICustomerServiceAgent.UpdateFeatureTogglesAsync*
  nameWithType.vb: ICustomerServiceAgent.UpdateFeatureTogglesAsync(CsFeatureToggle(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.ICustomerServiceAgent.UpdateFeatureTogglesAsync(SuperOffice.WebApi.Data.CsFeatureToggle(), SuperOffice.WebApi.RequestOptions)
  name.vb: UpdateFeatureTogglesAsync(CsFeatureToggle(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.EventHandlerExistsAsync(SuperOffice.WebApi.Data.EventHandlerType,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ICustomerServiceAgent.EventHandlerExistsAsync(SuperOffice.WebApi.Data.EventHandlerType,SuperOffice.WebApi.RequestOptions)
  id: EventHandlerExistsAsync(SuperOffice.WebApi.Data.EventHandlerType,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: EventHandlerExistsAsync(EventHandlerType, RequestOptions)
  nameWithType: ICustomerServiceAgent.EventHandlerExistsAsync(EventHandlerType, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.EventHandlerExistsAsync(SuperOffice.WebApi.Data.EventHandlerType, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCheck if an eventhandler exists for a given enum\n"
  syntax:
    content: Task<bool> EventHandlerExistsAsync(EventHandlerType eventHandlerType, RequestOptions requestOptions = null)
    parameters:
    - id: eventHandlerType
      type: SuperOffice.WebApi.Data.EventHandlerType
      description: The EventHandlerType we are checking
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if it exists
    content.vb: Function EventHandlerExistsAsync(eventHandlerType As EventHandlerType, requestOptions As RequestOptions = Nothing) As Task(Of Boolean)
  overload: SuperOffice.WebApi.Agents.ICustomerServiceAgent.EventHandlerExistsAsync*
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.CreateSessionAsync(System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ICustomerServiceAgent.CreateSessionAsync(System.String,SuperOffice.WebApi.RequestOptions)
  id: CreateSessionAsync(System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: CreateSessionAsync(String, RequestOptions)
  nameWithType: ICustomerServiceAgent.CreateSessionAsync(String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.CreateSessionAsync(System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCreates a login session for a CS user\n"
  syntax:
    content: Task<CsSessionKey> CreateSessionAsync(string remoteIp, RequestOptions requestOptions = null)
    parameters:
    - id: remoteIp
      type: System.String
      description: The ip of the client creating the session
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.CsSessionKey}
      description: The session key information
    content.vb: Function CreateSessionAsync(remoteIp As String, requestOptions As RequestOptions = Nothing) As Task(Of CsSessionKey)
  overload: SuperOffice.WebApi.Agents.ICustomerServiceAgent.CreateSessionAsync*
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.RemoveSessionAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ICustomerServiceAgent.RemoveSessionAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: RemoveSessionAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: RemoveSessionAsync(Int32, RequestOptions)
  nameWithType: ICustomerServiceAgent.RemoveSessionAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.RemoveSessionAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nRemove a login session for a CS user\n"
  syntax:
    content: Task RemoveSessionAsync(int loginId, RequestOptions requestOptions = null)
    parameters:
    - id: loginId
      type: System.Int32
      description: The login id to remove
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function RemoveSessionAsync(loginId As Integer, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.ICustomerServiceAgent.RemoveSessionAsync*
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.SessionIsValidAsync(System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ICustomerServiceAgent.SessionIsValidAsync(System.String,SuperOffice.WebApi.RequestOptions)
  id: SessionIsValidAsync(System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: SessionIsValidAsync(String, RequestOptions)
  nameWithType: ICustomerServiceAgent.SessionIsValidAsync(String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.SessionIsValidAsync(System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCheck if a CS session is valid\n"
  syntax:
    content: Task<bool> SessionIsValidAsync(string csSessionKey, RequestOptions requestOptions = null)
    parameters:
    - id: csSessionKey
      type: System.String
      description: The CS session key to check
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if there is a valid CS session based on the session key
    content.vb: Function SessionIsValidAsync(csSessionKey As String, requestOptions As RequestOptions = Nothing) As Task(Of Boolean)
  overload: SuperOffice.WebApi.Agents.ICustomerServiceAgent.SessionIsValidAsync*
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.HasChatNotifyAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ICustomerServiceAgent.HasChatNotifyAsync(SuperOffice.WebApi.RequestOptions)
  id: HasChatNotifyAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: HasChatNotifyAsync(RequestOptions)
  nameWithType: ICustomerServiceAgent.HasChatNotifyAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.HasChatNotifyAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCheck if user has any chat notification\n"
  syntax:
    content: Task<bool> HasChatNotifyAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the user has at least one notification setting on
    content.vb: Function HasChatNotifyAsync(requestOptions As RequestOptions = Nothing) As Task(Of Boolean)
  overload: SuperOffice.WebApi.Agents.ICustomerServiceAgent.HasChatNotifyAsync*
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.CheckSymmetricEncryptionAsync(System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ICustomerServiceAgent.CheckSymmetricEncryptionAsync(System.String,SuperOffice.WebApi.RequestOptions)
  id: CheckSymmetricEncryptionAsync(System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: CheckSymmetricEncryptionAsync(String, RequestOptions)
  nameWithType: ICustomerServiceAgent.CheckSymmetricEncryptionAsync(String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.CheckSymmetricEncryptionAsync(System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nDo a test to check that we are using the same encryption keys\n"
  syntax:
    content: Task<string> CheckSymmetricEncryptionAsync(string encryptedString, RequestOptions requestOptions = null)
    parameters:
    - id: encryptedString
      type: System.String
      description: An encrypted version of the string
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Encrypted version of the string done by NetServer
    content.vb: Function CheckSymmetricEncryptionAsync(encryptedString As String, requestOptions As RequestOptions = Nothing) As Task(Of String)
  overload: SuperOffice.WebApi.Agents.ICustomerServiceAgent.CheckSymmetricEncryptionAsync*
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.ReportSessionActiveAsync(System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ICustomerServiceAgent.ReportSessionActiveAsync(System.String,SuperOffice.WebApi.RequestOptions)
  id: ReportSessionActiveAsync(System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: ReportSessionActiveAsync(String, RequestOptions)
  nameWithType: ICustomerServiceAgent.ReportSessionActiveAsync(String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.ReportSessionActiveAsync(System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReport a session as being &apos;active&apos;; will update the corresponding row in login table, but not more than once per minute/session\n"
  syntax:
    content: Task<int> ReportSessionActiveAsync(string sessionKey, RequestOptions requestOptions = null)
    parameters:
    - id: sessionKey
      type: System.String
      description: CS session key, matching the &apos;login&apos; table
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: The ID of the login table row, or 0 if not found
    content.vb: Function ReportSessionActiveAsync(sessionKey As String, requestOptions As RequestOptions = Nothing) As Task(Of Integer)
  overload: SuperOffice.WebApi.Agents.ICustomerServiceAgent.ReportSessionActiveAsync*
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetCustomerCenterConfigAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetCustomerCenterConfigAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetCustomerCenterConfigAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: GetCustomerCenterConfigAsync(Int32, RequestOptions)
  nameWithType: ICustomerServiceAgent.GetCustomerCenterConfigAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetCustomerCenterConfigAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific CustomerCenterConfig object.                        \n"
  syntax:
    content: Task<CustomerCenterConfig> GetCustomerCenterConfigAsync(int customerCenterConfigId, RequestOptions requestOptions = null)
    parameters:
    - id: customerCenterConfigId
      type: System.Int32
      description: The identifier of the CustomerCenterConfig object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.CustomerCenterConfig}
      description: CustomerCenterConfig
    content.vb: Function GetCustomerCenterConfigAsync(customerCenterConfigId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of CustomerCenterConfig)
  overload: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetCustomerCenterConfigAsync*
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetAllCustomerCenterConfigsAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetAllCustomerCenterConfigsAsync(SuperOffice.WebApi.RequestOptions)
  id: GetAllCustomerCenterConfigsAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: GetAllCustomerCenterConfigsAsync(RequestOptions)
  nameWithType: ICustomerServiceAgent.GetAllCustomerCenterConfigsAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetAllCustomerCenterConfigsAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet all rows from cust_config as an array of CustomerCenterConfig entities\n"
  syntax:
    content: Task<CustomerCenterConfig[]> GetAllCustomerCenterConfigsAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.CustomerCenterConfig[]}
      description: An array of CustomerCenterConfig entities
    content.vb: Function GetAllCustomerCenterConfigsAsync(requestOptions As RequestOptions = Nothing) As Task(Of CustomerCenterConfig())
  overload: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetAllCustomerCenterConfigsAsync*
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.SaveAllCustomerCenterConfigsAsync(SuperOffice.WebApi.Data.CustomerCenterConfig[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ICustomerServiceAgent.SaveAllCustomerCenterConfigsAsync(SuperOffice.WebApi.Data.CustomerCenterConfig[],SuperOffice.WebApi.RequestOptions)
  id: SaveAllCustomerCenterConfigsAsync(SuperOffice.WebApi.Data.CustomerCenterConfig[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: SaveAllCustomerCenterConfigsAsync(CustomerCenterConfig[], RequestOptions)
  nameWithType: ICustomerServiceAgent.SaveAllCustomerCenterConfigsAsync(CustomerCenterConfig[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.SaveAllCustomerCenterConfigsAsync(SuperOffice.WebApi.Data.CustomerCenterConfig[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSave an array of CustomerCenterConfig entities to the database\n"
  syntax:
    content: Task SaveAllCustomerCenterConfigsAsync(CustomerCenterConfig[] custConfigs, RequestOptions requestOptions = null)
    parameters:
    - id: custConfigs
      type: SuperOffice.WebApi.Data.CustomerCenterConfig[]
      description: The CustomerCenterConfig entities to be saved. If the id does not exists, a new one will be created. Unknown ids will be skipped
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
      description: void
    content.vb: Function SaveAllCustomerCenterConfigsAsync(custConfigs As CustomerCenterConfig(), requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.ICustomerServiceAgent.SaveAllCustomerCenterConfigsAsync*
  nameWithType.vb: ICustomerServiceAgent.SaveAllCustomerCenterConfigsAsync(CustomerCenterConfig(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.ICustomerServiceAgent.SaveAllCustomerCenterConfigsAsync(SuperOffice.WebApi.Data.CustomerCenterConfig(), SuperOffice.WebApi.RequestOptions)
  name.vb: SaveAllCustomerCenterConfigsAsync(CustomerCenterConfig(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.CheckIfCustomizedTemplatesAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ICustomerServiceAgent.CheckIfCustomizedTemplatesAsync(SuperOffice.WebApi.RequestOptions)
  id: CheckIfCustomizedTemplatesAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: CheckIfCustomizedTemplatesAsync(RequestOptions)
  nameWithType: ICustomerServiceAgent.CheckIfCustomizedTemplatesAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.CheckIfCustomizedTemplatesAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nChecks whether the core html templates are customized\n"
  syntax:
    content: Task<bool> CheckIfCustomizedTemplatesAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the templates are customized
    content.vb: Function CheckIfCustomizedTemplatesAsync(requestOptions As RequestOptions = Nothing) As Task(Of Boolean)
  overload: SuperOffice.WebApi.Agents.ICustomerServiceAgent.CheckIfCustomizedTemplatesAsync*
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetProgramUrlAsync(System.String,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetProgramUrlAsync(System.String,System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: GetProgramUrlAsync(System.String,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: GetProgramUrlAsync(String, Boolean, RequestOptions)
  nameWithType: ICustomerServiceAgent.GetProgramUrlAsync(String, Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetProgramUrlAsync(System.String, System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nThis method will convert a module name into a Service URL.\n"
  syntax:
    content: Task<string> GetProgramUrlAsync(string programName, bool external, RequestOptions requestOptions = null)
    parameters:
    - id: programName
      type: System.String
      description: In this parameter you must specify which CS program you want to create an URL for. Valid examples are &quot;ticket&quot;, &quot;rms&quot;, &quot;spm&quot; etc.
    - id: external
      type: System.Boolean
      description: If set to true, this will generate URLs that are accesible from the outside (for example Internet)
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Returns a valid Service URL composed of the give parameters.
    content.vb: Function GetProgramUrlAsync(programName As String, external As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of String)
  overload: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetProgramUrlAsync*
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetFaqForCustomerAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetFaqForCustomerAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetFaqForCustomerAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: GetFaqForCustomerAsync(Int32, RequestOptions)
  nameWithType: ICustomerServiceAgent.GetFaqForCustomerAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetFaqForCustomerAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet a FAQ entry, ment to be displayed for a customer. This can either be a link to the FAQ entry on Custom Center, or it can be the answer and question. This is dependent on Registry setting with reg_id=157\n"
  syntax:
    content: Task<string> GetFaqForCustomerAsync(int faqEntryId, RequestOptions requestOptions = null)
    parameters:
    - id: faqEntryId
      type: System.Int32
      description: The id of the FAQ entry to get. Only FAQ entries with access level public (both for unauthenticated and autenticated customer) will be returned
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The FAQ to show to the customer. Either a clickable link or the question/answer itself.
    content.vb: Function GetFaqForCustomerAsync(faqEntryId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of String)
  overload: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetFaqForCustomerAsync*
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetCustomerServiceStartupAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetCustomerServiceStartupAsync(SuperOffice.WebApi.RequestOptions)
  id: GetCustomerServiceStartupAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: GetCustomerServiceStartupAsync(RequestOptions)
  nameWithType: ICustomerServiceAgent.GetCustomerServiceStartupAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetCustomerServiceStartupAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet the carrier with data that Service needs when starting up\n"
  syntax:
    content: Task<CustomerServiceStartup> GetCustomerServiceStartupAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.CustomerServiceStartup}
      description: The carrier containing the startup data
    content.vb: Function GetCustomerServiceStartupAsync(requestOptions As RequestOptions = Nothing) As Task(Of CustomerServiceStartup)
  overload: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetCustomerServiceStartupAsync*
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.ExecuteEventHandlersAsync(SuperOffice.WebApi.Data.EventData,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ICustomerServiceAgent.ExecuteEventHandlersAsync(SuperOffice.WebApi.Data.EventData,SuperOffice.WebApi.RequestOptions)
  id: ExecuteEventHandlersAsync(SuperOffice.WebApi.Data.EventData,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: ExecuteEventHandlersAsync(EventData, RequestOptions)
  nameWithType: ICustomerServiceAgent.ExecuteEventHandlersAsync(EventData, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.ExecuteEventHandlersAsync(SuperOffice.WebApi.Data.EventData, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nThis method will execute event handlers in CRMScript for a given event.\n"
  syntax:
    content: Task<EventData> ExecuteEventHandlersAsync(EventData eventData, RequestOptions requestOptions = null)
    parameters:
    - id: eventData
      type: SuperOffice.WebApi.Data.EventData
      description: The EventData instance sent to the event handler
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EventData}
      description: The EventData instance after event handler execution
    content.vb: Function ExecuteEventHandlersAsync(eventData As EventData, requestOptions As RequestOptions = Nothing) As Task(Of EventData)
  overload: SuperOffice.WebApi.Agents.ICustomerServiceAgent.ExecuteEventHandlersAsync*
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetMailboxesAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetMailboxesAsync(SuperOffice.WebApi.RequestOptions)
  id: GetMailboxesAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: GetMailboxesAsync(RequestOptions)
  nameWithType: ICustomerServiceAgent.GetMailboxesAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetMailboxesAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nThis method will get all registered mailboxes in Service\n"
  syntax:
    content: Task<Mailbox[]> GetMailboxesAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Mailbox[]}
      description: An array of Mailbox objects
    content.vb: Function GetMailboxesAsync(requestOptions As RequestOptions = Nothing) As Task(Of Mailbox())
  overload: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetMailboxesAsync*
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetMailboxEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetMailboxEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetMailboxEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: GetMailboxEntityAsync(Int32, RequestOptions)
  nameWithType: ICustomerServiceAgent.GetMailboxEntityAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetMailboxEntityAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific MailboxEntity object.                        \n"
  syntax:
    content: Task<MailboxEntity> GetMailboxEntityAsync(int mailboxEntityId, RequestOptions requestOptions = null)
    parameters:
    - id: mailboxEntityId
      type: System.Int32
      description: The identifier of the MailboxEntity object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.MailboxEntity}
      description: MailboxEntity
    content.vb: Function GetMailboxEntityAsync(mailboxEntityId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of MailboxEntity)
  overload: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetMailboxEntityAsync*
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetPreviewFaqEntryAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetPreviewFaqEntryAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetPreviewFaqEntryAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: GetPreviewFaqEntryAsync(Int32, RequestOptions)
  nameWithType: ICustomerServiceAgent.GetPreviewFaqEntryAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetPreviewFaqEntryAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet a faq entry from its faq entry id\n"
  syntax:
    content: Task<PreviewFaqEntry> GetPreviewFaqEntryAsync(int kbEntryId, RequestOptions requestOptions = null)
    parameters:
    - id: kbEntryId
      type: System.Int32
      description: FAQ entry ID
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.PreviewFaqEntry}
      description: FAQ entry suitable for preview
    content.vb: Function GetPreviewFaqEntryAsync(kbEntryId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of PreviewFaqEntry)
  overload: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetPreviewFaqEntryAsync*
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetPreviewQuickReplyAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetPreviewQuickReplyAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetPreviewQuickReplyAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: GetPreviewQuickReplyAsync(Int32, RequestOptions)
  nameWithType: ICustomerServiceAgent.GetPreviewQuickReplyAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetPreviewQuickReplyAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet a quick reply from its quick reply id\n"
  syntax:
    content: Task<PreviewQuickReply> GetPreviewQuickReplyAsync(int quickReplyId, RequestOptions requestOptions = null)
    parameters:
    - id: quickReplyId
      type: System.Int32
      description: Quick reply ID
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.PreviewQuickReply}
      description: Quick reply suitable for preview
    content.vb: Function GetPreviewQuickReplyAsync(quickReplyId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of PreviewQuickReply)
  overload: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetPreviewQuickReplyAsync*
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetPreviewReplyTemplateAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetPreviewReplyTemplateAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetPreviewReplyTemplateAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: GetPreviewReplyTemplateAsync(Int32, RequestOptions)
  nameWithType: ICustomerServiceAgent.GetPreviewReplyTemplateAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetPreviewReplyTemplateAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet a reply template from its reply template id\n"
  syntax:
    content: Task<PreviewReplyTemplate> GetPreviewReplyTemplateAsync(int replyTemplateId, RequestOptions requestOptions = null)
    parameters:
    - id: replyTemplateId
      type: System.Int32
      description: Reply template ID
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.PreviewReplyTemplate}
      description: Reply template suitable for preview
    content.vb: Function GetPreviewReplyTemplateAsync(replyTemplateId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of PreviewReplyTemplate)
  overload: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetPreviewReplyTemplateAsync*
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetParsedTemplateAsync(System.Int32,System.Int32,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetParsedTemplateAsync(System.Int32,System.Int32,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetParsedTemplateAsync(System.Int32,System.Int32,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: GetParsedTemplateAsync(Int32, Int32, Int32, Int32, RequestOptions)
  nameWithType: ICustomerServiceAgent.GetParsedTemplateAsync(Int32, Int32, Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetParsedTemplateAsync(System.Int32, System.Int32, System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet a specific langauge version of the reply template, and run this trough the parser\n"
  syntax:
    content: Task<ReplyTemplateParsed> GetParsedTemplateAsync(int replyTemplateId, int languageId, int personId, int ticketId, RequestOptions requestOptions = null)
    parameters:
    - id: replyTemplateId
      type: System.Int32
      description: The id of the reply template
    - id: languageId
      type: System.Int32
      description: The language id (prefered language). If 0 is given, the language of the person will be used
    - id: personId
      type: System.Int32
      description: The id of the person that will be populated into the parser
    - id: ticketId
      type: System.Int32
      description: The id of the ticket that will be populated into the parser
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ReplyTemplateParsed}
      description: The parsed reply template
    content.vb: Function GetParsedTemplateAsync(replyTemplateId As Integer, languageId As Integer, personId As Integer, ticketId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of ReplyTemplateParsed)
  overload: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetParsedTemplateAsync*
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetUnparsedTemplateAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetUnparsedTemplateAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetUnparsedTemplateAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: GetUnparsedTemplateAsync(Int32, Int32, RequestOptions)
  nameWithType: ICustomerServiceAgent.GetUnparsedTemplateAsync(Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetUnparsedTemplateAsync(System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet a specific langauge version of the reply template. No parsing is performed.\n"
  syntax:
    content: Task<ReplyTemplateParsed> GetUnparsedTemplateAsync(int replyTemplateId, int languageId, RequestOptions requestOptions = null)
    parameters:
    - id: replyTemplateId
      type: System.Int32
      description: The id of the reply template
    - id: languageId
      type: System.Int32
      description: The language id (prefered language). If 0 is given, the language of the person will be used
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ReplyTemplateParsed}
      description: The unparsed reply template, but using the same return data structure
    content.vb: Function GetUnparsedTemplateAsync(replyTemplateId As Integer, languageId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of ReplyTemplateParsed)
  overload: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetUnparsedTemplateAsync*
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetSmsConfigAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetSmsConfigAsync(SuperOffice.WebApi.RequestOptions)
  id: GetSmsConfigAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: GetSmsConfigAsync(RequestOptions)
  nameWithType: ICustomerServiceAgent.GetSmsConfigAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetSmsConfigAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet the SmsConfig settings for Customer Service sms providers.\n"
  syntax:
    content: Task<SmsConfig> GetSmsConfigAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SmsConfig}
      description: Current SMS configuration.
    content.vb: Function GetSmsConfigAsync(requestOptions As RequestOptions = Nothing) As Task(Of SmsConfig)
  overload: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetSmsConfigAsync*
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.TestSmtpServerAsync(System.String,System.String,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ICustomerServiceAgent.TestSmtpServerAsync(System.String,System.String,System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: TestSmtpServerAsync(System.String,System.String,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: TestSmtpServerAsync(String, String, Boolean, RequestOptions)
  nameWithType: ICustomerServiceAgent.TestSmtpServerAsync(String, String, Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.TestSmtpServerAsync(System.String, System.String, System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nThis method will do a test of a SMTP account, by sending an email to a special @superoffice.com account\n"
  syntax:
    content: Task<SmtpTestResult> TestSmtpServerAsync(string smtpUri, string from, bool useStoredPassword, RequestOptions requestOptions = null)
    parameters:
    - id: smtpUri
      type: System.String
      description: An URI containing information to connect to the SMTP server, eg. smtps://myuser:mypassword@smtp.myserver.com:465. Note that username and password must be url encoded
    - id: from
      type: System.String
      description: The from-address used in the test
    - id: useStoredPassword
      type: System.Boolean
      description: Use database persisted password
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SmtpTestResult}
      description: Contains the result of the test
    content.vb: Function TestSmtpServerAsync(smtpUri As String, from As String, useStoredPassword As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of SmtpTestResult)
  overload: SuperOffice.WebApi.Agents.ICustomerServiceAgent.TestSmtpServerAsync*
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetStatisticsAsync(SuperOffice.WebApi.Data.StatusScreenPanelType[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetStatisticsAsync(SuperOffice.WebApi.Data.StatusScreenPanelType[],SuperOffice.WebApi.RequestOptions)
  id: GetStatisticsAsync(SuperOffice.WebApi.Data.StatusScreenPanelType[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: GetStatisticsAsync(StatusScreenPanelType[], RequestOptions)
  nameWithType: ICustomerServiceAgent.GetStatisticsAsync(StatusScreenPanelType[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetStatisticsAsync(SuperOffice.WebApi.Data.StatusScreenPanelType[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns the calculated results for the required statistics for the Customer Service Status Page\n"
  syntax:
    content: Task<StatisticsDataSet[]> GetStatisticsAsync(StatusScreenPanelType[] functions, RequestOptions requestOptions = null)
    parameters:
    - id: functions
      type: SuperOffice.WebApi.Data.StatusScreenPanelType[]
      description: List of functions to calculate and return
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.StatisticsDataSet[]}
      description: Array of StatisticsDataSet
    content.vb: Function GetStatisticsAsync(functions As StatusScreenPanelType(), requestOptions As RequestOptions = Nothing) As Task(Of StatisticsDataSet())
  overload: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetStatisticsAsync*
  nameWithType.vb: ICustomerServiceAgent.GetStatisticsAsync(StatusScreenPanelType(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetStatisticsAsync(SuperOffice.WebApi.Data.StatusScreenPanelType(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetStatisticsAsync(StatusScreenPanelType(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetSystemTemplateSettingsAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetSystemTemplateSettingsAsync(SuperOffice.WebApi.RequestOptions)
  id: GetSystemTemplateSettingsAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: GetSystemTemplateSettingsAsync(RequestOptions)
  nameWithType: ICustomerServiceAgent.GetSystemTemplateSettingsAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetSystemTemplateSettingsAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns system template settings\n"
  syntax:
    content: Task<SystemTemplateSettings> GetSystemTemplateSettingsAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SystemTemplateSettings}
      description: System template settings item
    content.vb: Function GetSystemTemplateSettingsAsync(requestOptions As RequestOptions = Nothing) As Task(Of SystemTemplateSettings)
  overload: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetSystemTemplateSettingsAsync*
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.SaveSystemTemplateSettingsAsync(SuperOffice.WebApi.Data.SystemTemplateSettings,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ICustomerServiceAgent.SaveSystemTemplateSettingsAsync(SuperOffice.WebApi.Data.SystemTemplateSettings,SuperOffice.WebApi.RequestOptions)
  id: SaveSystemTemplateSettingsAsync(SuperOffice.WebApi.Data.SystemTemplateSettings,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: SaveSystemTemplateSettingsAsync(SystemTemplateSettings, RequestOptions)
  nameWithType: ICustomerServiceAgent.SaveSystemTemplateSettingsAsync(SystemTemplateSettings, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.SaveSystemTemplateSettingsAsync(SuperOffice.WebApi.Data.SystemTemplateSettings, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSaves and validates updated system templates. Throws exception if validation fails\n"
  syntax:
    content: Task<SystemTemplateSettings> SaveSystemTemplateSettingsAsync(SystemTemplateSettings systemTemplateSettings, RequestOptions requestOptions = null)
    parameters:
    - id: systemTemplateSettings
      type: SuperOffice.WebApi.Data.SystemTemplateSettings
      description: System template settings item with updated values
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SystemTemplateSettings}
      description: Updated system template settings
    content.vb: Function SaveSystemTemplateSettingsAsync(systemTemplateSettings As SystemTemplateSettings, requestOptions As RequestOptions = Nothing) As Task(Of SystemTemplateSettings)
  overload: SuperOffice.WebApi.Agents.ICustomerServiceAgent.SaveSystemTemplateSettingsAsync*
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.CreateTicketFromMailDataAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ICustomerServiceAgent.CreateTicketFromMailDataAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: CreateTicketFromMailDataAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: CreateTicketFromMailDataAsync(Int32, String, RequestOptions)
  nameWithType: ICustomerServiceAgent.CreateTicketFromMailDataAsync(Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.CreateTicketFromMailDataAsync(System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nThis method create a new ticket in the same way as importMail would import an email. It accepts RFC822 formatted data\n"
  syntax:
    content: Task<TicketInfo> CreateTicketFromMailDataAsync(int mailboxId, string data, RequestOptions requestOptions = null)
    parameters:
    - id: mailboxId
      type: System.Int32
      description: The id of the Service mailbox
    - id: data
      type: System.String
      description: RFC822 formatted data to import as a ticket
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketInfo}
      description: An object containing some meta data for the created ticket
    content.vb: Function CreateTicketFromMailDataAsync(mailboxId As Integer, data As String, requestOptions As RequestOptions = Nothing) As Task(Of TicketInfo)
  overload: SuperOffice.WebApi.Agents.ICustomerServiceAgent.CreateTicketFromMailDataAsync*
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.AddMessageFromMailDataAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ICustomerServiceAgent.AddMessageFromMailDataAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: AddMessageFromMailDataAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: AddMessageFromMailDataAsync(Int32, String, RequestOptions)
  nameWithType: ICustomerServiceAgent.AddMessageFromMailDataAsync(Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.AddMessageFromMailDataAsync(System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nThis method will add a message to an existing request in the sam way as importMail would do it from an email. It accepts RFC822 formatted data\n"
  syntax:
    content: Task<TicketInfo> AddMessageFromMailDataAsync(int ticketId, string data, RequestOptions requestOptions = null)
    parameters:
    - id: ticketId
      type: System.Int32
      description: The id of the ticket to add a message
    - id: data
      type: System.String
      description: RFC822 formatted data to import as a message
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketInfo}
      description: An object containing some meta data for the ticket
    content.vb: Function AddMessageFromMailDataAsync(ticketId As Integer, data As String, requestOptions As RequestOptions = Nothing) As Task(Of TicketInfo)
  overload: SuperOffice.WebApi.Agents.ICustomerServiceAgent.AddMessageFromMailDataAsync*
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.FindTicketsByTitleOrIdAsync(System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ICustomerServiceAgent.FindTicketsByTitleOrIdAsync(System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: FindTicketsByTitleOrIdAsync(System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: FindTicketsByTitleOrIdAsync(String, Int32, RequestOptions)
  nameWithType: ICustomerServiceAgent.FindTicketsByTitleOrIdAsync(String, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.FindTicketsByTitleOrIdAsync(System.String, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nThis method wil search for tickets matching title or id\n"
  syntax:
    content: Task<TicketInfo[]> FindTicketsByTitleOrIdAsync(string titleOrId, int maxRows, RequestOptions requestOptions = null)
    parameters:
    - id: titleOrId
      type: System.String
      description: The search string. If this is a number, it will also search for a matching ticket id
    - id: maxRows
      type: System.Int32
      description: The maximum number of rows to be returned
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketInfo[]}
      description: An array of objects containing some meta data for matching tickets
    content.vb: Function FindTicketsByTitleOrIdAsync(titleOrId As String, maxRows As Integer, requestOptions As RequestOptions = Nothing) As Task(Of TicketInfo())
  overload: SuperOffice.WebApi.Agents.ICustomerServiceAgent.FindTicketsByTitleOrIdAsync*
references:
- uid: SuperOffice.WebApi.Agents
  commentId: N:SuperOffice.WebApi.Agents
  isExternal: true
  name: SuperOffice.WebApi.Agents
  nameWithType: SuperOffice.WebApi.Agents
  fullName: SuperOffice.WebApi.Agents
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.CreateDefaultCustomerCenterConfigAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ICustomerServiceAgent.CreateDefaultCustomerCenterConfigAsync
  isExternal: true
  name: CreateDefaultCustomerCenterConfigAsync
  nameWithType: ICustomerServiceAgent.CreateDefaultCustomerCenterConfigAsync
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.CreateDefaultCustomerCenterConfigAsync
- uid: SuperOffice.WebApi.RequestOptions
  commentId: T:SuperOffice.WebApi.RequestOptions
  parent: SuperOffice.WebApi
  isExternal: true
  name: RequestOptions
  nameWithType: RequestOptions
  fullName: SuperOffice.WebApi.RequestOptions
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.CustomerCenterConfig}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.CustomerCenterConfig}'
  definition: System.Threading.Tasks.Task`1
  name: Task<CustomerCenterConfig>
  nameWithType: Task<CustomerCenterConfig>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.CustomerCenterConfig>
  nameWithType.vb: Task(Of CustomerCenterConfig)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.CustomerCenterConfig)
  name.vb: Task(Of CustomerCenterConfig)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.CustomerCenterConfig
    name: CustomerCenterConfig
    nameWithType: CustomerCenterConfig
    fullName: SuperOffice.WebApi.Data.CustomerCenterConfig
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.CustomerCenterConfig
    name: CustomerCenterConfig
    nameWithType: CustomerCenterConfig
    fullName: SuperOffice.WebApi.Data.CustomerCenterConfig
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi
  commentId: N:SuperOffice.WebApi
  isExternal: true
  name: SuperOffice.WebApi
  nameWithType: SuperOffice.WebApi
  fullName: SuperOffice.WebApi
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.SaveCustomerCenterConfigAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ICustomerServiceAgent.SaveCustomerCenterConfigAsync
  isExternal: true
  name: SaveCustomerCenterConfigAsync
  nameWithType: ICustomerServiceAgent.SaveCustomerCenterConfigAsync
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.SaveCustomerCenterConfigAsync
- uid: SuperOffice.WebApi.Data.CustomerCenterConfig
  commentId: T:SuperOffice.WebApi.Data.CustomerCenterConfig
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: CustomerCenterConfig
  nameWithType: CustomerCenterConfig
  fullName: SuperOffice.WebApi.Data.CustomerCenterConfig
- uid: SuperOffice.WebApi.Data
  commentId: N:SuperOffice.WebApi.Data
  isExternal: true
  name: SuperOffice.WebApi.Data
  nameWithType: SuperOffice.WebApi.Data
  fullName: SuperOffice.WebApi.Data
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.DeleteCustomerCenterConfigAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ICustomerServiceAgent.DeleteCustomerCenterConfigAsync
  isExternal: true
  name: DeleteCustomerCenterConfigAsync
  nameWithType: ICustomerServiceAgent.DeleteCustomerCenterConfigAsync
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.DeleteCustomerCenterConfigAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.CreateDefaultMailboxEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ICustomerServiceAgent.CreateDefaultMailboxEntityAsync
  isExternal: true
  name: CreateDefaultMailboxEntityAsync
  nameWithType: ICustomerServiceAgent.CreateDefaultMailboxEntityAsync
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.CreateDefaultMailboxEntityAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.MailboxEntity}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.MailboxEntity}'
  definition: System.Threading.Tasks.Task`1
  name: Task<MailboxEntity>
  nameWithType: Task<MailboxEntity>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.MailboxEntity>
  nameWithType.vb: Task(Of MailboxEntity)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.MailboxEntity)
  name.vb: Task(Of MailboxEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.MailboxEntity
    name: MailboxEntity
    nameWithType: MailboxEntity
    fullName: SuperOffice.WebApi.Data.MailboxEntity
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.MailboxEntity
    name: MailboxEntity
    nameWithType: MailboxEntity
    fullName: SuperOffice.WebApi.Data.MailboxEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.SaveMailboxEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ICustomerServiceAgent.SaveMailboxEntityAsync
  isExternal: true
  name: SaveMailboxEntityAsync
  nameWithType: ICustomerServiceAgent.SaveMailboxEntityAsync
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.SaveMailboxEntityAsync
- uid: SuperOffice.WebApi.Data.MailboxEntity
  commentId: T:SuperOffice.WebApi.Data.MailboxEntity
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: MailboxEntity
  nameWithType: MailboxEntity
  fullName: SuperOffice.WebApi.Data.MailboxEntity
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.CreateDefaultSmsConfigAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ICustomerServiceAgent.CreateDefaultSmsConfigAsync
  isExternal: true
  name: CreateDefaultSmsConfigAsync
  nameWithType: ICustomerServiceAgent.CreateDefaultSmsConfigAsync
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.CreateDefaultSmsConfigAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SmsConfig}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SmsConfig}'
  definition: System.Threading.Tasks.Task`1
  name: Task<SmsConfig>
  nameWithType: Task<SmsConfig>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.SmsConfig>
  nameWithType.vb: Task(Of SmsConfig)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.SmsConfig)
  name.vb: Task(Of SmsConfig)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.SmsConfig
    name: SmsConfig
    nameWithType: SmsConfig
    fullName: SuperOffice.WebApi.Data.SmsConfig
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.SmsConfig
    name: SmsConfig
    nameWithType: SmsConfig
    fullName: SuperOffice.WebApi.Data.SmsConfig
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.SaveSmsConfigAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ICustomerServiceAgent.SaveSmsConfigAsync
  isExternal: true
  name: SaveSmsConfigAsync
  nameWithType: ICustomerServiceAgent.SaveSmsConfigAsync
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.SaveSmsConfigAsync
- uid: SuperOffice.WebApi.Data.SmsConfig
  commentId: T:SuperOffice.WebApi.Data.SmsConfig
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: SmsConfig
  nameWithType: SmsConfig
  fullName: SuperOffice.WebApi.Data.SmsConfig
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.UpdateFeatureTogglesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ICustomerServiceAgent.UpdateFeatureTogglesAsync
  isExternal: true
  name: UpdateFeatureTogglesAsync
  nameWithType: ICustomerServiceAgent.UpdateFeatureTogglesAsync
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.UpdateFeatureTogglesAsync
- uid: SuperOffice.WebApi.Data.CsFeatureToggle[]
  isExternal: true
  name: CsFeatureToggle[]
  nameWithType: CsFeatureToggle[]
  fullName: SuperOffice.WebApi.Data.CsFeatureToggle[]
  nameWithType.vb: CsFeatureToggle()
  fullName.vb: SuperOffice.WebApi.Data.CsFeatureToggle()
  name.vb: CsFeatureToggle()
  spec.csharp:
  - uid: SuperOffice.WebApi.Data.CsFeatureToggle
    name: CsFeatureToggle
    nameWithType: CsFeatureToggle
    fullName: SuperOffice.WebApi.Data.CsFeatureToggle
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.WebApi.Data.CsFeatureToggle
    name: CsFeatureToggle
    nameWithType: CsFeatureToggle
    fullName: SuperOffice.WebApi.Data.CsFeatureToggle
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.EventHandlerExistsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ICustomerServiceAgent.EventHandlerExistsAsync
  isExternal: true
  name: EventHandlerExistsAsync
  nameWithType: ICustomerServiceAgent.EventHandlerExistsAsync
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.EventHandlerExistsAsync
- uid: SuperOffice.WebApi.Data.EventHandlerType
  commentId: T:SuperOffice.WebApi.Data.EventHandlerType
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: EventHandlerType
  nameWithType: EventHandlerType
  fullName: SuperOffice.WebApi.Data.EventHandlerType
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: '!:System.Threading.Tasks.Task{System.Boolean}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.CreateSessionAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ICustomerServiceAgent.CreateSessionAsync
  isExternal: true
  name: CreateSessionAsync
  nameWithType: ICustomerServiceAgent.CreateSessionAsync
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.CreateSessionAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.CsSessionKey}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.CsSessionKey}'
  definition: System.Threading.Tasks.Task`1
  name: Task<CsSessionKey>
  nameWithType: Task<CsSessionKey>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.CsSessionKey>
  nameWithType.vb: Task(Of CsSessionKey)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.CsSessionKey)
  name.vb: Task(Of CsSessionKey)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.CsSessionKey
    name: CsSessionKey
    nameWithType: CsSessionKey
    fullName: SuperOffice.WebApi.Data.CsSessionKey
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.CsSessionKey
    name: CsSessionKey
    nameWithType: CsSessionKey
    fullName: SuperOffice.WebApi.Data.CsSessionKey
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.RemoveSessionAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ICustomerServiceAgent.RemoveSessionAsync
  isExternal: true
  name: RemoveSessionAsync
  nameWithType: ICustomerServiceAgent.RemoveSessionAsync
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.RemoveSessionAsync
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.SessionIsValidAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ICustomerServiceAgent.SessionIsValidAsync
  isExternal: true
  name: SessionIsValidAsync
  nameWithType: ICustomerServiceAgent.SessionIsValidAsync
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.SessionIsValidAsync
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.HasChatNotifyAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ICustomerServiceAgent.HasChatNotifyAsync
  isExternal: true
  name: HasChatNotifyAsync
  nameWithType: ICustomerServiceAgent.HasChatNotifyAsync
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.HasChatNotifyAsync
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.CheckSymmetricEncryptionAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ICustomerServiceAgent.CheckSymmetricEncryptionAsync
  isExternal: true
  name: CheckSymmetricEncryptionAsync
  nameWithType: ICustomerServiceAgent.CheckSymmetricEncryptionAsync
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.CheckSymmetricEncryptionAsync
- uid: System.Threading.Tasks.Task{System.String}
  commentId: '!:System.Threading.Tasks.Task{System.String}'
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.ReportSessionActiveAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ICustomerServiceAgent.ReportSessionActiveAsync
  isExternal: true
  name: ReportSessionActiveAsync
  nameWithType: ICustomerServiceAgent.ReportSessionActiveAsync
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.ReportSessionActiveAsync
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: '!:System.Threading.Tasks.Task{System.Int32}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  nameWithType.vb: Task(Of Int32)
  fullName.vb: System.Threading.Tasks.Task(Of System.Int32)
  name.vb: Task(Of Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetCustomerCenterConfigAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetCustomerCenterConfigAsync
  isExternal: true
  name: GetCustomerCenterConfigAsync
  nameWithType: ICustomerServiceAgent.GetCustomerCenterConfigAsync
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetCustomerCenterConfigAsync
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetAllCustomerCenterConfigsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetAllCustomerCenterConfigsAsync
  isExternal: true
  name: GetAllCustomerCenterConfigsAsync
  nameWithType: ICustomerServiceAgent.GetAllCustomerCenterConfigsAsync
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetAllCustomerCenterConfigsAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.CustomerCenterConfig[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.CustomerCenterConfig[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<CustomerCenterConfig[]>
  nameWithType: Task<CustomerCenterConfig[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.CustomerCenterConfig[]>
  nameWithType.vb: Task(Of CustomerCenterConfig())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.CustomerCenterConfig())
  name.vb: Task(Of CustomerCenterConfig())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.CustomerCenterConfig
    name: CustomerCenterConfig
    nameWithType: CustomerCenterConfig
    fullName: SuperOffice.WebApi.Data.CustomerCenterConfig
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.CustomerCenterConfig
    name: CustomerCenterConfig
    nameWithType: CustomerCenterConfig
    fullName: SuperOffice.WebApi.Data.CustomerCenterConfig
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.SaveAllCustomerCenterConfigsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ICustomerServiceAgent.SaveAllCustomerCenterConfigsAsync
  isExternal: true
  name: SaveAllCustomerCenterConfigsAsync
  nameWithType: ICustomerServiceAgent.SaveAllCustomerCenterConfigsAsync
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.SaveAllCustomerCenterConfigsAsync
- uid: SuperOffice.WebApi.Data.CustomerCenterConfig[]
  isExternal: true
  name: CustomerCenterConfig[]
  nameWithType: CustomerCenterConfig[]
  fullName: SuperOffice.WebApi.Data.CustomerCenterConfig[]
  nameWithType.vb: CustomerCenterConfig()
  fullName.vb: SuperOffice.WebApi.Data.CustomerCenterConfig()
  name.vb: CustomerCenterConfig()
  spec.csharp:
  - uid: SuperOffice.WebApi.Data.CustomerCenterConfig
    name: CustomerCenterConfig
    nameWithType: CustomerCenterConfig
    fullName: SuperOffice.WebApi.Data.CustomerCenterConfig
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.WebApi.Data.CustomerCenterConfig
    name: CustomerCenterConfig
    nameWithType: CustomerCenterConfig
    fullName: SuperOffice.WebApi.Data.CustomerCenterConfig
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.CheckIfCustomizedTemplatesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ICustomerServiceAgent.CheckIfCustomizedTemplatesAsync
  isExternal: true
  name: CheckIfCustomizedTemplatesAsync
  nameWithType: ICustomerServiceAgent.CheckIfCustomizedTemplatesAsync
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.CheckIfCustomizedTemplatesAsync
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetProgramUrlAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetProgramUrlAsync
  isExternal: true
  name: GetProgramUrlAsync
  nameWithType: ICustomerServiceAgent.GetProgramUrlAsync
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetProgramUrlAsync
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetFaqForCustomerAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetFaqForCustomerAsync
  isExternal: true
  name: GetFaqForCustomerAsync
  nameWithType: ICustomerServiceAgent.GetFaqForCustomerAsync
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetFaqForCustomerAsync
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetCustomerServiceStartupAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetCustomerServiceStartupAsync
  isExternal: true
  name: GetCustomerServiceStartupAsync
  nameWithType: ICustomerServiceAgent.GetCustomerServiceStartupAsync
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetCustomerServiceStartupAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.CustomerServiceStartup}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.CustomerServiceStartup}'
  definition: System.Threading.Tasks.Task`1
  name: Task<CustomerServiceStartup>
  nameWithType: Task<CustomerServiceStartup>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.CustomerServiceStartup>
  nameWithType.vb: Task(Of CustomerServiceStartup)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.CustomerServiceStartup)
  name.vb: Task(Of CustomerServiceStartup)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.CustomerServiceStartup
    name: CustomerServiceStartup
    nameWithType: CustomerServiceStartup
    fullName: SuperOffice.WebApi.Data.CustomerServiceStartup
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.CustomerServiceStartup
    name: CustomerServiceStartup
    nameWithType: CustomerServiceStartup
    fullName: SuperOffice.WebApi.Data.CustomerServiceStartup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.ExecuteEventHandlersAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ICustomerServiceAgent.ExecuteEventHandlersAsync
  isExternal: true
  name: ExecuteEventHandlersAsync
  nameWithType: ICustomerServiceAgent.ExecuteEventHandlersAsync
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.ExecuteEventHandlersAsync
- uid: SuperOffice.WebApi.Data.EventData
  commentId: T:SuperOffice.WebApi.Data.EventData
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: EventData
  nameWithType: EventData
  fullName: SuperOffice.WebApi.Data.EventData
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EventData}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.EventData}'
  definition: System.Threading.Tasks.Task`1
  name: Task<EventData>
  nameWithType: Task<EventData>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.EventData>
  nameWithType.vb: Task(Of EventData)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.EventData)
  name.vb: Task(Of EventData)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.EventData
    name: EventData
    nameWithType: EventData
    fullName: SuperOffice.WebApi.Data.EventData
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.EventData
    name: EventData
    nameWithType: EventData
    fullName: SuperOffice.WebApi.Data.EventData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetMailboxesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetMailboxesAsync
  isExternal: true
  name: GetMailboxesAsync
  nameWithType: ICustomerServiceAgent.GetMailboxesAsync
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetMailboxesAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Mailbox[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Mailbox[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Mailbox[]>
  nameWithType: Task<Mailbox[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.Mailbox[]>
  nameWithType.vb: Task(Of Mailbox())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.Mailbox())
  name.vb: Task(Of Mailbox())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.Mailbox
    name: Mailbox
    nameWithType: Mailbox
    fullName: SuperOffice.WebApi.Data.Mailbox
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.Mailbox
    name: Mailbox
    nameWithType: Mailbox
    fullName: SuperOffice.WebApi.Data.Mailbox
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetMailboxEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetMailboxEntityAsync
  isExternal: true
  name: GetMailboxEntityAsync
  nameWithType: ICustomerServiceAgent.GetMailboxEntityAsync
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetMailboxEntityAsync
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetPreviewFaqEntryAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetPreviewFaqEntryAsync
  isExternal: true
  name: GetPreviewFaqEntryAsync
  nameWithType: ICustomerServiceAgent.GetPreviewFaqEntryAsync
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetPreviewFaqEntryAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.PreviewFaqEntry}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.PreviewFaqEntry}'
  definition: System.Threading.Tasks.Task`1
  name: Task<PreviewFaqEntry>
  nameWithType: Task<PreviewFaqEntry>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.PreviewFaqEntry>
  nameWithType.vb: Task(Of PreviewFaqEntry)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.PreviewFaqEntry)
  name.vb: Task(Of PreviewFaqEntry)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.PreviewFaqEntry
    name: PreviewFaqEntry
    nameWithType: PreviewFaqEntry
    fullName: SuperOffice.WebApi.Data.PreviewFaqEntry
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.PreviewFaqEntry
    name: PreviewFaqEntry
    nameWithType: PreviewFaqEntry
    fullName: SuperOffice.WebApi.Data.PreviewFaqEntry
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetPreviewQuickReplyAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetPreviewQuickReplyAsync
  isExternal: true
  name: GetPreviewQuickReplyAsync
  nameWithType: ICustomerServiceAgent.GetPreviewQuickReplyAsync
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetPreviewQuickReplyAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.PreviewQuickReply}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.PreviewQuickReply}'
  definition: System.Threading.Tasks.Task`1
  name: Task<PreviewQuickReply>
  nameWithType: Task<PreviewQuickReply>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.PreviewQuickReply>
  nameWithType.vb: Task(Of PreviewQuickReply)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.PreviewQuickReply)
  name.vb: Task(Of PreviewQuickReply)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.PreviewQuickReply
    name: PreviewQuickReply
    nameWithType: PreviewQuickReply
    fullName: SuperOffice.WebApi.Data.PreviewQuickReply
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.PreviewQuickReply
    name: PreviewQuickReply
    nameWithType: PreviewQuickReply
    fullName: SuperOffice.WebApi.Data.PreviewQuickReply
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetPreviewReplyTemplateAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetPreviewReplyTemplateAsync
  isExternal: true
  name: GetPreviewReplyTemplateAsync
  nameWithType: ICustomerServiceAgent.GetPreviewReplyTemplateAsync
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetPreviewReplyTemplateAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.PreviewReplyTemplate}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.PreviewReplyTemplate}'
  definition: System.Threading.Tasks.Task`1
  name: Task<PreviewReplyTemplate>
  nameWithType: Task<PreviewReplyTemplate>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.PreviewReplyTemplate>
  nameWithType.vb: Task(Of PreviewReplyTemplate)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.PreviewReplyTemplate)
  name.vb: Task(Of PreviewReplyTemplate)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.PreviewReplyTemplate
    name: PreviewReplyTemplate
    nameWithType: PreviewReplyTemplate
    fullName: SuperOffice.WebApi.Data.PreviewReplyTemplate
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.PreviewReplyTemplate
    name: PreviewReplyTemplate
    nameWithType: PreviewReplyTemplate
    fullName: SuperOffice.WebApi.Data.PreviewReplyTemplate
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetParsedTemplateAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetParsedTemplateAsync
  isExternal: true
  name: GetParsedTemplateAsync
  nameWithType: ICustomerServiceAgent.GetParsedTemplateAsync
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetParsedTemplateAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ReplyTemplateParsed}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ReplyTemplateParsed}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ReplyTemplateParsed>
  nameWithType: Task<ReplyTemplateParsed>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.ReplyTemplateParsed>
  nameWithType.vb: Task(Of ReplyTemplateParsed)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.ReplyTemplateParsed)
  name.vb: Task(Of ReplyTemplateParsed)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.ReplyTemplateParsed
    name: ReplyTemplateParsed
    nameWithType: ReplyTemplateParsed
    fullName: SuperOffice.WebApi.Data.ReplyTemplateParsed
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.ReplyTemplateParsed
    name: ReplyTemplateParsed
    nameWithType: ReplyTemplateParsed
    fullName: SuperOffice.WebApi.Data.ReplyTemplateParsed
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetUnparsedTemplateAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetUnparsedTemplateAsync
  isExternal: true
  name: GetUnparsedTemplateAsync
  nameWithType: ICustomerServiceAgent.GetUnparsedTemplateAsync
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetUnparsedTemplateAsync
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetSmsConfigAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetSmsConfigAsync
  isExternal: true
  name: GetSmsConfigAsync
  nameWithType: ICustomerServiceAgent.GetSmsConfigAsync
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetSmsConfigAsync
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.TestSmtpServerAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ICustomerServiceAgent.TestSmtpServerAsync
  isExternal: true
  name: TestSmtpServerAsync
  nameWithType: ICustomerServiceAgent.TestSmtpServerAsync
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.TestSmtpServerAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SmtpTestResult}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SmtpTestResult}'
  definition: System.Threading.Tasks.Task`1
  name: Task<SmtpTestResult>
  nameWithType: Task<SmtpTestResult>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.SmtpTestResult>
  nameWithType.vb: Task(Of SmtpTestResult)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.SmtpTestResult)
  name.vb: Task(Of SmtpTestResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.SmtpTestResult
    name: SmtpTestResult
    nameWithType: SmtpTestResult
    fullName: SuperOffice.WebApi.Data.SmtpTestResult
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.SmtpTestResult
    name: SmtpTestResult
    nameWithType: SmtpTestResult
    fullName: SuperOffice.WebApi.Data.SmtpTestResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetStatisticsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetStatisticsAsync
  isExternal: true
  name: GetStatisticsAsync
  nameWithType: ICustomerServiceAgent.GetStatisticsAsync
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetStatisticsAsync
- uid: SuperOffice.WebApi.Data.StatusScreenPanelType[]
  isExternal: true
  name: StatusScreenPanelType[]
  nameWithType: StatusScreenPanelType[]
  fullName: SuperOffice.WebApi.Data.StatusScreenPanelType[]
  nameWithType.vb: StatusScreenPanelType()
  fullName.vb: SuperOffice.WebApi.Data.StatusScreenPanelType()
  name.vb: StatusScreenPanelType()
  spec.csharp:
  - uid: SuperOffice.WebApi.Data.StatusScreenPanelType
    name: StatusScreenPanelType
    nameWithType: StatusScreenPanelType
    fullName: SuperOffice.WebApi.Data.StatusScreenPanelType
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.WebApi.Data.StatusScreenPanelType
    name: StatusScreenPanelType
    nameWithType: StatusScreenPanelType
    fullName: SuperOffice.WebApi.Data.StatusScreenPanelType
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.StatisticsDataSet[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.StatisticsDataSet[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<StatisticsDataSet[]>
  nameWithType: Task<StatisticsDataSet[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.StatisticsDataSet[]>
  nameWithType.vb: Task(Of StatisticsDataSet())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.StatisticsDataSet())
  name.vb: Task(Of StatisticsDataSet())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.StatisticsDataSet
    name: StatisticsDataSet
    nameWithType: StatisticsDataSet
    fullName: SuperOffice.WebApi.Data.StatisticsDataSet
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.StatisticsDataSet
    name: StatisticsDataSet
    nameWithType: StatisticsDataSet
    fullName: SuperOffice.WebApi.Data.StatisticsDataSet
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetSystemTemplateSettingsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetSystemTemplateSettingsAsync
  isExternal: true
  name: GetSystemTemplateSettingsAsync
  nameWithType: ICustomerServiceAgent.GetSystemTemplateSettingsAsync
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.GetSystemTemplateSettingsAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SystemTemplateSettings}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SystemTemplateSettings}'
  definition: System.Threading.Tasks.Task`1
  name: Task<SystemTemplateSettings>
  nameWithType: Task<SystemTemplateSettings>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.SystemTemplateSettings>
  nameWithType.vb: Task(Of SystemTemplateSettings)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.SystemTemplateSettings)
  name.vb: Task(Of SystemTemplateSettings)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.SystemTemplateSettings
    name: SystemTemplateSettings
    nameWithType: SystemTemplateSettings
    fullName: SuperOffice.WebApi.Data.SystemTemplateSettings
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.SystemTemplateSettings
    name: SystemTemplateSettings
    nameWithType: SystemTemplateSettings
    fullName: SuperOffice.WebApi.Data.SystemTemplateSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.SaveSystemTemplateSettingsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ICustomerServiceAgent.SaveSystemTemplateSettingsAsync
  isExternal: true
  name: SaveSystemTemplateSettingsAsync
  nameWithType: ICustomerServiceAgent.SaveSystemTemplateSettingsAsync
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.SaveSystemTemplateSettingsAsync
- uid: SuperOffice.WebApi.Data.SystemTemplateSettings
  commentId: T:SuperOffice.WebApi.Data.SystemTemplateSettings
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: SystemTemplateSettings
  nameWithType: SystemTemplateSettings
  fullName: SuperOffice.WebApi.Data.SystemTemplateSettings
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.CreateTicketFromMailDataAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ICustomerServiceAgent.CreateTicketFromMailDataAsync
  isExternal: true
  name: CreateTicketFromMailDataAsync
  nameWithType: ICustomerServiceAgent.CreateTicketFromMailDataAsync
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.CreateTicketFromMailDataAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketInfo}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketInfo}'
  definition: System.Threading.Tasks.Task`1
  name: Task<TicketInfo>
  nameWithType: Task<TicketInfo>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.TicketInfo>
  nameWithType.vb: Task(Of TicketInfo)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.TicketInfo)
  name.vb: Task(Of TicketInfo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.TicketInfo
    name: TicketInfo
    nameWithType: TicketInfo
    fullName: SuperOffice.WebApi.Data.TicketInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.TicketInfo
    name: TicketInfo
    nameWithType: TicketInfo
    fullName: SuperOffice.WebApi.Data.TicketInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.AddMessageFromMailDataAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ICustomerServiceAgent.AddMessageFromMailDataAsync
  isExternal: true
  name: AddMessageFromMailDataAsync
  nameWithType: ICustomerServiceAgent.AddMessageFromMailDataAsync
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.AddMessageFromMailDataAsync
- uid: SuperOffice.WebApi.Agents.ICustomerServiceAgent.FindTicketsByTitleOrIdAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ICustomerServiceAgent.FindTicketsByTitleOrIdAsync
  isExternal: true
  name: FindTicketsByTitleOrIdAsync
  nameWithType: ICustomerServiceAgent.FindTicketsByTitleOrIdAsync
  fullName: SuperOffice.WebApi.Agents.ICustomerServiceAgent.FindTicketsByTitleOrIdAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketInfo[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketInfo[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<TicketInfo[]>
  nameWithType: Task<TicketInfo[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.TicketInfo[]>
  nameWithType.vb: Task(Of TicketInfo())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.TicketInfo())
  name.vb: Task(Of TicketInfo())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.TicketInfo
    name: TicketInfo
    nameWithType: TicketInfo
    fullName: SuperOffice.WebApi.Data.TicketInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.TicketInfo
    name: TicketInfo
    nameWithType: TicketInfo
    fullName: SuperOffice.WebApi.Data.TicketInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
