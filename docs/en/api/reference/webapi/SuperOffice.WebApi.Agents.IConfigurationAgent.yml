### YamlMime:ManagedReference
items:
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent
  commentId: T:SuperOffice.WebApi.Agents.IConfigurationAgent
  id: IConfigurationAgent
  parent: SuperOffice.WebApi.Agents
  children:
  - SuperOffice.WebApi.Agents.IConfigurationAgent.ClearConfigurationCacheAsync(System.String,System.String,System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.CreateDefaultConfigurableScreenDeltaAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.CreateDefaultDiaryViewEntityAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.CreateDefaultSystemEventEntityAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.DeleteConfigurableScreenDeltaAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.DeleteDiaryViewEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.DeleteSystemEventEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.DeleteWindowPosSizeAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.ExistsSystemEventAsync(System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.GetAllFeatureTogglesAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.GetAnyConfigurationAsync(System.String,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.GetApplicationConfigurationAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.GetCRMUrlAsync(System.String,System.String,System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.GetCSAuthUrlAsync(System.String,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.GetCSRegistryValueAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.GetCSWwwFolderAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.GetConfigurableScreenDeltaAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.GetConfigurableScreenDeltasByDeltaAsync(SuperOffice.WebApi.Data.ConfigurableScreenDelta,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.GetConfigurableScreenDeltasByQueryAsync(SuperOffice.WebApi.Data.DeltaQuery,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.GetCsCgiUrlInternalAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.GetCsProgramUrlAsync(System.String,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.GetCustomerUrlAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.GetDiaryViewEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.GetEMarketingUrlAsync(System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.GetEmailNumberOfDaysAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.GetFilterListAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.GetHelpDispatcherUrlAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.GetMyWindowPosSizesAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.GetObjectMappingAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.GetPageConfigurationAsync(System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.GetRecipeAppliesToMappingsAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.GetRefreshedPageConfigurationAsync(System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.GetScreenConfigurationDeltaAsync(SuperOffice.WebApi.Data.DeltaType,SuperOffice.WebApi.Data.DeltaState,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.GetScreenConfigurationDeltasAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.GetSpfDomainAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.GetSystemEventEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.GetWindowPosSizeAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.GetWindowPosSizeListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.GetWindowPosSizesOnAssociateIdAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.GetWindowPosSizesOnPersonIdAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.GetWwwUrlAsync(System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.GetWwwUrlForSMWebAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.RebuildCustomObjectArchivePanelDeltasAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.RebuildTaskMenuDeltasAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.RebuildUdefDeltasAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.RebuildWebpanelDeltasAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.SaveAndPublishAsync(SuperOffice.WebApi.Data.ConfigurableScreenDelta,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.SaveConfigurableScreenDeltaAsync(SuperOffice.WebApi.Data.ConfigurableScreenDelta,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.SaveDiaryViewEntityAsync(SuperOffice.WebApi.Data.DiaryViewEntity,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.SaveSystemEventEntityAsync(SuperOffice.WebApi.Data.SystemEventEntity,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.SaveWindowPosSizeAsync(SuperOffice.WebApi.Data.WindowPosSize,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.SaveWindowPosSizesAsync(SuperOffice.WebApi.Data.WindowPosSize[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IConfigurationAgent.SetAppliesToKeyAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  langs:
  - csharp
  - vb
  name: IConfigurationAgent
  nameWithType: IConfigurationAgent
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent
  type: Interface
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: User interface configuration - XMLs and other elements such as inter-client URLs
  example: []
  syntax:
    content: 'public interface IConfigurationAgent : IDisposable'
    content.vb: Public Interface IConfigurationAgent Inherits IDisposable
  inheritedMembers:
  - System.IDisposable.Dispose
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.CreateDefaultConfigurableScreenDeltaAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.CreateDefaultConfigurableScreenDeltaAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultConfigurableScreenDeltaAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultConfigurableScreenDeltaAsync(RequestOptions)
  nameWithType: IConfigurationAgent.CreateDefaultConfigurableScreenDeltaAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.CreateDefaultConfigurableScreenDeltaAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: >-
    Set default values into a new ConfigurableScreenDelta.

    NetServer calculates default values on the entity, which is required when creating/storing a new instance
  example: []
  syntax:
    content: Task<ConfigurableScreenDelta> CreateDefaultConfigurableScreenDeltaAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ConfigurableScreenDelta}
      description: A blank ConfigurableScreenDelta
    content.vb: Function CreateDefaultConfigurableScreenDeltaAsync(requestOptions As RequestOptions = Nothing) As Task(Of ConfigurableScreenDelta)
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.CreateDefaultConfigurableScreenDeltaAsync*
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.SaveConfigurableScreenDeltaAsync(SuperOffice.WebApi.Data.ConfigurableScreenDelta,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.SaveConfigurableScreenDeltaAsync(SuperOffice.WebApi.Data.ConfigurableScreenDelta,SuperOffice.WebApi.RequestOptions)
  id: SaveConfigurableScreenDeltaAsync(SuperOffice.WebApi.Data.ConfigurableScreenDelta,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: SaveConfigurableScreenDeltaAsync(ConfigurableScreenDelta, RequestOptions)
  nameWithType: IConfigurationAgent.SaveConfigurableScreenDeltaAsync(ConfigurableScreenDelta, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.SaveConfigurableScreenDeltaAsync(SuperOffice.WebApi.Data.ConfigurableScreenDelta, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Updates the existing ConfigurableScreenDelta or creates a new ConfigurableScreenDelta if the id parameter is 0.
  example: []
  syntax:
    content: Task<ConfigurableScreenDelta> SaveConfigurableScreenDeltaAsync(ConfigurableScreenDelta configurableScreenDelta, RequestOptions requestOptions = null)
    parameters:
    - id: configurableScreenDelta
      type: SuperOffice.WebApi.Data.ConfigurableScreenDelta
      description: The ConfigurableScreenDelta that is saved.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ConfigurableScreenDelta}
      description: New or updated ConfigurableScreenDelta
    content.vb: Function SaveConfigurableScreenDeltaAsync(configurableScreenDelta As ConfigurableScreenDelta, requestOptions As RequestOptions = Nothing) As Task(Of ConfigurableScreenDelta)
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.SaveConfigurableScreenDeltaAsync*
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.DeleteConfigurableScreenDeltaAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.DeleteConfigurableScreenDeltaAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: DeleteConfigurableScreenDeltaAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: DeleteConfigurableScreenDeltaAsync(int, RequestOptions)
  nameWithType: IConfigurationAgent.DeleteConfigurableScreenDeltaAsync(int, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.DeleteConfigurableScreenDeltaAsync(int, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Deletes the ConfigurableScreenDelta
  example: []
  syntax:
    content: Task DeleteConfigurableScreenDeltaAsync(int configurableScreenDeltaId, RequestOptions requestOptions = null)
    parameters:
    - id: configurableScreenDeltaId
      type: System.Int32
      description: The identity of the ConfigurableScreenDelta
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function DeleteConfigurableScreenDeltaAsync(configurableScreenDeltaId As Integer, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.DeleteConfigurableScreenDeltaAsync*
  nameWithType.vb: IConfigurationAgent.DeleteConfigurableScreenDeltaAsync(Integer, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IConfigurationAgent.DeleteConfigurableScreenDeltaAsync(Integer, SuperOffice.WebApi.RequestOptions)
  name.vb: DeleteConfigurableScreenDeltaAsync(Integer, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.CreateDefaultDiaryViewEntityAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.CreateDefaultDiaryViewEntityAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultDiaryViewEntityAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultDiaryViewEntityAsync(RequestOptions)
  nameWithType: IConfigurationAgent.CreateDefaultDiaryViewEntityAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.CreateDefaultDiaryViewEntityAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: >-
    Set default values into a new DiaryViewEntity.

    NetServer calculates default values on the entity, which is required when creating/storing a new instance
  example: []
  syntax:
    content: Task<DiaryViewEntity> CreateDefaultDiaryViewEntityAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DiaryViewEntity}
      description: A blank DiaryViewEntity
    content.vb: Function CreateDefaultDiaryViewEntityAsync(requestOptions As RequestOptions = Nothing) As Task(Of DiaryViewEntity)
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.CreateDefaultDiaryViewEntityAsync*
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.SaveDiaryViewEntityAsync(SuperOffice.WebApi.Data.DiaryViewEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.SaveDiaryViewEntityAsync(SuperOffice.WebApi.Data.DiaryViewEntity,SuperOffice.WebApi.RequestOptions)
  id: SaveDiaryViewEntityAsync(SuperOffice.WebApi.Data.DiaryViewEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: SaveDiaryViewEntityAsync(DiaryViewEntity, RequestOptions)
  nameWithType: IConfigurationAgent.SaveDiaryViewEntityAsync(DiaryViewEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.SaveDiaryViewEntityAsync(SuperOffice.WebApi.Data.DiaryViewEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Updates the existing DiaryViewEntity or creates a new DiaryViewEntity if the id parameter is 0.
  example: []
  syntax:
    content: Task<DiaryViewEntity> SaveDiaryViewEntityAsync(DiaryViewEntity diaryViewEntity, RequestOptions requestOptions = null)
    parameters:
    - id: diaryViewEntity
      type: SuperOffice.WebApi.Data.DiaryViewEntity
      description: The DiaryViewEntity that is saved.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DiaryViewEntity}
      description: New or updated DiaryViewEntity
    content.vb: Function SaveDiaryViewEntityAsync(diaryViewEntity As DiaryViewEntity, requestOptions As RequestOptions = Nothing) As Task(Of DiaryViewEntity)
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.SaveDiaryViewEntityAsync*
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.DeleteDiaryViewEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.DeleteDiaryViewEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: DeleteDiaryViewEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: DeleteDiaryViewEntityAsync(int, RequestOptions)
  nameWithType: IConfigurationAgent.DeleteDiaryViewEntityAsync(int, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.DeleteDiaryViewEntityAsync(int, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Deletes the DiaryViewEntity
  example: []
  syntax:
    content: Task DeleteDiaryViewEntityAsync(int diaryViewEntityId, RequestOptions requestOptions = null)
    parameters:
    - id: diaryViewEntityId
      type: System.Int32
      description: The identity of the DiaryViewEntity
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function DeleteDiaryViewEntityAsync(diaryViewEntityId As Integer, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.DeleteDiaryViewEntityAsync*
  nameWithType.vb: IConfigurationAgent.DeleteDiaryViewEntityAsync(Integer, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IConfigurationAgent.DeleteDiaryViewEntityAsync(Integer, SuperOffice.WebApi.RequestOptions)
  name.vb: DeleteDiaryViewEntityAsync(Integer, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.CreateDefaultSystemEventEntityAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.CreateDefaultSystemEventEntityAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultSystemEventEntityAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultSystemEventEntityAsync(RequestOptions)
  nameWithType: IConfigurationAgent.CreateDefaultSystemEventEntityAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.CreateDefaultSystemEventEntityAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: >-
    Set default values into a new SystemEventEntity.

    NetServer calculates default values on the entity, which is required when creating/storing a new instance
  example: []
  syntax:
    content: Task<SystemEventEntity> CreateDefaultSystemEventEntityAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SystemEventEntity}
      description: A blank SystemEventEntity
    content.vb: Function CreateDefaultSystemEventEntityAsync(requestOptions As RequestOptions = Nothing) As Task(Of SystemEventEntity)
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.CreateDefaultSystemEventEntityAsync*
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.SaveSystemEventEntityAsync(SuperOffice.WebApi.Data.SystemEventEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.SaveSystemEventEntityAsync(SuperOffice.WebApi.Data.SystemEventEntity,SuperOffice.WebApi.RequestOptions)
  id: SaveSystemEventEntityAsync(SuperOffice.WebApi.Data.SystemEventEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: SaveSystemEventEntityAsync(SystemEventEntity, RequestOptions)
  nameWithType: IConfigurationAgent.SaveSystemEventEntityAsync(SystemEventEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.SaveSystemEventEntityAsync(SuperOffice.WebApi.Data.SystemEventEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Updates the existing SystemEventEntity or creates a new SystemEventEntity if the id parameter is 0.
  example: []
  syntax:
    content: Task<SystemEventEntity> SaveSystemEventEntityAsync(SystemEventEntity systemEventEntity, RequestOptions requestOptions = null)
    parameters:
    - id: systemEventEntity
      type: SuperOffice.WebApi.Data.SystemEventEntity
      description: The SystemEventEntity that is saved.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SystemEventEntity}
      description: New or updated SystemEventEntity
    content.vb: Function SaveSystemEventEntityAsync(systemEventEntity As SystemEventEntity, requestOptions As RequestOptions = Nothing) As Task(Of SystemEventEntity)
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.SaveSystemEventEntityAsync*
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.DeleteSystemEventEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.DeleteSystemEventEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: DeleteSystemEventEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: DeleteSystemEventEntityAsync(int, RequestOptions)
  nameWithType: IConfigurationAgent.DeleteSystemEventEntityAsync(int, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.DeleteSystemEventEntityAsync(int, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Deletes the SystemEventEntity
  example: []
  syntax:
    content: Task DeleteSystemEventEntityAsync(int systemEventEntityId, RequestOptions requestOptions = null)
    parameters:
    - id: systemEventEntityId
      type: System.Int32
      description: The identity of the SystemEventEntity
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function DeleteSystemEventEntityAsync(systemEventEntityId As Integer, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.DeleteSystemEventEntityAsync*
  nameWithType.vb: IConfigurationAgent.DeleteSystemEventEntityAsync(Integer, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IConfigurationAgent.DeleteSystemEventEntityAsync(Integer, SuperOffice.WebApi.RequestOptions)
  name.vb: DeleteSystemEventEntityAsync(Integer, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetConfigurableScreenDeltaAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.GetConfigurableScreenDeltaAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetConfigurableScreenDeltaAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetConfigurableScreenDeltaAsync(int, RequestOptions)
  nameWithType: IConfigurationAgent.GetConfigurableScreenDeltaAsync(int, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetConfigurableScreenDeltaAsync(int, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Gets a specific ConfigurableScreenDelta object.
  example: []
  syntax:
    content: Task<ConfigurableScreenDelta> GetConfigurableScreenDeltaAsync(int configurableScreenDeltaId, RequestOptions requestOptions = null)
    parameters:
    - id: configurableScreenDeltaId
      type: System.Int32
      description: The identifier of the ConfigurableScreenDelta object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ConfigurableScreenDelta}
      description: ConfigurableScreenDelta
    content.vb: Function GetConfigurableScreenDeltaAsync(configurableScreenDeltaId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of ConfigurableScreenDelta)
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.GetConfigurableScreenDeltaAsync*
  nameWithType.vb: IConfigurationAgent.GetConfigurableScreenDeltaAsync(Integer, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IConfigurationAgent.GetConfigurableScreenDeltaAsync(Integer, SuperOffice.WebApi.RequestOptions)
  name.vb: GetConfigurableScreenDeltaAsync(Integer, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetScreenConfigurationDeltasAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.GetScreenConfigurationDeltasAsync(SuperOffice.WebApi.RequestOptions)
  id: GetScreenConfigurationDeltasAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetScreenConfigurationDeltasAsync(RequestOptions)
  nameWithType: IConfigurationAgent.GetScreenConfigurationDeltasAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetScreenConfigurationDeltasAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: This method will return a json with all deltas for screen
  example: []
  syntax:
    content: Task<string> GetScreenConfigurationDeltasAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: A string with all recipe deltas in json for logged in associate
    content.vb: Function GetScreenConfigurationDeltasAsync(requestOptions As RequestOptions = Nothing) As Task(Of String)
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.GetScreenConfigurationDeltasAsync*
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetScreenConfigurationDeltaAsync(SuperOffice.WebApi.Data.DeltaType,SuperOffice.WebApi.Data.DeltaState,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.GetScreenConfigurationDeltaAsync(SuperOffice.WebApi.Data.DeltaType,SuperOffice.WebApi.Data.DeltaState,SuperOffice.WebApi.RequestOptions)
  id: GetScreenConfigurationDeltaAsync(SuperOffice.WebApi.Data.DeltaType,SuperOffice.WebApi.Data.DeltaState,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetScreenConfigurationDeltaAsync(DeltaType, DeltaState, RequestOptions)
  nameWithType: IConfigurationAgent.GetScreenConfigurationDeltaAsync(DeltaType, DeltaState, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetScreenConfigurationDeltaAsync(SuperOffice.WebApi.Data.DeltaType, SuperOffice.WebApi.Data.DeltaState, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: This method will return a json with all deltas for screen
  example: []
  syntax:
    content: Task<string> GetScreenConfigurationDeltaAsync(DeltaType deltaType, DeltaState deltaState, RequestOptions requestOptions = null)
    parameters:
    - id: deltaType
      type: SuperOffice.WebApi.Data.DeltaType
      description: 'The recipe in json for this DeltaType: System, WebPanel, CustomFields, Custom...'
    - id: deltaState
      type: SuperOffice.WebApi.Data.DeltaState
      description: Draft or published or None
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: A string with recipe delta in json for logged in associate of given deltatype
    content.vb: Function GetScreenConfigurationDeltaAsync(deltaType As DeltaType, deltaState As DeltaState, requestOptions As RequestOptions = Nothing) As Task(Of String)
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.GetScreenConfigurationDeltaAsync*
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetConfigurableScreenDeltasByDeltaAsync(SuperOffice.WebApi.Data.ConfigurableScreenDelta,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.GetConfigurableScreenDeltasByDeltaAsync(SuperOffice.WebApi.Data.ConfigurableScreenDelta,SuperOffice.WebApi.RequestOptions)
  id: GetConfigurableScreenDeltasByDeltaAsync(SuperOffice.WebApi.Data.ConfigurableScreenDelta,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetConfigurableScreenDeltasByDeltaAsync(ConfigurableScreenDelta, RequestOptions)
  nameWithType: IConfigurationAgent.GetConfigurableScreenDeltasByDeltaAsync(ConfigurableScreenDelta, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetConfigurableScreenDeltasByDeltaAsync(SuperOffice.WebApi.Data.ConfigurableScreenDelta, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: This method will return a configurablescreen delta matching the properties received from the incomming delta
  example: []
  syntax:
    content: Task<ConfigurableScreenDelta[]> GetConfigurableScreenDeltasByDeltaAsync(ConfigurableScreenDelta configurableScreenDelta, RequestOptions requestOptions = null)
    parameters:
    - id: configurableScreenDelta
      type: SuperOffice.WebApi.Data.ConfigurableScreenDelta
      description: A delta populated with wanted properties
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ConfigurableScreenDelta[]}
      description: An array of deltas matching the values of the incomming parameter-delta
    content.vb: Function GetConfigurableScreenDeltasByDeltaAsync(configurableScreenDelta As ConfigurableScreenDelta, requestOptions As RequestOptions = Nothing) As Task(Of ConfigurableScreenDelta())
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.GetConfigurableScreenDeltasByDeltaAsync*
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetConfigurableScreenDeltasByQueryAsync(SuperOffice.WebApi.Data.DeltaQuery,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.GetConfigurableScreenDeltasByQueryAsync(SuperOffice.WebApi.Data.DeltaQuery,SuperOffice.WebApi.RequestOptions)
  id: GetConfigurableScreenDeltasByQueryAsync(SuperOffice.WebApi.Data.DeltaQuery,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetConfigurableScreenDeltasByQueryAsync(DeltaQuery, RequestOptions)
  nameWithType: IConfigurationAgent.GetConfigurableScreenDeltasByQueryAsync(DeltaQuery, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetConfigurableScreenDeltasByQueryAsync(SuperOffice.WebApi.Data.DeltaQuery, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: This method will return a configurablescreen delta matching the properties received from the incomming query
  example: []
  syntax:
    content: Task<ConfigurableScreenDelta[]> GetConfigurableScreenDeltasByQueryAsync(DeltaQuery deltaQuery, RequestOptions requestOptions = null)
    parameters:
    - id: deltaQuery
      type: SuperOffice.WebApi.Data.DeltaQuery
      description: An object populated with wanted properties for the deltas to return
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ConfigurableScreenDelta[]}
      description: An array of deltas matching the values of the incomming query
    content.vb: Function GetConfigurableScreenDeltasByQueryAsync(deltaQuery As DeltaQuery, requestOptions As RequestOptions = Nothing) As Task(Of ConfigurableScreenDelta())
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.GetConfigurableScreenDeltasByQueryAsync*
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.RebuildUdefDeltasAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.RebuildUdefDeltasAsync(SuperOffice.WebApi.RequestOptions)
  id: RebuildUdefDeltasAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: RebuildUdefDeltasAsync(RequestOptions)
  nameWithType: IConfigurationAgent.RebuildUdefDeltasAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.RebuildUdefDeltasAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Flush and rebuild userdefined field deltas. Mostly used after publishing udefs or adding/editing Customer Service extrafields
  example: []
  syntax:
    content: Task RebuildUdefDeltasAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task
      description: No return value
    content.vb: Function RebuildUdefDeltasAsync(requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.RebuildUdefDeltasAsync*
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.RebuildWebpanelDeltasAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.RebuildWebpanelDeltasAsync(SuperOffice.WebApi.RequestOptions)
  id: RebuildWebpanelDeltasAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: RebuildWebpanelDeltasAsync(RequestOptions)
  nameWithType: IConfigurationAgent.RebuildWebpanelDeltasAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.RebuildWebpanelDeltasAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Flush and rebuild webpanel deltas. Mostly used after adding/editing webpanels or change group visibility of them
  example: []
  syntax:
    content: Task RebuildWebpanelDeltasAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task
      description: No return value
    content.vb: Function RebuildWebpanelDeltasAsync(requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.RebuildWebpanelDeltasAsync*
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.SaveAndPublishAsync(SuperOffice.WebApi.Data.ConfigurableScreenDelta,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.SaveAndPublishAsync(SuperOffice.WebApi.Data.ConfigurableScreenDelta,SuperOffice.WebApi.RequestOptions)
  id: SaveAndPublishAsync(SuperOffice.WebApi.Data.ConfigurableScreenDelta,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: SaveAndPublishAsync(ConfigurableScreenDelta, RequestOptions)
  nameWithType: IConfigurationAgent.SaveAndPublishAsync(ConfigurableScreenDelta, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.SaveAndPublishAsync(SuperOffice.WebApi.Data.ConfigurableScreenDelta, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Save the incomming draft and publish
  example: []
  syntax:
    content: Task<ConfigurableScreenDelta> SaveAndPublishAsync(ConfigurableScreenDelta configurableScreenDelta, RequestOptions requestOptions = null)
    parameters:
    - id: configurableScreenDelta
      type: SuperOffice.WebApi.Data.ConfigurableScreenDelta
      description: The ConfigurableScreenDelta draft that is going to be published
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ConfigurableScreenDelta}
      description: The newly published version of the ConfigurbleScreenDelta
    content.vb: Function SaveAndPublishAsync(configurableScreenDelta As ConfigurableScreenDelta, requestOptions As RequestOptions = Nothing) As Task(Of ConfigurableScreenDelta)
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.SaveAndPublishAsync*
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.SetAppliesToKeyAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.SetAppliesToKeyAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  id: SetAppliesToKeyAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: SetAppliesToKeyAsync(string, string, RequestOptions)
  nameWithType: IConfigurationAgent.SetAppliesToKeyAsync(string, string, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.SetAppliesToKeyAsync(string, string, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Set the type of assignTo the deltas of the given recipe should have
  example: []
  syntax:
    content: Task SetAppliesToKeyAsync(string recipeId, string appliesToKey, RequestOptions requestOptions = null)
    parameters:
    - id: recipeId
      type: System.String
      description: The recipeId that will use this apply to type
    - id: appliesToKey
      type: System.String
      description: The type we should use for differencing between delta layout. Like usergroup or project type. Saved in table ConfigurableScreenAppliesTo
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task
      description: Returns nothing
    content.vb: Function SetAppliesToKeyAsync(recipeId As String, appliesToKey As String, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.SetAppliesToKeyAsync*
  nameWithType.vb: IConfigurationAgent.SetAppliesToKeyAsync(String, String, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IConfigurationAgent.SetAppliesToKeyAsync(String, String, SuperOffice.WebApi.RequestOptions)
  name.vb: SetAppliesToKeyAsync(String, String, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetRecipeAppliesToMappingsAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.GetRecipeAppliesToMappingsAsync(SuperOffice.WebApi.RequestOptions)
  id: GetRecipeAppliesToMappingsAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetRecipeAppliesToMappingsAsync(RequestOptions)
  nameWithType: IConfigurationAgent.GetRecipeAppliesToMappingsAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetRecipeAppliesToMappingsAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Return the a  dictionary with recipeId as key, and chosen appliesTo for that recipe, Like projecttype for projectcardrecipe
  example: []
  syntax:
    content: Task<StringDictionary> GetRecipeAppliesToMappingsAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.StringDictionary}
      description: Mapping of recipeId and selected appliesToKey
    content.vb: Function GetRecipeAppliesToMappingsAsync(requestOptions As RequestOptions = Nothing) As Task(Of StringDictionary)
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.GetRecipeAppliesToMappingsAsync*
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.RebuildCustomObjectArchivePanelDeltasAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.RebuildCustomObjectArchivePanelDeltasAsync(SuperOffice.WebApi.RequestOptions)
  id: RebuildCustomObjectArchivePanelDeltasAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: RebuildCustomObjectArchivePanelDeltasAsync(RequestOptions)
  nameWithType: IConfigurationAgent.RebuildCustomObjectArchivePanelDeltasAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.RebuildCustomObjectArchivePanelDeltasAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Flush and rebuild CustomObjectArchivePanel deltas.
  example: []
  syntax:
    content: Task RebuildCustomObjectArchivePanelDeltasAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task
      description: No return value
    content.vb: Function RebuildCustomObjectArchivePanelDeltasAsync(requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.RebuildCustomObjectArchivePanelDeltasAsync*
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.RebuildTaskMenuDeltasAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.RebuildTaskMenuDeltasAsync(SuperOffice.WebApi.RequestOptions)
  id: RebuildTaskMenuDeltasAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: RebuildTaskMenuDeltasAsync(RequestOptions)
  nameWithType: IConfigurationAgent.RebuildTaskMenuDeltasAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.RebuildTaskMenuDeltasAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Flush and rebuild TaskMenu deltas.
  example: []
  syntax:
    content: Task RebuildTaskMenuDeltasAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task
      description: No return value
    content.vb: Function RebuildTaskMenuDeltasAsync(requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.RebuildTaskMenuDeltasAsync*
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetApplicationConfigurationAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.GetApplicationConfigurationAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetApplicationConfigurationAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetApplicationConfigurationAsync(string, string, RequestOptions)
  nameWithType: IConfigurationAgent.GetApplicationConfigurationAsync(string, string, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetApplicationConfigurationAsync(string, string, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Return the application configuration. This is a list of pages, with information about the name, main panel and preference mappings of each page.
  example: []
  syntax:
    content: Task<string> GetApplicationConfigurationAsync(string application, string instance, RequestOptions requestOptions = null)
    parameters:
    - id: application
      type: System.String
      description: The application name, for instance 'SixWeb'
    - id: instance
      type: System.String
      description: The instance name for the application, like 'MainInstance'
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: XML structure containing the application configuration
    content.vb: Function GetApplicationConfigurationAsync(application As String, instance As String, requestOptions As RequestOptions = Nothing) As Task(Of String)
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.GetApplicationConfigurationAsync*
  nameWithType.vb: IConfigurationAgent.GetApplicationConfigurationAsync(String, String, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IConfigurationAgent.GetApplicationConfigurationAsync(String, String, SuperOffice.WebApi.RequestOptions)
  name.vb: GetApplicationConfigurationAsync(String, String, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetPageConfigurationAsync(System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.GetPageConfigurationAsync(System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetPageConfigurationAsync(System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetPageConfigurationAsync(string, string, string, RequestOptions)
  nameWithType: IConfigurationAgent.GetPageConfigurationAsync(string, string, string, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetPageConfigurationAsync(string, string, string, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Get the configuration for one whole web page, including all its panels etc.  totally asynchronous items like menus are not included, but all references are resolved and all special processing is applied.
  example: []
  syntax:
    content: Task<string> GetPageConfigurationAsync(string application, string instance, string page, RequestOptions requestOptions = null)
    parameters:
    - id: application
      type: System.String
      description: The application name, for instance 'SixWeb
    - id: instance
      type: System.String
      description: The instance name for the application, like 'MainInstance'
    - id: page
      type: System.String
      description: Page name, must correspond to one of the pages in the Application Configuration
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: XML containing the configuration for the given page, from the page down to the control level.
    content.vb: Function GetPageConfigurationAsync(application As String, instance As String, page As String, requestOptions As RequestOptions = Nothing) As Task(Of String)
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.GetPageConfigurationAsync*
  nameWithType.vb: IConfigurationAgent.GetPageConfigurationAsync(String, String, String, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IConfigurationAgent.GetPageConfigurationAsync(String, String, String, SuperOffice.WebApi.RequestOptions)
  name.vb: GetPageConfigurationAsync(String, String, String, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetObjectMappingAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.GetObjectMappingAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetObjectMappingAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetObjectMappingAsync(string, string, RequestOptions)
  nameWithType: IConfigurationAgent.GetObjectMappingAsync(string, string, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetObjectMappingAsync(string, string, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Get the object mappings, i.e., the what code objects should be instantiated to handle the entities of the client configuration.
  example: []
  syntax:
    content: Task<string> GetObjectMappingAsync(string application, string instance, RequestOptions requestOptions = null)
    parameters:
    - id: application
      type: System.String
      description: The application name, for instance 'SixWeb'
    - id: instance
      type: System.String
      description: The instance name for the application, like 'MainInstance'
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: XML containing the object mappings, including assembly and class names
    content.vb: Function GetObjectMappingAsync(application As String, instance As String, requestOptions As RequestOptions = Nothing) As Task(Of String)
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.GetObjectMappingAsync*
  nameWithType.vb: IConfigurationAgent.GetObjectMappingAsync(String, String, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IConfigurationAgent.GetObjectMappingAsync(String, String, SuperOffice.WebApi.RequestOptions)
  name.vb: GetObjectMappingAsync(String, String, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetFilterListAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.GetFilterListAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetFilterListAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetFilterListAsync(string, string, RequestOptions)
  nameWithType: IConfigurationAgent.GetFilterListAsync(string, string, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetFilterListAsync(string, string, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Get the list of filters to be used for processing the configuration data for this application.
  example: []
  syntax:
    content: Task<string> GetFilterListAsync(string application, string instance, RequestOptions requestOptions = null)
    parameters:
    - id: application
      type: System.String
      description: The application name, for instance 'SixWeb'
    - id: instance
      type: System.String
      description: The instance name for the application, like 'MainInstance'
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: XML representing the list of filters and any configuration data they may need.
    content.vb: Function GetFilterListAsync(application As String, instance As String, requestOptions As RequestOptions = Nothing) As Task(Of String)
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.GetFilterListAsync*
  nameWithType.vb: IConfigurationAgent.GetFilterListAsync(String, String, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IConfigurationAgent.GetFilterListAsync(String, String, SuperOffice.WebApi.RequestOptions)
  name.vb: GetFilterListAsync(String, String, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.ClearConfigurationCacheAsync(System.String,System.String,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.ClearConfigurationCacheAsync(System.String,System.String,System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: ClearConfigurationCacheAsync(System.String,System.String,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: ClearConfigurationCacheAsync(string, string, bool, RequestOptions)
  nameWithType: IConfigurationAgent.ClearConfigurationCacheAsync(string, string, bool, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.ClearConfigurationCacheAsync(string, string, bool, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Configuration XML's may be expensive to build and parse, and are therefore cached to the database. &lt;para/&gt;Cahcing is per application/instance/associate, and can be turned off through the config file. &lt;para/&gt;If caching is on, and the configuration is changed, it is necessary to clear the cached configurations from the database, through this call.&lt;para/&gt;Note that changes to the externalapplication table require cache invalidation. SoAdmin will do so automatically.
  example: []
  syntax:
    content: Task ClearConfigurationCacheAsync(string application, string instance, bool forAllAssociates, RequestOptions requestOptions = null)
    parameters:
    - id: application
      type: System.String
      description: The application name, for instance 'SixWeb'
    - id: instance
      type: System.String
      description: The instance name for the application, like 'MainInstance'
    - id: forAllAssociates
      type: System.Boolean
      description: If false, only the current associate's configuration is cleared. If true, configurations are cleared for all associates.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task
      description: There is no return value.
    content.vb: Function ClearConfigurationCacheAsync(application As String, instance As String, forAllAssociates As Boolean, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.ClearConfigurationCacheAsync*
  nameWithType.vb: IConfigurationAgent.ClearConfigurationCacheAsync(String, String, Boolean, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IConfigurationAgent.ClearConfigurationCacheAsync(String, String, Boolean, SuperOffice.WebApi.RequestOptions)
  name.vb: ClearConfigurationCacheAsync(String, String, Boolean, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetAnyConfigurationAsync(System.String,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.GetAnyConfigurationAsync(System.String,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetAnyConfigurationAsync(System.String,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetAnyConfigurationAsync(string, string, string, string, RequestOptions)
  nameWithType: IConfigurationAgent.GetAnyConfigurationAsync(string, string, string, string, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetAnyConfigurationAsync(string, string, string, string, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Get one defined configuration fragment, with full reference resolution and parsing applied. This is essentially the same service as the GetPageConfiguration, except that this service is not locked to objects of type Page.
  example: []
  syntax:
    content: Task<string> GetAnyConfigurationAsync(string application, string instance, string item, string type, RequestOptions requestOptions = null)
    parameters:
    - id: application
      type: System.String
      description: The application name, for instance Six.Web
    - id: instance
      type: System.String
      description: The instance name, for instance Main
    - id: item
      type: System.String
      description: The configuration item name (first component of file name)
    - id: type
      type: System.String
      description: The configuration item type (second component of file name)
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Fully resolved and parsed configuration XML, as string.
    content.vb: Function GetAnyConfigurationAsync(application As String, instance As String, item As String, type As String, requestOptions As RequestOptions = Nothing) As Task(Of String)
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.GetAnyConfigurationAsync*
  nameWithType.vb: IConfigurationAgent.GetAnyConfigurationAsync(String, String, String, String, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IConfigurationAgent.GetAnyConfigurationAsync(String, String, String, String, SuperOffice.WebApi.RequestOptions)
  name.vb: GetAnyConfigurationAsync(String, String, String, String, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetEMarketingUrlAsync(System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.GetEMarketingUrlAsync(System.String,SuperOffice.WebApi.RequestOptions)
  id: GetEMarketingUrlAsync(System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetEMarketingUrlAsync(string, RequestOptions)
  nameWithType: IConfigurationAgent.GetEMarketingUrlAsync(string, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetEMarketingUrlAsync(string, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: ''
  example: []
  syntax:
    content: Task<string> GetEMarketingUrlAsync(string language, RequestOptions requestOptions = null)
    parameters:
    - id: language
      type: System.String
      description: ''
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: ''
    content.vb: Function GetEMarketingUrlAsync(language As String, requestOptions As RequestOptions = Nothing) As Task(Of String)
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.GetEMarketingUrlAsync*
  nameWithType.vb: IConfigurationAgent.GetEMarketingUrlAsync(String, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IConfigurationAgent.GetEMarketingUrlAsync(String, SuperOffice.WebApi.RequestOptions)
  name.vb: GetEMarketingUrlAsync(String, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetCsProgramUrlAsync(System.String,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.GetCsProgramUrlAsync(System.String,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetCsProgramUrlAsync(System.String,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetCsProgramUrlAsync(string, string, string, string, RequestOptions)
  nameWithType: IConfigurationAgent.GetCsProgramUrlAsync(string, string, string, string, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetCsProgramUrlAsync(string, string, string, string, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: This method will convert a module name into a CS URL.
  example: []
  syntax:
    content: Task<string> GetCsProgramUrlAsync(string language, string programName, string action, string extraParameters, RequestOptions requestOptions = null)
    parameters:
    - id: language
      type: System.String
      description: By setting this parameter, you can change the CS language for the current user.
    - id: programName
      type: System.String
      description: In this parameter you must specify which CS program you want to create an URL for. Valid examples are "ticket", "rms", "spm" etc.
    - id: action
      type: System.String
      description: Here you can optionally specify the action for the current program. This will enable you to go to a specific screen.
    - id: extraParameters
      type: System.String
      description: If an action is specified, you can specify extra parameters here. This can be used to set specific behaviour for the chosen screen/action. If an empty action is supplied, this parameter will be ignored.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Returns a valid CS URL composed of the give parameters.
    content.vb: Function GetCsProgramUrlAsync(language As String, programName As String, action As String, extraParameters As String, requestOptions As RequestOptions = Nothing) As Task(Of String)
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.GetCsProgramUrlAsync*
  nameWithType.vb: IConfigurationAgent.GetCsProgramUrlAsync(String, String, String, String, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IConfigurationAgent.GetCsProgramUrlAsync(String, String, String, String, SuperOffice.WebApi.RequestOptions)
  name.vb: GetCsProgramUrlAsync(String, String, String, String, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetCSAuthUrlAsync(System.String,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.GetCSAuthUrlAsync(System.String,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetCSAuthUrlAsync(System.String,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetCSAuthUrlAsync(string, string, string, string, RequestOptions)
  nameWithType: IConfigurationAgent.GetCSAuthUrlAsync(string, string, string, string, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetCSAuthUrlAsync(string, string, string, string, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Will generate an url to the emarketing module
  example: []
  syntax:
    content: Task<string> GetCSAuthUrlAsync(string language, string programName, string action, string extraParameters, RequestOptions requestOptions = null)
    parameters:
    - id: language
      type: System.String
      description: By setting this parameter, you can change the CS language for the current user.
    - id: programName
      type: System.String
      description: In this parameter you must specify which CS program you want to create an URL for. Valid examples are "ticket", "rms", "spm" etc.
    - id: action
      type: System.String
      description: Here you can optionally specify the action for the current program. This will enable you to go to a specific screen.
    - id: extraParameters
      type: System.String
      description: If an action is specified, you can specify extra parameters here. This can be used to set specific behaviour for the chosen screen/action. If an empty action is supplied, this parameter will be ignored.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Returns a valid CS URL composed of the give parameters.
    content.vb: Function GetCSAuthUrlAsync(language As String, programName As String, action As String, extraParameters As String, requestOptions As RequestOptions = Nothing) As Task(Of String)
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.GetCSAuthUrlAsync*
  nameWithType.vb: IConfigurationAgent.GetCSAuthUrlAsync(String, String, String, String, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IConfigurationAgent.GetCSAuthUrlAsync(String, String, String, String, SuperOffice.WebApi.RequestOptions)
  name.vb: GetCSAuthUrlAsync(String, String, String, String, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetCSRegistryValueAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.GetCSRegistryValueAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetCSRegistryValueAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetCSRegistryValueAsync(int, RequestOptions)
  nameWithType: IConfigurationAgent.GetCSRegistryValueAsync(int, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetCSRegistryValueAsync(int, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: This method will get a value from the CS Registry table.
  example: []
  syntax:
    content: Task<string> GetCSRegistryValueAsync(int entry, RequestOptions requestOptions = null)
    parameters:
    - id: entry
      type: System.Int32
      description: The Registry entry to get
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The value of the specified Registry entry
    content.vb: Function GetCSRegistryValueAsync(entry As Integer, requestOptions As RequestOptions = Nothing) As Task(Of String)
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.GetCSRegistryValueAsync*
  nameWithType.vb: IConfigurationAgent.GetCSRegistryValueAsync(Integer, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IConfigurationAgent.GetCSRegistryValueAsync(Integer, SuperOffice.WebApi.RequestOptions)
  name.vb: GetCSRegistryValueAsync(Integer, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetCSWwwFolderAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.GetCSWwwFolderAsync(SuperOffice.WebApi.RequestOptions)
  id: GetCSWwwFolderAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetCSWwwFolderAsync(RequestOptions)
  nameWithType: IConfigurationAgent.GetCSWwwFolderAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetCSWwwFolderAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: This method will get the www folder for CS
  example: []
  syntax:
    content: Task<string> GetCSWwwFolderAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The www folder for CS
    content.vb: Function GetCSWwwFolderAsync(requestOptions As RequestOptions = Nothing) As Task(Of String)
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.GetCSWwwFolderAsync*
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetRefreshedPageConfigurationAsync(System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.GetRefreshedPageConfigurationAsync(System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetRefreshedPageConfigurationAsync(System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetRefreshedPageConfigurationAsync(string, string, string, RequestOptions)
  nameWithType: IConfigurationAgent.GetRefreshedPageConfigurationAsync(string, string, string, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetRefreshedPageConfigurationAsync(string, string, string, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Get the configuration for one whole web page, including all its panels etc.  totally asynchronous items like menus are not included, but all references are resolved and all special processing is applied. Does not use cache for fetching, but updates the cache with refreshed configuration.
  example: []
  syntax:
    content: Task<string> GetRefreshedPageConfigurationAsync(string application, string instance, string page, RequestOptions requestOptions = null)
    parameters:
    - id: application
      type: System.String
      description: The application name, for instance 'SixWeb
    - id: instance
      type: System.String
      description: The instance name for the application, like 'MainInstance'
    - id: page
      type: System.String
      description: Page name, must correspond to one of the pages in the Application Configuration
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: XML containing the configuration for the given page, from the page down to the control level.
    content.vb: Function GetRefreshedPageConfigurationAsync(application As String, instance As String, page As String, requestOptions As RequestOptions = Nothing) As Task(Of String)
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.GetRefreshedPageConfigurationAsync*
  nameWithType.vb: IConfigurationAgent.GetRefreshedPageConfigurationAsync(String, String, String, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IConfigurationAgent.GetRefreshedPageConfigurationAsync(String, String, String, SuperOffice.WebApi.RequestOptions)
  name.vb: GetRefreshedPageConfigurationAsync(String, String, String, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetWwwUrlAsync(System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.GetWwwUrlAsync(System.String,SuperOffice.WebApi.RequestOptions)
  id: GetWwwUrlAsync(System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetWwwUrlAsync(string, RequestOptions)
  nameWithType: IConfigurationAgent.GetWwwUrlAsync(string, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetWwwUrlAsync(string, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Will get the default URL used for the logo, from the [NetServices] PageUrl preferencec, with tags substituted.
  example: []
  syntax:
    content: Task<string> GetWwwUrlAsync(string client, RequestOptions requestOptions = null)
    parameters:
    - id: client
      type: System.String
      description: The name for the client application, like 'CS' or 'SM.web', used for the &lt;clie&gt; variable
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: URL to be used when clicking the logo
    content.vb: Function GetWwwUrlAsync(client As String, requestOptions As RequestOptions = Nothing) As Task(Of String)
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.GetWwwUrlAsync*
  nameWithType.vb: IConfigurationAgent.GetWwwUrlAsync(String, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IConfigurationAgent.GetWwwUrlAsync(String, SuperOffice.WebApi.RequestOptions)
  name.vb: GetWwwUrlAsync(String, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetHelpDispatcherUrlAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.GetHelpDispatcherUrlAsync(SuperOffice.WebApi.RequestOptions)
  id: GetHelpDispatcherUrlAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetHelpDispatcherUrlAsync(RequestOptions)
  nameWithType: IConfigurationAgent.GetHelpDispatcherUrlAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetHelpDispatcherUrlAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Will get the GetHelpDispatcherUrl used by the help system
  example: []
  syntax:
    content: Task<string> GetHelpDispatcherUrlAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: URL to be used by the help system
    content.vb: Function GetHelpDispatcherUrlAsync(requestOptions As RequestOptions = Nothing) As Task(Of String)
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.GetHelpDispatcherUrlAsync*
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetWwwUrlForSMWebAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.GetWwwUrlForSMWebAsync(SuperOffice.WebApi.RequestOptions)
  id: GetWwwUrlForSMWebAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetWwwUrlForSMWebAsync(RequestOptions)
  nameWithType: IConfigurationAgent.GetWwwUrlForSMWebAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetWwwUrlForSMWebAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Returns the URL used for the logo by the SM.web client. Uses urldispatch.aspx
  example: []
  syntax:
    content: Task<string> GetWwwUrlForSMWebAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Link to urldispatch.aspx tagged with [SOSITEURL]
    content.vb: Function GetWwwUrlForSMWebAsync(requestOptions As RequestOptions = Nothing) As Task(Of String)
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.GetWwwUrlForSMWebAsync*
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetCsCgiUrlInternalAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.GetCsCgiUrlInternalAsync(SuperOffice.WebApi.RequestOptions)
  id: GetCsCgiUrlInternalAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetCsCgiUrlInternalAsync(RequestOptions)
  nameWithType: IConfigurationAgent.GetCsCgiUrlInternalAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetCsCgiUrlInternalAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: This method will get the host name for CS
  example: []
  syntax:
    content: Task<string> GetCsCgiUrlInternalAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Will get the host name for where CS is installed
    content.vb: Function GetCsCgiUrlInternalAsync(requestOptions As RequestOptions = Nothing) As Task(Of String)
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.GetCsCgiUrlInternalAsync*
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetCRMUrlAsync(System.String,System.String,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.GetCRMUrlAsync(System.String,System.String,System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: GetCRMUrlAsync(System.String,System.String,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetCRMUrlAsync(string, string, bool, RequestOptions)
  nameWithType: IConfigurationAgent.GetCRMUrlAsync(string, string, bool, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetCRMUrlAsync(string, string, bool, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Returns a valid url based in the soprotocol provided
  example: []
  syntax:
    content: Task<string> GetCRMUrlAsync(string soProtocol, string currents, bool frameless, RequestOptions requestOptions = null)
    parameters:
    - id: soProtocol
      type: System.String
      description: SoProtocol to display. Eg. contact.activityarchive.minipreview
    - id: currents
      type: System.String
      description: currents to set. Eg. contact_id=100&amp;person_id=299
    - id: frameless
      type: System.Boolean
      description: If true frame is not rendered( Navigationbar, buttonbar and menu )
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Url with soprotocol
    content.vb: Function GetCRMUrlAsync(soProtocol As String, currents As String, frameless As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of String)
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.GetCRMUrlAsync*
  nameWithType.vb: IConfigurationAgent.GetCRMUrlAsync(String, String, Boolean, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IConfigurationAgent.GetCRMUrlAsync(String, String, Boolean, SuperOffice.WebApi.RequestOptions)
  name.vb: GetCRMUrlAsync(String, String, Boolean, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetEmailNumberOfDaysAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.GetEmailNumberOfDaysAsync(SuperOffice.WebApi.RequestOptions)
  id: GetEmailNumberOfDaysAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetEmailNumberOfDaysAsync(RequestOptions)
  nameWithType: IConfigurationAgent.GetEmailNumberOfDaysAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetEmailNumberOfDaysAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: ''
  example: []
  syntax:
    content: Task<int> GetEmailNumberOfDaysAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: Number of days in the past for which we are fetching email
    content.vb: Function GetEmailNumberOfDaysAsync(requestOptions As RequestOptions = Nothing) As Task(Of Integer)
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.GetEmailNumberOfDaysAsync*
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetCustomerUrlAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.GetCustomerUrlAsync(SuperOffice.WebApi.RequestOptions)
  id: GetCustomerUrlAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetCustomerUrlAsync(RequestOptions)
  nameWithType: IConfigurationAgent.GetCustomerUrlAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetCustomerUrlAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: This method will get the URL for the external access to the customer center
  example: []
  syntax:
    content: Task<string> GetCustomerUrlAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The URL to the customer center, without any actions
    content.vb: Function GetCustomerUrlAsync(requestOptions As RequestOptions = Nothing) As Task(Of String)
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.GetCustomerUrlAsync*
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetSpfDomainAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.GetSpfDomainAsync(SuperOffice.WebApi.RequestOptions)
  id: GetSpfDomainAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetSpfDomainAsync(RequestOptions)
  nameWithType: IConfigurationAgent.GetSpfDomainAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetSpfDomainAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Get the SPF domain defined for the mail cluster for this tenant (Online only)
  example: []
  syntax:
    content: Task<string> GetSpfDomainAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The configured SPF domain. Will return empty for Onsite installations or tenants in Online using custom SMTP
    content.vb: Function GetSpfDomainAsync(requestOptions As RequestOptions = Nothing) As Task(Of String)
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.GetSpfDomainAsync*
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetAllFeatureTogglesAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.GetAllFeatureTogglesAsync(SuperOffice.WebApi.RequestOptions)
  id: GetAllFeatureTogglesAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetAllFeatureTogglesAsync(RequestOptions)
  nameWithType: IConfigurationAgent.GetAllFeatureTogglesAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetAllFeatureTogglesAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Get all the feature toggles with their state (on/off)
  example: []
  syntax:
    content: Task<StringBoolDictionary> GetAllFeatureTogglesAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.StringBoolDictionary}
      description: The feature toggles with their state (on/off)
    content.vb: Function GetAllFeatureTogglesAsync(requestOptions As RequestOptions = Nothing) As Task(Of StringBoolDictionary)
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.GetAllFeatureTogglesAsync*
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetDiaryViewEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.GetDiaryViewEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetDiaryViewEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetDiaryViewEntityAsync(int, RequestOptions)
  nameWithType: IConfigurationAgent.GetDiaryViewEntityAsync(int, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetDiaryViewEntityAsync(int, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Gets a specific DiaryViewEntity object.
  example: []
  syntax:
    content: Task<DiaryViewEntity> GetDiaryViewEntityAsync(int diaryViewEntityId, RequestOptions requestOptions = null)
    parameters:
    - id: diaryViewEntityId
      type: System.Int32
      description: The identifier of the DiaryViewEntity object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DiaryViewEntity}
      description: DiaryViewEntity
    content.vb: Function GetDiaryViewEntityAsync(diaryViewEntityId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of DiaryViewEntity)
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.GetDiaryViewEntityAsync*
  nameWithType.vb: IConfigurationAgent.GetDiaryViewEntityAsync(Integer, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IConfigurationAgent.GetDiaryViewEntityAsync(Integer, SuperOffice.WebApi.RequestOptions)
  name.vb: GetDiaryViewEntityAsync(Integer, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetSystemEventEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.GetSystemEventEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetSystemEventEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetSystemEventEntityAsync(int, RequestOptions)
  nameWithType: IConfigurationAgent.GetSystemEventEntityAsync(int, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetSystemEventEntityAsync(int, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Gets a specific SystemEventEntity object.
  example: []
  syntax:
    content: Task<SystemEventEntity> GetSystemEventEntityAsync(int systemEventEntityId, RequestOptions requestOptions = null)
    parameters:
    - id: systemEventEntityId
      type: System.Int32
      description: The identifier of the SystemEventEntity object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SystemEventEntity}
      description: SystemEventEntity
    content.vb: Function GetSystemEventEntityAsync(systemEventEntityId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of SystemEventEntity)
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.GetSystemEventEntityAsync*
  nameWithType.vb: IConfigurationAgent.GetSystemEventEntityAsync(Integer, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IConfigurationAgent.GetSystemEventEntityAsync(Integer, SuperOffice.WebApi.RequestOptions)
  name.vb: GetSystemEventEntityAsync(Integer, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.ExistsSystemEventAsync(System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.ExistsSystemEventAsync(System.String,SuperOffice.WebApi.RequestOptions)
  id: ExistsSystemEventAsync(System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: ExistsSystemEventAsync(string, RequestOptions)
  nameWithType: IConfigurationAgent.ExistsSystemEventAsync(string, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.ExistsSystemEventAsync(string, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Is there a system event with the given key?
  example: []
  syntax:
    content: Task<bool> ExistsSystemEventAsync(string key, RequestOptions requestOptions = null)
    parameters:
    - id: key
      type: System.String
      description: The key to match on
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: The system event
    content.vb: Function ExistsSystemEventAsync(key As String, requestOptions As RequestOptions = Nothing) As Task(Of Boolean)
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.ExistsSystemEventAsync*
  nameWithType.vb: IConfigurationAgent.ExistsSystemEventAsync(String, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IConfigurationAgent.ExistsSystemEventAsync(String, SuperOffice.WebApi.RequestOptions)
  name.vb: ExistsSystemEventAsync(String, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetWindowPosSizeAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.GetWindowPosSizeAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetWindowPosSizeAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetWindowPosSizeAsync(int, RequestOptions)
  nameWithType: IConfigurationAgent.GetWindowPosSizeAsync(int, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetWindowPosSizeAsync(int, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Gets a specific WindowPosSize object.
  example: []
  syntax:
    content: Task<WindowPosSize> GetWindowPosSizeAsync(int windowPosSizeId, RequestOptions requestOptions = null)
    parameters:
    - id: windowPosSizeId
      type: System.Int32
      description: The identifier of the WindowPosSize object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.WindowPosSize}
      description: WindowPosSize
    content.vb: Function GetWindowPosSizeAsync(windowPosSizeId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of WindowPosSize)
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.GetWindowPosSizeAsync*
  nameWithType.vb: IConfigurationAgent.GetWindowPosSizeAsync(Integer, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IConfigurationAgent.GetWindowPosSizeAsync(Integer, SuperOffice.WebApi.RequestOptions)
  name.vb: GetWindowPosSizeAsync(Integer, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.SaveWindowPosSizeAsync(SuperOffice.WebApi.Data.WindowPosSize,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.SaveWindowPosSizeAsync(SuperOffice.WebApi.Data.WindowPosSize,SuperOffice.WebApi.RequestOptions)
  id: SaveWindowPosSizeAsync(SuperOffice.WebApi.Data.WindowPosSize,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: SaveWindowPosSizeAsync(WindowPosSize, RequestOptions)
  nameWithType: IConfigurationAgent.SaveWindowPosSizeAsync(WindowPosSize, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.SaveWindowPosSizeAsync(SuperOffice.WebApi.Data.WindowPosSize, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Saves a window and dialog position and size setting.
  example: []
  syntax:
    content: Task<WindowPosSize> SaveWindowPosSizeAsync(WindowPosSize windowPosSize, RequestOptions requestOptions = null)
    parameters:
    - id: windowPosSize
      type: SuperOffice.WebApi.Data.WindowPosSize
      description: The item that is saved
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.WindowPosSize}
      description: The saved item
    content.vb: Function SaveWindowPosSizeAsync(windowPosSize As WindowPosSize, requestOptions As RequestOptions = Nothing) As Task(Of WindowPosSize)
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.SaveWindowPosSizeAsync*
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.DeleteWindowPosSizeAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.DeleteWindowPosSizeAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: DeleteWindowPosSizeAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: DeleteWindowPosSizeAsync(int, RequestOptions)
  nameWithType: IConfigurationAgent.DeleteWindowPosSizeAsync(int, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.DeleteWindowPosSizeAsync(int, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Deletes a window and dialog position and size setting.
  example: []
  syntax:
    content: Task DeleteWindowPosSizeAsync(int windowPosSizeId, RequestOptions requestOptions = null)
    parameters:
    - id: windowPosSizeId
      type: System.Int32
      description: Id of the window and dialog position and size settings item.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function DeleteWindowPosSizeAsync(windowPosSizeId As Integer, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.DeleteWindowPosSizeAsync*
  nameWithType.vb: IConfigurationAgent.DeleteWindowPosSizeAsync(Integer, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IConfigurationAgent.DeleteWindowPosSizeAsync(Integer, SuperOffice.WebApi.RequestOptions)
  name.vb: DeleteWindowPosSizeAsync(Integer, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetWindowPosSizeListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.GetWindowPosSizeListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetWindowPosSizeListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetWindowPosSizeListAsync(int[], RequestOptions)
  nameWithType: IConfigurationAgent.GetWindowPosSizeListAsync(int[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetWindowPosSizeListAsync(int[], SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Gets an array of specific WindowPosSize objects.
  example: []
  syntax:
    content: Task<WindowPosSize[]> GetWindowPosSizeListAsync(int[] windowPosSizeIds, RequestOptions requestOptions = null)
    parameters:
    - id: windowPosSizeIds
      type: System.Int32[]
      description: The identifiers of the WindowPosSize object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.WindowPosSize[]}
      description: Array of WindowPosSize objects
    content.vb: Function GetWindowPosSizeListAsync(windowPosSizeIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of WindowPosSize())
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.GetWindowPosSizeListAsync*
  nameWithType.vb: IConfigurationAgent.GetWindowPosSizeListAsync(Integer(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IConfigurationAgent.GetWindowPosSizeListAsync(Integer(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetWindowPosSizeListAsync(Integer(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetMyWindowPosSizesAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.GetMyWindowPosSizesAsync(SuperOffice.WebApi.RequestOptions)
  id: GetMyWindowPosSizesAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetMyWindowPosSizesAsync(RequestOptions)
  nameWithType: IConfigurationAgent.GetMyWindowPosSizesAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetMyWindowPosSizesAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Gets the window and dialog position and size settings belonging to the currently logged on user
  example: []
  syntax:
    content: Task<WindowPosSize[]> GetMyWindowPosSizesAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.WindowPosSize[]}
      description: Array of window and dialog position and size settings
    content.vb: Function GetMyWindowPosSizesAsync(requestOptions As RequestOptions = Nothing) As Task(Of WindowPosSize())
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.GetMyWindowPosSizesAsync*
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetWindowPosSizesOnPersonIdAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.GetWindowPosSizesOnPersonIdAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetWindowPosSizesOnPersonIdAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetWindowPosSizesOnPersonIdAsync(int, RequestOptions)
  nameWithType: IConfigurationAgent.GetWindowPosSizesOnPersonIdAsync(int, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetWindowPosSizesOnPersonIdAsync(int, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Gets the window and dialog position and size settings belonging to the specified person
  example: []
  syntax:
    content: Task<WindowPosSize[]> GetWindowPosSizesOnPersonIdAsync(int personId, RequestOptions requestOptions = null)
    parameters:
    - id: personId
      type: System.Int32
      description: Person id of the associate owning these window settings
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.WindowPosSize[]}
      description: Array of window and dialog position and size settings
    content.vb: Function GetWindowPosSizesOnPersonIdAsync(personId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of WindowPosSize())
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.GetWindowPosSizesOnPersonIdAsync*
  nameWithType.vb: IConfigurationAgent.GetWindowPosSizesOnPersonIdAsync(Integer, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IConfigurationAgent.GetWindowPosSizesOnPersonIdAsync(Integer, SuperOffice.WebApi.RequestOptions)
  name.vb: GetWindowPosSizesOnPersonIdAsync(Integer, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetWindowPosSizesOnAssociateIdAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.GetWindowPosSizesOnAssociateIdAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetWindowPosSizesOnAssociateIdAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetWindowPosSizesOnAssociateIdAsync(int, RequestOptions)
  nameWithType: IConfigurationAgent.GetWindowPosSizesOnAssociateIdAsync(int, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetWindowPosSizesOnAssociateIdAsync(int, SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Gets the window and dialog position and size settings belonging to the specified associate
  example: []
  syntax:
    content: Task<WindowPosSize[]> GetWindowPosSizesOnAssociateIdAsync(int associateId, RequestOptions requestOptions = null)
    parameters:
    - id: associateId
      type: System.Int32
      description: Associate id of the Associate/Person owning these window settings
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.WindowPosSize[]}
      description: Array of window and dialog position and size settings
    content.vb: Function GetWindowPosSizesOnAssociateIdAsync(associateId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of WindowPosSize())
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.GetWindowPosSizesOnAssociateIdAsync*
  nameWithType.vb: IConfigurationAgent.GetWindowPosSizesOnAssociateIdAsync(Integer, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IConfigurationAgent.GetWindowPosSizesOnAssociateIdAsync(Integer, SuperOffice.WebApi.RequestOptions)
  name.vb: GetWindowPosSizesOnAssociateIdAsync(Integer, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.SaveWindowPosSizesAsync(SuperOffice.WebApi.Data.WindowPosSize[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IConfigurationAgent.SaveWindowPosSizesAsync(SuperOffice.WebApi.Data.WindowPosSize[],SuperOffice.WebApi.RequestOptions)
  id: SaveWindowPosSizesAsync(SuperOffice.WebApi.Data.WindowPosSize[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: SaveWindowPosSizesAsync(WindowPosSize[], RequestOptions)
  nameWithType: IConfigurationAgent.SaveWindowPosSizesAsync(WindowPosSize[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.SaveWindowPosSizesAsync(SuperOffice.WebApi.Data.WindowPosSize[], SuperOffice.WebApi.RequestOptions)
  type: Method
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: Saves a set of window and dialog position and size settings.
  example: []
  syntax:
    content: Task<WindowPosSize[]> SaveWindowPosSizesAsync(WindowPosSize[] windowPosSizes, RequestOptions requestOptions = null)
    parameters:
    - id: windowPosSizes
      type: SuperOffice.WebApi.Data.WindowPosSize[]
      description: The items that are saved
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: Override language/culture codes on this request.
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.WindowPosSize[]}
      description: The saved items
    content.vb: Function SaveWindowPosSizesAsync(windowPosSizes As WindowPosSize(), requestOptions As RequestOptions = Nothing) As Task(Of WindowPosSize())
  overload: SuperOffice.WebApi.Agents.IConfigurationAgent.SaveWindowPosSizesAsync*
  nameWithType.vb: IConfigurationAgent.SaveWindowPosSizesAsync(WindowPosSize(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IConfigurationAgent.SaveWindowPosSizesAsync(SuperOffice.WebApi.Data.WindowPosSize(), SuperOffice.WebApi.RequestOptions)
  name.vb: SaveWindowPosSizesAsync(WindowPosSize(), RequestOptions)
references:
- uid: SuperOffice.WebApi.Agents
  commentId: N:SuperOffice.WebApi.Agents
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.WebApi.Agents
  nameWithType: SuperOffice.WebApi.Agents
  fullName: SuperOffice.WebApi.Agents
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.WebApi
    name: WebApi
    isExternal: true
    href: SuperOffice.WebApi.html
  - name: .
  - uid: SuperOffice.WebApi.Agents
    name: Agents
    isExternal: true
    href: SuperOffice.WebApi.Agents.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.WebApi
    name: WebApi
    isExternal: true
    href: SuperOffice.WebApi.html
  - name: .
  - uid: SuperOffice.WebApi.Agents
    name: Agents
    isExternal: true
    href: SuperOffice.WebApi.Agents.html
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.CreateDefaultConfigurableScreenDeltaAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.CreateDefaultConfigurableScreenDeltaAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_CreateDefaultConfigurableScreenDeltaAsync_SuperOffice_WebApi_RequestOptions_
  name: CreateDefaultConfigurableScreenDeltaAsync
  nameWithType: IConfigurationAgent.CreateDefaultConfigurableScreenDeltaAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.CreateDefaultConfigurableScreenDeltaAsync
- uid: SuperOffice.WebApi.RequestOptions
  commentId: T:SuperOffice.WebApi.RequestOptions
  parent: SuperOffice.WebApi
  isExternal: true
  href: SuperOffice.WebApi.RequestOptions.html
  name: RequestOptions
  nameWithType: RequestOptions
  fullName: SuperOffice.WebApi.RequestOptions
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ConfigurableScreenDelta}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ConfigurableScreenDelta}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ConfigurableScreenDelta>
  nameWithType: Task<ConfigurableScreenDelta>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.ConfigurableScreenDelta>
  nameWithType.vb: Task(Of ConfigurableScreenDelta)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.ConfigurableScreenDelta)
  name.vb: Task(Of ConfigurableScreenDelta)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.WebApi.Data.ConfigurableScreenDelta
    name: ConfigurableScreenDelta
    isExternal: true
    href: SuperOffice.WebApi.Data.ConfigurableScreenDelta.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.WebApi.Data.ConfigurableScreenDelta
    name: ConfigurableScreenDelta
    isExternal: true
    href: SuperOffice.WebApi.Data.ConfigurableScreenDelta.html
  - name: )
- uid: SuperOffice.WebApi
  commentId: N:SuperOffice.WebApi
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.WebApi
  nameWithType: SuperOffice.WebApi
  fullName: SuperOffice.WebApi
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.WebApi
    name: WebApi
    isExternal: true
    href: SuperOffice.WebApi.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.WebApi
    name: WebApi
    isExternal: true
    href: SuperOffice.WebApi.html
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.SaveConfigurableScreenDeltaAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.SaveConfigurableScreenDeltaAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_SaveConfigurableScreenDeltaAsync_SuperOffice_WebApi_Data_ConfigurableScreenDelta_SuperOffice_WebApi_RequestOptions_
  name: SaveConfigurableScreenDeltaAsync
  nameWithType: IConfigurationAgent.SaveConfigurableScreenDeltaAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.SaveConfigurableScreenDeltaAsync
- uid: SuperOffice.WebApi.Data.ConfigurableScreenDelta
  commentId: T:SuperOffice.WebApi.Data.ConfigurableScreenDelta
  parent: SuperOffice.WebApi.Data
  isExternal: true
  href: SuperOffice.WebApi.Data.ConfigurableScreenDelta.html
  name: ConfigurableScreenDelta
  nameWithType: ConfigurableScreenDelta
  fullName: SuperOffice.WebApi.Data.ConfigurableScreenDelta
- uid: SuperOffice.WebApi.Data
  commentId: N:SuperOffice.WebApi.Data
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.WebApi.Data
  nameWithType: SuperOffice.WebApi.Data
  fullName: SuperOffice.WebApi.Data
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.WebApi
    name: WebApi
    isExternal: true
    href: SuperOffice.WebApi.html
  - name: .
  - uid: SuperOffice.WebApi.Data
    name: Data
    isExternal: true
    href: SuperOffice.WebApi.Data.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.WebApi
    name: WebApi
    isExternal: true
    href: SuperOffice.WebApi.html
  - name: .
  - uid: SuperOffice.WebApi.Data
    name: Data
    isExternal: true
    href: SuperOffice.WebApi.Data.html
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.DeleteConfigurableScreenDeltaAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.DeleteConfigurableScreenDeltaAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_DeleteConfigurableScreenDeltaAsync_System_Int32_SuperOffice_WebApi_RequestOptions_
  name: DeleteConfigurableScreenDeltaAsync
  nameWithType: IConfigurationAgent.DeleteConfigurableScreenDeltaAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.DeleteConfigurableScreenDeltaAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.CreateDefaultDiaryViewEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.CreateDefaultDiaryViewEntityAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_CreateDefaultDiaryViewEntityAsync_SuperOffice_WebApi_RequestOptions_
  name: CreateDefaultDiaryViewEntityAsync
  nameWithType: IConfigurationAgent.CreateDefaultDiaryViewEntityAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.CreateDefaultDiaryViewEntityAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DiaryViewEntity}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DiaryViewEntity}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<DiaryViewEntity>
  nameWithType: Task<DiaryViewEntity>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.DiaryViewEntity>
  nameWithType.vb: Task(Of DiaryViewEntity)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.DiaryViewEntity)
  name.vb: Task(Of DiaryViewEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.WebApi.Data.DiaryViewEntity
    name: DiaryViewEntity
    isExternal: true
    href: SuperOffice.WebApi.Data.DiaryViewEntity.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.WebApi.Data.DiaryViewEntity
    name: DiaryViewEntity
    isExternal: true
    href: SuperOffice.WebApi.Data.DiaryViewEntity.html
  - name: )
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.SaveDiaryViewEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.SaveDiaryViewEntityAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_SaveDiaryViewEntityAsync_SuperOffice_WebApi_Data_DiaryViewEntity_SuperOffice_WebApi_RequestOptions_
  name: SaveDiaryViewEntityAsync
  nameWithType: IConfigurationAgent.SaveDiaryViewEntityAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.SaveDiaryViewEntityAsync
- uid: SuperOffice.WebApi.Data.DiaryViewEntity
  commentId: T:SuperOffice.WebApi.Data.DiaryViewEntity
  parent: SuperOffice.WebApi.Data
  isExternal: true
  href: SuperOffice.WebApi.Data.DiaryViewEntity.html
  name: DiaryViewEntity
  nameWithType: DiaryViewEntity
  fullName: SuperOffice.WebApi.Data.DiaryViewEntity
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.DeleteDiaryViewEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.DeleteDiaryViewEntityAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_DeleteDiaryViewEntityAsync_System_Int32_SuperOffice_WebApi_RequestOptions_
  name: DeleteDiaryViewEntityAsync
  nameWithType: IConfigurationAgent.DeleteDiaryViewEntityAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.DeleteDiaryViewEntityAsync
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.CreateDefaultSystemEventEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.CreateDefaultSystemEventEntityAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_CreateDefaultSystemEventEntityAsync_SuperOffice_WebApi_RequestOptions_
  name: CreateDefaultSystemEventEntityAsync
  nameWithType: IConfigurationAgent.CreateDefaultSystemEventEntityAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.CreateDefaultSystemEventEntityAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SystemEventEntity}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SystemEventEntity}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<SystemEventEntity>
  nameWithType: Task<SystemEventEntity>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.SystemEventEntity>
  nameWithType.vb: Task(Of SystemEventEntity)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.SystemEventEntity)
  name.vb: Task(Of SystemEventEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.WebApi.Data.SystemEventEntity
    name: SystemEventEntity
    isExternal: true
    href: SuperOffice.WebApi.Data.SystemEventEntity.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.WebApi.Data.SystemEventEntity
    name: SystemEventEntity
    isExternal: true
    href: SuperOffice.WebApi.Data.SystemEventEntity.html
  - name: )
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.SaveSystemEventEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.SaveSystemEventEntityAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_SaveSystemEventEntityAsync_SuperOffice_WebApi_Data_SystemEventEntity_SuperOffice_WebApi_RequestOptions_
  name: SaveSystemEventEntityAsync
  nameWithType: IConfigurationAgent.SaveSystemEventEntityAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.SaveSystemEventEntityAsync
- uid: SuperOffice.WebApi.Data.SystemEventEntity
  commentId: T:SuperOffice.WebApi.Data.SystemEventEntity
  parent: SuperOffice.WebApi.Data
  isExternal: true
  href: SuperOffice.WebApi.Data.SystemEventEntity.html
  name: SystemEventEntity
  nameWithType: SystemEventEntity
  fullName: SuperOffice.WebApi.Data.SystemEventEntity
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.DeleteSystemEventEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.DeleteSystemEventEntityAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_DeleteSystemEventEntityAsync_System_Int32_SuperOffice_WebApi_RequestOptions_
  name: DeleteSystemEventEntityAsync
  nameWithType: IConfigurationAgent.DeleteSystemEventEntityAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.DeleteSystemEventEntityAsync
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetConfigurableScreenDeltaAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.GetConfigurableScreenDeltaAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_GetConfigurableScreenDeltaAsync_System_Int32_SuperOffice_WebApi_RequestOptions_
  name: GetConfigurableScreenDeltaAsync
  nameWithType: IConfigurationAgent.GetConfigurableScreenDeltaAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetConfigurableScreenDeltaAsync
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetScreenConfigurationDeltasAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.GetScreenConfigurationDeltasAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_GetScreenConfigurationDeltasAsync_SuperOffice_WebApi_RequestOptions_
  name: GetScreenConfigurationDeltasAsync
  nameWithType: IConfigurationAgent.GetScreenConfigurationDeltasAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetScreenConfigurationDeltasAsync
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<string>
  nameWithType: Task<string>
  fullName: System.Threading.Tasks.Task<string>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetScreenConfigurationDeltaAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.GetScreenConfigurationDeltaAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_GetScreenConfigurationDeltaAsync_SuperOffice_WebApi_Data_DeltaType_SuperOffice_WebApi_Data_DeltaState_SuperOffice_WebApi_RequestOptions_
  name: GetScreenConfigurationDeltaAsync
  nameWithType: IConfigurationAgent.GetScreenConfigurationDeltaAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetScreenConfigurationDeltaAsync
- uid: SuperOffice.WebApi.Data.DeltaType
  commentId: T:SuperOffice.WebApi.Data.DeltaType
  parent: SuperOffice.WebApi.Data
  isExternal: true
  href: SuperOffice.WebApi.Data.DeltaType.html
  name: DeltaType
  nameWithType: DeltaType
  fullName: SuperOffice.WebApi.Data.DeltaType
- uid: SuperOffice.WebApi.Data.DeltaState
  commentId: T:SuperOffice.WebApi.Data.DeltaState
  parent: SuperOffice.WebApi.Data
  isExternal: true
  href: SuperOffice.WebApi.Data.DeltaState.html
  name: DeltaState
  nameWithType: DeltaState
  fullName: SuperOffice.WebApi.Data.DeltaState
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetConfigurableScreenDeltasByDeltaAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.GetConfigurableScreenDeltasByDeltaAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_GetConfigurableScreenDeltasByDeltaAsync_SuperOffice_WebApi_Data_ConfigurableScreenDelta_SuperOffice_WebApi_RequestOptions_
  name: GetConfigurableScreenDeltasByDeltaAsync
  nameWithType: IConfigurationAgent.GetConfigurableScreenDeltasByDeltaAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetConfigurableScreenDeltasByDeltaAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ConfigurableScreenDelta[]}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ConfigurableScreenDelta[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ConfigurableScreenDelta[]>
  nameWithType: Task<ConfigurableScreenDelta[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.ConfigurableScreenDelta[]>
  nameWithType.vb: Task(Of ConfigurableScreenDelta())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.ConfigurableScreenDelta())
  name.vb: Task(Of ConfigurableScreenDelta())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.WebApi.Data.ConfigurableScreenDelta
    name: ConfigurableScreenDelta
    isExternal: true
    href: SuperOffice.WebApi.Data.ConfigurableScreenDelta.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.WebApi.Data.ConfigurableScreenDelta
    name: ConfigurableScreenDelta
    isExternal: true
    href: SuperOffice.WebApi.Data.ConfigurableScreenDelta.html
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetConfigurableScreenDeltasByQueryAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.GetConfigurableScreenDeltasByQueryAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_GetConfigurableScreenDeltasByQueryAsync_SuperOffice_WebApi_Data_DeltaQuery_SuperOffice_WebApi_RequestOptions_
  name: GetConfigurableScreenDeltasByQueryAsync
  nameWithType: IConfigurationAgent.GetConfigurableScreenDeltasByQueryAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetConfigurableScreenDeltasByQueryAsync
- uid: SuperOffice.WebApi.Data.DeltaQuery
  commentId: T:SuperOffice.WebApi.Data.DeltaQuery
  parent: SuperOffice.WebApi.Data
  isExternal: true
  href: SuperOffice.WebApi.Data.DeltaQuery.html
  name: DeltaQuery
  nameWithType: DeltaQuery
  fullName: SuperOffice.WebApi.Data.DeltaQuery
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.RebuildUdefDeltasAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.RebuildUdefDeltasAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_RebuildUdefDeltasAsync_SuperOffice_WebApi_RequestOptions_
  name: RebuildUdefDeltasAsync
  nameWithType: IConfigurationAgent.RebuildUdefDeltasAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.RebuildUdefDeltasAsync
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.RebuildWebpanelDeltasAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.RebuildWebpanelDeltasAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_RebuildWebpanelDeltasAsync_SuperOffice_WebApi_RequestOptions_
  name: RebuildWebpanelDeltasAsync
  nameWithType: IConfigurationAgent.RebuildWebpanelDeltasAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.RebuildWebpanelDeltasAsync
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.SaveAndPublishAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.SaveAndPublishAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_SaveAndPublishAsync_SuperOffice_WebApi_Data_ConfigurableScreenDelta_SuperOffice_WebApi_RequestOptions_
  name: SaveAndPublishAsync
  nameWithType: IConfigurationAgent.SaveAndPublishAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.SaveAndPublishAsync
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.SetAppliesToKeyAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.SetAppliesToKeyAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_SetAppliesToKeyAsync_System_String_System_String_SuperOffice_WebApi_RequestOptions_
  name: SetAppliesToKeyAsync
  nameWithType: IConfigurationAgent.SetAppliesToKeyAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.SetAppliesToKeyAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetRecipeAppliesToMappingsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.GetRecipeAppliesToMappingsAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_GetRecipeAppliesToMappingsAsync_SuperOffice_WebApi_RequestOptions_
  name: GetRecipeAppliesToMappingsAsync
  nameWithType: IConfigurationAgent.GetRecipeAppliesToMappingsAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetRecipeAppliesToMappingsAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.StringDictionary}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.StringDictionary}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<StringDictionary>
  nameWithType: Task<StringDictionary>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.StringDictionary>
  nameWithType.vb: Task(Of StringDictionary)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.StringDictionary)
  name.vb: Task(Of StringDictionary)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.WebApi.Data.StringDictionary
    name: StringDictionary
    isExternal: true
    href: SuperOffice.WebApi.Data.StringDictionary.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.WebApi.Data.StringDictionary
    name: StringDictionary
    isExternal: true
    href: SuperOffice.WebApi.Data.StringDictionary.html
  - name: )
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.RebuildCustomObjectArchivePanelDeltasAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.RebuildCustomObjectArchivePanelDeltasAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_RebuildCustomObjectArchivePanelDeltasAsync_SuperOffice_WebApi_RequestOptions_
  name: RebuildCustomObjectArchivePanelDeltasAsync
  nameWithType: IConfigurationAgent.RebuildCustomObjectArchivePanelDeltasAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.RebuildCustomObjectArchivePanelDeltasAsync
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.RebuildTaskMenuDeltasAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.RebuildTaskMenuDeltasAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_RebuildTaskMenuDeltasAsync_SuperOffice_WebApi_RequestOptions_
  name: RebuildTaskMenuDeltasAsync
  nameWithType: IConfigurationAgent.RebuildTaskMenuDeltasAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.RebuildTaskMenuDeltasAsync
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetApplicationConfigurationAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.GetApplicationConfigurationAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_GetApplicationConfigurationAsync_System_String_System_String_SuperOffice_WebApi_RequestOptions_
  name: GetApplicationConfigurationAsync
  nameWithType: IConfigurationAgent.GetApplicationConfigurationAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetApplicationConfigurationAsync
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetPageConfigurationAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.GetPageConfigurationAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_GetPageConfigurationAsync_System_String_System_String_System_String_SuperOffice_WebApi_RequestOptions_
  name: GetPageConfigurationAsync
  nameWithType: IConfigurationAgent.GetPageConfigurationAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetPageConfigurationAsync
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetObjectMappingAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.GetObjectMappingAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_GetObjectMappingAsync_System_String_System_String_SuperOffice_WebApi_RequestOptions_
  name: GetObjectMappingAsync
  nameWithType: IConfigurationAgent.GetObjectMappingAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetObjectMappingAsync
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetFilterListAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.GetFilterListAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_GetFilterListAsync_System_String_System_String_SuperOffice_WebApi_RequestOptions_
  name: GetFilterListAsync
  nameWithType: IConfigurationAgent.GetFilterListAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetFilterListAsync
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.ClearConfigurationCacheAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.ClearConfigurationCacheAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_ClearConfigurationCacheAsync_System_String_System_String_System_Boolean_SuperOffice_WebApi_RequestOptions_
  name: ClearConfigurationCacheAsync
  nameWithType: IConfigurationAgent.ClearConfigurationCacheAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.ClearConfigurationCacheAsync
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetAnyConfigurationAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.GetAnyConfigurationAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_GetAnyConfigurationAsync_System_String_System_String_System_String_System_String_SuperOffice_WebApi_RequestOptions_
  name: GetAnyConfigurationAsync
  nameWithType: IConfigurationAgent.GetAnyConfigurationAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetAnyConfigurationAsync
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetEMarketingUrlAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.GetEMarketingUrlAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_GetEMarketingUrlAsync_System_String_SuperOffice_WebApi_RequestOptions_
  name: GetEMarketingUrlAsync
  nameWithType: IConfigurationAgent.GetEMarketingUrlAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetEMarketingUrlAsync
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetCsProgramUrlAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.GetCsProgramUrlAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_GetCsProgramUrlAsync_System_String_System_String_System_String_System_String_SuperOffice_WebApi_RequestOptions_
  name: GetCsProgramUrlAsync
  nameWithType: IConfigurationAgent.GetCsProgramUrlAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetCsProgramUrlAsync
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetCSAuthUrlAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.GetCSAuthUrlAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_GetCSAuthUrlAsync_System_String_System_String_System_String_System_String_SuperOffice_WebApi_RequestOptions_
  name: GetCSAuthUrlAsync
  nameWithType: IConfigurationAgent.GetCSAuthUrlAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetCSAuthUrlAsync
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetCSRegistryValueAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.GetCSRegistryValueAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_GetCSRegistryValueAsync_System_Int32_SuperOffice_WebApi_RequestOptions_
  name: GetCSRegistryValueAsync
  nameWithType: IConfigurationAgent.GetCSRegistryValueAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetCSRegistryValueAsync
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetCSWwwFolderAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.GetCSWwwFolderAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_GetCSWwwFolderAsync_SuperOffice_WebApi_RequestOptions_
  name: GetCSWwwFolderAsync
  nameWithType: IConfigurationAgent.GetCSWwwFolderAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetCSWwwFolderAsync
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetRefreshedPageConfigurationAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.GetRefreshedPageConfigurationAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_GetRefreshedPageConfigurationAsync_System_String_System_String_System_String_SuperOffice_WebApi_RequestOptions_
  name: GetRefreshedPageConfigurationAsync
  nameWithType: IConfigurationAgent.GetRefreshedPageConfigurationAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetRefreshedPageConfigurationAsync
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetWwwUrlAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.GetWwwUrlAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_GetWwwUrlAsync_System_String_SuperOffice_WebApi_RequestOptions_
  name: GetWwwUrlAsync
  nameWithType: IConfigurationAgent.GetWwwUrlAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetWwwUrlAsync
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetHelpDispatcherUrlAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.GetHelpDispatcherUrlAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_GetHelpDispatcherUrlAsync_SuperOffice_WebApi_RequestOptions_
  name: GetHelpDispatcherUrlAsync
  nameWithType: IConfigurationAgent.GetHelpDispatcherUrlAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetHelpDispatcherUrlAsync
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetWwwUrlForSMWebAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.GetWwwUrlForSMWebAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_GetWwwUrlForSMWebAsync_SuperOffice_WebApi_RequestOptions_
  name: GetWwwUrlForSMWebAsync
  nameWithType: IConfigurationAgent.GetWwwUrlForSMWebAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetWwwUrlForSMWebAsync
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetCsCgiUrlInternalAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.GetCsCgiUrlInternalAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_GetCsCgiUrlInternalAsync_SuperOffice_WebApi_RequestOptions_
  name: GetCsCgiUrlInternalAsync
  nameWithType: IConfigurationAgent.GetCsCgiUrlInternalAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetCsCgiUrlInternalAsync
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetCRMUrlAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.GetCRMUrlAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_GetCRMUrlAsync_System_String_System_String_System_Boolean_SuperOffice_WebApi_RequestOptions_
  name: GetCRMUrlAsync
  nameWithType: IConfigurationAgent.GetCRMUrlAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetCRMUrlAsync
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetEmailNumberOfDaysAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.GetEmailNumberOfDaysAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_GetEmailNumberOfDaysAsync_SuperOffice_WebApi_RequestOptions_
  name: GetEmailNumberOfDaysAsync
  nameWithType: IConfigurationAgent.GetEmailNumberOfDaysAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetEmailNumberOfDaysAsync
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: T:System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<int>
  nameWithType: Task<int>
  fullName: System.Threading.Tasks.Task<int>
  nameWithType.vb: Task(Of Integer)
  fullName.vb: System.Threading.Tasks.Task(Of Integer)
  name.vb: Task(Of Integer)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetCustomerUrlAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.GetCustomerUrlAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_GetCustomerUrlAsync_SuperOffice_WebApi_RequestOptions_
  name: GetCustomerUrlAsync
  nameWithType: IConfigurationAgent.GetCustomerUrlAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetCustomerUrlAsync
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetSpfDomainAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.GetSpfDomainAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_GetSpfDomainAsync_SuperOffice_WebApi_RequestOptions_
  name: GetSpfDomainAsync
  nameWithType: IConfigurationAgent.GetSpfDomainAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetSpfDomainAsync
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetAllFeatureTogglesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.GetAllFeatureTogglesAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_GetAllFeatureTogglesAsync_SuperOffice_WebApi_RequestOptions_
  name: GetAllFeatureTogglesAsync
  nameWithType: IConfigurationAgent.GetAllFeatureTogglesAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetAllFeatureTogglesAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.StringBoolDictionary}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.StringBoolDictionary}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<StringBoolDictionary>
  nameWithType: Task<StringBoolDictionary>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.StringBoolDictionary>
  nameWithType.vb: Task(Of StringBoolDictionary)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.StringBoolDictionary)
  name.vb: Task(Of StringBoolDictionary)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.WebApi.Data.StringBoolDictionary
    name: StringBoolDictionary
    isExternal: true
    href: SuperOffice.WebApi.Data.StringBoolDictionary.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.WebApi.Data.StringBoolDictionary
    name: StringBoolDictionary
    isExternal: true
    href: SuperOffice.WebApi.Data.StringBoolDictionary.html
  - name: )
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetDiaryViewEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.GetDiaryViewEntityAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_GetDiaryViewEntityAsync_System_Int32_SuperOffice_WebApi_RequestOptions_
  name: GetDiaryViewEntityAsync
  nameWithType: IConfigurationAgent.GetDiaryViewEntityAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetDiaryViewEntityAsync
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetSystemEventEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.GetSystemEventEntityAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_GetSystemEventEntityAsync_System_Int32_SuperOffice_WebApi_RequestOptions_
  name: GetSystemEventEntityAsync
  nameWithType: IConfigurationAgent.GetSystemEventEntityAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetSystemEventEntityAsync
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.ExistsSystemEventAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.ExistsSystemEventAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_ExistsSystemEventAsync_System_String_SuperOffice_WebApi_RequestOptions_
  name: ExistsSystemEventAsync
  nameWithType: IConfigurationAgent.ExistsSystemEventAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.ExistsSystemEventAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetWindowPosSizeAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.GetWindowPosSizeAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_GetWindowPosSizeAsync_System_Int32_SuperOffice_WebApi_RequestOptions_
  name: GetWindowPosSizeAsync
  nameWithType: IConfigurationAgent.GetWindowPosSizeAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetWindowPosSizeAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.WindowPosSize}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.WindowPosSize}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<WindowPosSize>
  nameWithType: Task<WindowPosSize>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.WindowPosSize>
  nameWithType.vb: Task(Of WindowPosSize)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.WindowPosSize)
  name.vb: Task(Of WindowPosSize)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.WebApi.Data.WindowPosSize
    name: WindowPosSize
    isExternal: true
    href: SuperOffice.WebApi.Data.WindowPosSize.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.WebApi.Data.WindowPosSize
    name: WindowPosSize
    isExternal: true
    href: SuperOffice.WebApi.Data.WindowPosSize.html
  - name: )
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.SaveWindowPosSizeAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.SaveWindowPosSizeAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_SaveWindowPosSizeAsync_SuperOffice_WebApi_Data_WindowPosSize_SuperOffice_WebApi_RequestOptions_
  name: SaveWindowPosSizeAsync
  nameWithType: IConfigurationAgent.SaveWindowPosSizeAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.SaveWindowPosSizeAsync
- uid: SuperOffice.WebApi.Data.WindowPosSize
  commentId: T:SuperOffice.WebApi.Data.WindowPosSize
  parent: SuperOffice.WebApi.Data
  isExternal: true
  href: SuperOffice.WebApi.Data.WindowPosSize.html
  name: WindowPosSize
  nameWithType: WindowPosSize
  fullName: SuperOffice.WebApi.Data.WindowPosSize
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.DeleteWindowPosSizeAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.DeleteWindowPosSizeAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_DeleteWindowPosSizeAsync_System_Int32_SuperOffice_WebApi_RequestOptions_
  name: DeleteWindowPosSizeAsync
  nameWithType: IConfigurationAgent.DeleteWindowPosSizeAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.DeleteWindowPosSizeAsync
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetWindowPosSizeListAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.GetWindowPosSizeListAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_GetWindowPosSizeListAsync_System_Int32___SuperOffice_WebApi_RequestOptions_
  name: GetWindowPosSizeListAsync
  nameWithType: IConfigurationAgent.GetWindowPosSizeListAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetWindowPosSizeListAsync
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.WindowPosSize[]}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.WindowPosSize[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<WindowPosSize[]>
  nameWithType: Task<WindowPosSize[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.WindowPosSize[]>
  nameWithType.vb: Task(Of WindowPosSize())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.WindowPosSize())
  name.vb: Task(Of WindowPosSize())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.WebApi.Data.WindowPosSize
    name: WindowPosSize
    isExternal: true
    href: SuperOffice.WebApi.Data.WindowPosSize.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.WebApi.Data.WindowPosSize
    name: WindowPosSize
    isExternal: true
    href: SuperOffice.WebApi.Data.WindowPosSize.html
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetMyWindowPosSizesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.GetMyWindowPosSizesAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_GetMyWindowPosSizesAsync_SuperOffice_WebApi_RequestOptions_
  name: GetMyWindowPosSizesAsync
  nameWithType: IConfigurationAgent.GetMyWindowPosSizesAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetMyWindowPosSizesAsync
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetWindowPosSizesOnPersonIdAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.GetWindowPosSizesOnPersonIdAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_GetWindowPosSizesOnPersonIdAsync_System_Int32_SuperOffice_WebApi_RequestOptions_
  name: GetWindowPosSizesOnPersonIdAsync
  nameWithType: IConfigurationAgent.GetWindowPosSizesOnPersonIdAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetWindowPosSizesOnPersonIdAsync
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.GetWindowPosSizesOnAssociateIdAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.GetWindowPosSizesOnAssociateIdAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_GetWindowPosSizesOnAssociateIdAsync_System_Int32_SuperOffice_WebApi_RequestOptions_
  name: GetWindowPosSizesOnAssociateIdAsync
  nameWithType: IConfigurationAgent.GetWindowPosSizesOnAssociateIdAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.GetWindowPosSizesOnAssociateIdAsync
- uid: SuperOffice.WebApi.Agents.IConfigurationAgent.SaveWindowPosSizesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IConfigurationAgent.SaveWindowPosSizesAsync
  isExternal: true
  href: SuperOffice.WebApi.Agents.IConfigurationAgent.html#SuperOffice_WebApi_Agents_IConfigurationAgent_SaveWindowPosSizesAsync_SuperOffice_WebApi_Data_WindowPosSize___SuperOffice_WebApi_RequestOptions_
  name: SaveWindowPosSizesAsync
  nameWithType: IConfigurationAgent.SaveWindowPosSizesAsync
  fullName: SuperOffice.WebApi.Agents.IConfigurationAgent.SaveWindowPosSizesAsync
- uid: SuperOffice.WebApi.Data.WindowPosSize[]
  isExternal: true
  href: SuperOffice.WebApi.Data.WindowPosSize.html
  name: WindowPosSize[]
  nameWithType: WindowPosSize[]
  fullName: SuperOffice.WebApi.Data.WindowPosSize[]
  nameWithType.vb: WindowPosSize()
  fullName.vb: SuperOffice.WebApi.Data.WindowPosSize()
  name.vb: WindowPosSize()
  spec.csharp:
  - uid: SuperOffice.WebApi.Data.WindowPosSize
    name: WindowPosSize
    isExternal: true
    href: SuperOffice.WebApi.Data.WindowPosSize.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.WebApi.Data.WindowPosSize
    name: WindowPosSize
    isExternal: true
    href: SuperOffice.WebApi.Data.WindowPosSize.html
  - name: (
  - name: )
