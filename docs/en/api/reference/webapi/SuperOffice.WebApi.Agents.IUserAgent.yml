### YamlMime:ManagedReference
items:
- uid: SuperOffice.WebApi.Agents.IUserAgent
  commentId: T:SuperOffice.WebApi.Agents.IUserAgent
  id: IUserAgent
  parent: SuperOffice.WebApi.Agents
  children:
  - SuperOffice.WebApi.Agents.IUserAgent.AddOwnerContactAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.CanChangePasswordAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.ChangeOwnPasswordAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.ChangePasswordAsync(System.Int32,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.ChangePasswordFromNameAsync(System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.ChangeUserTypeAsync(SuperOffice.WebApi.Data.User,SuperOffice.WebApi.Data.UserType,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.CheckAccessGatewayRegistrationAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultRoleEntityAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultRoleEntityFromTypeAsync(SuperOffice.WebApi.Data.RoleType,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultServiceAuthAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultUntrustedCredentialsAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultUserAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultUserFromUserTypeAndCredentialAsync(SuperOffice.WebApi.Data.UserType,System.Int32,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultUserFromUserTypeAndPersonIdAsync(SuperOffice.WebApi.Data.UserType,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultUserFromUserTypeAsync(SuperOffice.WebApi.Data.UserType,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.CreateExternalUserAsync(System.Int32,System.String,System.String,System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.CreateUserGroupAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.DecryptAndSaveExternalTokensAsync(SuperOffice.WebApi.Data.TokenManagementInfo,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.DeleteCredentialAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.DeleteExternalUserAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.DeleteRoleAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.DeleteServiceAuthAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.DeleteUserAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.DeleteUserFromNameAsync(System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.DeleteUserGroupAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.ExecuteUserCommandAsync(System.String,SuperOffice.WebApi.Data.CommandActionResult,SuperOffice.WebApi.Data.User,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.FindCredentialsGroupsAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.FindCredentialUsersAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.FindRolesWithFunctionalRightAsync(System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.FindRolesWithFunctionalRightsAsync(System.String[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.FindRolesWithoutFunctionalRightsAsync(System.String[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.GenerateNewPasswordForExternalUserAsync(System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.GetAccessGatewayInfoAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.GetAccessTokenAsync(System.String,System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.GetAllFunctionalRightsAsync(SuperOffice.WebApi.Data.RoleType,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.GetAllRolesAsync(SuperOffice.WebApi.Data.RoleType,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.GetAllUserGroupsAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.GetCredentialTypesAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.GetCredentialTypesForUserTypeAsync(SuperOffice.WebApi.Data.UserType,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.GetCredentialUsersInGroupAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.GetDataRightAsync(System.Int32,System.String,SuperOffice.WebApi.Data.RoleRelationToOwner,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.GetDataRightsAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.GetDefaultAssociateUserNameAsync(SuperOffice.WebApi.Data.User,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.GetExternalTokensAsync(System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.GetFunctionalRightsAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.GetOrRegisterAccessGatewayInfoAsync(System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.GetRoleAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.GetRoleEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.GetServiceAuthAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.GetSupportedChangePasswordTypesAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.GetUntrustedCredentialsAsync(System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.GetUntrustedCredentialsForAssociateAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.GetUserAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.GetUserCommandsAsync(SuperOffice.WebApi.Data.User,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.GetUserFromEjUserIdAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.GetUserFromNameAsync(System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.GetUserFromPersonIdAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.GetUserGroupAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.GetUserGroupListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.GetUserInfoAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.GetUserInfoListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.GetUserPresenceStatusAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.GetValidUserNameAsync(System.Int32,SuperOffice.WebApi.Data.UserType,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.GetValidUserNameForNewUserAsync(SuperOffice.WebApi.Data.User,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.IsNickNameUniqueAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.IsPasswordValidAsync(System.Int32,SuperOffice.WebApi.Data.UserType,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.IsPasswordValidWithReasonAsync(System.Int32,SuperOffice.WebApi.Data.UserType,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.IsUserNameValidAsync(System.Int32,SuperOffice.WebApi.Data.UserType,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.IsUserNameValidWithReasonAsync(System.Int32,SuperOffice.WebApi.Data.UserType,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.MakeRetiredAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.RegisterWithAccessGatewayAsync(System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.RemoveLicensesAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.RemoveOwnerContactAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.RemoveUntrustedCredentialsAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.RemoveUntrustedCredentialsForAssociateAsync(System.Int32,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.ResolveUserFromInfoAsync(System.Int32,System.String,System.String[],System.String[],SuperOffice.WebApi.Data.UserType,SuperOffice.WebApi.Data.Credential,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.SaveCredentialAsync(System.Int32,SuperOffice.WebApi.Data.Credential,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.SaveExternalTokensAsync(SuperOffice.WebApi.Data.TokenManagementInfo,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.SaveRoleEntityAsync(SuperOffice.WebApi.Data.RoleEntity,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.SaveServiceAuthAsync(SuperOffice.WebApi.Data.ServiceAuth,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.SaveUntrustedCredentialsAsync(System.String,SuperOffice.WebApi.Data.UntrustedCredentials,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.SaveUntrustedCredentialsForAssociateAsync(System.Int32,System.String,SuperOffice.WebApi.Data.UntrustedCredentials,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.SaveUserAsync(SuperOffice.WebApi.Data.User,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.SaveUserFromNameAsync(System.String,SuperOffice.WebApi.Data.User,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.SaveUserGroupAsync(SuperOffice.WebApi.Data.UserGroup,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.SendChangePasswordEMailAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.SetDataRightAsync(System.Int32,System.String,SuperOffice.WebApi.Data.RoleRelationToOwner,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.SetExternalUserInfoAsync(System.Int32,System.String,System.String,System.Boolean,System.Int32,SuperOffice.WebApi.Data.ExternalUserInfoModification,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.SetFunctionalRightsAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.SetGeneratedPasswordAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.SetGeneratedPasswordFromNameAsync(System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.SetPasswordAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.SetPasswordFromNameAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.SetUserPresenceStatusAsync(System.Int32,SuperOffice.WebApi.Data.UserPresenceStatus,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IUserAgent.ValidateUserAsync(SuperOffice.WebApi.Data.User,SuperOffice.WebApi.RequestOptions)
  langs:
  - csharp
  - vb
  name: IUserAgent
  nameWithType: IUserAgent
  fullName: SuperOffice.WebApi.Agents.IUserAgent
  type: Interface
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUser administration\n<p></p>\n<strong>Online Restricted:</strong> This agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: 'public interface IUserAgent : IDisposable'
    content.vb: >-
      Public Interface IUserAgent
          Inherits IDisposable
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultRoleEntityAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultRoleEntityAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultRoleEntityAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultRoleEntityAsync(RequestOptions)
  nameWithType: IUserAgent.CreateDefaultRoleEntityAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultRoleEntityAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet default values into a new RoleEntity.\nNetServer calculates default values on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: Task<RoleEntity> CreateDefaultRoleEntityAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.RoleEntity}
      description: A blank RoleEntity
    content.vb: Function CreateDefaultRoleEntityAsync(requestOptions As RequestOptions = Nothing) As Task(Of RoleEntity)
  overload: SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultRoleEntityAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.SaveRoleEntityAsync(SuperOffice.WebApi.Data.RoleEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.SaveRoleEntityAsync(SuperOffice.WebApi.Data.RoleEntity,SuperOffice.WebApi.RequestOptions)
  id: SaveRoleEntityAsync(SuperOffice.WebApi.Data.RoleEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: SaveRoleEntityAsync(RoleEntity, RequestOptions)
  nameWithType: IUserAgent.SaveRoleEntityAsync(RoleEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.SaveRoleEntityAsync(SuperOffice.WebApi.Data.RoleEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdates the existing RoleEntity or creates a new RoleEntity if the id parameter is 0. \n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<RoleEntity> SaveRoleEntityAsync(RoleEntity roleEntity, RequestOptions requestOptions = null)
    parameters:
    - id: roleEntity
      type: SuperOffice.WebApi.Data.RoleEntity
      description: The RoleEntity that is saved.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.RoleEntity}
      description: New or updated RoleEntity
    content.vb: Function SaveRoleEntityAsync(roleEntity As RoleEntity, requestOptions As RequestOptions = Nothing) As Task(Of RoleEntity)
  overload: SuperOffice.WebApi.Agents.IUserAgent.SaveRoleEntityAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultServiceAuthAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultServiceAuthAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultServiceAuthAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultServiceAuthAsync(RequestOptions)
  nameWithType: IUserAgent.CreateDefaultServiceAuthAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultServiceAuthAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet default values into a new ServiceAuth.\nNetServer calculates default values on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: Task<ServiceAuth> CreateDefaultServiceAuthAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ServiceAuth}
      description: A blank ServiceAuth
    content.vb: Function CreateDefaultServiceAuthAsync(requestOptions As RequestOptions = Nothing) As Task(Of ServiceAuth)
  overload: SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultServiceAuthAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.SaveServiceAuthAsync(SuperOffice.WebApi.Data.ServiceAuth,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.SaveServiceAuthAsync(SuperOffice.WebApi.Data.ServiceAuth,SuperOffice.WebApi.RequestOptions)
  id: SaveServiceAuthAsync(SuperOffice.WebApi.Data.ServiceAuth,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: SaveServiceAuthAsync(ServiceAuth, RequestOptions)
  nameWithType: IUserAgent.SaveServiceAuthAsync(ServiceAuth, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.SaveServiceAuthAsync(SuperOffice.WebApi.Data.ServiceAuth, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdates the existing ServiceAuth or creates a new ServiceAuth if the id parameter is 0. \n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<ServiceAuth> SaveServiceAuthAsync(ServiceAuth serviceAuth, RequestOptions requestOptions = null)
    parameters:
    - id: serviceAuth
      type: SuperOffice.WebApi.Data.ServiceAuth
      description: The ServiceAuth that is saved.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ServiceAuth}
      description: New or updated ServiceAuth
    content.vb: Function SaveServiceAuthAsync(serviceAuth As ServiceAuth, requestOptions As RequestOptions = Nothing) As Task(Of ServiceAuth)
  overload: SuperOffice.WebApi.Agents.IUserAgent.SaveServiceAuthAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.DeleteServiceAuthAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.DeleteServiceAuthAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: DeleteServiceAuthAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: DeleteServiceAuthAsync(Int32, RequestOptions)
  nameWithType: IUserAgent.DeleteServiceAuthAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.DeleteServiceAuthAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nDeletes the ServiceAuth\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task DeleteServiceAuthAsync(int serviceAuthId, RequestOptions requestOptions = null)
    parameters:
    - id: serviceAuthId
      type: System.Int32
      description: The identity of the ServiceAuth
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function DeleteServiceAuthAsync(serviceAuthId As Integer, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IUserAgent.DeleteServiceAuthAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultUntrustedCredentialsAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultUntrustedCredentialsAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultUntrustedCredentialsAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultUntrustedCredentialsAsync(RequestOptions)
  nameWithType: IUserAgent.CreateDefaultUntrustedCredentialsAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultUntrustedCredentialsAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet default values into a new UntrustedCredentials.\nNetServer calculates default values on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: Task<UntrustedCredentials> CreateDefaultUntrustedCredentialsAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.UntrustedCredentials}
      description: A blank UntrustedCredentials
    content.vb: Function CreateDefaultUntrustedCredentialsAsync(requestOptions As RequestOptions = Nothing) As Task(Of UntrustedCredentials)
  overload: SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultUntrustedCredentialsAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultUserAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultUserAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultUserAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultUserAsync(RequestOptions)
  nameWithType: IUserAgent.CreateDefaultUserAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultUserAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet default values into a new User.\nNetServer calculates default values on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: Task<User> CreateDefaultUserAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.User}
      description: A blank User
    content.vb: Function CreateDefaultUserAsync(requestOptions As RequestOptions = Nothing) As Task(Of User)
  overload: SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultUserAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.SaveUserAsync(SuperOffice.WebApi.Data.User,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.SaveUserAsync(SuperOffice.WebApi.Data.User,SuperOffice.WebApi.RequestOptions)
  id: SaveUserAsync(SuperOffice.WebApi.Data.User,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: SaveUserAsync(User, RequestOptions)
  nameWithType: IUserAgent.SaveUserAsync(User, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.SaveUserAsync(SuperOffice.WebApi.Data.User, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdates the existing User or creates a new User if the id parameter is 0. \n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<User> SaveUserAsync(User user, RequestOptions requestOptions = null)
    parameters:
    - id: user
      type: SuperOffice.WebApi.Data.User
      description: The User that is saved.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.User}
      description: New or updated User
    content.vb: Function SaveUserAsync(user As User, requestOptions As RequestOptions = Nothing) As Task(Of User)
  overload: SuperOffice.WebApi.Agents.IUserAgent.SaveUserAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetUserCommandsAsync(SuperOffice.WebApi.Data.User,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.GetUserCommandsAsync(SuperOffice.WebApi.Data.User,SuperOffice.WebApi.RequestOptions)
  id: GetUserCommandsAsync(SuperOffice.WebApi.Data.User,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: GetUserCommandsAsync(User, RequestOptions)
  nameWithType: IUserAgent.GetUserCommandsAsync(User, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetUserCommandsAsync(SuperOffice.WebApi.Data.User, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet registered custom commands for User\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<CustomCommand[]> GetUserCommandsAsync(User user, RequestOptions requestOptions = null)
    parameters:
    - id: user
      type: SuperOffice.WebApi.Data.User
      description: 'The User '
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.CustomCommand[]}
      description: Custom commands for the User
    content.vb: Function GetUserCommandsAsync(user As User, requestOptions As RequestOptions = Nothing) As Task(Of CustomCommand())
  overload: SuperOffice.WebApi.Agents.IUserAgent.GetUserCommandsAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.ExecuteUserCommandAsync(System.String,SuperOffice.WebApi.Data.CommandActionResult,SuperOffice.WebApi.Data.User,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.ExecuteUserCommandAsync(System.String,SuperOffice.WebApi.Data.CommandActionResult,SuperOffice.WebApi.Data.User,SuperOffice.WebApi.RequestOptions)
  id: ExecuteUserCommandAsync(System.String,SuperOffice.WebApi.Data.CommandActionResult,SuperOffice.WebApi.Data.User,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: ExecuteUserCommandAsync(String, CommandActionResult, User, RequestOptions)
  nameWithType: IUserAgent.ExecuteUserCommandAsync(String, CommandActionResult, User, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.ExecuteUserCommandAsync(System.String, SuperOffice.WebApi.Data.CommandActionResult, SuperOffice.WebApi.Data.User, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nExecutes the custom command for User\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<CommandResult> ExecuteUserCommandAsync(string commandName, CommandActionResult actionResult, User user, RequestOptions requestOptions = null)
    parameters:
    - id: commandName
      type: System.String
      description: The name of the command to execute.
    - id: actionResult
      type: SuperOffice.WebApi.Data.CommandActionResult
      description: Result of an UI operation.
    - id: user
      type: SuperOffice.WebApi.Data.User
      description: The User to execute commands on.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.CommandResult}
      description: Result of the executed command
    content.vb: Function ExecuteUserCommandAsync(commandName As String, actionResult As CommandActionResult, user As User, requestOptions As RequestOptions = Nothing) As Task(Of CommandResult)
  overload: SuperOffice.WebApi.Agents.IUserAgent.ExecuteUserCommandAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.DeleteUserAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.DeleteUserAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: DeleteUserAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: DeleteUserAsync(Int32, RequestOptions)
  nameWithType: IUserAgent.DeleteUserAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.DeleteUserAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nDeletes the User\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task DeleteUserAsync(int userId, RequestOptions requestOptions = null)
    parameters:
    - id: userId
      type: System.Int32
      description: The identity of the User
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function DeleteUserAsync(userId As Integer, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IUserAgent.DeleteUserAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetAccessGatewayInfoAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.GetAccessGatewayInfoAsync(SuperOffice.WebApi.RequestOptions)
  id: GetAccessGatewayInfoAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: GetAccessGatewayInfoAsync(RequestOptions)
  nameWithType: IUserAgent.GetAccessGatewayInfoAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetAccessGatewayInfoAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns accessgateway registration info\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<AccessGatewayInfo> GetAccessGatewayInfoAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AccessGatewayInfo}
    content.vb: Function GetAccessGatewayInfoAsync(requestOptions As RequestOptions = Nothing) As Task(Of AccessGatewayInfo)
  overload: SuperOffice.WebApi.Agents.IUserAgent.GetAccessGatewayInfoAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetOrRegisterAccessGatewayInfoAsync(System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.GetOrRegisterAccessGatewayInfoAsync(System.String,SuperOffice.WebApi.RequestOptions)
  id: GetOrRegisterAccessGatewayInfoAsync(System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: GetOrRegisterAccessGatewayInfoAsync(String, RequestOptions)
  nameWithType: IUserAgent.GetOrRegisterAccessGatewayInfoAsync(String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetOrRegisterAccessGatewayInfoAsync(System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns accessgateway registration info and registers a new or adds the url if necessary\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<AccessGatewayInfo> GetOrRegisterAccessGatewayInfoAsync(string redirectUri, RequestOptions requestOptions = null)
    parameters:
    - id: redirectUri
      type: System.String
      description: This is the registered redirect_uri for AccessGateway OIDC.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AccessGatewayInfo}
    content.vb: Function GetOrRegisterAccessGatewayInfoAsync(redirectUri As String, requestOptions As RequestOptions = Nothing) As Task(Of AccessGatewayInfo)
  overload: SuperOffice.WebApi.Agents.IUserAgent.GetOrRegisterAccessGatewayInfoAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.RegisterWithAccessGatewayAsync(System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.RegisterWithAccessGatewayAsync(System.String,SuperOffice.WebApi.RequestOptions)
  id: RegisterWithAccessGatewayAsync(System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: RegisterWithAccessGatewayAsync(String, RequestOptions)
  nameWithType: IUserAgent.RegisterWithAccessGatewayAsync(String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.RegisterWithAccessGatewayAsync(System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nRegisters with access gateway if not already done, otherwise will attempt to update\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<AccessGatewayInfo> RegisterWithAccessGatewayAsync(string redirectUri, RequestOptions requestOptions = null)
    parameters:
    - id: redirectUri
      type: System.String
      description: This is the registered redirect_uri for AccessGateway OIDC.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AccessGatewayInfo}
    content.vb: Function RegisterWithAccessGatewayAsync(redirectUri As String, requestOptions As RequestOptions = Nothing) As Task(Of AccessGatewayInfo)
  overload: SuperOffice.WebApi.Agents.IUserAgent.RegisterWithAccessGatewayAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.CheckAccessGatewayRegistrationAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.CheckAccessGatewayRegistrationAsync(SuperOffice.WebApi.RequestOptions)
  id: CheckAccessGatewayRegistrationAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: CheckAccessGatewayRegistrationAsync(RequestOptions)
  nameWithType: IUserAgent.CheckAccessGatewayRegistrationAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.CheckAccessGatewayRegistrationAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nChecks if AccessGatewayRegistration is valid\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<bool> CheckAccessGatewayRegistrationAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the registration is usable
    content.vb: Function CheckAccessGatewayRegistrationAsync(requestOptions As RequestOptions = Nothing) As Task(Of Boolean)
  overload: SuperOffice.WebApi.Agents.IUserAgent.CheckAccessGatewayRegistrationAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.SaveCredentialAsync(System.Int32,SuperOffice.WebApi.Data.Credential,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.SaveCredentialAsync(System.Int32,SuperOffice.WebApi.Data.Credential,SuperOffice.WebApi.RequestOptions)
  id: SaveCredentialAsync(System.Int32,SuperOffice.WebApi.Data.Credential,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: SaveCredentialAsync(Int32, Credential, RequestOptions)
  nameWithType: IUserAgent.SaveCredentialAsync(Int32, Credential, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.SaveCredentialAsync(System.Int32, SuperOffice.WebApi.Data.Credential, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSave (adds/replaces) current credential of the same type for the user.\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<bool> SaveCredentialAsync(int userId, Credential credential, RequestOptions requestOptions = null)
    parameters:
    - id: userId
      type: System.Int32
      description: Primary key of the user (i.e. associate)
    - id: credential
      type: SuperOffice.WebApi.Data.Credential
      description: Credentials supported for authentication
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the credential was successfully saved.
    content.vb: Function SaveCredentialAsync(userId As Integer, credential As Credential, requestOptions As RequestOptions = Nothing) As Task(Of Boolean)
  overload: SuperOffice.WebApi.Agents.IUserAgent.SaveCredentialAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.DeleteCredentialAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.DeleteCredentialAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: DeleteCredentialAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: DeleteCredentialAsync(Int32, String, RequestOptions)
  nameWithType: IUserAgent.DeleteCredentialAsync(Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.DeleteCredentialAsync(System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nRemove credential of a specific type for a user\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<bool> DeleteCredentialAsync(int userId, string credentialType, RequestOptions requestOptions = null)
    parameters:
    - id: userId
      type: System.Int32
      description: Primary key of the user (i.e. associate)
    - id: credentialType
      type: System.String
      description: Type of credentials, corresponding to name of plugin and type in the credentials table
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if credential was sucessfully removed.
    content.vb: Function DeleteCredentialAsync(userId As Integer, credentialType As String, requestOptions As RequestOptions = Nothing) As Task(Of Boolean)
  overload: SuperOffice.WebApi.Agents.IUserAgent.DeleteCredentialAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.FindCredentialsGroupsAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.FindCredentialsGroupsAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  id: FindCredentialsGroupsAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: FindCredentialsGroupsAsync(String, String, RequestOptions)
  nameWithType: IUserAgent.FindCredentialsGroupsAsync(String, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.FindCredentialsGroupsAsync(System.String, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet user groups holding users filtered by the searchString.  This method is only relevant if the CredentialType control is of type link.  There will allways be at least one groups even if the underlying provider does not support groups.\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<CredentialsGroup[]> FindCredentialsGroupsAsync(string type, string searchString, RequestOptions requestOptions = null)
    parameters:
    - id: type
      type: System.String
      description: Type of credentials, corresponding to name of plugin and type in the credentials table.
    - id: searchString
      type: System.String
      description: Partly name of domain group.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.CredentialsGroup[]}
    content.vb: Function FindCredentialsGroupsAsync(type As String, searchString As String, requestOptions As RequestOptions = Nothing) As Task(Of CredentialsGroup())
  overload: SuperOffice.WebApi.Agents.IUserAgent.FindCredentialsGroupsAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.FindCredentialUsersAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.FindCredentialUsersAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  id: FindCredentialUsersAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: FindCredentialUsersAsync(String, String, RequestOptions)
  nameWithType: IUserAgent.FindCredentialUsersAsync(String, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.FindCredentialUsersAsync(System.String, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nFind users matching the partial name.\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<CredentialsGroupUsers> FindCredentialUsersAsync(string type, string searchString, RequestOptions requestOptions = null)
    parameters:
    - id: type
      type: System.String
      description: Type of credentials, corresponding to name of plugin and type in the credentials table.
    - id: searchString
      type: System.String
      description: Partly name of the user group
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.CredentialsGroupUsers}
    content.vb: Function FindCredentialUsersAsync(type As String, searchString As String, requestOptions As RequestOptions = Nothing) As Task(Of CredentialsGroupUsers)
  overload: SuperOffice.WebApi.Agents.IUserAgent.FindCredentialUsersAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetCredentialUsersInGroupAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.GetCredentialUsersInGroupAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetCredentialUsersInGroupAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: GetCredentialUsersInGroupAsync(String, String, RequestOptions)
  nameWithType: IUserAgent.GetCredentialUsersInGroupAsync(String, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetCredentialUsersInGroupAsync(System.String, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet credential users within a user group\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<CredentialsGroupUsers> GetCredentialUsersInGroupAsync(string type, string groupName, RequestOptions requestOptions = null)
    parameters:
    - id: type
      type: System.String
      description: Type of credentials, corresponding to name of plugin and type in the credentials table.
    - id: groupName
      type: System.String
      description: Name of user group needed to discover the users.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.CredentialsGroupUsers}
    content.vb: Function GetCredentialUsersInGroupAsync(type As String, groupName As String, requestOptions As RequestOptions = Nothing) As Task(Of CredentialsGroupUsers)
  overload: SuperOffice.WebApi.Agents.IUserAgent.GetCredentialUsersInGroupAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetRoleAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.GetRoleAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetRoleAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: GetRoleAsync(Int32, RequestOptions)
  nameWithType: IUserAgent.GetRoleAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetRoleAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific Role object.                        \n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<Role> GetRoleAsync(int roleId, RequestOptions requestOptions = null)
    parameters:
    - id: roleId
      type: System.Int32
      description: The identifier of the Role object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Role}
      description: Role
    content.vb: Function GetRoleAsync(roleId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Role)
  overload: SuperOffice.WebApi.Agents.IUserAgent.GetRoleAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetRoleEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.GetRoleEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetRoleEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: GetRoleEntityAsync(Int32, RequestOptions)
  nameWithType: IUserAgent.GetRoleEntityAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetRoleEntityAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific RoleEntity object.                        \n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<RoleEntity> GetRoleEntityAsync(int roleEntityId, RequestOptions requestOptions = null)
    parameters:
    - id: roleEntityId
      type: System.Int32
      description: The identifier of the RoleEntity object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.RoleEntity}
      description: RoleEntity
    content.vb: Function GetRoleEntityAsync(roleEntityId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of RoleEntity)
  overload: SuperOffice.WebApi.Agents.IUserAgent.GetRoleEntityAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.DeleteRoleAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.DeleteRoleAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: DeleteRoleAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: DeleteRoleAsync(Int32, Int32, RequestOptions)
  nameWithType: IUserAgent.DeleteRoleAsync(Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.DeleteRoleAsync(System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nDelete the specified role and move all users associated with the role to the replacingRoleId\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task DeleteRoleAsync(int roleIdToDelete, int replacingRoleId, RequestOptions requestOptions = null)
    parameters:
    - id: roleIdToDelete
      type: System.Int32
      description: The roleId to delete
    - id: replacingRoleId
      type: System.Int32
      description: The roleId which all associated users will be moved to.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function DeleteRoleAsync(roleIdToDelete As Integer, replacingRoleId As Integer, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IUserAgent.DeleteRoleAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetAllRolesAsync(SuperOffice.WebApi.Data.RoleType,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.GetAllRolesAsync(SuperOffice.WebApi.Data.RoleType,SuperOffice.WebApi.RequestOptions)
  id: GetAllRolesAsync(SuperOffice.WebApi.Data.RoleType,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: GetAllRolesAsync(RoleType, RequestOptions)
  nameWithType: IUserAgent.GetAllRolesAsync(RoleType, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetAllRolesAsync(SuperOffice.WebApi.Data.RoleType, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet a list of all roles for the given type of role. MDO List name = &apos;Roles&apos;, extra=&apos;0&apos; (roleType) \n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<SelectableMDOListItem[]> GetAllRolesAsync(RoleType roleType, RequestOptions requestOptions = null)
    parameters:
    - id: roleType
      type: SuperOffice.WebApi.Data.RoleType
      description: Type of role (Employee/External/Anonymous/System)
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SelectableMDOListItem[]}
      description: FunctionRight items with name and description. Code name for function right is in the extra-info property.
    content.vb: Function GetAllRolesAsync(roleType As RoleType, requestOptions As RequestOptions = Nothing) As Task(Of SelectableMDOListItem())
  overload: SuperOffice.WebApi.Agents.IUserAgent.GetAllRolesAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetAllFunctionalRightsAsync(SuperOffice.WebApi.Data.RoleType,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.GetAllFunctionalRightsAsync(SuperOffice.WebApi.Data.RoleType,SuperOffice.WebApi.RequestOptions)
  id: GetAllFunctionalRightsAsync(SuperOffice.WebApi.Data.RoleType,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: GetAllFunctionalRightsAsync(RoleType, RequestOptions)
  nameWithType: IUserAgent.GetAllFunctionalRightsAsync(RoleType, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetAllFunctionalRightsAsync(SuperOffice.WebApi.Data.RoleType, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet a list of all functional rights for the given type of role. MDO List name = &apos;FunctionRights&apos;, extra=&apos;roleType=0&apos; \n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<SelectableMDOListItem[]> GetAllFunctionalRightsAsync(RoleType roleType, RequestOptions requestOptions = null)
    parameters:
    - id: roleType
      type: SuperOffice.WebApi.Data.RoleType
      description: Type of role (Employee/External/Anonymous/System)
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SelectableMDOListItem[]}
      description: FunctionRight items with name and description. Code name for function right is in the extra-info property.
    content.vb: Function GetAllFunctionalRightsAsync(roleType As RoleType, requestOptions As RequestOptions = Nothing) As Task(Of SelectableMDOListItem())
  overload: SuperOffice.WebApi.Agents.IUserAgent.GetAllFunctionalRightsAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetFunctionalRightsAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.GetFunctionalRightsAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetFunctionalRightsAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: GetFunctionalRightsAsync(Int32, RequestOptions)
  nameWithType: IUserAgent.GetFunctionalRightsAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetFunctionalRightsAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet all functional rights for the given role. Functional rights not set on the role are not included. MDO List name = &apos;FunctionRights&apos;, extra=&apos;role=123&apos;\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<SelectableMDOListItem[]> GetFunctionalRightsAsync(int roleId, RequestOptions requestOptions = null)
    parameters:
    - id: roleId
      type: System.Int32
      description: The role id to get the functional rights for.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SelectableMDOListItem[]}
      description: FunctionRight items with name and description. Code name for function right is in the extra-info property.
    content.vb: Function GetFunctionalRightsAsync(roleId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of SelectableMDOListItem())
  overload: SuperOffice.WebApi.Agents.IUserAgent.GetFunctionalRightsAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.SetFunctionalRightsAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.SetFunctionalRightsAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: SetFunctionalRightsAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: SetFunctionalRightsAsync(Int32, Int32[], RequestOptions)
  nameWithType: IUserAgent.SetFunctionalRightsAsync(Int32, Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.SetFunctionalRightsAsync(System.Int32, System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet all functional rights for the given role. Functional rights not specified here will be removed from the role. \n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task SetFunctionalRightsAsync(int roleId, int[] functionalRightIds, RequestOptions requestOptions = null)
    parameters:
    - id: roleId
      type: System.Int32
      description: The role id to set the functional rights for
    - id: functionalRightIds
      type: System.Int32[]
      description: An array of functional rights ids to set for this role. Rights not included here are removed from the role.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function SetFunctionalRightsAsync(roleId As Integer, functionalRightIds As Integer(), requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IUserAgent.SetFunctionalRightsAsync*
  nameWithType.vb: IUserAgent.SetFunctionalRightsAsync(Int32, Int32(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IUserAgent.SetFunctionalRightsAsync(System.Int32, System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: SetFunctionalRightsAsync(Int32, Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.IUserAgent.SetDataRightAsync(System.Int32,System.String,SuperOffice.WebApi.Data.RoleRelationToOwner,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.SetDataRightAsync(System.Int32,System.String,SuperOffice.WebApi.Data.RoleRelationToOwner,System.String,SuperOffice.WebApi.RequestOptions)
  id: SetDataRightAsync(System.Int32,System.String,SuperOffice.WebApi.Data.RoleRelationToOwner,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: SetDataRightAsync(Int32, String, RoleRelationToOwner, String, RequestOptions)
  nameWithType: IUserAgent.SetDataRightAsync(Int32, String, RoleRelationToOwner, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.SetDataRightAsync(System.Int32, System.String, SuperOffice.WebApi.Data.RoleRelationToOwner, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet one specific data right at the given position. An exception will be thrown if non existing position is specified.\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task SetDataRightAsync(int roleId, string tableName, RoleRelationToOwner relationToOwner, string dataRightValue, RequestOptions requestOptions = null)
    parameters:
    - id: roleId
      type: System.Int32
      description: The role id to set the data right for
    - id: tableName
      type: System.String
      description: The name of the entity/table
    - id: relationToOwner
      type: SuperOffice.WebApi.Data.RoleRelationToOwner
      description: The id of the relation to owner
    - id: dataRightValue
      type: System.String
      description: The data right value to set at the specified position (CRUD)
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function SetDataRightAsync(roleId As Integer, tableName As String, relationToOwner As RoleRelationToOwner, dataRightValue As String, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IUserAgent.SetDataRightAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetDataRightAsync(System.Int32,System.String,SuperOffice.WebApi.Data.RoleRelationToOwner,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.GetDataRightAsync(System.Int32,System.String,SuperOffice.WebApi.Data.RoleRelationToOwner,SuperOffice.WebApi.RequestOptions)
  id: GetDataRightAsync(System.Int32,System.String,SuperOffice.WebApi.Data.RoleRelationToOwner,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: GetDataRightAsync(Int32, String, RoleRelationToOwner, RequestOptions)
  nameWithType: IUserAgent.GetDataRightAsync(Int32, String, RoleRelationToOwner, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetDataRightAsync(System.Int32, System.String, SuperOffice.WebApi.Data.RoleRelationToOwner, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nRead one specific data right at the given position. An exception will be thrown if non existing position is specified.\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<string> GetDataRightAsync(int roleId, string tableName, RoleRelationToOwner relationToOwner, RequestOptions requestOptions = null)
    parameters:
    - id: roleId
      type: System.Int32
      description: The role id to set the data right for
    - id: tableName
      type: System.String
      description: The name of the entity/table
    - id: relationToOwner
      type: SuperOffice.WebApi.Data.RoleRelationToOwner
      description: The id of the relation to owner
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The data right value at the specified position (C, CR, CRU, or CRUD)
    content.vb: Function GetDataRightAsync(roleId As Integer, tableName As String, relationToOwner As RoleRelationToOwner, requestOptions As RequestOptions = Nothing) As Task(Of String)
  overload: SuperOffice.WebApi.Agents.IUserAgent.GetDataRightAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetDataRightsAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.GetDataRightsAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetDataRightsAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: GetDataRightsAsync(Int32, String, RequestOptions)
  nameWithType: IUserAgent.GetDataRightsAsync(Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetDataRightsAsync(System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nRead specific a set of data rights at the given row in the rights matrix. An exception will be thrown if non existing position is specified.\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<StringDictionary> GetDataRightsAsync(int roleId, string tableName, RequestOptions requestOptions = null)
    parameters:
    - id: roleId
      type: System.Int32
      description: The role id to set the data right for
    - id: tableName
      type: System.String
      description: The name of the entity/table
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.StringDictionary}
      description: The data right values for all the defined relationships (C, CR, CRU, or CRUD)
    content.vb: Function GetDataRightsAsync(roleId As Integer, tableName As String, requestOptions As RequestOptions = Nothing) As Task(Of StringDictionary)
  overload: SuperOffice.WebApi.Agents.IUserAgent.GetDataRightsAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultRoleEntityFromTypeAsync(SuperOffice.WebApi.Data.RoleType,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultRoleEntityFromTypeAsync(SuperOffice.WebApi.Data.RoleType,SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultRoleEntityFromTypeAsync(SuperOffice.WebApi.Data.RoleType,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultRoleEntityFromTypeAsync(RoleType, RequestOptions)
  nameWithType: IUserAgent.CreateDefaultRoleEntityFromTypeAsync(RoleType, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultRoleEntityFromTypeAsync(SuperOffice.WebApi.Data.RoleType, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCreate a new role entity of the specified role type. The role type cannot be changed after the entity is created.\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<RoleEntity> CreateDefaultRoleEntityFromTypeAsync(RoleType type, RequestOptions requestOptions = null)
    parameters:
    - id: type
      type: SuperOffice.WebApi.Data.RoleType
      description: Type of role (Employee/External/Anonymous/System)
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.RoleEntity}
      description: A blank role.
    content.vb: Function CreateDefaultRoleEntityFromTypeAsync(type As RoleType, requestOptions As RequestOptions = Nothing) As Task(Of RoleEntity)
  overload: SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultRoleEntityFromTypeAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.FindRolesWithFunctionalRightAsync(System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.FindRolesWithFunctionalRightAsync(System.String,SuperOffice.WebApi.RequestOptions)
  id: FindRolesWithFunctionalRightAsync(System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: FindRolesWithFunctionalRightAsync(String, RequestOptions)
  nameWithType: IUserAgent.FindRolesWithFunctionalRightAsync(String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.FindRolesWithFunctionalRightAsync(System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nFind all roles with a given functional right. The roles matched must contain the specified functional right. \n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<MDOListItem[]> FindRolesWithFunctionalRightAsync(string functionalRightName, RequestOptions requestOptions = null)
    parameters:
    - id: functionalRightName
      type: System.String
      description: Functional right name to search for
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.MDOListItem[]}
      description: Roles that contains the given functional right
    content.vb: Function FindRolesWithFunctionalRightAsync(functionalRightName As String, requestOptions As RequestOptions = Nothing) As Task(Of MDOListItem())
  overload: SuperOffice.WebApi.Agents.IUserAgent.FindRolesWithFunctionalRightAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.FindRolesWithFunctionalRightsAsync(System.String[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.FindRolesWithFunctionalRightsAsync(System.String[],SuperOffice.WebApi.RequestOptions)
  id: FindRolesWithFunctionalRightsAsync(System.String[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: FindRolesWithFunctionalRightsAsync(String[], RequestOptions)
  nameWithType: IUserAgent.FindRolesWithFunctionalRightsAsync(String[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.FindRolesWithFunctionalRightsAsync(System.String[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nFind all roles with a given set of functional rights. The roles matched must contain one or more of the specified functional rights. \n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<int[]> FindRolesWithFunctionalRightsAsync(string[] functionalRightNames, RequestOptions requestOptions = null)
    parameters:
    - id: functionalRightNames
      type: System.String[]
      description: An array of functional rights names to search for
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Int32[]}
      description: Role ids that contains your functional rights
    content.vb: Function FindRolesWithFunctionalRightsAsync(functionalRightNames As String(), requestOptions As RequestOptions = Nothing) As Task(Of Integer())
  overload: SuperOffice.WebApi.Agents.IUserAgent.FindRolesWithFunctionalRightsAsync*
  nameWithType.vb: IUserAgent.FindRolesWithFunctionalRightsAsync(String(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IUserAgent.FindRolesWithFunctionalRightsAsync(System.String(), SuperOffice.WebApi.RequestOptions)
  name.vb: FindRolesWithFunctionalRightsAsync(String(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.IUserAgent.FindRolesWithoutFunctionalRightsAsync(System.String[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.FindRolesWithoutFunctionalRightsAsync(System.String[],SuperOffice.WebApi.RequestOptions)
  id: FindRolesWithoutFunctionalRightsAsync(System.String[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: FindRolesWithoutFunctionalRightsAsync(String[], RequestOptions)
  nameWithType: IUserAgent.FindRolesWithoutFunctionalRightsAsync(String[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.FindRolesWithoutFunctionalRightsAsync(System.String[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nFind all roles without a given set of functional rights. The roles matched must not contain any of the specified functional rights. \n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<int[]> FindRolesWithoutFunctionalRightsAsync(string[] functionalRightNames, RequestOptions requestOptions = null)
    parameters:
    - id: functionalRightNames
      type: System.String[]
      description: An array of functional rights names to search for
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Int32[]}
      description: Role ids that without your functional rights
    content.vb: Function FindRolesWithoutFunctionalRightsAsync(functionalRightNames As String(), requestOptions As RequestOptions = Nothing) As Task(Of Integer())
  overload: SuperOffice.WebApi.Agents.IUserAgent.FindRolesWithoutFunctionalRightsAsync*
  nameWithType.vb: IUserAgent.FindRolesWithoutFunctionalRightsAsync(String(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IUserAgent.FindRolesWithoutFunctionalRightsAsync(System.String(), SuperOffice.WebApi.RequestOptions)
  name.vb: FindRolesWithoutFunctionalRightsAsync(String(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetServiceAuthAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.GetServiceAuthAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetServiceAuthAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: GetServiceAuthAsync(Int32, RequestOptions)
  nameWithType: IUserAgent.GetServiceAuthAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetServiceAuthAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific ServiceAuth object.                        \n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<ServiceAuth> GetServiceAuthAsync(int serviceAuthId, RequestOptions requestOptions = null)
    parameters:
    - id: serviceAuthId
      type: System.Int32
      description: The identifier of the ServiceAuth object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ServiceAuth}
      description: ServiceAuth
    content.vb: Function GetServiceAuthAsync(serviceAuthId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of ServiceAuth)
  overload: SuperOffice.WebApi.Agents.IUserAgent.GetServiceAuthAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.SaveExternalTokensAsync(SuperOffice.WebApi.Data.TokenManagementInfo,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.SaveExternalTokensAsync(SuperOffice.WebApi.Data.TokenManagementInfo,SuperOffice.WebApi.RequestOptions)
  id: SaveExternalTokensAsync(SuperOffice.WebApi.Data.TokenManagementInfo,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: SaveExternalTokensAsync(TokenManagementInfo, RequestOptions)
  nameWithType: IUserAgent.SaveExternalTokensAsync(TokenManagementInfo, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.SaveExternalTokensAsync(SuperOffice.WebApi.Data.TokenManagementInfo, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSaves the external tokens to the DB and returns a key that can be used to retrieve them\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<string> SaveExternalTokensAsync(TokenManagementInfo tokenManagementInfo, RequestOptions requestOptions = null)
    parameters:
    - id: tokenManagementInfo
      type: SuperOffice.WebApi.Data.TokenManagementInfo
      description: Token information.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Key that can be used to retrieve the tokens
    content.vb: Function SaveExternalTokensAsync(tokenManagementInfo As TokenManagementInfo, requestOptions As RequestOptions = Nothing) As Task(Of String)
  overload: SuperOffice.WebApi.Agents.IUserAgent.SaveExternalTokensAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.DecryptAndSaveExternalTokensAsync(SuperOffice.WebApi.Data.TokenManagementInfo,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.DecryptAndSaveExternalTokensAsync(SuperOffice.WebApi.Data.TokenManagementInfo,SuperOffice.WebApi.RequestOptions)
  id: DecryptAndSaveExternalTokensAsync(SuperOffice.WebApi.Data.TokenManagementInfo,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: DecryptAndSaveExternalTokensAsync(TokenManagementInfo, RequestOptions)
  nameWithType: IUserAgent.DecryptAndSaveExternalTokensAsync(TokenManagementInfo, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.DecryptAndSaveExternalTokensAsync(SuperOffice.WebApi.Data.TokenManagementInfo, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nFirst asks AccessGateway to decrypt the tokens, then saves the external tokens to the DB and returns a key that can be used to retrieve them\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<string> DecryptAndSaveExternalTokensAsync(TokenManagementInfo tokenManagementInfo, RequestOptions requestOptions = null)
    parameters:
    - id: tokenManagementInfo
      type: SuperOffice.WebApi.Data.TokenManagementInfo
      description: Token information.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Key that can be used to retrieve the tokens
    content.vb: Function DecryptAndSaveExternalTokensAsync(tokenManagementInfo As TokenManagementInfo, requestOptions As RequestOptions = Nothing) As Task(Of String)
  overload: SuperOffice.WebApi.Agents.IUserAgent.DecryptAndSaveExternalTokensAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetExternalTokensAsync(System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.GetExternalTokensAsync(System.String,SuperOffice.WebApi.RequestOptions)
  id: GetExternalTokensAsync(System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: GetExternalTokensAsync(String, RequestOptions)
  nameWithType: IUserAgent.GetExternalTokensAsync(String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetExternalTokensAsync(System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nRetrieve the tokens from the DB based on the given key\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<TokenManagementInfo> GetExternalTokensAsync(string key, RequestOptions requestOptions = null)
    parameters:
    - id: key
      type: System.String
      description: Token retrievel key
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TokenManagementInfo}
      description: Key to retrieve tokens
    content.vb: Function GetExternalTokensAsync(key As String, requestOptions As RequestOptions = Nothing) As Task(Of TokenManagementInfo)
  overload: SuperOffice.WebApi.Agents.IUserAgent.GetExternalTokensAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetUserAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.GetUserAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetUserAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: GetUserAsync(Int32, RequestOptions)
  nameWithType: IUserAgent.GetUserAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetUserAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific User object.                        \n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<User> GetUserAsync(int userId, RequestOptions requestOptions = null)
    parameters:
    - id: userId
      type: System.Int32
      description: The identifier of the User object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.User}
      description: User
    content.vb: Function GetUserAsync(userId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of User)
  overload: SuperOffice.WebApi.Agents.IUserAgent.GetUserAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetUserFromNameAsync(System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.GetUserFromNameAsync(System.String,SuperOffice.WebApi.RequestOptions)
  id: GetUserFromNameAsync(System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: GetUserFromNameAsync(String, RequestOptions)
  nameWithType: IUserAgent.GetUserFromNameAsync(String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetUserFromNameAsync(System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet a user, with lookup based on user name.\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<User> GetUserFromNameAsync(string userName, RequestOptions requestOptions = null)
    parameters:
    - id: userName
      type: System.String
      description: User name of the user to get.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.User}
      description: User retrieved by name
    content.vb: Function GetUserFromNameAsync(userName As String, requestOptions As RequestOptions = Nothing) As Task(Of User)
  overload: SuperOffice.WebApi.Agents.IUserAgent.GetUserFromNameAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.SaveUserFromNameAsync(System.String,SuperOffice.WebApi.Data.User,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.SaveUserFromNameAsync(System.String,SuperOffice.WebApi.Data.User,SuperOffice.WebApi.RequestOptions)
  id: SaveUserFromNameAsync(System.String,SuperOffice.WebApi.Data.User,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: SaveUserFromNameAsync(String, User, RequestOptions)
  nameWithType: IUserAgent.SaveUserFromNameAsync(String, User, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.SaveUserFromNameAsync(System.String, SuperOffice.WebApi.Data.User, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSave a user, with lookup based on the user name.\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<User> SaveUserFromNameAsync(string userName, User user, RequestOptions requestOptions = null)
    parameters:
    - id: userName
      type: System.String
      description: User name of the user to get.
    - id: user
      type: SuperOffice.WebApi.Data.User
      description: User object to save.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.User}
      description: User retrieved by name
    content.vb: Function SaveUserFromNameAsync(userName As String, user As User, requestOptions As RequestOptions = Nothing) As Task(Of User)
  overload: SuperOffice.WebApi.Agents.IUserAgent.SaveUserFromNameAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.DeleteUserFromNameAsync(System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.DeleteUserFromNameAsync(System.String,SuperOffice.WebApi.RequestOptions)
  id: DeleteUserFromNameAsync(System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: DeleteUserFromNameAsync(String, RequestOptions)
  nameWithType: IUserAgent.DeleteUserFromNameAsync(String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.DeleteUserFromNameAsync(System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nDelete a user, with lookup based on the user name.\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task DeleteUserFromNameAsync(string userName, RequestOptions requestOptions = null)
    parameters:
    - id: userName
      type: System.String
      description: User name of the user to delete.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Function DeleteUserFromNameAsync(userName As String, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IUserAgent.DeleteUserFromNameAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetCredentialTypesAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.GetCredentialTypesAsync(SuperOffice.WebApi.RequestOptions)
  id: GetCredentialTypesAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: GetCredentialTypesAsync(RequestOptions)
  nameWithType: IUserAgent.GetCredentialTypesAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetCredentialTypesAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet available credential types that can be used for authentication\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<CredentialType[]> GetCredentialTypesAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.CredentialType[]}
      description: Credential types that can be used for authentication
    content.vb: Function GetCredentialTypesAsync(requestOptions As RequestOptions = Nothing) As Task(Of CredentialType())
  overload: SuperOffice.WebApi.Agents.IUserAgent.GetCredentialTypesAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetCredentialTypesForUserTypeAsync(SuperOffice.WebApi.Data.UserType,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.GetCredentialTypesForUserTypeAsync(SuperOffice.WebApi.Data.UserType,SuperOffice.WebApi.RequestOptions)
  id: GetCredentialTypesForUserTypeAsync(SuperOffice.WebApi.Data.UserType,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: GetCredentialTypesForUserTypeAsync(UserType, RequestOptions)
  nameWithType: IUserAgent.GetCredentialTypesForUserTypeAsync(UserType, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetCredentialTypesForUserTypeAsync(SuperOffice.WebApi.Data.UserType, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet available credential types that can be used for the specified user type.\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<CredentialType[]> GetCredentialTypesForUserTypeAsync(UserType userType, RequestOptions requestOptions = null)
    parameters:
    - id: userType
      type: SuperOffice.WebApi.Data.UserType
      description: The user type to retrieve credential types for
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.CredentialType[]}
      description: Credential types that can be used for authentication
    content.vb: Function GetCredentialTypesForUserTypeAsync(userType As UserType, requestOptions As RequestOptions = Nothing) As Task(Of CredentialType())
  overload: SuperOffice.WebApi.Agents.IUserAgent.GetCredentialTypesForUserTypeAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.SaveUntrustedCredentialsAsync(System.String,SuperOffice.WebApi.Data.UntrustedCredentials,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.SaveUntrustedCredentialsAsync(System.String,SuperOffice.WebApi.Data.UntrustedCredentials,SuperOffice.WebApi.RequestOptions)
  id: SaveUntrustedCredentialsAsync(System.String,SuperOffice.WebApi.Data.UntrustedCredentials,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: SaveUntrustedCredentialsAsync(String, UntrustedCredentials, RequestOptions)
  nameWithType: IUserAgent.SaveUntrustedCredentialsAsync(String, UntrustedCredentials, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.SaveUntrustedCredentialsAsync(System.String, SuperOffice.WebApi.Data.UntrustedCredentials, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSave credentials for authenticated user.\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task SaveUntrustedCredentialsAsync(string type, UntrustedCredentials credentials, RequestOptions requestOptions = null)
    parameters:
    - id: type
      type: System.String
      description: 'Type of credential(Ex: &quot;imap&quot;, &quot;smtp&quot;)'
    - id: credentials
      type: SuperOffice.WebApi.Data.UntrustedCredentials
      description: Credentials to save.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function SaveUntrustedCredentialsAsync(type As String, credentials As UntrustedCredentials, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IUserAgent.SaveUntrustedCredentialsAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetUntrustedCredentialsAsync(System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.GetUntrustedCredentialsAsync(System.String,SuperOffice.WebApi.RequestOptions)
  id: GetUntrustedCredentialsAsync(System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: GetUntrustedCredentialsAsync(String, RequestOptions)
  nameWithType: IUserAgent.GetUntrustedCredentialsAsync(String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetUntrustedCredentialsAsync(System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet a set of credentials of a specified type for authenticated user.\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<UntrustedCredentials[]> GetUntrustedCredentialsAsync(string type, RequestOptions requestOptions = null)
    parameters:
    - id: type
      type: System.String
      description: 'Type of credential(Ex: &quot;imap&quot;, &quot;smtp&quot;).'
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.UntrustedCredentials[]}
      description: Array of credentials of the specified type.
    content.vb: Function GetUntrustedCredentialsAsync(type As String, requestOptions As RequestOptions = Nothing) As Task(Of UntrustedCredentials())
  overload: SuperOffice.WebApi.Agents.IUserAgent.GetUntrustedCredentialsAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetUntrustedCredentialsForAssociateAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.GetUntrustedCredentialsForAssociateAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetUntrustedCredentialsForAssociateAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: GetUntrustedCredentialsForAssociateAsync(Int32, String, RequestOptions)
  nameWithType: IUserAgent.GetUntrustedCredentialsForAssociateAsync(Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetUntrustedCredentialsForAssociateAsync(System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet a set of credentials of a specified type for a specified user. SecretValue is only populated for authenticated user, and system users.\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<UntrustedCredentials[]> GetUntrustedCredentialsForAssociateAsync(int associateId, string type, RequestOptions requestOptions = null)
    parameters:
    - id: associateId
      type: System.Int32
      description: Id of user to retrieve credentials for.
    - id: type
      type: System.String
      description: 'Type of credential(Ex: &quot;imap&quot;, &quot;smtp&quot;).'
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.UntrustedCredentials[]}
      description: Array of credentials of the specified type.
    content.vb: Function GetUntrustedCredentialsForAssociateAsync(associateId As Integer, type As String, requestOptions As RequestOptions = Nothing) As Task(Of UntrustedCredentials())
  overload: SuperOffice.WebApi.Agents.IUserAgent.GetUntrustedCredentialsForAssociateAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.SaveUntrustedCredentialsForAssociateAsync(System.Int32,System.String,SuperOffice.WebApi.Data.UntrustedCredentials,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.SaveUntrustedCredentialsForAssociateAsync(System.Int32,System.String,SuperOffice.WebApi.Data.UntrustedCredentials,SuperOffice.WebApi.RequestOptions)
  id: SaveUntrustedCredentialsForAssociateAsync(System.Int32,System.String,SuperOffice.WebApi.Data.UntrustedCredentials,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: SaveUntrustedCredentialsForAssociateAsync(Int32, String, UntrustedCredentials, RequestOptions)
  nameWithType: IUserAgent.SaveUntrustedCredentialsForAssociateAsync(Int32, String, UntrustedCredentials, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.SaveUntrustedCredentialsForAssociateAsync(System.Int32, System.String, SuperOffice.WebApi.Data.UntrustedCredentials, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSave credentials for a specified user.\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task SaveUntrustedCredentialsForAssociateAsync(int associateId, string type, UntrustedCredentials credentials, RequestOptions requestOptions = null)
    parameters:
    - id: associateId
      type: System.Int32
      description: Id of user to save credentials for.
    - id: type
      type: System.String
      description: 'Type of credential(Ex: &quot;imap&quot;, &quot;smtp&quot;)'
    - id: credentials
      type: SuperOffice.WebApi.Data.UntrustedCredentials
      description: Credentials to save.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function SaveUntrustedCredentialsForAssociateAsync(associateId As Integer, type As String, credentials As UntrustedCredentials, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IUserAgent.SaveUntrustedCredentialsForAssociateAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.RemoveUntrustedCredentialsAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.RemoveUntrustedCredentialsAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  id: RemoveUntrustedCredentialsAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: RemoveUntrustedCredentialsAsync(String, String, RequestOptions)
  nameWithType: IUserAgent.RemoveUntrustedCredentialsAsync(String, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.RemoveUntrustedCredentialsAsync(System.String, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nRemove a credentials entry for authenticated user.\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task RemoveUntrustedCredentialsAsync(string type, string publicValue, RequestOptions requestOptions = null)
    parameters:
    - id: type
      type: System.String
      description: 'Type of credential(Ex: &quot;imap&quot;, &quot;smtp&quot;)'
    - id: publicValue
      type: System.String
      description: PublicValue field of credentials to remove.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function RemoveUntrustedCredentialsAsync(type As String, publicValue As String, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IUserAgent.RemoveUntrustedCredentialsAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.RemoveUntrustedCredentialsForAssociateAsync(System.Int32,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.RemoveUntrustedCredentialsForAssociateAsync(System.Int32,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  id: RemoveUntrustedCredentialsForAssociateAsync(System.Int32,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: RemoveUntrustedCredentialsForAssociateAsync(Int32, String, String, RequestOptions)
  nameWithType: IUserAgent.RemoveUntrustedCredentialsForAssociateAsync(Int32, String, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.RemoveUntrustedCredentialsForAssociateAsync(System.Int32, System.String, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nRemove a credentials entry for a specified user.\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task RemoveUntrustedCredentialsForAssociateAsync(int associateId, string type, string publicValue, RequestOptions requestOptions = null)
    parameters:
    - id: associateId
      type: System.Int32
      description: Id of user to remove credentials for.
    - id: type
      type: System.String
      description: 'Type of credential(Ex: &quot;imap&quot;, &quot;smtp&quot;)'
    - id: publicValue
      type: System.String
      description: PublicValue field of credentials to remove.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function RemoveUntrustedCredentialsForAssociateAsync(associateId As Integer, type As String, publicValue As String, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IUserAgent.RemoveUntrustedCredentialsForAssociateAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.CreateExternalUserAsync(System.Int32,System.String,System.String,System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.CreateExternalUserAsync(System.Int32,System.String,System.String,System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: CreateExternalUserAsync(System.Int32,System.String,System.String,System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: CreateExternalUserAsync(Int32, String, String, Int32, Boolean, RequestOptions)
  nameWithType: IUserAgent.CreateExternalUserAsync(Int32, String, String, Int32, Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.CreateExternalUserAsync(System.Int32, System.String, System.String, System.Int32, System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCreates an associate of type external user.\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<int> CreateExternalUserAsync(int personId, string userName, string password, int roleId, bool isActive, RequestOptions requestOptions = null)
    parameters:
    - id: personId
      type: System.Int32
      description: The personId to create an external user for.
    - id: userName
      type: System.String
      description: Login username.
    - id: password
      type: System.String
      description: Login password.
    - id: roleId
      type: System.Int32
      description: Id of role for the external user. The role must be a role of type external users.
    - id: isActive
      type: System.Boolean
      description: Set isActive to true to enable the external user to log in.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: Returns the created associateId.
    content.vb: Function CreateExternalUserAsync(personId As Integer, userName As String, password As String, roleId As Integer, isActive As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of Integer)
  overload: SuperOffice.WebApi.Agents.IUserAgent.CreateExternalUserAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.DeleteExternalUserAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.DeleteExternalUserAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: DeleteExternalUserAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: DeleteExternalUserAsync(Int32, RequestOptions)
  nameWithType: IUserAgent.DeleteExternalUserAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.DeleteExternalUserAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nDeletes an associate of type external user.\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task DeleteExternalUserAsync(int associateId, RequestOptions requestOptions = null)
    parameters:
    - id: associateId
      type: System.Int32
      description: The associateId to delete the associate entry for.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function DeleteExternalUserAsync(associateId As Integer, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IUserAgent.DeleteExternalUserAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.SetExternalUserInfoAsync(System.Int32,System.String,System.String,System.Boolean,System.Int32,SuperOffice.WebApi.Data.ExternalUserInfoModification,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.SetExternalUserInfoAsync(System.Int32,System.String,System.String,System.Boolean,System.Int32,SuperOffice.WebApi.Data.ExternalUserInfoModification,SuperOffice.WebApi.RequestOptions)
  id: SetExternalUserInfoAsync(System.Int32,System.String,System.String,System.Boolean,System.Int32,SuperOffice.WebApi.Data.ExternalUserInfoModification,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: SetExternalUserInfoAsync(Int32, String, String, Boolean, Int32, ExternalUserInfoModification, RequestOptions)
  nameWithType: IUserAgent.SetExternalUserInfoAsync(Int32, String, String, Boolean, Int32, ExternalUserInfoModification, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.SetExternalUserInfoAsync(System.Int32, System.String, System.String, System.Boolean, System.Int32, SuperOffice.WebApi.Data.ExternalUserInfoModification, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nModifies an external user. Changes external users information according to the flags set in  externalUserInfoModification.\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task SetExternalUserInfoAsync(int associateId, string userName, string password, bool isActive, int roleId, ExternalUserInfoModification externalUserInfoModification, RequestOptions requestOptions = null)
    parameters:
    - id: associateId
      type: System.Int32
      description: The associateId to alter.
    - id: userName
      type: System.String
      description: Login username.
    - id: password
      type: System.String
      description: Login password.
    - id: isActive
      type: System.Boolean
      description: Set isActive to true to enable the external user to log in.
    - id: roleId
      type: System.Int32
      description: Id of role for the external user. The role must be a role of type external users.
    - id: externalUserInfoModification
      type: SuperOffice.WebApi.Data.ExternalUserInfoModification
      description: externalUserInfoModification is a flag describing what to change. &lt;see cref=&quot;SuperOffice.CRM.Services.Util.ExternalUserInfoModification&quot;/>.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function SetExternalUserInfoAsync(associateId As Integer, userName As String, password As String, isActive As Boolean, roleId As Integer, externalUserInfoModification As ExternalUserInfoModification, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IUserAgent.SetExternalUserInfoAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.GenerateNewPasswordForExternalUserAsync(System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.GenerateNewPasswordForExternalUserAsync(System.String,SuperOffice.WebApi.RequestOptions)
  id: GenerateNewPasswordForExternalUserAsync(System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: GenerateNewPasswordForExternalUserAsync(String, RequestOptions)
  nameWithType: IUserAgent.GenerateNewPasswordForExternalUserAsync(String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GenerateNewPasswordForExternalUserAsync(System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGenerates a new password for an external user.\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<string> GenerateNewPasswordForExternalUserAsync(string associateName, RequestOptions requestOptions = null)
    parameters:
    - id: associateName
      type: System.String
      description: The name of the associate to change the password for.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Returns the generated password.
    content.vb: Function GenerateNewPasswordForExternalUserAsync(associateName As String, requestOptions As RequestOptions = Nothing) As Task(Of String)
  overload: SuperOffice.WebApi.Agents.IUserAgent.GenerateNewPasswordForExternalUserAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.CanChangePasswordAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.CanChangePasswordAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: CanChangePasswordAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: CanChangePasswordAsync(Int32, RequestOptions)
  nameWithType: IUserAgent.CanChangePasswordAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.CanChangePasswordAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCheck if the current assoicate can change the password for an associate\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<bool> CanChangePasswordAsync(int associateId, RequestOptions requestOptions = null)
    parameters:
    - id: associateId
      type: System.Int32
      description: AssociateId of the user to check if password can be changed
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the associate can change the password
    content.vb: Function CanChangePasswordAsync(associateId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Boolean)
  overload: SuperOffice.WebApi.Agents.IUserAgent.CanChangePasswordAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetSupportedChangePasswordTypesAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.GetSupportedChangePasswordTypesAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetSupportedChangePasswordTypesAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: GetSupportedChangePasswordTypesAsync(Int32, RequestOptions)
  nameWithType: IUserAgent.GetSupportedChangePasswordTypesAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetSupportedChangePasswordTypesAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet the different methods the user can use to change password\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<ChangePasswordType[]> GetSupportedChangePasswordTypesAsync(int associateId, RequestOptions requestOptions = null)
    parameters:
    - id: associateId
      type: System.Int32
      description: AssociateId of the user to check if password can be changed
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ChangePasswordType[]}
      description: List of types - empty if the user cannot change password in any way
    content.vb: Function GetSupportedChangePasswordTypesAsync(associateId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of ChangePasswordType())
  overload: SuperOffice.WebApi.Agents.IUserAgent.GetSupportedChangePasswordTypesAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.ChangePasswordAsync(System.Int32,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.ChangePasswordAsync(System.Int32,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  id: ChangePasswordAsync(System.Int32,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: ChangePasswordAsync(Int32, String, String, RequestOptions)
  nameWithType: IUserAgent.ChangePasswordAsync(Int32, String, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.ChangePasswordAsync(System.Int32, System.String, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nChange password for a user.\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<bool> ChangePasswordAsync(int associateId, string oldPassword, string newPassword, RequestOptions requestOptions = null)
    parameters:
    - id: associateId
      type: System.Int32
      description: AssociateId of the user to change password for.
    - id: oldPassword
      type: System.String
      description: The current password of the user.  Administrators can leave this blank to force a new password upon a user.
    - id: newPassword
      type: System.String
      description: The new password for the user
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the password was successfully changed.
    content.vb: Function ChangePasswordAsync(associateId As Integer, oldPassword As String, newPassword As String, requestOptions As RequestOptions = Nothing) As Task(Of Boolean)
  overload: SuperOffice.WebApi.Agents.IUserAgent.ChangePasswordAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.SendChangePasswordEMailAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.SendChangePasswordEMailAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: SendChangePasswordEMailAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: SendChangePasswordEMailAsync(Int32, RequestOptions)
  nameWithType: IUserAgent.SendChangePasswordEMailAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.SendChangePasswordEMailAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSend a change password email to this users registered address.\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<OperationResult> SendChangePasswordEMailAsync(int associateId, RequestOptions requestOptions = null)
    parameters:
    - id: associateId
      type: System.Int32
      description: AssociateId of the user to change password for.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.OperationResult}
      description: Result - with result flag and optional error reason.
    content.vb: Function SendChangePasswordEMailAsync(associateId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of OperationResult)
  overload: SuperOffice.WebApi.Agents.IUserAgent.SendChangePasswordEMailAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetUserFromPersonIdAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.GetUserFromPersonIdAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetUserFromPersonIdAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: GetUserFromPersonIdAsync(Int32, RequestOptions)
  nameWithType: IUserAgent.GetUserFromPersonIdAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetUserFromPersonIdAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns the user associated with the supplied person id\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<User[]> GetUserFromPersonIdAsync(int personId, RequestOptions requestOptions = null)
    parameters:
    - id: personId
      type: System.Int32
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.User[]}
    content.vb: Function GetUserFromPersonIdAsync(personId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of User())
  overload: SuperOffice.WebApi.Agents.IUserAgent.GetUserFromPersonIdAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultUserFromUserTypeAndPersonIdAsync(SuperOffice.WebApi.Data.UserType,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultUserFromUserTypeAndPersonIdAsync(SuperOffice.WebApi.Data.UserType,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultUserFromUserTypeAndPersonIdAsync(SuperOffice.WebApi.Data.UserType,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultUserFromUserTypeAndPersonIdAsync(UserType, Int32, RequestOptions)
  nameWithType: IUserAgent.CreateDefaultUserFromUserTypeAndPersonIdAsync(UserType, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultUserFromUserTypeAndPersonIdAsync(SuperOffice.WebApi.Data.UserType, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCreate default User providing the associate type and person id.  System and Anonymous users can be created without an exsisting person and permits person id to be 0.\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<User> CreateDefaultUserFromUserTypeAndPersonIdAsync(UserType userType, int personId, RequestOptions requestOptions = null)
    parameters:
    - id: userType
      type: SuperOffice.WebApi.Data.UserType
      description: Type of associate for the user
    - id: personId
      type: System.Int32
      description: Primary key of the person to become a user.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.User}
      description: New user object with defalt values set.
    content.vb: Function CreateDefaultUserFromUserTypeAndPersonIdAsync(userType As UserType, personId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of User)
  overload: SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultUserFromUserTypeAndPersonIdAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultUserFromUserTypeAsync(SuperOffice.WebApi.Data.UserType,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultUserFromUserTypeAsync(SuperOffice.WebApi.Data.UserType,SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultUserFromUserTypeAsync(SuperOffice.WebApi.Data.UserType,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultUserFromUserTypeAsync(UserType, RequestOptions)
  nameWithType: IUserAgent.CreateDefaultUserFromUserTypeAsync(UserType, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultUserFromUserTypeAsync(SuperOffice.WebApi.Data.UserType, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCreate default User providing the user type.  Only System and Anonymous users can be created without an exsisting person.  Use CreateDefaultUserFromUserTypeAndPersonId to create internal (i.e. Employee) or external users.\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<User> CreateDefaultUserFromUserTypeAsync(UserType userType, RequestOptions requestOptions = null)
    parameters:
    - id: userType
      type: SuperOffice.WebApi.Data.UserType
      description: Type of associate for the user.  This can only be System or Anonymous. Use CreateDefaultUserFromUserTypeAndPersonId to create internal (i.e. Employee) or external users.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.User}
      description: New user object with defalt values set.
    content.vb: Function CreateDefaultUserFromUserTypeAsync(userType As UserType, requestOptions As RequestOptions = Nothing) As Task(Of User)
  overload: SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultUserFromUserTypeAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetUserFromEjUserIdAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.GetUserFromEjUserIdAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetUserFromEjUserIdAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: GetUserFromEjUserIdAsync(Int32, RequestOptions)
  nameWithType: IUserAgent.GetUserFromEjUserIdAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetUserFromEjUserIdAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet user from ejUserId - used for eJournal Legacy Support.\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<User[]> GetUserFromEjUserIdAsync(int ejUserId, RequestOptions requestOptions = null)
    parameters:
    - id: ejUserId
      type: System.Int32
      description: 'ejUserId - '
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.User[]}
    content.vb: Function GetUserFromEjUserIdAsync(ejUserId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of User())
  overload: SuperOffice.WebApi.Agents.IUserAgent.GetUserFromEjUserIdAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.SetPasswordFromNameAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.SetPasswordFromNameAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  id: SetPasswordFromNameAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: SetPasswordFromNameAsync(String, String, RequestOptions)
  nameWithType: IUserAgent.SetPasswordFromNameAsync(String, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.SetPasswordFromNameAsync(System.String, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nChange password for a user.\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<bool> SetPasswordFromNameAsync(string associateName, string password, RequestOptions requestOptions = null)
    parameters:
    - id: associateName
      type: System.String
      description: Username to set password for
    - id: password
      type: System.String
      description: New password
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: Succeeded?
    content.vb: Function SetPasswordFromNameAsync(associateName As String, password As String, requestOptions As RequestOptions = Nothing) As Task(Of Boolean)
  overload: SuperOffice.WebApi.Agents.IUserAgent.SetPasswordFromNameAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.SetPasswordAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.SetPasswordAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: SetPasswordAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: SetPasswordAsync(Int32, String, RequestOptions)
  nameWithType: IUserAgent.SetPasswordAsync(Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.SetPasswordAsync(System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nChange password for a user.\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<bool> SetPasswordAsync(int associateId, string password, RequestOptions requestOptions = null)
    parameters:
    - id: associateId
      type: System.Int32
      description: Id of User to set password for
    - id: password
      type: System.String
      description: New password
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: Succeeded?
    content.vb: Function SetPasswordAsync(associateId As Integer, password As String, requestOptions As RequestOptions = Nothing) As Task(Of Boolean)
  overload: SuperOffice.WebApi.Agents.IUserAgent.SetPasswordAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.ChangeOwnPasswordAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.ChangeOwnPasswordAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  id: ChangeOwnPasswordAsync(System.String,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: ChangeOwnPasswordAsync(String, String, RequestOptions)
  nameWithType: IUserAgent.ChangeOwnPasswordAsync(String, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.ChangeOwnPasswordAsync(System.String, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nChange password for a user.\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<bool> ChangeOwnPasswordAsync(string oldPassword, string newPassword, RequestOptions requestOptions = null)
    parameters:
    - id: oldPassword
      type: System.String
      description: The current password of the user.  Administrators can leave this blank to force a new password upon a user.
    - id: newPassword
      type: System.String
      description: The new password for the user
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the password was successfully changed.
    content.vb: Function ChangeOwnPasswordAsync(oldPassword As String, newPassword As String, requestOptions As RequestOptions = Nothing) As Task(Of Boolean)
  overload: SuperOffice.WebApi.Agents.IUserAgent.ChangeOwnPasswordAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.ChangePasswordFromNameAsync(System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.ChangePasswordFromNameAsync(System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  id: ChangePasswordFromNameAsync(System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: ChangePasswordFromNameAsync(String, String, String, RequestOptions)
  nameWithType: IUserAgent.ChangePasswordFromNameAsync(String, String, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.ChangePasswordFromNameAsync(System.String, System.String, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nChange password for a user.\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<bool> ChangePasswordFromNameAsync(string associateName, string oldPassword, string newPassword, RequestOptions requestOptions = null)
    parameters:
    - id: associateName
      type: System.String
      description: Username of the user to change password for.
    - id: oldPassword
      type: System.String
      description: The current password of the user.  Administrators can leave this blank to force a new password upon a user.
    - id: newPassword
      type: System.String
      description: The new password for the user
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the password was successfully changed.
    content.vb: Function ChangePasswordFromNameAsync(associateName As String, oldPassword As String, newPassword As String, requestOptions As RequestOptions = Nothing) As Task(Of Boolean)
  overload: SuperOffice.WebApi.Agents.IUserAgent.ChangePasswordFromNameAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.IsUserNameValidAsync(System.Int32,SuperOffice.WebApi.Data.UserType,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.IsUserNameValidAsync(System.Int32,SuperOffice.WebApi.Data.UserType,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: IsUserNameValidAsync(System.Int32,SuperOffice.WebApi.Data.UserType,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: IsUserNameValidAsync(Int32, UserType, Int32, String, RequestOptions)
  nameWithType: IUserAgent.IsUserNameValidAsync(Int32, UserType, Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.IsUserNameValidAsync(System.Int32, SuperOffice.WebApi.Data.UserType, System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\n\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<bool> IsUserNameValidAsync(int associateId, UserType type, int personId, string userName, RequestOptions requestOptions = null)
    parameters:
    - id: associateId
      type: System.Int32
    - id: type
      type: SuperOffice.WebApi.Data.UserType
    - id: personId
      type: System.Int32
    - id: userName
      type: System.String
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Function IsUserNameValidAsync(associateId As Integer, type As UserType, personId As Integer, userName As String, requestOptions As RequestOptions = Nothing) As Task(Of Boolean)
  overload: SuperOffice.WebApi.Agents.IUserAgent.IsUserNameValidAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.IsPasswordValidAsync(System.Int32,SuperOffice.WebApi.Data.UserType,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.IsPasswordValidAsync(System.Int32,SuperOffice.WebApi.Data.UserType,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: IsPasswordValidAsync(System.Int32,SuperOffice.WebApi.Data.UserType,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: IsPasswordValidAsync(Int32, UserType, Int32, String, RequestOptions)
  nameWithType: IUserAgent.IsPasswordValidAsync(Int32, UserType, Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.IsPasswordValidAsync(System.Int32, SuperOffice.WebApi.Data.UserType, System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\n\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<bool> IsPasswordValidAsync(int associateId, UserType type, int personId, string password, RequestOptions requestOptions = null)
    parameters:
    - id: associateId
      type: System.Int32
    - id: type
      type: SuperOffice.WebApi.Data.UserType
    - id: personId
      type: System.Int32
    - id: password
      type: System.String
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Function IsPasswordValidAsync(associateId As Integer, type As UserType, personId As Integer, password As String, requestOptions As RequestOptions = Nothing) As Task(Of Boolean)
  overload: SuperOffice.WebApi.Agents.IUserAgent.IsPasswordValidAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.SetGeneratedPasswordAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.SetGeneratedPasswordAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: SetGeneratedPasswordAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: SetGeneratedPasswordAsync(Int32, RequestOptions)
  nameWithType: IUserAgent.SetGeneratedPasswordAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.SetGeneratedPasswordAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\n\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<string> SetGeneratedPasswordAsync(int associateId, RequestOptions requestOptions = null)
    parameters:
    - id: associateId
      type: System.Int32
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.String}
    content.vb: Function SetGeneratedPasswordAsync(associateId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of String)
  overload: SuperOffice.WebApi.Agents.IUserAgent.SetGeneratedPasswordAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.SetGeneratedPasswordFromNameAsync(System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.SetGeneratedPasswordFromNameAsync(System.String,SuperOffice.WebApi.RequestOptions)
  id: SetGeneratedPasswordFromNameAsync(System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: SetGeneratedPasswordFromNameAsync(String, RequestOptions)
  nameWithType: IUserAgent.SetGeneratedPasswordFromNameAsync(String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.SetGeneratedPasswordFromNameAsync(System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\n\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<string> SetGeneratedPasswordFromNameAsync(string associateName, RequestOptions requestOptions = null)
    parameters:
    - id: associateName
      type: System.String
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.String}
    content.vb: Function SetGeneratedPasswordFromNameAsync(associateName As String, requestOptions As RequestOptions = Nothing) As Task(Of String)
  overload: SuperOffice.WebApi.Agents.IUserAgent.SetGeneratedPasswordFromNameAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.IsPasswordValidWithReasonAsync(System.Int32,SuperOffice.WebApi.Data.UserType,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.IsPasswordValidWithReasonAsync(System.Int32,SuperOffice.WebApi.Data.UserType,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: IsPasswordValidWithReasonAsync(System.Int32,SuperOffice.WebApi.Data.UserType,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: IsPasswordValidWithReasonAsync(Int32, UserType, Int32, String, RequestOptions)
  nameWithType: IUserAgent.IsPasswordValidWithReasonAsync(Int32, UserType, Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.IsPasswordValidWithReasonAsync(System.Int32, SuperOffice.WebApi.Data.UserType, System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\n\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<UserValidationResult> IsPasswordValidWithReasonAsync(int associateId, UserType type, int personId, string password, RequestOptions requestOptions = null)
    parameters:
    - id: associateId
      type: System.Int32
    - id: type
      type: SuperOffice.WebApi.Data.UserType
    - id: personId
      type: System.Int32
    - id: password
      type: System.String
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.UserValidationResult}
    content.vb: Function IsPasswordValidWithReasonAsync(associateId As Integer, type As UserType, personId As Integer, password As String, requestOptions As RequestOptions = Nothing) As Task(Of UserValidationResult)
  overload: SuperOffice.WebApi.Agents.IUserAgent.IsPasswordValidWithReasonAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.IsUserNameValidWithReasonAsync(System.Int32,SuperOffice.WebApi.Data.UserType,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.IsUserNameValidWithReasonAsync(System.Int32,SuperOffice.WebApi.Data.UserType,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: IsUserNameValidWithReasonAsync(System.Int32,SuperOffice.WebApi.Data.UserType,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: IsUserNameValidWithReasonAsync(Int32, UserType, Int32, String, RequestOptions)
  nameWithType: IUserAgent.IsUserNameValidWithReasonAsync(Int32, UserType, Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.IsUserNameValidWithReasonAsync(System.Int32, SuperOffice.WebApi.Data.UserType, System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\n\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<UserValidationResult> IsUserNameValidWithReasonAsync(int associateId, UserType type, int personId, string userName, RequestOptions requestOptions = null)
    parameters:
    - id: associateId
      type: System.Int32
    - id: type
      type: SuperOffice.WebApi.Data.UserType
    - id: personId
      type: System.Int32
    - id: userName
      type: System.String
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.UserValidationResult}
    content.vb: Function IsUserNameValidWithReasonAsync(associateId As Integer, type As UserType, personId As Integer, userName As String, requestOptions As RequestOptions = Nothing) As Task(Of UserValidationResult)
  overload: SuperOffice.WebApi.Agents.IUserAgent.IsUserNameValidWithReasonAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.ChangeUserTypeAsync(SuperOffice.WebApi.Data.User,SuperOffice.WebApi.Data.UserType,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.ChangeUserTypeAsync(SuperOffice.WebApi.Data.User,SuperOffice.WebApi.Data.UserType,SuperOffice.WebApi.RequestOptions)
  id: ChangeUserTypeAsync(SuperOffice.WebApi.Data.User,SuperOffice.WebApi.Data.UserType,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: ChangeUserTypeAsync(User, UserType, RequestOptions)
  nameWithType: IUserAgent.ChangeUserTypeAsync(User, UserType, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.ChangeUserTypeAsync(SuperOffice.WebApi.Data.User, SuperOffice.WebApi.Data.UserType, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet a user from the user name.\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<User> ChangeUserTypeAsync(User user, UserType userType, RequestOptions requestOptions = null)
    parameters:
    - id: user
      type: SuperOffice.WebApi.Data.User
      description: User name of the user to get.
    - id: userType
      type: SuperOffice.WebApi.Data.UserType
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.User}
      description: User retrieved by name
    content.vb: Function ChangeUserTypeAsync(user As User, userType As UserType, requestOptions As RequestOptions = Nothing) As Task(Of User)
  overload: SuperOffice.WebApi.Agents.IUserAgent.ChangeUserTypeAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultUserFromUserTypeAndCredentialAsync(SuperOffice.WebApi.Data.UserType,System.Int32,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultUserFromUserTypeAndCredentialAsync(SuperOffice.WebApi.Data.UserType,System.Int32,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultUserFromUserTypeAndCredentialAsync(SuperOffice.WebApi.Data.UserType,System.Int32,System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultUserFromUserTypeAndCredentialAsync(UserType, Int32, String, String, String, RequestOptions)
  nameWithType: IUserAgent.CreateDefaultUserFromUserTypeAndCredentialAsync(UserType, Int32, String, String, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultUserFromUserTypeAndCredentialAsync(SuperOffice.WebApi.Data.UserType, System.Int32, System.String, System.String, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCreates a PersonEntity with default values based on the contactId and credentials.\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<User> CreateDefaultUserFromUserTypeAndCredentialAsync(UserType userType, int contactId, string credentialType, string credentialValue, string credentialDisplayValue, RequestOptions requestOptions = null)
    parameters:
    - id: userType
      type: SuperOffice.WebApi.Data.UserType
      description: Type of associate for the user
    - id: contactId
      type: System.Int32
      description: Contact id of the person
    - id: credentialType
      type: System.String
      description: Type of credentials, corresponding to name of plugin and type in the credentials table.
    - id: credentialValue
      type: System.String
      description: This is the actuall value of the credentials.  This will typically be the password or teh users SID in active directory
    - id: credentialDisplayValue
      type: System.String
      description: The value displayed to the user. this will typically be the users login name in active directory.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.User}
    content.vb: Function CreateDefaultUserFromUserTypeAndCredentialAsync(userType As UserType, contactId As Integer, credentialType As String, credentialValue As String, credentialDisplayValue As String, requestOptions As RequestOptions = Nothing) As Task(Of User)
  overload: SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultUserFromUserTypeAndCredentialAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetValidUserNameAsync(System.Int32,SuperOffice.WebApi.Data.UserType,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.GetValidUserNameAsync(System.Int32,SuperOffice.WebApi.Data.UserType,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetValidUserNameAsync(System.Int32,SuperOffice.WebApi.Data.UserType,System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: GetValidUserNameAsync(Int32, UserType, Int32, String, RequestOptions)
  nameWithType: IUserAgent.GetValidUserNameAsync(Int32, UserType, Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetValidUserNameAsync(System.Int32, SuperOffice.WebApi.Data.UserType, System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\n\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<string> GetValidUserNameAsync(int associateId, UserType type, int personId, string userName, RequestOptions requestOptions = null)
    parameters:
    - id: associateId
      type: System.Int32
    - id: type
      type: SuperOffice.WebApi.Data.UserType
    - id: personId
      type: System.Int32
    - id: userName
      type: System.String
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.String}
    content.vb: Function GetValidUserNameAsync(associateId As Integer, type As UserType, personId As Integer, userName As String, requestOptions As RequestOptions = Nothing) As Task(Of String)
  overload: SuperOffice.WebApi.Agents.IUserAgent.GetValidUserNameAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.RemoveLicensesAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.RemoveLicensesAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: RemoveLicensesAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: RemoveLicensesAsync(Int32, RequestOptions)
  nameWithType: IUserAgent.RemoveLicensesAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.RemoveLicensesAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nRemove all user licenses.\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task RemoveLicensesAsync(int associateId, RequestOptions requestOptions = null)
    parameters:
    - id: associateId
      type: System.Int32
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function RemoveLicensesAsync(associateId As Integer, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IUserAgent.RemoveLicensesAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.MakeRetiredAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.MakeRetiredAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: MakeRetiredAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: MakeRetiredAsync(Int32, Boolean, RequestOptions)
  nameWithType: IUserAgent.MakeRetiredAsync(Int32, Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.MakeRetiredAsync(System.Int32, System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nRetiring a user means to remove all licenses, setting person.retired=1 and associate.deleted=1. Unretiering a user means setting  person.retired=0 and associate.deleted=0\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task MakeRetiredAsync(int associateId, bool retired, RequestOptions requestOptions = null)
    parameters:
    - id: associateId
      type: System.Int32
    - id: retired
      type: System.Boolean
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function MakeRetiredAsync(associateId As Integer, retired As Boolean, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IUserAgent.MakeRetiredAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.AddOwnerContactAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.AddOwnerContactAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: AddOwnerContactAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: AddOwnerContactAsync(Int32, RequestOptions)
  nameWithType: IUserAgent.AddOwnerContactAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.AddOwnerContactAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\n\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task AddOwnerContactAsync(int contactId, RequestOptions requestOptions = null)
    parameters:
    - id: contactId
      type: System.Int32
      description: Id of the contact to add as a owner contact
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function AddOwnerContactAsync(contactId As Integer, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IUserAgent.AddOwnerContactAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.RemoveOwnerContactAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.RemoveOwnerContactAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: RemoveOwnerContactAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: RemoveOwnerContactAsync(Int32, RequestOptions)
  nameWithType: IUserAgent.RemoveOwnerContactAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.RemoveOwnerContactAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nRemove a contact from the ownercontactlink table\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task RemoveOwnerContactAsync(int contactId, RequestOptions requestOptions = null)
    parameters:
    - id: contactId
      type: System.Int32
      description: The id of the contact to remove
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function RemoveOwnerContactAsync(contactId As Integer, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IUserAgent.RemoveOwnerContactAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.ResolveUserFromInfoAsync(System.Int32,System.String,System.String[],System.String[],SuperOffice.WebApi.Data.UserType,SuperOffice.WebApi.Data.Credential,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.ResolveUserFromInfoAsync(System.Int32,System.String,System.String[],System.String[],SuperOffice.WebApi.Data.UserType,SuperOffice.WebApi.Data.Credential,SuperOffice.WebApi.RequestOptions)
  id: ResolveUserFromInfoAsync(System.Int32,System.String,System.String[],System.String[],SuperOffice.WebApi.Data.UserType,SuperOffice.WebApi.Data.Credential,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: ResolveUserFromInfoAsync(Int32, String, String[], String[], UserType, Credential, RequestOptions)
  nameWithType: IUserAgent.ResolveUserFromInfoAsync(Int32, String, String[], String[], UserType, Credential, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.ResolveUserFromInfoAsync(System.Int32, System.String, System.String[], System.String[], SuperOffice.WebApi.Data.UserType, SuperOffice.WebApi.Data.Credential, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet a user from the provided information. If the user or associated person does not exist, it will be created on demand.\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<ResolvedUser> ResolveUserFromInfoAsync(int contactId, string personName, string[] phoneNumbers, string[] emails, UserType userType, Credential credential, RequestOptions requestOptions = null)
    parameters:
    - id: contactId
      type: System.Int32
      description: The contact Id of the contact which the person belongs to. Cannot be 0.
    - id: personName
      type: System.String
      description: The full name of the person to be resolved. Optional.
    - id: phoneNumbers
      type: System.String[]
      description: Phone numbers registered on the person. Optional.
    - id: emails
      type: System.String[]
      description: Email-addresses registered on the person. Optional.
    - id: userType
      type: SuperOffice.WebApi.Data.UserType
      description: The type of user to look up or create.
    - id: credential
      type: SuperOffice.WebApi.Data.Credential
      description: The credentials to be used for the user. Required.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ResolvedUser}
      description: The results of the resolve-operation.
    content.vb: Function ResolveUserFromInfoAsync(contactId As Integer, personName As String, phoneNumbers As String(), emails As String(), userType As UserType, credential As Credential, requestOptions As RequestOptions = Nothing) As Task(Of ResolvedUser)
  overload: SuperOffice.WebApi.Agents.IUserAgent.ResolveUserFromInfoAsync*
  nameWithType.vb: IUserAgent.ResolveUserFromInfoAsync(Int32, String, String(), String(), UserType, Credential, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IUserAgent.ResolveUserFromInfoAsync(System.Int32, System.String, System.String(), System.String(), SuperOffice.WebApi.Data.UserType, SuperOffice.WebApi.Data.Credential, SuperOffice.WebApi.RequestOptions)
  name.vb: ResolveUserFromInfoAsync(Int32, String, String(), String(), UserType, Credential, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetAccessTokenAsync(System.String,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.GetAccessTokenAsync(System.String,System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: GetAccessTokenAsync(System.String,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: GetAccessTokenAsync(String, Boolean, RequestOptions)
  nameWithType: IUserAgent.GetAccessTokenAsync(String, Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetAccessTokenAsync(System.String, System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet an access token based on the current user&apos;s session.\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<string> GetAccessTokenAsync(string app_token, bool includeCsSession, RequestOptions requestOptions = null)
    parameters:
    - id: app_token
      type: System.String
      description: Application token to get access on behalf of. Optional.
    - id: includeCsSession
      type: System.Boolean
      description: Initialize CS session for this access token?.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: An access token. &quot;8A:xyz123==&quot;
    content.vb: Function GetAccessTokenAsync(app_token As String, includeCsSession As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of String)
  overload: SuperOffice.WebApi.Agents.IUserAgent.GetAccessTokenAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetValidUserNameForNewUserAsync(SuperOffice.WebApi.Data.User,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.GetValidUserNameForNewUserAsync(SuperOffice.WebApi.Data.User,SuperOffice.WebApi.RequestOptions)
  id: GetValidUserNameForNewUserAsync(SuperOffice.WebApi.Data.User,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: GetValidUserNameForNewUserAsync(User, RequestOptions)
  nameWithType: IUserAgent.GetValidUserNameForNewUserAsync(User, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetValidUserNameForNewUserAsync(SuperOffice.WebApi.Data.User, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGenerates a valid username for an unsaved user\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<string> GetValidUserNameForNewUserAsync(User user, RequestOptions requestOptions = null)
    parameters:
    - id: user
      type: SuperOffice.WebApi.Data.User
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.String}
    content.vb: Function GetValidUserNameForNewUserAsync(user As User, requestOptions As RequestOptions = Nothing) As Task(Of String)
  overload: SuperOffice.WebApi.Agents.IUserAgent.GetValidUserNameForNewUserAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetDefaultAssociateUserNameAsync(SuperOffice.WebApi.Data.User,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.GetDefaultAssociateUserNameAsync(SuperOffice.WebApi.Data.User,SuperOffice.WebApi.RequestOptions)
  id: GetDefaultAssociateUserNameAsync(SuperOffice.WebApi.Data.User,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: GetDefaultAssociateUserNameAsync(User, RequestOptions)
  nameWithType: IUserAgent.GetDefaultAssociateUserNameAsync(User, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetDefaultAssociateUserNameAsync(SuperOffice.WebApi.Data.User, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet the default username for a person\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<string> GetDefaultAssociateUserNameAsync(User user, RequestOptions requestOptions = null)
    parameters:
    - id: user
      type: SuperOffice.WebApi.Data.User
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.String}
    content.vb: Function GetDefaultAssociateUserNameAsync(user As User, requestOptions As RequestOptions = Nothing) As Task(Of String)
  overload: SuperOffice.WebApi.Agents.IUserAgent.GetDefaultAssociateUserNameAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.IsNickNameUniqueAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.IsNickNameUniqueAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: IsNickNameUniqueAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: IsNickNameUniqueAsync(Int32, String, RequestOptions)
  nameWithType: IUserAgent.IsNickNameUniqueAsync(Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.IsNickNameUniqueAsync(System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\n\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<bool> IsNickNameUniqueAsync(int associateId, string nickName, RequestOptions requestOptions = null)
    parameters:
    - id: associateId
      type: System.Int32
    - id: nickName
      type: System.String
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Function IsNickNameUniqueAsync(associateId As Integer, nickName As String, requestOptions As RequestOptions = Nothing) As Task(Of Boolean)
  overload: SuperOffice.WebApi.Agents.IUserAgent.IsNickNameUniqueAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.ValidateUserAsync(SuperOffice.WebApi.Data.User,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.ValidateUserAsync(SuperOffice.WebApi.Data.User,SuperOffice.WebApi.RequestOptions)
  id: ValidateUserAsync(SuperOffice.WebApi.Data.User,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: ValidateUserAsync(User, RequestOptions)
  nameWithType: IUserAgent.ValidateUserAsync(User, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.ValidateUserAsync(SuperOffice.WebApi.Data.User, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCheck that entity is ready for saving, return error messages by field.\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<StringDictionary> ValidateUserAsync(User user, RequestOptions requestOptions = null)
    parameters:
    - id: user
      type: SuperOffice.WebApi.Data.User
      description: Entity to be checked for errors.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.StringDictionary}
      description: Error messages tagged by field.
    content.vb: Function ValidateUserAsync(user As User, requestOptions As RequestOptions = Nothing) As Task(Of StringDictionary)
  overload: SuperOffice.WebApi.Agents.IUserAgent.ValidateUserAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetUserPresenceStatusAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.GetUserPresenceStatusAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetUserPresenceStatusAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: GetUserPresenceStatusAsync(Int32, RequestOptions)
  nameWithType: IUserAgent.GetUserPresenceStatusAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetUserPresenceStatusAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet user presence status\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<UserPresenceStatus> GetUserPresenceStatusAsync(int associateId, RequestOptions requestOptions = null)
    parameters:
    - id: associateId
      type: System.Int32
      description: AssociateId of user to retrieve status for.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.UserPresenceStatus}
      description: User presence status
    content.vb: Function GetUserPresenceStatusAsync(associateId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of UserPresenceStatus)
  overload: SuperOffice.WebApi.Agents.IUserAgent.GetUserPresenceStatusAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.SetUserPresenceStatusAsync(System.Int32,SuperOffice.WebApi.Data.UserPresenceStatus,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.SetUserPresenceStatusAsync(System.Int32,SuperOffice.WebApi.Data.UserPresenceStatus,SuperOffice.WebApi.RequestOptions)
  id: SetUserPresenceStatusAsync(System.Int32,SuperOffice.WebApi.Data.UserPresenceStatus,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: SetUserPresenceStatusAsync(Int32, UserPresenceStatus, RequestOptions)
  nameWithType: IUserAgent.SetUserPresenceStatusAsync(Int32, UserPresenceStatus, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.SetUserPresenceStatusAsync(System.Int32, SuperOffice.WebApi.Data.UserPresenceStatus, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet user presence status\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<UserPresenceStatus> SetUserPresenceStatusAsync(int associateId, UserPresenceStatus userPresenceStatus, RequestOptions requestOptions = null)
    parameters:
    - id: associateId
      type: System.Int32
      description: AssociateId of user to set status for.
    - id: userPresenceStatus
      type: SuperOffice.WebApi.Data.UserPresenceStatus
      description: User presence status to set
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.UserPresenceStatus}
      description: User presence status
    content.vb: Function SetUserPresenceStatusAsync(associateId As Integer, userPresenceStatus As UserPresenceStatus, requestOptions As RequestOptions = Nothing) As Task(Of UserPresenceStatus)
  overload: SuperOffice.WebApi.Agents.IUserAgent.SetUserPresenceStatusAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetUserGroupAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.GetUserGroupAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetUserGroupAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: GetUserGroupAsync(Int32, RequestOptions)
  nameWithType: IUserAgent.GetUserGroupAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetUserGroupAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific UserGroup object.                        \n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<UserGroup> GetUserGroupAsync(int userGroupId, RequestOptions requestOptions = null)
    parameters:
    - id: userGroupId
      type: System.Int32
      description: The identifier of the UserGroup object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.UserGroup}
      description: UserGroup
    content.vb: Function GetUserGroupAsync(userGroupId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of UserGroup)
  overload: SuperOffice.WebApi.Agents.IUserAgent.GetUserGroupAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.SaveUserGroupAsync(SuperOffice.WebApi.Data.UserGroup,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.SaveUserGroupAsync(SuperOffice.WebApi.Data.UserGroup,SuperOffice.WebApi.RequestOptions)
  id: SaveUserGroupAsync(SuperOffice.WebApi.Data.UserGroup,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: SaveUserGroupAsync(UserGroup, RequestOptions)
  nameWithType: IUserAgent.SaveUserGroupAsync(UserGroup, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.SaveUserGroupAsync(SuperOffice.WebApi.Data.UserGroup, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSave a user group.  Set UserGroup.Deleted to mark a user group as deleted and invisible in the user interface.\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<UserGroup> SaveUserGroupAsync(UserGroup userGroup, RequestOptions requestOptions = null)
    parameters:
    - id: userGroup
      type: SuperOffice.WebApi.Data.UserGroup
      description: UserGroup to save
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.UserGroup}
      description: UserGroup as saved to the database
    content.vb: Function SaveUserGroupAsync(userGroup As UserGroup, requestOptions As RequestOptions = Nothing) As Task(Of UserGroup)
  overload: SuperOffice.WebApi.Agents.IUserAgent.SaveUserGroupAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetAllUserGroupsAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.GetAllUserGroupsAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: GetAllUserGroupsAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: GetAllUserGroupsAsync(Boolean, RequestOptions)
  nameWithType: IUserAgent.GetAllUserGroupsAsync(Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetAllUserGroupsAsync(System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet all user groups\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<UserGroup[]> GetAllUserGroupsAsync(bool includeDeleted, RequestOptions requestOptions = null)
    parameters:
    - id: includeDeleted
      type: System.Boolean
      description: Include user groups with Deleted set to true
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.UserGroup[]}
      description: All user groups
    content.vb: Function GetAllUserGroupsAsync(includeDeleted As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of UserGroup())
  overload: SuperOffice.WebApi.Agents.IUserAgent.GetAllUserGroupsAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.CreateUserGroupAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.CreateUserGroupAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateUserGroupAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: CreateUserGroupAsync(RequestOptions)
  nameWithType: IUserAgent.CreateUserGroupAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.CreateUserGroupAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCreate UserGroup (Rank is assigned to the highest rank)\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<UserGroup> CreateUserGroupAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.UserGroup}
    content.vb: Function CreateUserGroupAsync(requestOptions As RequestOptions = Nothing) As Task(Of UserGroup)
  overload: SuperOffice.WebApi.Agents.IUserAgent.CreateUserGroupAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.DeleteUserGroupAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.DeleteUserGroupAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: DeleteUserGroupAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: DeleteUserGroupAsync(Int32, Int32, RequestOptions)
  nameWithType: IUserAgent.DeleteUserGroupAsync(Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.DeleteUserGroupAsync(System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nDelete a usergroup and move its members to another usergroup\n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task DeleteUserGroupAsync(int userGroupToDelete, int userGroupToMoveTo, RequestOptions requestOptions = null)
    parameters:
    - id: userGroupToDelete
      type: System.Int32
      description: The id of the userGroup to delete
    - id: userGroupToMoveTo
      type: System.Int32
      description: The id of the userGroup to move the members to
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function DeleteUserGroupAsync(userGroupToDelete As Integer, userGroupToMoveTo As Integer, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.IUserAgent.DeleteUserGroupAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetUserGroupListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.GetUserGroupListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetUserGroupListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: GetUserGroupListAsync(Int32[], RequestOptions)
  nameWithType: IUserAgent.GetUserGroupListAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetUserGroupListAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets an array of specific UserGroup objects.                        \n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<UserGroup[]> GetUserGroupListAsync(int[] userGroupIds, RequestOptions requestOptions = null)
    parameters:
    - id: userGroupIds
      type: System.Int32[]
      description: The identifiers of the UserGroup object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.UserGroup[]}
      description: Array of UserGroup objects
    content.vb: Function GetUserGroupListAsync(userGroupIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of UserGroup())
  overload: SuperOffice.WebApi.Agents.IUserAgent.GetUserGroupListAsync*
  nameWithType.vb: IUserAgent.GetUserGroupListAsync(Int32(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IUserAgent.GetUserGroupListAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetUserGroupListAsync(Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetUserInfoAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.GetUserInfoAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetUserInfoAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: GetUserInfoAsync(Int32, RequestOptions)
  nameWithType: IUserAgent.GetUserInfoAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetUserInfoAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific UserInfo object.                        \n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<UserInfo> GetUserInfoAsync(int userInfoId, RequestOptions requestOptions = null)
    parameters:
    - id: userInfoId
      type: System.Int32
      description: The identifier of the UserInfo object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.UserInfo}
      description: UserInfo
    content.vb: Function GetUserInfoAsync(userInfoId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of UserInfo)
  overload: SuperOffice.WebApi.Agents.IUserAgent.GetUserInfoAsync*
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetUserInfoListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IUserAgent.GetUserInfoListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetUserInfoListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IUserAgent
  langs:
  - csharp
  - vb
  name: GetUserInfoListAsync(Int32[], RequestOptions)
  nameWithType: IUserAgent.GetUserInfoListAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetUserInfoListAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets an array of specific UserInfo objects.                        \n<p></p>\n<strong>Online Restricted:</strong> The User agent is not available in Online by default. User management is not allowed for partner apps.\n"
  syntax:
    content: Task<UserInfo[]> GetUserInfoListAsync(int[] userInfoIds, RequestOptions requestOptions = null)
    parameters:
    - id: userInfoIds
      type: System.Int32[]
      description: The identifiers of the UserInfo object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.UserInfo[]}
      description: Array of UserInfo objects
    content.vb: Function GetUserInfoListAsync(userInfoIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of UserInfo())
  overload: SuperOffice.WebApi.Agents.IUserAgent.GetUserInfoListAsync*
  nameWithType.vb: IUserAgent.GetUserInfoListAsync(Int32(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IUserAgent.GetUserInfoListAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetUserInfoListAsync(Int32(), RequestOptions)
references:
- uid: SuperOffice.WebApi.Agents
  commentId: N:SuperOffice.WebApi.Agents
  isExternal: true
  name: SuperOffice.WebApi.Agents
  nameWithType: SuperOffice.WebApi.Agents
  fullName: SuperOffice.WebApi.Agents
- uid: SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultRoleEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultRoleEntityAsync
  isExternal: true
  name: CreateDefaultRoleEntityAsync
  nameWithType: IUserAgent.CreateDefaultRoleEntityAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultRoleEntityAsync
- uid: SuperOffice.WebApi.RequestOptions
  commentId: T:SuperOffice.WebApi.RequestOptions
  parent: SuperOffice.WebApi
  isExternal: true
  name: RequestOptions
  nameWithType: RequestOptions
  fullName: SuperOffice.WebApi.RequestOptions
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.RoleEntity}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.RoleEntity}'
  definition: System.Threading.Tasks.Task`1
  name: Task<RoleEntity>
  nameWithType: Task<RoleEntity>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.RoleEntity>
  nameWithType.vb: Task(Of RoleEntity)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.RoleEntity)
  name.vb: Task(Of RoleEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.RoleEntity
    name: RoleEntity
    nameWithType: RoleEntity
    fullName: SuperOffice.WebApi.Data.RoleEntity
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.RoleEntity
    name: RoleEntity
    nameWithType: RoleEntity
    fullName: SuperOffice.WebApi.Data.RoleEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi
  commentId: N:SuperOffice.WebApi
  isExternal: true
  name: SuperOffice.WebApi
  nameWithType: SuperOffice.WebApi
  fullName: SuperOffice.WebApi
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IUserAgent.SaveRoleEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.SaveRoleEntityAsync
  isExternal: true
  name: SaveRoleEntityAsync
  nameWithType: IUserAgent.SaveRoleEntityAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.SaveRoleEntityAsync
- uid: SuperOffice.WebApi.Data.RoleEntity
  commentId: T:SuperOffice.WebApi.Data.RoleEntity
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: RoleEntity
  nameWithType: RoleEntity
  fullName: SuperOffice.WebApi.Data.RoleEntity
- uid: SuperOffice.WebApi.Data
  commentId: N:SuperOffice.WebApi.Data
  isExternal: true
  name: SuperOffice.WebApi.Data
  nameWithType: SuperOffice.WebApi.Data
  fullName: SuperOffice.WebApi.Data
- uid: SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultServiceAuthAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultServiceAuthAsync
  isExternal: true
  name: CreateDefaultServiceAuthAsync
  nameWithType: IUserAgent.CreateDefaultServiceAuthAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultServiceAuthAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ServiceAuth}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ServiceAuth}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ServiceAuth>
  nameWithType: Task<ServiceAuth>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.ServiceAuth>
  nameWithType.vb: Task(Of ServiceAuth)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.ServiceAuth)
  name.vb: Task(Of ServiceAuth)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.ServiceAuth
    name: ServiceAuth
    nameWithType: ServiceAuth
    fullName: SuperOffice.WebApi.Data.ServiceAuth
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.ServiceAuth
    name: ServiceAuth
    nameWithType: ServiceAuth
    fullName: SuperOffice.WebApi.Data.ServiceAuth
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IUserAgent.SaveServiceAuthAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.SaveServiceAuthAsync
  isExternal: true
  name: SaveServiceAuthAsync
  nameWithType: IUserAgent.SaveServiceAuthAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.SaveServiceAuthAsync
- uid: SuperOffice.WebApi.Data.ServiceAuth
  commentId: T:SuperOffice.WebApi.Data.ServiceAuth
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: ServiceAuth
  nameWithType: ServiceAuth
  fullName: SuperOffice.WebApi.Data.ServiceAuth
- uid: SuperOffice.WebApi.Agents.IUserAgent.DeleteServiceAuthAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.DeleteServiceAuthAsync
  isExternal: true
  name: DeleteServiceAuthAsync
  nameWithType: IUserAgent.DeleteServiceAuthAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.DeleteServiceAuthAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultUntrustedCredentialsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultUntrustedCredentialsAsync
  isExternal: true
  name: CreateDefaultUntrustedCredentialsAsync
  nameWithType: IUserAgent.CreateDefaultUntrustedCredentialsAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultUntrustedCredentialsAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.UntrustedCredentials}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.UntrustedCredentials}'
  definition: System.Threading.Tasks.Task`1
  name: Task<UntrustedCredentials>
  nameWithType: Task<UntrustedCredentials>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.UntrustedCredentials>
  nameWithType.vb: Task(Of UntrustedCredentials)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.UntrustedCredentials)
  name.vb: Task(Of UntrustedCredentials)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.UntrustedCredentials
    name: UntrustedCredentials
    nameWithType: UntrustedCredentials
    fullName: SuperOffice.WebApi.Data.UntrustedCredentials
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.UntrustedCredentials
    name: UntrustedCredentials
    nameWithType: UntrustedCredentials
    fullName: SuperOffice.WebApi.Data.UntrustedCredentials
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultUserAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultUserAsync
  isExternal: true
  name: CreateDefaultUserAsync
  nameWithType: IUserAgent.CreateDefaultUserAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultUserAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.User}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.User}'
  definition: System.Threading.Tasks.Task`1
  name: Task<User>
  nameWithType: Task<User>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.User>
  nameWithType.vb: Task(Of User)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.User)
  name.vb: Task(Of User)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.User
    name: User
    nameWithType: User
    fullName: SuperOffice.WebApi.Data.User
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.User
    name: User
    nameWithType: User
    fullName: SuperOffice.WebApi.Data.User
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IUserAgent.SaveUserAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.SaveUserAsync
  isExternal: true
  name: SaveUserAsync
  nameWithType: IUserAgent.SaveUserAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.SaveUserAsync
- uid: SuperOffice.WebApi.Data.User
  commentId: T:SuperOffice.WebApi.Data.User
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: User
  nameWithType: User
  fullName: SuperOffice.WebApi.Data.User
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetUserCommandsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.GetUserCommandsAsync
  isExternal: true
  name: GetUserCommandsAsync
  nameWithType: IUserAgent.GetUserCommandsAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetUserCommandsAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.CustomCommand[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.CustomCommand[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<CustomCommand[]>
  nameWithType: Task<CustomCommand[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.CustomCommand[]>
  nameWithType.vb: Task(Of CustomCommand())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.CustomCommand())
  name.vb: Task(Of CustomCommand())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.CustomCommand
    name: CustomCommand
    nameWithType: CustomCommand
    fullName: SuperOffice.WebApi.Data.CustomCommand
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.CustomCommand
    name: CustomCommand
    nameWithType: CustomCommand
    fullName: SuperOffice.WebApi.Data.CustomCommand
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IUserAgent.ExecuteUserCommandAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.ExecuteUserCommandAsync
  isExternal: true
  name: ExecuteUserCommandAsync
  nameWithType: IUserAgent.ExecuteUserCommandAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.ExecuteUserCommandAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.WebApi.Data.CommandActionResult
  commentId: T:SuperOffice.WebApi.Data.CommandActionResult
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: CommandActionResult
  nameWithType: CommandActionResult
  fullName: SuperOffice.WebApi.Data.CommandActionResult
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.CommandResult}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.CommandResult}'
  definition: System.Threading.Tasks.Task`1
  name: Task<CommandResult>
  nameWithType: Task<CommandResult>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.CommandResult>
  nameWithType.vb: Task(Of CommandResult)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.CommandResult)
  name.vb: Task(Of CommandResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.CommandResult
    name: CommandResult
    nameWithType: CommandResult
    fullName: SuperOffice.WebApi.Data.CommandResult
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.CommandResult
    name: CommandResult
    nameWithType: CommandResult
    fullName: SuperOffice.WebApi.Data.CommandResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IUserAgent.DeleteUserAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.DeleteUserAsync
  isExternal: true
  name: DeleteUserAsync
  nameWithType: IUserAgent.DeleteUserAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.DeleteUserAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetAccessGatewayInfoAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.GetAccessGatewayInfoAsync
  isExternal: true
  name: GetAccessGatewayInfoAsync
  nameWithType: IUserAgent.GetAccessGatewayInfoAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetAccessGatewayInfoAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AccessGatewayInfo}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AccessGatewayInfo}'
  definition: System.Threading.Tasks.Task`1
  name: Task<AccessGatewayInfo>
  nameWithType: Task<AccessGatewayInfo>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.AccessGatewayInfo>
  nameWithType.vb: Task(Of AccessGatewayInfo)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.AccessGatewayInfo)
  name.vb: Task(Of AccessGatewayInfo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.AccessGatewayInfo
    name: AccessGatewayInfo
    nameWithType: AccessGatewayInfo
    fullName: SuperOffice.WebApi.Data.AccessGatewayInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.AccessGatewayInfo
    name: AccessGatewayInfo
    nameWithType: AccessGatewayInfo
    fullName: SuperOffice.WebApi.Data.AccessGatewayInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetOrRegisterAccessGatewayInfoAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.GetOrRegisterAccessGatewayInfoAsync
  isExternal: true
  name: GetOrRegisterAccessGatewayInfoAsync
  nameWithType: IUserAgent.GetOrRegisterAccessGatewayInfoAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetOrRegisterAccessGatewayInfoAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.RegisterWithAccessGatewayAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.RegisterWithAccessGatewayAsync
  isExternal: true
  name: RegisterWithAccessGatewayAsync
  nameWithType: IUserAgent.RegisterWithAccessGatewayAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.RegisterWithAccessGatewayAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.CheckAccessGatewayRegistrationAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.CheckAccessGatewayRegistrationAsync
  isExternal: true
  name: CheckAccessGatewayRegistrationAsync
  nameWithType: IUserAgent.CheckAccessGatewayRegistrationAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.CheckAccessGatewayRegistrationAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: '!:System.Threading.Tasks.Task{System.Boolean}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IUserAgent.SaveCredentialAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.SaveCredentialAsync
  isExternal: true
  name: SaveCredentialAsync
  nameWithType: IUserAgent.SaveCredentialAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.SaveCredentialAsync
- uid: SuperOffice.WebApi.Data.Credential
  commentId: T:SuperOffice.WebApi.Data.Credential
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: Credential
  nameWithType: Credential
  fullName: SuperOffice.WebApi.Data.Credential
- uid: SuperOffice.WebApi.Agents.IUserAgent.DeleteCredentialAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.DeleteCredentialAsync
  isExternal: true
  name: DeleteCredentialAsync
  nameWithType: IUserAgent.DeleteCredentialAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.DeleteCredentialAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.FindCredentialsGroupsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.FindCredentialsGroupsAsync
  isExternal: true
  name: FindCredentialsGroupsAsync
  nameWithType: IUserAgent.FindCredentialsGroupsAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.FindCredentialsGroupsAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.CredentialsGroup[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.CredentialsGroup[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<CredentialsGroup[]>
  nameWithType: Task<CredentialsGroup[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.CredentialsGroup[]>
  nameWithType.vb: Task(Of CredentialsGroup())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.CredentialsGroup())
  name.vb: Task(Of CredentialsGroup())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.CredentialsGroup
    name: CredentialsGroup
    nameWithType: CredentialsGroup
    fullName: SuperOffice.WebApi.Data.CredentialsGroup
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.CredentialsGroup
    name: CredentialsGroup
    nameWithType: CredentialsGroup
    fullName: SuperOffice.WebApi.Data.CredentialsGroup
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IUserAgent.FindCredentialUsersAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.FindCredentialUsersAsync
  isExternal: true
  name: FindCredentialUsersAsync
  nameWithType: IUserAgent.FindCredentialUsersAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.FindCredentialUsersAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.CredentialsGroupUsers}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.CredentialsGroupUsers}'
  definition: System.Threading.Tasks.Task`1
  name: Task<CredentialsGroupUsers>
  nameWithType: Task<CredentialsGroupUsers>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.CredentialsGroupUsers>
  nameWithType.vb: Task(Of CredentialsGroupUsers)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.CredentialsGroupUsers)
  name.vb: Task(Of CredentialsGroupUsers)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.CredentialsGroupUsers
    name: CredentialsGroupUsers
    nameWithType: CredentialsGroupUsers
    fullName: SuperOffice.WebApi.Data.CredentialsGroupUsers
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.CredentialsGroupUsers
    name: CredentialsGroupUsers
    nameWithType: CredentialsGroupUsers
    fullName: SuperOffice.WebApi.Data.CredentialsGroupUsers
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetCredentialUsersInGroupAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.GetCredentialUsersInGroupAsync
  isExternal: true
  name: GetCredentialUsersInGroupAsync
  nameWithType: IUserAgent.GetCredentialUsersInGroupAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetCredentialUsersInGroupAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetRoleAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.GetRoleAsync
  isExternal: true
  name: GetRoleAsync
  nameWithType: IUserAgent.GetRoleAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetRoleAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Role}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Role}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Role>
  nameWithType: Task<Role>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.Role>
  nameWithType.vb: Task(Of Role)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.Role)
  name.vb: Task(Of Role)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.Role
    name: Role
    nameWithType: Role
    fullName: SuperOffice.WebApi.Data.Role
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.Role
    name: Role
    nameWithType: Role
    fullName: SuperOffice.WebApi.Data.Role
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetRoleEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.GetRoleEntityAsync
  isExternal: true
  name: GetRoleEntityAsync
  nameWithType: IUserAgent.GetRoleEntityAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetRoleEntityAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.DeleteRoleAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.DeleteRoleAsync
  isExternal: true
  name: DeleteRoleAsync
  nameWithType: IUserAgent.DeleteRoleAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.DeleteRoleAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetAllRolesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.GetAllRolesAsync
  isExternal: true
  name: GetAllRolesAsync
  nameWithType: IUserAgent.GetAllRolesAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetAllRolesAsync
- uid: SuperOffice.WebApi.Data.RoleType
  commentId: T:SuperOffice.WebApi.Data.RoleType
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: RoleType
  nameWithType: RoleType
  fullName: SuperOffice.WebApi.Data.RoleType
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SelectableMDOListItem[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SelectableMDOListItem[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<SelectableMDOListItem[]>
  nameWithType: Task<SelectableMDOListItem[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.SelectableMDOListItem[]>
  nameWithType.vb: Task(Of SelectableMDOListItem())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.SelectableMDOListItem())
  name.vb: Task(Of SelectableMDOListItem())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.SelectableMDOListItem
    name: SelectableMDOListItem
    nameWithType: SelectableMDOListItem
    fullName: SuperOffice.WebApi.Data.SelectableMDOListItem
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.SelectableMDOListItem
    name: SelectableMDOListItem
    nameWithType: SelectableMDOListItem
    fullName: SuperOffice.WebApi.Data.SelectableMDOListItem
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetAllFunctionalRightsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.GetAllFunctionalRightsAsync
  isExternal: true
  name: GetAllFunctionalRightsAsync
  nameWithType: IUserAgent.GetAllFunctionalRightsAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetAllFunctionalRightsAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetFunctionalRightsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.GetFunctionalRightsAsync
  isExternal: true
  name: GetFunctionalRightsAsync
  nameWithType: IUserAgent.GetFunctionalRightsAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetFunctionalRightsAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.SetFunctionalRightsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.SetFunctionalRightsAsync
  isExternal: true
  name: SetFunctionalRightsAsync
  nameWithType: IUserAgent.SetFunctionalRightsAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.SetFunctionalRightsAsync
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.WebApi.Agents.IUserAgent.SetDataRightAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.SetDataRightAsync
  isExternal: true
  name: SetDataRightAsync
  nameWithType: IUserAgent.SetDataRightAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.SetDataRightAsync
- uid: SuperOffice.WebApi.Data.RoleRelationToOwner
  commentId: T:SuperOffice.WebApi.Data.RoleRelationToOwner
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: RoleRelationToOwner
  nameWithType: RoleRelationToOwner
  fullName: SuperOffice.WebApi.Data.RoleRelationToOwner
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetDataRightAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.GetDataRightAsync
  isExternal: true
  name: GetDataRightAsync
  nameWithType: IUserAgent.GetDataRightAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetDataRightAsync
- uid: System.Threading.Tasks.Task{System.String}
  commentId: '!:System.Threading.Tasks.Task{System.String}'
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetDataRightsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.GetDataRightsAsync
  isExternal: true
  name: GetDataRightsAsync
  nameWithType: IUserAgent.GetDataRightsAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetDataRightsAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.StringDictionary}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.StringDictionary}'
  definition: System.Threading.Tasks.Task`1
  name: Task<StringDictionary>
  nameWithType: Task<StringDictionary>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.StringDictionary>
  nameWithType.vb: Task(Of StringDictionary)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.StringDictionary)
  name.vb: Task(Of StringDictionary)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.StringDictionary
    name: StringDictionary
    nameWithType: StringDictionary
    fullName: SuperOffice.WebApi.Data.StringDictionary
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.StringDictionary
    name: StringDictionary
    nameWithType: StringDictionary
    fullName: SuperOffice.WebApi.Data.StringDictionary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultRoleEntityFromTypeAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultRoleEntityFromTypeAsync
  isExternal: true
  name: CreateDefaultRoleEntityFromTypeAsync
  nameWithType: IUserAgent.CreateDefaultRoleEntityFromTypeAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultRoleEntityFromTypeAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.FindRolesWithFunctionalRightAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.FindRolesWithFunctionalRightAsync
  isExternal: true
  name: FindRolesWithFunctionalRightAsync
  nameWithType: IUserAgent.FindRolesWithFunctionalRightAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.FindRolesWithFunctionalRightAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.MDOListItem[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.MDOListItem[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<MDOListItem[]>
  nameWithType: Task<MDOListItem[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.MDOListItem[]>
  nameWithType.vb: Task(Of MDOListItem())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.MDOListItem())
  name.vb: Task(Of MDOListItem())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.MDOListItem
    name: MDOListItem
    nameWithType: MDOListItem
    fullName: SuperOffice.WebApi.Data.MDOListItem
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.MDOListItem
    name: MDOListItem
    nameWithType: MDOListItem
    fullName: SuperOffice.WebApi.Data.MDOListItem
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IUserAgent.FindRolesWithFunctionalRightsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.FindRolesWithFunctionalRightsAsync
  isExternal: true
  name: FindRolesWithFunctionalRightsAsync
  nameWithType: IUserAgent.FindRolesWithFunctionalRightsAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.FindRolesWithFunctionalRightsAsync
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Threading.Tasks.Task{System.Int32[]}
  commentId: '!:System.Threading.Tasks.Task{System.Int32[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Int32[]>
  nameWithType: Task<Int32[]>
  fullName: System.Threading.Tasks.Task<System.Int32[]>
  nameWithType.vb: Task(Of Int32())
  fullName.vb: System.Threading.Tasks.Task(Of System.Int32())
  name.vb: Task(Of Int32())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IUserAgent.FindRolesWithoutFunctionalRightsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.FindRolesWithoutFunctionalRightsAsync
  isExternal: true
  name: FindRolesWithoutFunctionalRightsAsync
  nameWithType: IUserAgent.FindRolesWithoutFunctionalRightsAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.FindRolesWithoutFunctionalRightsAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetServiceAuthAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.GetServiceAuthAsync
  isExternal: true
  name: GetServiceAuthAsync
  nameWithType: IUserAgent.GetServiceAuthAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetServiceAuthAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.SaveExternalTokensAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.SaveExternalTokensAsync
  isExternal: true
  name: SaveExternalTokensAsync
  nameWithType: IUserAgent.SaveExternalTokensAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.SaveExternalTokensAsync
- uid: SuperOffice.WebApi.Data.TokenManagementInfo
  commentId: T:SuperOffice.WebApi.Data.TokenManagementInfo
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: TokenManagementInfo
  nameWithType: TokenManagementInfo
  fullName: SuperOffice.WebApi.Data.TokenManagementInfo
- uid: SuperOffice.WebApi.Agents.IUserAgent.DecryptAndSaveExternalTokensAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.DecryptAndSaveExternalTokensAsync
  isExternal: true
  name: DecryptAndSaveExternalTokensAsync
  nameWithType: IUserAgent.DecryptAndSaveExternalTokensAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.DecryptAndSaveExternalTokensAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetExternalTokensAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.GetExternalTokensAsync
  isExternal: true
  name: GetExternalTokensAsync
  nameWithType: IUserAgent.GetExternalTokensAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetExternalTokensAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TokenManagementInfo}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TokenManagementInfo}'
  definition: System.Threading.Tasks.Task`1
  name: Task<TokenManagementInfo>
  nameWithType: Task<TokenManagementInfo>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.TokenManagementInfo>
  nameWithType.vb: Task(Of TokenManagementInfo)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.TokenManagementInfo)
  name.vb: Task(Of TokenManagementInfo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.TokenManagementInfo
    name: TokenManagementInfo
    nameWithType: TokenManagementInfo
    fullName: SuperOffice.WebApi.Data.TokenManagementInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.TokenManagementInfo
    name: TokenManagementInfo
    nameWithType: TokenManagementInfo
    fullName: SuperOffice.WebApi.Data.TokenManagementInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetUserAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.GetUserAsync
  isExternal: true
  name: GetUserAsync
  nameWithType: IUserAgent.GetUserAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetUserAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetUserFromNameAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.GetUserFromNameAsync
  isExternal: true
  name: GetUserFromNameAsync
  nameWithType: IUserAgent.GetUserFromNameAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetUserFromNameAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.SaveUserFromNameAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.SaveUserFromNameAsync
  isExternal: true
  name: SaveUserFromNameAsync
  nameWithType: IUserAgent.SaveUserFromNameAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.SaveUserFromNameAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.DeleteUserFromNameAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.DeleteUserFromNameAsync
  isExternal: true
  name: DeleteUserFromNameAsync
  nameWithType: IUserAgent.DeleteUserFromNameAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.DeleteUserFromNameAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetCredentialTypesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.GetCredentialTypesAsync
  isExternal: true
  name: GetCredentialTypesAsync
  nameWithType: IUserAgent.GetCredentialTypesAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetCredentialTypesAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.CredentialType[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.CredentialType[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<CredentialType[]>
  nameWithType: Task<CredentialType[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.CredentialType[]>
  nameWithType.vb: Task(Of CredentialType())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.CredentialType())
  name.vb: Task(Of CredentialType())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.CredentialType
    name: CredentialType
    nameWithType: CredentialType
    fullName: SuperOffice.WebApi.Data.CredentialType
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.CredentialType
    name: CredentialType
    nameWithType: CredentialType
    fullName: SuperOffice.WebApi.Data.CredentialType
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetCredentialTypesForUserTypeAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.GetCredentialTypesForUserTypeAsync
  isExternal: true
  name: GetCredentialTypesForUserTypeAsync
  nameWithType: IUserAgent.GetCredentialTypesForUserTypeAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetCredentialTypesForUserTypeAsync
- uid: SuperOffice.WebApi.Data.UserType
  commentId: T:SuperOffice.WebApi.Data.UserType
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: UserType
  nameWithType: UserType
  fullName: SuperOffice.WebApi.Data.UserType
- uid: SuperOffice.WebApi.Agents.IUserAgent.SaveUntrustedCredentialsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.SaveUntrustedCredentialsAsync
  isExternal: true
  name: SaveUntrustedCredentialsAsync
  nameWithType: IUserAgent.SaveUntrustedCredentialsAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.SaveUntrustedCredentialsAsync
- uid: SuperOffice.WebApi.Data.UntrustedCredentials
  commentId: T:SuperOffice.WebApi.Data.UntrustedCredentials
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: UntrustedCredentials
  nameWithType: UntrustedCredentials
  fullName: SuperOffice.WebApi.Data.UntrustedCredentials
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetUntrustedCredentialsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.GetUntrustedCredentialsAsync
  isExternal: true
  name: GetUntrustedCredentialsAsync
  nameWithType: IUserAgent.GetUntrustedCredentialsAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetUntrustedCredentialsAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.UntrustedCredentials[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.UntrustedCredentials[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<UntrustedCredentials[]>
  nameWithType: Task<UntrustedCredentials[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.UntrustedCredentials[]>
  nameWithType.vb: Task(Of UntrustedCredentials())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.UntrustedCredentials())
  name.vb: Task(Of UntrustedCredentials())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.UntrustedCredentials
    name: UntrustedCredentials
    nameWithType: UntrustedCredentials
    fullName: SuperOffice.WebApi.Data.UntrustedCredentials
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.UntrustedCredentials
    name: UntrustedCredentials
    nameWithType: UntrustedCredentials
    fullName: SuperOffice.WebApi.Data.UntrustedCredentials
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetUntrustedCredentialsForAssociateAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.GetUntrustedCredentialsForAssociateAsync
  isExternal: true
  name: GetUntrustedCredentialsForAssociateAsync
  nameWithType: IUserAgent.GetUntrustedCredentialsForAssociateAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetUntrustedCredentialsForAssociateAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.SaveUntrustedCredentialsForAssociateAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.SaveUntrustedCredentialsForAssociateAsync
  isExternal: true
  name: SaveUntrustedCredentialsForAssociateAsync
  nameWithType: IUserAgent.SaveUntrustedCredentialsForAssociateAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.SaveUntrustedCredentialsForAssociateAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.RemoveUntrustedCredentialsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.RemoveUntrustedCredentialsAsync
  isExternal: true
  name: RemoveUntrustedCredentialsAsync
  nameWithType: IUserAgent.RemoveUntrustedCredentialsAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.RemoveUntrustedCredentialsAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.RemoveUntrustedCredentialsForAssociateAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.RemoveUntrustedCredentialsForAssociateAsync
  isExternal: true
  name: RemoveUntrustedCredentialsForAssociateAsync
  nameWithType: IUserAgent.RemoveUntrustedCredentialsForAssociateAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.RemoveUntrustedCredentialsForAssociateAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.CreateExternalUserAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.CreateExternalUserAsync
  isExternal: true
  name: CreateExternalUserAsync
  nameWithType: IUserAgent.CreateExternalUserAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.CreateExternalUserAsync
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: '!:System.Threading.Tasks.Task{System.Int32}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  nameWithType.vb: Task(Of Int32)
  fullName.vb: System.Threading.Tasks.Task(Of System.Int32)
  name.vb: Task(Of Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IUserAgent.DeleteExternalUserAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.DeleteExternalUserAsync
  isExternal: true
  name: DeleteExternalUserAsync
  nameWithType: IUserAgent.DeleteExternalUserAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.DeleteExternalUserAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.SetExternalUserInfoAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.SetExternalUserInfoAsync
  isExternal: true
  name: SetExternalUserInfoAsync
  nameWithType: IUserAgent.SetExternalUserInfoAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.SetExternalUserInfoAsync
- uid: SuperOffice.WebApi.Data.ExternalUserInfoModification
  commentId: T:SuperOffice.WebApi.Data.ExternalUserInfoModification
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: ExternalUserInfoModification
  nameWithType: ExternalUserInfoModification
  fullName: SuperOffice.WebApi.Data.ExternalUserInfoModification
- uid: SuperOffice.WebApi.Agents.IUserAgent.GenerateNewPasswordForExternalUserAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.GenerateNewPasswordForExternalUserAsync
  isExternal: true
  name: GenerateNewPasswordForExternalUserAsync
  nameWithType: IUserAgent.GenerateNewPasswordForExternalUserAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GenerateNewPasswordForExternalUserAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.CanChangePasswordAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.CanChangePasswordAsync
  isExternal: true
  name: CanChangePasswordAsync
  nameWithType: IUserAgent.CanChangePasswordAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.CanChangePasswordAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetSupportedChangePasswordTypesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.GetSupportedChangePasswordTypesAsync
  isExternal: true
  name: GetSupportedChangePasswordTypesAsync
  nameWithType: IUserAgent.GetSupportedChangePasswordTypesAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetSupportedChangePasswordTypesAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ChangePasswordType[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ChangePasswordType[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ChangePasswordType[]>
  nameWithType: Task<ChangePasswordType[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.ChangePasswordType[]>
  nameWithType.vb: Task(Of ChangePasswordType())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.ChangePasswordType())
  name.vb: Task(Of ChangePasswordType())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.ChangePasswordType
    name: ChangePasswordType
    nameWithType: ChangePasswordType
    fullName: SuperOffice.WebApi.Data.ChangePasswordType
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.ChangePasswordType
    name: ChangePasswordType
    nameWithType: ChangePasswordType
    fullName: SuperOffice.WebApi.Data.ChangePasswordType
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IUserAgent.ChangePasswordAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.ChangePasswordAsync
  isExternal: true
  name: ChangePasswordAsync
  nameWithType: IUserAgent.ChangePasswordAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.ChangePasswordAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.SendChangePasswordEMailAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.SendChangePasswordEMailAsync
  isExternal: true
  name: SendChangePasswordEMailAsync
  nameWithType: IUserAgent.SendChangePasswordEMailAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.SendChangePasswordEMailAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.OperationResult}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.OperationResult}'
  definition: System.Threading.Tasks.Task`1
  name: Task<OperationResult>
  nameWithType: Task<OperationResult>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.OperationResult>
  nameWithType.vb: Task(Of OperationResult)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.OperationResult)
  name.vb: Task(Of OperationResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.OperationResult
    name: OperationResult
    nameWithType: OperationResult
    fullName: SuperOffice.WebApi.Data.OperationResult
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.OperationResult
    name: OperationResult
    nameWithType: OperationResult
    fullName: SuperOffice.WebApi.Data.OperationResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetUserFromPersonIdAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.GetUserFromPersonIdAsync
  isExternal: true
  name: GetUserFromPersonIdAsync
  nameWithType: IUserAgent.GetUserFromPersonIdAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetUserFromPersonIdAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.User[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.User[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<User[]>
  nameWithType: Task<User[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.User[]>
  nameWithType.vb: Task(Of User())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.User())
  name.vb: Task(Of User())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.User
    name: User
    nameWithType: User
    fullName: SuperOffice.WebApi.Data.User
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.User
    name: User
    nameWithType: User
    fullName: SuperOffice.WebApi.Data.User
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultUserFromUserTypeAndPersonIdAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultUserFromUserTypeAndPersonIdAsync
  isExternal: true
  name: CreateDefaultUserFromUserTypeAndPersonIdAsync
  nameWithType: IUserAgent.CreateDefaultUserFromUserTypeAndPersonIdAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultUserFromUserTypeAndPersonIdAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultUserFromUserTypeAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultUserFromUserTypeAsync
  isExternal: true
  name: CreateDefaultUserFromUserTypeAsync
  nameWithType: IUserAgent.CreateDefaultUserFromUserTypeAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultUserFromUserTypeAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetUserFromEjUserIdAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.GetUserFromEjUserIdAsync
  isExternal: true
  name: GetUserFromEjUserIdAsync
  nameWithType: IUserAgent.GetUserFromEjUserIdAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetUserFromEjUserIdAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.SetPasswordFromNameAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.SetPasswordFromNameAsync
  isExternal: true
  name: SetPasswordFromNameAsync
  nameWithType: IUserAgent.SetPasswordFromNameAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.SetPasswordFromNameAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.SetPasswordAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.SetPasswordAsync
  isExternal: true
  name: SetPasswordAsync
  nameWithType: IUserAgent.SetPasswordAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.SetPasswordAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.ChangeOwnPasswordAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.ChangeOwnPasswordAsync
  isExternal: true
  name: ChangeOwnPasswordAsync
  nameWithType: IUserAgent.ChangeOwnPasswordAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.ChangeOwnPasswordAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.ChangePasswordFromNameAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.ChangePasswordFromNameAsync
  isExternal: true
  name: ChangePasswordFromNameAsync
  nameWithType: IUserAgent.ChangePasswordFromNameAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.ChangePasswordFromNameAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.IsUserNameValidAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.IsUserNameValidAsync
  isExternal: true
  name: IsUserNameValidAsync
  nameWithType: IUserAgent.IsUserNameValidAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.IsUserNameValidAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.IsPasswordValidAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.IsPasswordValidAsync
  isExternal: true
  name: IsPasswordValidAsync
  nameWithType: IUserAgent.IsPasswordValidAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.IsPasswordValidAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.SetGeneratedPasswordAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.SetGeneratedPasswordAsync
  isExternal: true
  name: SetGeneratedPasswordAsync
  nameWithType: IUserAgent.SetGeneratedPasswordAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.SetGeneratedPasswordAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.SetGeneratedPasswordFromNameAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.SetGeneratedPasswordFromNameAsync
  isExternal: true
  name: SetGeneratedPasswordFromNameAsync
  nameWithType: IUserAgent.SetGeneratedPasswordFromNameAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.SetGeneratedPasswordFromNameAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.IsPasswordValidWithReasonAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.IsPasswordValidWithReasonAsync
  isExternal: true
  name: IsPasswordValidWithReasonAsync
  nameWithType: IUserAgent.IsPasswordValidWithReasonAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.IsPasswordValidWithReasonAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.UserValidationResult}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.UserValidationResult}'
  definition: System.Threading.Tasks.Task`1
  name: Task<UserValidationResult>
  nameWithType: Task<UserValidationResult>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.UserValidationResult>
  nameWithType.vb: Task(Of UserValidationResult)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.UserValidationResult)
  name.vb: Task(Of UserValidationResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.UserValidationResult
    name: UserValidationResult
    nameWithType: UserValidationResult
    fullName: SuperOffice.WebApi.Data.UserValidationResult
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.UserValidationResult
    name: UserValidationResult
    nameWithType: UserValidationResult
    fullName: SuperOffice.WebApi.Data.UserValidationResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IUserAgent.IsUserNameValidWithReasonAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.IsUserNameValidWithReasonAsync
  isExternal: true
  name: IsUserNameValidWithReasonAsync
  nameWithType: IUserAgent.IsUserNameValidWithReasonAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.IsUserNameValidWithReasonAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.ChangeUserTypeAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.ChangeUserTypeAsync
  isExternal: true
  name: ChangeUserTypeAsync
  nameWithType: IUserAgent.ChangeUserTypeAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.ChangeUserTypeAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultUserFromUserTypeAndCredentialAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultUserFromUserTypeAndCredentialAsync
  isExternal: true
  name: CreateDefaultUserFromUserTypeAndCredentialAsync
  nameWithType: IUserAgent.CreateDefaultUserFromUserTypeAndCredentialAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.CreateDefaultUserFromUserTypeAndCredentialAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetValidUserNameAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.GetValidUserNameAsync
  isExternal: true
  name: GetValidUserNameAsync
  nameWithType: IUserAgent.GetValidUserNameAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetValidUserNameAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.RemoveLicensesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.RemoveLicensesAsync
  isExternal: true
  name: RemoveLicensesAsync
  nameWithType: IUserAgent.RemoveLicensesAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.RemoveLicensesAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.MakeRetiredAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.MakeRetiredAsync
  isExternal: true
  name: MakeRetiredAsync
  nameWithType: IUserAgent.MakeRetiredAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.MakeRetiredAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.AddOwnerContactAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.AddOwnerContactAsync
  isExternal: true
  name: AddOwnerContactAsync
  nameWithType: IUserAgent.AddOwnerContactAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.AddOwnerContactAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.RemoveOwnerContactAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.RemoveOwnerContactAsync
  isExternal: true
  name: RemoveOwnerContactAsync
  nameWithType: IUserAgent.RemoveOwnerContactAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.RemoveOwnerContactAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.ResolveUserFromInfoAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.ResolveUserFromInfoAsync
  isExternal: true
  name: ResolveUserFromInfoAsync
  nameWithType: IUserAgent.ResolveUserFromInfoAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.ResolveUserFromInfoAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ResolvedUser}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ResolvedUser}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ResolvedUser>
  nameWithType: Task<ResolvedUser>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.ResolvedUser>
  nameWithType.vb: Task(Of ResolvedUser)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.ResolvedUser)
  name.vb: Task(Of ResolvedUser)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.ResolvedUser
    name: ResolvedUser
    nameWithType: ResolvedUser
    fullName: SuperOffice.WebApi.Data.ResolvedUser
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.ResolvedUser
    name: ResolvedUser
    nameWithType: ResolvedUser
    fullName: SuperOffice.WebApi.Data.ResolvedUser
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetAccessTokenAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.GetAccessTokenAsync
  isExternal: true
  name: GetAccessTokenAsync
  nameWithType: IUserAgent.GetAccessTokenAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetAccessTokenAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetValidUserNameForNewUserAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.GetValidUserNameForNewUserAsync
  isExternal: true
  name: GetValidUserNameForNewUserAsync
  nameWithType: IUserAgent.GetValidUserNameForNewUserAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetValidUserNameForNewUserAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetDefaultAssociateUserNameAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.GetDefaultAssociateUserNameAsync
  isExternal: true
  name: GetDefaultAssociateUserNameAsync
  nameWithType: IUserAgent.GetDefaultAssociateUserNameAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetDefaultAssociateUserNameAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.IsNickNameUniqueAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.IsNickNameUniqueAsync
  isExternal: true
  name: IsNickNameUniqueAsync
  nameWithType: IUserAgent.IsNickNameUniqueAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.IsNickNameUniqueAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.ValidateUserAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.ValidateUserAsync
  isExternal: true
  name: ValidateUserAsync
  nameWithType: IUserAgent.ValidateUserAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.ValidateUserAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetUserPresenceStatusAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.GetUserPresenceStatusAsync
  isExternal: true
  name: GetUserPresenceStatusAsync
  nameWithType: IUserAgent.GetUserPresenceStatusAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetUserPresenceStatusAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.UserPresenceStatus}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.UserPresenceStatus}'
  definition: System.Threading.Tasks.Task`1
  name: Task<UserPresenceStatus>
  nameWithType: Task<UserPresenceStatus>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.UserPresenceStatus>
  nameWithType.vb: Task(Of UserPresenceStatus)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.UserPresenceStatus)
  name.vb: Task(Of UserPresenceStatus)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.UserPresenceStatus
    name: UserPresenceStatus
    nameWithType: UserPresenceStatus
    fullName: SuperOffice.WebApi.Data.UserPresenceStatus
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.UserPresenceStatus
    name: UserPresenceStatus
    nameWithType: UserPresenceStatus
    fullName: SuperOffice.WebApi.Data.UserPresenceStatus
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IUserAgent.SetUserPresenceStatusAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.SetUserPresenceStatusAsync
  isExternal: true
  name: SetUserPresenceStatusAsync
  nameWithType: IUserAgent.SetUserPresenceStatusAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.SetUserPresenceStatusAsync
- uid: SuperOffice.WebApi.Data.UserPresenceStatus
  commentId: T:SuperOffice.WebApi.Data.UserPresenceStatus
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: UserPresenceStatus
  nameWithType: UserPresenceStatus
  fullName: SuperOffice.WebApi.Data.UserPresenceStatus
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetUserGroupAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.GetUserGroupAsync
  isExternal: true
  name: GetUserGroupAsync
  nameWithType: IUserAgent.GetUserGroupAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetUserGroupAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.UserGroup}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.UserGroup}'
  definition: System.Threading.Tasks.Task`1
  name: Task<UserGroup>
  nameWithType: Task<UserGroup>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.UserGroup>
  nameWithType.vb: Task(Of UserGroup)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.UserGroup)
  name.vb: Task(Of UserGroup)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.UserGroup
    name: UserGroup
    nameWithType: UserGroup
    fullName: SuperOffice.WebApi.Data.UserGroup
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.UserGroup
    name: UserGroup
    nameWithType: UserGroup
    fullName: SuperOffice.WebApi.Data.UserGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IUserAgent.SaveUserGroupAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.SaveUserGroupAsync
  isExternal: true
  name: SaveUserGroupAsync
  nameWithType: IUserAgent.SaveUserGroupAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.SaveUserGroupAsync
- uid: SuperOffice.WebApi.Data.UserGroup
  commentId: T:SuperOffice.WebApi.Data.UserGroup
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: UserGroup
  nameWithType: UserGroup
  fullName: SuperOffice.WebApi.Data.UserGroup
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetAllUserGroupsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.GetAllUserGroupsAsync
  isExternal: true
  name: GetAllUserGroupsAsync
  nameWithType: IUserAgent.GetAllUserGroupsAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetAllUserGroupsAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.UserGroup[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.UserGroup[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<UserGroup[]>
  nameWithType: Task<UserGroup[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.UserGroup[]>
  nameWithType.vb: Task(Of UserGroup())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.UserGroup())
  name.vb: Task(Of UserGroup())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.UserGroup
    name: UserGroup
    nameWithType: UserGroup
    fullName: SuperOffice.WebApi.Data.UserGroup
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.UserGroup
    name: UserGroup
    nameWithType: UserGroup
    fullName: SuperOffice.WebApi.Data.UserGroup
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IUserAgent.CreateUserGroupAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.CreateUserGroupAsync
  isExternal: true
  name: CreateUserGroupAsync
  nameWithType: IUserAgent.CreateUserGroupAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.CreateUserGroupAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.DeleteUserGroupAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.DeleteUserGroupAsync
  isExternal: true
  name: DeleteUserGroupAsync
  nameWithType: IUserAgent.DeleteUserGroupAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.DeleteUserGroupAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetUserGroupListAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.GetUserGroupListAsync
  isExternal: true
  name: GetUserGroupListAsync
  nameWithType: IUserAgent.GetUserGroupListAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetUserGroupListAsync
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetUserInfoAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.GetUserInfoAsync
  isExternal: true
  name: GetUserInfoAsync
  nameWithType: IUserAgent.GetUserInfoAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetUserInfoAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.UserInfo}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.UserInfo}'
  definition: System.Threading.Tasks.Task`1
  name: Task<UserInfo>
  nameWithType: Task<UserInfo>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.UserInfo>
  nameWithType.vb: Task(Of UserInfo)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.UserInfo)
  name.vb: Task(Of UserInfo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.UserInfo
    name: UserInfo
    nameWithType: UserInfo
    fullName: SuperOffice.WebApi.Data.UserInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.UserInfo
    name: UserInfo
    nameWithType: UserInfo
    fullName: SuperOffice.WebApi.Data.UserInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IUserAgent.GetUserInfoListAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IUserAgent.GetUserInfoListAsync
  isExternal: true
  name: GetUserInfoListAsync
  nameWithType: IUserAgent.GetUserInfoListAsync
  fullName: SuperOffice.WebApi.Agents.IUserAgent.GetUserInfoListAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.UserInfo[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.UserInfo[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<UserInfo[]>
  nameWithType: Task<UserInfo[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.UserInfo[]>
  nameWithType.vb: Task(Of UserInfo())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.UserInfo())
  name.vb: Task(Of UserInfo())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.UserInfo
    name: UserInfo
    nameWithType: UserInfo
    fullName: SuperOffice.WebApi.Data.UserInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.UserInfo
    name: UserInfo
    nameWithType: UserInfo
    fullName: SuperOffice.WebApi.Data.UserInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
