### YamlMime:ManagedReference
items:
- uid: SuperOffice.WebApi.Agents.IMDOAgent
  commentId: T:SuperOffice.WebApi.Agents.IMDOAgent
  id: IMDOAgent
  parent: SuperOffice.WebApi.Agents
  children:
  - SuperOffice.WebApi.Agents.IMDOAgent.GetListAsync(System.String,System.Boolean,System.String,System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IMDOAgent.GetListIdByListNameAsync(System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IMDOAgent.GetListItemAsync(System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IMDOAgent.GetListNamesAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IMDOAgent.GetListWithHistoryAsync(System.String,System.Boolean,System.String,System.Int32[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IMDOAgent.GetListWithRestrictionAsync(System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IMDOAgent.GetSelectableListAsync(System.String,System.Boolean,System.String,System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IMDOAgent.GetSelectableListWithHistoryAsync(System.String,System.Boolean,System.String,System.Int32[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IMDOAgent.GetSelectableListWithRestrictionAsync(System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IMDOAgent.GetSelectableSimpleListAsync(System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IMDOAgent.GetSimpleListAsync(System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.IMDOAgent.SetSelectedAsync(System.String,System.String,SuperOffice.WebApi.Data.SelectableMDOListItem[],SuperOffice.WebApi.RequestOptions)
  langs:
  - csharp
  - vb
  name: IMDOAgent
  nameWithType: IMDOAgent
  fullName: SuperOffice.WebApi.Agents.IMDOAgent
  type: Interface
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMDO Lists, reading, searching, and item lookup.\n"
  syntax:
    content: 'public interface IMDOAgent : IDisposable'
    content.vb: >-
      Public Interface IMDOAgent
          Inherits IDisposable
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.WebApi.Agents.IMDOAgent.GetListAsync(System.String,System.Boolean,System.String,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IMDOAgent.GetListAsync(System.String,System.Boolean,System.String,System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: GetListAsync(System.String,System.Boolean,System.String,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IMDOAgent
  langs:
  - csharp
  - vb
  name: GetListAsync(String, Boolean, String, Boolean, RequestOptions)
  nameWithType: IMDOAgent.GetListAsync(String, Boolean, String, Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IMDOAgent.GetListAsync(System.String, System.Boolean, System.String, System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod to get a MDO list.\n"
  syntax:
    content: Task<MDOListItem[]> GetListAsync(string name, bool forceFlatList, string additionalInfo, bool onlyHistory, RequestOptions requestOptions = null)
    parameters:
    - id: name
      type: System.String
      description: Conceptual name of the MDO list-
    - id: forceFlatList
      type: System.Boolean
      description: Force the list to be flat
    - id: additionalInfo
      type: System.String
      description: Additional info to the MDO provider
    - id: onlyHistory
      type: System.Boolean
      description: If true, return only history items
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.MDOListItem[]}
      description: Array of MDOListItem
    content.vb: Function GetListAsync(name As String, forceFlatList As Boolean, additionalInfo As String, onlyHistory As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of MDOListItem())
  overload: SuperOffice.WebApi.Agents.IMDOAgent.GetListAsync*
- uid: SuperOffice.WebApi.Agents.IMDOAgent.GetListWithHistoryAsync(System.String,System.Boolean,System.String,System.Int32[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IMDOAgent.GetListWithHistoryAsync(System.String,System.Boolean,System.String,System.Int32[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: GetListWithHistoryAsync(System.String,System.Boolean,System.String,System.Int32[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IMDOAgent
  langs:
  - csharp
  - vb
  name: GetListWithHistoryAsync(String, Boolean, String, Int32[], Boolean, RequestOptions)
  nameWithType: IMDOAgent.GetListWithHistoryAsync(String, Boolean, String, Int32[], Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IMDOAgent.GetListWithHistoryAsync(System.String, System.Boolean, System.String, System.Int32[], System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod to get a MDO list with own history list.\n"
  syntax:
    content: Task<MDOListItem[]> GetListWithHistoryAsync(string name, bool forceFlatList, string additionalInfo, int[] historyItems, bool onlyHistory, RequestOptions requestOptions = null)
    parameters:
    - id: name
      type: System.String
      description: Conceptual name of the MDO list-
    - id: forceFlatList
      type: System.Boolean
      description: Force the list to be flat
    - id: additionalInfo
      type: System.String
      description: Additional info to the MDO provider
    - id: historyItems
      type: System.Int32[]
      description: An array of ids, used to get the history list
    - id: onlyHistory
      type: System.Boolean
      description: If true, return only history items
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.MDOListItem[]}
      description: Array of MDOListItem
    content.vb: Function GetListWithHistoryAsync(name As String, forceFlatList As Boolean, additionalInfo As String, historyItems As Integer(), onlyHistory As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of MDOListItem())
  overload: SuperOffice.WebApi.Agents.IMDOAgent.GetListWithHistoryAsync*
  nameWithType.vb: IMDOAgent.GetListWithHistoryAsync(String, Boolean, String, Int32(), Boolean, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IMDOAgent.GetListWithHistoryAsync(System.String, System.Boolean, System.String, System.Int32(), System.Boolean, SuperOffice.WebApi.RequestOptions)
  name.vb: GetListWithHistoryAsync(String, Boolean, String, Int32(), Boolean, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IMDOAgent.GetListWithRestrictionAsync(System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IMDOAgent.GetListWithRestrictionAsync(System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetListWithRestrictionAsync(System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IMDOAgent
  langs:
  - csharp
  - vb
  name: GetListWithRestrictionAsync(String, String, String, RequestOptions)
  nameWithType: IMDOAgent.GetListWithRestrictionAsync(String, String, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IMDOAgent.GetListWithRestrictionAsync(System.String, System.String, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod to get a MDO list with restrictions.\n"
  syntax:
    content: Task<MDOListItem[]> GetListWithRestrictionAsync(string name, string additionalInfo, string searchValue, RequestOptions requestOptions = null)
    parameters:
    - id: name
      type: System.String
      description: Conceptual name of the MDO list-
    - id: additionalInfo
      type: System.String
      description: Additional info to the MDO provider
    - id: searchValue
      type: System.String
      description: the value used to restrict the list
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.MDOListItem[]}
      description: Array of MDOListItem
    content.vb: Function GetListWithRestrictionAsync(name As String, additionalInfo As String, searchValue As String, requestOptions As RequestOptions = Nothing) As Task(Of MDOListItem())
  overload: SuperOffice.WebApi.Agents.IMDOAgent.GetListWithRestrictionAsync*
- uid: SuperOffice.WebApi.Agents.IMDOAgent.GetSimpleListAsync(System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IMDOAgent.GetSimpleListAsync(System.String,SuperOffice.WebApi.RequestOptions)
  id: GetSimpleListAsync(System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IMDOAgent
  langs:
  - csharp
  - vb
  name: GetSimpleListAsync(String, RequestOptions)
  nameWithType: IMDOAgent.GetSimpleListAsync(String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IMDOAgent.GetSimpleListAsync(System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod returns a simple flat MDO List.\n"
  syntax:
    content: Task<MDOListItem[]> GetSimpleListAsync(string name, RequestOptions requestOptions = null)
    parameters:
    - id: name
      type: System.String
      description: Conceptual name of the MDO list.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.MDOListItem[]}
      description: Array of MDOListItem
    content.vb: Function GetSimpleListAsync(name As String, requestOptions As RequestOptions = Nothing) As Task(Of MDOListItem())
  overload: SuperOffice.WebApi.Agents.IMDOAgent.GetSimpleListAsync*
- uid: SuperOffice.WebApi.Agents.IMDOAgent.GetListItemAsync(System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IMDOAgent.GetListItemAsync(System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetListItemAsync(System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IMDOAgent
  langs:
  - csharp
  - vb
  name: GetListItemAsync(String, Int32, RequestOptions)
  nameWithType: IMDOAgent.GetListItemAsync(String, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IMDOAgent.GetListItemAsync(System.String, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns a single list item\n"
  syntax:
    content: Task<MDOListItem> GetListItemAsync(string listName, int id, RequestOptions requestOptions = null)
    parameters:
    - id: listName
      type: System.String
      description: Conceptual name of the MDO list
    - id: id
      type: System.Int32
      description: Id of list item
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.MDOListItem}
      description: Single MDO list item
    content.vb: Function GetListItemAsync(listName As String, id As Integer, requestOptions As RequestOptions = Nothing) As Task(Of MDOListItem)
  overload: SuperOffice.WebApi.Agents.IMDOAgent.GetListItemAsync*
- uid: SuperOffice.WebApi.Agents.IMDOAgent.GetListNamesAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IMDOAgent.GetListNamesAsync(SuperOffice.WebApi.RequestOptions)
  id: GetListNamesAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IMDOAgent
  langs:
  - csharp
  - vb
  name: GetListNamesAsync(RequestOptions)
  nameWithType: IMDOAgent.GetListNamesAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IMDOAgent.GetListNamesAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns a list of all MDO List names. These names can also be used with the Archive agent as ProviderNames.\n"
  syntax:
    content: Task<string[]> GetListNamesAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.String[]}
      description: Array of list names.
    content.vb: Function GetListNamesAsync(requestOptions As RequestOptions = Nothing) As Task(Of String())
  overload: SuperOffice.WebApi.Agents.IMDOAgent.GetListNamesAsync*
- uid: SuperOffice.WebApi.Agents.IMDOAgent.GetListIdByListNameAsync(System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IMDOAgent.GetListIdByListNameAsync(System.String,SuperOffice.WebApi.RequestOptions)
  id: GetListIdByListNameAsync(System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IMDOAgent
  langs:
  - csharp
  - vb
  name: GetListIdByListNameAsync(String, RequestOptions)
  nameWithType: IMDOAgent.GetListIdByListNameAsync(String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IMDOAgent.GetListIdByListNameAsync(System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nRetrieve the UdListDefinition id of a list, by its name. Not all lists have such an ID, but those that are based on tables do (the list name is then the same as the table name)\n"
  syntax:
    content: Task<int> GetListIdByListNameAsync(string name, RequestOptions requestOptions = null)
    parameters:
    - id: name
      type: System.String
      description: The list name, same as the table name for lists that are backed by tables
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: List id in the UdListDefinition table
    content.vb: Function GetListIdByListNameAsync(name As String, requestOptions As RequestOptions = Nothing) As Task(Of Integer)
  overload: SuperOffice.WebApi.Agents.IMDOAgent.GetListIdByListNameAsync*
- uid: SuperOffice.WebApi.Agents.IMDOAgent.GetSelectableSimpleListAsync(System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IMDOAgent.GetSelectableSimpleListAsync(System.String,SuperOffice.WebApi.RequestOptions)
  id: GetSelectableSimpleListAsync(System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IMDOAgent
  langs:
  - csharp
  - vb
  name: GetSelectableSimpleListAsync(String, RequestOptions)
  nameWithType: IMDOAgent.GetSelectableSimpleListAsync(String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IMDOAgent.GetSelectableSimpleListAsync(System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod returns a flat Selectable MDO List.\n"
  syntax:
    content: Task<SelectableMDOListItem[]> GetSelectableSimpleListAsync(string name, RequestOptions requestOptions = null)
    parameters:
    - id: name
      type: System.String
      description: Conceptual name of the MDO list
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SelectableMDOListItem[]}
      description: Array of SelectableMDOListItem
    content.vb: Function GetSelectableSimpleListAsync(name As String, requestOptions As RequestOptions = Nothing) As Task(Of SelectableMDOListItem())
  overload: SuperOffice.WebApi.Agents.IMDOAgent.GetSelectableSimpleListAsync*
- uid: SuperOffice.WebApi.Agents.IMDOAgent.GetSelectableListWithRestrictionAsync(System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IMDOAgent.GetSelectableListWithRestrictionAsync(System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetSelectableListWithRestrictionAsync(System.String,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IMDOAgent
  langs:
  - csharp
  - vb
  name: GetSelectableListWithRestrictionAsync(String, String, String, RequestOptions)
  nameWithType: IMDOAgent.GetSelectableListWithRestrictionAsync(String, String, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IMDOAgent.GetSelectableListWithRestrictionAsync(System.String, System.String, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod to get a Selectable MDO list with restrictions.\n"
  syntax:
    content: Task<SelectableMDOListItem[]> GetSelectableListWithRestrictionAsync(string name, string additionalInfo, string searchValue, RequestOptions requestOptions = null)
    parameters:
    - id: name
      type: System.String
      description: Conceptual name of the MDO list
    - id: additionalInfo
      type: System.String
      description: Additional info to the MDO provider
    - id: searchValue
      type: System.String
      description: the value used to restrict the list
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SelectableMDOListItem[]}
      description: Array of SelectableMDOListItem
    content.vb: Function GetSelectableListWithRestrictionAsync(name As String, additionalInfo As String, searchValue As String, requestOptions As RequestOptions = Nothing) As Task(Of SelectableMDOListItem())
  overload: SuperOffice.WebApi.Agents.IMDOAgent.GetSelectableListWithRestrictionAsync*
- uid: SuperOffice.WebApi.Agents.IMDOAgent.GetSelectableListWithHistoryAsync(System.String,System.Boolean,System.String,System.Int32[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IMDOAgent.GetSelectableListWithHistoryAsync(System.String,System.Boolean,System.String,System.Int32[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: GetSelectableListWithHistoryAsync(System.String,System.Boolean,System.String,System.Int32[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IMDOAgent
  langs:
  - csharp
  - vb
  name: GetSelectableListWithHistoryAsync(String, Boolean, String, Int32[], Boolean, RequestOptions)
  nameWithType: IMDOAgent.GetSelectableListWithHistoryAsync(String, Boolean, String, Int32[], Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IMDOAgent.GetSelectableListWithHistoryAsync(System.String, System.Boolean, System.String, System.Int32[], System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod to get a Selectable MDO list with own history list.\n"
  syntax:
    content: Task<SelectableMDOListItem[]> GetSelectableListWithHistoryAsync(string name, bool forceFlatList, string additionalInfo, int[] historyItems, bool onlyHistory, RequestOptions requestOptions = null)
    parameters:
    - id: name
      type: System.String
      description: Conceptual name of the MDO list.
    - id: forceFlatList
      type: System.Boolean
      description: Force the list to be flat
    - id: additionalInfo
      type: System.String
      description: Additional info to the MDO provider
    - id: historyItems
      type: System.Int32[]
      description: An array of ids, used to get the history list
    - id: onlyHistory
      type: System.Boolean
      description: If true, return only history items
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SelectableMDOListItem[]}
      description: Array of SelectableMDOListItem
    content.vb: Function GetSelectableListWithHistoryAsync(name As String, forceFlatList As Boolean, additionalInfo As String, historyItems As Integer(), onlyHistory As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of SelectableMDOListItem())
  overload: SuperOffice.WebApi.Agents.IMDOAgent.GetSelectableListWithHistoryAsync*
  nameWithType.vb: IMDOAgent.GetSelectableListWithHistoryAsync(String, Boolean, String, Int32(), Boolean, RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IMDOAgent.GetSelectableListWithHistoryAsync(System.String, System.Boolean, System.String, System.Int32(), System.Boolean, SuperOffice.WebApi.RequestOptions)
  name.vb: GetSelectableListWithHistoryAsync(String, Boolean, String, Int32(), Boolean, RequestOptions)
- uid: SuperOffice.WebApi.Agents.IMDOAgent.GetSelectableListAsync(System.String,System.Boolean,System.String,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IMDOAgent.GetSelectableListAsync(System.String,System.Boolean,System.String,System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: GetSelectableListAsync(System.String,System.Boolean,System.String,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IMDOAgent
  langs:
  - csharp
  - vb
  name: GetSelectableListAsync(String, Boolean, String, Boolean, RequestOptions)
  nameWithType: IMDOAgent.GetSelectableListAsync(String, Boolean, String, Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IMDOAgent.GetSelectableListAsync(System.String, System.Boolean, System.String, System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod to get a Selectable MDO list.\n"
  syntax:
    content: Task<SelectableMDOListItem[]> GetSelectableListAsync(string name, bool forceFlatList, string additionalInfo, bool onlyHistory, RequestOptions requestOptions = null)
    parameters:
    - id: name
      type: System.String
      description: Conceptual name of the MDO list.
    - id: forceFlatList
      type: System.Boolean
      description: Force the list to be flat
    - id: additionalInfo
      type: System.String
      description: Additional info to the MDO provider
    - id: onlyHistory
      type: System.Boolean
      description: If true, return only history items
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SelectableMDOListItem[]}
      description: Array of SelectableMDOListItem
    content.vb: Function GetSelectableListAsync(name As String, forceFlatList As Boolean, additionalInfo As String, onlyHistory As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of SelectableMDOListItem())
  overload: SuperOffice.WebApi.Agents.IMDOAgent.GetSelectableListAsync*
- uid: SuperOffice.WebApi.Agents.IMDOAgent.SetSelectedAsync(System.String,System.String,SuperOffice.WebApi.Data.SelectableMDOListItem[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.IMDOAgent.SetSelectedAsync(System.String,System.String,SuperOffice.WebApi.Data.SelectableMDOListItem[],SuperOffice.WebApi.RequestOptions)
  id: SetSelectedAsync(System.String,System.String,SuperOffice.WebApi.Data.SelectableMDOListItem[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.IMDOAgent
  langs:
  - csharp
  - vb
  name: SetSelectedAsync(String, String, SelectableMDOListItem[], RequestOptions)
  nameWithType: IMDOAgent.SetSelectedAsync(String, String, SelectableMDOListItem[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.IMDOAgent.SetSelectedAsync(System.String, System.String, SuperOffice.WebApi.Data.SelectableMDOListItem[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSaves the selected values as selected by their given list representation.\n"
  syntax:
    content: Task<SelectableMDOListItem[]> SetSelectedAsync(string name, string additionalInfo, SelectableMDOListItem[] selectableMDOList, RequestOptions requestOptions = null)
    parameters:
    - id: name
      type: System.String
      description: Conceptual name of the MDO list
    - id: additionalInfo
      type: System.String
      description: Additional info to the MDO provider
    - id: selectableMDOList
      type: SuperOffice.WebApi.Data.SelectableMDOListItem[]
      description: Items to be updated
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SelectableMDOListItem[]}
      description: Array of updated SelectableMDOListItems
    content.vb: Function SetSelectedAsync(name As String, additionalInfo As String, selectableMDOList As SelectableMDOListItem(), requestOptions As RequestOptions = Nothing) As Task(Of SelectableMDOListItem())
  overload: SuperOffice.WebApi.Agents.IMDOAgent.SetSelectedAsync*
  nameWithType.vb: IMDOAgent.SetSelectedAsync(String, String, SelectableMDOListItem(), RequestOptions)
  fullName.vb: SuperOffice.WebApi.Agents.IMDOAgent.SetSelectedAsync(System.String, System.String, SuperOffice.WebApi.Data.SelectableMDOListItem(), SuperOffice.WebApi.RequestOptions)
  name.vb: SetSelectedAsync(String, String, SelectableMDOListItem(), RequestOptions)
references:
- uid: SuperOffice.WebApi.Agents
  commentId: N:SuperOffice.WebApi.Agents
  isExternal: true
  name: SuperOffice.WebApi.Agents
  nameWithType: SuperOffice.WebApi.Agents
  fullName: SuperOffice.WebApi.Agents
- uid: SuperOffice.WebApi.Agents.IMDOAgent.GetListAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IMDOAgent.GetListAsync
  isExternal: true
  name: GetListAsync
  nameWithType: IMDOAgent.GetListAsync
  fullName: SuperOffice.WebApi.Agents.IMDOAgent.GetListAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.WebApi.RequestOptions
  commentId: T:SuperOffice.WebApi.RequestOptions
  parent: SuperOffice.WebApi
  isExternal: true
  name: RequestOptions
  nameWithType: RequestOptions
  fullName: SuperOffice.WebApi.RequestOptions
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.MDOListItem[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.MDOListItem[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<MDOListItem[]>
  nameWithType: Task<MDOListItem[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.MDOListItem[]>
  nameWithType.vb: Task(Of MDOListItem())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.MDOListItem())
  name.vb: Task(Of MDOListItem())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.MDOListItem
    name: MDOListItem
    nameWithType: MDOListItem
    fullName: SuperOffice.WebApi.Data.MDOListItem
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.MDOListItem
    name: MDOListItem
    nameWithType: MDOListItem
    fullName: SuperOffice.WebApi.Data.MDOListItem
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.WebApi
  commentId: N:SuperOffice.WebApi
  isExternal: true
  name: SuperOffice.WebApi
  nameWithType: SuperOffice.WebApi
  fullName: SuperOffice.WebApi
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IMDOAgent.GetListWithHistoryAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IMDOAgent.GetListWithHistoryAsync
  isExternal: true
  name: GetListWithHistoryAsync
  nameWithType: IMDOAgent.GetListWithHistoryAsync
  fullName: SuperOffice.WebApi.Agents.IMDOAgent.GetListWithHistoryAsync
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.WebApi.Agents.IMDOAgent.GetListWithRestrictionAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IMDOAgent.GetListWithRestrictionAsync
  isExternal: true
  name: GetListWithRestrictionAsync
  nameWithType: IMDOAgent.GetListWithRestrictionAsync
  fullName: SuperOffice.WebApi.Agents.IMDOAgent.GetListWithRestrictionAsync
- uid: SuperOffice.WebApi.Agents.IMDOAgent.GetSimpleListAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IMDOAgent.GetSimpleListAsync
  isExternal: true
  name: GetSimpleListAsync
  nameWithType: IMDOAgent.GetSimpleListAsync
  fullName: SuperOffice.WebApi.Agents.IMDOAgent.GetSimpleListAsync
- uid: SuperOffice.WebApi.Agents.IMDOAgent.GetListItemAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IMDOAgent.GetListItemAsync
  isExternal: true
  name: GetListItemAsync
  nameWithType: IMDOAgent.GetListItemAsync
  fullName: SuperOffice.WebApi.Agents.IMDOAgent.GetListItemAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.MDOListItem}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.MDOListItem}'
  definition: System.Threading.Tasks.Task`1
  name: Task<MDOListItem>
  nameWithType: Task<MDOListItem>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.MDOListItem>
  nameWithType.vb: Task(Of MDOListItem)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.MDOListItem)
  name.vb: Task(Of MDOListItem)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.MDOListItem
    name: MDOListItem
    nameWithType: MDOListItem
    fullName: SuperOffice.WebApi.Data.MDOListItem
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.MDOListItem
    name: MDOListItem
    nameWithType: MDOListItem
    fullName: SuperOffice.WebApi.Data.MDOListItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IMDOAgent.GetListNamesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IMDOAgent.GetListNamesAsync
  isExternal: true
  name: GetListNamesAsync
  nameWithType: IMDOAgent.GetListNamesAsync
  fullName: SuperOffice.WebApi.Agents.IMDOAgent.GetListNamesAsync
- uid: System.Threading.Tasks.Task{System.String[]}
  commentId: '!:System.Threading.Tasks.Task{System.String[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<String[]>
  nameWithType: Task<String[]>
  fullName: System.Threading.Tasks.Task<System.String[]>
  nameWithType.vb: Task(Of String())
  fullName.vb: System.Threading.Tasks.Task(Of System.String())
  name.vb: Task(Of String())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IMDOAgent.GetListIdByListNameAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IMDOAgent.GetListIdByListNameAsync
  isExternal: true
  name: GetListIdByListNameAsync
  nameWithType: IMDOAgent.GetListIdByListNameAsync
  fullName: SuperOffice.WebApi.Agents.IMDOAgent.GetListIdByListNameAsync
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: '!:System.Threading.Tasks.Task{System.Int32}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  nameWithType.vb: Task(Of Int32)
  fullName.vb: System.Threading.Tasks.Task(Of System.Int32)
  name.vb: Task(Of Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IMDOAgent.GetSelectableSimpleListAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IMDOAgent.GetSelectableSimpleListAsync
  isExternal: true
  name: GetSelectableSimpleListAsync
  nameWithType: IMDOAgent.GetSelectableSimpleListAsync
  fullName: SuperOffice.WebApi.Agents.IMDOAgent.GetSelectableSimpleListAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SelectableMDOListItem[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SelectableMDOListItem[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<SelectableMDOListItem[]>
  nameWithType: Task<SelectableMDOListItem[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.SelectableMDOListItem[]>
  nameWithType.vb: Task(Of SelectableMDOListItem())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.SelectableMDOListItem())
  name.vb: Task(Of SelectableMDOListItem())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.SelectableMDOListItem
    name: SelectableMDOListItem
    nameWithType: SelectableMDOListItem
    fullName: SuperOffice.WebApi.Data.SelectableMDOListItem
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.SelectableMDOListItem
    name: SelectableMDOListItem
    nameWithType: SelectableMDOListItem
    fullName: SuperOffice.WebApi.Data.SelectableMDOListItem
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.IMDOAgent.GetSelectableListWithRestrictionAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IMDOAgent.GetSelectableListWithRestrictionAsync
  isExternal: true
  name: GetSelectableListWithRestrictionAsync
  nameWithType: IMDOAgent.GetSelectableListWithRestrictionAsync
  fullName: SuperOffice.WebApi.Agents.IMDOAgent.GetSelectableListWithRestrictionAsync
- uid: SuperOffice.WebApi.Agents.IMDOAgent.GetSelectableListWithHistoryAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IMDOAgent.GetSelectableListWithHistoryAsync
  isExternal: true
  name: GetSelectableListWithHistoryAsync
  nameWithType: IMDOAgent.GetSelectableListWithHistoryAsync
  fullName: SuperOffice.WebApi.Agents.IMDOAgent.GetSelectableListWithHistoryAsync
- uid: SuperOffice.WebApi.Agents.IMDOAgent.GetSelectableListAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IMDOAgent.GetSelectableListAsync
  isExternal: true
  name: GetSelectableListAsync
  nameWithType: IMDOAgent.GetSelectableListAsync
  fullName: SuperOffice.WebApi.Agents.IMDOAgent.GetSelectableListAsync
- uid: SuperOffice.WebApi.Agents.IMDOAgent.SetSelectedAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.IMDOAgent.SetSelectedAsync
  isExternal: true
  name: SetSelectedAsync
  nameWithType: IMDOAgent.SetSelectedAsync
  fullName: SuperOffice.WebApi.Agents.IMDOAgent.SetSelectedAsync
- uid: SuperOffice.WebApi.Data.SelectableMDOListItem[]
  isExternal: true
  name: SelectableMDOListItem[]
  nameWithType: SelectableMDOListItem[]
  fullName: SuperOffice.WebApi.Data.SelectableMDOListItem[]
  nameWithType.vb: SelectableMDOListItem()
  fullName.vb: SuperOffice.WebApi.Data.SelectableMDOListItem()
  name.vb: SelectableMDOListItem()
  spec.csharp:
  - uid: SuperOffice.WebApi.Data.SelectableMDOListItem
    name: SelectableMDOListItem
    nameWithType: SelectableMDOListItem
    fullName: SuperOffice.WebApi.Data.SelectableMDOListItem
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.WebApi.Data.SelectableMDOListItem
    name: SelectableMDOListItem
    nameWithType: SelectableMDOListItem
    fullName: SuperOffice.WebApi.Data.SelectableMDOListItem
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
