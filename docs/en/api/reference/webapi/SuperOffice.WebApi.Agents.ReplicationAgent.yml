### YamlMime:ManagedReference
items:
- uid: SuperOffice.WebApi.Agents.ReplicationAgent
  commentId: T:SuperOffice.WebApi.Agents.ReplicationAgent
  id: ReplicationAgent
  parent: SuperOffice.WebApi.Agents
  children:
  - SuperOffice.WebApi.Agents.ReplicationAgent.#ctor(SuperOffice.WebApi.WebApiOptions,System.Net.Http.HttpClient)
  - SuperOffice.WebApi.Agents.ReplicationAgent.#ctor(System.Net.Http.HttpClient)
  - SuperOffice.WebApi.Agents.ReplicationAgent.CreateDefaultSatelliteAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ReplicationAgent.GetAreaAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ReplicationAgent.GetAreaListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ReplicationAgent.GetCentralLicenseAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ReplicationAgent.GetSatelliteAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ReplicationAgent.SaveCentralLicenseAsync(SuperOffice.WebApi.Data.LicenseOwner[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ReplicationAgent.SaveSatelliteAsync(SuperOffice.WebApi.Data.Satellite,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ReplicationAgent.SetFreetextSearchEnabledOnAreaAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  langs:
  - csharp
  - vb
  name: ReplicationAgent
  nameWithType: ReplicationAgent
  fullName: SuperOffice.WebApi.Agents.ReplicationAgent
  type: Class
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReplication/Travel administration\n<p></p>\n<strong>Online Restricted:</strong> This agent is not available in Online by default. Not available in Online. Only used on-site.\n"
  example:
  - "\n<pre><code>  using SuperOffice.WebApi;\n  using SuperOffice.WebApi.Agents;\n\n  var mySession = new WebApiOptions(&quot;http://example.com/super/api&quot;);\n  mySession.Authorization = new AuthorizationUsernamePassword(&quot;user&quot;, &quot;pass&quot;);\n  using (ReplicationAgent agent = new ReplicationAgent(mySession))\n  {\n        // call methods on agent here...\n  }</code></pre>\n"
  syntax:
    content: 'public class ReplicationAgent : AgentBase, IDisposable'
    content.vb: >-
      Public Class ReplicationAgent
          Inherits AgentBase
          Implements IDisposable
  inheritance:
  - System.Object
  - SuperOffice.WebApi.Agents.AgentBase
  implements:
  - System.IDisposable
  inheritedMembers:
  - SuperOffice.WebApi.Agents.AgentBase._json
  - SuperOffice.WebApi.Agents.AgentBase._binary
  - SuperOffice.WebApi.Agents.AgentBase._config
  - SuperOffice.WebApi.Agents.AgentBase._client
  - SuperOffice.WebApi.Agents.AgentBase.Merge(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
  - SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream(System.Net.Http.HttpMethod,System.String,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
  - SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization(SuperOffice.WebApi.IAuthorization)
  - SuperOffice.WebApi.Agents.AgentBase.CancelRequest
  - SuperOffice.WebApi.Agents.AgentBase.SendRequestObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
  - SuperOffice.WebApi.Agents.AgentBase.SendRequest(System.Net.Http.HttpRequestMessage,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage)
  - SuperOffice.WebApi.Agents.AgentBase.ParseResponse``1(System.Net.Http.HttpResponseMessage)
  - SuperOffice.WebApi.Agents.AgentBase.Finally(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AgentBase.Dispose
  - SuperOffice.WebApi.Agents.AgentBase.Configuration
  - SuperOffice.WebApi.Agents.AgentBase.Client
  - SuperOffice.WebApi.Agents.AgentBase.HasRunningRequest
  - SuperOffice.WebApi.Agents.AgentBase.ClientCancellationTokenSource
  - SuperOffice.WebApi.Agents.AgentBase.ProgressListener
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.WebApi.Agents.ReplicationAgent.#ctor(System.Net.Http.HttpClient)
  commentId: M:SuperOffice.WebApi.Agents.ReplicationAgent.#ctor(System.Net.Http.HttpClient)
  id: '#ctor(System.Net.Http.HttpClient)'
  parent: SuperOffice.WebApi.Agents.ReplicationAgent
  langs:
  - csharp
  - vb
  name: ReplicationAgent(HttpClient)
  nameWithType: ReplicationAgent.ReplicationAgent(HttpClient)
  fullName: SuperOffice.WebApi.Agents.ReplicationAgent.ReplicationAgent(System.Net.Http.HttpClient)
  type: Constructor
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nConstructor: Replication/Travel administration\n"
  syntax:
    content: public ReplicationAgent(HttpClient httpClient)
    parameters:
    - id: httpClient
      type: System.Net.Http.HttpClient
      description: Use this HTTP client instead of making a new one. Client is disposed when agent is disposed.
    content.vb: Public Sub New(httpClient As HttpClient)
  overload: SuperOffice.WebApi.Agents.ReplicationAgent.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ReplicationAgent.#ctor(SuperOffice.WebApi.WebApiOptions,System.Net.Http.HttpClient)
  commentId: M:SuperOffice.WebApi.Agents.ReplicationAgent.#ctor(SuperOffice.WebApi.WebApiOptions,System.Net.Http.HttpClient)
  id: '#ctor(SuperOffice.WebApi.WebApiOptions,System.Net.Http.HttpClient)'
  parent: SuperOffice.WebApi.Agents.ReplicationAgent
  langs:
  - csharp
  - vb
  name: ReplicationAgent(WebApiOptions, HttpClient)
  nameWithType: ReplicationAgent.ReplicationAgent(WebApiOptions, HttpClient)
  fullName: SuperOffice.WebApi.Agents.ReplicationAgent.ReplicationAgent(SuperOffice.WebApi.WebApiOptions, System.Net.Http.HttpClient)
  type: Constructor
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nConstructor: Replication/Travel administration\n"
  syntax:
    content: public ReplicationAgent(WebApiOptions options, HttpClient httpClient = null)
    parameters:
    - id: options
      type: SuperOffice.WebApi.WebApiOptions
      description: Base URL and authentication values.
    - id: httpClient
      type: System.Net.Http.HttpClient
      description: 'Optional: Use this HTTP client instead of making a new one. Client is disposed when agent is disposed.'
    content.vb: Public Sub New(options As WebApiOptions, httpClient As HttpClient = Nothing)
  overload: SuperOffice.WebApi.Agents.ReplicationAgent.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ReplicationAgent.CreateDefaultSatelliteAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ReplicationAgent.CreateDefaultSatelliteAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultSatelliteAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ReplicationAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultSatelliteAsync(RequestOptions)
  nameWithType: ReplicationAgent.CreateDefaultSatelliteAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ReplicationAgent.CreateDefaultSatelliteAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet default values into a new Satellite.\nNetServer calculates default values on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: public Task<Satellite> CreateDefaultSatelliteAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Satellite}
      description: A blank Satellite
    content.vb: Public Function CreateDefaultSatelliteAsync(requestOptions As RequestOptions = Nothing) As Task(Of Satellite)
  overload: SuperOffice.WebApi.Agents.ReplicationAgent.CreateDefaultSatelliteAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ReplicationAgent.SaveSatelliteAsync(SuperOffice.WebApi.Data.Satellite,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ReplicationAgent.SaveSatelliteAsync(SuperOffice.WebApi.Data.Satellite,SuperOffice.WebApi.RequestOptions)
  id: SaveSatelliteAsync(SuperOffice.WebApi.Data.Satellite,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ReplicationAgent
  langs:
  - csharp
  - vb
  name: SaveSatelliteAsync(Satellite, RequestOptions)
  nameWithType: ReplicationAgent.SaveSatelliteAsync(Satellite, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ReplicationAgent.SaveSatelliteAsync(SuperOffice.WebApi.Data.Satellite, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdates the existing Satellite or creates a new Satellite if the id parameter is 0. \n<p></p>\n<strong>Online Restricted:</strong> The Replication agent is not available in Online by default. Not available in Online. Only used on-site.\n"
  syntax:
    content: public Task<Satellite> SaveSatelliteAsync(Satellite satellite, RequestOptions requestOptions = null)
    parameters:
    - id: satellite
      type: SuperOffice.WebApi.Data.Satellite
      description: The Satellite that is saved.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Satellite}
      description: New or updated Satellite
    content.vb: Public Function SaveSatelliteAsync(satellite As Satellite, requestOptions As RequestOptions = Nothing) As Task(Of Satellite)
  overload: SuperOffice.WebApi.Agents.ReplicationAgent.SaveSatelliteAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ReplicationAgent.GetAreaAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ReplicationAgent.GetAreaAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetAreaAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ReplicationAgent
  langs:
  - csharp
  - vb
  name: GetAreaAsync(Int32, RequestOptions)
  nameWithType: ReplicationAgent.GetAreaAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ReplicationAgent.GetAreaAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific Area object.                        \n<p></p>\n<strong>Online Restricted:</strong> The Replication agent is not available in Online by default. Not available in Online. Only used on-site.\n"
  syntax:
    content: public Task<Area> GetAreaAsync(int areaId, RequestOptions requestOptions = null)
    parameters:
    - id: areaId
      type: System.Int32
      description: The identifier of the Area object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Area}
      description: Area
    content.vb: Public Function GetAreaAsync(areaId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Area)
  overload: SuperOffice.WebApi.Agents.ReplicationAgent.GetAreaAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ReplicationAgent.SetFreetextSearchEnabledOnAreaAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ReplicationAgent.SetFreetextSearchEnabledOnAreaAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: SetFreetextSearchEnabledOnAreaAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ReplicationAgent
  langs:
  - csharp
  - vb
  name: SetFreetextSearchEnabledOnAreaAsync(Int32, Boolean, RequestOptions)
  nameWithType: ReplicationAgent.SetFreetextSearchEnabledOnAreaAsync(Int32, Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ReplicationAgent.SetFreetextSearchEnabledOnAreaAsync(System.Int32, System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nEnable freetext search on this area\n<p></p>\n<strong>Online Restricted:</strong> The Replication agent is not available in Online by default. Not available in Online. Only used on-site.\n"
  syntax:
    content: public Task SetFreetextSearchEnabledOnAreaAsync(int areaId, bool freetextEnabled, RequestOptions requestOptions = null)
    parameters:
    - id: areaId
      type: System.Int32
      description: The id of the area
    - id: freetextEnabled
      type: System.Boolean
      description: True if freetextSearch on this area shall be enabled
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
      description: No return value
    content.vb: Public Function SetFreetextSearchEnabledOnAreaAsync(areaId As Integer, freetextEnabled As Boolean, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.ReplicationAgent.SetFreetextSearchEnabledOnAreaAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ReplicationAgent.GetAreaListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ReplicationAgent.GetAreaListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetAreaListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ReplicationAgent
  langs:
  - csharp
  - vb
  name: GetAreaListAsync(Int32[], RequestOptions)
  nameWithType: ReplicationAgent.GetAreaListAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ReplicationAgent.GetAreaListAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets an array of specific Area objects.                        \n<p></p>\n<strong>Online Restricted:</strong> The Replication agent is not available in Online by default. Not available in Online. Only used on-site.\n"
  syntax:
    content: public Task<Area[]> GetAreaListAsync(int[] areaIds, RequestOptions requestOptions = null)
    parameters:
    - id: areaIds
      type: System.Int32[]
      description: The identifiers of the Area object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Area[]}
      description: Array of Area objects
    content.vb: Public Function GetAreaListAsync(areaIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of Area())
  overload: SuperOffice.WebApi.Agents.ReplicationAgent.GetAreaListAsync*
  nameWithType.vb: ReplicationAgent.GetAreaListAsync(Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ReplicationAgent.GetAreaListAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetAreaListAsync(Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ReplicationAgent.GetSatelliteAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ReplicationAgent.GetSatelliteAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetSatelliteAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ReplicationAgent
  langs:
  - csharp
  - vb
  name: GetSatelliteAsync(Int32, RequestOptions)
  nameWithType: ReplicationAgent.GetSatelliteAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ReplicationAgent.GetSatelliteAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific Satellite object.                        \n<p></p>\n<strong>Online Restricted:</strong> The Replication agent is not available in Online by default. Not available in Online. Only used on-site.\n"
  syntax:
    content: public Task<Satellite> GetSatelliteAsync(int satelliteId, RequestOptions requestOptions = null)
    parameters:
    - id: satelliteId
      type: System.Int32
      description: The identifier of the Satellite object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Satellite}
      description: Satellite
    content.vb: Public Function GetSatelliteAsync(satelliteId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Satellite)
  overload: SuperOffice.WebApi.Agents.ReplicationAgent.GetSatelliteAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ReplicationAgent.GetCentralLicenseAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ReplicationAgent.GetCentralLicenseAsync(SuperOffice.WebApi.RequestOptions)
  id: GetCentralLicenseAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ReplicationAgent
  langs:
  - csharp
  - vb
  name: GetCentralLicenseAsync(RequestOptions)
  nameWithType: ReplicationAgent.GetCentralLicenseAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ReplicationAgent.GetCentralLicenseAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\n\n<p></p>\n<strong>Online Restricted:</strong> The Replication agent is not available in Online by default. Not available in Online. Only used on-site.\n"
  syntax:
    content: public Task<LicenseOwner[]> GetCentralLicenseAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.LicenseOwner[]}
    content.vb: Public Function GetCentralLicenseAsync(requestOptions As RequestOptions = Nothing) As Task(Of LicenseOwner())
  overload: SuperOffice.WebApi.Agents.ReplicationAgent.GetCentralLicenseAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ReplicationAgent.SaveCentralLicenseAsync(SuperOffice.WebApi.Data.LicenseOwner[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ReplicationAgent.SaveCentralLicenseAsync(SuperOffice.WebApi.Data.LicenseOwner[],SuperOffice.WebApi.RequestOptions)
  id: SaveCentralLicenseAsync(SuperOffice.WebApi.Data.LicenseOwner[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ReplicationAgent
  langs:
  - csharp
  - vb
  name: SaveCentralLicenseAsync(LicenseOwner[], RequestOptions)
  nameWithType: ReplicationAgent.SaveCentralLicenseAsync(LicenseOwner[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ReplicationAgent.SaveCentralLicenseAsync(SuperOffice.WebApi.Data.LicenseOwner[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\n\n<p></p>\n<strong>Online Restricted:</strong> The Replication agent is not available in Online by default. Not available in Online. Only used on-site.\n"
  syntax:
    content: public Task<LicenseOwner[]> SaveCentralLicenseAsync(LicenseOwner[] license, RequestOptions requestOptions = null)
    parameters:
    - id: license
      type: SuperOffice.WebApi.Data.LicenseOwner[]
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.LicenseOwner[]}
    content.vb: Public Function SaveCentralLicenseAsync(license As LicenseOwner(), requestOptions As RequestOptions = Nothing) As Task(Of LicenseOwner())
  overload: SuperOffice.WebApi.Agents.ReplicationAgent.SaveCentralLicenseAsync*
  nameWithType.vb: ReplicationAgent.SaveCentralLicenseAsync(LicenseOwner(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ReplicationAgent.SaveCentralLicenseAsync(SuperOffice.WebApi.Data.LicenseOwner(), SuperOffice.WebApi.RequestOptions)
  name.vb: SaveCentralLicenseAsync(LicenseOwner(), RequestOptions)
references:
- uid: SuperOffice.WebApi.Agents
  commentId: N:SuperOffice.WebApi.Agents
  isExternal: true
  name: SuperOffice.WebApi.Agents
  nameWithType: SuperOffice.WebApi.Agents
  fullName: SuperOffice.WebApi.Agents
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.WebApi.Agents.AgentBase
  commentId: T:SuperOffice.WebApi.Agents.AgentBase
  parent: SuperOffice.WebApi.Agents
  isExternal: true
  name: AgentBase
  nameWithType: AgentBase
  fullName: SuperOffice.WebApi.Agents.AgentBase
- uid: System.IDisposable
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: SuperOffice.WebApi.Agents.AgentBase._json
  commentId: F:SuperOffice.WebApi.Agents.AgentBase._json
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: _json
  nameWithType: AgentBase._json
  fullName: SuperOffice.WebApi.Agents.AgentBase._json
- uid: SuperOffice.WebApi.Agents.AgentBase._binary
  commentId: F:SuperOffice.WebApi.Agents.AgentBase._binary
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: _binary
  nameWithType: AgentBase._binary
  fullName: SuperOffice.WebApi.Agents.AgentBase._binary
- uid: SuperOffice.WebApi.Agents.AgentBase._config
  commentId: F:SuperOffice.WebApi.Agents.AgentBase._config
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: _config
  nameWithType: AgentBase._config
  fullName: SuperOffice.WebApi.Agents.AgentBase._config
- uid: SuperOffice.WebApi.Agents.AgentBase._client
  commentId: F:SuperOffice.WebApi.Agents.AgentBase._client
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: _client
  nameWithType: AgentBase._client
  fullName: SuperOffice.WebApi.Agents.AgentBase._client
- uid: SuperOffice.WebApi.Agents.AgentBase.Merge(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.Merge(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: Merge(RequestOptions)
  nameWithType: AgentBase.Merge(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AgentBase.Merge(SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.Merge(SuperOffice.WebApi.RequestOptions)
    name: Merge
    nameWithType: AgentBase.Merge
    fullName: SuperOffice.WebApi.Agents.AgentBase.Merge
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.Merge(SuperOffice.WebApi.RequestOptions)
    name: Merge
    nameWithType: AgentBase.Merge
    fullName: SuperOffice.WebApi.Agents.AgentBase.Merge
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: BuildRequestFromObject(HttpMethod, String, Object, WebApiOptions, String)
  nameWithType: AgentBase.BuildRequestFromObject(HttpMethod, String, Object, WebApiOptions, String)
  fullName: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject(System.Net.Http.HttpMethod, System.String, System.Object, SuperOffice.WebApi.WebApiOptions, System.String)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
    name: BuildRequestFromObject
    nameWithType: AgentBase.BuildRequestFromObject
    fullName: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.WebApiOptions
    name: WebApiOptions
    nameWithType: WebApiOptions
    fullName: SuperOffice.WebApi.WebApiOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
    name: BuildRequestFromObject
    nameWithType: AgentBase.BuildRequestFromObject
    fullName: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.WebApiOptions
    name: WebApiOptions
    nameWithType: WebApiOptions
    fullName: SuperOffice.WebApi.WebApiOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream(System.Net.Http.HttpMethod,System.String,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream(System.Net.Http.HttpMethod,System.String,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: BuildRequestFromStream(HttpMethod, String, Stream, WebApiOptions, String)
  nameWithType: AgentBase.BuildRequestFromStream(HttpMethod, String, Stream, WebApiOptions, String)
  fullName: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream(System.Net.Http.HttpMethod, System.String, System.IO.Stream, SuperOffice.WebApi.WebApiOptions, System.String)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream(System.Net.Http.HttpMethod,System.String,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
    name: BuildRequestFromStream
    nameWithType: AgentBase.BuildRequestFromStream
    fullName: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.WebApiOptions
    name: WebApiOptions
    nameWithType: WebApiOptions
    fullName: SuperOffice.WebApi.WebApiOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream(System.Net.Http.HttpMethod,System.String,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
    name: BuildRequestFromStream
    nameWithType: AgentBase.BuildRequestFromStream
    fullName: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.WebApiOptions
    name: WebApiOptions
    nameWithType: WebApiOptions
    fullName: SuperOffice.WebApi.WebApiOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization(SuperOffice.WebApi.IAuthorization)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization(SuperOffice.WebApi.IAuthorization)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: ParseAuthorization(IAuthorization)
  nameWithType: AgentBase.ParseAuthorization(IAuthorization)
  fullName: SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization(SuperOffice.WebApi.IAuthorization)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization(SuperOffice.WebApi.IAuthorization)
    name: ParseAuthorization
    nameWithType: AgentBase.ParseAuthorization
    fullName: SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.IAuthorization
    name: IAuthorization
    nameWithType: IAuthorization
    fullName: SuperOffice.WebApi.IAuthorization
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization(SuperOffice.WebApi.IAuthorization)
    name: ParseAuthorization
    nameWithType: AgentBase.ParseAuthorization
    fullName: SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.IAuthorization
    name: IAuthorization
    nameWithType: IAuthorization
    fullName: SuperOffice.WebApi.IAuthorization
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.CancelRequest
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.CancelRequest
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: CancelRequest()
  nameWithType: AgentBase.CancelRequest()
  fullName: SuperOffice.WebApi.Agents.AgentBase.CancelRequest()
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.CancelRequest
    name: CancelRequest
    nameWithType: AgentBase.CancelRequest
    fullName: SuperOffice.WebApi.Agents.AgentBase.CancelRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.CancelRequest
    name: CancelRequest
    nameWithType: AgentBase.CancelRequest
    fullName: SuperOffice.WebApi.Agents.AgentBase.CancelRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.SendRequestObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.SendRequestObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: SendRequestObject(HttpMethod, String, Object, WebApiOptions, String)
  nameWithType: AgentBase.SendRequestObject(HttpMethod, String, Object, WebApiOptions, String)
  fullName: SuperOffice.WebApi.Agents.AgentBase.SendRequestObject(System.Net.Http.HttpMethod, System.String, System.Object, SuperOffice.WebApi.WebApiOptions, System.String)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.SendRequestObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
    name: SendRequestObject
    nameWithType: AgentBase.SendRequestObject
    fullName: SuperOffice.WebApi.Agents.AgentBase.SendRequestObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.WebApiOptions
    name: WebApiOptions
    nameWithType: WebApiOptions
    fullName: SuperOffice.WebApi.WebApiOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.SendRequestObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
    name: SendRequestObject
    nameWithType: AgentBase.SendRequestObject
    fullName: SuperOffice.WebApi.Agents.AgentBase.SendRequestObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.WebApiOptions
    name: WebApiOptions
    nameWithType: WebApiOptions
    fullName: SuperOffice.WebApi.WebApiOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.SendRequest(System.Net.Http.HttpRequestMessage,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.SendRequest(System.Net.Http.HttpRequestMessage,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: SendRequest(HttpRequestMessage, RequestOptions)
  nameWithType: AgentBase.SendRequest(HttpRequestMessage, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AgentBase.SendRequest(System.Net.Http.HttpRequestMessage, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.SendRequest(System.Net.Http.HttpRequestMessage,SuperOffice.WebApi.RequestOptions)
    name: SendRequest
    nameWithType: AgentBase.SendRequest
    fullName: SuperOffice.WebApi.Agents.AgentBase.SendRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.SendRequest(System.Net.Http.HttpRequestMessage,SuperOffice.WebApi.RequestOptions)
    name: SendRequest
    nameWithType: AgentBase.SendRequest
    fullName: SuperOffice.WebApi.Agents.AgentBase.SendRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: ThrowOnResponseError(HttpRequestMessage, HttpResponseMessage)
  nameWithType: AgentBase.ThrowOnResponseError(HttpRequestMessage, HttpResponseMessage)
  fullName: SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError(System.Net.Http.HttpRequestMessage, System.Net.Http.HttpResponseMessage)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage)
    name: ThrowOnResponseError
    nameWithType: AgentBase.ThrowOnResponseError
    fullName: SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage)
    name: ThrowOnResponseError
    nameWithType: AgentBase.ThrowOnResponseError
    fullName: SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.ParseResponse``1(System.Net.Http.HttpResponseMessage)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.ParseResponse``1(System.Net.Http.HttpResponseMessage)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: ParseResponse<T>(HttpResponseMessage)
  nameWithType: AgentBase.ParseResponse<T>(HttpResponseMessage)
  fullName: SuperOffice.WebApi.Agents.AgentBase.ParseResponse<T>(System.Net.Http.HttpResponseMessage)
  nameWithType.vb: AgentBase.ParseResponse(Of T)(HttpResponseMessage)
  fullName.vb: SuperOffice.WebApi.Agents.AgentBase.ParseResponse(Of T)(System.Net.Http.HttpResponseMessage)
  name.vb: ParseResponse(Of T)(HttpResponseMessage)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.ParseResponse``1(System.Net.Http.HttpResponseMessage)
    name: ParseResponse<T>
    nameWithType: AgentBase.ParseResponse<T>
    fullName: SuperOffice.WebApi.Agents.AgentBase.ParseResponse<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.ParseResponse``1(System.Net.Http.HttpResponseMessage)
    name: ParseResponse(Of T)
    nameWithType: AgentBase.ParseResponse(Of T)
    fullName: SuperOffice.WebApi.Agents.AgentBase.ParseResponse(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.Finally(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.Finally(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: Finally(RequestOptions)
  nameWithType: AgentBase.Finally(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AgentBase.Finally(SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.Finally(SuperOffice.WebApi.RequestOptions)
    name: Finally
    nameWithType: AgentBase.Finally
    fullName: SuperOffice.WebApi.Agents.AgentBase.Finally
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.Finally(SuperOffice.WebApi.RequestOptions)
    name: Finally
    nameWithType: AgentBase.Finally
    fullName: SuperOffice.WebApi.Agents.AgentBase.Finally
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.Dispose
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.Dispose
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: Dispose()
  nameWithType: AgentBase.Dispose()
  fullName: SuperOffice.WebApi.Agents.AgentBase.Dispose()
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.Dispose
    name: Dispose
    nameWithType: AgentBase.Dispose
    fullName: SuperOffice.WebApi.Agents.AgentBase.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.Dispose
    name: Dispose
    nameWithType: AgentBase.Dispose
    fullName: SuperOffice.WebApi.Agents.AgentBase.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.Configuration
  commentId: P:SuperOffice.WebApi.Agents.AgentBase.Configuration
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: Configuration
  nameWithType: AgentBase.Configuration
  fullName: SuperOffice.WebApi.Agents.AgentBase.Configuration
- uid: SuperOffice.WebApi.Agents.AgentBase.Client
  commentId: P:SuperOffice.WebApi.Agents.AgentBase.Client
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: Client
  nameWithType: AgentBase.Client
  fullName: SuperOffice.WebApi.Agents.AgentBase.Client
- uid: SuperOffice.WebApi.Agents.AgentBase.HasRunningRequest
  commentId: P:SuperOffice.WebApi.Agents.AgentBase.HasRunningRequest
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: HasRunningRequest
  nameWithType: AgentBase.HasRunningRequest
  fullName: SuperOffice.WebApi.Agents.AgentBase.HasRunningRequest
- uid: SuperOffice.WebApi.Agents.AgentBase.ClientCancellationTokenSource
  commentId: P:SuperOffice.WebApi.Agents.AgentBase.ClientCancellationTokenSource
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: ClientCancellationTokenSource
  nameWithType: AgentBase.ClientCancellationTokenSource
  fullName: SuperOffice.WebApi.Agents.AgentBase.ClientCancellationTokenSource
- uid: SuperOffice.WebApi.Agents.AgentBase.ProgressListener
  commentId: P:SuperOffice.WebApi.Agents.AgentBase.ProgressListener
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: ProgressListener
  nameWithType: AgentBase.ProgressListener
  fullName: SuperOffice.WebApi.Agents.AgentBase.ProgressListener
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.WebApi.Agents.ReplicationAgent.#ctor*
  commentId: Overload:SuperOffice.WebApi.Agents.ReplicationAgent.#ctor
  isExternal: true
  name: ReplicationAgent
  nameWithType: ReplicationAgent.ReplicationAgent
  fullName: SuperOffice.WebApi.Agents.ReplicationAgent.ReplicationAgent
- uid: System.Net.Http.HttpClient
  isExternal: true
  name: HttpClient
  nameWithType: HttpClient
  fullName: System.Net.Http.HttpClient
- uid: SuperOffice.WebApi.WebApiOptions
  commentId: T:SuperOffice.WebApi.WebApiOptions
  parent: SuperOffice.WebApi
  isExternal: true
  name: WebApiOptions
  nameWithType: WebApiOptions
  fullName: SuperOffice.WebApi.WebApiOptions
- uid: SuperOffice.WebApi
  commentId: N:SuperOffice.WebApi
  isExternal: true
  name: SuperOffice.WebApi
  nameWithType: SuperOffice.WebApi
  fullName: SuperOffice.WebApi
- uid: SuperOffice.WebApi.Agents.ReplicationAgent.CreateDefaultSatelliteAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ReplicationAgent.CreateDefaultSatelliteAsync
  isExternal: true
  name: CreateDefaultSatelliteAsync
  nameWithType: ReplicationAgent.CreateDefaultSatelliteAsync
  fullName: SuperOffice.WebApi.Agents.ReplicationAgent.CreateDefaultSatelliteAsync
- uid: SuperOffice.WebApi.RequestOptions
  commentId: T:SuperOffice.WebApi.RequestOptions
  parent: SuperOffice.WebApi
  isExternal: true
  name: RequestOptions
  nameWithType: RequestOptions
  fullName: SuperOffice.WebApi.RequestOptions
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Satellite}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Satellite}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Satellite>
  nameWithType: Task<Satellite>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.Satellite>
  nameWithType.vb: Task(Of Satellite)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.Satellite)
  name.vb: Task(Of Satellite)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.Satellite
    name: Satellite
    nameWithType: Satellite
    fullName: SuperOffice.WebApi.Data.Satellite
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.Satellite
    name: Satellite
    nameWithType: Satellite
    fullName: SuperOffice.WebApi.Data.Satellite
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ReplicationAgent.SaveSatelliteAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ReplicationAgent.SaveSatelliteAsync
  isExternal: true
  name: SaveSatelliteAsync
  nameWithType: ReplicationAgent.SaveSatelliteAsync
  fullName: SuperOffice.WebApi.Agents.ReplicationAgent.SaveSatelliteAsync
- uid: SuperOffice.WebApi.Data.Satellite
  commentId: T:SuperOffice.WebApi.Data.Satellite
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: Satellite
  nameWithType: Satellite
  fullName: SuperOffice.WebApi.Data.Satellite
- uid: SuperOffice.WebApi.Data
  commentId: N:SuperOffice.WebApi.Data
  isExternal: true
  name: SuperOffice.WebApi.Data
  nameWithType: SuperOffice.WebApi.Data
  fullName: SuperOffice.WebApi.Data
- uid: SuperOffice.WebApi.Agents.ReplicationAgent.GetAreaAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ReplicationAgent.GetAreaAsync
  isExternal: true
  name: GetAreaAsync
  nameWithType: ReplicationAgent.GetAreaAsync
  fullName: SuperOffice.WebApi.Agents.ReplicationAgent.GetAreaAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Area}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Area}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Area>
  nameWithType: Task<Area>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.Area>
  nameWithType.vb: Task(Of Area)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.Area)
  name.vb: Task(Of Area)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.Area
    name: Area
    nameWithType: Area
    fullName: SuperOffice.WebApi.Data.Area
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.Area
    name: Area
    nameWithType: Area
    fullName: SuperOffice.WebApi.Data.Area
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ReplicationAgent.SetFreetextSearchEnabledOnAreaAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ReplicationAgent.SetFreetextSearchEnabledOnAreaAsync
  isExternal: true
  name: SetFreetextSearchEnabledOnAreaAsync
  nameWithType: ReplicationAgent.SetFreetextSearchEnabledOnAreaAsync
  fullName: SuperOffice.WebApi.Agents.ReplicationAgent.SetFreetextSearchEnabledOnAreaAsync
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.Tasks.Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: SuperOffice.WebApi.Agents.ReplicationAgent.GetAreaListAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ReplicationAgent.GetAreaListAsync
  isExternal: true
  name: GetAreaListAsync
  nameWithType: ReplicationAgent.GetAreaListAsync
  fullName: SuperOffice.WebApi.Agents.ReplicationAgent.GetAreaListAsync
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Area[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Area[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Area[]>
  nameWithType: Task<Area[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.Area[]>
  nameWithType.vb: Task(Of Area())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.Area())
  name.vb: Task(Of Area())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.Area
    name: Area
    nameWithType: Area
    fullName: SuperOffice.WebApi.Data.Area
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.Area
    name: Area
    nameWithType: Area
    fullName: SuperOffice.WebApi.Data.Area
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ReplicationAgent.GetSatelliteAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ReplicationAgent.GetSatelliteAsync
  isExternal: true
  name: GetSatelliteAsync
  nameWithType: ReplicationAgent.GetSatelliteAsync
  fullName: SuperOffice.WebApi.Agents.ReplicationAgent.GetSatelliteAsync
- uid: SuperOffice.WebApi.Agents.ReplicationAgent.GetCentralLicenseAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ReplicationAgent.GetCentralLicenseAsync
  isExternal: true
  name: GetCentralLicenseAsync
  nameWithType: ReplicationAgent.GetCentralLicenseAsync
  fullName: SuperOffice.WebApi.Agents.ReplicationAgent.GetCentralLicenseAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.LicenseOwner[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.LicenseOwner[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<LicenseOwner[]>
  nameWithType: Task<LicenseOwner[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.LicenseOwner[]>
  nameWithType.vb: Task(Of LicenseOwner())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.LicenseOwner())
  name.vb: Task(Of LicenseOwner())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.LicenseOwner
    name: LicenseOwner
    nameWithType: LicenseOwner
    fullName: SuperOffice.WebApi.Data.LicenseOwner
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.LicenseOwner
    name: LicenseOwner
    nameWithType: LicenseOwner
    fullName: SuperOffice.WebApi.Data.LicenseOwner
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ReplicationAgent.SaveCentralLicenseAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ReplicationAgent.SaveCentralLicenseAsync
  isExternal: true
  name: SaveCentralLicenseAsync
  nameWithType: ReplicationAgent.SaveCentralLicenseAsync
  fullName: SuperOffice.WebApi.Agents.ReplicationAgent.SaveCentralLicenseAsync
- uid: SuperOffice.WebApi.Data.LicenseOwner[]
  isExternal: true
  name: LicenseOwner[]
  nameWithType: LicenseOwner[]
  fullName: SuperOffice.WebApi.Data.LicenseOwner[]
  nameWithType.vb: LicenseOwner()
  fullName.vb: SuperOffice.WebApi.Data.LicenseOwner()
  name.vb: LicenseOwner()
  spec.csharp:
  - uid: SuperOffice.WebApi.Data.LicenseOwner
    name: LicenseOwner
    nameWithType: LicenseOwner
    fullName: SuperOffice.WebApi.Data.LicenseOwner
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.WebApi.Data.LicenseOwner
    name: LicenseOwner
    nameWithType: LicenseOwner
    fullName: SuperOffice.WebApi.Data.LicenseOwner
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
