### YamlMime:ManagedReference
items:
- uid: SuperOffice.WebApi.DateTimeConverter
  commentId: T:SuperOffice.WebApi.DateTimeConverter
  id: DateTimeConverter
  parent: SuperOffice.WebApi
  children:
  - SuperOffice.WebApi.DateTimeConverter.#ctor
  - SuperOffice.WebApi.DateTimeConverter.CanConvert(System.Type)
  - SuperOffice.WebApi.DateTimeConverter.CanRead
  - SuperOffice.WebApi.DateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  - SuperOffice.WebApi.DateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  langs:
  - csharp
  - vb
  name: DateTimeConverter
  nameWithType: DateTimeConverter
  fullName: SuperOffice.WebApi.DateTimeConverter
  type: Class
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi
  syntax:
    content: 'public class DateTimeConverter : JsonConverter'
    content.vb: >-
      Public Class DateTimeConverter
          Inherits JsonConverter
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.WebApi.DateTimeConverter.CanConvert(System.Type)
  commentId: M:SuperOffice.WebApi.DateTimeConverter.CanConvert(System.Type)
  id: CanConvert(System.Type)
  parent: SuperOffice.WebApi.DateTimeConverter
  langs:
  - csharp
  - vb
  name: CanConvert(Type)
  nameWithType: DateTimeConverter.CanConvert(Type)
  fullName: SuperOffice.WebApi.DateTimeConverter.CanConvert(System.Type)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi
  syntax:
    content: public override bool CanConvert(Type objectType)
    parameters:
    - id: objectType
      type: System.Type
    return:
      type: System.Boolean
    content.vb: Public Overrides Function CanConvert(objectType As Type) As Boolean
  overload: SuperOffice.WebApi.DateTimeConverter.CanConvert*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.WebApi.DateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  commentId: M:SuperOffice.WebApi.DateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  id: ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  parent: SuperOffice.WebApi.DateTimeConverter
  langs:
  - csharp
  - vb
  name: ReadJson(JsonReader, Type, Object, JsonSerializer)
  nameWithType: DateTimeConverter.ReadJson(JsonReader, Type, Object, JsonSerializer)
  fullName: SuperOffice.WebApi.DateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, System.Object, Newtonsoft.Json.JsonSerializer)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi
  syntax:
    content: public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
    parameters:
    - id: reader
      type: Newtonsoft.Json.JsonReader
    - id: objectType
      type: System.Type
    - id: existingValue
      type: System.Object
    - id: serializer
      type: Newtonsoft.Json.JsonSerializer
    return:
      type: System.Object
    content.vb: Public Overrides Function ReadJson(reader As JsonReader, objectType As Type, existingValue As Object, serializer As JsonSerializer) As Object
  overload: SuperOffice.WebApi.DateTimeConverter.ReadJson*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.WebApi.DateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  commentId: M:SuperOffice.WebApi.DateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  id: WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  parent: SuperOffice.WebApi.DateTimeConverter
  langs:
  - csharp
  - vb
  name: WriteJson(JsonWriter, Object, JsonSerializer)
  nameWithType: DateTimeConverter.WriteJson(JsonWriter, Object, JsonSerializer)
  fullName: SuperOffice.WebApi.DateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Object, Newtonsoft.Json.JsonSerializer)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi
  syntax:
    content: public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
    parameters:
    - id: writer
      type: Newtonsoft.Json.JsonWriter
    - id: value
      type: System.Object
    - id: serializer
      type: Newtonsoft.Json.JsonSerializer
    content.vb: Public Overrides Sub WriteJson(writer As JsonWriter, value As Object, serializer As JsonSerializer)
  overload: SuperOffice.WebApi.DateTimeConverter.WriteJson*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.WebApi.DateTimeConverter.#ctor
  commentId: M:SuperOffice.WebApi.DateTimeConverter.#ctor
  id: '#ctor'
  parent: SuperOffice.WebApi.DateTimeConverter
  langs:
  - csharp
  - vb
  name: DateTimeConverter()
  nameWithType: DateTimeConverter.DateTimeConverter()
  fullName: SuperOffice.WebApi.DateTimeConverter.DateTimeConverter()
  type: Constructor
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi
  syntax:
    content: public DateTimeConverter()
    content.vb: Public Sub New
  overload: SuperOffice.WebApi.DateTimeConverter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.DateTimeConverter.CanRead
  commentId: P:SuperOffice.WebApi.DateTimeConverter.CanRead
  id: CanRead
  parent: SuperOffice.WebApi.DateTimeConverter
  langs:
  - csharp
  - vb
  name: CanRead
  nameWithType: DateTimeConverter.CanRead
  fullName: SuperOffice.WebApi.DateTimeConverter.CanRead
  type: Property
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi
  syntax:
    content: public override bool CanRead { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property CanRead As Boolean
  overload: SuperOffice.WebApi.DateTimeConverter.CanRead*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
references:
- uid: SuperOffice.WebApi
  commentId: N:SuperOffice.WebApi
  isExternal: true
  name: SuperOffice.WebApi
  nameWithType: SuperOffice.WebApi
  fullName: SuperOffice.WebApi
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.WebApi.DateTimeConverter.CanConvert*
  commentId: Overload:SuperOffice.WebApi.DateTimeConverter.CanConvert
  isExternal: true
  name: CanConvert
  nameWithType: DateTimeConverter.CanConvert
  fullName: SuperOffice.WebApi.DateTimeConverter.CanConvert
- uid: System.Type
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.WebApi.DateTimeConverter.ReadJson*
  commentId: Overload:SuperOffice.WebApi.DateTimeConverter.ReadJson
  isExternal: true
  name: ReadJson
  nameWithType: DateTimeConverter.ReadJson
  fullName: SuperOffice.WebApi.DateTimeConverter.ReadJson
- uid: Newtonsoft.Json.JsonReader
  commentId: '!:Newtonsoft.Json.JsonReader'
  isExternal: true
  name: JsonReader
  nameWithType: JsonReader
  fullName: Newtonsoft.Json.JsonReader
- uid: Newtonsoft.Json.JsonSerializer
  isExternal: true
  name: JsonSerializer
  nameWithType: JsonSerializer
  fullName: Newtonsoft.Json.JsonSerializer
- uid: SuperOffice.WebApi.DateTimeConverter.WriteJson*
  commentId: Overload:SuperOffice.WebApi.DateTimeConverter.WriteJson
  isExternal: true
  name: WriteJson
  nameWithType: DateTimeConverter.WriteJson
  fullName: SuperOffice.WebApi.DateTimeConverter.WriteJson
- uid: Newtonsoft.Json.JsonWriter
  commentId: '!:Newtonsoft.Json.JsonWriter'
  isExternal: true
  name: JsonWriter
  nameWithType: JsonWriter
  fullName: Newtonsoft.Json.JsonWriter
- uid: SuperOffice.WebApi.DateTimeConverter.#ctor*
  commentId: Overload:SuperOffice.WebApi.DateTimeConverter.#ctor
  isExternal: true
  name: DateTimeConverter
  nameWithType: DateTimeConverter.DateTimeConverter
  fullName: SuperOffice.WebApi.DateTimeConverter.DateTimeConverter
- uid: SuperOffice.WebApi.DateTimeConverter.CanRead*
  commentId: Overload:SuperOffice.WebApi.DateTimeConverter.CanRead
  isExternal: true
  name: CanRead
  nameWithType: DateTimeConverter.CanRead
  fullName: SuperOffice.WebApi.DateTimeConverter.CanRead
