### YamlMime:ManagedReference
items:
- uid: SuperOffice.WebApi.Data.ModuleLicense
  commentId: T:SuperOffice.WebApi.Data.ModuleLicense
  id: ModuleLicense
  parent: SuperOffice.WebApi.Data
  children:
  - SuperOffice.WebApi.Data.ModuleLicense.#ctor
  - SuperOffice.WebApi.Data.ModuleLicense.AllowedUserType
  - SuperOffice.WebApi.Data.ModuleLicense.AllowedUserType_String
  - SuperOffice.WebApi.Data.ModuleLicense.ExtraFlags
  - SuperOffice.WebApi.Data.ModuleLicense.ExtraInfo
  - SuperOffice.WebApi.Data.ModuleLicense.IsHidden
  - SuperOffice.WebApi.Data.ModuleLicense.LicenseType
  - SuperOffice.WebApi.Data.ModuleLicense.LicenseType_String
  - SuperOffice.WebApi.Data.ModuleLicense.ModuleDescription
  - SuperOffice.WebApi.Data.ModuleLicense.ModuleName
  - SuperOffice.WebApi.Data.ModuleLicense.ModuleTooltip
  - SuperOffice.WebApi.Data.ModuleLicense.ModuleVersion
  - SuperOffice.WebApi.Data.ModuleLicense.NumberOfLicenses
  - SuperOffice.WebApi.Data.ModuleLicense.OwnerName
  - SuperOffice.WebApi.Data.ModuleLicense.PrerequisiteModuleName
  - SuperOffice.WebApi.Data.ModuleLicense.Signature
  - SuperOffice.WebApi.Data.ModuleLicense.SortOrder
  - SuperOffice.WebApi.Data.ModuleLicense.Unrestricted
  langs:
  - csharp
  - vb
  name: ModuleLicense
  nameWithType: ModuleLicense
  fullName: SuperOffice.WebApi.Data.ModuleLicense
  type: Class
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Data
  summary: >-
    Carrier object for ModuleLicense.

    Represents a single module license info.
  example: []
  syntax:
    content: public class ModuleLicense
    content.vb: Public Class ModuleLicense
  seealso:
  - linkId: SuperOffice.WebApi.Agents.LicenseAgent
    commentId: T:SuperOffice.WebApi.Agents.LicenseAgent
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: SuperOffice.WebApi.Data.ModuleLicense.#ctor
  commentId: M:SuperOffice.WebApi.Data.ModuleLicense.#ctor
  id: '#ctor'
  parent: SuperOffice.WebApi.Data.ModuleLicense
  langs:
  - csharp
  - vb
  name: ModuleLicense()
  nameWithType: ModuleLicense.ModuleLicense()
  fullName: SuperOffice.WebApi.Data.ModuleLicense.ModuleLicense()
  type: Constructor
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Data
  summary: Default constructor - defaults any enum props to 0.
  example: []
  syntax:
    content: public ModuleLicense()
    content.vb: Public Sub New()
  overload: SuperOffice.WebApi.Data.ModuleLicense.#ctor*
  nameWithType.vb: ModuleLicense.New()
  fullName.vb: SuperOffice.WebApi.Data.ModuleLicense.New()
  name.vb: New()
- uid: SuperOffice.WebApi.Data.ModuleLicense.OwnerName
  commentId: P:SuperOffice.WebApi.Data.ModuleLicense.OwnerName
  id: OwnerName
  parent: SuperOffice.WebApi.Data.ModuleLicense
  langs:
  - csharp
  - vb
  name: OwnerName
  nameWithType: ModuleLicense.OwnerName
  fullName: SuperOffice.WebApi.Data.ModuleLicense.OwnerName
  type: Property
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Data
  summary: The name of the module owner, not visible in GUI but used in the code. OwnerName SUPEROFFICE is reserved and may NEVER be used by partners. This must be in UPPER CASE and only contain A-Z and 0-9. NO EXTENDED CHARACTERS please.
  example: []
  syntax:
    content: public virtual string OwnerName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property OwnerName As String
  overload: SuperOffice.WebApi.Data.ModuleLicense.OwnerName*
- uid: SuperOffice.WebApi.Data.ModuleLicense.ModuleName
  commentId: P:SuperOffice.WebApi.Data.ModuleLicense.ModuleName
  id: ModuleName
  parent: SuperOffice.WebApi.Data.ModuleLicense
  langs:
  - csharp
  - vb
  name: ModuleName
  nameWithType: ModuleLicense.ModuleName
  fullName: SuperOffice.WebApi.Data.ModuleLicense.ModuleName
  type: Property
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Data
  summary: The name of the module, not visible in GUI but used in the code. This must be in UPPER CASE and only contain A-Z and 0-9. NO EXTENDED CHARACTERS please.
  example: []
  syntax:
    content: public virtual string ModuleName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property ModuleName As String
  overload: SuperOffice.WebApi.Data.ModuleLicense.ModuleName*
- uid: SuperOffice.WebApi.Data.ModuleLicense.ModuleDescription
  commentId: P:SuperOffice.WebApi.Data.ModuleLicense.ModuleDescription
  id: ModuleDescription
  parent: SuperOffice.WebApi.Data.ModuleLicense
  langs:
  - csharp
  - vb
  name: ModuleDescription
  nameWithType: ModuleLicense.ModuleDescription
  fullName: SuperOffice.WebApi.Data.ModuleLicense.ModuleDescription
  type: Property
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Data
  summary: Human-readable description of module, shown in GUI, default language. Additional languages can be added to LocaleText, resource type 25
  example: []
  syntax:
    content: public virtual string ModuleDescription { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property ModuleDescription As String
  overload: SuperOffice.WebApi.Data.ModuleLicense.ModuleDescription*
- uid: SuperOffice.WebApi.Data.ModuleLicense.ModuleTooltip
  commentId: P:SuperOffice.WebApi.Data.ModuleLicense.ModuleTooltip
  id: ModuleTooltip
  parent: SuperOffice.WebApi.Data.ModuleLicense
  langs:
  - csharp
  - vb
  name: ModuleTooltip
  nameWithType: ModuleLicense.ModuleTooltip
  fullName: SuperOffice.WebApi.Data.ModuleLicense.ModuleTooltip
  type: Property
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Data
  summary: Tooltip text, anything you want; shown when the cursor hovers over the line in the GUI. Default language. Additional languages can be added to LocaleText, resource type 27
  example: []
  syntax:
    content: public virtual string ModuleTooltip { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property ModuleTooltip As String
  overload: SuperOffice.WebApi.Data.ModuleLicense.ModuleTooltip*
- uid: SuperOffice.WebApi.Data.ModuleLicense.ModuleVersion
  commentId: P:SuperOffice.WebApi.Data.ModuleLicense.ModuleVersion
  id: ModuleVersion
  parent: SuperOffice.WebApi.Data.ModuleLicense
  langs:
  - csharp
  - vb
  name: ModuleVersion
  nameWithType: ModuleLicense.ModuleVersion
  fullName: SuperOffice.WebApi.Data.ModuleLicense.ModuleVersion
  type: Property
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Data
  summary: Version string for this module
  example: []
  syntax:
    content: public virtual string ModuleVersion { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property ModuleVersion As String
  overload: SuperOffice.WebApi.Data.ModuleLicense.ModuleVersion*
- uid: SuperOffice.WebApi.Data.ModuleLicense.LicenseType_String
  commentId: P:SuperOffice.WebApi.Data.ModuleLicense.LicenseType_String
  id: LicenseType_String
  parent: SuperOffice.WebApi.Data.ModuleLicense
  langs:
  - csharp
  - vb
  name: LicenseType_String
  nameWithType: ModuleLicense.LicenseType_String
  fullName: SuperOffice.WebApi.Data.ModuleLicense.LicenseType_String
  type: Property
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Data
  summary: >-
    Entire system, per database, or per associate

    Raw string enum value.
  example: []
  syntax:
    content: >-
      [JsonProperty("LicenseType")]

      public string LicenseType_String { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("LicenseType")>

      Public Property LicenseType_String As String
  overload: SuperOffice.WebApi.Data.ModuleLicense.LicenseType_String*
  seealso:
  - linkId: SuperOffice.WebApi.Data.ModuleLicense.LicenseType
    commentId: P:SuperOffice.WebApi.Data.ModuleLicense.LicenseType
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: LicenseType
- uid: SuperOffice.WebApi.Data.ModuleLicense.LicenseType
  commentId: P:SuperOffice.WebApi.Data.ModuleLicense.LicenseType
  id: LicenseType
  parent: SuperOffice.WebApi.Data.ModuleLicense
  langs:
  - csharp
  - vb
  name: LicenseType
  nameWithType: ModuleLicense.LicenseType
  fullName: SuperOffice.WebApi.Data.ModuleLicense.LicenseType
  type: Property
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Data
  summary: >-
    Entire system, per database, or per associate

    NULL if unknown enum value.
  example: []
  syntax:
    content: >-
      [JsonIgnore]

      public LicenseType? LicenseType { get; set; }
    parameters: []
    return:
      type: System.Nullable{SuperOffice.WebApi.Data.LicenseType}
    content.vb: >-
      <JsonIgnore>

      Public Property LicenseType As LicenseType?
  overload: SuperOffice.WebApi.Data.ModuleLicense.LicenseType*
  seealso:
  - linkId: SuperOffice.WebApi.Data.ModuleLicense.LicenseType_String
    commentId: P:SuperOffice.WebApi.Data.ModuleLicense.LicenseType_String
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
- uid: SuperOffice.WebApi.Data.ModuleLicense.Unrestricted
  commentId: P:SuperOffice.WebApi.Data.ModuleLicense.Unrestricted
  id: Unrestricted
  parent: SuperOffice.WebApi.Data.ModuleLicense
  langs:
  - csharp
  - vb
  name: Unrestricted
  nameWithType: ModuleLicense.Unrestricted
  fullName: SuperOffice.WebApi.Data.ModuleLicense.Unrestricted
  type: Property
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Data
  summary: If true, then there is no licenseNumber limit on how many of these modules may be assigned
  example: []
  syntax:
    content: public virtual bool Unrestricted { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable Property Unrestricted As Boolean
  overload: SuperOffice.WebApi.Data.ModuleLicense.Unrestricted*
- uid: SuperOffice.WebApi.Data.ModuleLicense.AllowedUserType_String
  commentId: P:SuperOffice.WebApi.Data.ModuleLicense.AllowedUserType_String
  id: AllowedUserType_String
  parent: SuperOffice.WebApi.Data.ModuleLicense
  langs:
  - csharp
  - vb
  name: AllowedUserType_String
  nameWithType: ModuleLicense.AllowedUserType_String
  fullName: SuperOffice.WebApi.Data.ModuleLicense.AllowedUserType_String
  type: Property
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Data
  summary: >-
    Allowed associate type for user licenses: internal(0), external(4). 

    Raw string enum value.
  example: []
  syntax:
    content: >-
      [JsonProperty("AllowedUserType")]

      public string AllowedUserType_String { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("AllowedUserType")>

      Public Property AllowedUserType_String As String
  overload: SuperOffice.WebApi.Data.ModuleLicense.AllowedUserType_String*
  seealso:
  - linkId: SuperOffice.WebApi.Data.ModuleLicense.AllowedUserType
    commentId: P:SuperOffice.WebApi.Data.ModuleLicense.AllowedUserType
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: AllowedUserType
- uid: SuperOffice.WebApi.Data.ModuleLicense.AllowedUserType
  commentId: P:SuperOffice.WebApi.Data.ModuleLicense.AllowedUserType
  id: AllowedUserType
  parent: SuperOffice.WebApi.Data.ModuleLicense
  langs:
  - csharp
  - vb
  name: AllowedUserType
  nameWithType: ModuleLicense.AllowedUserType
  fullName: SuperOffice.WebApi.Data.ModuleLicense.AllowedUserType
  type: Property
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Data
  summary: >-
    Allowed associate type for user licenses: internal(0), external(4). 

    NULL if unknown enum value.
  example: []
  syntax:
    content: >-
      [JsonIgnore]

      public UserType? AllowedUserType { get; set; }
    parameters: []
    return:
      type: System.Nullable{SuperOffice.WebApi.Data.UserType}
    content.vb: >-
      <JsonIgnore>

      Public Property AllowedUserType As UserType?
  overload: SuperOffice.WebApi.Data.ModuleLicense.AllowedUserType*
  seealso:
  - linkId: SuperOffice.WebApi.Data.ModuleLicense.AllowedUserType_String
    commentId: P:SuperOffice.WebApi.Data.ModuleLicense.AllowedUserType_String
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
- uid: SuperOffice.WebApi.Data.ModuleLicense.NumberOfLicenses
  commentId: P:SuperOffice.WebApi.Data.ModuleLicense.NumberOfLicenses
  id: NumberOfLicenses
  parent: SuperOffice.WebApi.Data.ModuleLicense
  langs:
  - csharp
  - vb
  name: NumberOfLicenses
  nameWithType: ModuleLicense.NumberOfLicenses
  fullName: SuperOffice.WebApi.Data.ModuleLicense.NumberOfLicenses
  type: Property
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Data
  summary: Number of licenses purchased.
  example: []
  syntax:
    content: public virtual int NumberOfLicenses { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property NumberOfLicenses As Integer
  overload: SuperOffice.WebApi.Data.ModuleLicense.NumberOfLicenses*
- uid: SuperOffice.WebApi.Data.ModuleLicense.ExtraFlags
  commentId: P:SuperOffice.WebApi.Data.ModuleLicense.ExtraFlags
  id: ExtraFlags
  parent: SuperOffice.WebApi.Data.ModuleLicense
  langs:
  - csharp
  - vb
  name: ExtraFlags
  nameWithType: ModuleLicense.ExtraFlags
  fullName: SuperOffice.WebApi.Data.ModuleLicense.ExtraFlags
  type: Property
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Data
  summary: Unspecified extra flags of license, part of checksum. Value=1 means this a 'user plan'; such licenses cause the admin gui to switch to radiobutton view
  example: []
  syntax:
    content: public virtual int ExtraFlags { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property ExtraFlags As Integer
  overload: SuperOffice.WebApi.Data.ModuleLicense.ExtraFlags*
- uid: SuperOffice.WebApi.Data.ModuleLicense.ExtraInfo
  commentId: P:SuperOffice.WebApi.Data.ModuleLicense.ExtraInfo
  id: ExtraInfo
  parent: SuperOffice.WebApi.Data.ModuleLicense
  langs:
  - csharp
  - vb
  name: ExtraInfo
  nameWithType: ModuleLicense.ExtraInfo
  fullName: SuperOffice.WebApi.Data.ModuleLicense.ExtraInfo
  type: Property
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Data
  summary: 'Free field, can be used by the module owner (example: host domain, for eJournal). NOTE: For rows with extraFlags=1 this field contains the list of modules that this plan comprises'
  example: []
  syntax:
    content: public virtual string ExtraInfo { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property ExtraInfo As String
  overload: SuperOffice.WebApi.Data.ModuleLicense.ExtraInfo*
- uid: SuperOffice.WebApi.Data.ModuleLicense.SortOrder
  commentId: P:SuperOffice.WebApi.Data.ModuleLicense.SortOrder
  id: SortOrder
  parent: SuperOffice.WebApi.Data.ModuleLicense
  langs:
  - csharp
  - vb
  name: SortOrder
  nameWithType: ModuleLicense.SortOrder
  fullName: SuperOffice.WebApi.Data.ModuleLicense.SortOrder
  type: Property
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Data
  summary: Ordering value - generated by SuperLicense and transferred here. Must be followed for signatures to be correct
  example: []
  syntax:
    content: public virtual int SortOrder { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property SortOrder As Integer
  overload: SuperOffice.WebApi.Data.ModuleLicense.SortOrder*
- uid: SuperOffice.WebApi.Data.ModuleLicense.IsHidden
  commentId: P:SuperOffice.WebApi.Data.ModuleLicense.IsHidden
  id: IsHidden
  parent: SuperOffice.WebApi.Data.ModuleLicense
  langs:
  - csharp
  - vb
  name: IsHidden
  nameWithType: ModuleLicense.IsHidden
  fullName: SuperOffice.WebApi.Data.ModuleLicense.IsHidden
  type: Property
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Data
  summary: If true, then this module should not appear in GUI and is not assignable by users
  example: []
  syntax:
    content: public virtual bool IsHidden { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable Property IsHidden As Boolean
  overload: SuperOffice.WebApi.Data.ModuleLicense.IsHidden*
- uid: SuperOffice.WebApi.Data.ModuleLicense.PrerequisiteModuleName
  commentId: P:SuperOffice.WebApi.Data.ModuleLicense.PrerequisiteModuleName
  id: PrerequisiteModuleName
  parent: SuperOffice.WebApi.Data.ModuleLicense
  langs:
  - csharp
  - vb
  name: PrerequisiteModuleName
  nameWithType: ModuleLicense.PrerequisiteModuleName
  fullName: SuperOffice.WebApi.Data.ModuleLicense.PrerequisiteModuleName
  type: Property
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Data
  summary: If set, specifies a module license needed before this license can be granted
  example: []
  syntax:
    content: public virtual string PrerequisiteModuleName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property PrerequisiteModuleName As String
  overload: SuperOffice.WebApi.Data.ModuleLicense.PrerequisiteModuleName*
- uid: SuperOffice.WebApi.Data.ModuleLicense.Signature
  commentId: P:SuperOffice.WebApi.Data.ModuleLicense.Signature
  id: Signature
  parent: SuperOffice.WebApi.Data.ModuleLicense
  langs:
  - csharp
  - vb
  name: Signature
  nameWithType: ModuleLicense.Signature
  fullName: SuperOffice.WebApi.Data.ModuleLicense.Signature
  type: Property
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Data
  summary: Signature that verifies that this row is correctly transferred from SuperLicense
  example: []
  syntax:
    content: public virtual string Signature { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property Signature As String
  overload: SuperOffice.WebApi.Data.ModuleLicense.Signature*
references:
- uid: SuperOffice.WebApi.Agents.LicenseAgent
  commentId: T:SuperOffice.WebApi.Agents.LicenseAgent
  isExternal: true
  href: SuperOffice.WebApi.Agents.LicenseAgent.html
  name: LicenseAgent
  nameWithType: LicenseAgent
  fullName: SuperOffice.WebApi.Agents.LicenseAgent
- uid: SuperOffice.WebApi.Data
  commentId: N:SuperOffice.WebApi.Data
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.WebApi.Data
  nameWithType: SuperOffice.WebApi.Data
  fullName: SuperOffice.WebApi.Data
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.WebApi
    name: WebApi
    isExternal: true
    href: SuperOffice.WebApi.html
  - name: .
  - uid: SuperOffice.WebApi.Data
    name: Data
    isExternal: true
    href: SuperOffice.WebApi.Data.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.WebApi
    name: WebApi
    isExternal: true
    href: SuperOffice.WebApi.html
  - name: .
  - uid: SuperOffice.WebApi.Data
    name: Data
    isExternal: true
    href: SuperOffice.WebApi.Data.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.WebApi.Data.ModuleLicense.#ctor*
  commentId: Overload:SuperOffice.WebApi.Data.ModuleLicense.#ctor
  isExternal: true
  href: SuperOffice.WebApi.Data.ModuleLicense.html#SuperOffice_WebApi_Data_ModuleLicense__ctor
  name: ModuleLicense
  nameWithType: ModuleLicense.ModuleLicense
  fullName: SuperOffice.WebApi.Data.ModuleLicense.ModuleLicense
  nameWithType.vb: ModuleLicense.New
  fullName.vb: SuperOffice.WebApi.Data.ModuleLicense.New
  name.vb: New
- uid: SuperOffice.WebApi.Data.ModuleLicense.OwnerName*
  commentId: Overload:SuperOffice.WebApi.Data.ModuleLicense.OwnerName
  isExternal: true
  href: SuperOffice.WebApi.Data.ModuleLicense.html#SuperOffice_WebApi_Data_ModuleLicense_OwnerName
  name: OwnerName
  nameWithType: ModuleLicense.OwnerName
  fullName: SuperOffice.WebApi.Data.ModuleLicense.OwnerName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SuperOffice.WebApi.Data.ModuleLicense.ModuleName*
  commentId: Overload:SuperOffice.WebApi.Data.ModuleLicense.ModuleName
  isExternal: true
  href: SuperOffice.WebApi.Data.ModuleLicense.html#SuperOffice_WebApi_Data_ModuleLicense_ModuleName
  name: ModuleName
  nameWithType: ModuleLicense.ModuleName
  fullName: SuperOffice.WebApi.Data.ModuleLicense.ModuleName
- uid: SuperOffice.WebApi.Data.ModuleLicense.ModuleDescription*
  commentId: Overload:SuperOffice.WebApi.Data.ModuleLicense.ModuleDescription
  isExternal: true
  href: SuperOffice.WebApi.Data.ModuleLicense.html#SuperOffice_WebApi_Data_ModuleLicense_ModuleDescription
  name: ModuleDescription
  nameWithType: ModuleLicense.ModuleDescription
  fullName: SuperOffice.WebApi.Data.ModuleLicense.ModuleDescription
- uid: SuperOffice.WebApi.Data.ModuleLicense.ModuleTooltip*
  commentId: Overload:SuperOffice.WebApi.Data.ModuleLicense.ModuleTooltip
  isExternal: true
  href: SuperOffice.WebApi.Data.ModuleLicense.html#SuperOffice_WebApi_Data_ModuleLicense_ModuleTooltip
  name: ModuleTooltip
  nameWithType: ModuleLicense.ModuleTooltip
  fullName: SuperOffice.WebApi.Data.ModuleLicense.ModuleTooltip
- uid: SuperOffice.WebApi.Data.ModuleLicense.ModuleVersion*
  commentId: Overload:SuperOffice.WebApi.Data.ModuleLicense.ModuleVersion
  isExternal: true
  href: SuperOffice.WebApi.Data.ModuleLicense.html#SuperOffice_WebApi_Data_ModuleLicense_ModuleVersion
  name: ModuleVersion
  nameWithType: ModuleLicense.ModuleVersion
  fullName: SuperOffice.WebApi.Data.ModuleLicense.ModuleVersion
- uid: SuperOffice.WebApi.Data.ModuleLicense.LicenseType
  commentId: P:SuperOffice.WebApi.Data.ModuleLicense.LicenseType
  isExternal: true
  href: SuperOffice.WebApi.Data.ModuleLicense.html#SuperOffice_WebApi_Data_ModuleLicense_LicenseType
  name: LicenseType
  nameWithType: ModuleLicense.LicenseType
  fullName: SuperOffice.WebApi.Data.ModuleLicense.LicenseType
- uid: SuperOffice.WebApi.Data.ModuleLicense.LicenseType_String*
  commentId: Overload:SuperOffice.WebApi.Data.ModuleLicense.LicenseType_String
  isExternal: true
  href: SuperOffice.WebApi.Data.ModuleLicense.html#SuperOffice_WebApi_Data_ModuleLicense_LicenseType_String
  name: LicenseType_String
  nameWithType: ModuleLicense.LicenseType_String
  fullName: SuperOffice.WebApi.Data.ModuleLicense.LicenseType_String
- uid: SuperOffice.WebApi.Data.ModuleLicense.LicenseType_String
  commentId: P:SuperOffice.WebApi.Data.ModuleLicense.LicenseType_String
  isExternal: true
  href: SuperOffice.WebApi.Data.ModuleLicense.html#SuperOffice_WebApi_Data_ModuleLicense_LicenseType_String
  name: LicenseType_String
  nameWithType: ModuleLicense.LicenseType_String
  fullName: SuperOffice.WebApi.Data.ModuleLicense.LicenseType_String
- uid: SuperOffice.WebApi.Data.ModuleLicense.LicenseType*
  commentId: Overload:SuperOffice.WebApi.Data.ModuleLicense.LicenseType
  isExternal: true
  href: SuperOffice.WebApi.Data.ModuleLicense.html#SuperOffice_WebApi_Data_ModuleLicense_LicenseType
  name: LicenseType
  nameWithType: ModuleLicense.LicenseType
  fullName: SuperOffice.WebApi.Data.ModuleLicense.LicenseType
- uid: System.Nullable{SuperOffice.WebApi.Data.LicenseType}
  commentId: T:System.Nullable{SuperOffice.WebApi.Data.LicenseType}
  parent: System
  definition: System.Nullable`1
  href: SuperOffice.WebApi.Data.LicenseType.html
  name: LicenseType?
  nameWithType: LicenseType?
  fullName: SuperOffice.WebApi.Data.LicenseType?
  spec.csharp:
  - uid: SuperOffice.WebApi.Data.LicenseType
    name: LicenseType
    isExternal: true
    href: SuperOffice.WebApi.Data.LicenseType.html
  - name: '?'
  spec.vb:
  - uid: SuperOffice.WebApi.Data.LicenseType
    name: LicenseType
    isExternal: true
    href: SuperOffice.WebApi.Data.LicenseType.html
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: SuperOffice.WebApi.Data.ModuleLicense.Unrestricted*
  commentId: Overload:SuperOffice.WebApi.Data.ModuleLicense.Unrestricted
  isExternal: true
  href: SuperOffice.WebApi.Data.ModuleLicense.html#SuperOffice_WebApi_Data_ModuleLicense_Unrestricted
  name: Unrestricted
  nameWithType: ModuleLicense.Unrestricted
  fullName: SuperOffice.WebApi.Data.ModuleLicense.Unrestricted
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SuperOffice.WebApi.Data.ModuleLicense.AllowedUserType
  commentId: P:SuperOffice.WebApi.Data.ModuleLicense.AllowedUserType
  isExternal: true
  href: SuperOffice.WebApi.Data.ModuleLicense.html#SuperOffice_WebApi_Data_ModuleLicense_AllowedUserType
  name: AllowedUserType
  nameWithType: ModuleLicense.AllowedUserType
  fullName: SuperOffice.WebApi.Data.ModuleLicense.AllowedUserType
- uid: SuperOffice.WebApi.Data.ModuleLicense.AllowedUserType_String*
  commentId: Overload:SuperOffice.WebApi.Data.ModuleLicense.AllowedUserType_String
  isExternal: true
  href: SuperOffice.WebApi.Data.ModuleLicense.html#SuperOffice_WebApi_Data_ModuleLicense_AllowedUserType_String
  name: AllowedUserType_String
  nameWithType: ModuleLicense.AllowedUserType_String
  fullName: SuperOffice.WebApi.Data.ModuleLicense.AllowedUserType_String
- uid: SuperOffice.WebApi.Data.ModuleLicense.AllowedUserType_String
  commentId: P:SuperOffice.WebApi.Data.ModuleLicense.AllowedUserType_String
  isExternal: true
  href: SuperOffice.WebApi.Data.ModuleLicense.html#SuperOffice_WebApi_Data_ModuleLicense_AllowedUserType_String
  name: AllowedUserType_String
  nameWithType: ModuleLicense.AllowedUserType_String
  fullName: SuperOffice.WebApi.Data.ModuleLicense.AllowedUserType_String
- uid: SuperOffice.WebApi.Data.ModuleLicense.AllowedUserType*
  commentId: Overload:SuperOffice.WebApi.Data.ModuleLicense.AllowedUserType
  isExternal: true
  href: SuperOffice.WebApi.Data.ModuleLicense.html#SuperOffice_WebApi_Data_ModuleLicense_AllowedUserType
  name: AllowedUserType
  nameWithType: ModuleLicense.AllowedUserType
  fullName: SuperOffice.WebApi.Data.ModuleLicense.AllowedUserType
- uid: System.Nullable{SuperOffice.WebApi.Data.UserType}
  commentId: T:System.Nullable{SuperOffice.WebApi.Data.UserType}
  parent: System
  definition: System.Nullable`1
  href: SuperOffice.WebApi.Data.UserType.html
  name: UserType?
  nameWithType: UserType?
  fullName: SuperOffice.WebApi.Data.UserType?
  spec.csharp:
  - uid: SuperOffice.WebApi.Data.UserType
    name: UserType
    isExternal: true
    href: SuperOffice.WebApi.Data.UserType.html
  - name: '?'
  spec.vb:
  - uid: SuperOffice.WebApi.Data.UserType
    name: UserType
    isExternal: true
    href: SuperOffice.WebApi.Data.UserType.html
  - name: '?'
- uid: SuperOffice.WebApi.Data.ModuleLicense.NumberOfLicenses*
  commentId: Overload:SuperOffice.WebApi.Data.ModuleLicense.NumberOfLicenses
  isExternal: true
  href: SuperOffice.WebApi.Data.ModuleLicense.html#SuperOffice_WebApi_Data_ModuleLicense_NumberOfLicenses
  name: NumberOfLicenses
  nameWithType: ModuleLicense.NumberOfLicenses
  fullName: SuperOffice.WebApi.Data.ModuleLicense.NumberOfLicenses
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: SuperOffice.WebApi.Data.ModuleLicense.ExtraFlags*
  commentId: Overload:SuperOffice.WebApi.Data.ModuleLicense.ExtraFlags
  isExternal: true
  href: SuperOffice.WebApi.Data.ModuleLicense.html#SuperOffice_WebApi_Data_ModuleLicense_ExtraFlags
  name: ExtraFlags
  nameWithType: ModuleLicense.ExtraFlags
  fullName: SuperOffice.WebApi.Data.ModuleLicense.ExtraFlags
- uid: SuperOffice.WebApi.Data.ModuleLicense.ExtraInfo*
  commentId: Overload:SuperOffice.WebApi.Data.ModuleLicense.ExtraInfo
  isExternal: true
  href: SuperOffice.WebApi.Data.ModuleLicense.html#SuperOffice_WebApi_Data_ModuleLicense_ExtraInfo
  name: ExtraInfo
  nameWithType: ModuleLicense.ExtraInfo
  fullName: SuperOffice.WebApi.Data.ModuleLicense.ExtraInfo
- uid: SuperOffice.WebApi.Data.ModuleLicense.SortOrder*
  commentId: Overload:SuperOffice.WebApi.Data.ModuleLicense.SortOrder
  isExternal: true
  href: SuperOffice.WebApi.Data.ModuleLicense.html#SuperOffice_WebApi_Data_ModuleLicense_SortOrder
  name: SortOrder
  nameWithType: ModuleLicense.SortOrder
  fullName: SuperOffice.WebApi.Data.ModuleLicense.SortOrder
- uid: SuperOffice.WebApi.Data.ModuleLicense.IsHidden*
  commentId: Overload:SuperOffice.WebApi.Data.ModuleLicense.IsHidden
  isExternal: true
  href: SuperOffice.WebApi.Data.ModuleLicense.html#SuperOffice_WebApi_Data_ModuleLicense_IsHidden
  name: IsHidden
  nameWithType: ModuleLicense.IsHidden
  fullName: SuperOffice.WebApi.Data.ModuleLicense.IsHidden
- uid: SuperOffice.WebApi.Data.ModuleLicense.PrerequisiteModuleName*
  commentId: Overload:SuperOffice.WebApi.Data.ModuleLicense.PrerequisiteModuleName
  isExternal: true
  href: SuperOffice.WebApi.Data.ModuleLicense.html#SuperOffice_WebApi_Data_ModuleLicense_PrerequisiteModuleName
  name: PrerequisiteModuleName
  nameWithType: ModuleLicense.PrerequisiteModuleName
  fullName: SuperOffice.WebApi.Data.ModuleLicense.PrerequisiteModuleName
- uid: SuperOffice.WebApi.Data.ModuleLicense.Signature*
  commentId: Overload:SuperOffice.WebApi.Data.ModuleLicense.Signature
  isExternal: true
  href: SuperOffice.WebApi.Data.ModuleLicense.html#SuperOffice_WebApi_Data_ModuleLicense_Signature
  name: Signature
  nameWithType: ModuleLicense.Signature
  fullName: SuperOffice.WebApi.Data.ModuleLicense.Signature
