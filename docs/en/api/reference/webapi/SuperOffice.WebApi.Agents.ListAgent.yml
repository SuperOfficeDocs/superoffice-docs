### YamlMime:ManagedReference
items:
- uid: SuperOffice.WebApi.Agents.ListAgent
  commentId: T:SuperOffice.WebApi.Agents.ListAgent
  id: ListAgent
  parent: SuperOffice.WebApi.Agents
  children:
  - SuperOffice.WebApi.Agents.ListAgent.#ctor(SuperOffice.WebApi.WebApiOptions,System.Net.Http.HttpClient)
  - SuperOffice.WebApi.Agents.ListAgent.#ctor(System.Net.Http.HttpClient)
  - SuperOffice.WebApi.Agents.ListAgent.AddFromListDefinitionAsync(System.Int32,SuperOffice.WebApi.Data.ListItemEntity,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.AddFromListNameAsync(System.String,SuperOffice.WebApi.Data.ListItemEntity,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.AddHierarchyToPathAsync(SuperOffice.WebApi.Data.Domain,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.ChangeCurrencyAsync(System.Double,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.CreateDefaultAmountClassEntityAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.CreateDefaultCountryAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.CreateDefaultCurrencyEntityAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.CreateDefaultDocumentTemplateEntityAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.CreateDefaultDocumentTemplateLanguageAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.CreateDefaultExtAppEntityAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.CreateDefaultHeadingEntityAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.CreateDefaultHeadingFromListDefinitionAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.CreateDefaultHierarchyEntityAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.CreateDefaultListEntityAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.CreateDefaultListItemEntityAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.CreateDefaultProjectTypeEntityAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.CreateDefaultRelationDefinitionEntityAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.CreateDefaultResourceEntityAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.CreateDefaultSaleStageEntityAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.CreateDefaultSaleTypeEntityAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.CreateDefaultTicketCategoryEntityAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.CreateDefaultTicketPriorityEntityAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.CreateDefaultTicketStatusEntityAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.CreateDefaultWebPanelEntityAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.DeleteAllFromListDefinitionAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.DeleteAllFromListNameAsync(System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.DeleteAllHeadingsFromListDefinitionAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.DeleteAllHeadingsFromNameAsync(System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.DeleteAppWebPanelsAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.DeleteDocumentTemplateLanguageAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.DeleteFromListDefinitionAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.DeleteFromListNameAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.DeleteHierarchyEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.DeleteHierarchyFromPathAsync(SuperOffice.WebApi.Data.Domain,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.DeleteListEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.DeleteListEntityByNameAsync(System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.DeleteProjectStatusAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.DeleteResourceEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.DeleteTicketCategoryEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.DeleteTicketPriorityEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.DeleteTicketStatusEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.DeleteWebPanelAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GenerateNavigationUrlAsync(SuperOffice.WebApi.Data.Navigation,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetAllConsentSourceAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetAllCountriesAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetAllCurrenciesAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetAllDocumentTemplatesAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetAllDomainsAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetAllFromListDefinitionAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetAllFromListNameAsync(System.String,System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetAllInDomainAsync(SuperOffice.WebApi.Data.Domain,System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetAllLegalBaseAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetAllReasonSoldAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetAllReasonStalledAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetAllSaleStagesAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetAllSaleTypeAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetAllSaleTypeEntitiesAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetAllSelectionCategoryAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetAllTasksAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetAllTicketPrioritiesAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetAmountClassEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetAppWebPanelsAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetBaseCurrencyAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetBusinessAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetBusinessesAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetBusinessListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetCategoriesAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetCategoryAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetCategoryListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetCompetitorAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetCompetitorListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetCompetitorsAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetConsentPurposeAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetConsentPurposeListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetConsentPurposesAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetConsentSourceAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetConsentSourceListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetConsentSourcesAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetCountriesAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetCountryAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetCountryListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetCreditedAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetCreditedListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetCreditedsAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetCurrenciesAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetCurrencyAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetCurrencyEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetCurrencyListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetCustomerLanguageAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetCustomerLanguageListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetCustomerLanguagesAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetDeliveryTermAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetDeliveryTermsAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetDeliveryTypeAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetDeliveryTypesAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetDepartmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetDepartmentListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetDepartmentsAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateExtensionAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateLanguagesAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplatePropertiesAsync(System.Int32,System.String[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplatesAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplatesTasksAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateStreamFromIdAsync(System.Int32,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateTaskAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateUrlAsync(System.Int32,System.Boolean,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateUsedInProjectStageAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateUsedInSalesStageAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetDocumentTypesForPluginAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetEmarketingStrictModeAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetExtAppEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetFromListDefinitionAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetFromListNameAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetHeadingEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetHeadingsAsync(System.Int32,System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetHeadingsForListItemFromListNameAsync(System.String,System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetHeadingsFromListDefinitionAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetHeadingsFromNameAsync(System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetHierarchyEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetHierarchyFromPathAsync(SuperOffice.WebApi.Data.Domain,System.String,System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetInstalledLanguagesAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetLanguageInfoAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetLanguageInfoListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetLegalBaseAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetLegalBaseListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetLegalBasesAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetLinkAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetLinkListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetListDefinitionsAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetListEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetListEntityByNameAsync(System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetListItemsForHeadingAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetListItemsForHeadingFromListNameAsync(System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetListItemsForUserGroupAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetListItemsForUserGroupFromListNameAsync(System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetLocalizedTextAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetLocalizedTextByTypeAsync(SuperOffice.WebApi.Data.LocalizedTextType,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetLocalizedTextListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetLocalizedTextsAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetLocalizedTextsByLanguageIdAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetLocalizedTextsByTypeAsync(SuperOffice.WebApi.Data.LocalizedTextType[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetMrMrsAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetMrMrsesAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetMrMrsListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetOurCurrencyAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetOwnerCompanysCurrencyAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetPaymentTermAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetPaymentTermsAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetPaymentTypeAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetPaymentTypesAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetPluginCapabilitiesAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetPluginListAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetPositionAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetPositionListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetPositionsAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetPrioritiesAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetPriorityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetPriorityListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetProductCategoriesAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetProductCategoryAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetProductFamiliesAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetProductFamilyAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetProductTypeAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetProductTypesAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetProjectStatusAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetProjectStatusesAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetProjectStatusListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetProjectTypeAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetProjectTypeEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetProjectTypeListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetProjectTypesAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetQuickRepliesAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetRatingAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetRatingListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetRatingsAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetReasonAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetReasonListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetReasonsAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetReasonSoldAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetReasonSoldListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetReasonStalledAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetReasonStalledListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetRelationDefinitionEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetResourceEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetSaleStageEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetSaleTypeAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetSaleTypeEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetSaleTypeListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetSelectionCategoryAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetSelectionCategoryListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetSourceAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetSourceListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetSourcesAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetTaskAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetTaskListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetTasksAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetTicketCategoriesAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetTicketCategoriesForUserGroupsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetTicketCategoryAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetTicketCategoryEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetTicketCategoryListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetTicketPrioritiesAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetTicketPriorityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetTicketPriorityEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetTicketPriorityListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetTicketStatusEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetTicketStatusesAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetTicketStatusListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetVisibleForUserGroupsAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetVisibleForUserGroupsFromListNameAsync(System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetWebPanelByProgIdAsync(System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetWebPanelEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GetWebPanelListAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.GlobalChangeTicketStatusAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.MoveAllTicketsAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.MoveListItemAsync(System.Int32,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.RebuildFullnamesAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SaveAllFromListDefinitionAsync(System.Int32,SuperOffice.WebApi.Data.ListItemEntity[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SaveAllFromListNameAsync(System.String,SuperOffice.WebApi.Data.ListItemEntity[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SaveAmountClassEntityAsync(SuperOffice.WebApi.Data.AmountClassEntity,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SaveConsentPurposeAsync(SuperOffice.WebApi.Data.ConsentPurpose,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SaveConsentSourceAsync(SuperOffice.WebApi.Data.ConsentSource,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SaveCountryAsync(SuperOffice.WebApi.Data.Country,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SaveCurrencyEntityAsync(SuperOffice.WebApi.Data.CurrencyEntity,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SaveDocumentTemplateEntityAsync(SuperOffice.WebApi.Data.DocumentTemplateEntity,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SaveDocumentTemplateStreamAsync(System.Int32,System.Byte[],System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SaveExtAppEntityAsync(SuperOffice.WebApi.Data.ExtAppEntity,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SaveFromListDefinitionAsync(System.Int32,System.Int32,SuperOffice.WebApi.Data.ListItemEntity,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SaveFromListNameAsync(System.Int32,System.String,SuperOffice.WebApi.Data.ListItemEntity,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SaveHeadingEntityAsync(SuperOffice.WebApi.Data.HeadingEntity,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SaveHeadingFromListDefinitionAsync(System.Int32,SuperOffice.WebApi.Data.HeadingEntity,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SaveHeadingFromNameAsync(System.String,SuperOffice.WebApi.Data.HeadingEntity,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SaveHeadingsForListItemFromListDefinitionAsync(System.Int32,System.Int32,SuperOffice.WebApi.Data.SelectableMDOListItem[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SaveHeadingsForListItemFromListNameAsync(System.String,System.Int32,SuperOffice.WebApi.Data.SelectableMDOListItem[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SaveHeadingsFromListDefinitionAsync(System.Int32,SuperOffice.WebApi.Data.HeadingEntity[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SaveHeadingsFromNameAsync(System.String,SuperOffice.WebApi.Data.HeadingEntity[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SaveHierarchyEntityAsync(SuperOffice.WebApi.Data.HierarchyEntity,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SaveLegalBaseAsync(SuperOffice.WebApi.Data.LegalBase,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SaveListEntityAsync(SuperOffice.WebApi.Data.ListEntity,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SaveListEntityByNameAsync(System.String,SuperOffice.WebApi.Data.ListEntity,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SaveListItemEntityAsync(SuperOffice.WebApi.Data.ListItemEntity,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SaveProjectTypeEntityAsync(SuperOffice.WebApi.Data.ProjectTypeEntity,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SaveQuickRepliesAsync(SuperOffice.WebApi.Data.QuickReply[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SaveRelationDefinitionEntityAsync(SuperOffice.WebApi.Data.RelationDefinitionEntity,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SaveResourceEntityAsync(SuperOffice.WebApi.Data.ResourceEntity,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SaveSaleStageEntityAsync(SuperOffice.WebApi.Data.SaleStageEntity,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SaveSaleTypeEntityAsync(SuperOffice.WebApi.Data.SaleTypeEntity,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SaveTicketCategoryEntityAsync(SuperOffice.WebApi.Data.TicketCategoryEntity,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SaveTicketPriorityEntityAsync(SuperOffice.WebApi.Data.TicketPriorityEntity,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SaveTicketStatusEntityAsync(SuperOffice.WebApi.Data.TicketStatusEntity,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SaveWebPanelEntityAsync(SuperOffice.WebApi.Data.WebPanelEntity,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SetDocumentPluginForAllDocumentTemplatesAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SetDocumentTemplateFromDocumentTemplateAsync(System.Int32,SuperOffice.WebApi.Data.DocumentTemplateEntity,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SetDocumentTemplateStreamAsync(SuperOffice.WebApi.Data.DocumentTemplateEntity,System.Byte[],System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SetEmarketingStrictModeAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SetHeadingsForListItemAsync(System.Int32,System.Int32,System.Int32[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SetListItemsForHeadingAsync(System.Int32,System.Int32,System.Int32[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SetListItemsForHeadingFromListNameAsync(System.String,System.Int32,System.Int32[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SetListItemsForUserGroupAsync(System.Int32,System.Int32,System.Int32[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SetListItemsForUserGroupFromListNameAsync(System.String,System.Int32,System.Int32[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SetRankOnHeadingsAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SetRankOnProjectActivityAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SetRankOnProjectDocumentAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SetRankOnSaleActivityAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SetRankOnSaleDocumentAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SetTicketCategoriesForUserGroupAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SetVisibleForUserGroupAsync(System.Int32,System.Int32,System.Int32[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SetVisibleForUserGroupsAsync(System.Int32,System.Int32,SuperOffice.WebApi.Data.SelectableMDOListItem[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SetVisibleForUserGroupsFromListNameAsync(System.String,System.Int32,SuperOffice.WebApi.Data.SelectableMDOListItem[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.SortListItemsAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.ListAgent.UpdateHierarchyFromPathAsync(SuperOffice.WebApi.Data.Domain,System.String,SuperOffice.WebApi.Data.HierarchyEntity,SuperOffice.WebApi.RequestOptions)
  langs:
  - csharp
  - vb
  name: ListAgent
  nameWithType: ListAgent
  fullName: SuperOffice.WebApi.Agents.ListAgent
  type: Class
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCollection of all services that works with Lists. These are typical lists of data shown in dropdown list, checkbox lists, etc.\n"
  example:
  - "\n<pre><code>  using SuperOffice.WebApi;\n  using SuperOffice.WebApi.Agents;\n\n  var mySession = new WebApiOptions(&quot;http://example.com/super/api&quot;);\n  mySession.Authorization = new AuthorizationUsernamePassword(&quot;user&quot;, &quot;pass&quot;);\n  using (ListAgent agent = new ListAgent(mySession))\n  {\n        // call methods on agent here...\n  }</code></pre>\n"
  syntax:
    content: 'public class ListAgent : AgentBase, IDisposable'
    content.vb: >-
      Public Class ListAgent
          Inherits AgentBase
          Implements IDisposable
  inheritance:
  - System.Object
  - SuperOffice.WebApi.Agents.AgentBase
  implements:
  - System.IDisposable
  inheritedMembers:
  - SuperOffice.WebApi.Agents.AgentBase._json
  - SuperOffice.WebApi.Agents.AgentBase._binary
  - SuperOffice.WebApi.Agents.AgentBase._config
  - SuperOffice.WebApi.Agents.AgentBase._client
  - SuperOffice.WebApi.Agents.AgentBase.Merge(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
  - SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream(System.Net.Http.HttpMethod,System.String,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
  - SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization(SuperOffice.WebApi.IAuthorization)
  - SuperOffice.WebApi.Agents.AgentBase.CancelRequest
  - SuperOffice.WebApi.Agents.AgentBase.SendRequestObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
  - SuperOffice.WebApi.Agents.AgentBase.SendRequest(System.Net.Http.HttpRequestMessage,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage)
  - SuperOffice.WebApi.Agents.AgentBase.ParseResponse``1(System.Net.Http.HttpResponseMessage)
  - SuperOffice.WebApi.Agents.AgentBase.Finally(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AgentBase.Dispose
  - SuperOffice.WebApi.Agents.AgentBase.Configuration
  - SuperOffice.WebApi.Agents.AgentBase.Client
  - SuperOffice.WebApi.Agents.AgentBase.HasRunningRequest
  - SuperOffice.WebApi.Agents.AgentBase.ClientCancellationTokenSource
  - SuperOffice.WebApi.Agents.AgentBase.ProgressListener
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.WebApi.Agents.ListAgent.#ctor(System.Net.Http.HttpClient)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.#ctor(System.Net.Http.HttpClient)
  id: '#ctor(System.Net.Http.HttpClient)'
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: ListAgent(HttpClient)
  nameWithType: ListAgent.ListAgent(HttpClient)
  fullName: SuperOffice.WebApi.Agents.ListAgent.ListAgent(System.Net.Http.HttpClient)
  type: Constructor
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nConstructor: Collection of all services that works with Lists. These are typical lists of data shown in dropdown list, checkbox lists, etc.\n"
  syntax:
    content: public ListAgent(HttpClient httpClient)
    parameters:
    - id: httpClient
      type: System.Net.Http.HttpClient
      description: Use this HTTP client instead of making a new one. Client is disposed when agent is disposed.
    content.vb: Public Sub New(httpClient As HttpClient)
  overload: SuperOffice.WebApi.Agents.ListAgent.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.#ctor(SuperOffice.WebApi.WebApiOptions,System.Net.Http.HttpClient)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.#ctor(SuperOffice.WebApi.WebApiOptions,System.Net.Http.HttpClient)
  id: '#ctor(SuperOffice.WebApi.WebApiOptions,System.Net.Http.HttpClient)'
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: ListAgent(WebApiOptions, HttpClient)
  nameWithType: ListAgent.ListAgent(WebApiOptions, HttpClient)
  fullName: SuperOffice.WebApi.Agents.ListAgent.ListAgent(SuperOffice.WebApi.WebApiOptions, System.Net.Http.HttpClient)
  type: Constructor
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nConstructor: Collection of all services that works with Lists. These are typical lists of data shown in dropdown list, checkbox lists, etc.\n"
  syntax:
    content: public ListAgent(WebApiOptions options, HttpClient httpClient = null)
    parameters:
    - id: options
      type: SuperOffice.WebApi.WebApiOptions
      description: Base URL and authentication values.
    - id: httpClient
      type: System.Net.Http.HttpClient
      description: 'Optional: Use this HTTP client instead of making a new one. Client is disposed when agent is disposed.'
    content.vb: Public Sub New(options As WebApiOptions, httpClient As HttpClient = Nothing)
  overload: SuperOffice.WebApi.Agents.ListAgent.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultCurrencyEntityAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.CreateDefaultCurrencyEntityAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultCurrencyEntityAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultCurrencyEntityAsync(RequestOptions)
  nameWithType: ListAgent.CreateDefaultCurrencyEntityAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultCurrencyEntityAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet default values into a new CurrencyEntity.\nNetServer calculates default values on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: public Task<CurrencyEntity> CreateDefaultCurrencyEntityAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.CurrencyEntity}
      description: A blank CurrencyEntity
    content.vb: Public Function CreateDefaultCurrencyEntityAsync(requestOptions As RequestOptions = Nothing) As Task(Of CurrencyEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultCurrencyEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveCurrencyEntityAsync(SuperOffice.WebApi.Data.CurrencyEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SaveCurrencyEntityAsync(SuperOffice.WebApi.Data.CurrencyEntity,SuperOffice.WebApi.RequestOptions)
  id: SaveCurrencyEntityAsync(SuperOffice.WebApi.Data.CurrencyEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SaveCurrencyEntityAsync(CurrencyEntity, RequestOptions)
  nameWithType: ListAgent.SaveCurrencyEntityAsync(CurrencyEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveCurrencyEntityAsync(SuperOffice.WebApi.Data.CurrencyEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdates the existing CurrencyEntity or creates a new CurrencyEntity if the id parameter is 0. \n"
  syntax:
    content: public Task<CurrencyEntity> SaveCurrencyEntityAsync(CurrencyEntity currencyEntity, RequestOptions requestOptions = null)
    parameters:
    - id: currencyEntity
      type: SuperOffice.WebApi.Data.CurrencyEntity
      description: The CurrencyEntity that is saved.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.CurrencyEntity}
      description: New or updated CurrencyEntity
    content.vb: Public Function SaveCurrencyEntityAsync(currencyEntity As CurrencyEntity, requestOptions As RequestOptions = Nothing) As Task(Of CurrencyEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.SaveCurrencyEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultAmountClassEntityAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.CreateDefaultAmountClassEntityAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultAmountClassEntityAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultAmountClassEntityAsync(RequestOptions)
  nameWithType: ListAgent.CreateDefaultAmountClassEntityAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultAmountClassEntityAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet default values into a new AmountClassEntity.\nNetServer calculates default values on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: public Task<AmountClassEntity> CreateDefaultAmountClassEntityAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AmountClassEntity}
      description: A blank AmountClassEntity
    content.vb: Public Function CreateDefaultAmountClassEntityAsync(requestOptions As RequestOptions = Nothing) As Task(Of AmountClassEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultAmountClassEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveAmountClassEntityAsync(SuperOffice.WebApi.Data.AmountClassEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SaveAmountClassEntityAsync(SuperOffice.WebApi.Data.AmountClassEntity,SuperOffice.WebApi.RequestOptions)
  id: SaveAmountClassEntityAsync(SuperOffice.WebApi.Data.AmountClassEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SaveAmountClassEntityAsync(AmountClassEntity, RequestOptions)
  nameWithType: ListAgent.SaveAmountClassEntityAsync(AmountClassEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveAmountClassEntityAsync(SuperOffice.WebApi.Data.AmountClassEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdates the existing AmountClassEntity or creates a new AmountClassEntity if the id parameter is 0. \n"
  syntax:
    content: public Task<AmountClassEntity> SaveAmountClassEntityAsync(AmountClassEntity amountClassEntity, RequestOptions requestOptions = null)
    parameters:
    - id: amountClassEntity
      type: SuperOffice.WebApi.Data.AmountClassEntity
      description: The AmountClassEntity that is saved.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AmountClassEntity}
      description: New or updated AmountClassEntity
    content.vb: Public Function SaveAmountClassEntityAsync(amountClassEntity As AmountClassEntity, requestOptions As RequestOptions = Nothing) As Task(Of AmountClassEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.SaveAmountClassEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultHeadingEntityAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.CreateDefaultHeadingEntityAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultHeadingEntityAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultHeadingEntityAsync(RequestOptions)
  nameWithType: ListAgent.CreateDefaultHeadingEntityAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultHeadingEntityAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet default values into a new HeadingEntity.\nNetServer calculates default values on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: public Task<HeadingEntity> CreateDefaultHeadingEntityAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.HeadingEntity}
      description: A blank HeadingEntity
    content.vb: Public Function CreateDefaultHeadingEntityAsync(requestOptions As RequestOptions = Nothing) As Task(Of HeadingEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultHeadingEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveHeadingEntityAsync(SuperOffice.WebApi.Data.HeadingEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SaveHeadingEntityAsync(SuperOffice.WebApi.Data.HeadingEntity,SuperOffice.WebApi.RequestOptions)
  id: SaveHeadingEntityAsync(SuperOffice.WebApi.Data.HeadingEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SaveHeadingEntityAsync(HeadingEntity, RequestOptions)
  nameWithType: ListAgent.SaveHeadingEntityAsync(HeadingEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveHeadingEntityAsync(SuperOffice.WebApi.Data.HeadingEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdates the existing HeadingEntity or creates a new HeadingEntity if the id parameter is 0. \n"
  syntax:
    content: public Task<HeadingEntity> SaveHeadingEntityAsync(HeadingEntity headingEntity, RequestOptions requestOptions = null)
    parameters:
    - id: headingEntity
      type: SuperOffice.WebApi.Data.HeadingEntity
      description: The HeadingEntity that is saved.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.HeadingEntity}
      description: New or updated HeadingEntity
    content.vb: Public Function SaveHeadingEntityAsync(headingEntity As HeadingEntity, requestOptions As RequestOptions = Nothing) As Task(Of HeadingEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.SaveHeadingEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultListEntityAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.CreateDefaultListEntityAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultListEntityAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultListEntityAsync(RequestOptions)
  nameWithType: ListAgent.CreateDefaultListEntityAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultListEntityAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet default values into a new ListEntity.\nNetServer calculates default values on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: public Task<ListEntity> CreateDefaultListEntityAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ListEntity}
      description: A blank ListEntity
    content.vb: Public Function CreateDefaultListEntityAsync(requestOptions As RequestOptions = Nothing) As Task(Of ListEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultListEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveListEntityAsync(SuperOffice.WebApi.Data.ListEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SaveListEntityAsync(SuperOffice.WebApi.Data.ListEntity,SuperOffice.WebApi.RequestOptions)
  id: SaveListEntityAsync(SuperOffice.WebApi.Data.ListEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SaveListEntityAsync(ListEntity, RequestOptions)
  nameWithType: ListAgent.SaveListEntityAsync(ListEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveListEntityAsync(SuperOffice.WebApi.Data.ListEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdates the existing ListEntity or creates a new ListEntity if the id parameter is 0. \n"
  syntax:
    content: public Task<ListEntity> SaveListEntityAsync(ListEntity listEntity, RequestOptions requestOptions = null)
    parameters:
    - id: listEntity
      type: SuperOffice.WebApi.Data.ListEntity
      description: The ListEntity that is saved.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ListEntity}
      description: New or updated ListEntity
    content.vb: Public Function SaveListEntityAsync(listEntity As ListEntity, requestOptions As RequestOptions = Nothing) As Task(Of ListEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.SaveListEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.DeleteListEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.DeleteListEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: DeleteListEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: DeleteListEntityAsync(Int32, RequestOptions)
  nameWithType: ListAgent.DeleteListEntityAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.DeleteListEntityAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nDeletes the ListEntity\n"
  syntax:
    content: public Task DeleteListEntityAsync(int listEntityId, RequestOptions requestOptions = null)
    parameters:
    - id: listEntityId
      type: System.Int32
      description: The identity of the ListEntity
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function DeleteListEntityAsync(listEntityId As Integer, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.ListAgent.DeleteListEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultListItemEntityAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.CreateDefaultListItemEntityAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultListItemEntityAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultListItemEntityAsync(RequestOptions)
  nameWithType: ListAgent.CreateDefaultListItemEntityAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultListItemEntityAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet default values into a new ListItemEntity.\nNetServer calculates default values on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: public Task<ListItemEntity> CreateDefaultListItemEntityAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ListItemEntity}
      description: A blank ListItemEntity
    content.vb: Public Function CreateDefaultListItemEntityAsync(requestOptions As RequestOptions = Nothing) As Task(Of ListItemEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultListItemEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultHierarchyEntityAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.CreateDefaultHierarchyEntityAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultHierarchyEntityAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultHierarchyEntityAsync(RequestOptions)
  nameWithType: ListAgent.CreateDefaultHierarchyEntityAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultHierarchyEntityAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet default values into a new HierarchyEntity.\nNetServer calculates default values on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: public Task<HierarchyEntity> CreateDefaultHierarchyEntityAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.HierarchyEntity}
      description: A blank HierarchyEntity
    content.vb: Public Function CreateDefaultHierarchyEntityAsync(requestOptions As RequestOptions = Nothing) As Task(Of HierarchyEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultHierarchyEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveHierarchyEntityAsync(SuperOffice.WebApi.Data.HierarchyEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SaveHierarchyEntityAsync(SuperOffice.WebApi.Data.HierarchyEntity,SuperOffice.WebApi.RequestOptions)
  id: SaveHierarchyEntityAsync(SuperOffice.WebApi.Data.HierarchyEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SaveHierarchyEntityAsync(HierarchyEntity, RequestOptions)
  nameWithType: ListAgent.SaveHierarchyEntityAsync(HierarchyEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveHierarchyEntityAsync(SuperOffice.WebApi.Data.HierarchyEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdates the existing HierarchyEntity or creates a new HierarchyEntity if the id parameter is 0. \n"
  syntax:
    content: public Task<HierarchyEntity> SaveHierarchyEntityAsync(HierarchyEntity hierarchyEntity, RequestOptions requestOptions = null)
    parameters:
    - id: hierarchyEntity
      type: SuperOffice.WebApi.Data.HierarchyEntity
      description: The HierarchyEntity that is saved.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.HierarchyEntity}
      description: New or updated HierarchyEntity
    content.vb: Public Function SaveHierarchyEntityAsync(hierarchyEntity As HierarchyEntity, requestOptions As RequestOptions = Nothing) As Task(Of HierarchyEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.SaveHierarchyEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.DeleteHierarchyEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.DeleteHierarchyEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: DeleteHierarchyEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: DeleteHierarchyEntityAsync(Int32, RequestOptions)
  nameWithType: ListAgent.DeleteHierarchyEntityAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.DeleteHierarchyEntityAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nDeletes the HierarchyEntity\n"
  syntax:
    content: public Task DeleteHierarchyEntityAsync(int hierarchyEntityId, RequestOptions requestOptions = null)
    parameters:
    - id: hierarchyEntityId
      type: System.Int32
      description: The identity of the HierarchyEntity
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function DeleteHierarchyEntityAsync(hierarchyEntityId As Integer, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.ListAgent.DeleteHierarchyEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultProjectTypeEntityAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.CreateDefaultProjectTypeEntityAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultProjectTypeEntityAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultProjectTypeEntityAsync(RequestOptions)
  nameWithType: ListAgent.CreateDefaultProjectTypeEntityAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultProjectTypeEntityAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet default values into a new ProjectTypeEntity.\nNetServer calculates default values on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: public Task<ProjectTypeEntity> CreateDefaultProjectTypeEntityAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ProjectTypeEntity}
      description: A blank ProjectTypeEntity
    content.vb: Public Function CreateDefaultProjectTypeEntityAsync(requestOptions As RequestOptions = Nothing) As Task(Of ProjectTypeEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultProjectTypeEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveProjectTypeEntityAsync(SuperOffice.WebApi.Data.ProjectTypeEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SaveProjectTypeEntityAsync(SuperOffice.WebApi.Data.ProjectTypeEntity,SuperOffice.WebApi.RequestOptions)
  id: SaveProjectTypeEntityAsync(SuperOffice.WebApi.Data.ProjectTypeEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SaveProjectTypeEntityAsync(ProjectTypeEntity, RequestOptions)
  nameWithType: ListAgent.SaveProjectTypeEntityAsync(ProjectTypeEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveProjectTypeEntityAsync(SuperOffice.WebApi.Data.ProjectTypeEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdates the existing ProjectTypeEntity or creates a new ProjectTypeEntity if the id parameter is 0. \n"
  syntax:
    content: public Task<ProjectTypeEntity> SaveProjectTypeEntityAsync(ProjectTypeEntity projectTypeEntity, RequestOptions requestOptions = null)
    parameters:
    - id: projectTypeEntity
      type: SuperOffice.WebApi.Data.ProjectTypeEntity
      description: The ProjectTypeEntity that is saved.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ProjectTypeEntity}
      description: New or updated ProjectTypeEntity
    content.vb: Public Function SaveProjectTypeEntityAsync(projectTypeEntity As ProjectTypeEntity, requestOptions As RequestOptions = Nothing) As Task(Of ProjectTypeEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.SaveProjectTypeEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultResourceEntityAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.CreateDefaultResourceEntityAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultResourceEntityAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultResourceEntityAsync(RequestOptions)
  nameWithType: ListAgent.CreateDefaultResourceEntityAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultResourceEntityAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet default values into a new ResourceEntity.\nNetServer calculates default values on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: public Task<ResourceEntity> CreateDefaultResourceEntityAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ResourceEntity}
      description: A blank ResourceEntity
    content.vb: Public Function CreateDefaultResourceEntityAsync(requestOptions As RequestOptions = Nothing) As Task(Of ResourceEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultResourceEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveResourceEntityAsync(SuperOffice.WebApi.Data.ResourceEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SaveResourceEntityAsync(SuperOffice.WebApi.Data.ResourceEntity,SuperOffice.WebApi.RequestOptions)
  id: SaveResourceEntityAsync(SuperOffice.WebApi.Data.ResourceEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SaveResourceEntityAsync(ResourceEntity, RequestOptions)
  nameWithType: ListAgent.SaveResourceEntityAsync(ResourceEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveResourceEntityAsync(SuperOffice.WebApi.Data.ResourceEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdates the existing ResourceEntity or creates a new ResourceEntity if the id parameter is 0. \n"
  syntax:
    content: public Task<ResourceEntity> SaveResourceEntityAsync(ResourceEntity resourceEntity, RequestOptions requestOptions = null)
    parameters:
    - id: resourceEntity
      type: SuperOffice.WebApi.Data.ResourceEntity
      description: The ResourceEntity that is saved.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ResourceEntity}
      description: New or updated ResourceEntity
    content.vb: Public Function SaveResourceEntityAsync(resourceEntity As ResourceEntity, requestOptions As RequestOptions = Nothing) As Task(Of ResourceEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.SaveResourceEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.DeleteResourceEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.DeleteResourceEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: DeleteResourceEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: DeleteResourceEntityAsync(Int32, RequestOptions)
  nameWithType: ListAgent.DeleteResourceEntityAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.DeleteResourceEntityAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nDeletes the ResourceEntity\n"
  syntax:
    content: public Task DeleteResourceEntityAsync(int resourceEntityId, RequestOptions requestOptions = null)
    parameters:
    - id: resourceEntityId
      type: System.Int32
      description: The identity of the ResourceEntity
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function DeleteResourceEntityAsync(resourceEntityId As Integer, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.ListAgent.DeleteResourceEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultSaleStageEntityAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.CreateDefaultSaleStageEntityAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultSaleStageEntityAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultSaleStageEntityAsync(RequestOptions)
  nameWithType: ListAgent.CreateDefaultSaleStageEntityAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultSaleStageEntityAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet default values into a new SaleStageEntity.\nNetServer calculates default values on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: public Task<SaleStageEntity> CreateDefaultSaleStageEntityAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SaleStageEntity}
      description: A blank SaleStageEntity
    content.vb: Public Function CreateDefaultSaleStageEntityAsync(requestOptions As RequestOptions = Nothing) As Task(Of SaleStageEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultSaleStageEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveSaleStageEntityAsync(SuperOffice.WebApi.Data.SaleStageEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SaveSaleStageEntityAsync(SuperOffice.WebApi.Data.SaleStageEntity,SuperOffice.WebApi.RequestOptions)
  id: SaveSaleStageEntityAsync(SuperOffice.WebApi.Data.SaleStageEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SaveSaleStageEntityAsync(SaleStageEntity, RequestOptions)
  nameWithType: ListAgent.SaveSaleStageEntityAsync(SaleStageEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveSaleStageEntityAsync(SuperOffice.WebApi.Data.SaleStageEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdates the existing SaleStageEntity or creates a new SaleStageEntity if the id parameter is 0. \n"
  syntax:
    content: public Task<SaleStageEntity> SaveSaleStageEntityAsync(SaleStageEntity saleStageEntity, RequestOptions requestOptions = null)
    parameters:
    - id: saleStageEntity
      type: SuperOffice.WebApi.Data.SaleStageEntity
      description: The SaleStageEntity that is saved.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SaleStageEntity}
      description: New or updated SaleStageEntity
    content.vb: Public Function SaveSaleStageEntityAsync(saleStageEntity As SaleStageEntity, requestOptions As RequestOptions = Nothing) As Task(Of SaleStageEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.SaveSaleStageEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultSaleTypeEntityAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.CreateDefaultSaleTypeEntityAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultSaleTypeEntityAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultSaleTypeEntityAsync(RequestOptions)
  nameWithType: ListAgent.CreateDefaultSaleTypeEntityAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultSaleTypeEntityAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet default values into a new SaleTypeEntity.\nNetServer calculates default values on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: public Task<SaleTypeEntity> CreateDefaultSaleTypeEntityAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SaleTypeEntity}
      description: A blank SaleTypeEntity
    content.vb: Public Function CreateDefaultSaleTypeEntityAsync(requestOptions As RequestOptions = Nothing) As Task(Of SaleTypeEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultSaleTypeEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveSaleTypeEntityAsync(SuperOffice.WebApi.Data.SaleTypeEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SaveSaleTypeEntityAsync(SuperOffice.WebApi.Data.SaleTypeEntity,SuperOffice.WebApi.RequestOptions)
  id: SaveSaleTypeEntityAsync(SuperOffice.WebApi.Data.SaleTypeEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SaveSaleTypeEntityAsync(SaleTypeEntity, RequestOptions)
  nameWithType: ListAgent.SaveSaleTypeEntityAsync(SaleTypeEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveSaleTypeEntityAsync(SuperOffice.WebApi.Data.SaleTypeEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdates the existing SaleTypeEntity or creates a new SaleTypeEntity if the id parameter is 0. \n"
  syntax:
    content: public Task<SaleTypeEntity> SaveSaleTypeEntityAsync(SaleTypeEntity saleTypeEntity, RequestOptions requestOptions = null)
    parameters:
    - id: saleTypeEntity
      type: SuperOffice.WebApi.Data.SaleTypeEntity
      description: The SaleTypeEntity that is saved.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SaleTypeEntity}
      description: New or updated SaleTypeEntity
    content.vb: Public Function SaveSaleTypeEntityAsync(saleTypeEntity As SaleTypeEntity, requestOptions As RequestOptions = Nothing) As Task(Of SaleTypeEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.SaveSaleTypeEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultWebPanelEntityAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.CreateDefaultWebPanelEntityAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultWebPanelEntityAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultWebPanelEntityAsync(RequestOptions)
  nameWithType: ListAgent.CreateDefaultWebPanelEntityAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultWebPanelEntityAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet default values into a new WebPanelEntity.\nNetServer calculates default values on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: public Task<WebPanelEntity> CreateDefaultWebPanelEntityAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.WebPanelEntity}
      description: A blank WebPanelEntity
    content.vb: Public Function CreateDefaultWebPanelEntityAsync(requestOptions As RequestOptions = Nothing) As Task(Of WebPanelEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultWebPanelEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveWebPanelEntityAsync(SuperOffice.WebApi.Data.WebPanelEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SaveWebPanelEntityAsync(SuperOffice.WebApi.Data.WebPanelEntity,SuperOffice.WebApi.RequestOptions)
  id: SaveWebPanelEntityAsync(SuperOffice.WebApi.Data.WebPanelEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SaveWebPanelEntityAsync(WebPanelEntity, RequestOptions)
  nameWithType: ListAgent.SaveWebPanelEntityAsync(WebPanelEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveWebPanelEntityAsync(SuperOffice.WebApi.Data.WebPanelEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdates the existing WebPanelEntity or creates a new WebPanelEntity if the id parameter is 0. \n"
  syntax:
    content: public Task<WebPanelEntity> SaveWebPanelEntityAsync(WebPanelEntity webPanelEntity, RequestOptions requestOptions = null)
    parameters:
    - id: webPanelEntity
      type: SuperOffice.WebApi.Data.WebPanelEntity
      description: The WebPanelEntity that is saved.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.WebPanelEntity}
      description: New or updated WebPanelEntity
    content.vb: Public Function SaveWebPanelEntityAsync(webPanelEntity As WebPanelEntity, requestOptions As RequestOptions = Nothing) As Task(Of WebPanelEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.SaveWebPanelEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultExtAppEntityAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.CreateDefaultExtAppEntityAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultExtAppEntityAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultExtAppEntityAsync(RequestOptions)
  nameWithType: ListAgent.CreateDefaultExtAppEntityAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultExtAppEntityAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet default values into a new ExtAppEntity.\nNetServer calculates default values on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: public Task<ExtAppEntity> CreateDefaultExtAppEntityAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ExtAppEntity}
      description: A blank ExtAppEntity
    content.vb: Public Function CreateDefaultExtAppEntityAsync(requestOptions As RequestOptions = Nothing) As Task(Of ExtAppEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultExtAppEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveExtAppEntityAsync(SuperOffice.WebApi.Data.ExtAppEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SaveExtAppEntityAsync(SuperOffice.WebApi.Data.ExtAppEntity,SuperOffice.WebApi.RequestOptions)
  id: SaveExtAppEntityAsync(SuperOffice.WebApi.Data.ExtAppEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SaveExtAppEntityAsync(ExtAppEntity, RequestOptions)
  nameWithType: ListAgent.SaveExtAppEntityAsync(ExtAppEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveExtAppEntityAsync(SuperOffice.WebApi.Data.ExtAppEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdates the existing ExtAppEntity or creates a new ExtAppEntity if the id parameter is 0. \n"
  syntax:
    content: public Task<ExtAppEntity> SaveExtAppEntityAsync(ExtAppEntity extAppEntity, RequestOptions requestOptions = null)
    parameters:
    - id: extAppEntity
      type: SuperOffice.WebApi.Data.ExtAppEntity
      description: The ExtAppEntity that is saved.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ExtAppEntity}
      description: New or updated ExtAppEntity
    content.vb: Public Function SaveExtAppEntityAsync(extAppEntity As ExtAppEntity, requestOptions As RequestOptions = Nothing) As Task(Of ExtAppEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.SaveExtAppEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultDocumentTemplateEntityAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.CreateDefaultDocumentTemplateEntityAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultDocumentTemplateEntityAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultDocumentTemplateEntityAsync(RequestOptions)
  nameWithType: ListAgent.CreateDefaultDocumentTemplateEntityAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultDocumentTemplateEntityAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet default values into a new DocumentTemplateEntity.\nNetServer calculates default values on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: public Task<DocumentTemplateEntity> CreateDefaultDocumentTemplateEntityAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DocumentTemplateEntity}
      description: A blank DocumentTemplateEntity
    content.vb: Public Function CreateDefaultDocumentTemplateEntityAsync(requestOptions As RequestOptions = Nothing) As Task(Of DocumentTemplateEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultDocumentTemplateEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveDocumentTemplateEntityAsync(SuperOffice.WebApi.Data.DocumentTemplateEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SaveDocumentTemplateEntityAsync(SuperOffice.WebApi.Data.DocumentTemplateEntity,SuperOffice.WebApi.RequestOptions)
  id: SaveDocumentTemplateEntityAsync(SuperOffice.WebApi.Data.DocumentTemplateEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SaveDocumentTemplateEntityAsync(DocumentTemplateEntity, RequestOptions)
  nameWithType: ListAgent.SaveDocumentTemplateEntityAsync(DocumentTemplateEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveDocumentTemplateEntityAsync(SuperOffice.WebApi.Data.DocumentTemplateEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdates the existing DocumentTemplateEntity or creates a new DocumentTemplateEntity if the id parameter is 0. \n"
  syntax:
    content: public Task<DocumentTemplateEntity> SaveDocumentTemplateEntityAsync(DocumentTemplateEntity documentTemplateEntity, RequestOptions requestOptions = null)
    parameters:
    - id: documentTemplateEntity
      type: SuperOffice.WebApi.Data.DocumentTemplateEntity
      description: The DocumentTemplateEntity that is saved.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DocumentTemplateEntity}
      description: New or updated DocumentTemplateEntity
    content.vb: Public Function SaveDocumentTemplateEntityAsync(documentTemplateEntity As DocumentTemplateEntity, requestOptions As RequestOptions = Nothing) As Task(Of DocumentTemplateEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.SaveDocumentTemplateEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultRelationDefinitionEntityAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.CreateDefaultRelationDefinitionEntityAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultRelationDefinitionEntityAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultRelationDefinitionEntityAsync(RequestOptions)
  nameWithType: ListAgent.CreateDefaultRelationDefinitionEntityAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultRelationDefinitionEntityAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet default values into a new RelationDefinitionEntity.\nNetServer calculates default values on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: public Task<RelationDefinitionEntity> CreateDefaultRelationDefinitionEntityAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.RelationDefinitionEntity}
      description: A blank RelationDefinitionEntity
    content.vb: Public Function CreateDefaultRelationDefinitionEntityAsync(requestOptions As RequestOptions = Nothing) As Task(Of RelationDefinitionEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultRelationDefinitionEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveRelationDefinitionEntityAsync(SuperOffice.WebApi.Data.RelationDefinitionEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SaveRelationDefinitionEntityAsync(SuperOffice.WebApi.Data.RelationDefinitionEntity,SuperOffice.WebApi.RequestOptions)
  id: SaveRelationDefinitionEntityAsync(SuperOffice.WebApi.Data.RelationDefinitionEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SaveRelationDefinitionEntityAsync(RelationDefinitionEntity, RequestOptions)
  nameWithType: ListAgent.SaveRelationDefinitionEntityAsync(RelationDefinitionEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveRelationDefinitionEntityAsync(SuperOffice.WebApi.Data.RelationDefinitionEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdates the existing RelationDefinitionEntity or creates a new RelationDefinitionEntity if the id parameter is 0. \n"
  syntax:
    content: public Task<RelationDefinitionEntity> SaveRelationDefinitionEntityAsync(RelationDefinitionEntity relationDefinitionEntity, RequestOptions requestOptions = null)
    parameters:
    - id: relationDefinitionEntity
      type: SuperOffice.WebApi.Data.RelationDefinitionEntity
      description: The RelationDefinitionEntity that is saved.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.RelationDefinitionEntity}
      description: New or updated RelationDefinitionEntity
    content.vb: Public Function SaveRelationDefinitionEntityAsync(relationDefinitionEntity As RelationDefinitionEntity, requestOptions As RequestOptions = Nothing) As Task(Of RelationDefinitionEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.SaveRelationDefinitionEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultTicketCategoryEntityAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.CreateDefaultTicketCategoryEntityAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultTicketCategoryEntityAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultTicketCategoryEntityAsync(RequestOptions)
  nameWithType: ListAgent.CreateDefaultTicketCategoryEntityAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultTicketCategoryEntityAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet default values into a new TicketCategoryEntity.\nNetServer calculates default values on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: public Task<TicketCategoryEntity> CreateDefaultTicketCategoryEntityAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketCategoryEntity}
      description: A blank TicketCategoryEntity
    content.vb: Public Function CreateDefaultTicketCategoryEntityAsync(requestOptions As RequestOptions = Nothing) As Task(Of TicketCategoryEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultTicketCategoryEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveTicketCategoryEntityAsync(SuperOffice.WebApi.Data.TicketCategoryEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SaveTicketCategoryEntityAsync(SuperOffice.WebApi.Data.TicketCategoryEntity,SuperOffice.WebApi.RequestOptions)
  id: SaveTicketCategoryEntityAsync(SuperOffice.WebApi.Data.TicketCategoryEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SaveTicketCategoryEntityAsync(TicketCategoryEntity, RequestOptions)
  nameWithType: ListAgent.SaveTicketCategoryEntityAsync(TicketCategoryEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveTicketCategoryEntityAsync(SuperOffice.WebApi.Data.TicketCategoryEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdates the existing TicketCategoryEntity or creates a new TicketCategoryEntity if the id parameter is 0. \n"
  syntax:
    content: public Task<TicketCategoryEntity> SaveTicketCategoryEntityAsync(TicketCategoryEntity ticketCategoryEntity, RequestOptions requestOptions = null)
    parameters:
    - id: ticketCategoryEntity
      type: SuperOffice.WebApi.Data.TicketCategoryEntity
      description: The TicketCategoryEntity that is saved.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketCategoryEntity}
      description: New or updated TicketCategoryEntity
    content.vb: Public Function SaveTicketCategoryEntityAsync(ticketCategoryEntity As TicketCategoryEntity, requestOptions As RequestOptions = Nothing) As Task(Of TicketCategoryEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.SaveTicketCategoryEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.DeleteTicketCategoryEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.DeleteTicketCategoryEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: DeleteTicketCategoryEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: DeleteTicketCategoryEntityAsync(Int32, RequestOptions)
  nameWithType: ListAgent.DeleteTicketCategoryEntityAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.DeleteTicketCategoryEntityAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nDeletes the TicketCategoryEntity\n"
  syntax:
    content: public Task DeleteTicketCategoryEntityAsync(int ticketCategoryEntityId, RequestOptions requestOptions = null)
    parameters:
    - id: ticketCategoryEntityId
      type: System.Int32
      description: The identity of the TicketCategoryEntity
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function DeleteTicketCategoryEntityAsync(ticketCategoryEntityId As Integer, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.ListAgent.DeleteTicketCategoryEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultTicketPriorityEntityAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.CreateDefaultTicketPriorityEntityAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultTicketPriorityEntityAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultTicketPriorityEntityAsync(RequestOptions)
  nameWithType: ListAgent.CreateDefaultTicketPriorityEntityAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultTicketPriorityEntityAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet default values into a new TicketPriorityEntity.\nNetServer calculates default values on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: public Task<TicketPriorityEntity> CreateDefaultTicketPriorityEntityAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketPriorityEntity}
      description: A blank TicketPriorityEntity
    content.vb: Public Function CreateDefaultTicketPriorityEntityAsync(requestOptions As RequestOptions = Nothing) As Task(Of TicketPriorityEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultTicketPriorityEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveTicketPriorityEntityAsync(SuperOffice.WebApi.Data.TicketPriorityEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SaveTicketPriorityEntityAsync(SuperOffice.WebApi.Data.TicketPriorityEntity,SuperOffice.WebApi.RequestOptions)
  id: SaveTicketPriorityEntityAsync(SuperOffice.WebApi.Data.TicketPriorityEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SaveTicketPriorityEntityAsync(TicketPriorityEntity, RequestOptions)
  nameWithType: ListAgent.SaveTicketPriorityEntityAsync(TicketPriorityEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveTicketPriorityEntityAsync(SuperOffice.WebApi.Data.TicketPriorityEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdates the existing TicketPriorityEntity or creates a new TicketPriorityEntity if the id parameter is 0. \n"
  syntax:
    content: public Task<TicketPriorityEntity> SaveTicketPriorityEntityAsync(TicketPriorityEntity ticketPriorityEntity, RequestOptions requestOptions = null)
    parameters:
    - id: ticketPriorityEntity
      type: SuperOffice.WebApi.Data.TicketPriorityEntity
      description: The TicketPriorityEntity that is saved.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketPriorityEntity}
      description: New or updated TicketPriorityEntity
    content.vb: Public Function SaveTicketPriorityEntityAsync(ticketPriorityEntity As TicketPriorityEntity, requestOptions As RequestOptions = Nothing) As Task(Of TicketPriorityEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.SaveTicketPriorityEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.DeleteTicketPriorityEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.DeleteTicketPriorityEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: DeleteTicketPriorityEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: DeleteTicketPriorityEntityAsync(Int32, RequestOptions)
  nameWithType: ListAgent.DeleteTicketPriorityEntityAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.DeleteTicketPriorityEntityAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nDeletes the TicketPriorityEntity\n"
  syntax:
    content: public Task DeleteTicketPriorityEntityAsync(int ticketPriorityEntityId, RequestOptions requestOptions = null)
    parameters:
    - id: ticketPriorityEntityId
      type: System.Int32
      description: The identity of the TicketPriorityEntity
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function DeleteTicketPriorityEntityAsync(ticketPriorityEntityId As Integer, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.ListAgent.DeleteTicketPriorityEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultTicketStatusEntityAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.CreateDefaultTicketStatusEntityAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultTicketStatusEntityAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultTicketStatusEntityAsync(RequestOptions)
  nameWithType: ListAgent.CreateDefaultTicketStatusEntityAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultTicketStatusEntityAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet default values into a new TicketStatusEntity.\nNetServer calculates default values on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: public Task<TicketStatusEntity> CreateDefaultTicketStatusEntityAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketStatusEntity}
      description: A blank TicketStatusEntity
    content.vb: Public Function CreateDefaultTicketStatusEntityAsync(requestOptions As RequestOptions = Nothing) As Task(Of TicketStatusEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultTicketStatusEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveTicketStatusEntityAsync(SuperOffice.WebApi.Data.TicketStatusEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SaveTicketStatusEntityAsync(SuperOffice.WebApi.Data.TicketStatusEntity,SuperOffice.WebApi.RequestOptions)
  id: SaveTicketStatusEntityAsync(SuperOffice.WebApi.Data.TicketStatusEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SaveTicketStatusEntityAsync(TicketStatusEntity, RequestOptions)
  nameWithType: ListAgent.SaveTicketStatusEntityAsync(TicketStatusEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveTicketStatusEntityAsync(SuperOffice.WebApi.Data.TicketStatusEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdates the existing TicketStatusEntity or creates a new TicketStatusEntity if the id parameter is 0. \n"
  syntax:
    content: public Task<TicketStatusEntity> SaveTicketStatusEntityAsync(TicketStatusEntity ticketStatusEntity, RequestOptions requestOptions = null)
    parameters:
    - id: ticketStatusEntity
      type: SuperOffice.WebApi.Data.TicketStatusEntity
      description: The TicketStatusEntity that is saved.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketStatusEntity}
      description: New or updated TicketStatusEntity
    content.vb: Public Function SaveTicketStatusEntityAsync(ticketStatusEntity As TicketStatusEntity, requestOptions As RequestOptions = Nothing) As Task(Of TicketStatusEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.SaveTicketStatusEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.DeleteTicketStatusEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.DeleteTicketStatusEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: DeleteTicketStatusEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: DeleteTicketStatusEntityAsync(Int32, RequestOptions)
  nameWithType: ListAgent.DeleteTicketStatusEntityAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.DeleteTicketStatusEntityAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nDeletes the TicketStatusEntity\n"
  syntax:
    content: public Task DeleteTicketStatusEntityAsync(int ticketStatusEntityId, RequestOptions requestOptions = null)
    parameters:
    - id: ticketStatusEntityId
      type: System.Int32
      description: The identity of the TicketStatusEntity
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function DeleteTicketStatusEntityAsync(ticketStatusEntityId As Integer, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.ListAgent.DeleteTicketStatusEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetBusinessAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetBusinessAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetBusinessAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetBusinessAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetBusinessAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetBusinessAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific Business object.                        \n"
  syntax:
    content: public Task<Business> GetBusinessAsync(int businessId, RequestOptions requestOptions = null)
    parameters:
    - id: businessId
      type: System.Int32
      description: The identifier of the Business object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Business}
      description: Business
    content.vb: Public Function GetBusinessAsync(businessId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Business)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetBusinessAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetBusinessListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetBusinessListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetBusinessListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetBusinessListAsync(Int32[], RequestOptions)
  nameWithType: ListAgent.GetBusinessListAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetBusinessListAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets an array of specific Business objects.                        \n"
  syntax:
    content: public Task<Business[]> GetBusinessListAsync(int[] businessIds, RequestOptions requestOptions = null)
    parameters:
    - id: businessIds
      type: System.Int32[]
      description: The identifiers of the Business object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Business[]}
      description: Array of Business objects
    content.vb: Public Function GetBusinessListAsync(businessIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of Business())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetBusinessListAsync*
  nameWithType.vb: ListAgent.GetBusinessListAsync(Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.GetBusinessListAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetBusinessListAsync(Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.GetBusinessesAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetBusinessesAsync(SuperOffice.WebApi.RequestOptions)
  id: GetBusinessesAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetBusinessesAsync(RequestOptions)
  nameWithType: ListAgent.GetBusinessesAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetBusinessesAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns all available businesses that a contact could have.\n"
  syntax:
    content: public Task<Business[]> GetBusinessesAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Business[]}
      description: An array of all available businesses
    content.vb: Public Function GetBusinessesAsync(requestOptions As RequestOptions = Nothing) As Task(Of Business())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetBusinessesAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetCategoryAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetCategoryAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetCategoryAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetCategoryAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetCategoryAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetCategoryAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific Category object.                        \n"
  syntax:
    content: public Task<Category> GetCategoryAsync(int categoryId, RequestOptions requestOptions = null)
    parameters:
    - id: categoryId
      type: System.Int32
      description: The identifier of the Category object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Category}
      description: Category
    content.vb: Public Function GetCategoryAsync(categoryId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Category)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetCategoryAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetCategoryListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetCategoryListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetCategoryListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetCategoryListAsync(Int32[], RequestOptions)
  nameWithType: ListAgent.GetCategoryListAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetCategoryListAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets an array of specific Category objects.                        \n"
  syntax:
    content: public Task<Category[]> GetCategoryListAsync(int[] categoryIds, RequestOptions requestOptions = null)
    parameters:
    - id: categoryIds
      type: System.Int32[]
      description: The identifiers of the Category object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Category[]}
      description: Array of Category objects
    content.vb: Public Function GetCategoryListAsync(categoryIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of Category())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetCategoryListAsync*
  nameWithType.vb: ListAgent.GetCategoryListAsync(Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.GetCategoryListAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetCategoryListAsync(Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.GetCategoriesAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetCategoriesAsync(SuperOffice.WebApi.RequestOptions)
  id: GetCategoriesAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetCategoriesAsync(RequestOptions)
  nameWithType: ListAgent.GetCategoriesAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetCategoriesAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns all categories a contact could belong to\n"
  syntax:
    content: public Task<Category[]> GetCategoriesAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Category[]}
      description: An array of all available categories
    content.vb: Public Function GetCategoriesAsync(requestOptions As RequestOptions = Nothing) As Task(Of Category())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetCategoriesAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetCompetitorAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetCompetitorAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetCompetitorAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetCompetitorAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetCompetitorAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetCompetitorAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific Competitor object.                        \n"
  syntax:
    content: public Task<Competitor> GetCompetitorAsync(int competitorId, RequestOptions requestOptions = null)
    parameters:
    - id: competitorId
      type: System.Int32
      description: The identifier of the Competitor object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Competitor}
      description: Competitor
    content.vb: Public Function GetCompetitorAsync(competitorId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Competitor)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetCompetitorAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetCompetitorListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetCompetitorListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetCompetitorListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetCompetitorListAsync(Int32[], RequestOptions)
  nameWithType: ListAgent.GetCompetitorListAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetCompetitorListAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets an array of specific Competitor objects.                        \n"
  syntax:
    content: public Task<Competitor[]> GetCompetitorListAsync(int[] competitorIds, RequestOptions requestOptions = null)
    parameters:
    - id: competitorIds
      type: System.Int32[]
      description: The identifiers of the Competitor object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Competitor[]}
      description: Array of Competitor objects
    content.vb: Public Function GetCompetitorListAsync(competitorIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of Competitor())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetCompetitorListAsync*
  nameWithType.vb: ListAgent.GetCompetitorListAsync(Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.GetCompetitorListAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetCompetitorListAsync(Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.GetCompetitorsAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetCompetitorsAsync(SuperOffice.WebApi.RequestOptions)
  id: GetCompetitorsAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetCompetitorsAsync(RequestOptions)
  nameWithType: ListAgent.GetCompetitorsAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetCompetitorsAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns all competitors\n"
  syntax:
    content: public Task<Competitor[]> GetCompetitorsAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Competitor[]}
    content.vb: Public Function GetCompetitorsAsync(requestOptions As RequestOptions = Nothing) As Task(Of Competitor())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetCompetitorsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetCountryAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetCountryAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetCountryAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetCountryAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetCountryAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetCountryAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific Country object.                        \n"
  syntax:
    content: public Task<Country> GetCountryAsync(int countryId, RequestOptions requestOptions = null)
    parameters:
    - id: countryId
      type: System.Int32
      description: The identifier of the Country object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Country}
      description: Country
    content.vb: Public Function GetCountryAsync(countryId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Country)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetCountryAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveCountryAsync(SuperOffice.WebApi.Data.Country,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SaveCountryAsync(SuperOffice.WebApi.Data.Country,SuperOffice.WebApi.RequestOptions)
  id: SaveCountryAsync(SuperOffice.WebApi.Data.Country,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SaveCountryAsync(Country, RequestOptions)
  nameWithType: ListAgent.SaveCountryAsync(Country, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveCountryAsync(SuperOffice.WebApi.Data.Country, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSaves a country\n"
  syntax:
    content: public Task<Country> SaveCountryAsync(Country country, RequestOptions requestOptions = null)
    parameters:
    - id: country
      type: SuperOffice.WebApi.Data.Country
      description: The country to save
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Country}
      description: The country that is saved
    content.vb: Public Function SaveCountryAsync(country As Country, requestOptions As RequestOptions = Nothing) As Task(Of Country)
  overload: SuperOffice.WebApi.Agents.ListAgent.SaveCountryAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultCountryAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.CreateDefaultCountryAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultCountryAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultCountryAsync(RequestOptions)
  nameWithType: ListAgent.CreateDefaultCountryAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultCountryAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a new country\n"
  syntax:
    content: public Task<Country> CreateDefaultCountryAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Country}
      description: A new country with default values
    content.vb: Public Function CreateDefaultCountryAsync(requestOptions As RequestOptions = Nothing) As Task(Of Country)
  overload: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultCountryAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetCountryListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetCountryListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetCountryListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetCountryListAsync(Int32[], RequestOptions)
  nameWithType: ListAgent.GetCountryListAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetCountryListAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets an array of specific Country objects.                        \n"
  syntax:
    content: public Task<Country[]> GetCountryListAsync(int[] countryIds, RequestOptions requestOptions = null)
    parameters:
    - id: countryIds
      type: System.Int32[]
      description: The identifiers of the Country object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Country[]}
      description: Array of Country objects
    content.vb: Public Function GetCountryListAsync(countryIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of Country())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetCountryListAsync*
  nameWithType.vb: ListAgent.GetCountryListAsync(Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.GetCountryListAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetCountryListAsync(Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.GetCountriesAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetCountriesAsync(SuperOffice.WebApi.RequestOptions)
  id: GetCountriesAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetCountriesAsync(RequestOptions)
  nameWithType: ListAgent.GetCountriesAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetCountriesAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns all available countries a contact or person could belong to.\n"
  syntax:
    content: public Task<Country[]> GetCountriesAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Country[]}
      description: An array of all available countries
    content.vb: Public Function GetCountriesAsync(requestOptions As RequestOptions = Nothing) As Task(Of Country())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetCountriesAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetAllCountriesAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetAllCountriesAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: GetAllCountriesAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetAllCountriesAsync(Boolean, RequestOptions)
  nameWithType: ListAgent.GetAllCountriesAsync(Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetAllCountriesAsync(System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns all available countries a contact or person could belong to.\n"
  syntax:
    content: public Task<Country[]> GetAllCountriesAsync(bool includeDeleted, RequestOptions requestOptions = null)
    parameters:
    - id: includeDeleted
      type: System.Boolean
      description: Include deleted items in result?
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Country[]}
      description: An array of all available countries
    content.vb: Public Function GetAllCountriesAsync(includeDeleted As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of Country())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetAllCountriesAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetCreditedAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetCreditedAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetCreditedAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetCreditedAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetCreditedAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetCreditedAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific Credited object.                        \n"
  syntax:
    content: public Task<Credited> GetCreditedAsync(int creditedId, RequestOptions requestOptions = null)
    parameters:
    - id: creditedId
      type: System.Int32
      description: The identifier of the Credited object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Credited}
      description: Credited
    content.vb: Public Function GetCreditedAsync(creditedId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Credited)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetCreditedAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetCreditedListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetCreditedListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetCreditedListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetCreditedListAsync(Int32[], RequestOptions)
  nameWithType: ListAgent.GetCreditedListAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetCreditedListAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets an array of specific Credited objects.                        \n"
  syntax:
    content: public Task<Credited[]> GetCreditedListAsync(int[] creditedIds, RequestOptions requestOptions = null)
    parameters:
    - id: creditedIds
      type: System.Int32[]
      description: The identifiers of the Credited object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Credited[]}
      description: Array of Credited objects
    content.vb: Public Function GetCreditedListAsync(creditedIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of Credited())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetCreditedListAsync*
  nameWithType.vb: ListAgent.GetCreditedListAsync(Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.GetCreditedListAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetCreditedListAsync(Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.GetCreditedsAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetCreditedsAsync(SuperOffice.WebApi.RequestOptions)
  id: GetCreditedsAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetCreditedsAsync(RequestOptions)
  nameWithType: ListAgent.GetCreditedsAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetCreditedsAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns all credited\n"
  syntax:
    content: public Task<Credited[]> GetCreditedsAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Credited[]}
    content.vb: Public Function GetCreditedsAsync(requestOptions As RequestOptions = Nothing) As Task(Of Credited())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetCreditedsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetCurrencyAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetCurrencyAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetCurrencyAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetCurrencyAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetCurrencyAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetCurrencyAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific Currency object.                        \n"
  syntax:
    content: public Task<Currency> GetCurrencyAsync(int currencyId, RequestOptions requestOptions = null)
    parameters:
    - id: currencyId
      type: System.Int32
      description: The identifier of the Currency object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Currency}
      description: Currency
    content.vb: Public Function GetCurrencyAsync(currencyId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Currency)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetCurrencyAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetOurCurrencyAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetOurCurrencyAsync(SuperOffice.WebApi.RequestOptions)
  id: GetOurCurrencyAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetOurCurrencyAsync(RequestOptions)
  nameWithType: ListAgent.GetOurCurrencyAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetOurCurrencyAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets the Our currency object if currency is enabled\n"
  syntax:
    content: public Task<Currency> GetOurCurrencyAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Currency}
      description: Our currency
    content.vb: Public Function GetOurCurrencyAsync(requestOptions As RequestOptions = Nothing) As Task(Of Currency)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetOurCurrencyAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.ChangeCurrencyAsync(System.Double,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.ChangeCurrencyAsync(System.Double,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  id: ChangeCurrencyAsync(System.Double,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: ChangeCurrencyAsync(Double, String, String, RequestOptions)
  nameWithType: ListAgent.ChangeCurrencyAsync(Double, String, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.ChangeCurrencyAsync(System.Double, System.String, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nRecalculates the amount to the new currency.\n"
  syntax:
    content: public Task<double> ChangeCurrencyAsync(double amount, string fromCurrency, string toCurrency, RequestOptions requestOptions = null)
    parameters:
    - id: amount
      type: System.Double
      description: The amount in the old currency
    - id: fromCurrency
      type: System.String
      description: The old currency name
    - id: toCurrency
      type: System.String
      description: The new currency name
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Double}
      description: Amount in new currency
    content.vb: Public Function ChangeCurrencyAsync(amount As Double, fromCurrency As String, toCurrency As String, requestOptions As RequestOptions = Nothing) As Task(Of Double)
  overload: SuperOffice.WebApi.Agents.ListAgent.ChangeCurrencyAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetOwnerCompanysCurrencyAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetOwnerCompanysCurrencyAsync(SuperOffice.WebApi.RequestOptions)
  id: GetOwnerCompanysCurrencyAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetOwnerCompanysCurrencyAsync(RequestOptions)
  nameWithType: ListAgent.GetOwnerCompanysCurrencyAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetOwnerCompanysCurrencyAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet the currency of the user&apos;s owner company\n"
  syntax:
    content: public Task<Currency> GetOwnerCompanysCurrencyAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Currency}
      description: Currency of the user&apos;s owner company
    content.vb: Public Function GetOwnerCompanysCurrencyAsync(requestOptions As RequestOptions = Nothing) As Task(Of Currency)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetOwnerCompanysCurrencyAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetCurrencyEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetCurrencyEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetCurrencyEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetCurrencyEntityAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetCurrencyEntityAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetCurrencyEntityAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific CurrencyEntity object.                        \n"
  syntax:
    content: public Task<CurrencyEntity> GetCurrencyEntityAsync(int currencyEntityId, RequestOptions requestOptions = null)
    parameters:
    - id: currencyEntityId
      type: System.Int32
      description: The identifier of the CurrencyEntity object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.CurrencyEntity}
      description: CurrencyEntity
    content.vb: Public Function GetCurrencyEntityAsync(currencyEntityId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of CurrencyEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetCurrencyEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetBaseCurrencyAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetBaseCurrencyAsync(SuperOffice.WebApi.RequestOptions)
  id: GetBaseCurrencyAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetBaseCurrencyAsync(RequestOptions)
  nameWithType: ListAgent.GetBaseCurrencyAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetBaseCurrencyAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet the base currency, used for calculating exchange rates\n"
  syntax:
    content: public Task<CurrencyEntity> GetBaseCurrencyAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.CurrencyEntity}
      description: The base currency that other currencies are expressed in terms of
    content.vb: Public Function GetBaseCurrencyAsync(requestOptions As RequestOptions = Nothing) As Task(Of CurrencyEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetBaseCurrencyAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetAmountClassEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetAmountClassEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetAmountClassEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetAmountClassEntityAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetAmountClassEntityAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetAmountClassEntityAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific AmountClassEntity object.                        \n"
  syntax:
    content: public Task<AmountClassEntity> GetAmountClassEntityAsync(int amountClassEntityId, RequestOptions requestOptions = null)
    parameters:
    - id: amountClassEntityId
      type: System.Int32
      description: The identifier of the AmountClassEntity object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AmountClassEntity}
      description: AmountClassEntity
    content.vb: Public Function GetAmountClassEntityAsync(amountClassEntityId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of AmountClassEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetAmountClassEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetCurrencyListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetCurrencyListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetCurrencyListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetCurrencyListAsync(Int32[], RequestOptions)
  nameWithType: ListAgent.GetCurrencyListAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetCurrencyListAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets an array of specific Currency objects.                        \n"
  syntax:
    content: public Task<Currency[]> GetCurrencyListAsync(int[] currencyIds, RequestOptions requestOptions = null)
    parameters:
    - id: currencyIds
      type: System.Int32[]
      description: The identifiers of the Currency object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Currency[]}
      description: Array of Currency objects
    content.vb: Public Function GetCurrencyListAsync(currencyIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of Currency())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetCurrencyListAsync*
  nameWithType.vb: ListAgent.GetCurrencyListAsync(Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.GetCurrencyListAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetCurrencyListAsync(Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.GetCurrenciesAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetCurrenciesAsync(SuperOffice.WebApi.RequestOptions)
  id: GetCurrenciesAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetCurrenciesAsync(RequestOptions)
  nameWithType: ListAgent.GetCurrenciesAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetCurrenciesAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns all currencies\n"
  syntax:
    content: public Task<Currency[]> GetCurrenciesAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Currency[]}
      description: Array of currencies
    content.vb: Public Function GetCurrenciesAsync(requestOptions As RequestOptions = Nothing) As Task(Of Currency())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetCurrenciesAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetAllCurrenciesAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetAllCurrenciesAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: GetAllCurrenciesAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetAllCurrenciesAsync(Boolean, RequestOptions)
  nameWithType: ListAgent.GetAllCurrenciesAsync(Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetAllCurrenciesAsync(System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns all currencies\n"
  syntax:
    content: public Task<CurrencyEntity[]> GetAllCurrenciesAsync(bool includeDeleted, RequestOptions requestOptions = null)
    parameters:
    - id: includeDeleted
      type: System.Boolean
      description: Include deleted items in result?
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.CurrencyEntity[]}
      description: Array of currencies
    content.vb: Public Function GetAllCurrenciesAsync(includeDeleted As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of CurrencyEntity())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetAllCurrenciesAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetCustomerLanguageAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetCustomerLanguageAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetCustomerLanguageAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetCustomerLanguageAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetCustomerLanguageAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetCustomerLanguageAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific CustomerLanguage object.                        \n"
  syntax:
    content: public Task<CustomerLanguage> GetCustomerLanguageAsync(int customerLanguageId, RequestOptions requestOptions = null)
    parameters:
    - id: customerLanguageId
      type: System.Int32
      description: The identifier of the CustomerLanguage object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.CustomerLanguage}
      description: CustomerLanguage
    content.vb: Public Function GetCustomerLanguageAsync(customerLanguageId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of CustomerLanguage)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetCustomerLanguageAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetCustomerLanguageListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetCustomerLanguageListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetCustomerLanguageListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetCustomerLanguageListAsync(Int32[], RequestOptions)
  nameWithType: ListAgent.GetCustomerLanguageListAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetCustomerLanguageListAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets an array of specific CustomerLanguage objects.                        \n"
  syntax:
    content: public Task<CustomerLanguage[]> GetCustomerLanguageListAsync(int[] customerLanguageIds, RequestOptions requestOptions = null)
    parameters:
    - id: customerLanguageIds
      type: System.Int32[]
      description: The identifiers of the CustomerLanguage object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.CustomerLanguage[]}
      description: Array of CustomerLanguage objects
    content.vb: Public Function GetCustomerLanguageListAsync(customerLanguageIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of CustomerLanguage())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetCustomerLanguageListAsync*
  nameWithType.vb: ListAgent.GetCustomerLanguageListAsync(Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.GetCustomerLanguageListAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetCustomerLanguageListAsync(Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.GetCustomerLanguagesAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetCustomerLanguagesAsync(SuperOffice.WebApi.RequestOptions)
  id: GetCustomerLanguagesAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetCustomerLanguagesAsync(RequestOptions)
  nameWithType: ListAgent.GetCustomerLanguagesAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetCustomerLanguagesAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\n\n"
  syntax:
    content: public Task<CustomerLanguage[]> GetCustomerLanguagesAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.CustomerLanguage[]}
    content.vb: Public Function GetCustomerLanguagesAsync(requestOptions As RequestOptions = Nothing) As Task(Of CustomerLanguage())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetCustomerLanguagesAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetDeliveryTermAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetDeliveryTermAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetDeliveryTermAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetDeliveryTermAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetDeliveryTermAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetDeliveryTermAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific DeliveryTerm object.                        \n"
  syntax:
    content: public Task<DeliveryTerm> GetDeliveryTermAsync(int deliveryTermId, RequestOptions requestOptions = null)
    parameters:
    - id: deliveryTermId
      type: System.Int32
      description: The identifier of the DeliveryTerm object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DeliveryTerm}
      description: DeliveryTerm
    content.vb: Public Function GetDeliveryTermAsync(deliveryTermId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of DeliveryTerm)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetDeliveryTermAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetDeliveryTermsAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetDeliveryTermsAsync(SuperOffice.WebApi.RequestOptions)
  id: GetDeliveryTermsAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetDeliveryTermsAsync(RequestOptions)
  nameWithType: ListAgent.GetDeliveryTermsAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetDeliveryTermsAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns all DeliveryTerms in SuperOffice db.\n"
  syntax:
    content: public Task<DeliveryTerm[]> GetDeliveryTermsAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DeliveryTerm[]}
      description: An array of all available DeliveryTerms
    content.vb: Public Function GetDeliveryTermsAsync(requestOptions As RequestOptions = Nothing) As Task(Of DeliveryTerm())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetDeliveryTermsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetDeliveryTypeAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetDeliveryTypeAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetDeliveryTypeAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetDeliveryTypeAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetDeliveryTypeAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetDeliveryTypeAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific DeliveryType object.                        \n"
  syntax:
    content: public Task<DeliveryType> GetDeliveryTypeAsync(int deliveryTypeId, RequestOptions requestOptions = null)
    parameters:
    - id: deliveryTypeId
      type: System.Int32
      description: The identifier of the DeliveryType object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DeliveryType}
      description: DeliveryType
    content.vb: Public Function GetDeliveryTypeAsync(deliveryTypeId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of DeliveryType)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetDeliveryTypeAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetDeliveryTypesAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetDeliveryTypesAsync(SuperOffice.WebApi.RequestOptions)
  id: GetDeliveryTypesAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetDeliveryTypesAsync(RequestOptions)
  nameWithType: ListAgent.GetDeliveryTypesAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetDeliveryTypesAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns all DeliveryTypes in SuperOffice db.\n"
  syntax:
    content: public Task<DeliveryType[]> GetDeliveryTypesAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DeliveryType[]}
      description: An array of all available DeliveryType
    content.vb: Public Function GetDeliveryTypesAsync(requestOptions As RequestOptions = Nothing) As Task(Of DeliveryType())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetDeliveryTypesAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetPaymentTermAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetPaymentTermAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetPaymentTermAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetPaymentTermAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetPaymentTermAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetPaymentTermAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific PaymentTerm object.                        \n"
  syntax:
    content: public Task<PaymentTerm> GetPaymentTermAsync(int paymentTermId, RequestOptions requestOptions = null)
    parameters:
    - id: paymentTermId
      type: System.Int32
      description: The identifier of the PaymentTerm object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.PaymentTerm}
      description: PaymentTerm
    content.vb: Public Function GetPaymentTermAsync(paymentTermId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of PaymentTerm)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetPaymentTermAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetPaymentTermsAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetPaymentTermsAsync(SuperOffice.WebApi.RequestOptions)
  id: GetPaymentTermsAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetPaymentTermsAsync(RequestOptions)
  nameWithType: ListAgent.GetPaymentTermsAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetPaymentTermsAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns all PaymentTerms in SuperOffice db.\n"
  syntax:
    content: public Task<PaymentTerm[]> GetPaymentTermsAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.PaymentTerm[]}
      description: An array of all available PaymentTerms
    content.vb: Public Function GetPaymentTermsAsync(requestOptions As RequestOptions = Nothing) As Task(Of PaymentTerm())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetPaymentTermsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetPaymentTypeAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetPaymentTypeAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetPaymentTypeAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetPaymentTypeAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetPaymentTypeAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetPaymentTypeAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific PaymentType object.                        \n"
  syntax:
    content: public Task<PaymentType> GetPaymentTypeAsync(int paymentTypeId, RequestOptions requestOptions = null)
    parameters:
    - id: paymentTypeId
      type: System.Int32
      description: The identifier of the PaymentType object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.PaymentType}
      description: PaymentType
    content.vb: Public Function GetPaymentTypeAsync(paymentTypeId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of PaymentType)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetPaymentTypeAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetPaymentTypesAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetPaymentTypesAsync(SuperOffice.WebApi.RequestOptions)
  id: GetPaymentTypesAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetPaymentTypesAsync(RequestOptions)
  nameWithType: ListAgent.GetPaymentTypesAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetPaymentTypesAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns all PaymentTypes in SuperOffice db.\n"
  syntax:
    content: public Task<PaymentType[]> GetPaymentTypesAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.PaymentType[]}
      description: An array of all available PaymentTypes
    content.vb: Public Function GetPaymentTypesAsync(requestOptions As RequestOptions = Nothing) As Task(Of PaymentType())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetPaymentTypesAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetDepartmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetDepartmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetDepartmentAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetDepartmentAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetDepartmentAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetDepartmentAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific Department object.                        \n"
  syntax:
    content: public Task<Department> GetDepartmentAsync(int departmentId, RequestOptions requestOptions = null)
    parameters:
    - id: departmentId
      type: System.Int32
      description: The identifier of the Department object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Department}
      description: Department
    content.vb: Public Function GetDepartmentAsync(departmentId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Department)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetDepartmentAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetDepartmentListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetDepartmentListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetDepartmentListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetDepartmentListAsync(Int32[], RequestOptions)
  nameWithType: ListAgent.GetDepartmentListAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetDepartmentListAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets an array of specific Department objects.                        \n"
  syntax:
    content: public Task<Department[]> GetDepartmentListAsync(int[] departmentIds, RequestOptions requestOptions = null)
    parameters:
    - id: departmentIds
      type: System.Int32[]
      description: The identifiers of the Department object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Department[]}
      description: Array of Department objects
    content.vb: Public Function GetDepartmentListAsync(departmentIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of Department())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetDepartmentListAsync*
  nameWithType.vb: ListAgent.GetDepartmentListAsync(Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.GetDepartmentListAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetDepartmentListAsync(Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.GetDepartmentsAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetDepartmentsAsync(SuperOffice.WebApi.RequestOptions)
  id: GetDepartmentsAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetDepartmentsAsync(RequestOptions)
  nameWithType: ListAgent.GetDepartmentsAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetDepartmentsAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGetting all departments/user groups for the internal phone list with the user&apos;s colleagues.\n"
  syntax:
    content: public Task<Department[]> GetDepartmentsAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Department[]}
      description: Returns all departments.
    content.vb: Public Function GetDepartmentsAsync(requestOptions As RequestOptions = Nothing) As Task(Of Department())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetDepartmentsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetDocumentTemplateAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetDocumentTemplateAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetDocumentTemplateAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific DocumentTemplate object.                        \n"
  syntax:
    content: public Task<DocumentTemplate> GetDocumentTemplateAsync(int documentTemplateId, RequestOptions requestOptions = null)
    parameters:
    - id: documentTemplateId
      type: System.Int32
      description: The identifier of the DocumentTemplate object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DocumentTemplate}
      description: DocumentTemplate
    content.vb: Public Function GetDocumentTemplateAsync(documentTemplateId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of DocumentTemplate)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetDocumentTemplateListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetDocumentTemplateListAsync(Int32[], RequestOptions)
  nameWithType: ListAgent.GetDocumentTemplateListAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateListAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets an array of specific DocumentTemplate objects.                        \n"
  syntax:
    content: public Task<DocumentTemplate[]> GetDocumentTemplateListAsync(int[] documentTemplateIds, RequestOptions requestOptions = null)
    parameters:
    - id: documentTemplateIds
      type: System.Int32[]
      description: The identifiers of the DocumentTemplate object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DocumentTemplate[]}
      description: Array of DocumentTemplate objects
    content.vb: Public Function GetDocumentTemplateListAsync(documentTemplateIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of DocumentTemplate())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateListAsync*
  nameWithType.vb: ListAgent.GetDocumentTemplateListAsync(Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateListAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetDocumentTemplateListAsync(Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplatesAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplatesAsync(SuperOffice.WebApi.RequestOptions)
  id: GetDocumentTemplatesAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetDocumentTemplatesAsync(RequestOptions)
  nameWithType: ListAgent.GetDocumentTemplatesAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplatesAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns all available document templates\n"
  syntax:
    content: public Task<DocumentTemplate[]> GetDocumentTemplatesAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DocumentTemplate[]}
      description: Array of DocumentTemplates
    content.vb: Public Function GetDocumentTemplatesAsync(requestOptions As RequestOptions = Nothing) As Task(Of DocumentTemplate())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplatesAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetAllDocumentTemplatesAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetAllDocumentTemplatesAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: GetAllDocumentTemplatesAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetAllDocumentTemplatesAsync(Boolean, RequestOptions)
  nameWithType: ListAgent.GetAllDocumentTemplatesAsync(Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetAllDocumentTemplatesAsync(System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns all templates\n"
  syntax:
    content: public Task<DocumentTemplateEntity[]> GetAllDocumentTemplatesAsync(bool includeDeleted, RequestOptions requestOptions = null)
    parameters:
    - id: includeDeleted
      type: System.Boolean
      description: Include deleted items in result?
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DocumentTemplateEntity[]}
      description: Array of all template items
    content.vb: Public Function GetAllDocumentTemplatesAsync(includeDeleted As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of DocumentTemplateEntity())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetAllDocumentTemplatesAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.SetDocumentPluginForAllDocumentTemplatesAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SetDocumentPluginForAllDocumentTemplatesAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: SetDocumentPluginForAllDocumentTemplatesAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SetDocumentPluginForAllDocumentTemplatesAsync(Int32, RequestOptions)
  nameWithType: ListAgent.SetDocumentPluginForAllDocumentTemplatesAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SetDocumentPluginForAllDocumentTemplatesAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSets the document-plugin to be used for all templates of type &apos;document&apos;.\n"
  syntax:
    content: public Task SetDocumentPluginForAllDocumentTemplatesAsync(int documentPluginId, RequestOptions requestOptions = null)
    parameters:
    - id: documentPluginId
      type: System.Int32
      description: The numerical ID of the document-plugin to use.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Public Function SetDocumentPluginForAllDocumentTemplatesAsync(documentPluginId As Integer, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.ListAgent.SetDocumentPluginForAllDocumentTemplatesAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetHeadingEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetHeadingEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetHeadingEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetHeadingEntityAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetHeadingEntityAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetHeadingEntityAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific HeadingEntity object.                        \n"
  syntax:
    content: public Task<HeadingEntity> GetHeadingEntityAsync(int headingEntityId, RequestOptions requestOptions = null)
    parameters:
    - id: headingEntityId
      type: System.Int32
      description: The identifier of the HeadingEntity object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.HeadingEntity}
      description: HeadingEntity
    content.vb: Public Function GetHeadingEntityAsync(headingEntityId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of HeadingEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetHeadingEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultHeadingFromListDefinitionAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.CreateDefaultHeadingFromListDefinitionAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultHeadingFromListDefinitionAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultHeadingFromListDefinitionAsync(Int32, RequestOptions)
  nameWithType: ListAgent.CreateDefaultHeadingFromListDefinitionAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultHeadingFromListDefinitionAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet a heading for the specified list defintion\n"
  syntax:
    content: public Task<HeadingEntity> CreateDefaultHeadingFromListDefinitionAsync(int udListDefinitionId, RequestOptions requestOptions = null)
    parameters:
    - id: udListDefinitionId
      type: System.Int32
      description: The id of the list definition, indicating which list to get the item from
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.HeadingEntity}
      description: The loaded heading
    content.vb: Public Function CreateDefaultHeadingFromListDefinitionAsync(udListDefinitionId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of HeadingEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultHeadingFromListDefinitionAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetLanguageInfoAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetLanguageInfoAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetLanguageInfoAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetLanguageInfoAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetLanguageInfoAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetLanguageInfoAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific LanguageInfo object.                        \n"
  syntax:
    content: public Task<LanguageInfo> GetLanguageInfoAsync(int languageInfoId, RequestOptions requestOptions = null)
    parameters:
    - id: languageInfoId
      type: System.Int32
      description: The identifier of the LanguageInfo object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.LanguageInfo}
      description: LanguageInfo
    content.vb: Public Function GetLanguageInfoAsync(languageInfoId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of LanguageInfo)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetLanguageInfoAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetLanguageInfoListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetLanguageInfoListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetLanguageInfoListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetLanguageInfoListAsync(Int32[], RequestOptions)
  nameWithType: ListAgent.GetLanguageInfoListAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetLanguageInfoListAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets an array of specific LanguageInfo objects.                        \n"
  syntax:
    content: public Task<LanguageInfo[]> GetLanguageInfoListAsync(int[] languageInfoIds, RequestOptions requestOptions = null)
    parameters:
    - id: languageInfoIds
      type: System.Int32[]
      description: The identifiers of the LanguageInfo object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.LanguageInfo[]}
      description: Array of LanguageInfo objects
    content.vb: Public Function GetLanguageInfoListAsync(languageInfoIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of LanguageInfo())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetLanguageInfoListAsync*
  nameWithType.vb: ListAgent.GetLanguageInfoListAsync(Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.GetLanguageInfoListAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetLanguageInfoListAsync(Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.GetInstalledLanguagesAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetInstalledLanguagesAsync(SuperOffice.WebApi.RequestOptions)
  id: GetInstalledLanguagesAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetInstalledLanguagesAsync(RequestOptions)
  nameWithType: ListAgent.GetInstalledLanguagesAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetInstalledLanguagesAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns the list of all languages installed in this database.\n"
  syntax:
    content: public Task<LanguageInfo[]> GetInstalledLanguagesAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.LanguageInfo[]}
      description: Array of installed languages
    content.vb: Public Function GetInstalledLanguagesAsync(requestOptions As RequestOptions = Nothing) As Task(Of LanguageInfo())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetInstalledLanguagesAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetLinkAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetLinkAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetLinkAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetLinkAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetLinkAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetLinkAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific Link object.                        \n"
  syntax:
    content: public Task<Link> GetLinkAsync(int linkId, RequestOptions requestOptions = null)
    parameters:
    - id: linkId
      type: System.Int32
      description: The identifier of the Link object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Link}
      description: Link
    content.vb: Public Function GetLinkAsync(linkId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Link)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetLinkAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetLinkListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetLinkListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetLinkListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetLinkListAsync(Int32[], RequestOptions)
  nameWithType: ListAgent.GetLinkListAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetLinkListAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets an array of specific Link objects.                        \n"
  syntax:
    content: public Task<Link[]> GetLinkListAsync(int[] linkIds, RequestOptions requestOptions = null)
    parameters:
    - id: linkIds
      type: System.Int32[]
      description: The identifiers of the Link object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Link[]}
      description: Array of Link objects
    content.vb: Public Function GetLinkListAsync(linkIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of Link())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetLinkListAsync*
  nameWithType.vb: ListAgent.GetLinkListAsync(Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.GetLinkListAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetLinkListAsync(Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.GetListEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetListEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetListEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetListEntityAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetListEntityAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetListEntityAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific ListEntity object.                        \n"
  syntax:
    content: public Task<ListEntity> GetListEntityAsync(int listEntityId, RequestOptions requestOptions = null)
    parameters:
    - id: listEntityId
      type: System.Int32
      description: The identifier of the ListEntity object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ListEntity}
      description: ListEntity
    content.vb: Public Function GetListEntityAsync(listEntityId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of ListEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetListEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetListDefinitionsAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetListDefinitionsAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: GetListDefinitionsAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetListDefinitionsAsync(Boolean, RequestOptions)
  nameWithType: ListAgent.GetListDefinitionsAsync(Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetListDefinitionsAsync(System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet a list of the lists - built-in and user-defined.\n"
  syntax:
    content: public Task<ListEntity[]> GetListDefinitionsAsync(bool includeDeleted, RequestOptions requestOptions = null)
    parameters:
    - id: includeDeleted
      type: System.Boolean
      description: Include deleted items in result?
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ListEntity[]}
      description: The list definitions
    content.vb: Public Function GetListDefinitionsAsync(includeDeleted As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of ListEntity())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetListDefinitionsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetListEntityByNameAsync(System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetListEntityByNameAsync(System.String,SuperOffice.WebApi.RequestOptions)
  id: GetListEntityByNameAsync(System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetListEntityByNameAsync(String, RequestOptions)
  nameWithType: ListAgent.GetListEntityByNameAsync(String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetListEntityByNameAsync(System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a ListEntity resolved by the provided name.\n"
  syntax:
    content: public Task<ListEntity> GetListEntityByNameAsync(string name, RequestOptions requestOptions = null)
    parameters:
    - id: name
      type: System.String
      description: The name of the list to look up.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ListEntity}
      description: A ListEntity or null.
    content.vb: Public Function GetListEntityByNameAsync(name As String, requestOptions As RequestOptions = Nothing) As Task(Of ListEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetListEntityByNameAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveListEntityByNameAsync(System.String,SuperOffice.WebApi.Data.ListEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SaveListEntityByNameAsync(System.String,SuperOffice.WebApi.Data.ListEntity,SuperOffice.WebApi.RequestOptions)
  id: SaveListEntityByNameAsync(System.String,SuperOffice.WebApi.Data.ListEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SaveListEntityByNameAsync(String, ListEntity, RequestOptions)
  nameWithType: ListAgent.SaveListEntityByNameAsync(String, ListEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveListEntityByNameAsync(System.String, SuperOffice.WebApi.Data.ListEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSave a ListEntity resolved by the provided name.\n"
  syntax:
    content: public Task<ListEntity> SaveListEntityByNameAsync(string name, ListEntity listEntity, RequestOptions requestOptions = null)
    parameters:
    - id: name
      type: System.String
      description: The name of the list to save.
    - id: listEntity
      type: SuperOffice.WebApi.Data.ListEntity
      description: The ListEntity to save.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ListEntity}
      description: A ListEntity or null.
    content.vb: Public Function SaveListEntityByNameAsync(name As String, listEntity As ListEntity, requestOptions As RequestOptions = Nothing) As Task(Of ListEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.SaveListEntityByNameAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.DeleteListEntityByNameAsync(System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.DeleteListEntityByNameAsync(System.String,SuperOffice.WebApi.RequestOptions)
  id: DeleteListEntityByNameAsync(System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: DeleteListEntityByNameAsync(String, RequestOptions)
  nameWithType: ListAgent.DeleteListEntityByNameAsync(String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.DeleteListEntityByNameAsync(System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nDelete a ListEntity resolved by the provided name.\n"
  syntax:
    content: public Task DeleteListEntityByNameAsync(string name, RequestOptions requestOptions = null)
    parameters:
    - id: name
      type: System.String
      description: The name of the list to delete.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Public Function DeleteListEntityByNameAsync(name As String, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.ListAgent.DeleteListEntityByNameAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveListItemEntityAsync(SuperOffice.WebApi.Data.ListItemEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SaveListItemEntityAsync(SuperOffice.WebApi.Data.ListItemEntity,SuperOffice.WebApi.RequestOptions)
  id: SaveListItemEntityAsync(SuperOffice.WebApi.Data.ListItemEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SaveListItemEntityAsync(ListItemEntity, RequestOptions)
  nameWithType: ListAgent.SaveListItemEntityAsync(ListItemEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveListItemEntityAsync(SuperOffice.WebApi.Data.ListItemEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSave the ListItemEntity.\n"
  syntax:
    content: public Task<ListItemEntity> SaveListItemEntityAsync(ListItemEntity listItemEntity, RequestOptions requestOptions = null)
    parameters:
    - id: listItemEntity
      type: SuperOffice.WebApi.Data.ListItemEntity
      description: The ListItemEntity to save.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ListItemEntity}
      description: The saved ListItemEntity.
    content.vb: Public Function SaveListItemEntityAsync(listItemEntity As ListItemEntity, requestOptions As RequestOptions = Nothing) As Task(Of ListItemEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.SaveListItemEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.SortListItemsAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SortListItemsAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: SortListItemsAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SortListItemsAsync(Int32, String, RequestOptions)
  nameWithType: ListAgent.SortListItemsAsync(Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SortListItemsAsync(System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSort the list items in a given list alphabetically\n"
  syntax:
    content: public Task SortListItemsAsync(int udListDefinitionId, string cultureName, RequestOptions requestOptions = null)
    parameters:
    - id: udListDefinitionId
      type: System.Int32
      description: Id of the list you want to sort. Negative numbers indicate TableNumber value instead of UDListDefId. e.g. -64 = category.
    - id: cultureName
      type: System.String
      description: Sort list in this language
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SortListItemsAsync(udListDefinitionId As Integer, cultureName As String, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.ListAgent.SortListItemsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.MoveListItemAsync(System.Int32,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.MoveListItemAsync(System.Int32,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: MoveListItemAsync(System.Int32,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: MoveListItemAsync(Int32, Int32, Int32, RequestOptions)
  nameWithType: ListAgent.MoveListItemAsync(Int32, Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.MoveListItemAsync(System.Int32, System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMove a list item up or down in the list based on rank\n"
  syntax:
    content: public Task MoveListItemAsync(int udListDefinitionId, int listItemId, int direction, RequestOptions requestOptions = null)
    parameters:
    - id: udListDefinitionId
      type: System.Int32
      description: Id of the list. Negative numbers indicate TableNumber value instead of UDListDefId. e.g. -64 = category.
    - id: listItemId
      type: System.Int32
      description: Id of the list item
    - id: direction
      type: System.Int32
      description: -1 moves the item up one position, 1 moves the item down one position
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function MoveListItemAsync(udListDefinitionId As Integer, listItemId As Integer, direction As Integer, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.ListAgent.MoveListItemAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetVisibleForUserGroupsAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetVisibleForUserGroupsAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetVisibleForUserGroupsAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetVisibleForUserGroupsAsync(Int32, Int32, RequestOptions)
  nameWithType: ListAgent.GetVisibleForUserGroupsAsync(Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetVisibleForUserGroupsAsync(System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nList of User groups that this list item is visible for\n"
  syntax:
    content: public Task<SelectableMDOListItem[]> GetVisibleForUserGroupsAsync(int udListDefinitionId, int listItemId, RequestOptions requestOptions = null)
    parameters:
    - id: udListDefinitionId
      type: System.Int32
      description: The id of the list. Negative numbers indicate TableNumber value instead of UDListDefId. e.g. -64 = category.
    - id: listItemId
      type: System.Int32
      description: The id of the list item
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SelectableMDOListItem[]}
      description: Array of selectable user groups
    content.vb: Public Function GetVisibleForUserGroupsAsync(udListDefinitionId As Integer, listItemId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of SelectableMDOListItem())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetVisibleForUserGroupsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetVisibleForUserGroupsFromListNameAsync(System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetVisibleForUserGroupsFromListNameAsync(System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetVisibleForUserGroupsFromListNameAsync(System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetVisibleForUserGroupsFromListNameAsync(String, Int32, RequestOptions)
  nameWithType: ListAgent.GetVisibleForUserGroupsFromListNameAsync(String, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetVisibleForUserGroupsFromListNameAsync(System.String, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nList of User groups that this list item is visible for\n"
  syntax:
    content: public Task<SelectableMDOListItem[]> GetVisibleForUserGroupsFromListNameAsync(string udListDefinitionName, int listItemId, RequestOptions requestOptions = null)
    parameters:
    - id: udListDefinitionName
      type: System.String
      description: The name of the list definition.
    - id: listItemId
      type: System.Int32
      description: The id of the list item
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SelectableMDOListItem[]}
      description: Array of selectable user groups
    content.vb: Public Function GetVisibleForUserGroupsFromListNameAsync(udListDefinitionName As String, listItemId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of SelectableMDOListItem())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetVisibleForUserGroupsFromListNameAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.SetVisibleForUserGroupsAsync(System.Int32,System.Int32,SuperOffice.WebApi.Data.SelectableMDOListItem[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SetVisibleForUserGroupsAsync(System.Int32,System.Int32,SuperOffice.WebApi.Data.SelectableMDOListItem[],SuperOffice.WebApi.RequestOptions)
  id: SetVisibleForUserGroupsAsync(System.Int32,System.Int32,SuperOffice.WebApi.Data.SelectableMDOListItem[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SetVisibleForUserGroupsAsync(Int32, Int32, SelectableMDOListItem[], RequestOptions)
  nameWithType: ListAgent.SetVisibleForUserGroupsAsync(Int32, Int32, SelectableMDOListItem[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SetVisibleForUserGroupsAsync(System.Int32, System.Int32, SuperOffice.WebApi.Data.SelectableMDOListItem[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdate User groups that this list item is visible for\n"
  syntax:
    content: public Task<SelectableMDOListItem[]> SetVisibleForUserGroupsAsync(int udListDefinitionId, int listItemId, SelectableMDOListItem[] userGroups, RequestOptions requestOptions = null)
    parameters:
    - id: udListDefinitionId
      type: System.Int32
      description: The id of the list. Negative numbers indicate TableNumber value instead of UDListDefId. e.g. -64 = category.
    - id: listItemId
      type: System.Int32
      description: The id of the list item
    - id: userGroups
      type: SuperOffice.WebApi.Data.SelectableMDOListItem[]
      description: The selectable user groups.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SelectableMDOListItem[]}
      description: Array of selectable user groups
    content.vb: Public Function SetVisibleForUserGroupsAsync(udListDefinitionId As Integer, listItemId As Integer, userGroups As SelectableMDOListItem(), requestOptions As RequestOptions = Nothing) As Task(Of SelectableMDOListItem())
  overload: SuperOffice.WebApi.Agents.ListAgent.SetVisibleForUserGroupsAsync*
  nameWithType.vb: ListAgent.SetVisibleForUserGroupsAsync(Int32, Int32, SelectableMDOListItem(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.SetVisibleForUserGroupsAsync(System.Int32, System.Int32, SuperOffice.WebApi.Data.SelectableMDOListItem(), SuperOffice.WebApi.RequestOptions)
  name.vb: SetVisibleForUserGroupsAsync(Int32, Int32, SelectableMDOListItem(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.SetVisibleForUserGroupsFromListNameAsync(System.String,System.Int32,SuperOffice.WebApi.Data.SelectableMDOListItem[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SetVisibleForUserGroupsFromListNameAsync(System.String,System.Int32,SuperOffice.WebApi.Data.SelectableMDOListItem[],SuperOffice.WebApi.RequestOptions)
  id: SetVisibleForUserGroupsFromListNameAsync(System.String,System.Int32,SuperOffice.WebApi.Data.SelectableMDOListItem[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SetVisibleForUserGroupsFromListNameAsync(String, Int32, SelectableMDOListItem[], RequestOptions)
  nameWithType: ListAgent.SetVisibleForUserGroupsFromListNameAsync(String, Int32, SelectableMDOListItem[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SetVisibleForUserGroupsFromListNameAsync(System.String, System.Int32, SuperOffice.WebApi.Data.SelectableMDOListItem[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdate User groups that this list item is visible for\n"
  syntax:
    content: public Task<SelectableMDOListItem[]> SetVisibleForUserGroupsFromListNameAsync(string udListDefinitionName, int listItemId, SelectableMDOListItem[] userGroups, RequestOptions requestOptions = null)
    parameters:
    - id: udListDefinitionName
      type: System.String
      description: The name of the list definition, indicating which list to update the items from.
    - id: listItemId
      type: System.Int32
      description: The id of the list item
    - id: userGroups
      type: SuperOffice.WebApi.Data.SelectableMDOListItem[]
      description: The selectable user groups.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SelectableMDOListItem[]}
      description: Array of selectable user groups
    content.vb: Public Function SetVisibleForUserGroupsFromListNameAsync(udListDefinitionName As String, listItemId As Integer, userGroups As SelectableMDOListItem(), requestOptions As RequestOptions = Nothing) As Task(Of SelectableMDOListItem())
  overload: SuperOffice.WebApi.Agents.ListAgent.SetVisibleForUserGroupsFromListNameAsync*
  nameWithType.vb: ListAgent.SetVisibleForUserGroupsFromListNameAsync(String, Int32, SelectableMDOListItem(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.SetVisibleForUserGroupsFromListNameAsync(System.String, System.Int32, SuperOffice.WebApi.Data.SelectableMDOListItem(), SuperOffice.WebApi.RequestOptions)
  name.vb: SetVisibleForUserGroupsFromListNameAsync(String, Int32, SelectableMDOListItem(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.SetVisibleForUserGroupAsync(System.Int32,System.Int32,System.Int32[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SetVisibleForUserGroupAsync(System.Int32,System.Int32,System.Int32[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: SetVisibleForUserGroupAsync(System.Int32,System.Int32,System.Int32[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SetVisibleForUserGroupAsync(Int32, Int32, Int32[], Boolean, RequestOptions)
  nameWithType: ListAgent.SetVisibleForUserGroupAsync(Int32, Int32, Int32[], Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SetVisibleForUserGroupAsync(System.Int32, System.Int32, System.Int32[], System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet a group which this list item should be visible for\n"
  syntax:
    content: public Task SetVisibleForUserGroupAsync(int udListDefinitionId, int listItemId, int[] userGroupId, bool enable, RequestOptions requestOptions = null)
    parameters:
    - id: udListDefinitionId
      type: System.Int32
      description: The id of the list. Negative numbers indicate TableNumber value instead of UDListDefId. e.g. -64 = category.
    - id: listItemId
      type: System.Int32
      description: The id of the list item
    - id: userGroupId
      type: System.Int32[]
      description: The id of the user groups to set for this list item
    - id: enable
      type: System.Boolean
      description: Set to true to enable, false to disable
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SetVisibleForUserGroupAsync(udListDefinitionId As Integer, listItemId As Integer, userGroupId As Integer(), enable As Boolean, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.ListAgent.SetVisibleForUserGroupAsync*
  nameWithType.vb: ListAgent.SetVisibleForUserGroupAsync(Int32, Int32, Int32(), Boolean, RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.SetVisibleForUserGroupAsync(System.Int32, System.Int32, System.Int32(), System.Boolean, SuperOffice.WebApi.RequestOptions)
  name.vb: SetVisibleForUserGroupAsync(Int32, Int32, Int32(), Boolean, RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.GetListItemsForUserGroupAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetListItemsForUserGroupAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetListItemsForUserGroupAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetListItemsForUserGroupAsync(Int32, Int32, RequestOptions)
  nameWithType: ListAgent.GetListItemsForUserGroupAsync(Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetListItemsForUserGroupAsync(System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nList of list items that is visible in the usergroup\n"
  syntax:
    content: public Task<SelectableMDOListItem[]> GetListItemsForUserGroupAsync(int udListDefinitionId, int groupId, RequestOptions requestOptions = null)
    parameters:
    - id: udListDefinitionId
      type: System.Int32
      description: The id of the list. Negative numbers indicate TableNumber value instead of UDListDefId. e.g. -64 = category.
    - id: groupId
      type: System.Int32
      description: The id of the usergroup
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SelectableMDOListItem[]}
      description: Array of selectable list items
    content.vb: Public Function GetListItemsForUserGroupAsync(udListDefinitionId As Integer, groupId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of SelectableMDOListItem())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetListItemsForUserGroupAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetListItemsForUserGroupFromListNameAsync(System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetListItemsForUserGroupFromListNameAsync(System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetListItemsForUserGroupFromListNameAsync(System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetListItemsForUserGroupFromListNameAsync(String, Int32, RequestOptions)
  nameWithType: ListAgent.GetListItemsForUserGroupFromListNameAsync(String, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetListItemsForUserGroupFromListNameAsync(System.String, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nList of list items that is visible in the usergroup\n"
  syntax:
    content: public Task<SelectableMDOListItem[]> GetListItemsForUserGroupFromListNameAsync(string udListDefinitionName, int groupId, RequestOptions requestOptions = null)
    parameters:
    - id: udListDefinitionName
      type: System.String
      description: The name of the list definition.
    - id: groupId
      type: System.Int32
      description: The id of the usergroup
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SelectableMDOListItem[]}
      description: Array of selectable list items
    content.vb: Public Function GetListItemsForUserGroupFromListNameAsync(udListDefinitionName As String, groupId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of SelectableMDOListItem())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetListItemsForUserGroupFromListNameAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.SetListItemsForUserGroupAsync(System.Int32,System.Int32,System.Int32[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SetListItemsForUserGroupAsync(System.Int32,System.Int32,System.Int32[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: SetListItemsForUserGroupAsync(System.Int32,System.Int32,System.Int32[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SetListItemsForUserGroupAsync(Int32, Int32, Int32[], Boolean, RequestOptions)
  nameWithType: ListAgent.SetListItemsForUserGroupAsync(Int32, Int32, Int32[], Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SetListItemsForUserGroupAsync(System.Int32, System.Int32, System.Int32[], System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdate listItems that will be visible for this usergroup\n"
  syntax:
    content: public Task SetListItemsForUserGroupAsync(int udListDefinitionId, int usergroupId, int[] listItemIds, bool enable, RequestOptions requestOptions = null)
    parameters:
    - id: udListDefinitionId
      type: System.Int32
      description: The id of the list. Negative numbers indicate TableNumber value instead of UDListDefId. e.g. -64 = category.
    - id: usergroupId
      type: System.Int32
      description: The id of the userGroup
    - id: listItemIds
      type: System.Int32[]
      description: The id of the list items.
    - id: enable
      type: System.Boolean
      description: True to enable, false to disable
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SetListItemsForUserGroupAsync(udListDefinitionId As Integer, usergroupId As Integer, listItemIds As Integer(), enable As Boolean, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.ListAgent.SetListItemsForUserGroupAsync*
  nameWithType.vb: ListAgent.SetListItemsForUserGroupAsync(Int32, Int32, Int32(), Boolean, RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.SetListItemsForUserGroupAsync(System.Int32, System.Int32, System.Int32(), System.Boolean, SuperOffice.WebApi.RequestOptions)
  name.vb: SetListItemsForUserGroupAsync(Int32, Int32, Int32(), Boolean, RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.SetListItemsForUserGroupFromListNameAsync(System.String,System.Int32,System.Int32[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SetListItemsForUserGroupFromListNameAsync(System.String,System.Int32,System.Int32[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: SetListItemsForUserGroupFromListNameAsync(System.String,System.Int32,System.Int32[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SetListItemsForUserGroupFromListNameAsync(String, Int32, Int32[], Boolean, RequestOptions)
  nameWithType: ListAgent.SetListItemsForUserGroupFromListNameAsync(String, Int32, Int32[], Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SetListItemsForUserGroupFromListNameAsync(System.String, System.Int32, System.Int32[], System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdate listItems that will be visible for this usergroup\n"
  syntax:
    content: public Task SetListItemsForUserGroupFromListNameAsync(string udListDefinitionName, int usergroupId, int[] listItemsID, bool enable, RequestOptions requestOptions = null)
    parameters:
    - id: udListDefinitionName
      type: System.String
      description: The name of the list definition.
    - id: usergroupId
      type: System.Int32
      description: The id of the userGroup
    - id: listItemsID
      type: System.Int32[]
      description: The id of the list items.
    - id: enable
      type: System.Boolean
      description: True to enable, false to disable
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SetListItemsForUserGroupFromListNameAsync(udListDefinitionName As String, usergroupId As Integer, listItemsID As Integer(), enable As Boolean, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.ListAgent.SetListItemsForUserGroupFromListNameAsync*
  nameWithType.vb: ListAgent.SetListItemsForUserGroupFromListNameAsync(String, Int32, Int32(), Boolean, RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.SetListItemsForUserGroupFromListNameAsync(System.String, System.Int32, System.Int32(), System.Boolean, SuperOffice.WebApi.RequestOptions)
  name.vb: SetListItemsForUserGroupFromListNameAsync(String, Int32, Int32(), Boolean, RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.GetHeadingsAsync(System.Int32,System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetHeadingsAsync(System.Int32,System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: GetHeadingsAsync(System.Int32,System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetHeadingsAsync(Int32, Int32, Boolean, RequestOptions)
  nameWithType: ListAgent.GetHeadingsAsync(Int32, Int32, Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetHeadingsAsync(System.Int32, System.Int32, System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a selectable MDO list of the headings for this list item\n"
  syntax:
    content: public Task<SelectableMDOListItem[]> GetHeadingsAsync(int udListDefinitionId, int listItemId, bool showDeleted, RequestOptions requestOptions = null)
    parameters:
    - id: udListDefinitionId
      type: System.Int32
      description: The id of the list. Negative numbers indicate TableNumber value instead of UDListDefId. e.g. -64 = category.
    - id: listItemId
      type: System.Int32
      description: The id of the list item
    - id: showDeleted
      type: System.Boolean
      description: Set to true if you want deleted headings
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SelectableMDOListItem[]}
      description: Array of headings
    content.vb: Public Function GetHeadingsAsync(udListDefinitionId As Integer, listItemId As Integer, showDeleted As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of SelectableMDOListItem())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetHeadingsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetHeadingsForListItemFromListNameAsync(System.String,System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetHeadingsForListItemFromListNameAsync(System.String,System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: GetHeadingsForListItemFromListNameAsync(System.String,System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetHeadingsForListItemFromListNameAsync(String, Int32, Boolean, RequestOptions)
  nameWithType: ListAgent.GetHeadingsForListItemFromListNameAsync(String, Int32, Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetHeadingsForListItemFromListNameAsync(System.String, System.Int32, System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a selectable MDO list of the headings for this list item\n"
  syntax:
    content: public Task<SelectableMDOListItem[]> GetHeadingsForListItemFromListNameAsync(string udListDefinitionName, int listItemId, bool showDeleted, RequestOptions requestOptions = null)
    parameters:
    - id: udListDefinitionName
      type: System.String
      description: The name of the list definition, indicating which list to delete the items from.
    - id: listItemId
      type: System.Int32
      description: The id of the list item
    - id: showDeleted
      type: System.Boolean
      description: Set to true if you want deleted headings
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SelectableMDOListItem[]}
      description: Array of headings
    content.vb: Public Function GetHeadingsForListItemFromListNameAsync(udListDefinitionName As String, listItemId As Integer, showDeleted As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of SelectableMDOListItem())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetHeadingsForListItemFromListNameAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveHeadingsForListItemFromListDefinitionAsync(System.Int32,System.Int32,SuperOffice.WebApi.Data.SelectableMDOListItem[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SaveHeadingsForListItemFromListDefinitionAsync(System.Int32,System.Int32,SuperOffice.WebApi.Data.SelectableMDOListItem[],SuperOffice.WebApi.RequestOptions)
  id: SaveHeadingsForListItemFromListDefinitionAsync(System.Int32,System.Int32,SuperOffice.WebApi.Data.SelectableMDOListItem[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SaveHeadingsForListItemFromListDefinitionAsync(Int32, Int32, SelectableMDOListItem[], RequestOptions)
  nameWithType: ListAgent.SaveHeadingsForListItemFromListDefinitionAsync(Int32, Int32, SelectableMDOListItem[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveHeadingsForListItemFromListDefinitionAsync(System.Int32, System.Int32, SuperOffice.WebApi.Data.SelectableMDOListItem[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSaves the active headings for the list item.\n"
  syntax:
    content: public Task<SelectableMDOListItem[]> SaveHeadingsForListItemFromListDefinitionAsync(int udListDefinitionId, int listItemId, SelectableMDOListItem[] headings, RequestOptions requestOptions = null)
    parameters:
    - id: udListDefinitionId
      type: System.Int32
      description: The id of the list definition, indicating which list to delete the items from. Negative numbers indicate TableNumber value instead of UDListDefId. e.g. -64 = category.
    - id: listItemId
      type: System.Int32
      description: The identity of the list item to delete
    - id: headings
      type: SuperOffice.WebApi.Data.SelectableMDOListItem[]
      description: The headings to save.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SelectableMDOListItem[]}
      description: Array of headings
    content.vb: Public Function SaveHeadingsForListItemFromListDefinitionAsync(udListDefinitionId As Integer, listItemId As Integer, headings As SelectableMDOListItem(), requestOptions As RequestOptions = Nothing) As Task(Of SelectableMDOListItem())
  overload: SuperOffice.WebApi.Agents.ListAgent.SaveHeadingsForListItemFromListDefinitionAsync*
  nameWithType.vb: ListAgent.SaveHeadingsForListItemFromListDefinitionAsync(Int32, Int32, SelectableMDOListItem(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.SaveHeadingsForListItemFromListDefinitionAsync(System.Int32, System.Int32, SuperOffice.WebApi.Data.SelectableMDOListItem(), SuperOffice.WebApi.RequestOptions)
  name.vb: SaveHeadingsForListItemFromListDefinitionAsync(Int32, Int32, SelectableMDOListItem(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveHeadingsForListItemFromListNameAsync(System.String,System.Int32,SuperOffice.WebApi.Data.SelectableMDOListItem[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SaveHeadingsForListItemFromListNameAsync(System.String,System.Int32,SuperOffice.WebApi.Data.SelectableMDOListItem[],SuperOffice.WebApi.RequestOptions)
  id: SaveHeadingsForListItemFromListNameAsync(System.String,System.Int32,SuperOffice.WebApi.Data.SelectableMDOListItem[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SaveHeadingsForListItemFromListNameAsync(String, Int32, SelectableMDOListItem[], RequestOptions)
  nameWithType: ListAgent.SaveHeadingsForListItemFromListNameAsync(String, Int32, SelectableMDOListItem[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveHeadingsForListItemFromListNameAsync(System.String, System.Int32, SuperOffice.WebApi.Data.SelectableMDOListItem[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSaves the headings for the list item.\n"
  syntax:
    content: public Task<SelectableMDOListItem[]> SaveHeadingsForListItemFromListNameAsync(string udListDefinitionName, int listItemId, SelectableMDOListItem[] headings, RequestOptions requestOptions = null)
    parameters:
    - id: udListDefinitionName
      type: System.String
      description: The name of the list definition, indicating which list to update.
    - id: listItemId
      type: System.Int32
      description: The identity of the list item
    - id: headings
      type: SuperOffice.WebApi.Data.SelectableMDOListItem[]
      description: The headings to save.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SelectableMDOListItem[]}
      description: 'Array of selectable headings '
    content.vb: Public Function SaveHeadingsForListItemFromListNameAsync(udListDefinitionName As String, listItemId As Integer, headings As SelectableMDOListItem(), requestOptions As RequestOptions = Nothing) As Task(Of SelectableMDOListItem())
  overload: SuperOffice.WebApi.Agents.ListAgent.SaveHeadingsForListItemFromListNameAsync*
  nameWithType.vb: ListAgent.SaveHeadingsForListItemFromListNameAsync(String, Int32, SelectableMDOListItem(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.SaveHeadingsForListItemFromListNameAsync(System.String, System.Int32, SuperOffice.WebApi.Data.SelectableMDOListItem(), SuperOffice.WebApi.RequestOptions)
  name.vb: SaveHeadingsForListItemFromListNameAsync(String, Int32, SelectableMDOListItem(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.GetListItemsForHeadingAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetListItemsForHeadingAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetListItemsForHeadingAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetListItemsForHeadingAsync(Int32, Int32, RequestOptions)
  nameWithType: ListAgent.GetListItemsForHeadingAsync(Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetListItemsForHeadingAsync(System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nList of list items that is selected if under this heading\n"
  syntax:
    content: public Task<SelectableMDOListItem[]> GetListItemsForHeadingAsync(int udListDefinitionId, int headingId, RequestOptions requestOptions = null)
    parameters:
    - id: udListDefinitionId
      type: System.Int32
      description: The id of the list. Negative numbers indicate TableNumber value instead of UDListDefId. e.g. -64 = category.
    - id: headingId
      type: System.Int32
      description: The id of the heading
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SelectableMDOListItem[]}
      description: Array of selectable list items
    content.vb: Public Function GetListItemsForHeadingAsync(udListDefinitionId As Integer, headingId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of SelectableMDOListItem())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetListItemsForHeadingAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetListItemsForHeadingFromListNameAsync(System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetListItemsForHeadingFromListNameAsync(System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetListItemsForHeadingFromListNameAsync(System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetListItemsForHeadingFromListNameAsync(String, Int32, RequestOptions)
  nameWithType: ListAgent.GetListItemsForHeadingFromListNameAsync(String, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetListItemsForHeadingFromListNameAsync(System.String, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nList of list items that is selected if under this heading\n"
  syntax:
    content: public Task<SelectableMDOListItem[]> GetListItemsForHeadingFromListNameAsync(string udListDefinitionName, int headingId, RequestOptions requestOptions = null)
    parameters:
    - id: udListDefinitionName
      type: System.String
      description: The name of the list definition.
    - id: headingId
      type: System.Int32
      description: The id of the heading
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SelectableMDOListItem[]}
      description: Array of selectable list items
    content.vb: Public Function GetListItemsForHeadingFromListNameAsync(udListDefinitionName As String, headingId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of SelectableMDOListItem())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetListItemsForHeadingFromListNameAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.SetListItemsForHeadingAsync(System.Int32,System.Int32,System.Int32[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SetListItemsForHeadingAsync(System.Int32,System.Int32,System.Int32[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: SetListItemsForHeadingAsync(System.Int32,System.Int32,System.Int32[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SetListItemsForHeadingAsync(Int32, Int32, Int32[], Boolean, RequestOptions)
  nameWithType: ListAgent.SetListItemsForHeadingAsync(Int32, Int32, Int32[], Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SetListItemsForHeadingAsync(System.Int32, System.Int32, System.Int32[], System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdate listItems that will be visible for this usergroup\n"
  syntax:
    content: public Task SetListItemsForHeadingAsync(int udListDefinitionId, int headingId, int[] listItemIds, bool enable, RequestOptions requestOptions = null)
    parameters:
    - id: udListDefinitionId
      type: System.Int32
      description: The id of the list. Negative numbers indicate TableNumber value instead of UDListDefId. e.g. -64 = category.
    - id: headingId
      type: System.Int32
      description: The id of the heading
    - id: listItemIds
      type: System.Int32[]
      description: The ids of the list items.
    - id: enable
      type: System.Boolean
      description: True to enable, false to disable
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SetListItemsForHeadingAsync(udListDefinitionId As Integer, headingId As Integer, listItemIds As Integer(), enable As Boolean, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.ListAgent.SetListItemsForHeadingAsync*
  nameWithType.vb: ListAgent.SetListItemsForHeadingAsync(Int32, Int32, Int32(), Boolean, RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.SetListItemsForHeadingAsync(System.Int32, System.Int32, System.Int32(), System.Boolean, SuperOffice.WebApi.RequestOptions)
  name.vb: SetListItemsForHeadingAsync(Int32, Int32, Int32(), Boolean, RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.SetListItemsForHeadingFromListNameAsync(System.String,System.Int32,System.Int32[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SetListItemsForHeadingFromListNameAsync(System.String,System.Int32,System.Int32[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: SetListItemsForHeadingFromListNameAsync(System.String,System.Int32,System.Int32[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SetListItemsForHeadingFromListNameAsync(String, Int32, Int32[], Boolean, RequestOptions)
  nameWithType: ListAgent.SetListItemsForHeadingFromListNameAsync(String, Int32, Int32[], Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SetListItemsForHeadingFromListNameAsync(System.String, System.Int32, System.Int32[], System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdate listItems under this heading\n"
  syntax:
    content: public Task SetListItemsForHeadingFromListNameAsync(string udListDefinitionName, int headingId, int[] listItemIds, bool enable, RequestOptions requestOptions = null)
    parameters:
    - id: udListDefinitionName
      type: System.String
      description: The name of the list definition.
    - id: headingId
      type: System.Int32
      description: The id of the heading
    - id: listItemIds
      type: System.Int32[]
      description: The ids of the list items.
    - id: enable
      type: System.Boolean
      description: True to enable, false to disable
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SetListItemsForHeadingFromListNameAsync(udListDefinitionName As String, headingId As Integer, listItemIds As Integer(), enable As Boolean, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.ListAgent.SetListItemsForHeadingFromListNameAsync*
  nameWithType.vb: ListAgent.SetListItemsForHeadingFromListNameAsync(String, Int32, Int32(), Boolean, RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.SetListItemsForHeadingFromListNameAsync(System.String, System.Int32, System.Int32(), System.Boolean, SuperOffice.WebApi.RequestOptions)
  name.vb: SetListItemsForHeadingFromListNameAsync(String, Int32, Int32(), Boolean, RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.SetHeadingsForListItemAsync(System.Int32,System.Int32,System.Int32[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SetHeadingsForListItemAsync(System.Int32,System.Int32,System.Int32[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: SetHeadingsForListItemAsync(System.Int32,System.Int32,System.Int32[],System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SetHeadingsForListItemAsync(Int32, Int32, Int32[], Boolean, RequestOptions)
  nameWithType: ListAgent.SetHeadingsForListItemAsync(Int32, Int32, Int32[], Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SetHeadingsForListItemAsync(System.Int32, System.Int32, System.Int32[], System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet headings which this list item should be listed under\n"
  syntax:
    content: public Task SetHeadingsForListItemAsync(int udListDefinitionId, int listItemId, int[] headingIds, bool enable, RequestOptions requestOptions = null)
    parameters:
    - id: udListDefinitionId
      type: System.Int32
      description: The id of the list. Negative numbers indicate TableNumber value instead of UDListDefId. e.g. -64 = category.
    - id: listItemId
      type: System.Int32
      description: The id of the list item
    - id: headingIds
      type: System.Int32[]
      description: The ids of the headings to set for this list item
    - id: enable
      type: System.Boolean
      description: Set to true to enable, false to disable
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SetHeadingsForListItemAsync(udListDefinitionId As Integer, listItemId As Integer, headingIds As Integer(), enable As Boolean, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.ListAgent.SetHeadingsForListItemAsync*
  nameWithType.vb: ListAgent.SetHeadingsForListItemAsync(Int32, Int32, Int32(), Boolean, RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.SetHeadingsForListItemAsync(System.Int32, System.Int32, System.Int32(), System.Boolean, SuperOffice.WebApi.RequestOptions)
  name.vb: SetHeadingsForListItemAsync(Int32, Int32, Int32(), Boolean, RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.SetRankOnHeadingsAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SetRankOnHeadingsAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: SetRankOnHeadingsAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SetRankOnHeadingsAsync(Int32, Int32[], RequestOptions)
  nameWithType: ListAgent.SetRankOnHeadingsAsync(Int32, Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SetRankOnHeadingsAsync(System.Int32, System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet rank order on headings\n"
  syntax:
    content: public Task SetRankOnHeadingsAsync(int udListDefinitionId, int[] headingIds, RequestOptions requestOptions = null)
    parameters:
    - id: udListDefinitionId
      type: System.Int32
      description: The id of the list. Negative numbers indicate TableNumber value instead of UDListDefId. e.g. -64 = category.
    - id: headingIds
      type: System.Int32[]
      description: The ids of the headings in the order you want
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SetRankOnHeadingsAsync(udListDefinitionId As Integer, headingIds As Integer(), requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.ListAgent.SetRankOnHeadingsAsync*
  nameWithType.vb: ListAgent.SetRankOnHeadingsAsync(Int32, Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.SetRankOnHeadingsAsync(System.Int32, System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: SetRankOnHeadingsAsync(Int32, Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.SetRankOnSaleActivityAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SetRankOnSaleActivityAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: SetRankOnSaleActivityAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SetRankOnSaleActivityAsync(Int32, Int32[], RequestOptions)
  nameWithType: ListAgent.SetRankOnSaleActivityAsync(Int32, Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SetRankOnSaleActivityAsync(System.Int32, System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet rank order on sale activity\n"
  syntax:
    content: public Task SetRankOnSaleActivityAsync(int saleTypeStageLinkId, int[] itemsIds, RequestOptions requestOptions = null)
    parameters:
    - id: saleTypeStageLinkId
      type: System.Int32
      description: The id of the list
    - id: itemsIds
      type: System.Int32[]
      description: The ids of the items in the order you want
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SetRankOnSaleActivityAsync(saleTypeStageLinkId As Integer, itemsIds As Integer(), requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.ListAgent.SetRankOnSaleActivityAsync*
  nameWithType.vb: ListAgent.SetRankOnSaleActivityAsync(Int32, Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.SetRankOnSaleActivityAsync(System.Int32, System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: SetRankOnSaleActivityAsync(Int32, Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.SetRankOnSaleDocumentAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SetRankOnSaleDocumentAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: SetRankOnSaleDocumentAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SetRankOnSaleDocumentAsync(Int32, Int32[], RequestOptions)
  nameWithType: ListAgent.SetRankOnSaleDocumentAsync(Int32, Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SetRankOnSaleDocumentAsync(System.Int32, System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet rank order on project document\n"
  syntax:
    content: public Task SetRankOnSaleDocumentAsync(int saleTypeStageLinkId, int[] itemsIds, RequestOptions requestOptions = null)
    parameters:
    - id: saleTypeStageLinkId
      type: System.Int32
      description: The id of the list
    - id: itemsIds
      type: System.Int32[]
      description: The ids of the items in the order you want
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SetRankOnSaleDocumentAsync(saleTypeStageLinkId As Integer, itemsIds As Integer(), requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.ListAgent.SetRankOnSaleDocumentAsync*
  nameWithType.vb: ListAgent.SetRankOnSaleDocumentAsync(Int32, Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.SetRankOnSaleDocumentAsync(System.Int32, System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: SetRankOnSaleDocumentAsync(Int32, Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.SetRankOnProjectActivityAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SetRankOnProjectActivityAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: SetRankOnProjectActivityAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SetRankOnProjectActivityAsync(Int32, Int32[], RequestOptions)
  nameWithType: ListAgent.SetRankOnProjectActivityAsync(Int32, Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SetRankOnProjectActivityAsync(System.Int32, System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet rank order on project activity\n"
  syntax:
    content: public Task SetRankOnProjectActivityAsync(int projectTypeStatusLinkId, int[] itemsIds, RequestOptions requestOptions = null)
    parameters:
    - id: projectTypeStatusLinkId
      type: System.Int32
      description: The id of the list
    - id: itemsIds
      type: System.Int32[]
      description: The ids of the items in the order you want
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SetRankOnProjectActivityAsync(projectTypeStatusLinkId As Integer, itemsIds As Integer(), requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.ListAgent.SetRankOnProjectActivityAsync*
  nameWithType.vb: ListAgent.SetRankOnProjectActivityAsync(Int32, Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.SetRankOnProjectActivityAsync(System.Int32, System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: SetRankOnProjectActivityAsync(Int32, Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.SetRankOnProjectDocumentAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SetRankOnProjectDocumentAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: SetRankOnProjectDocumentAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SetRankOnProjectDocumentAsync(Int32, Int32[], RequestOptions)
  nameWithType: ListAgent.SetRankOnProjectDocumentAsync(Int32, Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SetRankOnProjectDocumentAsync(System.Int32, System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet rank order on project document\n"
  syntax:
    content: public Task SetRankOnProjectDocumentAsync(int projectTypeStatusLinkId, int[] itemsIds, RequestOptions requestOptions = null)
    parameters:
    - id: projectTypeStatusLinkId
      type: System.Int32
      description: The id of the list
    - id: itemsIds
      type: System.Int32[]
      description: The ids of the items in the order you want
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SetRankOnProjectDocumentAsync(projectTypeStatusLinkId As Integer, itemsIds As Integer(), requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.ListAgent.SetRankOnProjectDocumentAsync*
  nameWithType.vb: ListAgent.SetRankOnProjectDocumentAsync(Int32, Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.SetRankOnProjectDocumentAsync(System.Int32, System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: SetRankOnProjectDocumentAsync(Int32, Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.GetAllFromListDefinitionAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetAllFromListDefinitionAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: GetAllFromListDefinitionAsync(System.Int32,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetAllFromListDefinitionAsync(Int32, Boolean, RequestOptions)
  nameWithType: ListAgent.GetAllFromListDefinitionAsync(Int32, Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetAllFromListDefinitionAsync(System.Int32, System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet all list items for the specified list defintion\n"
  syntax:
    content: public Task<ListItemEntity[]> GetAllFromListDefinitionAsync(int udListDefinitionId, bool includeDeleted, RequestOptions requestOptions = null)
    parameters:
    - id: udListDefinitionId
      type: System.Int32
      description: The id of the list definition, indicating which list to get the item from. Negative numbers indicate TableNumber value instead of UDListDefId. e.g. -64 = category.
    - id: includeDeleted
      type: System.Boolean
      description: Include deleted items in result?
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ListItemEntity[]}
      description: The list items
    content.vb: Public Function GetAllFromListDefinitionAsync(udListDefinitionId As Integer, includeDeleted As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of ListItemEntity())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetAllFromListDefinitionAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetAllFromListNameAsync(System.String,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetAllFromListNameAsync(System.String,System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: GetAllFromListNameAsync(System.String,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetAllFromListNameAsync(String, Boolean, RequestOptions)
  nameWithType: ListAgent.GetAllFromListNameAsync(String, Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetAllFromListNameAsync(System.String, System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet all list items for the specified list defintion\n"
  syntax:
    content: public Task<ListItemEntity[]> GetAllFromListNameAsync(string udListDefinitionName, bool includeDeleted, RequestOptions requestOptions = null)
    parameters:
    - id: udListDefinitionName
      type: System.String
      description: The name of the list definition, indicating which list to get the item from.
    - id: includeDeleted
      type: System.Boolean
      description: Include deleted items in result?
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ListItemEntity[]}
      description: The list items
    content.vb: Public Function GetAllFromListNameAsync(udListDefinitionName As String, includeDeleted As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of ListItemEntity())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetAllFromListNameAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveAllFromListDefinitionAsync(System.Int32,SuperOffice.WebApi.Data.ListItemEntity[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SaveAllFromListDefinitionAsync(System.Int32,SuperOffice.WebApi.Data.ListItemEntity[],SuperOffice.WebApi.RequestOptions)
  id: SaveAllFromListDefinitionAsync(System.Int32,SuperOffice.WebApi.Data.ListItemEntity[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SaveAllFromListDefinitionAsync(Int32, ListItemEntity[], RequestOptions)
  nameWithType: ListAgent.SaveAllFromListDefinitionAsync(Int32, ListItemEntity[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveAllFromListDefinitionAsync(System.Int32, SuperOffice.WebApi.Data.ListItemEntity[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSave all list items for the specified list defintion\n"
  syntax:
    content: public Task<ListItemEntity[]> SaveAllFromListDefinitionAsync(int udListDefinitionId, ListItemEntity[] items, RequestOptions requestOptions = null)
    parameters:
    - id: udListDefinitionId
      type: System.Int32
      description: The id of the list definition, indicating which list to save the items to. Negative numbers indicate TableNumber value instead of UDListDefId. e.g. -64 = category.
    - id: items
      type: SuperOffice.WebApi.Data.ListItemEntity[]
      description: The list items
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ListItemEntity[]}
      description: The list items
    content.vb: Public Function SaveAllFromListDefinitionAsync(udListDefinitionId As Integer, items As ListItemEntity(), requestOptions As RequestOptions = Nothing) As Task(Of ListItemEntity())
  overload: SuperOffice.WebApi.Agents.ListAgent.SaveAllFromListDefinitionAsync*
  nameWithType.vb: ListAgent.SaveAllFromListDefinitionAsync(Int32, ListItemEntity(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.SaveAllFromListDefinitionAsync(System.Int32, SuperOffice.WebApi.Data.ListItemEntity(), SuperOffice.WebApi.RequestOptions)
  name.vb: SaveAllFromListDefinitionAsync(Int32, ListItemEntity(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveAllFromListNameAsync(System.String,SuperOffice.WebApi.Data.ListItemEntity[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SaveAllFromListNameAsync(System.String,SuperOffice.WebApi.Data.ListItemEntity[],SuperOffice.WebApi.RequestOptions)
  id: SaveAllFromListNameAsync(System.String,SuperOffice.WebApi.Data.ListItemEntity[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SaveAllFromListNameAsync(String, ListItemEntity[], RequestOptions)
  nameWithType: ListAgent.SaveAllFromListNameAsync(String, ListItemEntity[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveAllFromListNameAsync(System.String, SuperOffice.WebApi.Data.ListItemEntity[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSave all list items for the specified list defintion\n"
  syntax:
    content: public Task<ListItemEntity[]> SaveAllFromListNameAsync(string udListDefinitionName, ListItemEntity[] items, RequestOptions requestOptions = null)
    parameters:
    - id: udListDefinitionName
      type: System.String
      description: The name of the list definition, indicating which list to save the items to.
    - id: items
      type: SuperOffice.WebApi.Data.ListItemEntity[]
      description: The list items
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ListItemEntity[]}
      description: The list items
    content.vb: Public Function SaveAllFromListNameAsync(udListDefinitionName As String, items As ListItemEntity(), requestOptions As RequestOptions = Nothing) As Task(Of ListItemEntity())
  overload: SuperOffice.WebApi.Agents.ListAgent.SaveAllFromListNameAsync*
  nameWithType.vb: ListAgent.SaveAllFromListNameAsync(String, ListItemEntity(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.SaveAllFromListNameAsync(System.String, SuperOffice.WebApi.Data.ListItemEntity(), SuperOffice.WebApi.RequestOptions)
  name.vb: SaveAllFromListNameAsync(String, ListItemEntity(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.AddFromListDefinitionAsync(System.Int32,SuperOffice.WebApi.Data.ListItemEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.AddFromListDefinitionAsync(System.Int32,SuperOffice.WebApi.Data.ListItemEntity,SuperOffice.WebApi.RequestOptions)
  id: AddFromListDefinitionAsync(System.Int32,SuperOffice.WebApi.Data.ListItemEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: AddFromListDefinitionAsync(Int32, ListItemEntity, RequestOptions)
  nameWithType: ListAgent.AddFromListDefinitionAsync(Int32, ListItemEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.AddFromListDefinitionAsync(System.Int32, SuperOffice.WebApi.Data.ListItemEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSave a new list item for the specified list defintion\n"
  syntax:
    content: public Task<ListItemEntity> AddFromListDefinitionAsync(int udListDefinitionId, ListItemEntity item, RequestOptions requestOptions = null)
    parameters:
    - id: udListDefinitionId
      type: System.Int32
      description: The name of the list definition, indicating which list to save the item to.
    - id: item
      type: SuperOffice.WebApi.Data.ListItemEntity
      description: The item to save
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ListItemEntity}
      description: The saved list item
    content.vb: Public Function AddFromListDefinitionAsync(udListDefinitionId As Integer, item As ListItemEntity, requestOptions As RequestOptions = Nothing) As Task(Of ListItemEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.AddFromListDefinitionAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.AddFromListNameAsync(System.String,SuperOffice.WebApi.Data.ListItemEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.AddFromListNameAsync(System.String,SuperOffice.WebApi.Data.ListItemEntity,SuperOffice.WebApi.RequestOptions)
  id: AddFromListNameAsync(System.String,SuperOffice.WebApi.Data.ListItemEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: AddFromListNameAsync(String, ListItemEntity, RequestOptions)
  nameWithType: ListAgent.AddFromListNameAsync(String, ListItemEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.AddFromListNameAsync(System.String, SuperOffice.WebApi.Data.ListItemEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSave a new list item for the specified list defintion\n"
  syntax:
    content: public Task<ListItemEntity> AddFromListNameAsync(string udListDefinitionName, ListItemEntity item, RequestOptions requestOptions = null)
    parameters:
    - id: udListDefinitionName
      type: System.String
      description: The name of the list definition, indicating which list to save the item to.
    - id: item
      type: SuperOffice.WebApi.Data.ListItemEntity
      description: The item to save
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ListItemEntity}
      description: The saved list item
    content.vb: Public Function AddFromListNameAsync(udListDefinitionName As String, item As ListItemEntity, requestOptions As RequestOptions = Nothing) As Task(Of ListItemEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.AddFromListNameAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.DeleteAllFromListDefinitionAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.DeleteAllFromListDefinitionAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: DeleteAllFromListDefinitionAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: DeleteAllFromListDefinitionAsync(Int32, RequestOptions)
  nameWithType: ListAgent.DeleteAllFromListDefinitionAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.DeleteAllFromListDefinitionAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMarks all items in the list deleted\n"
  syntax:
    content: public Task DeleteAllFromListDefinitionAsync(int udListDefinitionId, RequestOptions requestOptions = null)
    parameters:
    - id: udListDefinitionId
      type: System.Int32
      description: The id of the list definition, indicating which list to delete the items from. Negative numbers indicate TableNumber value instead of UDListDefId. e.g. -64 = category.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Public Function DeleteAllFromListDefinitionAsync(udListDefinitionId As Integer, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.ListAgent.DeleteAllFromListDefinitionAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.DeleteAllFromListNameAsync(System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.DeleteAllFromListNameAsync(System.String,SuperOffice.WebApi.RequestOptions)
  id: DeleteAllFromListNameAsync(System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: DeleteAllFromListNameAsync(String, RequestOptions)
  nameWithType: ListAgent.DeleteAllFromListNameAsync(String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.DeleteAllFromListNameAsync(System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMarks all items in the list deleted\n"
  syntax:
    content: public Task DeleteAllFromListNameAsync(string udListDefinitionName, RequestOptions requestOptions = null)
    parameters:
    - id: udListDefinitionName
      type: System.String
      description: The name of the list definition, indicating which list to delete the items from.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Public Function DeleteAllFromListNameAsync(udListDefinitionName As String, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.ListAgent.DeleteAllFromListNameAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetFromListDefinitionAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetFromListDefinitionAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetFromListDefinitionAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetFromListDefinitionAsync(Int32, Int32, RequestOptions)
  nameWithType: ListAgent.GetFromListDefinitionAsync(Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetFromListDefinitionAsync(System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet a list item for the specified list defintion\n"
  syntax:
    content: public Task<ListItemEntity> GetFromListDefinitionAsync(int id, int udListDefinitionId, RequestOptions requestOptions = null)
    parameters:
    - id: id
      type: System.Int32
      description: The identity of the list item to load
    - id: udListDefinitionId
      type: System.Int32
      description: The id of the list definition, indicating which list to get the item from. Negative numbers indicate TableNumber value instead of UDListDefId. e.g. -64 = category.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ListItemEntity}
      description: The loaded list item
    content.vb: Public Function GetFromListDefinitionAsync(id As Integer, udListDefinitionId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of ListItemEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetFromListDefinitionAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetFromListNameAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetFromListNameAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetFromListNameAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetFromListNameAsync(Int32, String, RequestOptions)
  nameWithType: ListAgent.GetFromListNameAsync(Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetFromListNameAsync(System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet a list item for the specified list defintion\n"
  syntax:
    content: public Task<ListItemEntity> GetFromListNameAsync(int id, string udListDefinitionName, RequestOptions requestOptions = null)
    parameters:
    - id: id
      type: System.Int32
      description: The identity of the list item to load
    - id: udListDefinitionName
      type: System.String
      description: The name of the list definition, indicating which list to get the item from.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ListItemEntity}
      description: The loaded list item
    content.vb: Public Function GetFromListNameAsync(id As Integer, udListDefinitionName As String, requestOptions As RequestOptions = Nothing) As Task(Of ListItemEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetFromListNameAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveFromListDefinitionAsync(System.Int32,System.Int32,SuperOffice.WebApi.Data.ListItemEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SaveFromListDefinitionAsync(System.Int32,System.Int32,SuperOffice.WebApi.Data.ListItemEntity,SuperOffice.WebApi.RequestOptions)
  id: SaveFromListDefinitionAsync(System.Int32,System.Int32,SuperOffice.WebApi.Data.ListItemEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SaveFromListDefinitionAsync(Int32, Int32, ListItemEntity, RequestOptions)
  nameWithType: ListAgent.SaveFromListDefinitionAsync(Int32, Int32, ListItemEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveFromListDefinitionAsync(System.Int32, System.Int32, SuperOffice.WebApi.Data.ListItemEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSave a list item for the specified list defintion\n"
  syntax:
    content: public Task<ListItemEntity> SaveFromListDefinitionAsync(int id, int udListDefinitionId, ListItemEntity item, RequestOptions requestOptions = null)
    parameters:
    - id: id
      type: System.Int32
      description: The identity of the list item to load
    - id: udListDefinitionId
      type: System.Int32
      description: The id of the list definition, indicating which list to save the item to. Negative numbers indicate TableNumber value instead of UDListDefId. e.g. -64 = category.
    - id: item
      type: SuperOffice.WebApi.Data.ListItemEntity
      description: The item to save
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ListItemEntity}
      description: The saved list item
    content.vb: Public Function SaveFromListDefinitionAsync(id As Integer, udListDefinitionId As Integer, item As ListItemEntity, requestOptions As RequestOptions = Nothing) As Task(Of ListItemEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.SaveFromListDefinitionAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveFromListNameAsync(System.Int32,System.String,SuperOffice.WebApi.Data.ListItemEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SaveFromListNameAsync(System.Int32,System.String,SuperOffice.WebApi.Data.ListItemEntity,SuperOffice.WebApi.RequestOptions)
  id: SaveFromListNameAsync(System.Int32,System.String,SuperOffice.WebApi.Data.ListItemEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SaveFromListNameAsync(Int32, String, ListItemEntity, RequestOptions)
  nameWithType: ListAgent.SaveFromListNameAsync(Int32, String, ListItemEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveFromListNameAsync(System.Int32, System.String, SuperOffice.WebApi.Data.ListItemEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSave a list item for the specified list defintion\n"
  syntax:
    content: public Task<ListItemEntity> SaveFromListNameAsync(int id, string udListDefinitionName, ListItemEntity item, RequestOptions requestOptions = null)
    parameters:
    - id: id
      type: System.Int32
      description: The identity of the list item to load
    - id: udListDefinitionName
      type: System.String
      description: The name of the list definition, indicating which list to save the item to.
    - id: item
      type: SuperOffice.WebApi.Data.ListItemEntity
      description: The item to save
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ListItemEntity}
      description: The saved list item
    content.vb: Public Function SaveFromListNameAsync(id As Integer, udListDefinitionName As String, item As ListItemEntity, requestOptions As RequestOptions = Nothing) As Task(Of ListItemEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.SaveFromListNameAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.DeleteFromListDefinitionAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.DeleteFromListDefinitionAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: DeleteFromListDefinitionAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: DeleteFromListDefinitionAsync(Int32, Int32, RequestOptions)
  nameWithType: ListAgent.DeleteFromListDefinitionAsync(Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.DeleteFromListDefinitionAsync(System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nDelete a list item from the specified list defintion\n"
  syntax:
    content: public Task DeleteFromListDefinitionAsync(int id, int udListDefinitionId, RequestOptions requestOptions = null)
    parameters:
    - id: id
      type: System.Int32
      description: The identity of the list item to delete
    - id: udListDefinitionId
      type: System.Int32
      description: The id of the list definition, indicating which list to delete the items from. Negative numbers indicate TableNumber value instead of UDListDefId. e.g. -64 = category.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Public Function DeleteFromListDefinitionAsync(id As Integer, udListDefinitionId As Integer, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.ListAgent.DeleteFromListDefinitionAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.DeleteFromListNameAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.DeleteFromListNameAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: DeleteFromListNameAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: DeleteFromListNameAsync(Int32, String, RequestOptions)
  nameWithType: ListAgent.DeleteFromListNameAsync(Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.DeleteFromListNameAsync(System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nDelete a list item from the specified list defintion\n"
  syntax:
    content: public Task DeleteFromListNameAsync(int id, string udListDefinitionName, RequestOptions requestOptions = null)
    parameters:
    - id: id
      type: System.Int32
      description: The identity of the list item to delete
    - id: udListDefinitionName
      type: System.String
      description: The name of the list definition, indicating which list to delete the items from.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Public Function DeleteFromListNameAsync(id As Integer, udListDefinitionName As String, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.ListAgent.DeleteFromListNameAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetHeadingsFromNameAsync(System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetHeadingsFromNameAsync(System.String,SuperOffice.WebApi.RequestOptions)
  id: GetHeadingsFromNameAsync(System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetHeadingsFromNameAsync(String, RequestOptions)
  nameWithType: ListAgent.GetHeadingsFromNameAsync(String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetHeadingsFromNameAsync(System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets headings for list resolved by the provided name.\n"
  syntax:
    content: public Task<HeadingEntity[]> GetHeadingsFromNameAsync(string name, RequestOptions requestOptions = null)
    parameters:
    - id: name
      type: System.String
      description: The name of the list to look up.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.HeadingEntity[]}
      description: List of headings
    content.vb: Public Function GetHeadingsFromNameAsync(name As String, requestOptions As RequestOptions = Nothing) As Task(Of HeadingEntity())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetHeadingsFromNameAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetHeadingsFromListDefinitionAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetHeadingsFromListDefinitionAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetHeadingsFromListDefinitionAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetHeadingsFromListDefinitionAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetHeadingsFromListDefinitionAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetHeadingsFromListDefinitionAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets headings for list resolved by the provided id.\n"
  syntax:
    content: public Task<HeadingEntity[]> GetHeadingsFromListDefinitionAsync(int id, RequestOptions requestOptions = null)
    parameters:
    - id: id
      type: System.Int32
      description: The id of the list to look up.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.HeadingEntity[]}
      description: List of headings
    content.vb: Public Function GetHeadingsFromListDefinitionAsync(id As Integer, requestOptions As RequestOptions = Nothing) As Task(Of HeadingEntity())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetHeadingsFromListDefinitionAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveHeadingsFromNameAsync(System.String,SuperOffice.WebApi.Data.HeadingEntity[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SaveHeadingsFromNameAsync(System.String,SuperOffice.WebApi.Data.HeadingEntity[],SuperOffice.WebApi.RequestOptions)
  id: SaveHeadingsFromNameAsync(System.String,SuperOffice.WebApi.Data.HeadingEntity[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SaveHeadingsFromNameAsync(String, HeadingEntity[], RequestOptions)
  nameWithType: ListAgent.SaveHeadingsFromNameAsync(String, HeadingEntity[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveHeadingsFromNameAsync(System.String, SuperOffice.WebApi.Data.HeadingEntity[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSave headings for list resolved by the provided name.\n"
  syntax:
    content: public Task<HeadingEntity[]> SaveHeadingsFromNameAsync(string name, HeadingEntity[] entities, RequestOptions requestOptions = null)
    parameters:
    - id: name
      type: System.String
      description: The name of the list to look up.
    - id: entities
      type: SuperOffice.WebApi.Data.HeadingEntity[]
      description: The headings to save
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.HeadingEntity[]}
      description: List of headings
    content.vb: Public Function SaveHeadingsFromNameAsync(name As String, entities As HeadingEntity(), requestOptions As RequestOptions = Nothing) As Task(Of HeadingEntity())
  overload: SuperOffice.WebApi.Agents.ListAgent.SaveHeadingsFromNameAsync*
  nameWithType.vb: ListAgent.SaveHeadingsFromNameAsync(String, HeadingEntity(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.SaveHeadingsFromNameAsync(System.String, SuperOffice.WebApi.Data.HeadingEntity(), SuperOffice.WebApi.RequestOptions)
  name.vb: SaveHeadingsFromNameAsync(String, HeadingEntity(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveHeadingsFromListDefinitionAsync(System.Int32,SuperOffice.WebApi.Data.HeadingEntity[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SaveHeadingsFromListDefinitionAsync(System.Int32,SuperOffice.WebApi.Data.HeadingEntity[],SuperOffice.WebApi.RequestOptions)
  id: SaveHeadingsFromListDefinitionAsync(System.Int32,SuperOffice.WebApi.Data.HeadingEntity[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SaveHeadingsFromListDefinitionAsync(Int32, HeadingEntity[], RequestOptions)
  nameWithType: ListAgent.SaveHeadingsFromListDefinitionAsync(Int32, HeadingEntity[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveHeadingsFromListDefinitionAsync(System.Int32, SuperOffice.WebApi.Data.HeadingEntity[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSave headings for list resolved by the provided id.\n"
  syntax:
    content: public Task<HeadingEntity[]> SaveHeadingsFromListDefinitionAsync(int id, HeadingEntity[] entities, RequestOptions requestOptions = null)
    parameters:
    - id: id
      type: System.Int32
      description: The id of the list to look up.
    - id: entities
      type: SuperOffice.WebApi.Data.HeadingEntity[]
      description: The headings to save
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.HeadingEntity[]}
      description: List of headings
    content.vb: Public Function SaveHeadingsFromListDefinitionAsync(id As Integer, entities As HeadingEntity(), requestOptions As RequestOptions = Nothing) As Task(Of HeadingEntity())
  overload: SuperOffice.WebApi.Agents.ListAgent.SaveHeadingsFromListDefinitionAsync*
  nameWithType.vb: ListAgent.SaveHeadingsFromListDefinitionAsync(Int32, HeadingEntity(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.SaveHeadingsFromListDefinitionAsync(System.Int32, SuperOffice.WebApi.Data.HeadingEntity(), SuperOffice.WebApi.RequestOptions)
  name.vb: SaveHeadingsFromListDefinitionAsync(Int32, HeadingEntity(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveHeadingFromNameAsync(System.String,SuperOffice.WebApi.Data.HeadingEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SaveHeadingFromNameAsync(System.String,SuperOffice.WebApi.Data.HeadingEntity,SuperOffice.WebApi.RequestOptions)
  id: SaveHeadingFromNameAsync(System.String,SuperOffice.WebApi.Data.HeadingEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SaveHeadingFromNameAsync(String, HeadingEntity, RequestOptions)
  nameWithType: ListAgent.SaveHeadingFromNameAsync(String, HeadingEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveHeadingFromNameAsync(System.String, SuperOffice.WebApi.Data.HeadingEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSave new heading for list resolved by the provided name.\n"
  syntax:
    content: public Task<HeadingEntity> SaveHeadingFromNameAsync(string name, HeadingEntity entity, RequestOptions requestOptions = null)
    parameters:
    - id: name
      type: System.String
      description: The name of the list to look up.
    - id: entity
      type: SuperOffice.WebApi.Data.HeadingEntity
      description: The new heading to save
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.HeadingEntity}
      description: The saved entity.
    content.vb: Public Function SaveHeadingFromNameAsync(name As String, entity As HeadingEntity, requestOptions As RequestOptions = Nothing) As Task(Of HeadingEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.SaveHeadingFromNameAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveHeadingFromListDefinitionAsync(System.Int32,SuperOffice.WebApi.Data.HeadingEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SaveHeadingFromListDefinitionAsync(System.Int32,SuperOffice.WebApi.Data.HeadingEntity,SuperOffice.WebApi.RequestOptions)
  id: SaveHeadingFromListDefinitionAsync(System.Int32,SuperOffice.WebApi.Data.HeadingEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SaveHeadingFromListDefinitionAsync(Int32, HeadingEntity, RequestOptions)
  nameWithType: ListAgent.SaveHeadingFromListDefinitionAsync(Int32, HeadingEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveHeadingFromListDefinitionAsync(System.Int32, SuperOffice.WebApi.Data.HeadingEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSave new heading for list resolved by the provided id.\n"
  syntax:
    content: public Task<HeadingEntity> SaveHeadingFromListDefinitionAsync(int id, HeadingEntity entity, RequestOptions requestOptions = null)
    parameters:
    - id: id
      type: System.Int32
      description: The id of the list to look up.
    - id: entity
      type: SuperOffice.WebApi.Data.HeadingEntity
      description: The new heading to save
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.HeadingEntity}
      description: The saved entity.
    content.vb: Public Function SaveHeadingFromListDefinitionAsync(id As Integer, entity As HeadingEntity, requestOptions As RequestOptions = Nothing) As Task(Of HeadingEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.SaveHeadingFromListDefinitionAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.DeleteAllHeadingsFromNameAsync(System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.DeleteAllHeadingsFromNameAsync(System.String,SuperOffice.WebApi.RequestOptions)
  id: DeleteAllHeadingsFromNameAsync(System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: DeleteAllHeadingsFromNameAsync(String, RequestOptions)
  nameWithType: ListAgent.DeleteAllHeadingsFromNameAsync(String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.DeleteAllHeadingsFromNameAsync(System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nDelete all headings for list resolved by the provided name.\n"
  syntax:
    content: public Task DeleteAllHeadingsFromNameAsync(string name, RequestOptions requestOptions = null)
    parameters:
    - id: name
      type: System.String
      description: The name of the list to look up.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Public Function DeleteAllHeadingsFromNameAsync(name As String, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.ListAgent.DeleteAllHeadingsFromNameAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.DeleteAllHeadingsFromListDefinitionAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.DeleteAllHeadingsFromListDefinitionAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: DeleteAllHeadingsFromListDefinitionAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: DeleteAllHeadingsFromListDefinitionAsync(Int32, RequestOptions)
  nameWithType: ListAgent.DeleteAllHeadingsFromListDefinitionAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.DeleteAllHeadingsFromListDefinitionAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nDelete all headings for list resolved by the provided id.\n"
  syntax:
    content: public Task DeleteAllHeadingsFromListDefinitionAsync(int id, RequestOptions requestOptions = null)
    parameters:
    - id: id
      type: System.Int32
      description: The id of the list to look up.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Public Function DeleteAllHeadingsFromListDefinitionAsync(id As Integer, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.ListAgent.DeleteAllHeadingsFromListDefinitionAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetLocalizedTextAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetLocalizedTextAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetLocalizedTextAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetLocalizedTextAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetLocalizedTextAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetLocalizedTextAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific LocalizedText object.                        \n"
  syntax:
    content: public Task<LocalizedText> GetLocalizedTextAsync(int localizedTextId, RequestOptions requestOptions = null)
    parameters:
    - id: localizedTextId
      type: System.Int32
      description: The identifier of the LocalizedText object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.LocalizedText}
      description: LocalizedText
    content.vb: Public Function GetLocalizedTextAsync(localizedTextId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of LocalizedText)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetLocalizedTextAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetLocalizedTextByTypeAsync(SuperOffice.WebApi.Data.LocalizedTextType,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetLocalizedTextByTypeAsync(SuperOffice.WebApi.Data.LocalizedTextType,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetLocalizedTextByTypeAsync(SuperOffice.WebApi.Data.LocalizedTextType,System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetLocalizedTextByTypeAsync(LocalizedTextType, Int32, Int32, RequestOptions)
  nameWithType: ListAgent.GetLocalizedTextByTypeAsync(LocalizedTextType, Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetLocalizedTextByTypeAsync(SuperOffice.WebApi.Data.LocalizedTextType, System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns a localized text based on the resource id for the selected language.\n"
  syntax:
    content: public Task<LocalizedText> GetLocalizedTextByTypeAsync(LocalizedTextType textType, int resourceId, int languageId, RequestOptions requestOptions = null)
    parameters:
    - id: textType
      type: SuperOffice.WebApi.Data.LocalizedTextType
      description: Type of the localized text
    - id: resourceId
      type: System.Int32
      description: The resource id. This id has different meaning based on the LocalizedTextType.
    - id: languageId
      type: System.Int32
      description: The LCID number of the language.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.LocalizedText}
      description: A LocalizedText carrier.
    content.vb: Public Function GetLocalizedTextByTypeAsync(textType As LocalizedTextType, resourceId As Integer, languageId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of LocalizedText)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetLocalizedTextByTypeAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetLocalizedTextListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetLocalizedTextListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetLocalizedTextListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetLocalizedTextListAsync(Int32[], RequestOptions)
  nameWithType: ListAgent.GetLocalizedTextListAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetLocalizedTextListAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets an array of specific LocalizedText objects.                        \n"
  syntax:
    content: public Task<LocalizedText[]> GetLocalizedTextListAsync(int[] localizedTextIds, RequestOptions requestOptions = null)
    parameters:
    - id: localizedTextIds
      type: System.Int32[]
      description: The identifiers of the LocalizedText object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.LocalizedText[]}
      description: Array of LocalizedText objects
    content.vb: Public Function GetLocalizedTextListAsync(localizedTextIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of LocalizedText())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetLocalizedTextListAsync*
  nameWithType.vb: ListAgent.GetLocalizedTextListAsync(Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.GetLocalizedTextListAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetLocalizedTextListAsync(Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.GetLocalizedTextsAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetLocalizedTextsAsync(SuperOffice.WebApi.RequestOptions)
  id: GetLocalizedTextsAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetLocalizedTextsAsync(RequestOptions)
  nameWithType: ListAgent.GetLocalizedTextsAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetLocalizedTextsAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets all localized texts in the CRM database.\n"
  syntax:
    content: public Task<LocalizedText[]> GetLocalizedTextsAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.LocalizedText[]}
      description: Array of LocalizedText objects
    content.vb: Public Function GetLocalizedTextsAsync(requestOptions As RequestOptions = Nothing) As Task(Of LocalizedText())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetLocalizedTextsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetLocalizedTextsByLanguageIdAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetLocalizedTextsByLanguageIdAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetLocalizedTextsByLanguageIdAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetLocalizedTextsByLanguageIdAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetLocalizedTextsByLanguageIdAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetLocalizedTextsByLanguageIdAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets all localized text belonging to a specific language.\n"
  syntax:
    content: public Task<LocalizedText[]> GetLocalizedTextsByLanguageIdAsync(int languageId, RequestOptions requestOptions = null)
    parameters:
    - id: languageId
      type: System.Int32
      description: The LCID number of the language.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.LocalizedText[]}
      description: Array of LocalizedText objects
    content.vb: Public Function GetLocalizedTextsByLanguageIdAsync(languageId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of LocalizedText())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetLocalizedTextsByLanguageIdAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetLocalizedTextsByTypeAsync(SuperOffice.WebApi.Data.LocalizedTextType[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetLocalizedTextsByTypeAsync(SuperOffice.WebApi.Data.LocalizedTextType[],SuperOffice.WebApi.RequestOptions)
  id: GetLocalizedTextsByTypeAsync(SuperOffice.WebApi.Data.LocalizedTextType[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetLocalizedTextsByTypeAsync(LocalizedTextType[], RequestOptions)
  nameWithType: ListAgent.GetLocalizedTextsByTypeAsync(LocalizedTextType[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetLocalizedTextsByTypeAsync(SuperOffice.WebApi.Data.LocalizedTextType[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets localized text by their type\n"
  syntax:
    content: public Task<LocalizedText[]> GetLocalizedTextsByTypeAsync(LocalizedTextType[] textTypes, RequestOptions requestOptions = null)
    parameters:
    - id: textTypes
      type: SuperOffice.WebApi.Data.LocalizedTextType[]
      description: Array of LocalizedTextTypes. If null all texts are returned.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.LocalizedText[]}
      description: Array of LocalizedText objects
    content.vb: Public Function GetLocalizedTextsByTypeAsync(textTypes As LocalizedTextType(), requestOptions As RequestOptions = Nothing) As Task(Of LocalizedText())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetLocalizedTextsByTypeAsync*
  nameWithType.vb: ListAgent.GetLocalizedTextsByTypeAsync(LocalizedTextType(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.GetLocalizedTextsByTypeAsync(SuperOffice.WebApi.Data.LocalizedTextType(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetLocalizedTextsByTypeAsync(LocalizedTextType(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.GetHierarchyEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetHierarchyEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetHierarchyEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetHierarchyEntityAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetHierarchyEntityAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetHierarchyEntityAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific HierarchyEntity object.                        \n"
  syntax:
    content: public Task<HierarchyEntity> GetHierarchyEntityAsync(int hierarchyEntityId, RequestOptions requestOptions = null)
    parameters:
    - id: hierarchyEntityId
      type: System.Int32
      description: The identifier of the HierarchyEntity object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.HierarchyEntity}
      description: HierarchyEntity
    content.vb: Public Function GetHierarchyEntityAsync(hierarchyEntityId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of HierarchyEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetHierarchyEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetAllDomainsAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetAllDomainsAsync(SuperOffice.WebApi.RequestOptions)
  id: GetAllDomainsAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetAllDomainsAsync(RequestOptions)
  nameWithType: ListAgent.GetAllDomainsAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetAllDomainsAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet list of all domains\n"
  syntax:
    content: public Task<Domain[]> GetAllDomainsAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Domain[]}
      description: Domain types (scripts, extra tables, etc)
    content.vb: Public Function GetAllDomainsAsync(requestOptions As RequestOptions = Nothing) As Task(Of Domain())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetAllDomainsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetAllInDomainAsync(SuperOffice.WebApi.Data.Domain,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetAllInDomainAsync(SuperOffice.WebApi.Data.Domain,System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: GetAllInDomainAsync(SuperOffice.WebApi.Data.Domain,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetAllInDomainAsync(Domain, Boolean, RequestOptions)
  nameWithType: ListAgent.GetAllInDomainAsync(Domain, Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetAllInDomainAsync(SuperOffice.WebApi.Data.Domain, System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet all items in a domain\n"
  syntax:
    content: public Task<HierarchyEntity[]> GetAllInDomainAsync(Domain domain, bool children, RequestOptions requestOptions = null)
    parameters:
    - id: domain
      type: SuperOffice.WebApi.Data.Domain
      description: Type of items to get (scripts, extra tables, etc)
    - id: children
      type: System.Boolean
      description: Include sub-items?
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.HierarchyEntity[]}
      description: All items and child items within a domain
    content.vb: Public Function GetAllInDomainAsync(domain As Domain, children As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of HierarchyEntity())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetAllInDomainAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetHierarchyFromPathAsync(SuperOffice.WebApi.Data.Domain,System.String,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetHierarchyFromPathAsync(SuperOffice.WebApi.Data.Domain,System.String,System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: GetHierarchyFromPathAsync(SuperOffice.WebApi.Data.Domain,System.String,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetHierarchyFromPathAsync(Domain, String, Boolean, RequestOptions)
  nameWithType: ListAgent.GetHierarchyFromPathAsync(Domain, String, Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetHierarchyFromPathAsync(SuperOffice.WebApi.Data.Domain, System.String, System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet a hierarchy item from a path\n"
  syntax:
    content: public Task<HierarchyEntity> GetHierarchyFromPathAsync(Domain domain, string path, bool children, RequestOptions requestOptions = null)
    parameters:
    - id: domain
      type: SuperOffice.WebApi.Data.Domain
      description: Type of items to get
    - id: path
      type: System.String
      description: Hierarchy path to item
    - id: children
      type: System.Boolean
      description: Include sub-items?
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.HierarchyEntity}
      description: The hierarchy node at the path
    content.vb: Public Function GetHierarchyFromPathAsync(domain As Domain, path As String, children As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of HierarchyEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetHierarchyFromPathAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.AddHierarchyToPathAsync(SuperOffice.WebApi.Data.Domain,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.AddHierarchyToPathAsync(SuperOffice.WebApi.Data.Domain,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  id: AddHierarchyToPathAsync(SuperOffice.WebApi.Data.Domain,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: AddHierarchyToPathAsync(Domain, String, String, RequestOptions)
  nameWithType: ListAgent.AddHierarchyToPathAsync(Domain, String, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.AddHierarchyToPathAsync(SuperOffice.WebApi.Data.Domain, System.String, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nAdd a hierarchy item to a path\n"
  syntax:
    content: public Task<HierarchyEntity> AddHierarchyToPathAsync(Domain domain, string path, string name, RequestOptions requestOptions = null)
    parameters:
    - id: domain
      type: SuperOffice.WebApi.Data.Domain
      description: Type of items to get
    - id: path
      type: System.String
      description: Hierarchy path to parent item
    - id: name
      type: System.String
      description: Name of node to add
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.HierarchyEntity}
      description: The hierarchy node added to the path
    content.vb: Public Function AddHierarchyToPathAsync(domain As Domain, path As String, name As String, requestOptions As RequestOptions = Nothing) As Task(Of HierarchyEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.AddHierarchyToPathAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.UpdateHierarchyFromPathAsync(SuperOffice.WebApi.Data.Domain,System.String,SuperOffice.WebApi.Data.HierarchyEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.UpdateHierarchyFromPathAsync(SuperOffice.WebApi.Data.Domain,System.String,SuperOffice.WebApi.Data.HierarchyEntity,SuperOffice.WebApi.RequestOptions)
  id: UpdateHierarchyFromPathAsync(SuperOffice.WebApi.Data.Domain,System.String,SuperOffice.WebApi.Data.HierarchyEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: UpdateHierarchyFromPathAsync(Domain, String, HierarchyEntity, RequestOptions)
  nameWithType: ListAgent.UpdateHierarchyFromPathAsync(Domain, String, HierarchyEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.UpdateHierarchyFromPathAsync(SuperOffice.WebApi.Data.Domain, System.String, SuperOffice.WebApi.Data.HierarchyEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdate a hierarchy item from a path\n"
  syntax:
    content: public Task<HierarchyEntity> UpdateHierarchyFromPathAsync(Domain domain, string path, HierarchyEntity entity, RequestOptions requestOptions = null)
    parameters:
    - id: domain
      type: SuperOffice.WebApi.Data.Domain
      description: Type of items to get
    - id: path
      type: System.String
      description: Hierarchy path to item
    - id: entity
      type: SuperOffice.WebApi.Data.HierarchyEntity
      description: The hierarchy node to update.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.HierarchyEntity}
      description: The hierarchy node updated to the path
    content.vb: Public Function UpdateHierarchyFromPathAsync(domain As Domain, path As String, entity As HierarchyEntity, requestOptions As RequestOptions = Nothing) As Task(Of HierarchyEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.UpdateHierarchyFromPathAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.DeleteHierarchyFromPathAsync(SuperOffice.WebApi.Data.Domain,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.DeleteHierarchyFromPathAsync(SuperOffice.WebApi.Data.Domain,System.String,SuperOffice.WebApi.RequestOptions)
  id: DeleteHierarchyFromPathAsync(SuperOffice.WebApi.Data.Domain,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: DeleteHierarchyFromPathAsync(Domain, String, RequestOptions)
  nameWithType: ListAgent.DeleteHierarchyFromPathAsync(Domain, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.DeleteHierarchyFromPathAsync(SuperOffice.WebApi.Data.Domain, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nRemove a hierarchy item and its children from a path\n"
  syntax:
    content: public Task DeleteHierarchyFromPathAsync(Domain domain, string path, RequestOptions requestOptions = null)
    parameters:
    - id: domain
      type: SuperOffice.WebApi.Data.Domain
      description: Type of items to get
    - id: path
      type: System.String
      description: Hierarchy path to item to delete
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Public Function DeleteHierarchyFromPathAsync(domain As Domain, path As String, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.ListAgent.DeleteHierarchyFromPathAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetMrMrsAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetMrMrsAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetMrMrsAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetMrMrsAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetMrMrsAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetMrMrsAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific MrMrs object.                        \n"
  syntax:
    content: public Task<MrMrs> GetMrMrsAsync(int mrMrsId, RequestOptions requestOptions = null)
    parameters:
    - id: mrMrsId
      type: System.Int32
      description: The identifier of the MrMrs object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.MrMrs}
      description: MrMrs
    content.vb: Public Function GetMrMrsAsync(mrMrsId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of MrMrs)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetMrMrsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetMrMrsListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetMrMrsListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetMrMrsListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetMrMrsListAsync(Int32[], RequestOptions)
  nameWithType: ListAgent.GetMrMrsListAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetMrMrsListAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets an array of specific MrMrs objects.                        \n"
  syntax:
    content: public Task<MrMrs[]> GetMrMrsListAsync(int[] mrMrsIds, RequestOptions requestOptions = null)
    parameters:
    - id: mrMrsIds
      type: System.Int32[]
      description: The identifiers of the MrMrs object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.MrMrs[]}
      description: Array of MrMrs objects
    content.vb: Public Function GetMrMrsListAsync(mrMrsIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of MrMrs())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetMrMrsListAsync*
  nameWithType.vb: ListAgent.GetMrMrsListAsync(Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.GetMrMrsListAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetMrMrsListAsync(Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.GetMrMrsesAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetMrMrsesAsync(SuperOffice.WebApi.RequestOptions)
  id: GetMrMrsesAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetMrMrsesAsync(RequestOptions)
  nameWithType: ListAgent.GetMrMrsesAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetMrMrsesAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns all Items from the MrMrs table sorted by their value.\n"
  syntax:
    content: public Task<MrMrs[]> GetMrMrsesAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.MrMrs[]}
      description: All items from the MrMrs table sorted by their value
    content.vb: Public Function GetMrMrsesAsync(requestOptions As RequestOptions = Nothing) As Task(Of MrMrs())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetMrMrsesAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetPositionAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetPositionAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetPositionAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetPositionAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetPositionAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetPositionAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific Position object.                        \n"
  syntax:
    content: public Task<Position> GetPositionAsync(int positionId, RequestOptions requestOptions = null)
    parameters:
    - id: positionId
      type: System.Int32
      description: The identifier of the Position object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Position}
      description: Position
    content.vb: Public Function GetPositionAsync(positionId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Position)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetPositionAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetPositionListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetPositionListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetPositionListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetPositionListAsync(Int32[], RequestOptions)
  nameWithType: ListAgent.GetPositionListAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetPositionListAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets an array of specific Position objects.                        \n"
  syntax:
    content: public Task<Position[]> GetPositionListAsync(int[] positionIds, RequestOptions requestOptions = null)
    parameters:
    - id: positionIds
      type: System.Int32[]
      description: The identifiers of the Position object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Position[]}
      description: Array of Position objects
    content.vb: Public Function GetPositionListAsync(positionIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of Position())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetPositionListAsync*
  nameWithType.vb: ListAgent.GetPositionListAsync(Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.GetPositionListAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetPositionListAsync(Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.GetPositionsAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetPositionsAsync(SuperOffice.WebApi.RequestOptions)
  id: GetPositionsAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetPositionsAsync(RequestOptions)
  nameWithType: ListAgent.GetPositionsAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetPositionsAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns all the positions a person could have.\n"
  syntax:
    content: public Task<Position[]> GetPositionsAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Position[]}
      description: An array of all available positions
    content.vb: Public Function GetPositionsAsync(requestOptions As RequestOptions = Nothing) As Task(Of Position())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetPositionsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetPriorityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetPriorityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetPriorityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetPriorityAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetPriorityAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetPriorityAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific Priority object.                        \n"
  syntax:
    content: public Task<Priority> GetPriorityAsync(int priorityId, RequestOptions requestOptions = null)
    parameters:
    - id: priorityId
      type: System.Int32
      description: The identifier of the Priority object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Priority}
      description: Priority
    content.vb: Public Function GetPriorityAsync(priorityId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Priority)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetPriorityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetPriorityListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetPriorityListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetPriorityListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetPriorityListAsync(Int32[], RequestOptions)
  nameWithType: ListAgent.GetPriorityListAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetPriorityListAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets an array of specific Priority objects.                        \n"
  syntax:
    content: public Task<Priority[]> GetPriorityListAsync(int[] priorityIds, RequestOptions requestOptions = null)
    parameters:
    - id: priorityIds
      type: System.Int32[]
      description: The identifiers of the Priority object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Priority[]}
      description: Array of Priority objects
    content.vb: Public Function GetPriorityListAsync(priorityIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of Priority())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetPriorityListAsync*
  nameWithType.vb: ListAgent.GetPriorityListAsync(Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.GetPriorityListAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetPriorityListAsync(Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.GetPrioritiesAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetPrioritiesAsync(SuperOffice.WebApi.RequestOptions)
  id: GetPrioritiesAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetPrioritiesAsync(RequestOptions)
  nameWithType: ListAgent.GetPrioritiesAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetPrioritiesAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns all priorities an appointment could have.\n"
  syntax:
    content: public Task<Priority[]> GetPrioritiesAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Priority[]}
      description: An array of all available priorities
    content.vb: Public Function GetPrioritiesAsync(requestOptions As RequestOptions = Nothing) As Task(Of Priority())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetPrioritiesAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetProductCategoryAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetProductCategoryAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetProductCategoryAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetProductCategoryAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetProductCategoryAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetProductCategoryAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific ProductCategory object.                        \n"
  syntax:
    content: public Task<ProductCategory> GetProductCategoryAsync(int productCategoryId, RequestOptions requestOptions = null)
    parameters:
    - id: productCategoryId
      type: System.Int32
      description: The identifier of the ProductCategory object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ProductCategory}
      description: ProductCategory
    content.vb: Public Function GetProductCategoryAsync(productCategoryId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of ProductCategory)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetProductCategoryAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetProductCategoriesAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetProductCategoriesAsync(SuperOffice.WebApi.RequestOptions)
  id: GetProductCategoriesAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetProductCategoriesAsync(RequestOptions)
  nameWithType: ListAgent.GetProductCategoriesAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetProductCategoriesAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns all ProductCategories in SuperOffice list.\n"
  syntax:
    content: public Task<ProductCategory[]> GetProductCategoriesAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ProductCategory[]}
      description: An array of all available ProductCategory
    content.vb: Public Function GetProductCategoriesAsync(requestOptions As RequestOptions = Nothing) As Task(Of ProductCategory())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetProductCategoriesAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetProductFamilyAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetProductFamilyAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetProductFamilyAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetProductFamilyAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetProductFamilyAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetProductFamilyAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific ProductFamily object.                        \n"
  syntax:
    content: public Task<ProductFamily> GetProductFamilyAsync(int productFamilyId, RequestOptions requestOptions = null)
    parameters:
    - id: productFamilyId
      type: System.Int32
      description: The identifier of the ProductFamily object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ProductFamily}
      description: ProductFamily
    content.vb: Public Function GetProductFamilyAsync(productFamilyId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of ProductFamily)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetProductFamilyAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetProductFamiliesAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetProductFamiliesAsync(SuperOffice.WebApi.RequestOptions)
  id: GetProductFamiliesAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetProductFamiliesAsync(RequestOptions)
  nameWithType: ListAgent.GetProductFamiliesAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetProductFamiliesAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns all ProductFamily in SuperOffice list.\n"
  syntax:
    content: public Task<ProductFamily[]> GetProductFamiliesAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ProductFamily[]}
      description: An array of all available ProductFamilies
    content.vb: Public Function GetProductFamiliesAsync(requestOptions As RequestOptions = Nothing) As Task(Of ProductFamily())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetProductFamiliesAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetProductTypeAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetProductTypeAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetProductTypeAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetProductTypeAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetProductTypeAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetProductTypeAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific ProductType object.                        \n"
  syntax:
    content: public Task<ProductType> GetProductTypeAsync(int productTypeId, RequestOptions requestOptions = null)
    parameters:
    - id: productTypeId
      type: System.Int32
      description: The identifier of the ProductType object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ProductType}
      description: ProductType
    content.vb: Public Function GetProductTypeAsync(productTypeId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of ProductType)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetProductTypeAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetProductTypesAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetProductTypesAsync(SuperOffice.WebApi.RequestOptions)
  id: GetProductTypesAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetProductTypesAsync(RequestOptions)
  nameWithType: ListAgent.GetProductTypesAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetProductTypesAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns all ProductTypes in SuperOffice list.\n"
  syntax:
    content: public Task<ProductType[]> GetProductTypesAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ProductType[]}
      description: An array of all available ProductTypes
    content.vb: Public Function GetProductTypesAsync(requestOptions As RequestOptions = Nothing) As Task(Of ProductType())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetProductTypesAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetProjectStatusAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetProjectStatusAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetProjectStatusAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetProjectStatusAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetProjectStatusAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetProjectStatusAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific ProjectStatus object.                        \n"
  syntax:
    content: public Task<ProjectStatus> GetProjectStatusAsync(int projectStatusId, RequestOptions requestOptions = null)
    parameters:
    - id: projectStatusId
      type: System.Int32
      description: The identifier of the ProjectStatus object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ProjectStatus}
      description: ProjectStatus
    content.vb: Public Function GetProjectStatusAsync(projectStatusId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of ProjectStatus)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetProjectStatusAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.DeleteProjectStatusAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.DeleteProjectStatusAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: DeleteProjectStatusAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: DeleteProjectStatusAsync(Int32, RequestOptions)
  nameWithType: ListAgent.DeleteProjectStatusAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.DeleteProjectStatusAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nDeletes a project status\n"
  syntax:
    content: public Task DeleteProjectStatusAsync(int projectStatusId, RequestOptions requestOptions = null)
    parameters:
    - id: projectStatusId
      type: System.Int32
      description: The project status id to delete
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
      description: No return
    content.vb: Public Function DeleteProjectStatusAsync(projectStatusId As Integer, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.ListAgent.DeleteProjectStatusAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetProjectStatusListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetProjectStatusListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetProjectStatusListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetProjectStatusListAsync(Int32[], RequestOptions)
  nameWithType: ListAgent.GetProjectStatusListAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetProjectStatusListAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets an array of specific ProjectStatus objects.                        \n"
  syntax:
    content: public Task<ProjectStatus[]> GetProjectStatusListAsync(int[] projectStatusIds, RequestOptions requestOptions = null)
    parameters:
    - id: projectStatusIds
      type: System.Int32[]
      description: The identifiers of the ProjectStatus object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ProjectStatus[]}
      description: Array of ProjectStatus objects
    content.vb: Public Function GetProjectStatusListAsync(projectStatusIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of ProjectStatus())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetProjectStatusListAsync*
  nameWithType.vb: ListAgent.GetProjectStatusListAsync(Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.GetProjectStatusListAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetProjectStatusListAsync(Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.GetProjectStatusesAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetProjectStatusesAsync(SuperOffice.WebApi.RequestOptions)
  id: GetProjectStatusesAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetProjectStatusesAsync(RequestOptions)
  nameWithType: ListAgent.GetProjectStatusesAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetProjectStatusesAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets all items from the Project Status (ProjStatus) table.\n"
  syntax:
    content: public Task<ProjectStatus[]> GetProjectStatusesAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ProjectStatus[]}
      description: List of all Project statuses.
    content.vb: Public Function GetProjectStatusesAsync(requestOptions As RequestOptions = Nothing) As Task(Of ProjectStatus())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetProjectStatusesAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetProjectTypeAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetProjectTypeAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetProjectTypeAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetProjectTypeAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetProjectTypeAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetProjectTypeAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific ProjectType object.                        \n"
  syntax:
    content: public Task<ProjectType> GetProjectTypeAsync(int projectTypeId, RequestOptions requestOptions = null)
    parameters:
    - id: projectTypeId
      type: System.Int32
      description: The identifier of the ProjectType object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ProjectType}
      description: ProjectType
    content.vb: Public Function GetProjectTypeAsync(projectTypeId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of ProjectType)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetProjectTypeAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetProjectTypeEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetProjectTypeEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetProjectTypeEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetProjectTypeEntityAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetProjectTypeEntityAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetProjectTypeEntityAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific ProjectTypeEntity object.                        \n"
  syntax:
    content: public Task<ProjectTypeEntity> GetProjectTypeEntityAsync(int projectTypeEntityId, RequestOptions requestOptions = null)
    parameters:
    - id: projectTypeEntityId
      type: System.Int32
      description: The identifier of the ProjectTypeEntity object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ProjectTypeEntity}
      description: ProjectTypeEntity
    content.vb: Public Function GetProjectTypeEntityAsync(projectTypeEntityId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of ProjectTypeEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetProjectTypeEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetProjectTypeListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetProjectTypeListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetProjectTypeListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetProjectTypeListAsync(Int32[], RequestOptions)
  nameWithType: ListAgent.GetProjectTypeListAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetProjectTypeListAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets an array of specific ProjectType objects.                        \n"
  syntax:
    content: public Task<ProjectType[]> GetProjectTypeListAsync(int[] projectTypeIds, RequestOptions requestOptions = null)
    parameters:
    - id: projectTypeIds
      type: System.Int32[]
      description: The identifiers of the ProjectType object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ProjectType[]}
      description: Array of ProjectType objects
    content.vb: Public Function GetProjectTypeListAsync(projectTypeIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of ProjectType())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetProjectTypeListAsync*
  nameWithType.vb: ListAgent.GetProjectTypeListAsync(Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.GetProjectTypeListAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetProjectTypeListAsync(Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.GetProjectTypesAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetProjectTypesAsync(SuperOffice.WebApi.RequestOptions)
  id: GetProjectTypesAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetProjectTypesAsync(RequestOptions)
  nameWithType: ListAgent.GetProjectTypesAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetProjectTypesAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets all items from the Project Type (ProjType) table.\n"
  syntax:
    content: public Task<ProjectType[]> GetProjectTypesAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ProjectType[]}
      description: List of all project types.
    content.vb: Public Function GetProjectTypesAsync(requestOptions As RequestOptions = Nothing) As Task(Of ProjectType())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetProjectTypesAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetRatingAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetRatingAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetRatingAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetRatingAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetRatingAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetRatingAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific Rating object.                        \n"
  syntax:
    content: public Task<Rating> GetRatingAsync(int ratingId, RequestOptions requestOptions = null)
    parameters:
    - id: ratingId
      type: System.Int32
      description: The identifier of the Rating object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Rating}
      description: Rating
    content.vb: Public Function GetRatingAsync(ratingId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Rating)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetRatingAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetRatingListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetRatingListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetRatingListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetRatingListAsync(Int32[], RequestOptions)
  nameWithType: ListAgent.GetRatingListAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetRatingListAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets an array of specific Rating objects.                        \n"
  syntax:
    content: public Task<Rating[]> GetRatingListAsync(int[] ratingIds, RequestOptions requestOptions = null)
    parameters:
    - id: ratingIds
      type: System.Int32[]
      description: The identifiers of the Rating object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Rating[]}
      description: Array of Rating objects
    content.vb: Public Function GetRatingListAsync(ratingIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of Rating())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetRatingListAsync*
  nameWithType.vb: ListAgent.GetRatingListAsync(Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.GetRatingListAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetRatingListAsync(Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.GetRatingsAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetRatingsAsync(SuperOffice.WebApi.RequestOptions)
  id: GetRatingsAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetRatingsAsync(RequestOptions)
  nameWithType: ListAgent.GetRatingsAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetRatingsAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns all ratings\n"
  syntax:
    content: public Task<Rating[]> GetRatingsAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Rating[]}
      description: Array of ratings
    content.vb: Public Function GetRatingsAsync(requestOptions As RequestOptions = Nothing) As Task(Of Rating())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetRatingsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetAllSaleStagesAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetAllSaleStagesAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: GetAllSaleStagesAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetAllSaleStagesAsync(Boolean, RequestOptions)
  nameWithType: ListAgent.GetAllSaleStagesAsync(Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetAllSaleStagesAsync(System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns all ratings\n"
  syntax:
    content: public Task<SaleStageEntity[]> GetAllSaleStagesAsync(bool includeDeleted, RequestOptions requestOptions = null)
    parameters:
    - id: includeDeleted
      type: System.Boolean
      description: Include deleted items in result?
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SaleStageEntity[]}
      description: Array of sale stage ratings
    content.vb: Public Function GetAllSaleStagesAsync(includeDeleted As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of SaleStageEntity())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetAllSaleStagesAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetReasonAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetReasonAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetReasonAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetReasonAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetReasonAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetReasonAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific Reason object.                        \n"
  syntax:
    content: public Task<Reason> GetReasonAsync(int reasonId, RequestOptions requestOptions = null)
    parameters:
    - id: reasonId
      type: System.Int32
      description: The identifier of the Reason object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Reason}
      description: Reason
    content.vb: Public Function GetReasonAsync(reasonId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Reason)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetReasonAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetReasonListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetReasonListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetReasonListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetReasonListAsync(Int32[], RequestOptions)
  nameWithType: ListAgent.GetReasonListAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetReasonListAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets an array of specific Reason objects.                        \n"
  syntax:
    content: public Task<Reason[]> GetReasonListAsync(int[] reasonIds, RequestOptions requestOptions = null)
    parameters:
    - id: reasonIds
      type: System.Int32[]
      description: The identifiers of the Reason object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Reason[]}
      description: Array of Reason objects
    content.vb: Public Function GetReasonListAsync(reasonIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of Reason())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetReasonListAsync*
  nameWithType.vb: ListAgent.GetReasonListAsync(Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.GetReasonListAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetReasonListAsync(Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.GetReasonsAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetReasonsAsync(SuperOffice.WebApi.RequestOptions)
  id: GetReasonsAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetReasonsAsync(RequestOptions)
  nameWithType: ListAgent.GetReasonsAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetReasonsAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns all reasons\n"
  syntax:
    content: public Task<Reason[]> GetReasonsAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Reason[]}
      description: Array of reasons
    content.vb: Public Function GetReasonsAsync(requestOptions As RequestOptions = Nothing) As Task(Of Reason())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetReasonsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetReasonSoldAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetReasonSoldAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetReasonSoldAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetReasonSoldAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetReasonSoldAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetReasonSoldAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific ReasonSold object.                        \n"
  syntax:
    content: public Task<ReasonSold> GetReasonSoldAsync(int reasonSoldId, RequestOptions requestOptions = null)
    parameters:
    - id: reasonSoldId
      type: System.Int32
      description: The identifier of the ReasonSold object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ReasonSold}
      description: ReasonSold
    content.vb: Public Function GetReasonSoldAsync(reasonSoldId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of ReasonSold)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetReasonSoldAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetAllReasonSoldAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetAllReasonSoldAsync(SuperOffice.WebApi.RequestOptions)
  id: GetAllReasonSoldAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetAllReasonSoldAsync(RequestOptions)
  nameWithType: ListAgent.GetAllReasonSoldAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetAllReasonSoldAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets array of all ReasonSold objects. \n"
  syntax:
    content: public Task<ReasonSold[]> GetAllReasonSoldAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ReasonSold[]}
      description: Array of all ReasonSold objects
    content.vb: Public Function GetAllReasonSoldAsync(requestOptions As RequestOptions = Nothing) As Task(Of ReasonSold())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetAllReasonSoldAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetReasonSoldListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetReasonSoldListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetReasonSoldListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetReasonSoldListAsync(Int32[], RequestOptions)
  nameWithType: ListAgent.GetReasonSoldListAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetReasonSoldListAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets an array of specific ReasonSold objects.                        \n"
  syntax:
    content: public Task<ReasonSold[]> GetReasonSoldListAsync(int[] reasonSoldIds, RequestOptions requestOptions = null)
    parameters:
    - id: reasonSoldIds
      type: System.Int32[]
      description: The identifiers of the ReasonSold object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ReasonSold[]}
      description: Array of ReasonSold objects
    content.vb: Public Function GetReasonSoldListAsync(reasonSoldIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of ReasonSold())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetReasonSoldListAsync*
  nameWithType.vb: ListAgent.GetReasonSoldListAsync(Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.GetReasonSoldListAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetReasonSoldListAsync(Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.GetReasonStalledAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetReasonStalledAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetReasonStalledAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetReasonStalledAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetReasonStalledAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetReasonStalledAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific ReasonStalled object.                        \n"
  syntax:
    content: public Task<ReasonStalled> GetReasonStalledAsync(int reasonStalledId, RequestOptions requestOptions = null)
    parameters:
    - id: reasonStalledId
      type: System.Int32
      description: The identifier of the ReasonStalled object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ReasonStalled}
      description: ReasonStalled
    content.vb: Public Function GetReasonStalledAsync(reasonStalledId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of ReasonStalled)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetReasonStalledAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetAllReasonStalledAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetAllReasonStalledAsync(SuperOffice.WebApi.RequestOptions)
  id: GetAllReasonStalledAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetAllReasonStalledAsync(RequestOptions)
  nameWithType: ListAgent.GetAllReasonStalledAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetAllReasonStalledAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets array of all ReasonStalled objects. \n"
  syntax:
    content: public Task<ReasonStalled[]> GetAllReasonStalledAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ReasonStalled[]}
      description: Array of all ReasonStalled objects
    content.vb: Public Function GetAllReasonStalledAsync(requestOptions As RequestOptions = Nothing) As Task(Of ReasonStalled())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetAllReasonStalledAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetReasonStalledListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetReasonStalledListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetReasonStalledListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetReasonStalledListAsync(Int32[], RequestOptions)
  nameWithType: ListAgent.GetReasonStalledListAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetReasonStalledListAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets an array of specific ReasonStalled objects.                        \n"
  syntax:
    content: public Task<ReasonStalled[]> GetReasonStalledListAsync(int[] reasonStalledIds, RequestOptions requestOptions = null)
    parameters:
    - id: reasonStalledIds
      type: System.Int32[]
      description: The identifiers of the ReasonStalled object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ReasonStalled[]}
      description: Array of ReasonStalled objects
    content.vb: Public Function GetReasonStalledListAsync(reasonStalledIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of ReasonStalled())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetReasonStalledListAsync*
  nameWithType.vb: ListAgent.GetReasonStalledListAsync(Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.GetReasonStalledListAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetReasonStalledListAsync(Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.GetResourceEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetResourceEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetResourceEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetResourceEntityAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetResourceEntityAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetResourceEntityAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific ResourceEntity object.                        \n"
  syntax:
    content: public Task<ResourceEntity> GetResourceEntityAsync(int resourceEntityId, RequestOptions requestOptions = null)
    parameters:
    - id: resourceEntityId
      type: System.Int32
      description: The identifier of the ResourceEntity object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ResourceEntity}
      description: ResourceEntity
    content.vb: Public Function GetResourceEntityAsync(resourceEntityId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of ResourceEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetResourceEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetSaleStageEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetSaleStageEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetSaleStageEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetSaleStageEntityAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetSaleStageEntityAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetSaleStageEntityAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific SaleStageEntity object.                        \n"
  syntax:
    content: public Task<SaleStageEntity> GetSaleStageEntityAsync(int saleStageEntityId, RequestOptions requestOptions = null)
    parameters:
    - id: saleStageEntityId
      type: System.Int32
      description: The identifier of the SaleStageEntity object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SaleStageEntity}
      description: SaleStageEntity
    content.vb: Public Function GetSaleStageEntityAsync(saleStageEntityId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of SaleStageEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetSaleStageEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetSaleTypeAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetSaleTypeAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetSaleTypeAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetSaleTypeAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetSaleTypeAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetSaleTypeAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific SaleType object.                        \n"
  syntax:
    content: public Task<SaleType> GetSaleTypeAsync(int saleTypeId, RequestOptions requestOptions = null)
    parameters:
    - id: saleTypeId
      type: System.Int32
      description: The identifier of the SaleType object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SaleType}
      description: SaleType
    content.vb: Public Function GetSaleTypeAsync(saleTypeId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of SaleType)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetSaleTypeAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetSaleTypeEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetSaleTypeEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetSaleTypeEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetSaleTypeEntityAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetSaleTypeEntityAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetSaleTypeEntityAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific SaleTypeEntity object.                        \n"
  syntax:
    content: public Task<SaleTypeEntity> GetSaleTypeEntityAsync(int saleTypeEntityId, RequestOptions requestOptions = null)
    parameters:
    - id: saleTypeEntityId
      type: System.Int32
      description: The identifier of the SaleTypeEntity object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SaleTypeEntity}
      description: SaleTypeEntity
    content.vb: Public Function GetSaleTypeEntityAsync(saleTypeEntityId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of SaleTypeEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetSaleTypeEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetSaleTypeListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetSaleTypeListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetSaleTypeListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetSaleTypeListAsync(Int32[], RequestOptions)
  nameWithType: ListAgent.GetSaleTypeListAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetSaleTypeListAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets an array of specific SaleType objects.                        \n"
  syntax:
    content: public Task<SaleType[]> GetSaleTypeListAsync(int[] saleTypeIds, RequestOptions requestOptions = null)
    parameters:
    - id: saleTypeIds
      type: System.Int32[]
      description: The identifiers of the SaleType object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SaleType[]}
      description: Array of SaleType objects
    content.vb: Public Function GetSaleTypeListAsync(saleTypeIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of SaleType())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetSaleTypeListAsync*
  nameWithType.vb: ListAgent.GetSaleTypeListAsync(Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.GetSaleTypeListAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetSaleTypeListAsync(Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.GetAllSaleTypeAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetAllSaleTypeAsync(SuperOffice.WebApi.RequestOptions)
  id: GetAllSaleTypeAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetAllSaleTypeAsync(RequestOptions)
  nameWithType: ListAgent.GetAllSaleTypeAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetAllSaleTypeAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns all sale types as simple list items\n"
  syntax:
    content: public Task<SaleType[]> GetAllSaleTypeAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SaleType[]}
      description: Array of simple sale type list items
    content.vb: Public Function GetAllSaleTypeAsync(requestOptions As RequestOptions = Nothing) As Task(Of SaleType())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetAllSaleTypeAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetAllSaleTypeEntitiesAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetAllSaleTypeEntitiesAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: GetAllSaleTypeEntitiesAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetAllSaleTypeEntitiesAsync(Boolean, RequestOptions)
  nameWithType: ListAgent.GetAllSaleTypeEntitiesAsync(Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetAllSaleTypeEntitiesAsync(System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns all sale types as entities with stakeholders, guide and quote properties\n"
  syntax:
    content: public Task<SaleTypeEntity[]> GetAllSaleTypeEntitiesAsync(bool includeDeleted, RequestOptions requestOptions = null)
    parameters:
    - id: includeDeleted
      type: System.Boolean
      description: Include deleted items in result?
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SaleTypeEntity[]}
      description: Array of sale type entities with stakeholders, guide and quote properties
    content.vb: Public Function GetAllSaleTypeEntitiesAsync(includeDeleted As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of SaleTypeEntity())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetAllSaleTypeEntitiesAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetSelectionCategoryAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetSelectionCategoryAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetSelectionCategoryAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetSelectionCategoryAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetSelectionCategoryAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetSelectionCategoryAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific SelectionCategory object.                        \n"
  syntax:
    content: public Task<SelectionCategory> GetSelectionCategoryAsync(int selectionCategoryId, RequestOptions requestOptions = null)
    parameters:
    - id: selectionCategoryId
      type: System.Int32
      description: The identifier of the SelectionCategory object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SelectionCategory}
      description: SelectionCategory
    content.vb: Public Function GetSelectionCategoryAsync(selectionCategoryId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of SelectionCategory)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetSelectionCategoryAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetAllSelectionCategoryAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetAllSelectionCategoryAsync(SuperOffice.WebApi.RequestOptions)
  id: GetAllSelectionCategoryAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetAllSelectionCategoryAsync(RequestOptions)
  nameWithType: ListAgent.GetAllSelectionCategoryAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetAllSelectionCategoryAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets array of all SelectionCategory objects. \n"
  syntax:
    content: public Task<SelectionCategory[]> GetAllSelectionCategoryAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SelectionCategory[]}
      description: Array of all SelectionCategory objects
    content.vb: Public Function GetAllSelectionCategoryAsync(requestOptions As RequestOptions = Nothing) As Task(Of SelectionCategory())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetAllSelectionCategoryAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetSelectionCategoryListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetSelectionCategoryListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetSelectionCategoryListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetSelectionCategoryListAsync(Int32[], RequestOptions)
  nameWithType: ListAgent.GetSelectionCategoryListAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetSelectionCategoryListAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets an array of specific SelectionCategory objects.                        \n"
  syntax:
    content: public Task<SelectionCategory[]> GetSelectionCategoryListAsync(int[] selectionCategoryIds, RequestOptions requestOptions = null)
    parameters:
    - id: selectionCategoryIds
      type: System.Int32[]
      description: The identifiers of the SelectionCategory object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SelectionCategory[]}
      description: Array of SelectionCategory objects
    content.vb: Public Function GetSelectionCategoryListAsync(selectionCategoryIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of SelectionCategory())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetSelectionCategoryListAsync*
  nameWithType.vb: ListAgent.GetSelectionCategoryListAsync(Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.GetSelectionCategoryListAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetSelectionCategoryListAsync(Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.GetSourceAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetSourceAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetSourceAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetSourceAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetSourceAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetSourceAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific Source object.                        \n"
  syntax:
    content: public Task<Source> GetSourceAsync(int sourceId, RequestOptions requestOptions = null)
    parameters:
    - id: sourceId
      type: System.Int32
      description: The identifier of the Source object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Source}
      description: Source
    content.vb: Public Function GetSourceAsync(sourceId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Source)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetSourceAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetSourceListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetSourceListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetSourceListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetSourceListAsync(Int32[], RequestOptions)
  nameWithType: ListAgent.GetSourceListAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetSourceListAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets an array of specific Source objects.                        \n"
  syntax:
    content: public Task<Source[]> GetSourceListAsync(int[] sourceIds, RequestOptions requestOptions = null)
    parameters:
    - id: sourceIds
      type: System.Int32[]
      description: The identifiers of the Source object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Source[]}
      description: Array of Source objects
    content.vb: Public Function GetSourceListAsync(sourceIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of Source())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetSourceListAsync*
  nameWithType.vb: ListAgent.GetSourceListAsync(Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.GetSourceListAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetSourceListAsync(Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.GetSourcesAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetSourcesAsync(SuperOffice.WebApi.RequestOptions)
  id: GetSourcesAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetSourcesAsync(RequestOptions)
  nameWithType: ListAgent.GetSourcesAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetSourcesAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns all sources\n"
  syntax:
    content: public Task<Source[]> GetSourcesAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Source[]}
      description: Array of sources
    content.vb: Public Function GetSourcesAsync(requestOptions As RequestOptions = Nothing) As Task(Of Source())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetSourcesAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetTaskAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetTaskAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetTaskAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetTaskAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetTaskAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetTaskAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific Task object.                        \n"
  syntax:
    content: public Task<Task> GetTaskAsync(int taskId, RequestOptions requestOptions = null)
    parameters:
    - id: taskId
      type: System.Int32
      description: The identifier of the Task object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Task}
      description: Task
    content.vb: Public Function GetTaskAsync(taskId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Task)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetTaskAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateTaskAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateTaskAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetDocumentTemplateTaskAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetDocumentTemplateTaskAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetDocumentTemplateTaskAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateTaskAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns a Document Template list item as a TaskListItem. The appointment&apos;s task is a Document template item when the appointment is a document.\n"
  syntax:
    content: public Task<Task> GetDocumentTemplateTaskAsync(int documentTemplateId, RequestOptions requestOptions = null)
    parameters:
    - id: documentTemplateId
      type: System.Int32
      description: Id of the document template, i.e. the Appointment.TaskIdx
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Task}
      description: Document Template item as TaskListItem.
    content.vb: Public Function GetDocumentTemplateTaskAsync(documentTemplateId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Task)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateTaskAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetTaskListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetTaskListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetTaskListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetTaskListAsync(Int32[], RequestOptions)
  nameWithType: ListAgent.GetTaskListAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetTaskListAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets an array of specific Task objects.                        \n"
  syntax:
    content: public Task<Task[]> GetTaskListAsync(int[] taskIds, RequestOptions requestOptions = null)
    parameters:
    - id: taskIds
      type: System.Int32[]
      description: The identifiers of the Task object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Task[]}
      description: Array of Task objects
    content.vb: Public Function GetTaskListAsync(taskIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of Task())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetTaskListAsync*
  nameWithType.vb: ListAgent.GetTaskListAsync(Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.GetTaskListAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetTaskListAsync(Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.GetTasksAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetTasksAsync(SuperOffice.WebApi.RequestOptions)
  id: GetTasksAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetTasksAsync(RequestOptions)
  nameWithType: ListAgent.GetTasksAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetTasksAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns all appointment tasks\n"
  syntax:
    content: public Task<Task[]> GetTasksAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Task[]}
      description: An array of all available tasks
    content.vb: Public Function GetTasksAsync(requestOptions As RequestOptions = Nothing) As Task(Of Task())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetTasksAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplatesTasksAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplatesTasksAsync(SuperOffice.WebApi.RequestOptions)
  id: GetDocumentTemplatesTasksAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetDocumentTemplatesTasksAsync(RequestOptions)
  nameWithType: ListAgent.GetDocumentTemplatesTasksAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplatesTasksAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nThe appointment&apos;s task is a Document template item when the appointment is a document.\n"
  syntax:
    content: public Task<Task[]> GetDocumentTemplatesTasksAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Task[]}
      description: Document Template list as a array of Tasks
    content.vb: Public Function GetDocumentTemplatesTasksAsync(requestOptions As RequestOptions = Nothing) As Task(Of Task())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplatesTasksAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetAllTasksAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetAllTasksAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: GetAllTasksAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetAllTasksAsync(Boolean, RequestOptions)
  nameWithType: ListAgent.GetAllTasksAsync(Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetAllTasksAsync(System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns all appointment tasks\n"
  syntax:
    content: public Task<TaskListItem[]> GetAllTasksAsync(bool includeDeleted, RequestOptions requestOptions = null)
    parameters:
    - id: includeDeleted
      type: System.Boolean
      description: Include deleted items in result?
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TaskListItem[]}
      description: An array of all available tasks
    content.vb: Public Function GetAllTasksAsync(includeDeleted As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of TaskListItem())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetAllTasksAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetTicketCategoryAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetTicketCategoryAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetTicketCategoryAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetTicketCategoryAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetTicketCategoryAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetTicketCategoryAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific TicketCategory object.                        \n"
  syntax:
    content: public Task<TicketCategory> GetTicketCategoryAsync(int ticketCategoryId, RequestOptions requestOptions = null)
    parameters:
    - id: ticketCategoryId
      type: System.Int32
      description: The identifier of the TicketCategory object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketCategory}
      description: TicketCategory
    content.vb: Public Function GetTicketCategoryAsync(ticketCategoryId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of TicketCategory)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetTicketCategoryAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetTicketPriorityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetTicketPriorityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetTicketPriorityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetTicketPriorityAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetTicketPriorityAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetTicketPriorityAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific TicketPriority object.                        \n"
  syntax:
    content: public Task<TicketPriority> GetTicketPriorityAsync(int ticketPriorityId, RequestOptions requestOptions = null)
    parameters:
    - id: ticketPriorityId
      type: System.Int32
      description: The identifier of the TicketPriority object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketPriority}
      description: TicketPriority
    content.vb: Public Function GetTicketPriorityAsync(ticketPriorityId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of TicketPriority)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetTicketPriorityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetTicketPriorityListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetTicketPriorityListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetTicketPriorityListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetTicketPriorityListAsync(Int32[], RequestOptions)
  nameWithType: ListAgent.GetTicketPriorityListAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetTicketPriorityListAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets an array of specific TicketPriority objects.                        \n"
  syntax:
    content: public Task<TicketPriority[]> GetTicketPriorityListAsync(int[] ticketPriorityIds, RequestOptions requestOptions = null)
    parameters:
    - id: ticketPriorityIds
      type: System.Int32[]
      description: The identifiers of the TicketPriority object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketPriority[]}
      description: Array of TicketPriority objects
    content.vb: Public Function GetTicketPriorityListAsync(ticketPriorityIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of TicketPriority())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetTicketPriorityListAsync*
  nameWithType.vb: ListAgent.GetTicketPriorityListAsync(Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.GetTicketPriorityListAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetTicketPriorityListAsync(Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.GetTicketPrioritiesAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetTicketPrioritiesAsync(SuperOffice.WebApi.RequestOptions)
  id: GetTicketPrioritiesAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetTicketPrioritiesAsync(RequestOptions)
  nameWithType: ListAgent.GetTicketPrioritiesAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetTicketPrioritiesAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\n\n"
  syntax:
    content: public Task<TicketPriority[]> GetTicketPrioritiesAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketPriority[]}
    content.vb: Public Function GetTicketPrioritiesAsync(requestOptions As RequestOptions = Nothing) As Task(Of TicketPriority())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetTicketPrioritiesAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetAllTicketPrioritiesAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetAllTicketPrioritiesAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: GetAllTicketPrioritiesAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetAllTicketPrioritiesAsync(Boolean, RequestOptions)
  nameWithType: ListAgent.GetAllTicketPrioritiesAsync(Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetAllTicketPrioritiesAsync(System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns all available ticket priorities.\n"
  syntax:
    content: public Task<TicketPriorityEntity[]> GetAllTicketPrioritiesAsync(bool includeDeleted, RequestOptions requestOptions = null)
    parameters:
    - id: includeDeleted
      type: System.Boolean
      description: Include deleted items in result?
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketPriorityEntity[]}
      description: An array of all available ticket priorities
    content.vb: Public Function GetAllTicketPrioritiesAsync(includeDeleted As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of TicketPriorityEntity())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetAllTicketPrioritiesAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetWebPanelEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetWebPanelEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetWebPanelEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetWebPanelEntityAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetWebPanelEntityAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetWebPanelEntityAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific WebPanelEntity object.                        \n"
  syntax:
    content: public Task<WebPanelEntity> GetWebPanelEntityAsync(int webPanelEntityId, RequestOptions requestOptions = null)
    parameters:
    - id: webPanelEntityId
      type: System.Int32
      description: The identifier of the WebPanelEntity object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.WebPanelEntity}
      description: WebPanelEntity
    content.vb: Public Function GetWebPanelEntityAsync(webPanelEntityId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of WebPanelEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetWebPanelEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GenerateNavigationUrlAsync(SuperOffice.WebApi.Data.Navigation,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GenerateNavigationUrlAsync(SuperOffice.WebApi.Data.Navigation,System.String,SuperOffice.WebApi.RequestOptions)
  id: GenerateNavigationUrlAsync(SuperOffice.WebApi.Data.Navigation,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GenerateNavigationUrlAsync(Navigation, String, RequestOptions)
  nameWithType: ListAgent.GenerateNavigationUrlAsync(Navigation, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GenerateNavigationUrlAsync(SuperOffice.WebApi.Data.Navigation, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nThis methods generates the navigation URL to be used to navigate to the panel\n"
  syntax:
    content: public Task<string> GenerateNavigationUrlAsync(Navigation visibleIn, string windowName, RequestOptions requestOptions = null)
    parameters:
    - id: visibleIn
      type: SuperOffice.WebApi.Data.Navigation
      description: The visble in/navigation to generate for
    - id: windowName
      type: System.String
      description: The name of the web panel window
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The navigation url
    content.vb: Public Function GenerateNavigationUrlAsync(visibleIn As Navigation, windowName As String, requestOptions As RequestOptions = Nothing) As Task(Of String)
  overload: SuperOffice.WebApi.Agents.ListAgent.GenerateNavigationUrlAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetWebPanelListAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetWebPanelListAsync(SuperOffice.WebApi.RequestOptions)
  id: GetWebPanelListAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetWebPanelListAsync(RequestOptions)
  nameWithType: ListAgent.GetWebPanelListAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetWebPanelListAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturn a list of all web panels. \n"
  syntax:
    content: public Task<WebPanelEntity[]> GetWebPanelListAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.WebPanelEntity[]}
      description: List of all web panels
    content.vb: Public Function GetWebPanelListAsync(requestOptions As RequestOptions = Nothing) As Task(Of WebPanelEntity())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetWebPanelListAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.DeleteWebPanelAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.DeleteWebPanelAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: DeleteWebPanelAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: DeleteWebPanelAsync(Int32, RequestOptions)
  nameWithType: ListAgent.DeleteWebPanelAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.DeleteWebPanelAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nHard-delete (real, permanent DELETE in the database) the given web panel. Use with care!\n"
  syntax:
    content: public Task DeleteWebPanelAsync(int id, RequestOptions requestOptions = null)
    parameters:
    - id: id
      type: System.Int32
      description: Database id of web panel to delete
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Public Function DeleteWebPanelAsync(id As Integer, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.ListAgent.DeleteWebPanelAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetAppWebPanelsAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetAppWebPanelsAsync(SuperOffice.WebApi.RequestOptions)
  id: GetAppWebPanelsAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetAppWebPanelsAsync(RequestOptions)
  nameWithType: ListAgent.GetAppWebPanelsAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetAppWebPanelsAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet all web panels owned by your app; works in Online only, for registered Apps that send a valid ApplicationToken\n"
  syntax:
    content: public Task<WebPanelEntity[]> GetAppWebPanelsAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.WebPanelEntity[]}
      description: List of all web panels owned by the current App
    content.vb: Public Function GetAppWebPanelsAsync(requestOptions As RequestOptions = Nothing) As Task(Of WebPanelEntity())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetAppWebPanelsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.DeleteAppWebPanelsAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.DeleteAppWebPanelsAsync(SuperOffice.WebApi.RequestOptions)
  id: DeleteAppWebPanelsAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: DeleteAppWebPanelsAsync(RequestOptions)
  nameWithType: ListAgent.DeleteAppWebPanelsAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.DeleteAppWebPanelsAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nPermanentely delete all web panels owned by your app; works in Online only, for registered Apps that send a valid ApplicationToken; otherwise nothing happens\n"
  syntax:
    content: public Task DeleteAppWebPanelsAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Public Function DeleteAppWebPanelsAsync(requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.ListAgent.DeleteAppWebPanelsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetWebPanelByProgIdAsync(System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetWebPanelByProgIdAsync(System.String,SuperOffice.WebApi.RequestOptions)
  id: GetWebPanelByProgIdAsync(System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetWebPanelByProgIdAsync(String, RequestOptions)
  nameWithType: ListAgent.GetWebPanelByProgIdAsync(String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetWebPanelByProgIdAsync(System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet a web panel using the ProgId key that was specified when it was created\n"
  syntax:
    content: public Task<WebPanelEntity> GetWebPanelByProgIdAsync(string progId, RequestOptions requestOptions = null)
    parameters:
    - id: progId
      type: System.String
      description: String key that can be used to uniquely retrieve the panel, set in the WebPanelEntity when saving
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.WebPanelEntity}
      description: The Web panel information
    content.vb: Public Function GetWebPanelByProgIdAsync(progId As String, requestOptions As RequestOptions = Nothing) As Task(Of WebPanelEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetWebPanelByProgIdAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetExtAppEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetExtAppEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetExtAppEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetExtAppEntityAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetExtAppEntityAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetExtAppEntityAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific ExtAppEntity object.                        \n"
  syntax:
    content: public Task<ExtAppEntity> GetExtAppEntityAsync(int extAppEntityId, RequestOptions requestOptions = null)
    parameters:
    - id: extAppEntityId
      type: System.Int32
      description: The identifier of the ExtAppEntity object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ExtAppEntity}
      description: ExtAppEntity
    content.vb: Public Function GetExtAppEntityAsync(extAppEntityId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of ExtAppEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetExtAppEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetDocumentTemplateEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetDocumentTemplateEntityAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetDocumentTemplateEntityAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateEntityAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific DocumentTemplateEntity object.                        \n"
  syntax:
    content: public Task<DocumentTemplateEntity> GetDocumentTemplateEntityAsync(int documentTemplateEntityId, RequestOptions requestOptions = null)
    parameters:
    - id: documentTemplateEntityId
      type: System.Int32
      description: The identifier of the DocumentTemplateEntity object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DocumentTemplateEntity}
      description: DocumentTemplateEntity
    content.vb: Public Function GetDocumentTemplateEntityAsync(documentTemplateEntityId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of DocumentTemplateEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.SetDocumentTemplateStreamAsync(SuperOffice.WebApi.Data.DocumentTemplateEntity,System.Byte[],System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SetDocumentTemplateStreamAsync(SuperOffice.WebApi.Data.DocumentTemplateEntity,System.Byte[],System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: SetDocumentTemplateStreamAsync(SuperOffice.WebApi.Data.DocumentTemplateEntity,System.Byte[],System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SetDocumentTemplateStreamAsync(DocumentTemplateEntity, Byte[], String, Int32, RequestOptions)
  nameWithType: ListAgent.SetDocumentTemplateStreamAsync(DocumentTemplateEntity, Byte[], String, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SetDocumentTemplateStreamAsync(SuperOffice.WebApi.Data.DocumentTemplateEntity, System.Byte[], System.String, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nStore a document template from its stream. Since there is a potential for a name conflict (the file name stored by the document entity earlier may prove to be invalid), the (possibly amended) document entity is returned. The client should not assume that any earlier, cached entity information is valid.\n"
  syntax:
    content: public Task<DocumentTemplateEntity> SetDocumentTemplateStreamAsync(DocumentTemplateEntity documentTemplateEntity, byte[] stream, string languageCode, int pluginId, RequestOptions requestOptions = null)
    parameters:
    - id: documentTemplateEntity
      type: SuperOffice.WebApi.Data.DocumentTemplateEntity
      description: The document entity object that the binary data (document) should be stored to. Its file name may be amended by this call, see the return value
    - id: stream
      type: System.Byte[]
      description: The document as a stream.
    - id: languageCode
      type: System.String
      description: The language code (&apos;en-US&apos;, &apos;nb-NO&apos;, etc). Use empty string if not supported or used.
    - id: pluginId
      type: System.Int32
      description: The plugin id to store the template with. 0 for SOArc
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DocumentTemplateEntity}
      description: Since there is a potential for a name conflict (the file name stored by the document entity earlier may prove to be invalid), the (possibly amended) document entity is returned. The client should not assume that any earlier, cached entity information is valid.
    content.vb: Public Function SetDocumentTemplateStreamAsync(documentTemplateEntity As DocumentTemplateEntity, stream As Byte(), languageCode As String, pluginId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of DocumentTemplateEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.SetDocumentTemplateStreamAsync*
  nameWithType.vb: ListAgent.SetDocumentTemplateStreamAsync(DocumentTemplateEntity, Byte(), String, Int32, RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.SetDocumentTemplateStreamAsync(SuperOffice.WebApi.Data.DocumentTemplateEntity, System.Byte(), System.String, System.Int32, SuperOffice.WebApi.RequestOptions)
  name.vb: SetDocumentTemplateStreamAsync(DocumentTemplateEntity, Byte(), String, Int32, RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateUsedInSalesStageAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateUsedInSalesStageAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetDocumentTemplateUsedInSalesStageAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetDocumentTemplateUsedInSalesStageAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetDocumentTemplateUsedInSalesStageAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateUsedInSalesStageAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet a String array of names in sales guide that this template is used in\n"
  syntax:
    content: public Task<string[]> GetDocumentTemplateUsedInSalesStageAsync(int documentTemplateId, RequestOptions requestOptions = null)
    parameters:
    - id: documentTemplateId
      type: System.Int32
      description: The id of the template
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.String[]}
      description: The name of the salesguides that use this template
    content.vb: Public Function GetDocumentTemplateUsedInSalesStageAsync(documentTemplateId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of String())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateUsedInSalesStageAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateUsedInProjectStageAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateUsedInProjectStageAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetDocumentTemplateUsedInProjectStageAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetDocumentTemplateUsedInProjectStageAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetDocumentTemplateUsedInProjectStageAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateUsedInProjectStageAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet a String array of names in project guide that this template is used in\n"
  syntax:
    content: public Task<string[]> GetDocumentTemplateUsedInProjectStageAsync(int documentTemplateId, RequestOptions requestOptions = null)
    parameters:
    - id: documentTemplateId
      type: System.Int32
      description: The id of the template
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.String[]}
      description: The name of the projectguides that use this template
    content.vb: Public Function GetDocumentTemplateUsedInProjectStageAsync(documentTemplateId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of String())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateUsedInProjectStageAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateUrlAsync(System.Int32,System.Boolean,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateUrlAsync(System.Int32,System.Boolean,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetDocumentTemplateUrlAsync(System.Int32,System.Boolean,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetDocumentTemplateUrlAsync(Int32, Boolean, String, RequestOptions)
  nameWithType: ListAgent.GetDocumentTemplateUrlAsync(Int32, Boolean, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateUrlAsync(System.Int32, System.Boolean, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet a url to the document template\n"
  syntax:
    content: public Task<string> GetDocumentTemplateUrlAsync(int documentTemplateId, bool writableUrl, string languageCode, RequestOptions requestOptions = null)
    parameters:
    - id: documentTemplateId
      type: System.Int32
      description: The id of the template
    - id: writableUrl
      type: System.Boolean
      description: Get a writeable url to the document template?
    - id: languageCode
      type: System.String
      description: The language code (&apos;en-US&apos;, &apos;nb-NO&apos;, etc). Use empty string if not supported or used.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The URL to the document template
    content.vb: Public Function GetDocumentTemplateUrlAsync(documentTemplateId As Integer, writableUrl As Boolean, languageCode As String, requestOptions As RequestOptions = Nothing) As Task(Of String)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateUrlAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplatePropertiesAsync(System.Int32,System.String[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplatePropertiesAsync(System.Int32,System.String[],SuperOffice.WebApi.RequestOptions)
  id: GetDocumentTemplatePropertiesAsync(System.Int32,System.String[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetDocumentTemplatePropertiesAsync(Int32, String[], RequestOptions)
  nameWithType: ListAgent.GetDocumentTemplatePropertiesAsync(Int32, String[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplatePropertiesAsync(System.Int32, System.String[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet document template properties\n"
  syntax:
    content: public Task<StringDictionary> GetDocumentTemplatePropertiesAsync(int documentTemplateId, string[] requestedProperties, RequestOptions requestOptions = null)
    parameters:
    - id: documentTemplateId
      type: System.Int32
      description: The primary key id of the document template
    - id: requestedProperties
      type: System.String[]
      description: An array of properties to get the values for
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.StringDictionary}
      description: Dictionary of key=value pairs of requested properties
    content.vb: Public Function GetDocumentTemplatePropertiesAsync(documentTemplateId As Integer, requestedProperties As String(), requestOptions As RequestOptions = Nothing) As Task(Of StringDictionary)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplatePropertiesAsync*
  nameWithType.vb: ListAgent.GetDocumentTemplatePropertiesAsync(Int32, String(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplatePropertiesAsync(System.Int32, System.String(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetDocumentTemplatePropertiesAsync(Int32, String(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateLanguagesAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateLanguagesAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetDocumentTemplateLanguagesAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetDocumentTemplateLanguagesAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetDocumentTemplateLanguagesAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateLanguagesAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet the supported language variations for a document template\n"
  syntax:
    content: public Task<string[]> GetDocumentTemplateLanguagesAsync(int documentTemplateId, RequestOptions requestOptions = null)
    parameters:
    - id: documentTemplateId
      type: System.Int32
      description: The id of the document template
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.String[]}
      description: Returns the list of languages as ISO cultures (en-US, no, sv, etc)
    content.vb: Public Function GetDocumentTemplateLanguagesAsync(documentTemplateId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of String())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateLanguagesAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultDocumentTemplateLanguageAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.CreateDefaultDocumentTemplateLanguageAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultDocumentTemplateLanguageAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultDocumentTemplateLanguageAsync(Int32, String, RequestOptions)
  nameWithType: ListAgent.CreateDefaultDocumentTemplateLanguageAsync(Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultDocumentTemplateLanguageAsync(System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCreate a new document template language based on an existing template\n"
  syntax:
    content: public Task CreateDefaultDocumentTemplateLanguageAsync(int documentTemplateId, string languageCode, RequestOptions requestOptions = null)
    parameters:
    - id: documentTemplateId
      type: System.Int32
      description: The id of the document template
    - id: languageCode
      type: System.String
      description: The language code (&apos;en-US, &apos;nb-NO&apos;, etc)
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
      description: Returns nothing - throws on error
    content.vb: Public Function CreateDefaultDocumentTemplateLanguageAsync(documentTemplateId As Integer, languageCode As String, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultDocumentTemplateLanguageAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.DeleteDocumentTemplateLanguageAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.DeleteDocumentTemplateLanguageAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: DeleteDocumentTemplateLanguageAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: DeleteDocumentTemplateLanguageAsync(Int32, String, RequestOptions)
  nameWithType: ListAgent.DeleteDocumentTemplateLanguageAsync(Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.DeleteDocumentTemplateLanguageAsync(System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nDeletes language variant of the document template\n"
  syntax:
    content: public Task DeleteDocumentTemplateLanguageAsync(int documentTemplateId, string languageCode, RequestOptions requestOptions = null)
    parameters:
    - id: documentTemplateId
      type: System.Int32
      description: The id of the document template
    - id: languageCode
      type: System.String
      description: The language code (&apos;en-US, &apos;nb-NO&apos;, etc)
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Public Function DeleteDocumentTemplateLanguageAsync(documentTemplateId As Integer, languageCode As String, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.ListAgent.DeleteDocumentTemplateLanguageAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateExtensionAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateExtensionAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetDocumentTemplateExtensionAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetDocumentTemplateExtensionAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetDocumentTemplateExtensionAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateExtensionAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet the file extension for the document template\n"
  syntax:
    content: public Task<string> GetDocumentTemplateExtensionAsync(int documentTemplateId, RequestOptions requestOptions = null)
    parameters:
    - id: documentTemplateId
      type: System.Int32
      description: The primary key of the document template
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: 'File name extension including &apos;.&apos;: &apos;.doc&apos; or &apos;.xlsx&apos;'
    content.vb: Public Function GetDocumentTemplateExtensionAsync(documentTemplateId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of String)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateExtensionAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.SetDocumentTemplateFromDocumentTemplateAsync(System.Int32,SuperOffice.WebApi.Data.DocumentTemplateEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SetDocumentTemplateFromDocumentTemplateAsync(System.Int32,SuperOffice.WebApi.Data.DocumentTemplateEntity,SuperOffice.WebApi.RequestOptions)
  id: SetDocumentTemplateFromDocumentTemplateAsync(System.Int32,SuperOffice.WebApi.Data.DocumentTemplateEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SetDocumentTemplateFromDocumentTemplateAsync(Int32, DocumentTemplateEntity, RequestOptions)
  nameWithType: ListAgent.SetDocumentTemplateFromDocumentTemplateAsync(Int32, DocumentTemplateEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SetDocumentTemplateFromDocumentTemplateAsync(System.Int32, SuperOffice.WebApi.Data.DocumentTemplateEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCreate a new document template based on another template\n"
  syntax:
    content: public Task<DocumentTemplateEntity> SetDocumentTemplateFromDocumentTemplateAsync(int sourceDocumentTemplateId, DocumentTemplateEntity documentTemplateEntity, RequestOptions requestOptions = null)
    parameters:
    - id: sourceDocumentTemplateId
      type: System.Int32
      description: The document template to copy contents from.
    - id: documentTemplateEntity
      type: SuperOffice.WebApi.Data.DocumentTemplateEntity
      description: The new document template entity
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DocumentTemplateEntity}
      description: The new document template entity
    content.vb: Public Function SetDocumentTemplateFromDocumentTemplateAsync(sourceDocumentTemplateId As Integer, documentTemplateEntity As DocumentTemplateEntity, requestOptions As RequestOptions = Nothing) As Task(Of DocumentTemplateEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.SetDocumentTemplateFromDocumentTemplateAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateStreamFromIdAsync(System.Int32,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateStreamFromIdAsync(System.Int32,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetDocumentTemplateStreamFromIdAsync(System.Int32,System.String,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetDocumentTemplateStreamFromIdAsync(Int32, String, String, RequestOptions)
  nameWithType: ListAgent.GetDocumentTemplateStreamFromIdAsync(Int32, String, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateStreamFromIdAsync(System.Int32, System.String, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nRetrieve a stream to a document template based on its id\n"
  syntax:
    content: public Task<byte[]> GetDocumentTemplateStreamFromIdAsync(int documentTemplateId, string languageCode, string returnContentType = "application/octet-stream", RequestOptions requestOptions = null)
    parameters:
    - id: documentTemplateId
      type: System.Int32
      description: Id of template to retrieve
    - id: languageCode
      type: System.String
      description: 'Language variation of template to use. (ISO code: &quot;en-US&quot; or &quot;nb-NO&quot; etc). Used to select a template of the appropriate language. Can be overridden in SO ARC by user preference &quot;PreferDocLang&quot;.'
    - id: returnContentType
      type: System.String
      description: Accept content-type. Default &quot;application/octet-stream&quot;. Could also be &quot;application/pdf&quot;, &quot;text/plain&quot;, &quot;text/html&quot;, or &quot;multipart/related&quot;
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Byte[]}
      description: Open stream to the template content
    content.vb: Public Function GetDocumentTemplateStreamFromIdAsync(documentTemplateId As Integer, languageCode As String, returnContentType As String = "application/octet-stream", requestOptions As RequestOptions = Nothing) As Task(Of Byte())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateStreamFromIdAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveDocumentTemplateStreamAsync(System.Int32,System.Byte[],System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SaveDocumentTemplateStreamAsync(System.Int32,System.Byte[],System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: SaveDocumentTemplateStreamAsync(System.Int32,System.Byte[],System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SaveDocumentTemplateStreamAsync(Int32, Byte[], String, Int32, RequestOptions)
  nameWithType: ListAgent.SaveDocumentTemplateStreamAsync(Int32, Byte[], String, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveDocumentTemplateStreamAsync(System.Int32, System.Byte[], System.String, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nWrites content in stream to document template file\n"
  syntax:
    content: public Task<TemplateInfo> SaveDocumentTemplateStreamAsync(int documentTemplateId, byte[] content, string languageCode, int pluginId, RequestOptions requestOptions = null)
    parameters:
    - id: documentTemplateId
      type: System.Int32
      description: Identifier for document template
    - id: content
      type: System.Byte[]
      description: Stream containing content to be saved to document template file
    - id: languageCode
      type: System.String
      description: 'Language variation of template to update. (ISO code: &quot;en-US&quot; or &quot;nb-NO&quot; etc). Used to select a template of the appropriate language. Can be overridden in SO ARC by user preference &quot;PreferDocLang&quot;.'
    - id: pluginId
      type: System.Int32
      description: Plugin to use for storing document content. 0 = SOARC. Use -1 to use the plugin specified in the template.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TemplateInfo}
      description: Template info
    content.vb: Public Function SaveDocumentTemplateStreamAsync(documentTemplateId As Integer, content As Byte(), languageCode As String, pluginId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of TemplateInfo)
  overload: SuperOffice.WebApi.Agents.ListAgent.SaveDocumentTemplateStreamAsync*
  nameWithType.vb: ListAgent.SaveDocumentTemplateStreamAsync(Int32, Byte(), String, Int32, RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.SaveDocumentTemplateStreamAsync(System.Int32, System.Byte(), System.String, System.Int32, SuperOffice.WebApi.RequestOptions)
  name.vb: SaveDocumentTemplateStreamAsync(Int32, Byte(), String, Int32, RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.GetPluginListAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetPluginListAsync(SuperOffice.WebApi.RequestOptions)
  id: GetPluginListAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetPluginListAsync(RequestOptions)
  nameWithType: ListAgent.GetPluginListAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetPluginListAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet a list of installed document plugins\n"
  syntax:
    content: public Task<StringDictionary> GetPluginListAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.StringDictionary}
      description: Dictionary mapping plugin id=plugin name
    content.vb: Public Function GetPluginListAsync(requestOptions As RequestOptions = Nothing) As Task(Of StringDictionary)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetPluginListAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetPluginCapabilitiesAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetPluginCapabilitiesAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetPluginCapabilitiesAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetPluginCapabilitiesAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetPluginCapabilitiesAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetPluginCapabilitiesAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet a list of plugin-dependent capabilities for a given document archive plugin.&lt;br/>A standard set of properties is defined in SuperOffice.CRM.Documents.Constants.Capabilities.\n"
  syntax:
    content: public Task<StringDictionary> GetPluginCapabilitiesAsync(int pluginId, RequestOptions requestOptions = null)
    parameters:
    - id: pluginId
      type: System.Int32
      description: Numeric document plugin id, corresponding to the document.archiveProvider id or doctmpl.AutoeventId.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.StringDictionary}
      description: Dictionary mapping capability names=values
    content.vb: Public Function GetPluginCapabilitiesAsync(pluginId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of StringDictionary)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetPluginCapabilitiesAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTypesForPluginAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetDocumentTypesForPluginAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetDocumentTypesForPluginAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetDocumentTypesForPluginAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetDocumentTypesForPluginAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTypesForPluginAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet a list of document types supported by a given document plugin. Use the document template type when creating a new template.\n"
  syntax:
    content: public Task<IntStringDictionary> GetDocumentTypesForPluginAsync(int pluginId, RequestOptions requestOptions = null)
    parameters:
    - id: pluginId
      type: System.Int32
      description: Numeric document plugin id, corresponding to the doctmpl.AutoeventId, doctmpl.LoadTemplateFromPlugin.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.IntStringDictionary}
      description: Dictionary mapping document type id=name
    content.vb: Public Function GetDocumentTypesForPluginAsync(pluginId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of IntStringDictionary)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTypesForPluginAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetRelationDefinitionEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetRelationDefinitionEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetRelationDefinitionEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetRelationDefinitionEntityAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetRelationDefinitionEntityAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetRelationDefinitionEntityAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific RelationDefinitionEntity object.                        \n"
  syntax:
    content: public Task<RelationDefinitionEntity> GetRelationDefinitionEntityAsync(int relationDefinitionEntityId, RequestOptions requestOptions = null)
    parameters:
    - id: relationDefinitionEntityId
      type: System.Int32
      description: The identifier of the RelationDefinitionEntity object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.RelationDefinitionEntity}
      description: RelationDefinitionEntity
    content.vb: Public Function GetRelationDefinitionEntityAsync(relationDefinitionEntityId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of RelationDefinitionEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetRelationDefinitionEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveQuickRepliesAsync(SuperOffice.WebApi.Data.QuickReply[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SaveQuickRepliesAsync(SuperOffice.WebApi.Data.QuickReply[],SuperOffice.WebApi.RequestOptions)
  id: SaveQuickRepliesAsync(SuperOffice.WebApi.Data.QuickReply[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SaveQuickRepliesAsync(QuickReply[], RequestOptions)
  nameWithType: ListAgent.SaveQuickRepliesAsync(QuickReply[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveQuickRepliesAsync(SuperOffice.WebApi.Data.QuickReply[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod to save all quick replies for a given associate\n"
  syntax:
    content: public Task SaveQuickRepliesAsync(QuickReply[] quickReplies, RequestOptions requestOptions = null)
    parameters:
    - id: quickReplies
      type: SuperOffice.WebApi.Data.QuickReply[]
      description: Array of quick replies
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SaveQuickRepliesAsync(quickReplies As QuickReply(), requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.ListAgent.SaveQuickRepliesAsync*
  nameWithType.vb: ListAgent.SaveQuickRepliesAsync(QuickReply(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.SaveQuickRepliesAsync(SuperOffice.WebApi.Data.QuickReply(), SuperOffice.WebApi.RequestOptions)
  name.vb: SaveQuickRepliesAsync(QuickReply(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.GetQuickRepliesAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetQuickRepliesAsync(SuperOffice.WebApi.RequestOptions)
  id: GetQuickRepliesAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetQuickRepliesAsync(RequestOptions)
  nameWithType: ListAgent.GetQuickRepliesAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetQuickRepliesAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMethod to return all quick replies for a given associate\n"
  syntax:
    content: public Task<QuickReply[]> GetQuickRepliesAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.QuickReply[]}
      description: Array of quick replies
    content.vb: Public Function GetQuickRepliesAsync(requestOptions As RequestOptions = Nothing) As Task(Of QuickReply())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetQuickRepliesAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetConsentPurposeAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetConsentPurposeAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetConsentPurposeAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetConsentPurposeAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetConsentPurposeAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetConsentPurposeAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific ConsentPurpose object.                        \n"
  syntax:
    content: public Task<ConsentPurpose> GetConsentPurposeAsync(int consentPurposeId, RequestOptions requestOptions = null)
    parameters:
    - id: consentPurposeId
      type: System.Int32
      description: The identifier of the ConsentPurpose object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ConsentPurpose}
      description: ConsentPurpose
    content.vb: Public Function GetConsentPurposeAsync(consentPurposeId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of ConsentPurpose)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetConsentPurposeAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveConsentPurposeAsync(SuperOffice.WebApi.Data.ConsentPurpose,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SaveConsentPurposeAsync(SuperOffice.WebApi.Data.ConsentPurpose,SuperOffice.WebApi.RequestOptions)
  id: SaveConsentPurposeAsync(SuperOffice.WebApi.Data.ConsentPurpose,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SaveConsentPurposeAsync(ConsentPurpose, RequestOptions)
  nameWithType: ListAgent.SaveConsentPurposeAsync(ConsentPurpose, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveConsentPurposeAsync(SuperOffice.WebApi.Data.ConsentPurpose, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSave a ConsentPurpose object\n"
  syntax:
    content: public Task<ConsentPurpose> SaveConsentPurposeAsync(ConsentPurpose consentPurpose, RequestOptions requestOptions = null)
    parameters:
    - id: consentPurpose
      type: SuperOffice.WebApi.Data.ConsentPurpose
      description: The ConsentPurpose object to save
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ConsentPurpose}
      description: The saved ConsentPurpose object, updated with the ConsentPurposeId if it is a new database entry
    content.vb: Public Function SaveConsentPurposeAsync(consentPurpose As ConsentPurpose, requestOptions As RequestOptions = Nothing) As Task(Of ConsentPurpose)
  overload: SuperOffice.WebApi.Agents.ListAgent.SaveConsentPurposeAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.SetEmarketingStrictModeAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SetEmarketingStrictModeAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: SetEmarketingStrictModeAsync(System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SetEmarketingStrictModeAsync(Boolean, RequestOptions)
  nameWithType: ListAgent.SetEmarketingStrictModeAsync(Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SetEmarketingStrictModeAsync(System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nTurn on the Emarketing strict mode, which will enable full GDPR rules concerning Emarketing consents and subscriptions\n"
  syntax:
    content: public Task SetEmarketingStrictModeAsync(bool enable, RequestOptions requestOptions = null)
    parameters:
    - id: enable
      type: System.Boolean
      description: Set to true to enable strict mode
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
      description: A void return
    content.vb: Public Function SetEmarketingStrictModeAsync(enable As Boolean, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.ListAgent.SetEmarketingStrictModeAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetEmarketingStrictModeAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetEmarketingStrictModeAsync(SuperOffice.WebApi.RequestOptions)
  id: GetEmarketingStrictModeAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetEmarketingStrictModeAsync(RequestOptions)
  nameWithType: ListAgent.GetEmarketingStrictModeAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetEmarketingStrictModeAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet the value of the Emarketing strict mode setting\n"
  syntax:
    content: public Task<bool> GetEmarketingStrictModeAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: Returns true if Emarkerint strict mode is set, false otherwise
    content.vb: Public Function GetEmarketingStrictModeAsync(requestOptions As RequestOptions = Nothing) As Task(Of Boolean)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetEmarketingStrictModeAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetConsentPurposeListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetConsentPurposeListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetConsentPurposeListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetConsentPurposeListAsync(Int32[], RequestOptions)
  nameWithType: ListAgent.GetConsentPurposeListAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetConsentPurposeListAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets an array of specific ConsentPurpose objects.                        \n"
  syntax:
    content: public Task<ConsentPurpose[]> GetConsentPurposeListAsync(int[] consentPurposeIds, RequestOptions requestOptions = null)
    parameters:
    - id: consentPurposeIds
      type: System.Int32[]
      description: The identifiers of the ConsentPurpose object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ConsentPurpose[]}
      description: Array of ConsentPurpose objects
    content.vb: Public Function GetConsentPurposeListAsync(consentPurposeIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of ConsentPurpose())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetConsentPurposeListAsync*
  nameWithType.vb: ListAgent.GetConsentPurposeListAsync(Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.GetConsentPurposeListAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetConsentPurposeListAsync(Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.GetConsentPurposesAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetConsentPurposesAsync(SuperOffice.WebApi.RequestOptions)
  id: GetConsentPurposesAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetConsentPurposesAsync(RequestOptions)
  nameWithType: ListAgent.GetConsentPurposesAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetConsentPurposesAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns all defined purposes.\n"
  syntax:
    content: public Task<ConsentPurpose[]> GetConsentPurposesAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ConsentPurpose[]}
      description: An array of all defined purposes
    content.vb: Public Function GetConsentPurposesAsync(requestOptions As RequestOptions = Nothing) As Task(Of ConsentPurpose())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetConsentPurposesAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetConsentSourceAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetConsentSourceAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetConsentSourceAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetConsentSourceAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetConsentSourceAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetConsentSourceAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific ConsentSource object.                        \n"
  syntax:
    content: public Task<ConsentSource> GetConsentSourceAsync(int consentSourceId, RequestOptions requestOptions = null)
    parameters:
    - id: consentSourceId
      type: System.Int32
      description: The identifier of the ConsentSource object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ConsentSource}
      description: ConsentSource
    content.vb: Public Function GetConsentSourceAsync(consentSourceId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of ConsentSource)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetConsentSourceAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveConsentSourceAsync(SuperOffice.WebApi.Data.ConsentSource,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SaveConsentSourceAsync(SuperOffice.WebApi.Data.ConsentSource,SuperOffice.WebApi.RequestOptions)
  id: SaveConsentSourceAsync(SuperOffice.WebApi.Data.ConsentSource,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SaveConsentSourceAsync(ConsentSource, RequestOptions)
  nameWithType: ListAgent.SaveConsentSourceAsync(ConsentSource, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveConsentSourceAsync(SuperOffice.WebApi.Data.ConsentSource, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\n\n"
  syntax:
    content: public Task<ConsentSource> SaveConsentSourceAsync(ConsentSource consentSource, RequestOptions requestOptions = null)
    parameters:
    - id: consentSource
      type: SuperOffice.WebApi.Data.ConsentSource
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ConsentSource}
    content.vb: Public Function SaveConsentSourceAsync(consentSource As ConsentSource, requestOptions As RequestOptions = Nothing) As Task(Of ConsentSource)
  overload: SuperOffice.WebApi.Agents.ListAgent.SaveConsentSourceAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetAllConsentSourceAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetAllConsentSourceAsync(SuperOffice.WebApi.RequestOptions)
  id: GetAllConsentSourceAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetAllConsentSourceAsync(RequestOptions)
  nameWithType: ListAgent.GetAllConsentSourceAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetAllConsentSourceAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets array of all ConsentSource objects. \n"
  syntax:
    content: public Task<ConsentSource[]> GetAllConsentSourceAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ConsentSource[]}
      description: Array of all ConsentSource objects
    content.vb: Public Function GetAllConsentSourceAsync(requestOptions As RequestOptions = Nothing) As Task(Of ConsentSource())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetAllConsentSourceAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetConsentSourceListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetConsentSourceListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetConsentSourceListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetConsentSourceListAsync(Int32[], RequestOptions)
  nameWithType: ListAgent.GetConsentSourceListAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetConsentSourceListAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets an array of specific ConsentSource objects.                        \n"
  syntax:
    content: public Task<ConsentSource[]> GetConsentSourceListAsync(int[] consentSourceIds, RequestOptions requestOptions = null)
    parameters:
    - id: consentSourceIds
      type: System.Int32[]
      description: The identifiers of the ConsentSource object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ConsentSource[]}
      description: Array of ConsentSource objects
    content.vb: Public Function GetConsentSourceListAsync(consentSourceIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of ConsentSource())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetConsentSourceListAsync*
  nameWithType.vb: ListAgent.GetConsentSourceListAsync(Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.GetConsentSourceListAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetConsentSourceListAsync(Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.GetConsentSourcesAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetConsentSourcesAsync(SuperOffice.WebApi.RequestOptions)
  id: GetConsentSourcesAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetConsentSourcesAsync(RequestOptions)
  nameWithType: ListAgent.GetConsentSourcesAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetConsentSourcesAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns all defined Sources.\n"
  syntax:
    content: public Task<ConsentSource[]> GetConsentSourcesAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ConsentSource[]}
      description: An array of all defined Sources
    content.vb: Public Function GetConsentSourcesAsync(requestOptions As RequestOptions = Nothing) As Task(Of ConsentSource())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetConsentSourcesAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetLegalBaseAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetLegalBaseAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetLegalBaseAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetLegalBaseAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetLegalBaseAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetLegalBaseAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific LegalBase object.                        \n"
  syntax:
    content: public Task<LegalBase> GetLegalBaseAsync(int legalBaseId, RequestOptions requestOptions = null)
    parameters:
    - id: legalBaseId
      type: System.Int32
      description: The identifier of the LegalBase object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.LegalBase}
      description: LegalBase
    content.vb: Public Function GetLegalBaseAsync(legalBaseId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of LegalBase)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetLegalBaseAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveLegalBaseAsync(SuperOffice.WebApi.Data.LegalBase,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SaveLegalBaseAsync(SuperOffice.WebApi.Data.LegalBase,SuperOffice.WebApi.RequestOptions)
  id: SaveLegalBaseAsync(SuperOffice.WebApi.Data.LegalBase,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SaveLegalBaseAsync(LegalBase, RequestOptions)
  nameWithType: ListAgent.SaveLegalBaseAsync(LegalBase, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveLegalBaseAsync(SuperOffice.WebApi.Data.LegalBase, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\n\n"
  syntax:
    content: public Task<LegalBase> SaveLegalBaseAsync(LegalBase legalBase, RequestOptions requestOptions = null)
    parameters:
    - id: legalBase
      type: SuperOffice.WebApi.Data.LegalBase
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.LegalBase}
    content.vb: Public Function SaveLegalBaseAsync(legalBase As LegalBase, requestOptions As RequestOptions = Nothing) As Task(Of LegalBase)
  overload: SuperOffice.WebApi.Agents.ListAgent.SaveLegalBaseAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetAllLegalBaseAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetAllLegalBaseAsync(SuperOffice.WebApi.RequestOptions)
  id: GetAllLegalBaseAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetAllLegalBaseAsync(RequestOptions)
  nameWithType: ListAgent.GetAllLegalBaseAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetAllLegalBaseAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets array of all LegalBase objects. \n"
  syntax:
    content: public Task<LegalBase[]> GetAllLegalBaseAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.LegalBase[]}
      description: Array of all LegalBase objects
    content.vb: Public Function GetAllLegalBaseAsync(requestOptions As RequestOptions = Nothing) As Task(Of LegalBase())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetAllLegalBaseAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetLegalBaseListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetLegalBaseListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetLegalBaseListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetLegalBaseListAsync(Int32[], RequestOptions)
  nameWithType: ListAgent.GetLegalBaseListAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetLegalBaseListAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets an array of specific LegalBase objects.                        \n"
  syntax:
    content: public Task<LegalBase[]> GetLegalBaseListAsync(int[] legalBaseIds, RequestOptions requestOptions = null)
    parameters:
    - id: legalBaseIds
      type: System.Int32[]
      description: The identifiers of the LegalBase object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.LegalBase[]}
      description: Array of LegalBase objects
    content.vb: Public Function GetLegalBaseListAsync(legalBaseIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of LegalBase())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetLegalBaseListAsync*
  nameWithType.vb: ListAgent.GetLegalBaseListAsync(Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.GetLegalBaseListAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetLegalBaseListAsync(Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.GetLegalBasesAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetLegalBasesAsync(SuperOffice.WebApi.RequestOptions)
  id: GetLegalBasesAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetLegalBasesAsync(RequestOptions)
  nameWithType: ListAgent.GetLegalBasesAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetLegalBasesAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns all defined bases.\n"
  syntax:
    content: public Task<LegalBase[]> GetLegalBasesAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.LegalBase[]}
      description: An array of all defined bases
    content.vb: Public Function GetLegalBasesAsync(requestOptions As RequestOptions = Nothing) As Task(Of LegalBase())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetLegalBasesAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetTicketCategoryEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetTicketCategoryEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetTicketCategoryEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetTicketCategoryEntityAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetTicketCategoryEntityAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetTicketCategoryEntityAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific TicketCategoryEntity object.                        \n"
  syntax:
    content: public Task<TicketCategoryEntity> GetTicketCategoryEntityAsync(int ticketCategoryEntityId, RequestOptions requestOptions = null)
    parameters:
    - id: ticketCategoryEntityId
      type: System.Int32
      description: The identifier of the TicketCategoryEntity object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketCategoryEntity}
      description: TicketCategoryEntity
    content.vb: Public Function GetTicketCategoryEntityAsync(ticketCategoryEntityId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of TicketCategoryEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetTicketCategoryEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.MoveAllTicketsAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.MoveAllTicketsAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: MoveAllTicketsAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: MoveAllTicketsAsync(Int32, Int32, RequestOptions)
  nameWithType: ListAgent.MoveAllTicketsAsync(Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.MoveAllTicketsAsync(System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nMove all tickets from one ticket category to another\n"
  syntax:
    content: public Task MoveAllTicketsAsync(int fromTicketCategoryId, int toTicketCategoryId, RequestOptions requestOptions = null)
    parameters:
    - id: fromTicketCategoryId
      type: System.Int32
      description: The id of the category we want to move tickets from
    - id: toTicketCategoryId
      type: System.Int32
      description: The id of the category we want to move the tickets to
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Public Function MoveAllTicketsAsync(fromTicketCategoryId As Integer, toTicketCategoryId As Integer, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.ListAgent.MoveAllTicketsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.RebuildFullnamesAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.RebuildFullnamesAsync(SuperOffice.WebApi.RequestOptions)
  id: RebuildFullnamesAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: RebuildFullnamesAsync(RequestOptions)
  nameWithType: ListAgent.RebuildFullnamesAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.RebuildFullnamesAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdate the fullname field of all categories. Use this e.g. when changing parentId or renaming a category with children.\n"
  syntax:
    content: public Task RebuildFullnamesAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Public Function RebuildFullnamesAsync(requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.ListAgent.RebuildFullnamesAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetTicketPriorityEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetTicketPriorityEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetTicketPriorityEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetTicketPriorityEntityAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetTicketPriorityEntityAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetTicketPriorityEntityAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific TicketPriorityEntity object.                        \n"
  syntax:
    content: public Task<TicketPriorityEntity> GetTicketPriorityEntityAsync(int ticketPriorityEntityId, RequestOptions requestOptions = null)
    parameters:
    - id: ticketPriorityEntityId
      type: System.Int32
      description: The identifier of the TicketPriorityEntity object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketPriorityEntity}
      description: TicketPriorityEntity
    content.vb: Public Function GetTicketPriorityEntityAsync(ticketPriorityEntityId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of TicketPriorityEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetTicketPriorityEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetTicketStatusEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetTicketStatusEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetTicketStatusEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetTicketStatusEntityAsync(Int32, RequestOptions)
  nameWithType: ListAgent.GetTicketStatusEntityAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetTicketStatusEntityAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific TicketStatusEntity object.                        \n"
  syntax:
    content: public Task<TicketStatusEntity> GetTicketStatusEntityAsync(int ticketStatusEntityId, RequestOptions requestOptions = null)
    parameters:
    - id: ticketStatusEntityId
      type: System.Int32
      description: The identifier of the TicketStatusEntity object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketStatusEntity}
      description: TicketStatusEntity
    content.vb: Public Function GetTicketStatusEntityAsync(ticketStatusEntityId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of TicketStatusEntity)
  overload: SuperOffice.WebApi.Agents.ListAgent.GetTicketStatusEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GlobalChangeTicketStatusAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GlobalChangeTicketStatusAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GlobalChangeTicketStatusAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GlobalChangeTicketStatusAsync(Int32, Int32, RequestOptions)
  nameWithType: ListAgent.GlobalChangeTicketStatusAsync(Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GlobalChangeTicketStatusAsync(System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nThis method will change all references from one ticket status to another. Typically used in conjuction with delete\n"
  syntax:
    content: public Task GlobalChangeTicketStatusAsync(int fromTicketStatusId, int toTicketStatusId, RequestOptions requestOptions = null)
    parameters:
    - id: fromTicketStatusId
      type: System.Int32
      description: The id of the ticket status to change from
    - id: toTicketStatusId
      type: System.Int32
      description: The id of the ticket status to change to
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
      description: Does not return anything
    content.vb: Public Function GlobalChangeTicketStatusAsync(fromTicketStatusId As Integer, toTicketStatusId As Integer, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.ListAgent.GlobalChangeTicketStatusAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetTicketStatusListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetTicketStatusListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetTicketStatusListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetTicketStatusListAsync(Int32[], RequestOptions)
  nameWithType: ListAgent.GetTicketStatusListAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetTicketStatusListAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets an array of specific TicketStatusEntity objects.                        \n"
  syntax:
    content: public Task<TicketStatusEntity[]> GetTicketStatusListAsync(int[] ticketStatusEntityIds, RequestOptions requestOptions = null)
    parameters:
    - id: ticketStatusEntityIds
      type: System.Int32[]
      description: The identifiers of the TicketStatusEntity object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketStatusEntity[]}
      description: Array of TicketStatusEntity objects
    content.vb: Public Function GetTicketStatusListAsync(ticketStatusEntityIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of TicketStatusEntity())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetTicketStatusListAsync*
  nameWithType.vb: ListAgent.GetTicketStatusListAsync(Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.GetTicketStatusListAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetTicketStatusListAsync(Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.GetTicketStatusesAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetTicketStatusesAsync(SuperOffice.WebApi.RequestOptions)
  id: GetTicketStatusesAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetTicketStatusesAsync(RequestOptions)
  nameWithType: ListAgent.GetTicketStatusesAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetTicketStatusesAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\n\n"
  syntax:
    content: public Task<TicketStatusEntity[]> GetTicketStatusesAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketStatusEntity[]}
    content.vb: Public Function GetTicketStatusesAsync(requestOptions As RequestOptions = Nothing) As Task(Of TicketStatusEntity())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetTicketStatusesAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetTicketCategoryListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetTicketCategoryListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetTicketCategoryListAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetTicketCategoryListAsync(Int32[], RequestOptions)
  nameWithType: ListAgent.GetTicketCategoryListAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetTicketCategoryListAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets an array of specific TicketCategoryEntity objects.                        \n"
  syntax:
    content: public Task<TicketCategoryEntity[]> GetTicketCategoryListAsync(int[] ticketCategoryEntityIds, RequestOptions requestOptions = null)
    parameters:
    - id: ticketCategoryEntityIds
      type: System.Int32[]
      description: The identifiers of the TicketCategoryEntity object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketCategoryEntity[]}
      description: Array of TicketCategoryEntity objects
    content.vb: Public Function GetTicketCategoryListAsync(ticketCategoryEntityIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of TicketCategoryEntity())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetTicketCategoryListAsync*
  nameWithType.vb: ListAgent.GetTicketCategoryListAsync(Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.GetTicketCategoryListAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetTicketCategoryListAsync(Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.GetTicketCategoriesAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetTicketCategoriesAsync(SuperOffice.WebApi.RequestOptions)
  id: GetTicketCategoriesAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetTicketCategoriesAsync(RequestOptions)
  nameWithType: ListAgent.GetTicketCategoriesAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetTicketCategoriesAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\n\n"
  syntax:
    content: public Task<TicketCategoryEntity[]> GetTicketCategoriesAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketCategoryEntity[]}
    content.vb: Public Function GetTicketCategoriesAsync(requestOptions As RequestOptions = Nothing) As Task(Of TicketCategoryEntity())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetTicketCategoriesAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.ListAgent.GetTicketCategoriesForUserGroupsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.GetTicketCategoriesForUserGroupsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: GetTicketCategoriesForUserGroupsAsync(System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: GetTicketCategoriesForUserGroupsAsync(Int32[], RequestOptions)
  nameWithType: ListAgent.GetTicketCategoriesForUserGroupsAsync(Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetTicketCategoriesForUserGroupsAsync(System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nTicket categories for user groups\n"
  syntax:
    content: public Task<MDOListItem[]> GetTicketCategoriesForUserGroupsAsync(int[] userGroupIds, RequestOptions requestOptions = null)
    parameters:
    - id: userGroupIds
      type: System.Int32[]
      description: The ids of the user groups we want tickets categories from
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.MDOListItem[]}
    content.vb: Public Function GetTicketCategoriesForUserGroupsAsync(userGroupIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of MDOListItem())
  overload: SuperOffice.WebApi.Agents.ListAgent.GetTicketCategoriesForUserGroupsAsync*
  nameWithType.vb: ListAgent.GetTicketCategoriesForUserGroupsAsync(Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.GetTicketCategoriesForUserGroupsAsync(System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetTicketCategoriesForUserGroupsAsync(Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.ListAgent.SetTicketCategoriesForUserGroupAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.ListAgent.SetTicketCategoriesForUserGroupAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: SetTicketCategoriesForUserGroupAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.ListAgent
  langs:
  - csharp
  - vb
  name: SetTicketCategoriesForUserGroupAsync(Int32, Int32[], RequestOptions)
  nameWithType: ListAgent.SetTicketCategoriesForUserGroupAsync(Int32, Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.ListAgent.SetTicketCategoriesForUserGroupAsync(System.Int32, System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet ticket categories for one user group\n"
  syntax:
    content: public Task SetTicketCategoriesForUserGroupAsync(int userGroupId, int[] categoryIds, RequestOptions requestOptions = null)
    parameters:
    - id: userGroupId
      type: System.Int32
      description: The ids of the user groups we want tickets categories from
    - id: categoryIds
      type: System.Int32[]
      description: The ids of the user groups we want tickets categories from
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Public Function SetTicketCategoriesForUserGroupAsync(userGroupId As Integer, categoryIds As Integer(), requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.ListAgent.SetTicketCategoriesForUserGroupAsync*
  nameWithType.vb: ListAgent.SetTicketCategoriesForUserGroupAsync(Int32, Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.ListAgent.SetTicketCategoriesForUserGroupAsync(System.Int32, System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: SetTicketCategoriesForUserGroupAsync(Int32, Int32(), RequestOptions)
references:
- uid: SuperOffice.WebApi.Agents
  commentId: N:SuperOffice.WebApi.Agents
  isExternal: true
  name: SuperOffice.WebApi.Agents
  nameWithType: SuperOffice.WebApi.Agents
  fullName: SuperOffice.WebApi.Agents
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.WebApi.Agents.AgentBase
  commentId: T:SuperOffice.WebApi.Agents.AgentBase
  parent: SuperOffice.WebApi.Agents
  isExternal: true
  name: AgentBase
  nameWithType: AgentBase
  fullName: SuperOffice.WebApi.Agents.AgentBase
- uid: System.IDisposable
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: SuperOffice.WebApi.Agents.AgentBase._json
  commentId: F:SuperOffice.WebApi.Agents.AgentBase._json
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: _json
  nameWithType: AgentBase._json
  fullName: SuperOffice.WebApi.Agents.AgentBase._json
- uid: SuperOffice.WebApi.Agents.AgentBase._binary
  commentId: F:SuperOffice.WebApi.Agents.AgentBase._binary
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: _binary
  nameWithType: AgentBase._binary
  fullName: SuperOffice.WebApi.Agents.AgentBase._binary
- uid: SuperOffice.WebApi.Agents.AgentBase._config
  commentId: F:SuperOffice.WebApi.Agents.AgentBase._config
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: _config
  nameWithType: AgentBase._config
  fullName: SuperOffice.WebApi.Agents.AgentBase._config
- uid: SuperOffice.WebApi.Agents.AgentBase._client
  commentId: F:SuperOffice.WebApi.Agents.AgentBase._client
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: _client
  nameWithType: AgentBase._client
  fullName: SuperOffice.WebApi.Agents.AgentBase._client
- uid: SuperOffice.WebApi.Agents.AgentBase.Merge(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.Merge(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: Merge(RequestOptions)
  nameWithType: AgentBase.Merge(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AgentBase.Merge(SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.Merge(SuperOffice.WebApi.RequestOptions)
    name: Merge
    nameWithType: AgentBase.Merge
    fullName: SuperOffice.WebApi.Agents.AgentBase.Merge
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.Merge(SuperOffice.WebApi.RequestOptions)
    name: Merge
    nameWithType: AgentBase.Merge
    fullName: SuperOffice.WebApi.Agents.AgentBase.Merge
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: BuildRequestFromObject(HttpMethod, String, Object, WebApiOptions, String)
  nameWithType: AgentBase.BuildRequestFromObject(HttpMethod, String, Object, WebApiOptions, String)
  fullName: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject(System.Net.Http.HttpMethod, System.String, System.Object, SuperOffice.WebApi.WebApiOptions, System.String)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
    name: BuildRequestFromObject
    nameWithType: AgentBase.BuildRequestFromObject
    fullName: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.WebApiOptions
    name: WebApiOptions
    nameWithType: WebApiOptions
    fullName: SuperOffice.WebApi.WebApiOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
    name: BuildRequestFromObject
    nameWithType: AgentBase.BuildRequestFromObject
    fullName: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.WebApiOptions
    name: WebApiOptions
    nameWithType: WebApiOptions
    fullName: SuperOffice.WebApi.WebApiOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream(System.Net.Http.HttpMethod,System.String,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream(System.Net.Http.HttpMethod,System.String,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: BuildRequestFromStream(HttpMethod, String, Stream, WebApiOptions, String)
  nameWithType: AgentBase.BuildRequestFromStream(HttpMethod, String, Stream, WebApiOptions, String)
  fullName: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream(System.Net.Http.HttpMethod, System.String, System.IO.Stream, SuperOffice.WebApi.WebApiOptions, System.String)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream(System.Net.Http.HttpMethod,System.String,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
    name: BuildRequestFromStream
    nameWithType: AgentBase.BuildRequestFromStream
    fullName: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.WebApiOptions
    name: WebApiOptions
    nameWithType: WebApiOptions
    fullName: SuperOffice.WebApi.WebApiOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream(System.Net.Http.HttpMethod,System.String,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
    name: BuildRequestFromStream
    nameWithType: AgentBase.BuildRequestFromStream
    fullName: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.WebApiOptions
    name: WebApiOptions
    nameWithType: WebApiOptions
    fullName: SuperOffice.WebApi.WebApiOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization(SuperOffice.WebApi.IAuthorization)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization(SuperOffice.WebApi.IAuthorization)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: ParseAuthorization(IAuthorization)
  nameWithType: AgentBase.ParseAuthorization(IAuthorization)
  fullName: SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization(SuperOffice.WebApi.IAuthorization)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization(SuperOffice.WebApi.IAuthorization)
    name: ParseAuthorization
    nameWithType: AgentBase.ParseAuthorization
    fullName: SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.IAuthorization
    name: IAuthorization
    nameWithType: IAuthorization
    fullName: SuperOffice.WebApi.IAuthorization
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization(SuperOffice.WebApi.IAuthorization)
    name: ParseAuthorization
    nameWithType: AgentBase.ParseAuthorization
    fullName: SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.IAuthorization
    name: IAuthorization
    nameWithType: IAuthorization
    fullName: SuperOffice.WebApi.IAuthorization
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.CancelRequest
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.CancelRequest
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: CancelRequest()
  nameWithType: AgentBase.CancelRequest()
  fullName: SuperOffice.WebApi.Agents.AgentBase.CancelRequest()
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.CancelRequest
    name: CancelRequest
    nameWithType: AgentBase.CancelRequest
    fullName: SuperOffice.WebApi.Agents.AgentBase.CancelRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.CancelRequest
    name: CancelRequest
    nameWithType: AgentBase.CancelRequest
    fullName: SuperOffice.WebApi.Agents.AgentBase.CancelRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.SendRequestObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.SendRequestObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: SendRequestObject(HttpMethod, String, Object, WebApiOptions, String)
  nameWithType: AgentBase.SendRequestObject(HttpMethod, String, Object, WebApiOptions, String)
  fullName: SuperOffice.WebApi.Agents.AgentBase.SendRequestObject(System.Net.Http.HttpMethod, System.String, System.Object, SuperOffice.WebApi.WebApiOptions, System.String)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.SendRequestObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
    name: SendRequestObject
    nameWithType: AgentBase.SendRequestObject
    fullName: SuperOffice.WebApi.Agents.AgentBase.SendRequestObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.WebApiOptions
    name: WebApiOptions
    nameWithType: WebApiOptions
    fullName: SuperOffice.WebApi.WebApiOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.SendRequestObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
    name: SendRequestObject
    nameWithType: AgentBase.SendRequestObject
    fullName: SuperOffice.WebApi.Agents.AgentBase.SendRequestObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.WebApiOptions
    name: WebApiOptions
    nameWithType: WebApiOptions
    fullName: SuperOffice.WebApi.WebApiOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.SendRequest(System.Net.Http.HttpRequestMessage,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.SendRequest(System.Net.Http.HttpRequestMessage,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: SendRequest(HttpRequestMessage, RequestOptions)
  nameWithType: AgentBase.SendRequest(HttpRequestMessage, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AgentBase.SendRequest(System.Net.Http.HttpRequestMessage, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.SendRequest(System.Net.Http.HttpRequestMessage,SuperOffice.WebApi.RequestOptions)
    name: SendRequest
    nameWithType: AgentBase.SendRequest
    fullName: SuperOffice.WebApi.Agents.AgentBase.SendRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.SendRequest(System.Net.Http.HttpRequestMessage,SuperOffice.WebApi.RequestOptions)
    name: SendRequest
    nameWithType: AgentBase.SendRequest
    fullName: SuperOffice.WebApi.Agents.AgentBase.SendRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: ThrowOnResponseError(HttpRequestMessage, HttpResponseMessage)
  nameWithType: AgentBase.ThrowOnResponseError(HttpRequestMessage, HttpResponseMessage)
  fullName: SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError(System.Net.Http.HttpRequestMessage, System.Net.Http.HttpResponseMessage)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage)
    name: ThrowOnResponseError
    nameWithType: AgentBase.ThrowOnResponseError
    fullName: SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage)
    name: ThrowOnResponseError
    nameWithType: AgentBase.ThrowOnResponseError
    fullName: SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.ParseResponse``1(System.Net.Http.HttpResponseMessage)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.ParseResponse``1(System.Net.Http.HttpResponseMessage)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: ParseResponse<T>(HttpResponseMessage)
  nameWithType: AgentBase.ParseResponse<T>(HttpResponseMessage)
  fullName: SuperOffice.WebApi.Agents.AgentBase.ParseResponse<T>(System.Net.Http.HttpResponseMessage)
  nameWithType.vb: AgentBase.ParseResponse(Of T)(HttpResponseMessage)
  fullName.vb: SuperOffice.WebApi.Agents.AgentBase.ParseResponse(Of T)(System.Net.Http.HttpResponseMessage)
  name.vb: ParseResponse(Of T)(HttpResponseMessage)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.ParseResponse``1(System.Net.Http.HttpResponseMessage)
    name: ParseResponse<T>
    nameWithType: AgentBase.ParseResponse<T>
    fullName: SuperOffice.WebApi.Agents.AgentBase.ParseResponse<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.ParseResponse``1(System.Net.Http.HttpResponseMessage)
    name: ParseResponse(Of T)
    nameWithType: AgentBase.ParseResponse(Of T)
    fullName: SuperOffice.WebApi.Agents.AgentBase.ParseResponse(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.Finally(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.Finally(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: Finally(RequestOptions)
  nameWithType: AgentBase.Finally(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AgentBase.Finally(SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.Finally(SuperOffice.WebApi.RequestOptions)
    name: Finally
    nameWithType: AgentBase.Finally
    fullName: SuperOffice.WebApi.Agents.AgentBase.Finally
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.Finally(SuperOffice.WebApi.RequestOptions)
    name: Finally
    nameWithType: AgentBase.Finally
    fullName: SuperOffice.WebApi.Agents.AgentBase.Finally
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.Dispose
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.Dispose
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: Dispose()
  nameWithType: AgentBase.Dispose()
  fullName: SuperOffice.WebApi.Agents.AgentBase.Dispose()
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.Dispose
    name: Dispose
    nameWithType: AgentBase.Dispose
    fullName: SuperOffice.WebApi.Agents.AgentBase.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.Dispose
    name: Dispose
    nameWithType: AgentBase.Dispose
    fullName: SuperOffice.WebApi.Agents.AgentBase.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.Configuration
  commentId: P:SuperOffice.WebApi.Agents.AgentBase.Configuration
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: Configuration
  nameWithType: AgentBase.Configuration
  fullName: SuperOffice.WebApi.Agents.AgentBase.Configuration
- uid: SuperOffice.WebApi.Agents.AgentBase.Client
  commentId: P:SuperOffice.WebApi.Agents.AgentBase.Client
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: Client
  nameWithType: AgentBase.Client
  fullName: SuperOffice.WebApi.Agents.AgentBase.Client
- uid: SuperOffice.WebApi.Agents.AgentBase.HasRunningRequest
  commentId: P:SuperOffice.WebApi.Agents.AgentBase.HasRunningRequest
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: HasRunningRequest
  nameWithType: AgentBase.HasRunningRequest
  fullName: SuperOffice.WebApi.Agents.AgentBase.HasRunningRequest
- uid: SuperOffice.WebApi.Agents.AgentBase.ClientCancellationTokenSource
  commentId: P:SuperOffice.WebApi.Agents.AgentBase.ClientCancellationTokenSource
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: ClientCancellationTokenSource
  nameWithType: AgentBase.ClientCancellationTokenSource
  fullName: SuperOffice.WebApi.Agents.AgentBase.ClientCancellationTokenSource
- uid: SuperOffice.WebApi.Agents.AgentBase.ProgressListener
  commentId: P:SuperOffice.WebApi.Agents.AgentBase.ProgressListener
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: ProgressListener
  nameWithType: AgentBase.ProgressListener
  fullName: SuperOffice.WebApi.Agents.AgentBase.ProgressListener
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.WebApi.Agents.ListAgent.#ctor*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.#ctor
  isExternal: true
  name: ListAgent
  nameWithType: ListAgent.ListAgent
  fullName: SuperOffice.WebApi.Agents.ListAgent.ListAgent
- uid: System.Net.Http.HttpClient
  isExternal: true
  name: HttpClient
  nameWithType: HttpClient
  fullName: System.Net.Http.HttpClient
- uid: SuperOffice.WebApi.WebApiOptions
  commentId: T:SuperOffice.WebApi.WebApiOptions
  parent: SuperOffice.WebApi
  isExternal: true
  name: WebApiOptions
  nameWithType: WebApiOptions
  fullName: SuperOffice.WebApi.WebApiOptions
- uid: SuperOffice.WebApi
  commentId: N:SuperOffice.WebApi
  isExternal: true
  name: SuperOffice.WebApi
  nameWithType: SuperOffice.WebApi
  fullName: SuperOffice.WebApi
- uid: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultCurrencyEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.CreateDefaultCurrencyEntityAsync
  isExternal: true
  name: CreateDefaultCurrencyEntityAsync
  nameWithType: ListAgent.CreateDefaultCurrencyEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultCurrencyEntityAsync
- uid: SuperOffice.WebApi.RequestOptions
  commentId: T:SuperOffice.WebApi.RequestOptions
  parent: SuperOffice.WebApi
  isExternal: true
  name: RequestOptions
  nameWithType: RequestOptions
  fullName: SuperOffice.WebApi.RequestOptions
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.CurrencyEntity}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.CurrencyEntity}'
  definition: System.Threading.Tasks.Task`1
  name: Task<CurrencyEntity>
  nameWithType: Task<CurrencyEntity>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.CurrencyEntity>
  nameWithType.vb: Task(Of CurrencyEntity)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.CurrencyEntity)
  name.vb: Task(Of CurrencyEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.CurrencyEntity
    name: CurrencyEntity
    nameWithType: CurrencyEntity
    fullName: SuperOffice.WebApi.Data.CurrencyEntity
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.CurrencyEntity
    name: CurrencyEntity
    nameWithType: CurrencyEntity
    fullName: SuperOffice.WebApi.Data.CurrencyEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveCurrencyEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SaveCurrencyEntityAsync
  isExternal: true
  name: SaveCurrencyEntityAsync
  nameWithType: ListAgent.SaveCurrencyEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveCurrencyEntityAsync
- uid: SuperOffice.WebApi.Data.CurrencyEntity
  commentId: T:SuperOffice.WebApi.Data.CurrencyEntity
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: CurrencyEntity
  nameWithType: CurrencyEntity
  fullName: SuperOffice.WebApi.Data.CurrencyEntity
- uid: SuperOffice.WebApi.Data
  commentId: N:SuperOffice.WebApi.Data
  isExternal: true
  name: SuperOffice.WebApi.Data
  nameWithType: SuperOffice.WebApi.Data
  fullName: SuperOffice.WebApi.Data
- uid: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultAmountClassEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.CreateDefaultAmountClassEntityAsync
  isExternal: true
  name: CreateDefaultAmountClassEntityAsync
  nameWithType: ListAgent.CreateDefaultAmountClassEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultAmountClassEntityAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AmountClassEntity}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.AmountClassEntity}'
  definition: System.Threading.Tasks.Task`1
  name: Task<AmountClassEntity>
  nameWithType: Task<AmountClassEntity>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.AmountClassEntity>
  nameWithType.vb: Task(Of AmountClassEntity)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.AmountClassEntity)
  name.vb: Task(Of AmountClassEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.AmountClassEntity
    name: AmountClassEntity
    nameWithType: AmountClassEntity
    fullName: SuperOffice.WebApi.Data.AmountClassEntity
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.AmountClassEntity
    name: AmountClassEntity
    nameWithType: AmountClassEntity
    fullName: SuperOffice.WebApi.Data.AmountClassEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveAmountClassEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SaveAmountClassEntityAsync
  isExternal: true
  name: SaveAmountClassEntityAsync
  nameWithType: ListAgent.SaveAmountClassEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveAmountClassEntityAsync
- uid: SuperOffice.WebApi.Data.AmountClassEntity
  commentId: T:SuperOffice.WebApi.Data.AmountClassEntity
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: AmountClassEntity
  nameWithType: AmountClassEntity
  fullName: SuperOffice.WebApi.Data.AmountClassEntity
- uid: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultHeadingEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.CreateDefaultHeadingEntityAsync
  isExternal: true
  name: CreateDefaultHeadingEntityAsync
  nameWithType: ListAgent.CreateDefaultHeadingEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultHeadingEntityAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.HeadingEntity}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.HeadingEntity}'
  definition: System.Threading.Tasks.Task`1
  name: Task<HeadingEntity>
  nameWithType: Task<HeadingEntity>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.HeadingEntity>
  nameWithType.vb: Task(Of HeadingEntity)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.HeadingEntity)
  name.vb: Task(Of HeadingEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.HeadingEntity
    name: HeadingEntity
    nameWithType: HeadingEntity
    fullName: SuperOffice.WebApi.Data.HeadingEntity
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.HeadingEntity
    name: HeadingEntity
    nameWithType: HeadingEntity
    fullName: SuperOffice.WebApi.Data.HeadingEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveHeadingEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SaveHeadingEntityAsync
  isExternal: true
  name: SaveHeadingEntityAsync
  nameWithType: ListAgent.SaveHeadingEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveHeadingEntityAsync
- uid: SuperOffice.WebApi.Data.HeadingEntity
  commentId: T:SuperOffice.WebApi.Data.HeadingEntity
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: HeadingEntity
  nameWithType: HeadingEntity
  fullName: SuperOffice.WebApi.Data.HeadingEntity
- uid: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultListEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.CreateDefaultListEntityAsync
  isExternal: true
  name: CreateDefaultListEntityAsync
  nameWithType: ListAgent.CreateDefaultListEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultListEntityAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ListEntity}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ListEntity}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ListEntity>
  nameWithType: Task<ListEntity>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.ListEntity>
  nameWithType.vb: Task(Of ListEntity)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.ListEntity)
  name.vb: Task(Of ListEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.ListEntity
    name: ListEntity
    nameWithType: ListEntity
    fullName: SuperOffice.WebApi.Data.ListEntity
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.ListEntity
    name: ListEntity
    nameWithType: ListEntity
    fullName: SuperOffice.WebApi.Data.ListEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveListEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SaveListEntityAsync
  isExternal: true
  name: SaveListEntityAsync
  nameWithType: ListAgent.SaveListEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveListEntityAsync
- uid: SuperOffice.WebApi.Data.ListEntity
  commentId: T:SuperOffice.WebApi.Data.ListEntity
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: ListEntity
  nameWithType: ListEntity
  fullName: SuperOffice.WebApi.Data.ListEntity
- uid: SuperOffice.WebApi.Agents.ListAgent.DeleteListEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.DeleteListEntityAsync
  isExternal: true
  name: DeleteListEntityAsync
  nameWithType: ListAgent.DeleteListEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.DeleteListEntityAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultListItemEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.CreateDefaultListItemEntityAsync
  isExternal: true
  name: CreateDefaultListItemEntityAsync
  nameWithType: ListAgent.CreateDefaultListItemEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultListItemEntityAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ListItemEntity}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ListItemEntity}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ListItemEntity>
  nameWithType: Task<ListItemEntity>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.ListItemEntity>
  nameWithType.vb: Task(Of ListItemEntity)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.ListItemEntity)
  name.vb: Task(Of ListItemEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.ListItemEntity
    name: ListItemEntity
    nameWithType: ListItemEntity
    fullName: SuperOffice.WebApi.Data.ListItemEntity
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.ListItemEntity
    name: ListItemEntity
    nameWithType: ListItemEntity
    fullName: SuperOffice.WebApi.Data.ListItemEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultHierarchyEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.CreateDefaultHierarchyEntityAsync
  isExternal: true
  name: CreateDefaultHierarchyEntityAsync
  nameWithType: ListAgent.CreateDefaultHierarchyEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultHierarchyEntityAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.HierarchyEntity}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.HierarchyEntity}'
  definition: System.Threading.Tasks.Task`1
  name: Task<HierarchyEntity>
  nameWithType: Task<HierarchyEntity>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.HierarchyEntity>
  nameWithType.vb: Task(Of HierarchyEntity)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.HierarchyEntity)
  name.vb: Task(Of HierarchyEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.HierarchyEntity
    name: HierarchyEntity
    nameWithType: HierarchyEntity
    fullName: SuperOffice.WebApi.Data.HierarchyEntity
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.HierarchyEntity
    name: HierarchyEntity
    nameWithType: HierarchyEntity
    fullName: SuperOffice.WebApi.Data.HierarchyEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveHierarchyEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SaveHierarchyEntityAsync
  isExternal: true
  name: SaveHierarchyEntityAsync
  nameWithType: ListAgent.SaveHierarchyEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveHierarchyEntityAsync
- uid: SuperOffice.WebApi.Data.HierarchyEntity
  commentId: T:SuperOffice.WebApi.Data.HierarchyEntity
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: HierarchyEntity
  nameWithType: HierarchyEntity
  fullName: SuperOffice.WebApi.Data.HierarchyEntity
- uid: SuperOffice.WebApi.Agents.ListAgent.DeleteHierarchyEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.DeleteHierarchyEntityAsync
  isExternal: true
  name: DeleteHierarchyEntityAsync
  nameWithType: ListAgent.DeleteHierarchyEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.DeleteHierarchyEntityAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultProjectTypeEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.CreateDefaultProjectTypeEntityAsync
  isExternal: true
  name: CreateDefaultProjectTypeEntityAsync
  nameWithType: ListAgent.CreateDefaultProjectTypeEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultProjectTypeEntityAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ProjectTypeEntity}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ProjectTypeEntity}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ProjectTypeEntity>
  nameWithType: Task<ProjectTypeEntity>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.ProjectTypeEntity>
  nameWithType.vb: Task(Of ProjectTypeEntity)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.ProjectTypeEntity)
  name.vb: Task(Of ProjectTypeEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.ProjectTypeEntity
    name: ProjectTypeEntity
    nameWithType: ProjectTypeEntity
    fullName: SuperOffice.WebApi.Data.ProjectTypeEntity
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.ProjectTypeEntity
    name: ProjectTypeEntity
    nameWithType: ProjectTypeEntity
    fullName: SuperOffice.WebApi.Data.ProjectTypeEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveProjectTypeEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SaveProjectTypeEntityAsync
  isExternal: true
  name: SaveProjectTypeEntityAsync
  nameWithType: ListAgent.SaveProjectTypeEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveProjectTypeEntityAsync
- uid: SuperOffice.WebApi.Data.ProjectTypeEntity
  commentId: T:SuperOffice.WebApi.Data.ProjectTypeEntity
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: ProjectTypeEntity
  nameWithType: ProjectTypeEntity
  fullName: SuperOffice.WebApi.Data.ProjectTypeEntity
- uid: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultResourceEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.CreateDefaultResourceEntityAsync
  isExternal: true
  name: CreateDefaultResourceEntityAsync
  nameWithType: ListAgent.CreateDefaultResourceEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultResourceEntityAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ResourceEntity}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ResourceEntity}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ResourceEntity>
  nameWithType: Task<ResourceEntity>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.ResourceEntity>
  nameWithType.vb: Task(Of ResourceEntity)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.ResourceEntity)
  name.vb: Task(Of ResourceEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.ResourceEntity
    name: ResourceEntity
    nameWithType: ResourceEntity
    fullName: SuperOffice.WebApi.Data.ResourceEntity
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.ResourceEntity
    name: ResourceEntity
    nameWithType: ResourceEntity
    fullName: SuperOffice.WebApi.Data.ResourceEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveResourceEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SaveResourceEntityAsync
  isExternal: true
  name: SaveResourceEntityAsync
  nameWithType: ListAgent.SaveResourceEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveResourceEntityAsync
- uid: SuperOffice.WebApi.Data.ResourceEntity
  commentId: T:SuperOffice.WebApi.Data.ResourceEntity
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: ResourceEntity
  nameWithType: ResourceEntity
  fullName: SuperOffice.WebApi.Data.ResourceEntity
- uid: SuperOffice.WebApi.Agents.ListAgent.DeleteResourceEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.DeleteResourceEntityAsync
  isExternal: true
  name: DeleteResourceEntityAsync
  nameWithType: ListAgent.DeleteResourceEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.DeleteResourceEntityAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultSaleStageEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.CreateDefaultSaleStageEntityAsync
  isExternal: true
  name: CreateDefaultSaleStageEntityAsync
  nameWithType: ListAgent.CreateDefaultSaleStageEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultSaleStageEntityAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SaleStageEntity}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SaleStageEntity}'
  definition: System.Threading.Tasks.Task`1
  name: Task<SaleStageEntity>
  nameWithType: Task<SaleStageEntity>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.SaleStageEntity>
  nameWithType.vb: Task(Of SaleStageEntity)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.SaleStageEntity)
  name.vb: Task(Of SaleStageEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.SaleStageEntity
    name: SaleStageEntity
    nameWithType: SaleStageEntity
    fullName: SuperOffice.WebApi.Data.SaleStageEntity
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.SaleStageEntity
    name: SaleStageEntity
    nameWithType: SaleStageEntity
    fullName: SuperOffice.WebApi.Data.SaleStageEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveSaleStageEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SaveSaleStageEntityAsync
  isExternal: true
  name: SaveSaleStageEntityAsync
  nameWithType: ListAgent.SaveSaleStageEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveSaleStageEntityAsync
- uid: SuperOffice.WebApi.Data.SaleStageEntity
  commentId: T:SuperOffice.WebApi.Data.SaleStageEntity
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: SaleStageEntity
  nameWithType: SaleStageEntity
  fullName: SuperOffice.WebApi.Data.SaleStageEntity
- uid: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultSaleTypeEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.CreateDefaultSaleTypeEntityAsync
  isExternal: true
  name: CreateDefaultSaleTypeEntityAsync
  nameWithType: ListAgent.CreateDefaultSaleTypeEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultSaleTypeEntityAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SaleTypeEntity}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SaleTypeEntity}'
  definition: System.Threading.Tasks.Task`1
  name: Task<SaleTypeEntity>
  nameWithType: Task<SaleTypeEntity>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.SaleTypeEntity>
  nameWithType.vb: Task(Of SaleTypeEntity)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.SaleTypeEntity)
  name.vb: Task(Of SaleTypeEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.SaleTypeEntity
    name: SaleTypeEntity
    nameWithType: SaleTypeEntity
    fullName: SuperOffice.WebApi.Data.SaleTypeEntity
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.SaleTypeEntity
    name: SaleTypeEntity
    nameWithType: SaleTypeEntity
    fullName: SuperOffice.WebApi.Data.SaleTypeEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveSaleTypeEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SaveSaleTypeEntityAsync
  isExternal: true
  name: SaveSaleTypeEntityAsync
  nameWithType: ListAgent.SaveSaleTypeEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveSaleTypeEntityAsync
- uid: SuperOffice.WebApi.Data.SaleTypeEntity
  commentId: T:SuperOffice.WebApi.Data.SaleTypeEntity
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: SaleTypeEntity
  nameWithType: SaleTypeEntity
  fullName: SuperOffice.WebApi.Data.SaleTypeEntity
- uid: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultWebPanelEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.CreateDefaultWebPanelEntityAsync
  isExternal: true
  name: CreateDefaultWebPanelEntityAsync
  nameWithType: ListAgent.CreateDefaultWebPanelEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultWebPanelEntityAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.WebPanelEntity}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.WebPanelEntity}'
  definition: System.Threading.Tasks.Task`1
  name: Task<WebPanelEntity>
  nameWithType: Task<WebPanelEntity>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.WebPanelEntity>
  nameWithType.vb: Task(Of WebPanelEntity)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.WebPanelEntity)
  name.vb: Task(Of WebPanelEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.WebPanelEntity
    name: WebPanelEntity
    nameWithType: WebPanelEntity
    fullName: SuperOffice.WebApi.Data.WebPanelEntity
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.WebPanelEntity
    name: WebPanelEntity
    nameWithType: WebPanelEntity
    fullName: SuperOffice.WebApi.Data.WebPanelEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveWebPanelEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SaveWebPanelEntityAsync
  isExternal: true
  name: SaveWebPanelEntityAsync
  nameWithType: ListAgent.SaveWebPanelEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveWebPanelEntityAsync
- uid: SuperOffice.WebApi.Data.WebPanelEntity
  commentId: T:SuperOffice.WebApi.Data.WebPanelEntity
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: WebPanelEntity
  nameWithType: WebPanelEntity
  fullName: SuperOffice.WebApi.Data.WebPanelEntity
- uid: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultExtAppEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.CreateDefaultExtAppEntityAsync
  isExternal: true
  name: CreateDefaultExtAppEntityAsync
  nameWithType: ListAgent.CreateDefaultExtAppEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultExtAppEntityAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ExtAppEntity}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ExtAppEntity}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ExtAppEntity>
  nameWithType: Task<ExtAppEntity>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.ExtAppEntity>
  nameWithType.vb: Task(Of ExtAppEntity)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.ExtAppEntity)
  name.vb: Task(Of ExtAppEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.ExtAppEntity
    name: ExtAppEntity
    nameWithType: ExtAppEntity
    fullName: SuperOffice.WebApi.Data.ExtAppEntity
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.ExtAppEntity
    name: ExtAppEntity
    nameWithType: ExtAppEntity
    fullName: SuperOffice.WebApi.Data.ExtAppEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveExtAppEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SaveExtAppEntityAsync
  isExternal: true
  name: SaveExtAppEntityAsync
  nameWithType: ListAgent.SaveExtAppEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveExtAppEntityAsync
- uid: SuperOffice.WebApi.Data.ExtAppEntity
  commentId: T:SuperOffice.WebApi.Data.ExtAppEntity
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: ExtAppEntity
  nameWithType: ExtAppEntity
  fullName: SuperOffice.WebApi.Data.ExtAppEntity
- uid: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultDocumentTemplateEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.CreateDefaultDocumentTemplateEntityAsync
  isExternal: true
  name: CreateDefaultDocumentTemplateEntityAsync
  nameWithType: ListAgent.CreateDefaultDocumentTemplateEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultDocumentTemplateEntityAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DocumentTemplateEntity}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DocumentTemplateEntity}'
  definition: System.Threading.Tasks.Task`1
  name: Task<DocumentTemplateEntity>
  nameWithType: Task<DocumentTemplateEntity>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.DocumentTemplateEntity>
  nameWithType.vb: Task(Of DocumentTemplateEntity)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.DocumentTemplateEntity)
  name.vb: Task(Of DocumentTemplateEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.DocumentTemplateEntity
    name: DocumentTemplateEntity
    nameWithType: DocumentTemplateEntity
    fullName: SuperOffice.WebApi.Data.DocumentTemplateEntity
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.DocumentTemplateEntity
    name: DocumentTemplateEntity
    nameWithType: DocumentTemplateEntity
    fullName: SuperOffice.WebApi.Data.DocumentTemplateEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveDocumentTemplateEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SaveDocumentTemplateEntityAsync
  isExternal: true
  name: SaveDocumentTemplateEntityAsync
  nameWithType: ListAgent.SaveDocumentTemplateEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveDocumentTemplateEntityAsync
- uid: SuperOffice.WebApi.Data.DocumentTemplateEntity
  commentId: T:SuperOffice.WebApi.Data.DocumentTemplateEntity
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: DocumentTemplateEntity
  nameWithType: DocumentTemplateEntity
  fullName: SuperOffice.WebApi.Data.DocumentTemplateEntity
- uid: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultRelationDefinitionEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.CreateDefaultRelationDefinitionEntityAsync
  isExternal: true
  name: CreateDefaultRelationDefinitionEntityAsync
  nameWithType: ListAgent.CreateDefaultRelationDefinitionEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultRelationDefinitionEntityAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.RelationDefinitionEntity}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.RelationDefinitionEntity}'
  definition: System.Threading.Tasks.Task`1
  name: Task<RelationDefinitionEntity>
  nameWithType: Task<RelationDefinitionEntity>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.RelationDefinitionEntity>
  nameWithType.vb: Task(Of RelationDefinitionEntity)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.RelationDefinitionEntity)
  name.vb: Task(Of RelationDefinitionEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.RelationDefinitionEntity
    name: RelationDefinitionEntity
    nameWithType: RelationDefinitionEntity
    fullName: SuperOffice.WebApi.Data.RelationDefinitionEntity
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.RelationDefinitionEntity
    name: RelationDefinitionEntity
    nameWithType: RelationDefinitionEntity
    fullName: SuperOffice.WebApi.Data.RelationDefinitionEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveRelationDefinitionEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SaveRelationDefinitionEntityAsync
  isExternal: true
  name: SaveRelationDefinitionEntityAsync
  nameWithType: ListAgent.SaveRelationDefinitionEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveRelationDefinitionEntityAsync
- uid: SuperOffice.WebApi.Data.RelationDefinitionEntity
  commentId: T:SuperOffice.WebApi.Data.RelationDefinitionEntity
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: RelationDefinitionEntity
  nameWithType: RelationDefinitionEntity
  fullName: SuperOffice.WebApi.Data.RelationDefinitionEntity
- uid: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultTicketCategoryEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.CreateDefaultTicketCategoryEntityAsync
  isExternal: true
  name: CreateDefaultTicketCategoryEntityAsync
  nameWithType: ListAgent.CreateDefaultTicketCategoryEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultTicketCategoryEntityAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketCategoryEntity}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketCategoryEntity}'
  definition: System.Threading.Tasks.Task`1
  name: Task<TicketCategoryEntity>
  nameWithType: Task<TicketCategoryEntity>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.TicketCategoryEntity>
  nameWithType.vb: Task(Of TicketCategoryEntity)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.TicketCategoryEntity)
  name.vb: Task(Of TicketCategoryEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.TicketCategoryEntity
    name: TicketCategoryEntity
    nameWithType: TicketCategoryEntity
    fullName: SuperOffice.WebApi.Data.TicketCategoryEntity
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.TicketCategoryEntity
    name: TicketCategoryEntity
    nameWithType: TicketCategoryEntity
    fullName: SuperOffice.WebApi.Data.TicketCategoryEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveTicketCategoryEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SaveTicketCategoryEntityAsync
  isExternal: true
  name: SaveTicketCategoryEntityAsync
  nameWithType: ListAgent.SaveTicketCategoryEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveTicketCategoryEntityAsync
- uid: SuperOffice.WebApi.Data.TicketCategoryEntity
  commentId: T:SuperOffice.WebApi.Data.TicketCategoryEntity
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: TicketCategoryEntity
  nameWithType: TicketCategoryEntity
  fullName: SuperOffice.WebApi.Data.TicketCategoryEntity
- uid: SuperOffice.WebApi.Agents.ListAgent.DeleteTicketCategoryEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.DeleteTicketCategoryEntityAsync
  isExternal: true
  name: DeleteTicketCategoryEntityAsync
  nameWithType: ListAgent.DeleteTicketCategoryEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.DeleteTicketCategoryEntityAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultTicketPriorityEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.CreateDefaultTicketPriorityEntityAsync
  isExternal: true
  name: CreateDefaultTicketPriorityEntityAsync
  nameWithType: ListAgent.CreateDefaultTicketPriorityEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultTicketPriorityEntityAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketPriorityEntity}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketPriorityEntity}'
  definition: System.Threading.Tasks.Task`1
  name: Task<TicketPriorityEntity>
  nameWithType: Task<TicketPriorityEntity>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.TicketPriorityEntity>
  nameWithType.vb: Task(Of TicketPriorityEntity)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.TicketPriorityEntity)
  name.vb: Task(Of TicketPriorityEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.TicketPriorityEntity
    name: TicketPriorityEntity
    nameWithType: TicketPriorityEntity
    fullName: SuperOffice.WebApi.Data.TicketPriorityEntity
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.TicketPriorityEntity
    name: TicketPriorityEntity
    nameWithType: TicketPriorityEntity
    fullName: SuperOffice.WebApi.Data.TicketPriorityEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveTicketPriorityEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SaveTicketPriorityEntityAsync
  isExternal: true
  name: SaveTicketPriorityEntityAsync
  nameWithType: ListAgent.SaveTicketPriorityEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveTicketPriorityEntityAsync
- uid: SuperOffice.WebApi.Data.TicketPriorityEntity
  commentId: T:SuperOffice.WebApi.Data.TicketPriorityEntity
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: TicketPriorityEntity
  nameWithType: TicketPriorityEntity
  fullName: SuperOffice.WebApi.Data.TicketPriorityEntity
- uid: SuperOffice.WebApi.Agents.ListAgent.DeleteTicketPriorityEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.DeleteTicketPriorityEntityAsync
  isExternal: true
  name: DeleteTicketPriorityEntityAsync
  nameWithType: ListAgent.DeleteTicketPriorityEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.DeleteTicketPriorityEntityAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultTicketStatusEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.CreateDefaultTicketStatusEntityAsync
  isExternal: true
  name: CreateDefaultTicketStatusEntityAsync
  nameWithType: ListAgent.CreateDefaultTicketStatusEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultTicketStatusEntityAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketStatusEntity}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketStatusEntity}'
  definition: System.Threading.Tasks.Task`1
  name: Task<TicketStatusEntity>
  nameWithType: Task<TicketStatusEntity>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.TicketStatusEntity>
  nameWithType.vb: Task(Of TicketStatusEntity)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.TicketStatusEntity)
  name.vb: Task(Of TicketStatusEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.TicketStatusEntity
    name: TicketStatusEntity
    nameWithType: TicketStatusEntity
    fullName: SuperOffice.WebApi.Data.TicketStatusEntity
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.TicketStatusEntity
    name: TicketStatusEntity
    nameWithType: TicketStatusEntity
    fullName: SuperOffice.WebApi.Data.TicketStatusEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveTicketStatusEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SaveTicketStatusEntityAsync
  isExternal: true
  name: SaveTicketStatusEntityAsync
  nameWithType: ListAgent.SaveTicketStatusEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveTicketStatusEntityAsync
- uid: SuperOffice.WebApi.Data.TicketStatusEntity
  commentId: T:SuperOffice.WebApi.Data.TicketStatusEntity
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: TicketStatusEntity
  nameWithType: TicketStatusEntity
  fullName: SuperOffice.WebApi.Data.TicketStatusEntity
- uid: SuperOffice.WebApi.Agents.ListAgent.DeleteTicketStatusEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.DeleteTicketStatusEntityAsync
  isExternal: true
  name: DeleteTicketStatusEntityAsync
  nameWithType: ListAgent.DeleteTicketStatusEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.DeleteTicketStatusEntityAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetBusinessAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetBusinessAsync
  isExternal: true
  name: GetBusinessAsync
  nameWithType: ListAgent.GetBusinessAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetBusinessAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Business}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Business}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Business>
  nameWithType: Task<Business>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.Business>
  nameWithType.vb: Task(Of Business)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.Business)
  name.vb: Task(Of Business)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.Business
    name: Business
    nameWithType: Business
    fullName: SuperOffice.WebApi.Data.Business
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.Business
    name: Business
    nameWithType: Business
    fullName: SuperOffice.WebApi.Data.Business
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetBusinessListAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetBusinessListAsync
  isExternal: true
  name: GetBusinessListAsync
  nameWithType: ListAgent.GetBusinessListAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetBusinessListAsync
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Business[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Business[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Business[]>
  nameWithType: Task<Business[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.Business[]>
  nameWithType.vb: Task(Of Business())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.Business())
  name.vb: Task(Of Business())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.Business
    name: Business
    nameWithType: Business
    fullName: SuperOffice.WebApi.Data.Business
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.Business
    name: Business
    nameWithType: Business
    fullName: SuperOffice.WebApi.Data.Business
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetBusinessesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetBusinessesAsync
  isExternal: true
  name: GetBusinessesAsync
  nameWithType: ListAgent.GetBusinessesAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetBusinessesAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetCategoryAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetCategoryAsync
  isExternal: true
  name: GetCategoryAsync
  nameWithType: ListAgent.GetCategoryAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetCategoryAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Category}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Category}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Category>
  nameWithType: Task<Category>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.Category>
  nameWithType.vb: Task(Of Category)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.Category)
  name.vb: Task(Of Category)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.Category
    name: Category
    nameWithType: Category
    fullName: SuperOffice.WebApi.Data.Category
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.Category
    name: Category
    nameWithType: Category
    fullName: SuperOffice.WebApi.Data.Category
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetCategoryListAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetCategoryListAsync
  isExternal: true
  name: GetCategoryListAsync
  nameWithType: ListAgent.GetCategoryListAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetCategoryListAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Category[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Category[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Category[]>
  nameWithType: Task<Category[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.Category[]>
  nameWithType.vb: Task(Of Category())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.Category())
  name.vb: Task(Of Category())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.Category
    name: Category
    nameWithType: Category
    fullName: SuperOffice.WebApi.Data.Category
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.Category
    name: Category
    nameWithType: Category
    fullName: SuperOffice.WebApi.Data.Category
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetCategoriesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetCategoriesAsync
  isExternal: true
  name: GetCategoriesAsync
  nameWithType: ListAgent.GetCategoriesAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetCategoriesAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetCompetitorAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetCompetitorAsync
  isExternal: true
  name: GetCompetitorAsync
  nameWithType: ListAgent.GetCompetitorAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetCompetitorAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Competitor}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Competitor}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Competitor>
  nameWithType: Task<Competitor>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.Competitor>
  nameWithType.vb: Task(Of Competitor)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.Competitor)
  name.vb: Task(Of Competitor)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.Competitor
    name: Competitor
    nameWithType: Competitor
    fullName: SuperOffice.WebApi.Data.Competitor
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.Competitor
    name: Competitor
    nameWithType: Competitor
    fullName: SuperOffice.WebApi.Data.Competitor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetCompetitorListAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetCompetitorListAsync
  isExternal: true
  name: GetCompetitorListAsync
  nameWithType: ListAgent.GetCompetitorListAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetCompetitorListAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Competitor[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Competitor[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Competitor[]>
  nameWithType: Task<Competitor[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.Competitor[]>
  nameWithType.vb: Task(Of Competitor())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.Competitor())
  name.vb: Task(Of Competitor())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.Competitor
    name: Competitor
    nameWithType: Competitor
    fullName: SuperOffice.WebApi.Data.Competitor
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.Competitor
    name: Competitor
    nameWithType: Competitor
    fullName: SuperOffice.WebApi.Data.Competitor
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetCompetitorsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetCompetitorsAsync
  isExternal: true
  name: GetCompetitorsAsync
  nameWithType: ListAgent.GetCompetitorsAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetCompetitorsAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetCountryAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetCountryAsync
  isExternal: true
  name: GetCountryAsync
  nameWithType: ListAgent.GetCountryAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetCountryAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Country}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Country}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Country>
  nameWithType: Task<Country>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.Country>
  nameWithType.vb: Task(Of Country)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.Country)
  name.vb: Task(Of Country)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.Country
    name: Country
    nameWithType: Country
    fullName: SuperOffice.WebApi.Data.Country
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.Country
    name: Country
    nameWithType: Country
    fullName: SuperOffice.WebApi.Data.Country
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveCountryAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SaveCountryAsync
  isExternal: true
  name: SaveCountryAsync
  nameWithType: ListAgent.SaveCountryAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveCountryAsync
- uid: SuperOffice.WebApi.Data.Country
  commentId: T:SuperOffice.WebApi.Data.Country
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: Country
  nameWithType: Country
  fullName: SuperOffice.WebApi.Data.Country
- uid: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultCountryAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.CreateDefaultCountryAsync
  isExternal: true
  name: CreateDefaultCountryAsync
  nameWithType: ListAgent.CreateDefaultCountryAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultCountryAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetCountryListAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetCountryListAsync
  isExternal: true
  name: GetCountryListAsync
  nameWithType: ListAgent.GetCountryListAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetCountryListAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Country[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Country[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Country[]>
  nameWithType: Task<Country[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.Country[]>
  nameWithType.vb: Task(Of Country())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.Country())
  name.vb: Task(Of Country())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.Country
    name: Country
    nameWithType: Country
    fullName: SuperOffice.WebApi.Data.Country
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.Country
    name: Country
    nameWithType: Country
    fullName: SuperOffice.WebApi.Data.Country
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetCountriesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetCountriesAsync
  isExternal: true
  name: GetCountriesAsync
  nameWithType: ListAgent.GetCountriesAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetCountriesAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetAllCountriesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetAllCountriesAsync
  isExternal: true
  name: GetAllCountriesAsync
  nameWithType: ListAgent.GetAllCountriesAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetAllCountriesAsync
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.WebApi.Agents.ListAgent.GetCreditedAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetCreditedAsync
  isExternal: true
  name: GetCreditedAsync
  nameWithType: ListAgent.GetCreditedAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetCreditedAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Credited}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Credited}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Credited>
  nameWithType: Task<Credited>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.Credited>
  nameWithType.vb: Task(Of Credited)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.Credited)
  name.vb: Task(Of Credited)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.Credited
    name: Credited
    nameWithType: Credited
    fullName: SuperOffice.WebApi.Data.Credited
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.Credited
    name: Credited
    nameWithType: Credited
    fullName: SuperOffice.WebApi.Data.Credited
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetCreditedListAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetCreditedListAsync
  isExternal: true
  name: GetCreditedListAsync
  nameWithType: ListAgent.GetCreditedListAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetCreditedListAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Credited[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Credited[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Credited[]>
  nameWithType: Task<Credited[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.Credited[]>
  nameWithType.vb: Task(Of Credited())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.Credited())
  name.vb: Task(Of Credited())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.Credited
    name: Credited
    nameWithType: Credited
    fullName: SuperOffice.WebApi.Data.Credited
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.Credited
    name: Credited
    nameWithType: Credited
    fullName: SuperOffice.WebApi.Data.Credited
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetCreditedsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetCreditedsAsync
  isExternal: true
  name: GetCreditedsAsync
  nameWithType: ListAgent.GetCreditedsAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetCreditedsAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetCurrencyAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetCurrencyAsync
  isExternal: true
  name: GetCurrencyAsync
  nameWithType: ListAgent.GetCurrencyAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetCurrencyAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Currency}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Currency}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Currency>
  nameWithType: Task<Currency>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.Currency>
  nameWithType.vb: Task(Of Currency)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.Currency)
  name.vb: Task(Of Currency)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.Currency
    name: Currency
    nameWithType: Currency
    fullName: SuperOffice.WebApi.Data.Currency
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.Currency
    name: Currency
    nameWithType: Currency
    fullName: SuperOffice.WebApi.Data.Currency
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetOurCurrencyAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetOurCurrencyAsync
  isExternal: true
  name: GetOurCurrencyAsync
  nameWithType: ListAgent.GetOurCurrencyAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetOurCurrencyAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.ChangeCurrencyAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.ChangeCurrencyAsync
  isExternal: true
  name: ChangeCurrencyAsync
  nameWithType: ListAgent.ChangeCurrencyAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.ChangeCurrencyAsync
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Task{System.Double}
  commentId: '!:System.Threading.Tasks.Task{System.Double}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Double>
  nameWithType: Task<Double>
  fullName: System.Threading.Tasks.Task<System.Double>
  nameWithType.vb: Task(Of Double)
  fullName.vb: System.Threading.Tasks.Task(Of System.Double)
  name.vb: Task(Of Double)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetOwnerCompanysCurrencyAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetOwnerCompanysCurrencyAsync
  isExternal: true
  name: GetOwnerCompanysCurrencyAsync
  nameWithType: ListAgent.GetOwnerCompanysCurrencyAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetOwnerCompanysCurrencyAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetCurrencyEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetCurrencyEntityAsync
  isExternal: true
  name: GetCurrencyEntityAsync
  nameWithType: ListAgent.GetCurrencyEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetCurrencyEntityAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetBaseCurrencyAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetBaseCurrencyAsync
  isExternal: true
  name: GetBaseCurrencyAsync
  nameWithType: ListAgent.GetBaseCurrencyAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetBaseCurrencyAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetAmountClassEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetAmountClassEntityAsync
  isExternal: true
  name: GetAmountClassEntityAsync
  nameWithType: ListAgent.GetAmountClassEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetAmountClassEntityAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetCurrencyListAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetCurrencyListAsync
  isExternal: true
  name: GetCurrencyListAsync
  nameWithType: ListAgent.GetCurrencyListAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetCurrencyListAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Currency[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Currency[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Currency[]>
  nameWithType: Task<Currency[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.Currency[]>
  nameWithType.vb: Task(Of Currency())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.Currency())
  name.vb: Task(Of Currency())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.Currency
    name: Currency
    nameWithType: Currency
    fullName: SuperOffice.WebApi.Data.Currency
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.Currency
    name: Currency
    nameWithType: Currency
    fullName: SuperOffice.WebApi.Data.Currency
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetCurrenciesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetCurrenciesAsync
  isExternal: true
  name: GetCurrenciesAsync
  nameWithType: ListAgent.GetCurrenciesAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetCurrenciesAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetAllCurrenciesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetAllCurrenciesAsync
  isExternal: true
  name: GetAllCurrenciesAsync
  nameWithType: ListAgent.GetAllCurrenciesAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetAllCurrenciesAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.CurrencyEntity[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.CurrencyEntity[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<CurrencyEntity[]>
  nameWithType: Task<CurrencyEntity[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.CurrencyEntity[]>
  nameWithType.vb: Task(Of CurrencyEntity())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.CurrencyEntity())
  name.vb: Task(Of CurrencyEntity())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.CurrencyEntity
    name: CurrencyEntity
    nameWithType: CurrencyEntity
    fullName: SuperOffice.WebApi.Data.CurrencyEntity
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.CurrencyEntity
    name: CurrencyEntity
    nameWithType: CurrencyEntity
    fullName: SuperOffice.WebApi.Data.CurrencyEntity
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetCustomerLanguageAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetCustomerLanguageAsync
  isExternal: true
  name: GetCustomerLanguageAsync
  nameWithType: ListAgent.GetCustomerLanguageAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetCustomerLanguageAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.CustomerLanguage}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.CustomerLanguage}'
  definition: System.Threading.Tasks.Task`1
  name: Task<CustomerLanguage>
  nameWithType: Task<CustomerLanguage>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.CustomerLanguage>
  nameWithType.vb: Task(Of CustomerLanguage)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.CustomerLanguage)
  name.vb: Task(Of CustomerLanguage)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.CustomerLanguage
    name: CustomerLanguage
    nameWithType: CustomerLanguage
    fullName: SuperOffice.WebApi.Data.CustomerLanguage
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.CustomerLanguage
    name: CustomerLanguage
    nameWithType: CustomerLanguage
    fullName: SuperOffice.WebApi.Data.CustomerLanguage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetCustomerLanguageListAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetCustomerLanguageListAsync
  isExternal: true
  name: GetCustomerLanguageListAsync
  nameWithType: ListAgent.GetCustomerLanguageListAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetCustomerLanguageListAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.CustomerLanguage[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.CustomerLanguage[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<CustomerLanguage[]>
  nameWithType: Task<CustomerLanguage[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.CustomerLanguage[]>
  nameWithType.vb: Task(Of CustomerLanguage())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.CustomerLanguage())
  name.vb: Task(Of CustomerLanguage())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.CustomerLanguage
    name: CustomerLanguage
    nameWithType: CustomerLanguage
    fullName: SuperOffice.WebApi.Data.CustomerLanguage
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.CustomerLanguage
    name: CustomerLanguage
    nameWithType: CustomerLanguage
    fullName: SuperOffice.WebApi.Data.CustomerLanguage
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetCustomerLanguagesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetCustomerLanguagesAsync
  isExternal: true
  name: GetCustomerLanguagesAsync
  nameWithType: ListAgent.GetCustomerLanguagesAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetCustomerLanguagesAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetDeliveryTermAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetDeliveryTermAsync
  isExternal: true
  name: GetDeliveryTermAsync
  nameWithType: ListAgent.GetDeliveryTermAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetDeliveryTermAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DeliveryTerm}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DeliveryTerm}'
  definition: System.Threading.Tasks.Task`1
  name: Task<DeliveryTerm>
  nameWithType: Task<DeliveryTerm>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.DeliveryTerm>
  nameWithType.vb: Task(Of DeliveryTerm)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.DeliveryTerm)
  name.vb: Task(Of DeliveryTerm)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.DeliveryTerm
    name: DeliveryTerm
    nameWithType: DeliveryTerm
    fullName: SuperOffice.WebApi.Data.DeliveryTerm
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.DeliveryTerm
    name: DeliveryTerm
    nameWithType: DeliveryTerm
    fullName: SuperOffice.WebApi.Data.DeliveryTerm
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetDeliveryTermsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetDeliveryTermsAsync
  isExternal: true
  name: GetDeliveryTermsAsync
  nameWithType: ListAgent.GetDeliveryTermsAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetDeliveryTermsAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DeliveryTerm[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DeliveryTerm[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<DeliveryTerm[]>
  nameWithType: Task<DeliveryTerm[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.DeliveryTerm[]>
  nameWithType.vb: Task(Of DeliveryTerm())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.DeliveryTerm())
  name.vb: Task(Of DeliveryTerm())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.DeliveryTerm
    name: DeliveryTerm
    nameWithType: DeliveryTerm
    fullName: SuperOffice.WebApi.Data.DeliveryTerm
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.DeliveryTerm
    name: DeliveryTerm
    nameWithType: DeliveryTerm
    fullName: SuperOffice.WebApi.Data.DeliveryTerm
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetDeliveryTypeAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetDeliveryTypeAsync
  isExternal: true
  name: GetDeliveryTypeAsync
  nameWithType: ListAgent.GetDeliveryTypeAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetDeliveryTypeAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DeliveryType}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DeliveryType}'
  definition: System.Threading.Tasks.Task`1
  name: Task<DeliveryType>
  nameWithType: Task<DeliveryType>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.DeliveryType>
  nameWithType.vb: Task(Of DeliveryType)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.DeliveryType)
  name.vb: Task(Of DeliveryType)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.DeliveryType
    name: DeliveryType
    nameWithType: DeliveryType
    fullName: SuperOffice.WebApi.Data.DeliveryType
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.DeliveryType
    name: DeliveryType
    nameWithType: DeliveryType
    fullName: SuperOffice.WebApi.Data.DeliveryType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetDeliveryTypesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetDeliveryTypesAsync
  isExternal: true
  name: GetDeliveryTypesAsync
  nameWithType: ListAgent.GetDeliveryTypesAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetDeliveryTypesAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DeliveryType[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DeliveryType[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<DeliveryType[]>
  nameWithType: Task<DeliveryType[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.DeliveryType[]>
  nameWithType.vb: Task(Of DeliveryType())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.DeliveryType())
  name.vb: Task(Of DeliveryType())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.DeliveryType
    name: DeliveryType
    nameWithType: DeliveryType
    fullName: SuperOffice.WebApi.Data.DeliveryType
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.DeliveryType
    name: DeliveryType
    nameWithType: DeliveryType
    fullName: SuperOffice.WebApi.Data.DeliveryType
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetPaymentTermAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetPaymentTermAsync
  isExternal: true
  name: GetPaymentTermAsync
  nameWithType: ListAgent.GetPaymentTermAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetPaymentTermAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.PaymentTerm}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.PaymentTerm}'
  definition: System.Threading.Tasks.Task`1
  name: Task<PaymentTerm>
  nameWithType: Task<PaymentTerm>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.PaymentTerm>
  nameWithType.vb: Task(Of PaymentTerm)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.PaymentTerm)
  name.vb: Task(Of PaymentTerm)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.PaymentTerm
    name: PaymentTerm
    nameWithType: PaymentTerm
    fullName: SuperOffice.WebApi.Data.PaymentTerm
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.PaymentTerm
    name: PaymentTerm
    nameWithType: PaymentTerm
    fullName: SuperOffice.WebApi.Data.PaymentTerm
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetPaymentTermsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetPaymentTermsAsync
  isExternal: true
  name: GetPaymentTermsAsync
  nameWithType: ListAgent.GetPaymentTermsAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetPaymentTermsAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.PaymentTerm[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.PaymentTerm[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<PaymentTerm[]>
  nameWithType: Task<PaymentTerm[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.PaymentTerm[]>
  nameWithType.vb: Task(Of PaymentTerm())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.PaymentTerm())
  name.vb: Task(Of PaymentTerm())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.PaymentTerm
    name: PaymentTerm
    nameWithType: PaymentTerm
    fullName: SuperOffice.WebApi.Data.PaymentTerm
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.PaymentTerm
    name: PaymentTerm
    nameWithType: PaymentTerm
    fullName: SuperOffice.WebApi.Data.PaymentTerm
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetPaymentTypeAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetPaymentTypeAsync
  isExternal: true
  name: GetPaymentTypeAsync
  nameWithType: ListAgent.GetPaymentTypeAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetPaymentTypeAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.PaymentType}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.PaymentType}'
  definition: System.Threading.Tasks.Task`1
  name: Task<PaymentType>
  nameWithType: Task<PaymentType>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.PaymentType>
  nameWithType.vb: Task(Of PaymentType)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.PaymentType)
  name.vb: Task(Of PaymentType)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.PaymentType
    name: PaymentType
    nameWithType: PaymentType
    fullName: SuperOffice.WebApi.Data.PaymentType
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.PaymentType
    name: PaymentType
    nameWithType: PaymentType
    fullName: SuperOffice.WebApi.Data.PaymentType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetPaymentTypesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetPaymentTypesAsync
  isExternal: true
  name: GetPaymentTypesAsync
  nameWithType: ListAgent.GetPaymentTypesAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetPaymentTypesAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.PaymentType[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.PaymentType[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<PaymentType[]>
  nameWithType: Task<PaymentType[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.PaymentType[]>
  nameWithType.vb: Task(Of PaymentType())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.PaymentType())
  name.vb: Task(Of PaymentType())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.PaymentType
    name: PaymentType
    nameWithType: PaymentType
    fullName: SuperOffice.WebApi.Data.PaymentType
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.PaymentType
    name: PaymentType
    nameWithType: PaymentType
    fullName: SuperOffice.WebApi.Data.PaymentType
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetDepartmentAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetDepartmentAsync
  isExternal: true
  name: GetDepartmentAsync
  nameWithType: ListAgent.GetDepartmentAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetDepartmentAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Department}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Department}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Department>
  nameWithType: Task<Department>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.Department>
  nameWithType.vb: Task(Of Department)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.Department)
  name.vb: Task(Of Department)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.Department
    name: Department
    nameWithType: Department
    fullName: SuperOffice.WebApi.Data.Department
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.Department
    name: Department
    nameWithType: Department
    fullName: SuperOffice.WebApi.Data.Department
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetDepartmentListAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetDepartmentListAsync
  isExternal: true
  name: GetDepartmentListAsync
  nameWithType: ListAgent.GetDepartmentListAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetDepartmentListAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Department[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Department[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Department[]>
  nameWithType: Task<Department[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.Department[]>
  nameWithType.vb: Task(Of Department())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.Department())
  name.vb: Task(Of Department())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.Department
    name: Department
    nameWithType: Department
    fullName: SuperOffice.WebApi.Data.Department
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.Department
    name: Department
    nameWithType: Department
    fullName: SuperOffice.WebApi.Data.Department
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetDepartmentsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetDepartmentsAsync
  isExternal: true
  name: GetDepartmentsAsync
  nameWithType: ListAgent.GetDepartmentsAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetDepartmentsAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateAsync
  isExternal: true
  name: GetDocumentTemplateAsync
  nameWithType: ListAgent.GetDocumentTemplateAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DocumentTemplate}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DocumentTemplate}'
  definition: System.Threading.Tasks.Task`1
  name: Task<DocumentTemplate>
  nameWithType: Task<DocumentTemplate>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.DocumentTemplate>
  nameWithType.vb: Task(Of DocumentTemplate)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.DocumentTemplate)
  name.vb: Task(Of DocumentTemplate)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.DocumentTemplate
    name: DocumentTemplate
    nameWithType: DocumentTemplate
    fullName: SuperOffice.WebApi.Data.DocumentTemplate
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.DocumentTemplate
    name: DocumentTemplate
    nameWithType: DocumentTemplate
    fullName: SuperOffice.WebApi.Data.DocumentTemplate
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateListAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateListAsync
  isExternal: true
  name: GetDocumentTemplateListAsync
  nameWithType: ListAgent.GetDocumentTemplateListAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateListAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DocumentTemplate[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DocumentTemplate[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<DocumentTemplate[]>
  nameWithType: Task<DocumentTemplate[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.DocumentTemplate[]>
  nameWithType.vb: Task(Of DocumentTemplate())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.DocumentTemplate())
  name.vb: Task(Of DocumentTemplate())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.DocumentTemplate
    name: DocumentTemplate
    nameWithType: DocumentTemplate
    fullName: SuperOffice.WebApi.Data.DocumentTemplate
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.DocumentTemplate
    name: DocumentTemplate
    nameWithType: DocumentTemplate
    fullName: SuperOffice.WebApi.Data.DocumentTemplate
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplatesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplatesAsync
  isExternal: true
  name: GetDocumentTemplatesAsync
  nameWithType: ListAgent.GetDocumentTemplatesAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplatesAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetAllDocumentTemplatesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetAllDocumentTemplatesAsync
  isExternal: true
  name: GetAllDocumentTemplatesAsync
  nameWithType: ListAgent.GetAllDocumentTemplatesAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetAllDocumentTemplatesAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DocumentTemplateEntity[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DocumentTemplateEntity[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<DocumentTemplateEntity[]>
  nameWithType: Task<DocumentTemplateEntity[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.DocumentTemplateEntity[]>
  nameWithType.vb: Task(Of DocumentTemplateEntity())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.DocumentTemplateEntity())
  name.vb: Task(Of DocumentTemplateEntity())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.DocumentTemplateEntity
    name: DocumentTemplateEntity
    nameWithType: DocumentTemplateEntity
    fullName: SuperOffice.WebApi.Data.DocumentTemplateEntity
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.DocumentTemplateEntity
    name: DocumentTemplateEntity
    nameWithType: DocumentTemplateEntity
    fullName: SuperOffice.WebApi.Data.DocumentTemplateEntity
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.SetDocumentPluginForAllDocumentTemplatesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SetDocumentPluginForAllDocumentTemplatesAsync
  isExternal: true
  name: SetDocumentPluginForAllDocumentTemplatesAsync
  nameWithType: ListAgent.SetDocumentPluginForAllDocumentTemplatesAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SetDocumentPluginForAllDocumentTemplatesAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetHeadingEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetHeadingEntityAsync
  isExternal: true
  name: GetHeadingEntityAsync
  nameWithType: ListAgent.GetHeadingEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetHeadingEntityAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultHeadingFromListDefinitionAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.CreateDefaultHeadingFromListDefinitionAsync
  isExternal: true
  name: CreateDefaultHeadingFromListDefinitionAsync
  nameWithType: ListAgent.CreateDefaultHeadingFromListDefinitionAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultHeadingFromListDefinitionAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetLanguageInfoAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetLanguageInfoAsync
  isExternal: true
  name: GetLanguageInfoAsync
  nameWithType: ListAgent.GetLanguageInfoAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetLanguageInfoAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.LanguageInfo}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.LanguageInfo}'
  definition: System.Threading.Tasks.Task`1
  name: Task<LanguageInfo>
  nameWithType: Task<LanguageInfo>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.LanguageInfo>
  nameWithType.vb: Task(Of LanguageInfo)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.LanguageInfo)
  name.vb: Task(Of LanguageInfo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.LanguageInfo
    name: LanguageInfo
    nameWithType: LanguageInfo
    fullName: SuperOffice.WebApi.Data.LanguageInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.LanguageInfo
    name: LanguageInfo
    nameWithType: LanguageInfo
    fullName: SuperOffice.WebApi.Data.LanguageInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetLanguageInfoListAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetLanguageInfoListAsync
  isExternal: true
  name: GetLanguageInfoListAsync
  nameWithType: ListAgent.GetLanguageInfoListAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetLanguageInfoListAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.LanguageInfo[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.LanguageInfo[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<LanguageInfo[]>
  nameWithType: Task<LanguageInfo[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.LanguageInfo[]>
  nameWithType.vb: Task(Of LanguageInfo())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.LanguageInfo())
  name.vb: Task(Of LanguageInfo())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.LanguageInfo
    name: LanguageInfo
    nameWithType: LanguageInfo
    fullName: SuperOffice.WebApi.Data.LanguageInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.LanguageInfo
    name: LanguageInfo
    nameWithType: LanguageInfo
    fullName: SuperOffice.WebApi.Data.LanguageInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetInstalledLanguagesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetInstalledLanguagesAsync
  isExternal: true
  name: GetInstalledLanguagesAsync
  nameWithType: ListAgent.GetInstalledLanguagesAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetInstalledLanguagesAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetLinkAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetLinkAsync
  isExternal: true
  name: GetLinkAsync
  nameWithType: ListAgent.GetLinkAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetLinkAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Link}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Link}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Link>
  nameWithType: Task<Link>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.Link>
  nameWithType.vb: Task(Of Link)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.Link)
  name.vb: Task(Of Link)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.Link
    name: Link
    nameWithType: Link
    fullName: SuperOffice.WebApi.Data.Link
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.Link
    name: Link
    nameWithType: Link
    fullName: SuperOffice.WebApi.Data.Link
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetLinkListAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetLinkListAsync
  isExternal: true
  name: GetLinkListAsync
  nameWithType: ListAgent.GetLinkListAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetLinkListAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Link[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Link[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Link[]>
  nameWithType: Task<Link[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.Link[]>
  nameWithType.vb: Task(Of Link())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.Link())
  name.vb: Task(Of Link())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.Link
    name: Link
    nameWithType: Link
    fullName: SuperOffice.WebApi.Data.Link
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.Link
    name: Link
    nameWithType: Link
    fullName: SuperOffice.WebApi.Data.Link
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetListEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetListEntityAsync
  isExternal: true
  name: GetListEntityAsync
  nameWithType: ListAgent.GetListEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetListEntityAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetListDefinitionsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetListDefinitionsAsync
  isExternal: true
  name: GetListDefinitionsAsync
  nameWithType: ListAgent.GetListDefinitionsAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetListDefinitionsAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ListEntity[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ListEntity[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ListEntity[]>
  nameWithType: Task<ListEntity[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.ListEntity[]>
  nameWithType.vb: Task(Of ListEntity())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.ListEntity())
  name.vb: Task(Of ListEntity())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.ListEntity
    name: ListEntity
    nameWithType: ListEntity
    fullName: SuperOffice.WebApi.Data.ListEntity
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.ListEntity
    name: ListEntity
    nameWithType: ListEntity
    fullName: SuperOffice.WebApi.Data.ListEntity
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetListEntityByNameAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetListEntityByNameAsync
  isExternal: true
  name: GetListEntityByNameAsync
  nameWithType: ListAgent.GetListEntityByNameAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetListEntityByNameAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveListEntityByNameAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SaveListEntityByNameAsync
  isExternal: true
  name: SaveListEntityByNameAsync
  nameWithType: ListAgent.SaveListEntityByNameAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveListEntityByNameAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.DeleteListEntityByNameAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.DeleteListEntityByNameAsync
  isExternal: true
  name: DeleteListEntityByNameAsync
  nameWithType: ListAgent.DeleteListEntityByNameAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.DeleteListEntityByNameAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveListItemEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SaveListItemEntityAsync
  isExternal: true
  name: SaveListItemEntityAsync
  nameWithType: ListAgent.SaveListItemEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveListItemEntityAsync
- uid: SuperOffice.WebApi.Data.ListItemEntity
  commentId: T:SuperOffice.WebApi.Data.ListItemEntity
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: ListItemEntity
  nameWithType: ListItemEntity
  fullName: SuperOffice.WebApi.Data.ListItemEntity
- uid: SuperOffice.WebApi.Agents.ListAgent.SortListItemsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SortListItemsAsync
  isExternal: true
  name: SortListItemsAsync
  nameWithType: ListAgent.SortListItemsAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SortListItemsAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.MoveListItemAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.MoveListItemAsync
  isExternal: true
  name: MoveListItemAsync
  nameWithType: ListAgent.MoveListItemAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.MoveListItemAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetVisibleForUserGroupsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetVisibleForUserGroupsAsync
  isExternal: true
  name: GetVisibleForUserGroupsAsync
  nameWithType: ListAgent.GetVisibleForUserGroupsAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetVisibleForUserGroupsAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SelectableMDOListItem[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SelectableMDOListItem[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<SelectableMDOListItem[]>
  nameWithType: Task<SelectableMDOListItem[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.SelectableMDOListItem[]>
  nameWithType.vb: Task(Of SelectableMDOListItem())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.SelectableMDOListItem())
  name.vb: Task(Of SelectableMDOListItem())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.SelectableMDOListItem
    name: SelectableMDOListItem
    nameWithType: SelectableMDOListItem
    fullName: SuperOffice.WebApi.Data.SelectableMDOListItem
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.SelectableMDOListItem
    name: SelectableMDOListItem
    nameWithType: SelectableMDOListItem
    fullName: SuperOffice.WebApi.Data.SelectableMDOListItem
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetVisibleForUserGroupsFromListNameAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetVisibleForUserGroupsFromListNameAsync
  isExternal: true
  name: GetVisibleForUserGroupsFromListNameAsync
  nameWithType: ListAgent.GetVisibleForUserGroupsFromListNameAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetVisibleForUserGroupsFromListNameAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.SetVisibleForUserGroupsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SetVisibleForUserGroupsAsync
  isExternal: true
  name: SetVisibleForUserGroupsAsync
  nameWithType: ListAgent.SetVisibleForUserGroupsAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SetVisibleForUserGroupsAsync
- uid: SuperOffice.WebApi.Data.SelectableMDOListItem[]
  isExternal: true
  name: SelectableMDOListItem[]
  nameWithType: SelectableMDOListItem[]
  fullName: SuperOffice.WebApi.Data.SelectableMDOListItem[]
  nameWithType.vb: SelectableMDOListItem()
  fullName.vb: SuperOffice.WebApi.Data.SelectableMDOListItem()
  name.vb: SelectableMDOListItem()
  spec.csharp:
  - uid: SuperOffice.WebApi.Data.SelectableMDOListItem
    name: SelectableMDOListItem
    nameWithType: SelectableMDOListItem
    fullName: SuperOffice.WebApi.Data.SelectableMDOListItem
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.WebApi.Data.SelectableMDOListItem
    name: SelectableMDOListItem
    nameWithType: SelectableMDOListItem
    fullName: SuperOffice.WebApi.Data.SelectableMDOListItem
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.WebApi.Agents.ListAgent.SetVisibleForUserGroupsFromListNameAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SetVisibleForUserGroupsFromListNameAsync
  isExternal: true
  name: SetVisibleForUserGroupsFromListNameAsync
  nameWithType: ListAgent.SetVisibleForUserGroupsFromListNameAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SetVisibleForUserGroupsFromListNameAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.SetVisibleForUserGroupAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SetVisibleForUserGroupAsync
  isExternal: true
  name: SetVisibleForUserGroupAsync
  nameWithType: ListAgent.SetVisibleForUserGroupAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SetVisibleForUserGroupAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetListItemsForUserGroupAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetListItemsForUserGroupAsync
  isExternal: true
  name: GetListItemsForUserGroupAsync
  nameWithType: ListAgent.GetListItemsForUserGroupAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetListItemsForUserGroupAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetListItemsForUserGroupFromListNameAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetListItemsForUserGroupFromListNameAsync
  isExternal: true
  name: GetListItemsForUserGroupFromListNameAsync
  nameWithType: ListAgent.GetListItemsForUserGroupFromListNameAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetListItemsForUserGroupFromListNameAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.SetListItemsForUserGroupAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SetListItemsForUserGroupAsync
  isExternal: true
  name: SetListItemsForUserGroupAsync
  nameWithType: ListAgent.SetListItemsForUserGroupAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SetListItemsForUserGroupAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.SetListItemsForUserGroupFromListNameAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SetListItemsForUserGroupFromListNameAsync
  isExternal: true
  name: SetListItemsForUserGroupFromListNameAsync
  nameWithType: ListAgent.SetListItemsForUserGroupFromListNameAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SetListItemsForUserGroupFromListNameAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetHeadingsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetHeadingsAsync
  isExternal: true
  name: GetHeadingsAsync
  nameWithType: ListAgent.GetHeadingsAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetHeadingsAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetHeadingsForListItemFromListNameAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetHeadingsForListItemFromListNameAsync
  isExternal: true
  name: GetHeadingsForListItemFromListNameAsync
  nameWithType: ListAgent.GetHeadingsForListItemFromListNameAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetHeadingsForListItemFromListNameAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveHeadingsForListItemFromListDefinitionAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SaveHeadingsForListItemFromListDefinitionAsync
  isExternal: true
  name: SaveHeadingsForListItemFromListDefinitionAsync
  nameWithType: ListAgent.SaveHeadingsForListItemFromListDefinitionAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveHeadingsForListItemFromListDefinitionAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveHeadingsForListItemFromListNameAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SaveHeadingsForListItemFromListNameAsync
  isExternal: true
  name: SaveHeadingsForListItemFromListNameAsync
  nameWithType: ListAgent.SaveHeadingsForListItemFromListNameAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveHeadingsForListItemFromListNameAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetListItemsForHeadingAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetListItemsForHeadingAsync
  isExternal: true
  name: GetListItemsForHeadingAsync
  nameWithType: ListAgent.GetListItemsForHeadingAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetListItemsForHeadingAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetListItemsForHeadingFromListNameAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetListItemsForHeadingFromListNameAsync
  isExternal: true
  name: GetListItemsForHeadingFromListNameAsync
  nameWithType: ListAgent.GetListItemsForHeadingFromListNameAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetListItemsForHeadingFromListNameAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.SetListItemsForHeadingAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SetListItemsForHeadingAsync
  isExternal: true
  name: SetListItemsForHeadingAsync
  nameWithType: ListAgent.SetListItemsForHeadingAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SetListItemsForHeadingAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.SetListItemsForHeadingFromListNameAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SetListItemsForHeadingFromListNameAsync
  isExternal: true
  name: SetListItemsForHeadingFromListNameAsync
  nameWithType: ListAgent.SetListItemsForHeadingFromListNameAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SetListItemsForHeadingFromListNameAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.SetHeadingsForListItemAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SetHeadingsForListItemAsync
  isExternal: true
  name: SetHeadingsForListItemAsync
  nameWithType: ListAgent.SetHeadingsForListItemAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SetHeadingsForListItemAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.SetRankOnHeadingsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SetRankOnHeadingsAsync
  isExternal: true
  name: SetRankOnHeadingsAsync
  nameWithType: ListAgent.SetRankOnHeadingsAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SetRankOnHeadingsAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.SetRankOnSaleActivityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SetRankOnSaleActivityAsync
  isExternal: true
  name: SetRankOnSaleActivityAsync
  nameWithType: ListAgent.SetRankOnSaleActivityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SetRankOnSaleActivityAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.SetRankOnSaleDocumentAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SetRankOnSaleDocumentAsync
  isExternal: true
  name: SetRankOnSaleDocumentAsync
  nameWithType: ListAgent.SetRankOnSaleDocumentAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SetRankOnSaleDocumentAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.SetRankOnProjectActivityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SetRankOnProjectActivityAsync
  isExternal: true
  name: SetRankOnProjectActivityAsync
  nameWithType: ListAgent.SetRankOnProjectActivityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SetRankOnProjectActivityAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.SetRankOnProjectDocumentAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SetRankOnProjectDocumentAsync
  isExternal: true
  name: SetRankOnProjectDocumentAsync
  nameWithType: ListAgent.SetRankOnProjectDocumentAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SetRankOnProjectDocumentAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetAllFromListDefinitionAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetAllFromListDefinitionAsync
  isExternal: true
  name: GetAllFromListDefinitionAsync
  nameWithType: ListAgent.GetAllFromListDefinitionAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetAllFromListDefinitionAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ListItemEntity[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ListItemEntity[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ListItemEntity[]>
  nameWithType: Task<ListItemEntity[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.ListItemEntity[]>
  nameWithType.vb: Task(Of ListItemEntity())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.ListItemEntity())
  name.vb: Task(Of ListItemEntity())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.ListItemEntity
    name: ListItemEntity
    nameWithType: ListItemEntity
    fullName: SuperOffice.WebApi.Data.ListItemEntity
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.ListItemEntity
    name: ListItemEntity
    nameWithType: ListItemEntity
    fullName: SuperOffice.WebApi.Data.ListItemEntity
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetAllFromListNameAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetAllFromListNameAsync
  isExternal: true
  name: GetAllFromListNameAsync
  nameWithType: ListAgent.GetAllFromListNameAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetAllFromListNameAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveAllFromListDefinitionAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SaveAllFromListDefinitionAsync
  isExternal: true
  name: SaveAllFromListDefinitionAsync
  nameWithType: ListAgent.SaveAllFromListDefinitionAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveAllFromListDefinitionAsync
- uid: SuperOffice.WebApi.Data.ListItemEntity[]
  isExternal: true
  name: ListItemEntity[]
  nameWithType: ListItemEntity[]
  fullName: SuperOffice.WebApi.Data.ListItemEntity[]
  nameWithType.vb: ListItemEntity()
  fullName.vb: SuperOffice.WebApi.Data.ListItemEntity()
  name.vb: ListItemEntity()
  spec.csharp:
  - uid: SuperOffice.WebApi.Data.ListItemEntity
    name: ListItemEntity
    nameWithType: ListItemEntity
    fullName: SuperOffice.WebApi.Data.ListItemEntity
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.WebApi.Data.ListItemEntity
    name: ListItemEntity
    nameWithType: ListItemEntity
    fullName: SuperOffice.WebApi.Data.ListItemEntity
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveAllFromListNameAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SaveAllFromListNameAsync
  isExternal: true
  name: SaveAllFromListNameAsync
  nameWithType: ListAgent.SaveAllFromListNameAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveAllFromListNameAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.AddFromListDefinitionAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.AddFromListDefinitionAsync
  isExternal: true
  name: AddFromListDefinitionAsync
  nameWithType: ListAgent.AddFromListDefinitionAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.AddFromListDefinitionAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.AddFromListNameAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.AddFromListNameAsync
  isExternal: true
  name: AddFromListNameAsync
  nameWithType: ListAgent.AddFromListNameAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.AddFromListNameAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.DeleteAllFromListDefinitionAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.DeleteAllFromListDefinitionAsync
  isExternal: true
  name: DeleteAllFromListDefinitionAsync
  nameWithType: ListAgent.DeleteAllFromListDefinitionAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.DeleteAllFromListDefinitionAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.DeleteAllFromListNameAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.DeleteAllFromListNameAsync
  isExternal: true
  name: DeleteAllFromListNameAsync
  nameWithType: ListAgent.DeleteAllFromListNameAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.DeleteAllFromListNameAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetFromListDefinitionAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetFromListDefinitionAsync
  isExternal: true
  name: GetFromListDefinitionAsync
  nameWithType: ListAgent.GetFromListDefinitionAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetFromListDefinitionAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetFromListNameAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetFromListNameAsync
  isExternal: true
  name: GetFromListNameAsync
  nameWithType: ListAgent.GetFromListNameAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetFromListNameAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveFromListDefinitionAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SaveFromListDefinitionAsync
  isExternal: true
  name: SaveFromListDefinitionAsync
  nameWithType: ListAgent.SaveFromListDefinitionAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveFromListDefinitionAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveFromListNameAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SaveFromListNameAsync
  isExternal: true
  name: SaveFromListNameAsync
  nameWithType: ListAgent.SaveFromListNameAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveFromListNameAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.DeleteFromListDefinitionAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.DeleteFromListDefinitionAsync
  isExternal: true
  name: DeleteFromListDefinitionAsync
  nameWithType: ListAgent.DeleteFromListDefinitionAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.DeleteFromListDefinitionAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.DeleteFromListNameAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.DeleteFromListNameAsync
  isExternal: true
  name: DeleteFromListNameAsync
  nameWithType: ListAgent.DeleteFromListNameAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.DeleteFromListNameAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetHeadingsFromNameAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetHeadingsFromNameAsync
  isExternal: true
  name: GetHeadingsFromNameAsync
  nameWithType: ListAgent.GetHeadingsFromNameAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetHeadingsFromNameAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.HeadingEntity[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.HeadingEntity[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<HeadingEntity[]>
  nameWithType: Task<HeadingEntity[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.HeadingEntity[]>
  nameWithType.vb: Task(Of HeadingEntity())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.HeadingEntity())
  name.vb: Task(Of HeadingEntity())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.HeadingEntity
    name: HeadingEntity
    nameWithType: HeadingEntity
    fullName: SuperOffice.WebApi.Data.HeadingEntity
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.HeadingEntity
    name: HeadingEntity
    nameWithType: HeadingEntity
    fullName: SuperOffice.WebApi.Data.HeadingEntity
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetHeadingsFromListDefinitionAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetHeadingsFromListDefinitionAsync
  isExternal: true
  name: GetHeadingsFromListDefinitionAsync
  nameWithType: ListAgent.GetHeadingsFromListDefinitionAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetHeadingsFromListDefinitionAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveHeadingsFromNameAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SaveHeadingsFromNameAsync
  isExternal: true
  name: SaveHeadingsFromNameAsync
  nameWithType: ListAgent.SaveHeadingsFromNameAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveHeadingsFromNameAsync
- uid: SuperOffice.WebApi.Data.HeadingEntity[]
  isExternal: true
  name: HeadingEntity[]
  nameWithType: HeadingEntity[]
  fullName: SuperOffice.WebApi.Data.HeadingEntity[]
  nameWithType.vb: HeadingEntity()
  fullName.vb: SuperOffice.WebApi.Data.HeadingEntity()
  name.vb: HeadingEntity()
  spec.csharp:
  - uid: SuperOffice.WebApi.Data.HeadingEntity
    name: HeadingEntity
    nameWithType: HeadingEntity
    fullName: SuperOffice.WebApi.Data.HeadingEntity
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.WebApi.Data.HeadingEntity
    name: HeadingEntity
    nameWithType: HeadingEntity
    fullName: SuperOffice.WebApi.Data.HeadingEntity
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveHeadingsFromListDefinitionAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SaveHeadingsFromListDefinitionAsync
  isExternal: true
  name: SaveHeadingsFromListDefinitionAsync
  nameWithType: ListAgent.SaveHeadingsFromListDefinitionAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveHeadingsFromListDefinitionAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveHeadingFromNameAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SaveHeadingFromNameAsync
  isExternal: true
  name: SaveHeadingFromNameAsync
  nameWithType: ListAgent.SaveHeadingFromNameAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveHeadingFromNameAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveHeadingFromListDefinitionAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SaveHeadingFromListDefinitionAsync
  isExternal: true
  name: SaveHeadingFromListDefinitionAsync
  nameWithType: ListAgent.SaveHeadingFromListDefinitionAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveHeadingFromListDefinitionAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.DeleteAllHeadingsFromNameAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.DeleteAllHeadingsFromNameAsync
  isExternal: true
  name: DeleteAllHeadingsFromNameAsync
  nameWithType: ListAgent.DeleteAllHeadingsFromNameAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.DeleteAllHeadingsFromNameAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.DeleteAllHeadingsFromListDefinitionAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.DeleteAllHeadingsFromListDefinitionAsync
  isExternal: true
  name: DeleteAllHeadingsFromListDefinitionAsync
  nameWithType: ListAgent.DeleteAllHeadingsFromListDefinitionAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.DeleteAllHeadingsFromListDefinitionAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetLocalizedTextAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetLocalizedTextAsync
  isExternal: true
  name: GetLocalizedTextAsync
  nameWithType: ListAgent.GetLocalizedTextAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetLocalizedTextAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.LocalizedText}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.LocalizedText}'
  definition: System.Threading.Tasks.Task`1
  name: Task<LocalizedText>
  nameWithType: Task<LocalizedText>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.LocalizedText>
  nameWithType.vb: Task(Of LocalizedText)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.LocalizedText)
  name.vb: Task(Of LocalizedText)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.LocalizedText
    name: LocalizedText
    nameWithType: LocalizedText
    fullName: SuperOffice.WebApi.Data.LocalizedText
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.LocalizedText
    name: LocalizedText
    nameWithType: LocalizedText
    fullName: SuperOffice.WebApi.Data.LocalizedText
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetLocalizedTextByTypeAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetLocalizedTextByTypeAsync
  isExternal: true
  name: GetLocalizedTextByTypeAsync
  nameWithType: ListAgent.GetLocalizedTextByTypeAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetLocalizedTextByTypeAsync
- uid: SuperOffice.WebApi.Data.LocalizedTextType
  commentId: T:SuperOffice.WebApi.Data.LocalizedTextType
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: LocalizedTextType
  nameWithType: LocalizedTextType
  fullName: SuperOffice.WebApi.Data.LocalizedTextType
- uid: SuperOffice.WebApi.Agents.ListAgent.GetLocalizedTextListAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetLocalizedTextListAsync
  isExternal: true
  name: GetLocalizedTextListAsync
  nameWithType: ListAgent.GetLocalizedTextListAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetLocalizedTextListAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.LocalizedText[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.LocalizedText[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<LocalizedText[]>
  nameWithType: Task<LocalizedText[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.LocalizedText[]>
  nameWithType.vb: Task(Of LocalizedText())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.LocalizedText())
  name.vb: Task(Of LocalizedText())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.LocalizedText
    name: LocalizedText
    nameWithType: LocalizedText
    fullName: SuperOffice.WebApi.Data.LocalizedText
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.LocalizedText
    name: LocalizedText
    nameWithType: LocalizedText
    fullName: SuperOffice.WebApi.Data.LocalizedText
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetLocalizedTextsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetLocalizedTextsAsync
  isExternal: true
  name: GetLocalizedTextsAsync
  nameWithType: ListAgent.GetLocalizedTextsAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetLocalizedTextsAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetLocalizedTextsByLanguageIdAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetLocalizedTextsByLanguageIdAsync
  isExternal: true
  name: GetLocalizedTextsByLanguageIdAsync
  nameWithType: ListAgent.GetLocalizedTextsByLanguageIdAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetLocalizedTextsByLanguageIdAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetLocalizedTextsByTypeAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetLocalizedTextsByTypeAsync
  isExternal: true
  name: GetLocalizedTextsByTypeAsync
  nameWithType: ListAgent.GetLocalizedTextsByTypeAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetLocalizedTextsByTypeAsync
- uid: SuperOffice.WebApi.Data.LocalizedTextType[]
  isExternal: true
  name: LocalizedTextType[]
  nameWithType: LocalizedTextType[]
  fullName: SuperOffice.WebApi.Data.LocalizedTextType[]
  nameWithType.vb: LocalizedTextType()
  fullName.vb: SuperOffice.WebApi.Data.LocalizedTextType()
  name.vb: LocalizedTextType()
  spec.csharp:
  - uid: SuperOffice.WebApi.Data.LocalizedTextType
    name: LocalizedTextType
    nameWithType: LocalizedTextType
    fullName: SuperOffice.WebApi.Data.LocalizedTextType
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.WebApi.Data.LocalizedTextType
    name: LocalizedTextType
    nameWithType: LocalizedTextType
    fullName: SuperOffice.WebApi.Data.LocalizedTextType
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.WebApi.Agents.ListAgent.GetHierarchyEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetHierarchyEntityAsync
  isExternal: true
  name: GetHierarchyEntityAsync
  nameWithType: ListAgent.GetHierarchyEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetHierarchyEntityAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetAllDomainsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetAllDomainsAsync
  isExternal: true
  name: GetAllDomainsAsync
  nameWithType: ListAgent.GetAllDomainsAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetAllDomainsAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Domain[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Domain[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Domain[]>
  nameWithType: Task<Domain[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.Domain[]>
  nameWithType.vb: Task(Of Domain())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.Domain())
  name.vb: Task(Of Domain())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.Domain
    name: Domain
    nameWithType: Domain
    fullName: SuperOffice.WebApi.Data.Domain
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.Domain
    name: Domain
    nameWithType: Domain
    fullName: SuperOffice.WebApi.Data.Domain
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetAllInDomainAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetAllInDomainAsync
  isExternal: true
  name: GetAllInDomainAsync
  nameWithType: ListAgent.GetAllInDomainAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetAllInDomainAsync
- uid: SuperOffice.WebApi.Data.Domain
  commentId: T:SuperOffice.WebApi.Data.Domain
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: Domain
  nameWithType: Domain
  fullName: SuperOffice.WebApi.Data.Domain
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.HierarchyEntity[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.HierarchyEntity[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<HierarchyEntity[]>
  nameWithType: Task<HierarchyEntity[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.HierarchyEntity[]>
  nameWithType.vb: Task(Of HierarchyEntity())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.HierarchyEntity())
  name.vb: Task(Of HierarchyEntity())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.HierarchyEntity
    name: HierarchyEntity
    nameWithType: HierarchyEntity
    fullName: SuperOffice.WebApi.Data.HierarchyEntity
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.HierarchyEntity
    name: HierarchyEntity
    nameWithType: HierarchyEntity
    fullName: SuperOffice.WebApi.Data.HierarchyEntity
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetHierarchyFromPathAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetHierarchyFromPathAsync
  isExternal: true
  name: GetHierarchyFromPathAsync
  nameWithType: ListAgent.GetHierarchyFromPathAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetHierarchyFromPathAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.AddHierarchyToPathAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.AddHierarchyToPathAsync
  isExternal: true
  name: AddHierarchyToPathAsync
  nameWithType: ListAgent.AddHierarchyToPathAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.AddHierarchyToPathAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.UpdateHierarchyFromPathAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.UpdateHierarchyFromPathAsync
  isExternal: true
  name: UpdateHierarchyFromPathAsync
  nameWithType: ListAgent.UpdateHierarchyFromPathAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.UpdateHierarchyFromPathAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.DeleteHierarchyFromPathAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.DeleteHierarchyFromPathAsync
  isExternal: true
  name: DeleteHierarchyFromPathAsync
  nameWithType: ListAgent.DeleteHierarchyFromPathAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.DeleteHierarchyFromPathAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetMrMrsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetMrMrsAsync
  isExternal: true
  name: GetMrMrsAsync
  nameWithType: ListAgent.GetMrMrsAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetMrMrsAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.MrMrs}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.MrMrs}'
  definition: System.Threading.Tasks.Task`1
  name: Task<MrMrs>
  nameWithType: Task<MrMrs>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.MrMrs>
  nameWithType.vb: Task(Of MrMrs)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.MrMrs)
  name.vb: Task(Of MrMrs)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.MrMrs
    name: MrMrs
    nameWithType: MrMrs
    fullName: SuperOffice.WebApi.Data.MrMrs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.MrMrs
    name: MrMrs
    nameWithType: MrMrs
    fullName: SuperOffice.WebApi.Data.MrMrs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetMrMrsListAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetMrMrsListAsync
  isExternal: true
  name: GetMrMrsListAsync
  nameWithType: ListAgent.GetMrMrsListAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetMrMrsListAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.MrMrs[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.MrMrs[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<MrMrs[]>
  nameWithType: Task<MrMrs[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.MrMrs[]>
  nameWithType.vb: Task(Of MrMrs())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.MrMrs())
  name.vb: Task(Of MrMrs())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.MrMrs
    name: MrMrs
    nameWithType: MrMrs
    fullName: SuperOffice.WebApi.Data.MrMrs
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.MrMrs
    name: MrMrs
    nameWithType: MrMrs
    fullName: SuperOffice.WebApi.Data.MrMrs
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetMrMrsesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetMrMrsesAsync
  isExternal: true
  name: GetMrMrsesAsync
  nameWithType: ListAgent.GetMrMrsesAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetMrMrsesAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetPositionAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetPositionAsync
  isExternal: true
  name: GetPositionAsync
  nameWithType: ListAgent.GetPositionAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetPositionAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Position}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Position}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Position>
  nameWithType: Task<Position>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.Position>
  nameWithType.vb: Task(Of Position)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.Position)
  name.vb: Task(Of Position)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.Position
    name: Position
    nameWithType: Position
    fullName: SuperOffice.WebApi.Data.Position
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.Position
    name: Position
    nameWithType: Position
    fullName: SuperOffice.WebApi.Data.Position
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetPositionListAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetPositionListAsync
  isExternal: true
  name: GetPositionListAsync
  nameWithType: ListAgent.GetPositionListAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetPositionListAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Position[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Position[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Position[]>
  nameWithType: Task<Position[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.Position[]>
  nameWithType.vb: Task(Of Position())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.Position())
  name.vb: Task(Of Position())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.Position
    name: Position
    nameWithType: Position
    fullName: SuperOffice.WebApi.Data.Position
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.Position
    name: Position
    nameWithType: Position
    fullName: SuperOffice.WebApi.Data.Position
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetPositionsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetPositionsAsync
  isExternal: true
  name: GetPositionsAsync
  nameWithType: ListAgent.GetPositionsAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetPositionsAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetPriorityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetPriorityAsync
  isExternal: true
  name: GetPriorityAsync
  nameWithType: ListAgent.GetPriorityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetPriorityAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Priority}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Priority}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Priority>
  nameWithType: Task<Priority>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.Priority>
  nameWithType.vb: Task(Of Priority)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.Priority)
  name.vb: Task(Of Priority)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.Priority
    name: Priority
    nameWithType: Priority
    fullName: SuperOffice.WebApi.Data.Priority
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.Priority
    name: Priority
    nameWithType: Priority
    fullName: SuperOffice.WebApi.Data.Priority
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetPriorityListAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetPriorityListAsync
  isExternal: true
  name: GetPriorityListAsync
  nameWithType: ListAgent.GetPriorityListAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetPriorityListAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Priority[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Priority[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Priority[]>
  nameWithType: Task<Priority[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.Priority[]>
  nameWithType.vb: Task(Of Priority())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.Priority())
  name.vb: Task(Of Priority())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.Priority
    name: Priority
    nameWithType: Priority
    fullName: SuperOffice.WebApi.Data.Priority
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.Priority
    name: Priority
    nameWithType: Priority
    fullName: SuperOffice.WebApi.Data.Priority
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetPrioritiesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetPrioritiesAsync
  isExternal: true
  name: GetPrioritiesAsync
  nameWithType: ListAgent.GetPrioritiesAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetPrioritiesAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetProductCategoryAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetProductCategoryAsync
  isExternal: true
  name: GetProductCategoryAsync
  nameWithType: ListAgent.GetProductCategoryAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetProductCategoryAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ProductCategory}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ProductCategory}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ProductCategory>
  nameWithType: Task<ProductCategory>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.ProductCategory>
  nameWithType.vb: Task(Of ProductCategory)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.ProductCategory)
  name.vb: Task(Of ProductCategory)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.ProductCategory
    name: ProductCategory
    nameWithType: ProductCategory
    fullName: SuperOffice.WebApi.Data.ProductCategory
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.ProductCategory
    name: ProductCategory
    nameWithType: ProductCategory
    fullName: SuperOffice.WebApi.Data.ProductCategory
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetProductCategoriesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetProductCategoriesAsync
  isExternal: true
  name: GetProductCategoriesAsync
  nameWithType: ListAgent.GetProductCategoriesAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetProductCategoriesAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ProductCategory[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ProductCategory[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ProductCategory[]>
  nameWithType: Task<ProductCategory[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.ProductCategory[]>
  nameWithType.vb: Task(Of ProductCategory())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.ProductCategory())
  name.vb: Task(Of ProductCategory())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.ProductCategory
    name: ProductCategory
    nameWithType: ProductCategory
    fullName: SuperOffice.WebApi.Data.ProductCategory
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.ProductCategory
    name: ProductCategory
    nameWithType: ProductCategory
    fullName: SuperOffice.WebApi.Data.ProductCategory
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetProductFamilyAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetProductFamilyAsync
  isExternal: true
  name: GetProductFamilyAsync
  nameWithType: ListAgent.GetProductFamilyAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetProductFamilyAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ProductFamily}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ProductFamily}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ProductFamily>
  nameWithType: Task<ProductFamily>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.ProductFamily>
  nameWithType.vb: Task(Of ProductFamily)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.ProductFamily)
  name.vb: Task(Of ProductFamily)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.ProductFamily
    name: ProductFamily
    nameWithType: ProductFamily
    fullName: SuperOffice.WebApi.Data.ProductFamily
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.ProductFamily
    name: ProductFamily
    nameWithType: ProductFamily
    fullName: SuperOffice.WebApi.Data.ProductFamily
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetProductFamiliesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetProductFamiliesAsync
  isExternal: true
  name: GetProductFamiliesAsync
  nameWithType: ListAgent.GetProductFamiliesAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetProductFamiliesAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ProductFamily[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ProductFamily[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ProductFamily[]>
  nameWithType: Task<ProductFamily[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.ProductFamily[]>
  nameWithType.vb: Task(Of ProductFamily())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.ProductFamily())
  name.vb: Task(Of ProductFamily())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.ProductFamily
    name: ProductFamily
    nameWithType: ProductFamily
    fullName: SuperOffice.WebApi.Data.ProductFamily
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.ProductFamily
    name: ProductFamily
    nameWithType: ProductFamily
    fullName: SuperOffice.WebApi.Data.ProductFamily
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetProductTypeAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetProductTypeAsync
  isExternal: true
  name: GetProductTypeAsync
  nameWithType: ListAgent.GetProductTypeAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetProductTypeAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ProductType}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ProductType}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ProductType>
  nameWithType: Task<ProductType>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.ProductType>
  nameWithType.vb: Task(Of ProductType)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.ProductType)
  name.vb: Task(Of ProductType)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.ProductType
    name: ProductType
    nameWithType: ProductType
    fullName: SuperOffice.WebApi.Data.ProductType
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.ProductType
    name: ProductType
    nameWithType: ProductType
    fullName: SuperOffice.WebApi.Data.ProductType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetProductTypesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetProductTypesAsync
  isExternal: true
  name: GetProductTypesAsync
  nameWithType: ListAgent.GetProductTypesAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetProductTypesAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ProductType[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ProductType[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ProductType[]>
  nameWithType: Task<ProductType[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.ProductType[]>
  nameWithType.vb: Task(Of ProductType())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.ProductType())
  name.vb: Task(Of ProductType())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.ProductType
    name: ProductType
    nameWithType: ProductType
    fullName: SuperOffice.WebApi.Data.ProductType
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.ProductType
    name: ProductType
    nameWithType: ProductType
    fullName: SuperOffice.WebApi.Data.ProductType
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetProjectStatusAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetProjectStatusAsync
  isExternal: true
  name: GetProjectStatusAsync
  nameWithType: ListAgent.GetProjectStatusAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetProjectStatusAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ProjectStatus}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ProjectStatus}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ProjectStatus>
  nameWithType: Task<ProjectStatus>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.ProjectStatus>
  nameWithType.vb: Task(Of ProjectStatus)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.ProjectStatus)
  name.vb: Task(Of ProjectStatus)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.ProjectStatus
    name: ProjectStatus
    nameWithType: ProjectStatus
    fullName: SuperOffice.WebApi.Data.ProjectStatus
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.ProjectStatus
    name: ProjectStatus
    nameWithType: ProjectStatus
    fullName: SuperOffice.WebApi.Data.ProjectStatus
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.DeleteProjectStatusAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.DeleteProjectStatusAsync
  isExternal: true
  name: DeleteProjectStatusAsync
  nameWithType: ListAgent.DeleteProjectStatusAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.DeleteProjectStatusAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetProjectStatusListAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetProjectStatusListAsync
  isExternal: true
  name: GetProjectStatusListAsync
  nameWithType: ListAgent.GetProjectStatusListAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetProjectStatusListAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ProjectStatus[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ProjectStatus[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ProjectStatus[]>
  nameWithType: Task<ProjectStatus[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.ProjectStatus[]>
  nameWithType.vb: Task(Of ProjectStatus())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.ProjectStatus())
  name.vb: Task(Of ProjectStatus())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.ProjectStatus
    name: ProjectStatus
    nameWithType: ProjectStatus
    fullName: SuperOffice.WebApi.Data.ProjectStatus
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.ProjectStatus
    name: ProjectStatus
    nameWithType: ProjectStatus
    fullName: SuperOffice.WebApi.Data.ProjectStatus
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetProjectStatusesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetProjectStatusesAsync
  isExternal: true
  name: GetProjectStatusesAsync
  nameWithType: ListAgent.GetProjectStatusesAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetProjectStatusesAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetProjectTypeAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetProjectTypeAsync
  isExternal: true
  name: GetProjectTypeAsync
  nameWithType: ListAgent.GetProjectTypeAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetProjectTypeAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ProjectType}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ProjectType}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ProjectType>
  nameWithType: Task<ProjectType>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.ProjectType>
  nameWithType.vb: Task(Of ProjectType)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.ProjectType)
  name.vb: Task(Of ProjectType)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.ProjectType
    name: ProjectType
    nameWithType: ProjectType
    fullName: SuperOffice.WebApi.Data.ProjectType
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.ProjectType
    name: ProjectType
    nameWithType: ProjectType
    fullName: SuperOffice.WebApi.Data.ProjectType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetProjectTypeEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetProjectTypeEntityAsync
  isExternal: true
  name: GetProjectTypeEntityAsync
  nameWithType: ListAgent.GetProjectTypeEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetProjectTypeEntityAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetProjectTypeListAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetProjectTypeListAsync
  isExternal: true
  name: GetProjectTypeListAsync
  nameWithType: ListAgent.GetProjectTypeListAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetProjectTypeListAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ProjectType[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ProjectType[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ProjectType[]>
  nameWithType: Task<ProjectType[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.ProjectType[]>
  nameWithType.vb: Task(Of ProjectType())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.ProjectType())
  name.vb: Task(Of ProjectType())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.ProjectType
    name: ProjectType
    nameWithType: ProjectType
    fullName: SuperOffice.WebApi.Data.ProjectType
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.ProjectType
    name: ProjectType
    nameWithType: ProjectType
    fullName: SuperOffice.WebApi.Data.ProjectType
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetProjectTypesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetProjectTypesAsync
  isExternal: true
  name: GetProjectTypesAsync
  nameWithType: ListAgent.GetProjectTypesAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetProjectTypesAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetRatingAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetRatingAsync
  isExternal: true
  name: GetRatingAsync
  nameWithType: ListAgent.GetRatingAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetRatingAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Rating}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Rating}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Rating>
  nameWithType: Task<Rating>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.Rating>
  nameWithType.vb: Task(Of Rating)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.Rating)
  name.vb: Task(Of Rating)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.Rating
    name: Rating
    nameWithType: Rating
    fullName: SuperOffice.WebApi.Data.Rating
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.Rating
    name: Rating
    nameWithType: Rating
    fullName: SuperOffice.WebApi.Data.Rating
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetRatingListAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetRatingListAsync
  isExternal: true
  name: GetRatingListAsync
  nameWithType: ListAgent.GetRatingListAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetRatingListAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Rating[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Rating[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Rating[]>
  nameWithType: Task<Rating[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.Rating[]>
  nameWithType.vb: Task(Of Rating())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.Rating())
  name.vb: Task(Of Rating())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.Rating
    name: Rating
    nameWithType: Rating
    fullName: SuperOffice.WebApi.Data.Rating
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.Rating
    name: Rating
    nameWithType: Rating
    fullName: SuperOffice.WebApi.Data.Rating
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetRatingsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetRatingsAsync
  isExternal: true
  name: GetRatingsAsync
  nameWithType: ListAgent.GetRatingsAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetRatingsAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetAllSaleStagesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetAllSaleStagesAsync
  isExternal: true
  name: GetAllSaleStagesAsync
  nameWithType: ListAgent.GetAllSaleStagesAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetAllSaleStagesAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SaleStageEntity[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SaleStageEntity[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<SaleStageEntity[]>
  nameWithType: Task<SaleStageEntity[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.SaleStageEntity[]>
  nameWithType.vb: Task(Of SaleStageEntity())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.SaleStageEntity())
  name.vb: Task(Of SaleStageEntity())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.SaleStageEntity
    name: SaleStageEntity
    nameWithType: SaleStageEntity
    fullName: SuperOffice.WebApi.Data.SaleStageEntity
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.SaleStageEntity
    name: SaleStageEntity
    nameWithType: SaleStageEntity
    fullName: SuperOffice.WebApi.Data.SaleStageEntity
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetReasonAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetReasonAsync
  isExternal: true
  name: GetReasonAsync
  nameWithType: ListAgent.GetReasonAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetReasonAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Reason}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Reason}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Reason>
  nameWithType: Task<Reason>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.Reason>
  nameWithType.vb: Task(Of Reason)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.Reason)
  name.vb: Task(Of Reason)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.Reason
    name: Reason
    nameWithType: Reason
    fullName: SuperOffice.WebApi.Data.Reason
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.Reason
    name: Reason
    nameWithType: Reason
    fullName: SuperOffice.WebApi.Data.Reason
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetReasonListAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetReasonListAsync
  isExternal: true
  name: GetReasonListAsync
  nameWithType: ListAgent.GetReasonListAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetReasonListAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Reason[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Reason[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Reason[]>
  nameWithType: Task<Reason[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.Reason[]>
  nameWithType.vb: Task(Of Reason())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.Reason())
  name.vb: Task(Of Reason())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.Reason
    name: Reason
    nameWithType: Reason
    fullName: SuperOffice.WebApi.Data.Reason
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.Reason
    name: Reason
    nameWithType: Reason
    fullName: SuperOffice.WebApi.Data.Reason
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetReasonsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetReasonsAsync
  isExternal: true
  name: GetReasonsAsync
  nameWithType: ListAgent.GetReasonsAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetReasonsAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetReasonSoldAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetReasonSoldAsync
  isExternal: true
  name: GetReasonSoldAsync
  nameWithType: ListAgent.GetReasonSoldAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetReasonSoldAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ReasonSold}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ReasonSold}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ReasonSold>
  nameWithType: Task<ReasonSold>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.ReasonSold>
  nameWithType.vb: Task(Of ReasonSold)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.ReasonSold)
  name.vb: Task(Of ReasonSold)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.ReasonSold
    name: ReasonSold
    nameWithType: ReasonSold
    fullName: SuperOffice.WebApi.Data.ReasonSold
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.ReasonSold
    name: ReasonSold
    nameWithType: ReasonSold
    fullName: SuperOffice.WebApi.Data.ReasonSold
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetAllReasonSoldAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetAllReasonSoldAsync
  isExternal: true
  name: GetAllReasonSoldAsync
  nameWithType: ListAgent.GetAllReasonSoldAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetAllReasonSoldAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ReasonSold[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ReasonSold[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ReasonSold[]>
  nameWithType: Task<ReasonSold[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.ReasonSold[]>
  nameWithType.vb: Task(Of ReasonSold())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.ReasonSold())
  name.vb: Task(Of ReasonSold())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.ReasonSold
    name: ReasonSold
    nameWithType: ReasonSold
    fullName: SuperOffice.WebApi.Data.ReasonSold
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.ReasonSold
    name: ReasonSold
    nameWithType: ReasonSold
    fullName: SuperOffice.WebApi.Data.ReasonSold
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetReasonSoldListAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetReasonSoldListAsync
  isExternal: true
  name: GetReasonSoldListAsync
  nameWithType: ListAgent.GetReasonSoldListAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetReasonSoldListAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetReasonStalledAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetReasonStalledAsync
  isExternal: true
  name: GetReasonStalledAsync
  nameWithType: ListAgent.GetReasonStalledAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetReasonStalledAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ReasonStalled}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ReasonStalled}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ReasonStalled>
  nameWithType: Task<ReasonStalled>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.ReasonStalled>
  nameWithType.vb: Task(Of ReasonStalled)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.ReasonStalled)
  name.vb: Task(Of ReasonStalled)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.ReasonStalled
    name: ReasonStalled
    nameWithType: ReasonStalled
    fullName: SuperOffice.WebApi.Data.ReasonStalled
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.ReasonStalled
    name: ReasonStalled
    nameWithType: ReasonStalled
    fullName: SuperOffice.WebApi.Data.ReasonStalled
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetAllReasonStalledAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetAllReasonStalledAsync
  isExternal: true
  name: GetAllReasonStalledAsync
  nameWithType: ListAgent.GetAllReasonStalledAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetAllReasonStalledAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ReasonStalled[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ReasonStalled[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ReasonStalled[]>
  nameWithType: Task<ReasonStalled[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.ReasonStalled[]>
  nameWithType.vb: Task(Of ReasonStalled())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.ReasonStalled())
  name.vb: Task(Of ReasonStalled())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.ReasonStalled
    name: ReasonStalled
    nameWithType: ReasonStalled
    fullName: SuperOffice.WebApi.Data.ReasonStalled
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.ReasonStalled
    name: ReasonStalled
    nameWithType: ReasonStalled
    fullName: SuperOffice.WebApi.Data.ReasonStalled
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetReasonStalledListAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetReasonStalledListAsync
  isExternal: true
  name: GetReasonStalledListAsync
  nameWithType: ListAgent.GetReasonStalledListAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetReasonStalledListAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetResourceEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetResourceEntityAsync
  isExternal: true
  name: GetResourceEntityAsync
  nameWithType: ListAgent.GetResourceEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetResourceEntityAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetSaleStageEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetSaleStageEntityAsync
  isExternal: true
  name: GetSaleStageEntityAsync
  nameWithType: ListAgent.GetSaleStageEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetSaleStageEntityAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetSaleTypeAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetSaleTypeAsync
  isExternal: true
  name: GetSaleTypeAsync
  nameWithType: ListAgent.GetSaleTypeAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetSaleTypeAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SaleType}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SaleType}'
  definition: System.Threading.Tasks.Task`1
  name: Task<SaleType>
  nameWithType: Task<SaleType>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.SaleType>
  nameWithType.vb: Task(Of SaleType)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.SaleType)
  name.vb: Task(Of SaleType)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.SaleType
    name: SaleType
    nameWithType: SaleType
    fullName: SuperOffice.WebApi.Data.SaleType
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.SaleType
    name: SaleType
    nameWithType: SaleType
    fullName: SuperOffice.WebApi.Data.SaleType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetSaleTypeEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetSaleTypeEntityAsync
  isExternal: true
  name: GetSaleTypeEntityAsync
  nameWithType: ListAgent.GetSaleTypeEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetSaleTypeEntityAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetSaleTypeListAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetSaleTypeListAsync
  isExternal: true
  name: GetSaleTypeListAsync
  nameWithType: ListAgent.GetSaleTypeListAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetSaleTypeListAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SaleType[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SaleType[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<SaleType[]>
  nameWithType: Task<SaleType[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.SaleType[]>
  nameWithType.vb: Task(Of SaleType())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.SaleType())
  name.vb: Task(Of SaleType())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.SaleType
    name: SaleType
    nameWithType: SaleType
    fullName: SuperOffice.WebApi.Data.SaleType
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.SaleType
    name: SaleType
    nameWithType: SaleType
    fullName: SuperOffice.WebApi.Data.SaleType
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetAllSaleTypeAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetAllSaleTypeAsync
  isExternal: true
  name: GetAllSaleTypeAsync
  nameWithType: ListAgent.GetAllSaleTypeAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetAllSaleTypeAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetAllSaleTypeEntitiesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetAllSaleTypeEntitiesAsync
  isExternal: true
  name: GetAllSaleTypeEntitiesAsync
  nameWithType: ListAgent.GetAllSaleTypeEntitiesAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetAllSaleTypeEntitiesAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SaleTypeEntity[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SaleTypeEntity[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<SaleTypeEntity[]>
  nameWithType: Task<SaleTypeEntity[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.SaleTypeEntity[]>
  nameWithType.vb: Task(Of SaleTypeEntity())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.SaleTypeEntity())
  name.vb: Task(Of SaleTypeEntity())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.SaleTypeEntity
    name: SaleTypeEntity
    nameWithType: SaleTypeEntity
    fullName: SuperOffice.WebApi.Data.SaleTypeEntity
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.SaleTypeEntity
    name: SaleTypeEntity
    nameWithType: SaleTypeEntity
    fullName: SuperOffice.WebApi.Data.SaleTypeEntity
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetSelectionCategoryAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetSelectionCategoryAsync
  isExternal: true
  name: GetSelectionCategoryAsync
  nameWithType: ListAgent.GetSelectionCategoryAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetSelectionCategoryAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SelectionCategory}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SelectionCategory}'
  definition: System.Threading.Tasks.Task`1
  name: Task<SelectionCategory>
  nameWithType: Task<SelectionCategory>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.SelectionCategory>
  nameWithType.vb: Task(Of SelectionCategory)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.SelectionCategory)
  name.vb: Task(Of SelectionCategory)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.SelectionCategory
    name: SelectionCategory
    nameWithType: SelectionCategory
    fullName: SuperOffice.WebApi.Data.SelectionCategory
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.SelectionCategory
    name: SelectionCategory
    nameWithType: SelectionCategory
    fullName: SuperOffice.WebApi.Data.SelectionCategory
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetAllSelectionCategoryAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetAllSelectionCategoryAsync
  isExternal: true
  name: GetAllSelectionCategoryAsync
  nameWithType: ListAgent.GetAllSelectionCategoryAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetAllSelectionCategoryAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SelectionCategory[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SelectionCategory[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<SelectionCategory[]>
  nameWithType: Task<SelectionCategory[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.SelectionCategory[]>
  nameWithType.vb: Task(Of SelectionCategory())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.SelectionCategory())
  name.vb: Task(Of SelectionCategory())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.SelectionCategory
    name: SelectionCategory
    nameWithType: SelectionCategory
    fullName: SuperOffice.WebApi.Data.SelectionCategory
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.SelectionCategory
    name: SelectionCategory
    nameWithType: SelectionCategory
    fullName: SuperOffice.WebApi.Data.SelectionCategory
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetSelectionCategoryListAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetSelectionCategoryListAsync
  isExternal: true
  name: GetSelectionCategoryListAsync
  nameWithType: ListAgent.GetSelectionCategoryListAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetSelectionCategoryListAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetSourceAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetSourceAsync
  isExternal: true
  name: GetSourceAsync
  nameWithType: ListAgent.GetSourceAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetSourceAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Source}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Source}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Source>
  nameWithType: Task<Source>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.Source>
  nameWithType.vb: Task(Of Source)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.Source)
  name.vb: Task(Of Source)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.Source
    name: Source
    nameWithType: Source
    fullName: SuperOffice.WebApi.Data.Source
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.Source
    name: Source
    nameWithType: Source
    fullName: SuperOffice.WebApi.Data.Source
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetSourceListAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetSourceListAsync
  isExternal: true
  name: GetSourceListAsync
  nameWithType: ListAgent.GetSourceListAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetSourceListAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Source[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Source[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Source[]>
  nameWithType: Task<Source[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.Source[]>
  nameWithType.vb: Task(Of Source())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.Source())
  name.vb: Task(Of Source())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.Source
    name: Source
    nameWithType: Source
    fullName: SuperOffice.WebApi.Data.Source
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.Source
    name: Source
    nameWithType: Source
    fullName: SuperOffice.WebApi.Data.Source
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetSourcesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetSourcesAsync
  isExternal: true
  name: GetSourcesAsync
  nameWithType: ListAgent.GetSourcesAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetSourcesAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetTaskAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetTaskAsync
  isExternal: true
  name: GetTaskAsync
  nameWithType: ListAgent.GetTaskAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetTaskAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Task}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Task}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Task>
  nameWithType: Task<Task>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.Task>
  nameWithType.vb: Task(Of Task)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.Task)
  name.vb: Task(Of Task)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.Task
    name: Task
    nameWithType: Task
    fullName: SuperOffice.WebApi.Data.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.Task
    name: Task
    nameWithType: Task
    fullName: SuperOffice.WebApi.Data.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateTaskAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateTaskAsync
  isExternal: true
  name: GetDocumentTemplateTaskAsync
  nameWithType: ListAgent.GetDocumentTemplateTaskAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateTaskAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetTaskListAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetTaskListAsync
  isExternal: true
  name: GetTaskListAsync
  nameWithType: ListAgent.GetTaskListAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetTaskListAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Task[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.Task[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Task[]>
  nameWithType: Task<Task[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.Task[]>
  nameWithType.vb: Task(Of Task())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.Task())
  name.vb: Task(Of Task())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.Task
    name: Task
    nameWithType: Task
    fullName: SuperOffice.WebApi.Data.Task
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.Task
    name: Task
    nameWithType: Task
    fullName: SuperOffice.WebApi.Data.Task
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetTasksAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetTasksAsync
  isExternal: true
  name: GetTasksAsync
  nameWithType: ListAgent.GetTasksAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetTasksAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplatesTasksAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplatesTasksAsync
  isExternal: true
  name: GetDocumentTemplatesTasksAsync
  nameWithType: ListAgent.GetDocumentTemplatesTasksAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplatesTasksAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetAllTasksAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetAllTasksAsync
  isExternal: true
  name: GetAllTasksAsync
  nameWithType: ListAgent.GetAllTasksAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetAllTasksAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TaskListItem[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TaskListItem[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<TaskListItem[]>
  nameWithType: Task<TaskListItem[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.TaskListItem[]>
  nameWithType.vb: Task(Of TaskListItem())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.TaskListItem())
  name.vb: Task(Of TaskListItem())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.TaskListItem
    name: TaskListItem
    nameWithType: TaskListItem
    fullName: SuperOffice.WebApi.Data.TaskListItem
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.TaskListItem
    name: TaskListItem
    nameWithType: TaskListItem
    fullName: SuperOffice.WebApi.Data.TaskListItem
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetTicketCategoryAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetTicketCategoryAsync
  isExternal: true
  name: GetTicketCategoryAsync
  nameWithType: ListAgent.GetTicketCategoryAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetTicketCategoryAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketCategory}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketCategory}'
  definition: System.Threading.Tasks.Task`1
  name: Task<TicketCategory>
  nameWithType: Task<TicketCategory>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.TicketCategory>
  nameWithType.vb: Task(Of TicketCategory)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.TicketCategory)
  name.vb: Task(Of TicketCategory)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.TicketCategory
    name: TicketCategory
    nameWithType: TicketCategory
    fullName: SuperOffice.WebApi.Data.TicketCategory
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.TicketCategory
    name: TicketCategory
    nameWithType: TicketCategory
    fullName: SuperOffice.WebApi.Data.TicketCategory
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetTicketPriorityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetTicketPriorityAsync
  isExternal: true
  name: GetTicketPriorityAsync
  nameWithType: ListAgent.GetTicketPriorityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetTicketPriorityAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketPriority}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketPriority}'
  definition: System.Threading.Tasks.Task`1
  name: Task<TicketPriority>
  nameWithType: Task<TicketPriority>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.TicketPriority>
  nameWithType.vb: Task(Of TicketPriority)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.TicketPriority)
  name.vb: Task(Of TicketPriority)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.TicketPriority
    name: TicketPriority
    nameWithType: TicketPriority
    fullName: SuperOffice.WebApi.Data.TicketPriority
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.TicketPriority
    name: TicketPriority
    nameWithType: TicketPriority
    fullName: SuperOffice.WebApi.Data.TicketPriority
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetTicketPriorityListAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetTicketPriorityListAsync
  isExternal: true
  name: GetTicketPriorityListAsync
  nameWithType: ListAgent.GetTicketPriorityListAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetTicketPriorityListAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketPriority[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketPriority[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<TicketPriority[]>
  nameWithType: Task<TicketPriority[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.TicketPriority[]>
  nameWithType.vb: Task(Of TicketPriority())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.TicketPriority())
  name.vb: Task(Of TicketPriority())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.TicketPriority
    name: TicketPriority
    nameWithType: TicketPriority
    fullName: SuperOffice.WebApi.Data.TicketPriority
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.TicketPriority
    name: TicketPriority
    nameWithType: TicketPriority
    fullName: SuperOffice.WebApi.Data.TicketPriority
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetTicketPrioritiesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetTicketPrioritiesAsync
  isExternal: true
  name: GetTicketPrioritiesAsync
  nameWithType: ListAgent.GetTicketPrioritiesAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetTicketPrioritiesAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetAllTicketPrioritiesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetAllTicketPrioritiesAsync
  isExternal: true
  name: GetAllTicketPrioritiesAsync
  nameWithType: ListAgent.GetAllTicketPrioritiesAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetAllTicketPrioritiesAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketPriorityEntity[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketPriorityEntity[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<TicketPriorityEntity[]>
  nameWithType: Task<TicketPriorityEntity[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.TicketPriorityEntity[]>
  nameWithType.vb: Task(Of TicketPriorityEntity())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.TicketPriorityEntity())
  name.vb: Task(Of TicketPriorityEntity())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.TicketPriorityEntity
    name: TicketPriorityEntity
    nameWithType: TicketPriorityEntity
    fullName: SuperOffice.WebApi.Data.TicketPriorityEntity
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.TicketPriorityEntity
    name: TicketPriorityEntity
    nameWithType: TicketPriorityEntity
    fullName: SuperOffice.WebApi.Data.TicketPriorityEntity
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetWebPanelEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetWebPanelEntityAsync
  isExternal: true
  name: GetWebPanelEntityAsync
  nameWithType: ListAgent.GetWebPanelEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetWebPanelEntityAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GenerateNavigationUrlAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GenerateNavigationUrlAsync
  isExternal: true
  name: GenerateNavigationUrlAsync
  nameWithType: ListAgent.GenerateNavigationUrlAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GenerateNavigationUrlAsync
- uid: SuperOffice.WebApi.Data.Navigation
  commentId: T:SuperOffice.WebApi.Data.Navigation
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: Navigation
  nameWithType: Navigation
  fullName: SuperOffice.WebApi.Data.Navigation
- uid: System.Threading.Tasks.Task{System.String}
  commentId: '!:System.Threading.Tasks.Task{System.String}'
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetWebPanelListAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetWebPanelListAsync
  isExternal: true
  name: GetWebPanelListAsync
  nameWithType: ListAgent.GetWebPanelListAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetWebPanelListAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.WebPanelEntity[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.WebPanelEntity[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<WebPanelEntity[]>
  nameWithType: Task<WebPanelEntity[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.WebPanelEntity[]>
  nameWithType.vb: Task(Of WebPanelEntity())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.WebPanelEntity())
  name.vb: Task(Of WebPanelEntity())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.WebPanelEntity
    name: WebPanelEntity
    nameWithType: WebPanelEntity
    fullName: SuperOffice.WebApi.Data.WebPanelEntity
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.WebPanelEntity
    name: WebPanelEntity
    nameWithType: WebPanelEntity
    fullName: SuperOffice.WebApi.Data.WebPanelEntity
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.DeleteWebPanelAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.DeleteWebPanelAsync
  isExternal: true
  name: DeleteWebPanelAsync
  nameWithType: ListAgent.DeleteWebPanelAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.DeleteWebPanelAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetAppWebPanelsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetAppWebPanelsAsync
  isExternal: true
  name: GetAppWebPanelsAsync
  nameWithType: ListAgent.GetAppWebPanelsAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetAppWebPanelsAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.DeleteAppWebPanelsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.DeleteAppWebPanelsAsync
  isExternal: true
  name: DeleteAppWebPanelsAsync
  nameWithType: ListAgent.DeleteAppWebPanelsAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.DeleteAppWebPanelsAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetWebPanelByProgIdAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetWebPanelByProgIdAsync
  isExternal: true
  name: GetWebPanelByProgIdAsync
  nameWithType: ListAgent.GetWebPanelByProgIdAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetWebPanelByProgIdAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetExtAppEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetExtAppEntityAsync
  isExternal: true
  name: GetExtAppEntityAsync
  nameWithType: ListAgent.GetExtAppEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetExtAppEntityAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateEntityAsync
  isExternal: true
  name: GetDocumentTemplateEntityAsync
  nameWithType: ListAgent.GetDocumentTemplateEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateEntityAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.SetDocumentTemplateStreamAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SetDocumentTemplateStreamAsync
  isExternal: true
  name: SetDocumentTemplateStreamAsync
  nameWithType: ListAgent.SetDocumentTemplateStreamAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SetDocumentTemplateStreamAsync
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateUsedInSalesStageAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateUsedInSalesStageAsync
  isExternal: true
  name: GetDocumentTemplateUsedInSalesStageAsync
  nameWithType: ListAgent.GetDocumentTemplateUsedInSalesStageAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateUsedInSalesStageAsync
- uid: System.Threading.Tasks.Task{System.String[]}
  commentId: '!:System.Threading.Tasks.Task{System.String[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<String[]>
  nameWithType: Task<String[]>
  fullName: System.Threading.Tasks.Task<System.String[]>
  nameWithType.vb: Task(Of String())
  fullName.vb: System.Threading.Tasks.Task(Of System.String())
  name.vb: Task(Of String())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateUsedInProjectStageAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateUsedInProjectStageAsync
  isExternal: true
  name: GetDocumentTemplateUsedInProjectStageAsync
  nameWithType: ListAgent.GetDocumentTemplateUsedInProjectStageAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateUsedInProjectStageAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateUrlAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateUrlAsync
  isExternal: true
  name: GetDocumentTemplateUrlAsync
  nameWithType: ListAgent.GetDocumentTemplateUrlAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateUrlAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplatePropertiesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplatePropertiesAsync
  isExternal: true
  name: GetDocumentTemplatePropertiesAsync
  nameWithType: ListAgent.GetDocumentTemplatePropertiesAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplatePropertiesAsync
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.StringDictionary}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.StringDictionary}'
  definition: System.Threading.Tasks.Task`1
  name: Task<StringDictionary>
  nameWithType: Task<StringDictionary>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.StringDictionary>
  nameWithType.vb: Task(Of StringDictionary)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.StringDictionary)
  name.vb: Task(Of StringDictionary)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.StringDictionary
    name: StringDictionary
    nameWithType: StringDictionary
    fullName: SuperOffice.WebApi.Data.StringDictionary
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.StringDictionary
    name: StringDictionary
    nameWithType: StringDictionary
    fullName: SuperOffice.WebApi.Data.StringDictionary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateLanguagesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateLanguagesAsync
  isExternal: true
  name: GetDocumentTemplateLanguagesAsync
  nameWithType: ListAgent.GetDocumentTemplateLanguagesAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateLanguagesAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultDocumentTemplateLanguageAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.CreateDefaultDocumentTemplateLanguageAsync
  isExternal: true
  name: CreateDefaultDocumentTemplateLanguageAsync
  nameWithType: ListAgent.CreateDefaultDocumentTemplateLanguageAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.CreateDefaultDocumentTemplateLanguageAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.DeleteDocumentTemplateLanguageAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.DeleteDocumentTemplateLanguageAsync
  isExternal: true
  name: DeleteDocumentTemplateLanguageAsync
  nameWithType: ListAgent.DeleteDocumentTemplateLanguageAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.DeleteDocumentTemplateLanguageAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateExtensionAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateExtensionAsync
  isExternal: true
  name: GetDocumentTemplateExtensionAsync
  nameWithType: ListAgent.GetDocumentTemplateExtensionAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateExtensionAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.SetDocumentTemplateFromDocumentTemplateAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SetDocumentTemplateFromDocumentTemplateAsync
  isExternal: true
  name: SetDocumentTemplateFromDocumentTemplateAsync
  nameWithType: ListAgent.SetDocumentTemplateFromDocumentTemplateAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SetDocumentTemplateFromDocumentTemplateAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateStreamFromIdAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateStreamFromIdAsync
  isExternal: true
  name: GetDocumentTemplateStreamFromIdAsync
  nameWithType: ListAgent.GetDocumentTemplateStreamFromIdAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTemplateStreamFromIdAsync
- uid: System.Threading.Tasks.Task{System.Byte[]}
  commentId: '!:System.Threading.Tasks.Task{System.Byte[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Byte[]>
  nameWithType: Task<Byte[]>
  fullName: System.Threading.Tasks.Task<System.Byte[]>
  nameWithType.vb: Task(Of Byte())
  fullName.vb: System.Threading.Tasks.Task(Of System.Byte())
  name.vb: Task(Of Byte())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveDocumentTemplateStreamAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SaveDocumentTemplateStreamAsync
  isExternal: true
  name: SaveDocumentTemplateStreamAsync
  nameWithType: ListAgent.SaveDocumentTemplateStreamAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveDocumentTemplateStreamAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TemplateInfo}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TemplateInfo}'
  definition: System.Threading.Tasks.Task`1
  name: Task<TemplateInfo>
  nameWithType: Task<TemplateInfo>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.TemplateInfo>
  nameWithType.vb: Task(Of TemplateInfo)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.TemplateInfo)
  name.vb: Task(Of TemplateInfo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.TemplateInfo
    name: TemplateInfo
    nameWithType: TemplateInfo
    fullName: SuperOffice.WebApi.Data.TemplateInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.TemplateInfo
    name: TemplateInfo
    nameWithType: TemplateInfo
    fullName: SuperOffice.WebApi.Data.TemplateInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetPluginListAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetPluginListAsync
  isExternal: true
  name: GetPluginListAsync
  nameWithType: ListAgent.GetPluginListAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetPluginListAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetPluginCapabilitiesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetPluginCapabilitiesAsync
  isExternal: true
  name: GetPluginCapabilitiesAsync
  nameWithType: ListAgent.GetPluginCapabilitiesAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetPluginCapabilitiesAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTypesForPluginAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetDocumentTypesForPluginAsync
  isExternal: true
  name: GetDocumentTypesForPluginAsync
  nameWithType: ListAgent.GetDocumentTypesForPluginAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetDocumentTypesForPluginAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.IntStringDictionary}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.IntStringDictionary}'
  definition: System.Threading.Tasks.Task`1
  name: Task<IntStringDictionary>
  nameWithType: Task<IntStringDictionary>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.IntStringDictionary>
  nameWithType.vb: Task(Of IntStringDictionary)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.IntStringDictionary)
  name.vb: Task(Of IntStringDictionary)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.IntStringDictionary
    name: IntStringDictionary
    nameWithType: IntStringDictionary
    fullName: SuperOffice.WebApi.Data.IntStringDictionary
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.IntStringDictionary
    name: IntStringDictionary
    nameWithType: IntStringDictionary
    fullName: SuperOffice.WebApi.Data.IntStringDictionary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetRelationDefinitionEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetRelationDefinitionEntityAsync
  isExternal: true
  name: GetRelationDefinitionEntityAsync
  nameWithType: ListAgent.GetRelationDefinitionEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetRelationDefinitionEntityAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveQuickRepliesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SaveQuickRepliesAsync
  isExternal: true
  name: SaveQuickRepliesAsync
  nameWithType: ListAgent.SaveQuickRepliesAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveQuickRepliesAsync
- uid: SuperOffice.WebApi.Data.QuickReply[]
  isExternal: true
  name: QuickReply[]
  nameWithType: QuickReply[]
  fullName: SuperOffice.WebApi.Data.QuickReply[]
  nameWithType.vb: QuickReply()
  fullName.vb: SuperOffice.WebApi.Data.QuickReply()
  name.vb: QuickReply()
  spec.csharp:
  - uid: SuperOffice.WebApi.Data.QuickReply
    name: QuickReply
    nameWithType: QuickReply
    fullName: SuperOffice.WebApi.Data.QuickReply
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.WebApi.Data.QuickReply
    name: QuickReply
    nameWithType: QuickReply
    fullName: SuperOffice.WebApi.Data.QuickReply
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.WebApi.Agents.ListAgent.GetQuickRepliesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetQuickRepliesAsync
  isExternal: true
  name: GetQuickRepliesAsync
  nameWithType: ListAgent.GetQuickRepliesAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetQuickRepliesAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.QuickReply[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.QuickReply[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<QuickReply[]>
  nameWithType: Task<QuickReply[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.QuickReply[]>
  nameWithType.vb: Task(Of QuickReply())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.QuickReply())
  name.vb: Task(Of QuickReply())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.QuickReply
    name: QuickReply
    nameWithType: QuickReply
    fullName: SuperOffice.WebApi.Data.QuickReply
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.QuickReply
    name: QuickReply
    nameWithType: QuickReply
    fullName: SuperOffice.WebApi.Data.QuickReply
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetConsentPurposeAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetConsentPurposeAsync
  isExternal: true
  name: GetConsentPurposeAsync
  nameWithType: ListAgent.GetConsentPurposeAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetConsentPurposeAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ConsentPurpose}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ConsentPurpose}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ConsentPurpose>
  nameWithType: Task<ConsentPurpose>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.ConsentPurpose>
  nameWithType.vb: Task(Of ConsentPurpose)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.ConsentPurpose)
  name.vb: Task(Of ConsentPurpose)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.ConsentPurpose
    name: ConsentPurpose
    nameWithType: ConsentPurpose
    fullName: SuperOffice.WebApi.Data.ConsentPurpose
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.ConsentPurpose
    name: ConsentPurpose
    nameWithType: ConsentPurpose
    fullName: SuperOffice.WebApi.Data.ConsentPurpose
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveConsentPurposeAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SaveConsentPurposeAsync
  isExternal: true
  name: SaveConsentPurposeAsync
  nameWithType: ListAgent.SaveConsentPurposeAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveConsentPurposeAsync
- uid: SuperOffice.WebApi.Data.ConsentPurpose
  commentId: T:SuperOffice.WebApi.Data.ConsentPurpose
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: ConsentPurpose
  nameWithType: ConsentPurpose
  fullName: SuperOffice.WebApi.Data.ConsentPurpose
- uid: SuperOffice.WebApi.Agents.ListAgent.SetEmarketingStrictModeAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SetEmarketingStrictModeAsync
  isExternal: true
  name: SetEmarketingStrictModeAsync
  nameWithType: ListAgent.SetEmarketingStrictModeAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SetEmarketingStrictModeAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetEmarketingStrictModeAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetEmarketingStrictModeAsync
  isExternal: true
  name: GetEmarketingStrictModeAsync
  nameWithType: ListAgent.GetEmarketingStrictModeAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetEmarketingStrictModeAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: '!:System.Threading.Tasks.Task{System.Boolean}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetConsentPurposeListAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetConsentPurposeListAsync
  isExternal: true
  name: GetConsentPurposeListAsync
  nameWithType: ListAgent.GetConsentPurposeListAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetConsentPurposeListAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ConsentPurpose[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ConsentPurpose[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ConsentPurpose[]>
  nameWithType: Task<ConsentPurpose[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.ConsentPurpose[]>
  nameWithType.vb: Task(Of ConsentPurpose())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.ConsentPurpose())
  name.vb: Task(Of ConsentPurpose())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.ConsentPurpose
    name: ConsentPurpose
    nameWithType: ConsentPurpose
    fullName: SuperOffice.WebApi.Data.ConsentPurpose
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.ConsentPurpose
    name: ConsentPurpose
    nameWithType: ConsentPurpose
    fullName: SuperOffice.WebApi.Data.ConsentPurpose
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetConsentPurposesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetConsentPurposesAsync
  isExternal: true
  name: GetConsentPurposesAsync
  nameWithType: ListAgent.GetConsentPurposesAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetConsentPurposesAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetConsentSourceAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetConsentSourceAsync
  isExternal: true
  name: GetConsentSourceAsync
  nameWithType: ListAgent.GetConsentSourceAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetConsentSourceAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ConsentSource}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ConsentSource}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ConsentSource>
  nameWithType: Task<ConsentSource>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.ConsentSource>
  nameWithType.vb: Task(Of ConsentSource)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.ConsentSource)
  name.vb: Task(Of ConsentSource)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.ConsentSource
    name: ConsentSource
    nameWithType: ConsentSource
    fullName: SuperOffice.WebApi.Data.ConsentSource
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.ConsentSource
    name: ConsentSource
    nameWithType: ConsentSource
    fullName: SuperOffice.WebApi.Data.ConsentSource
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveConsentSourceAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SaveConsentSourceAsync
  isExternal: true
  name: SaveConsentSourceAsync
  nameWithType: ListAgent.SaveConsentSourceAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveConsentSourceAsync
- uid: SuperOffice.WebApi.Data.ConsentSource
  commentId: T:SuperOffice.WebApi.Data.ConsentSource
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: ConsentSource
  nameWithType: ConsentSource
  fullName: SuperOffice.WebApi.Data.ConsentSource
- uid: SuperOffice.WebApi.Agents.ListAgent.GetAllConsentSourceAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetAllConsentSourceAsync
  isExternal: true
  name: GetAllConsentSourceAsync
  nameWithType: ListAgent.GetAllConsentSourceAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetAllConsentSourceAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ConsentSource[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ConsentSource[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ConsentSource[]>
  nameWithType: Task<ConsentSource[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.ConsentSource[]>
  nameWithType.vb: Task(Of ConsentSource())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.ConsentSource())
  name.vb: Task(Of ConsentSource())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.ConsentSource
    name: ConsentSource
    nameWithType: ConsentSource
    fullName: SuperOffice.WebApi.Data.ConsentSource
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.ConsentSource
    name: ConsentSource
    nameWithType: ConsentSource
    fullName: SuperOffice.WebApi.Data.ConsentSource
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetConsentSourceListAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetConsentSourceListAsync
  isExternal: true
  name: GetConsentSourceListAsync
  nameWithType: ListAgent.GetConsentSourceListAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetConsentSourceListAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetConsentSourcesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetConsentSourcesAsync
  isExternal: true
  name: GetConsentSourcesAsync
  nameWithType: ListAgent.GetConsentSourcesAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetConsentSourcesAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetLegalBaseAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetLegalBaseAsync
  isExternal: true
  name: GetLegalBaseAsync
  nameWithType: ListAgent.GetLegalBaseAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetLegalBaseAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.LegalBase}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.LegalBase}'
  definition: System.Threading.Tasks.Task`1
  name: Task<LegalBase>
  nameWithType: Task<LegalBase>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.LegalBase>
  nameWithType.vb: Task(Of LegalBase)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.LegalBase)
  name.vb: Task(Of LegalBase)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.LegalBase
    name: LegalBase
    nameWithType: LegalBase
    fullName: SuperOffice.WebApi.Data.LegalBase
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.LegalBase
    name: LegalBase
    nameWithType: LegalBase
    fullName: SuperOffice.WebApi.Data.LegalBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.SaveLegalBaseAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SaveLegalBaseAsync
  isExternal: true
  name: SaveLegalBaseAsync
  nameWithType: ListAgent.SaveLegalBaseAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SaveLegalBaseAsync
- uid: SuperOffice.WebApi.Data.LegalBase
  commentId: T:SuperOffice.WebApi.Data.LegalBase
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: LegalBase
  nameWithType: LegalBase
  fullName: SuperOffice.WebApi.Data.LegalBase
- uid: SuperOffice.WebApi.Agents.ListAgent.GetAllLegalBaseAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetAllLegalBaseAsync
  isExternal: true
  name: GetAllLegalBaseAsync
  nameWithType: ListAgent.GetAllLegalBaseAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetAllLegalBaseAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.LegalBase[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.LegalBase[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<LegalBase[]>
  nameWithType: Task<LegalBase[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.LegalBase[]>
  nameWithType.vb: Task(Of LegalBase())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.LegalBase())
  name.vb: Task(Of LegalBase())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.LegalBase
    name: LegalBase
    nameWithType: LegalBase
    fullName: SuperOffice.WebApi.Data.LegalBase
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.LegalBase
    name: LegalBase
    nameWithType: LegalBase
    fullName: SuperOffice.WebApi.Data.LegalBase
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetLegalBaseListAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetLegalBaseListAsync
  isExternal: true
  name: GetLegalBaseListAsync
  nameWithType: ListAgent.GetLegalBaseListAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetLegalBaseListAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetLegalBasesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetLegalBasesAsync
  isExternal: true
  name: GetLegalBasesAsync
  nameWithType: ListAgent.GetLegalBasesAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetLegalBasesAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetTicketCategoryEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetTicketCategoryEntityAsync
  isExternal: true
  name: GetTicketCategoryEntityAsync
  nameWithType: ListAgent.GetTicketCategoryEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetTicketCategoryEntityAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.MoveAllTicketsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.MoveAllTicketsAsync
  isExternal: true
  name: MoveAllTicketsAsync
  nameWithType: ListAgent.MoveAllTicketsAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.MoveAllTicketsAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.RebuildFullnamesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.RebuildFullnamesAsync
  isExternal: true
  name: RebuildFullnamesAsync
  nameWithType: ListAgent.RebuildFullnamesAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.RebuildFullnamesAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetTicketPriorityEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetTicketPriorityEntityAsync
  isExternal: true
  name: GetTicketPriorityEntityAsync
  nameWithType: ListAgent.GetTicketPriorityEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetTicketPriorityEntityAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetTicketStatusEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetTicketStatusEntityAsync
  isExternal: true
  name: GetTicketStatusEntityAsync
  nameWithType: ListAgent.GetTicketStatusEntityAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetTicketStatusEntityAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GlobalChangeTicketStatusAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GlobalChangeTicketStatusAsync
  isExternal: true
  name: GlobalChangeTicketStatusAsync
  nameWithType: ListAgent.GlobalChangeTicketStatusAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GlobalChangeTicketStatusAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetTicketStatusListAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetTicketStatusListAsync
  isExternal: true
  name: GetTicketStatusListAsync
  nameWithType: ListAgent.GetTicketStatusListAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetTicketStatusListAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketStatusEntity[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketStatusEntity[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<TicketStatusEntity[]>
  nameWithType: Task<TicketStatusEntity[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.TicketStatusEntity[]>
  nameWithType.vb: Task(Of TicketStatusEntity())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.TicketStatusEntity())
  name.vb: Task(Of TicketStatusEntity())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.TicketStatusEntity
    name: TicketStatusEntity
    nameWithType: TicketStatusEntity
    fullName: SuperOffice.WebApi.Data.TicketStatusEntity
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.TicketStatusEntity
    name: TicketStatusEntity
    nameWithType: TicketStatusEntity
    fullName: SuperOffice.WebApi.Data.TicketStatusEntity
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetTicketStatusesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetTicketStatusesAsync
  isExternal: true
  name: GetTicketStatusesAsync
  nameWithType: ListAgent.GetTicketStatusesAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetTicketStatusesAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetTicketCategoryListAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetTicketCategoryListAsync
  isExternal: true
  name: GetTicketCategoryListAsync
  nameWithType: ListAgent.GetTicketCategoryListAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetTicketCategoryListAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketCategoryEntity[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.TicketCategoryEntity[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<TicketCategoryEntity[]>
  nameWithType: Task<TicketCategoryEntity[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.TicketCategoryEntity[]>
  nameWithType.vb: Task(Of TicketCategoryEntity())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.TicketCategoryEntity())
  name.vb: Task(Of TicketCategoryEntity())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.TicketCategoryEntity
    name: TicketCategoryEntity
    nameWithType: TicketCategoryEntity
    fullName: SuperOffice.WebApi.Data.TicketCategoryEntity
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.TicketCategoryEntity
    name: TicketCategoryEntity
    nameWithType: TicketCategoryEntity
    fullName: SuperOffice.WebApi.Data.TicketCategoryEntity
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.GetTicketCategoriesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetTicketCategoriesAsync
  isExternal: true
  name: GetTicketCategoriesAsync
  nameWithType: ListAgent.GetTicketCategoriesAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetTicketCategoriesAsync
- uid: SuperOffice.WebApi.Agents.ListAgent.GetTicketCategoriesForUserGroupsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.GetTicketCategoriesForUserGroupsAsync
  isExternal: true
  name: GetTicketCategoriesForUserGroupsAsync
  nameWithType: ListAgent.GetTicketCategoriesForUserGroupsAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.GetTicketCategoriesForUserGroupsAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.MDOListItem[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.MDOListItem[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<MDOListItem[]>
  nameWithType: Task<MDOListItem[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.MDOListItem[]>
  nameWithType.vb: Task(Of MDOListItem())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.MDOListItem())
  name.vb: Task(Of MDOListItem())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.MDOListItem
    name: MDOListItem
    nameWithType: MDOListItem
    fullName: SuperOffice.WebApi.Data.MDOListItem
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.MDOListItem
    name: MDOListItem
    nameWithType: MDOListItem
    fullName: SuperOffice.WebApi.Data.MDOListItem
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.ListAgent.SetTicketCategoriesForUserGroupAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.ListAgent.SetTicketCategoriesForUserGroupAsync
  isExternal: true
  name: SetTicketCategoriesForUserGroupAsync
  nameWithType: ListAgent.SetTicketCategoriesForUserGroupAsync
  fullName: SuperOffice.WebApi.Agents.ListAgent.SetTicketCategoriesForUserGroupAsync
