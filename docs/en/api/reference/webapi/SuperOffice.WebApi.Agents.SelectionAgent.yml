### YamlMime:ManagedReference
items:
- uid: SuperOffice.WebApi.Agents.SelectionAgent
  commentId: T:SuperOffice.WebApi.Agents.SelectionAgent
  id: SelectionAgent
  parent: SuperOffice.WebApi.Agents
  children:
  - SuperOffice.WebApi.Agents.SelectionAgent.#ctor(SuperOffice.WebApi.WebApiOptions,System.Net.Http.HttpClient)
  - SuperOffice.WebApi.Agents.SelectionAgent.#ctor(System.Net.Http.HttpClient)
  - SuperOffice.WebApi.Agents.SelectionAgent.AddContactSelectionMembersAsync(System.Int32,SuperOffice.WebApi.Data.ContactPersonId[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.AddContactSelectionMembersFromSearchAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.AddRemoveContactSelectionMemberInterestsAsync(System.Int32,System.Int32[],System.Int32[],System.Int32[],System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.AddSelectionMembersAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.AddSelectionMembersFromSearchAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.CopyContactSelectionMembersAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.CopySelectionMembersAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.CreateContactSelectionFromSelectionAsync(System.Int32,System.String,SuperOffice.WebApi.Data.SelectionType,System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.CreateContactSelectionFromShadowSelectionAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.CreateDefaultMailMergeSettingsAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.CreateDefaultMailMergeTaskAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.CreateDefaultSelectionEntityAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.CreateNewEntryAsync(SuperOffice.WebApi.Data.DuplicateEntry,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.CreateSelectionEntityAsync(System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.CreateSelectionFromSelectionAsync(System.Int32,System.String,SuperOffice.WebApi.Data.SelectionType,System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.CreateTemporaryContactSelectionAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.CreateTemporaryContactSelectionFromContactPersonIdsAsync(SuperOffice.WebApi.Data.ContactPersonId[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.CreateTemporaryContactSelectionFromProjectMembersAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.CreateTemporaryContactSelectionFromSelectionMemberIdsAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.CreateTemporarySelectionFromIdsAsync(System.Int32[],System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.DeleteContactsAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.DeleteEntitiesAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.DeletePersonsAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.DeleteSelectionEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.EditContactSelectionMemberDetailsAsync(System.Int32,SuperOffice.WebApi.Data.SelectionMemberEditValues,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.ExportSelectionMembersAsync(System.Int32,System.String,System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.ExportSelectionMembersWithOrderByAsync(System.Int32,System.String,System.Boolean,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.GenerateFollowUpsAsync(System.Int32,SuperOffice.WebApi.Data.AppointmentEntity,System.Int32,System.Boolean,System.Boolean,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.GetDuplicateRulesAsync(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.GetDuplicatesAsync(System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.GetDynamicSelectionCriteriaAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.GetDynamicSelectionCriteriaGroupsAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.GetParentCombinedSelectionsAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.GetRecipientStatisticsAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.GetRecipientStatisticsFromContactPersonIdsAsync(SuperOffice.WebApi.Data.ContactPersonId[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.GetRecipientStatisticsFromProjectMembersAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.GetSelectionEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.GetSelectionForFindAsync(System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.GetSelectionMembersArchiveRowsAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.GetSelectionShadowMembersArchiveRowsAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.RemoveContactSelectionMembersAsync(System.Int32,SuperOffice.WebApi.Data.ContactPersonId[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.RemoveContactSelectionMembersFromIdsAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.RemoveContactSelectionMembersFromSearchAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.RemoveSelectionMembersAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.RemoveSelectionMembersByIdAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.RemoveSelectionMembersFromSearchAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.SaveSelectionEntityAsync(SuperOffice.WebApi.Data.SelectionEntity,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.SetDuplicateRulesStatusAsync(SuperOffice.WebApi.Data.DuplicateRule[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.SetDynamicSelectionCriteria2Async(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.SetDynamicSelectionCriteria3Async(System.Int32,SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],System.String,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.SetDynamicSelectionCriteriaAsync(System.Int32,SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.SetDynamicSelectionCriteriaGroupsAsync(System.Int32,SuperOffice.WebApi.Data.ArchiveRestrictionGroup[],SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.StartMailMergeAsync(SuperOffice.WebApi.Data.MailMergeSettings,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.SelectionAgent.UpdateTypicalSearchAsync(SuperOffice.WebApi.Data.TypicalSearches,SuperOffice.WebApi.RequestOptions)
  langs:
  - csharp
  - vb
  name: SelectionAgent
  nameWithType: SelectionAgent
  fullName: SuperOffice.WebApi.Agents.SelectionAgent
  type: Class
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSelections, entities, members and tasks\n"
  example:
  - "\n<pre><code>  using SuperOffice.WebApi;\n  using SuperOffice.WebApi.Agents;\n\n  var mySession = new WebApiOptions(&quot;http://example.com/super/api&quot;);\n  mySession.Authorization = new AuthorizationUsernamePassword(&quot;user&quot;, &quot;pass&quot;);\n  using (SelectionAgent agent = new SelectionAgent(mySession))\n  {\n        // call methods on agent here...\n  }</code></pre>\n"
  syntax:
    content: 'public class SelectionAgent : AgentBase, IDisposable'
    content.vb: >-
      Public Class SelectionAgent
          Inherits AgentBase
          Implements IDisposable
  inheritance:
  - System.Object
  - SuperOffice.WebApi.Agents.AgentBase
  implements:
  - System.IDisposable
  inheritedMembers:
  - SuperOffice.WebApi.Agents.AgentBase._json
  - SuperOffice.WebApi.Agents.AgentBase._binary
  - SuperOffice.WebApi.Agents.AgentBase._config
  - SuperOffice.WebApi.Agents.AgentBase._client
  - SuperOffice.WebApi.Agents.AgentBase.Merge(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
  - SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream(System.Net.Http.HttpMethod,System.String,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
  - SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization(SuperOffice.WebApi.IAuthorization)
  - SuperOffice.WebApi.Agents.AgentBase.CancelRequest
  - SuperOffice.WebApi.Agents.AgentBase.SendRequestObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
  - SuperOffice.WebApi.Agents.AgentBase.SendRequest(System.Net.Http.HttpRequestMessage,SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage)
  - SuperOffice.WebApi.Agents.AgentBase.ParseResponse``1(System.Net.Http.HttpResponseMessage)
  - SuperOffice.WebApi.Agents.AgentBase.Finally(SuperOffice.WebApi.RequestOptions)
  - SuperOffice.WebApi.Agents.AgentBase.Dispose
  - SuperOffice.WebApi.Agents.AgentBase.Configuration
  - SuperOffice.WebApi.Agents.AgentBase.Client
  - SuperOffice.WebApi.Agents.AgentBase.HasRunningRequest
  - SuperOffice.WebApi.Agents.AgentBase.ClientCancellationTokenSource
  - SuperOffice.WebApi.Agents.AgentBase.ProgressListener
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.WebApi.Agents.SelectionAgent.#ctor(System.Net.Http.HttpClient)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.#ctor(System.Net.Http.HttpClient)
  id: '#ctor(System.Net.Http.HttpClient)'
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: SelectionAgent(HttpClient)
  nameWithType: SelectionAgent.SelectionAgent(HttpClient)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.SelectionAgent(System.Net.Http.HttpClient)
  type: Constructor
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nConstructor: Selections, entities, members and tasks\n"
  syntax:
    content: public SelectionAgent(HttpClient httpClient)
    parameters:
    - id: httpClient
      type: System.Net.Http.HttpClient
      description: Use this HTTP client instead of making a new one. Client is disposed when agent is disposed.
    content.vb: Public Sub New(httpClient As HttpClient)
  overload: SuperOffice.WebApi.Agents.SelectionAgent.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.SelectionAgent.#ctor(SuperOffice.WebApi.WebApiOptions,System.Net.Http.HttpClient)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.#ctor(SuperOffice.WebApi.WebApiOptions,System.Net.Http.HttpClient)
  id: '#ctor(SuperOffice.WebApi.WebApiOptions,System.Net.Http.HttpClient)'
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: SelectionAgent(WebApiOptions, HttpClient)
  nameWithType: SelectionAgent.SelectionAgent(WebApiOptions, HttpClient)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.SelectionAgent(SuperOffice.WebApi.WebApiOptions, System.Net.Http.HttpClient)
  type: Constructor
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nConstructor: Selections, entities, members and tasks\n"
  syntax:
    content: public SelectionAgent(WebApiOptions options, HttpClient httpClient = null)
    parameters:
    - id: options
      type: SuperOffice.WebApi.WebApiOptions
      description: Base URL and authentication values.
    - id: httpClient
      type: System.Net.Http.HttpClient
      description: 'Optional: Use this HTTP client instead of making a new one. Client is disposed when agent is disposed.'
    content.vb: Public Sub New(options As WebApiOptions, httpClient As HttpClient = Nothing)
  overload: SuperOffice.WebApi.Agents.SelectionAgent.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.SelectionAgent.CreateDefaultMailMergeSettingsAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.CreateDefaultMailMergeSettingsAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultMailMergeSettingsAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultMailMergeSettingsAsync(RequestOptions)
  nameWithType: SelectionAgent.CreateDefaultMailMergeSettingsAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.CreateDefaultMailMergeSettingsAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet default values into a new MailMergeSettings.\nNetServer calculates default values on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: public Task<MailMergeSettings> CreateDefaultMailMergeSettingsAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.MailMergeSettings}
      description: A blank MailMergeSettings
    content.vb: Public Function CreateDefaultMailMergeSettingsAsync(requestOptions As RequestOptions = Nothing) As Task(Of MailMergeSettings)
  overload: SuperOffice.WebApi.Agents.SelectionAgent.CreateDefaultMailMergeSettingsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.SelectionAgent.CreateDefaultMailMergeTaskAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.CreateDefaultMailMergeTaskAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultMailMergeTaskAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultMailMergeTaskAsync(RequestOptions)
  nameWithType: SelectionAgent.CreateDefaultMailMergeTaskAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.CreateDefaultMailMergeTaskAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet default values into a new MailMergeTask.\nNetServer calculates default values on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: public Task<MailMergeTask> CreateDefaultMailMergeTaskAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.MailMergeTask}
      description: A blank MailMergeTask
    content.vb: Public Function CreateDefaultMailMergeTaskAsync(requestOptions As RequestOptions = Nothing) As Task(Of MailMergeTask)
  overload: SuperOffice.WebApi.Agents.SelectionAgent.CreateDefaultMailMergeTaskAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.SelectionAgent.CreateDefaultSelectionEntityAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.CreateDefaultSelectionEntityAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateDefaultSelectionEntityAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultSelectionEntityAsync(RequestOptions)
  nameWithType: SelectionAgent.CreateDefaultSelectionEntityAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.CreateDefaultSelectionEntityAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet default values into a new SelectionEntity.\nNetServer calculates default values on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: public Task<SelectionEntity> CreateDefaultSelectionEntityAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SelectionEntity}
      description: A blank SelectionEntity
    content.vb: Public Function CreateDefaultSelectionEntityAsync(requestOptions As RequestOptions = Nothing) As Task(Of SelectionEntity)
  overload: SuperOffice.WebApi.Agents.SelectionAgent.CreateDefaultSelectionEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.SelectionAgent.SaveSelectionEntityAsync(SuperOffice.WebApi.Data.SelectionEntity,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.SaveSelectionEntityAsync(SuperOffice.WebApi.Data.SelectionEntity,SuperOffice.WebApi.RequestOptions)
  id: SaveSelectionEntityAsync(SuperOffice.WebApi.Data.SelectionEntity,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: SaveSelectionEntityAsync(SelectionEntity, RequestOptions)
  nameWithType: SelectionAgent.SaveSelectionEntityAsync(SelectionEntity, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.SaveSelectionEntityAsync(SuperOffice.WebApi.Data.SelectionEntity, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdates the existing SelectionEntity or creates a new SelectionEntity if the id parameter is 0. \n"
  syntax:
    content: public Task<SelectionEntity> SaveSelectionEntityAsync(SelectionEntity selectionEntity, RequestOptions requestOptions = null)
    parameters:
    - id: selectionEntity
      type: SuperOffice.WebApi.Data.SelectionEntity
      description: The SelectionEntity that is saved.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SelectionEntity}
      description: New or updated SelectionEntity
    content.vb: Public Function SaveSelectionEntityAsync(selectionEntity As SelectionEntity, requestOptions As RequestOptions = Nothing) As Task(Of SelectionEntity)
  overload: SuperOffice.WebApi.Agents.SelectionAgent.SaveSelectionEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.SelectionAgent.DeleteSelectionEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.DeleteSelectionEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: DeleteSelectionEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: DeleteSelectionEntityAsync(Int32, RequestOptions)
  nameWithType: SelectionAgent.DeleteSelectionEntityAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.DeleteSelectionEntityAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nDeletes the SelectionEntity\n"
  syntax:
    content: public Task DeleteSelectionEntityAsync(int selectionEntityId, RequestOptions requestOptions = null)
    parameters:
    - id: selectionEntityId
      type: System.Int32
      description: The identity of the SelectionEntity
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function DeleteSelectionEntityAsync(selectionEntityId As Integer, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.SelectionAgent.DeleteSelectionEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.SelectionAgent.GetSelectionEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.GetSelectionEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetSelectionEntityAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: GetSelectionEntityAsync(Int32, RequestOptions)
  nameWithType: SelectionAgent.GetSelectionEntityAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.GetSelectionEntityAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGets a specific SelectionEntity object.                        \n"
  syntax:
    content: public Task<SelectionEntity> GetSelectionEntityAsync(int selectionEntityId, RequestOptions requestOptions = null)
    parameters:
    - id: selectionEntityId
      type: System.Int32
      description: The identifier of the SelectionEntity object
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SelectionEntity}
      description: SelectionEntity
    content.vb: Public Function GetSelectionEntityAsync(selectionEntityId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of SelectionEntity)
  overload: SuperOffice.WebApi.Agents.SelectionAgent.GetSelectionEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.SelectionAgent.CreateSelectionEntityAsync(System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.CreateSelectionEntityAsync(System.String,SuperOffice.WebApi.RequestOptions)
  id: CreateSelectionEntityAsync(System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: CreateSelectionEntityAsync(String, RequestOptions)
  nameWithType: SelectionAgent.CreateSelectionEntityAsync(String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.CreateSelectionEntityAsync(System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCreate (but do not save) a new selection entity, for the current user and the given target table; other fields populated as by CreateDefaultSelectionEntity()\n"
  syntax:
    content: public Task<SelectionEntity> CreateSelectionEntityAsync(string targetTableName, RequestOptions requestOptions = null)
    parameters:
    - id: targetTableName
      type: System.String
      description: The name of the target table, such as &apos;contact&apos; or &apos;appointment&apos;; any table for which Selection functionality is enabled
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SelectionEntity}
      description: The new SelectionEntity, which has not yet been saved
    content.vb: Public Function CreateSelectionEntityAsync(targetTableName As String, requestOptions As RequestOptions = Nothing) As Task(Of SelectionEntity)
  overload: SuperOffice.WebApi.Agents.SelectionAgent.CreateSelectionEntityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.SelectionAgent.CreateContactSelectionFromSelectionAsync(System.Int32,System.String,SuperOffice.WebApi.Data.SelectionType,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.CreateContactSelectionFromSelectionAsync(System.Int32,System.String,SuperOffice.WebApi.Data.SelectionType,System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: CreateContactSelectionFromSelectionAsync(System.Int32,System.String,SuperOffice.WebApi.Data.SelectionType,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: CreateContactSelectionFromSelectionAsync(Int32, String, SelectionType, Boolean, RequestOptions)
  nameWithType: SelectionAgent.CreateContactSelectionFromSelectionAsync(Int32, String, SelectionType, Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.CreateContactSelectionFromSelectionAsync(System.Int32, System.String, SuperOffice.WebApi.Data.SelectionType, System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCreates a new selection based on selection members from an existing selection.\n"
  syntax:
    content: public Task<SelectionEntity> CreateContactSelectionFromSelectionAsync(int selectionId, string name, SelectionType targetSelectionType, bool copyMembers, RequestOptions requestOptions = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to copy members from.
    - id: name
      type: System.String
      description: The name of the new selection.
    - id: targetSelectionType
      type: SuperOffice.WebApi.Data.SelectionType
      description: The type of ContactSelection to create. The type can be static or dynamic. If the original selection to copy from is static, the SelectionType can only be static. If the original selection is dynamic, both a static and dynamic selection can be created.
    - id: copyMembers
      type: System.Boolean
      description: If true, the members from the original selection will be added to the newly created selection.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SelectionEntity}
      description: Returns the newly created SelectionEntity.
    content.vb: Public Function CreateContactSelectionFromSelectionAsync(selectionId As Integer, name As String, targetSelectionType As SelectionType, copyMembers As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of SelectionEntity)
  overload: SuperOffice.WebApi.Agents.SelectionAgent.CreateContactSelectionFromSelectionAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.SelectionAgent.CreateTemporaryContactSelectionFromContactPersonIdsAsync(SuperOffice.WebApi.Data.ContactPersonId[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.CreateTemporaryContactSelectionFromContactPersonIdsAsync(SuperOffice.WebApi.Data.ContactPersonId[],SuperOffice.WebApi.RequestOptions)
  id: CreateTemporaryContactSelectionFromContactPersonIdsAsync(SuperOffice.WebApi.Data.ContactPersonId[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: CreateTemporaryContactSelectionFromContactPersonIdsAsync(ContactPersonId[], RequestOptions)
  nameWithType: SelectionAgent.CreateTemporaryContactSelectionFromContactPersonIdsAsync(ContactPersonId[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.CreateTemporaryContactSelectionFromContactPersonIdsAsync(SuperOffice.WebApi.Data.ContactPersonId[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCreates a temporary selection with members from a collection of ContactPerson id&apos;s.\n"
  syntax:
    content: public Task<SelectionEntity> CreateTemporaryContactSelectionFromContactPersonIdsAsync(ContactPersonId[] contactPersonIds, RequestOptions requestOptions = null)
    parameters:
    - id: contactPersonIds
      type: SuperOffice.WebApi.Data.ContactPersonId[]
      description: A collection of ContactPersonId to copy into the temporary contact selection as members.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SelectionEntity}
      description: Returns the newly created SelectionEntity.
    content.vb: Public Function CreateTemporaryContactSelectionFromContactPersonIdsAsync(contactPersonIds As ContactPersonId(), requestOptions As RequestOptions = Nothing) As Task(Of SelectionEntity)
  overload: SuperOffice.WebApi.Agents.SelectionAgent.CreateTemporaryContactSelectionFromContactPersonIdsAsync*
  nameWithType.vb: SelectionAgent.CreateTemporaryContactSelectionFromContactPersonIdsAsync(ContactPersonId(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.SelectionAgent.CreateTemporaryContactSelectionFromContactPersonIdsAsync(SuperOffice.WebApi.Data.ContactPersonId(), SuperOffice.WebApi.RequestOptions)
  name.vb: CreateTemporaryContactSelectionFromContactPersonIdsAsync(ContactPersonId(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.SelectionAgent.CreateTemporaryContactSelectionFromProjectMembersAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.CreateTemporaryContactSelectionFromProjectMembersAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: CreateTemporaryContactSelectionFromProjectMembersAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: CreateTemporaryContactSelectionFromProjectMembersAsync(Int32, RequestOptions)
  nameWithType: SelectionAgent.CreateTemporaryContactSelectionFromProjectMembersAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.CreateTemporaryContactSelectionFromProjectMembersAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCreates a temporary selection with members from an existing project.\n"
  syntax:
    content: public Task<SelectionEntity> CreateTemporaryContactSelectionFromProjectMembersAsync(int projectId, RequestOptions requestOptions = null)
    parameters:
    - id: projectId
      type: System.Int32
      description: The id of the project to add members from.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SelectionEntity}
      description: Returns the newly created SelectionEntity.
    content.vb: Public Function CreateTemporaryContactSelectionFromProjectMembersAsync(projectId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of SelectionEntity)
  overload: SuperOffice.WebApi.Agents.SelectionAgent.CreateTemporaryContactSelectionFromProjectMembersAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.SelectionAgent.CopyContactSelectionMembersAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.CopyContactSelectionMembersAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: CopyContactSelectionMembersAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: CopyContactSelectionMembersAsync(Int32, Int32, RequestOptions)
  nameWithType: SelectionAgent.CopyContactSelectionMembersAsync(Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.CopyContactSelectionMembersAsync(System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCopy contact selection members from selection into an existing selection.\n"
  syntax:
    content: public Task CopyContactSelectionMembersAsync(int fromSelectionId, int toSelectionId, RequestOptions requestOptions = null)
    parameters:
    - id: fromSelectionId
      type: System.Int32
      description: The id of the selection to copy members from.
    - id: toSelectionId
      type: System.Int32
      description: The id of the selection to copy members to.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function CopyContactSelectionMembersAsync(fromSelectionId As Integer, toSelectionId As Integer, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.SelectionAgent.CopyContactSelectionMembersAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.SelectionAgent.GetRecipientStatisticsAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.GetRecipientStatisticsAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetRecipientStatisticsAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: GetRecipientStatisticsAsync(Int32, RequestOptions)
  nameWithType: SelectionAgent.GetRecipientStatisticsAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.GetRecipientStatisticsAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns a RecipientStatistics object with a count of addresses, emailaddresses and emailaddresses.\n"
  syntax:
    content: public Task<RecipientStatistics> GetRecipientStatisticsAsync(int selectionId, RequestOptions requestOptions = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to get the statistics for.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.RecipientStatistics}
      description: Returns a RecipientStatistics object.
    content.vb: Public Function GetRecipientStatisticsAsync(selectionId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of RecipientStatistics)
  overload: SuperOffice.WebApi.Agents.SelectionAgent.GetRecipientStatisticsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.SelectionAgent.GetRecipientStatisticsFromProjectMembersAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.GetRecipientStatisticsFromProjectMembersAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetRecipientStatisticsFromProjectMembersAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: GetRecipientStatisticsFromProjectMembersAsync(Int32, RequestOptions)
  nameWithType: SelectionAgent.GetRecipientStatisticsFromProjectMembersAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.GetRecipientStatisticsFromProjectMembersAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns a RecipientStatistics object with a count of addresses, emailaddresses and emailaddresses based on members in a project.\n"
  syntax:
    content: public Task<RecipientStatistics> GetRecipientStatisticsFromProjectMembersAsync(int projectId, RequestOptions requestOptions = null)
    parameters:
    - id: projectId
      type: System.Int32
      description: The id of the project to get the member statistics for.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.RecipientStatistics}
      description: Returns a RecipientStatistics object.
    content.vb: Public Function GetRecipientStatisticsFromProjectMembersAsync(projectId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of RecipientStatistics)
  overload: SuperOffice.WebApi.Agents.SelectionAgent.GetRecipientStatisticsFromProjectMembersAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.SelectionAgent.GetRecipientStatisticsFromContactPersonIdsAsync(SuperOffice.WebApi.Data.ContactPersonId[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.GetRecipientStatisticsFromContactPersonIdsAsync(SuperOffice.WebApi.Data.ContactPersonId[],SuperOffice.WebApi.RequestOptions)
  id: GetRecipientStatisticsFromContactPersonIdsAsync(SuperOffice.WebApi.Data.ContactPersonId[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: GetRecipientStatisticsFromContactPersonIdsAsync(ContactPersonId[], RequestOptions)
  nameWithType: SelectionAgent.GetRecipientStatisticsFromContactPersonIdsAsync(ContactPersonId[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.GetRecipientStatisticsFromContactPersonIdsAsync(SuperOffice.WebApi.Data.ContactPersonId[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nReturns a RecipientStatistics object with a count of addresses, emailaddresses and emailaddresses based on contact and persons in a collection of ContactPersonId.\n"
  syntax:
    content: public Task<RecipientStatistics> GetRecipientStatisticsFromContactPersonIdsAsync(ContactPersonId[] contactPersonIds, RequestOptions requestOptions = null)
    parameters:
    - id: contactPersonIds
      type: SuperOffice.WebApi.Data.ContactPersonId[]
      description: A collection of ContactPersonId to get the statistics for.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.RecipientStatistics}
      description: Returns a RecipientStatistics object.
    content.vb: Public Function GetRecipientStatisticsFromContactPersonIdsAsync(contactPersonIds As ContactPersonId(), requestOptions As RequestOptions = Nothing) As Task(Of RecipientStatistics)
  overload: SuperOffice.WebApi.Agents.SelectionAgent.GetRecipientStatisticsFromContactPersonIdsAsync*
  nameWithType.vb: SelectionAgent.GetRecipientStatisticsFromContactPersonIdsAsync(ContactPersonId(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.SelectionAgent.GetRecipientStatisticsFromContactPersonIdsAsync(SuperOffice.WebApi.Data.ContactPersonId(), SuperOffice.WebApi.RequestOptions)
  name.vb: GetRecipientStatisticsFromContactPersonIdsAsync(ContactPersonId(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.SelectionAgent.AddContactSelectionMembersAsync(System.Int32,SuperOffice.WebApi.Data.ContactPersonId[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.AddContactSelectionMembersAsync(System.Int32,SuperOffice.WebApi.Data.ContactPersonId[],SuperOffice.WebApi.RequestOptions)
  id: AddContactSelectionMembersAsync(System.Int32,SuperOffice.WebApi.Data.ContactPersonId[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: AddContactSelectionMembersAsync(Int32, ContactPersonId[], RequestOptions)
  nameWithType: SelectionAgent.AddContactSelectionMembersAsync(Int32, ContactPersonId[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.AddContactSelectionMembersAsync(System.Int32, SuperOffice.WebApi.Data.ContactPersonId[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nAdds the collection of ContactPersonId as members to the static selection\n"
  syntax:
    content: public Task AddContactSelectionMembersAsync(int selectionId, ContactPersonId[] contactPersonIds, RequestOptions requestOptions = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection where to members will be added to.
    - id: contactPersonIds
      type: SuperOffice.WebApi.Data.ContactPersonId[]
      description: A collection of ContactPersonId to add to the selection.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function AddContactSelectionMembersAsync(selectionId As Integer, contactPersonIds As ContactPersonId(), requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.SelectionAgent.AddContactSelectionMembersAsync*
  nameWithType.vb: SelectionAgent.AddContactSelectionMembersAsync(Int32, ContactPersonId(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.SelectionAgent.AddContactSelectionMembersAsync(System.Int32, SuperOffice.WebApi.Data.ContactPersonId(), SuperOffice.WebApi.RequestOptions)
  name.vb: AddContactSelectionMembersAsync(Int32, ContactPersonId(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.SelectionAgent.RemoveContactSelectionMembersAsync(System.Int32,SuperOffice.WebApi.Data.ContactPersonId[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.RemoveContactSelectionMembersAsync(System.Int32,SuperOffice.WebApi.Data.ContactPersonId[],SuperOffice.WebApi.RequestOptions)
  id: RemoveContactSelectionMembersAsync(System.Int32,SuperOffice.WebApi.Data.ContactPersonId[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: RemoveContactSelectionMembersAsync(Int32, ContactPersonId[], RequestOptions)
  nameWithType: SelectionAgent.RemoveContactSelectionMembersAsync(Int32, ContactPersonId[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.RemoveContactSelectionMembersAsync(System.Int32, SuperOffice.WebApi.Data.ContactPersonId[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nRemoves members from the selection as  specified in the collection of ContactPersonId.\n"
  syntax:
    content: public Task RemoveContactSelectionMembersAsync(int selectionId, ContactPersonId[] contactPersonIds, RequestOptions requestOptions = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection where to members will be removed.
    - id: contactPersonIds
      type: SuperOffice.WebApi.Data.ContactPersonId[]
      description: A collection of ContactPersonId to remove from the static selection.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function RemoveContactSelectionMembersAsync(selectionId As Integer, contactPersonIds As ContactPersonId(), requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.SelectionAgent.RemoveContactSelectionMembersAsync*
  nameWithType.vb: SelectionAgent.RemoveContactSelectionMembersAsync(Int32, ContactPersonId(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.SelectionAgent.RemoveContactSelectionMembersAsync(System.Int32, SuperOffice.WebApi.Data.ContactPersonId(), SuperOffice.WebApi.RequestOptions)
  name.vb: RemoveContactSelectionMembersAsync(Int32, ContactPersonId(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.SelectionAgent.RemoveContactSelectionMembersFromIdsAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.RemoveContactSelectionMembersFromIdsAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: RemoveContactSelectionMembersFromIdsAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: RemoveContactSelectionMembersFromIdsAsync(Int32, Int32[], RequestOptions)
  nameWithType: SelectionAgent.RemoveContactSelectionMembersFromIdsAsync(Int32, Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.RemoveContactSelectionMembersFromIdsAsync(System.Int32, System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nRemoves members from the selection using a collection a selectionmember id&apos;s. Members can only be removed from single selection.\n"
  syntax:
    content: public Task RemoveContactSelectionMembersFromIdsAsync(int selectionId, int[] selectionMembersIds, RequestOptions requestOptions = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection where to members will be removed.
    - id: selectionMembersIds
      type: System.Int32[]
      description: An array of selectionmember id&apos;s to remove from the selection.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function RemoveContactSelectionMembersFromIdsAsync(selectionId As Integer, selectionMembersIds As Integer(), requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.SelectionAgent.RemoveContactSelectionMembersFromIdsAsync*
  nameWithType.vb: SelectionAgent.RemoveContactSelectionMembersFromIdsAsync(Int32, Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.SelectionAgent.RemoveContactSelectionMembersFromIdsAsync(System.Int32, System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: RemoveContactSelectionMembersFromIdsAsync(Int32, Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.SelectionAgent.AddContactSelectionMembersFromSearchAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.AddContactSelectionMembersFromSearchAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: AddContactSelectionMembersFromSearchAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: AddContactSelectionMembersFromSearchAsync(Int32, String, RequestOptions)
  nameWithType: SelectionAgent.AddContactSelectionMembersFromSearchAsync(Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.AddContactSelectionMembersFromSearchAsync(System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nAdds members to the selection from the search result.\n"
  syntax:
    content: public Task<int> AddContactSelectionMembersFromSearchAsync(int selectionId, string storageKey, RequestOptions requestOptions = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to add members
    - id: storageKey
      type: System.String
      description: Storage key to be interpreted by the restriction storage provider, when it fetches criteria for the search
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: Number of members added
    content.vb: Public Function AddContactSelectionMembersFromSearchAsync(selectionId As Integer, storageKey As String, requestOptions As RequestOptions = Nothing) As Task(Of Integer)
  overload: SuperOffice.WebApi.Agents.SelectionAgent.AddContactSelectionMembersFromSearchAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.SelectionAgent.RemoveContactSelectionMembersFromSearchAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.RemoveContactSelectionMembersFromSearchAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: RemoveContactSelectionMembersFromSearchAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: RemoveContactSelectionMembersFromSearchAsync(Int32, String, RequestOptions)
  nameWithType: SelectionAgent.RemoveContactSelectionMembersFromSearchAsync(Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.RemoveContactSelectionMembersFromSearchAsync(System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nRemoves members from the selection using the search result.\n"
  syntax:
    content: public Task<int> RemoveContactSelectionMembersFromSearchAsync(int selectionId, string storageKey, RequestOptions requestOptions = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to remove members.
    - id: storageKey
      type: System.String
      description: Storage key to be interpreted by the restriction storage provider, when it fetches criteria for the search.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: Number of members removed
    content.vb: Public Function RemoveContactSelectionMembersFromSearchAsync(selectionId As Integer, storageKey As String, requestOptions As RequestOptions = Nothing) As Task(Of Integer)
  overload: SuperOffice.WebApi.Agents.SelectionAgent.RemoveContactSelectionMembersFromSearchAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.SelectionAgent.CreateTemporaryContactSelectionAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.CreateTemporaryContactSelectionAsync(SuperOffice.WebApi.RequestOptions)
  id: CreateTemporaryContactSelectionAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: CreateTemporaryContactSelectionAsync(RequestOptions)
  nameWithType: SelectionAgent.CreateTemporaryContactSelectionAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.CreateTemporaryContactSelectionAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCreates a temporary selection.\n"
  syntax:
    content: public Task<SelectionEntity> CreateTemporaryContactSelectionAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SelectionEntity}
      description: Returns the newly created SelectionEntity.
    content.vb: Public Function CreateTemporaryContactSelectionAsync(requestOptions As RequestOptions = Nothing) As Task(Of SelectionEntity)
  overload: SuperOffice.WebApi.Agents.SelectionAgent.CreateTemporaryContactSelectionAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.SelectionAgent.CreateTemporaryContactSelectionFromSelectionMemberIdsAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.CreateTemporaryContactSelectionFromSelectionMemberIdsAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: CreateTemporaryContactSelectionFromSelectionMemberIdsAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: CreateTemporaryContactSelectionFromSelectionMemberIdsAsync(Int32, Int32[], RequestOptions)
  nameWithType: SelectionAgent.CreateTemporaryContactSelectionFromSelectionMemberIdsAsync(Int32, Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.CreateTemporaryContactSelectionFromSelectionMemberIdsAsync(System.Int32, System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCreates a temporary selection with members from a collection of selectionmember id&apos;s.\n"
  syntax:
    content: public Task<SelectionEntity> CreateTemporaryContactSelectionFromSelectionMemberIdsAsync(int selectionId, int[] selectionMemberIds, RequestOptions requestOptions = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The selectionId the selectionmembers is a part of.
    - id: selectionMemberIds
      type: System.Int32[]
      description: A collection of int ids to copy into the temporary contact selection as members.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SelectionEntity}
      description: Returns the newly created SelectionEntity.
    content.vb: Public Function CreateTemporaryContactSelectionFromSelectionMemberIdsAsync(selectionId As Integer, selectionMemberIds As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of SelectionEntity)
  overload: SuperOffice.WebApi.Agents.SelectionAgent.CreateTemporaryContactSelectionFromSelectionMemberIdsAsync*
  nameWithType.vb: SelectionAgent.CreateTemporaryContactSelectionFromSelectionMemberIdsAsync(Int32, Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.SelectionAgent.CreateTemporaryContactSelectionFromSelectionMemberIdsAsync(System.Int32, System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: CreateTemporaryContactSelectionFromSelectionMemberIdsAsync(Int32, Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.SelectionAgent.AddRemoveContactSelectionMemberInterestsAsync(System.Int32,System.Int32[],System.Int32[],System.Int32[],System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.AddRemoveContactSelectionMemberInterestsAsync(System.Int32,System.Int32[],System.Int32[],System.Int32[],System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: AddRemoveContactSelectionMemberInterestsAsync(System.Int32,System.Int32[],System.Int32[],System.Int32[],System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: AddRemoveContactSelectionMemberInterestsAsync(Int32, Int32[], Int32[], Int32[], Int32[], RequestOptions)
  nameWithType: SelectionAgent.AddRemoveContactSelectionMemberInterestsAsync(Int32, Int32[], Int32[], Int32[], Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.AddRemoveContactSelectionMemberInterestsAsync(System.Int32, System.Int32[], System.Int32[], System.Int32[], System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nAdds or removes interests on companies and persons in a selection.\n"
  syntax:
    content: public Task AddRemoveContactSelectionMemberInterestsAsync(int selectionId, int[] addCompanyInterests, int[] removeCompanyInterests, int[] addContactInterests, int[] removeContactInterests, RequestOptions requestOptions = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to add or remove interests members from.
    - id: addCompanyInterests
      type: System.Int32[]
      description: Array of int containing the id&apos;s of the interests to add to the company.
    - id: removeCompanyInterests
      type: System.Int32[]
      description: Array of int containing the id&apos;s of the interests to remove from the company.
    - id: addContactInterests
      type: System.Int32[]
      description: Array of int containing the id&apos;s of the interests to add to the contact.
    - id: removeContactInterests
      type: System.Int32[]
      description: Array of int containing the id&apos;s of the interests to remove from the contact.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function AddRemoveContactSelectionMemberInterestsAsync(selectionId As Integer, addCompanyInterests As Integer(), removeCompanyInterests As Integer(), addContactInterests As Integer(), removeContactInterests As Integer(), requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.SelectionAgent.AddRemoveContactSelectionMemberInterestsAsync*
  nameWithType.vb: SelectionAgent.AddRemoveContactSelectionMemberInterestsAsync(Int32, Int32(), Int32(), Int32(), Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.SelectionAgent.AddRemoveContactSelectionMemberInterestsAsync(System.Int32, System.Int32(), System.Int32(), System.Int32(), System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: AddRemoveContactSelectionMemberInterestsAsync(Int32, Int32(), Int32(), Int32(), Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.SelectionAgent.EditContactSelectionMemberDetailsAsync(System.Int32,SuperOffice.WebApi.Data.SelectionMemberEditValues,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.EditContactSelectionMemberDetailsAsync(System.Int32,SuperOffice.WebApi.Data.SelectionMemberEditValues,SuperOffice.WebApi.RequestOptions)
  id: EditContactSelectionMemberDetailsAsync(System.Int32,SuperOffice.WebApi.Data.SelectionMemberEditValues,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: EditContactSelectionMemberDetailsAsync(Int32, SelectionMemberEditValues, RequestOptions)
  nameWithType: SelectionAgent.EditContactSelectionMemberDetailsAsync(Int32, SelectionMemberEditValues, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.EditContactSelectionMemberDetailsAsync(System.Int32, SuperOffice.WebApi.Data.SelectionMemberEditValues, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nEdit company and contact details in a selection based on contents in selectionMemberEditValues.\n"
  syntax:
    content: public Task EditContactSelectionMemberDetailsAsync(int selectionId, SelectionMemberEditValues selectionMemberEditValues, RequestOptions requestOptions = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to edit members from.
    - id: selectionMemberEditValues
      type: SuperOffice.WebApi.Data.SelectionMemberEditValues
      description: An object of &lt;see cref=&quot;SelectionMemberEditValues&quot;/> describing what should be changed for companys and contacts.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function EditContactSelectionMemberDetailsAsync(selectionId As Integer, selectionMemberEditValues As SelectionMemberEditValues, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.SelectionAgent.EditContactSelectionMemberDetailsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.SelectionAgent.GenerateFollowUpsAsync(System.Int32,SuperOffice.WebApi.Data.AppointmentEntity,System.Int32,System.Boolean,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.GenerateFollowUpsAsync(System.Int32,SuperOffice.WebApi.Data.AppointmentEntity,System.Int32,System.Boolean,System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: GenerateFollowUpsAsync(System.Int32,SuperOffice.WebApi.Data.AppointmentEntity,System.Int32,System.Boolean,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: GenerateFollowUpsAsync(Int32, AppointmentEntity, Int32, Boolean, Boolean, RequestOptions)
  nameWithType: SelectionAgent.GenerateFollowUpsAsync(Int32, AppointmentEntity, Int32, Boolean, Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.GenerateFollowUpsAsync(System.Int32, SuperOffice.WebApi.Data.AppointmentEntity, System.Int32, System.Boolean, System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGenerate follow-ups for members in the selection.\n"
  syntax:
    content: public Task GenerateFollowUpsAsync(int selectionId, AppointmentEntity appointmentEntity, int associateId, bool saveOnContactOwner, bool uniqueContact, RequestOptions requestOptions = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to generate the follow-ups for.
    - id: appointmentEntity
      type: SuperOffice.WebApi.Data.AppointmentEntity
      description: The AppointmentEntity with information about the appointment.
    - id: associateId
      type: System.Int32
      description: The associate to save the appointments on. If saveOnContactOwner is true, this id will be ignored. Appointments wil be saved on current user if associateId = 0.
    - id: saveOnContactOwner
      type: System.Boolean
      description: If true, the appointments will be saved on contact owner (Our contact). This parameter will override associateId if true.
    - id: uniqueContact
      type: System.Boolean
      description: If true, only one appointment will be created for each contact.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function GenerateFollowUpsAsync(selectionId As Integer, appointmentEntity As AppointmentEntity, associateId As Integer, saveOnContactOwner As Boolean, uniqueContact As Boolean, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.SelectionAgent.GenerateFollowUpsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.SelectionAgent.ExportSelectionMembersAsync(System.Int32,System.String,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.ExportSelectionMembersAsync(System.Int32,System.String,System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: ExportSelectionMembersAsync(System.Int32,System.String,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: ExportSelectionMembersAsync(Int32, String, Boolean, RequestOptions)
  nameWithType: SelectionAgent.ExportSelectionMembersAsync(Int32, String, Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.ExportSelectionMembersAsync(System.Int32, System.String, System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nExportSelectionMembers will generate a string that is the result of substituting the template variables with values from selectionmembers.\n"
  syntax:
    content: public Task<byte[]> ExportSelectionMembersAsync(int selectionId, string templateName, bool useContacts, RequestOptions requestOptions = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to generate the exported file.
    - id: templateName
      type: System.String
      description: The templateName parameter is the relative path of a .sxf file template. The .sxf files can be found in \template or in the user folder of the so archive.
    - id: useContacts
      type: System.Boolean
      description: If the selection contains other members than contacts, setting this to true will export the contact archive of the selection.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Byte[]}
      description: Returns a unicode byte array with the file to export to the user.
    content.vb: Public Function ExportSelectionMembersAsync(selectionId As Integer, templateName As String, useContacts As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of Byte())
  overload: SuperOffice.WebApi.Agents.SelectionAgent.ExportSelectionMembersAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.SelectionAgent.ExportSelectionMembersWithOrderByAsync(System.Int32,System.String,System.Boolean,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.ExportSelectionMembersWithOrderByAsync(System.Int32,System.String,System.Boolean,System.String,SuperOffice.WebApi.RequestOptions)
  id: ExportSelectionMembersWithOrderByAsync(System.Int32,System.String,System.Boolean,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: ExportSelectionMembersWithOrderByAsync(Int32, String, Boolean, String, RequestOptions)
  nameWithType: SelectionAgent.ExportSelectionMembersWithOrderByAsync(Int32, String, Boolean, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.ExportSelectionMembersWithOrderByAsync(System.Int32, System.String, System.Boolean, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nExportSelectionMembers will generate a string that is the result of substituting the template variables with values from selectionmembers.\n"
  syntax:
    content: public Task<byte[]> ExportSelectionMembersWithOrderByAsync(int selectionId, string templateName, bool useContacts, string orderBy, RequestOptions requestOptions = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to generate the exported file.
    - id: templateName
      type: System.String
      description: The templateName parameter is the relative path of a .sxf file template. The .sxf files can be found in \template or in the user folder of the so archive.
    - id: useContacts
      type: System.Boolean
      description: If the selection contains other members than contacts, setting this to true will export the contact archive of the selection.
    - id: orderBy
      type: System.String
      description: OrderBy. &lt;Column,OrderBySortType>
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Byte[]}
      description: Returns a unicode byte array with the file to export to the user.
    content.vb: Public Function ExportSelectionMembersWithOrderByAsync(selectionId As Integer, templateName As String, useContacts As Boolean, orderBy As String, requestOptions As RequestOptions = Nothing) As Task(Of Byte())
  overload: SuperOffice.WebApi.Agents.SelectionAgent.ExportSelectionMembersWithOrderByAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.SelectionAgent.StartMailMergeAsync(SuperOffice.WebApi.Data.MailMergeSettings,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.StartMailMergeAsync(SuperOffice.WebApi.Data.MailMergeSettings,SuperOffice.WebApi.RequestOptions)
  id: StartMailMergeAsync(SuperOffice.WebApi.Data.MailMergeSettings,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: StartMailMergeAsync(MailMergeSettings, RequestOptions)
  nameWithType: SelectionAgent.StartMailMergeAsync(MailMergeSettings, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.StartMailMergeAsync(SuperOffice.WebApi.Data.MailMergeSettings, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nStart a mailmerge operation with specified settings.\n"
  syntax:
    content: public Task StartMailMergeAsync(MailMergeSettings settings, RequestOptions requestOptions = null)
    parameters:
    - id: settings
      type: SuperOffice.WebApi.Data.MailMergeSettings
      description: All settings needed to perform the mailmerge operation.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function StartMailMergeAsync(settings As MailMergeSettings, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.SelectionAgent.StartMailMergeAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.SelectionAgent.SetDuplicateRulesStatusAsync(SuperOffice.WebApi.Data.DuplicateRule[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.SetDuplicateRulesStatusAsync(SuperOffice.WebApi.Data.DuplicateRule[],SuperOffice.WebApi.RequestOptions)
  id: SetDuplicateRulesStatusAsync(SuperOffice.WebApi.Data.DuplicateRule[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: SetDuplicateRulesStatusAsync(DuplicateRule[], RequestOptions)
  nameWithType: SelectionAgent.SetDuplicateRulesStatusAsync(DuplicateRule[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.SetDuplicateRulesStatusAsync(SuperOffice.WebApi.Data.DuplicateRule[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nSet which duplicate rules should be active or not\n"
  syntax:
    content: public Task SetDuplicateRulesStatusAsync(DuplicateRule[] rules, RequestOptions requestOptions = null)
    parameters:
    - id: rules
      type: SuperOffice.WebApi.Data.DuplicateRule[]
      description: Duplicate rules to update active status for
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SetDuplicateRulesStatusAsync(rules As DuplicateRule(), requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.SelectionAgent.SetDuplicateRulesStatusAsync*
  nameWithType.vb: SelectionAgent.SetDuplicateRulesStatusAsync(DuplicateRule(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.SelectionAgent.SetDuplicateRulesStatusAsync(SuperOffice.WebApi.Data.DuplicateRule(), SuperOffice.WebApi.RequestOptions)
  name.vb: SetDuplicateRulesStatusAsync(DuplicateRule(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.SelectionAgent.GetDuplicatesAsync(System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.GetDuplicatesAsync(System.String,SuperOffice.WebApi.RequestOptions)
  id: GetDuplicatesAsync(System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: GetDuplicatesAsync(String, RequestOptions)
  nameWithType: SelectionAgent.GetDuplicatesAsync(String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.GetDuplicatesAsync(System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet duplicates(exact or similar in the database) based on the name\n"
  syntax:
    content: public Task<DuplicateEntry[]> GetDuplicatesAsync(string name, RequestOptions requestOptions = null)
    parameters:
    - id: name
      type: System.String
      description: Name used for lookup
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DuplicateEntry[]}
      description: Any records matching the specified name
    content.vb: Public Function GetDuplicatesAsync(name As String, requestOptions As RequestOptions = Nothing) As Task(Of DuplicateEntry())
  overload: SuperOffice.WebApi.Agents.SelectionAgent.GetDuplicatesAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.SelectionAgent.GetDuplicateRulesAsync(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.GetDuplicateRulesAsync(SuperOffice.WebApi.RequestOptions)
  id: GetDuplicateRulesAsync(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: GetDuplicateRulesAsync(RequestOptions)
  nameWithType: SelectionAgent.GetDuplicateRulesAsync(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.GetDuplicateRulesAsync(SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nRetrieve all available duplicate rules for selection\n"
  syntax:
    content: public Task<DuplicateRule[]> GetDuplicateRulesAsync(RequestOptions requestOptions = null)
    parameters:
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DuplicateRule[]}
      description: All available duplicate rules
    content.vb: Public Function GetDuplicateRulesAsync(requestOptions As RequestOptions = Nothing) As Task(Of DuplicateRule())
  overload: SuperOffice.WebApi.Agents.SelectionAgent.GetDuplicateRulesAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.SelectionAgent.CreateNewEntryAsync(SuperOffice.WebApi.Data.DuplicateEntry,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.CreateNewEntryAsync(SuperOffice.WebApi.Data.DuplicateEntry,SuperOffice.WebApi.RequestOptions)
  id: CreateNewEntryAsync(SuperOffice.WebApi.Data.DuplicateEntry,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: CreateNewEntryAsync(DuplicateEntry, RequestOptions)
  nameWithType: SelectionAgent.CreateNewEntryAsync(DuplicateEntry, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.CreateNewEntryAsync(SuperOffice.WebApi.Data.DuplicateEntry, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCreates a new selection based on external duplicate\n"
  syntax:
    content: public Task<int> CreateNewEntryAsync(DuplicateEntry duplicate, RequestOptions requestOptions = null)
    parameters:
    - id: duplicate
      type: SuperOffice.WebApi.Data.DuplicateEntry
      description: The duplicate to create a new entry based upon
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: The database identity of the newly created entry
    content.vb: Public Function CreateNewEntryAsync(duplicate As DuplicateEntry, requestOptions As RequestOptions = Nothing) As Task(Of Integer)
  overload: SuperOffice.WebApi.Agents.SelectionAgent.CreateNewEntryAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.SelectionAgent.DeleteContactsAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.DeleteContactsAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: DeleteContactsAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: DeleteContactsAsync(Int32, RequestOptions)
  nameWithType: SelectionAgent.DeleteContactsAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.DeleteContactsAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nDeletes all contacts from a selection. If a contact does not have delete rights, it will be skipped.\n"
  syntax:
    content: public Task DeleteContactsAsync(int selectionId, RequestOptions requestOptions = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: Id of the selection the delete operation will be performed.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function DeleteContactsAsync(selectionId As Integer, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.SelectionAgent.DeleteContactsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.SelectionAgent.AddSelectionMembersAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.AddSelectionMembersAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: AddSelectionMembersAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: AddSelectionMembersAsync(Int32, Int32[], RequestOptions)
  nameWithType: SelectionAgent.AddSelectionMembersAsync(Int32, Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.AddSelectionMembersAsync(System.Int32, System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nAdd selection members to a static selection of type others than contacts.\n"
  syntax:
    content: public Task<int> AddSelectionMembersAsync(int selectionId, int[] ids, RequestOptions requestOptions = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The selection id to add the members to.
    - id: ids
      type: System.Int32[]
      description: Collection of ids to add to the selection.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: Returns number of members added to the selection.
    content.vb: Public Function AddSelectionMembersAsync(selectionId As Integer, ids As Integer(), requestOptions As RequestOptions = Nothing) As Task(Of Integer)
  overload: SuperOffice.WebApi.Agents.SelectionAgent.AddSelectionMembersAsync*
  nameWithType.vb: SelectionAgent.AddSelectionMembersAsync(Int32, Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.SelectionAgent.AddSelectionMembersAsync(System.Int32, System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: AddSelectionMembersAsync(Int32, Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.SelectionAgent.RemoveSelectionMembersAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.RemoveSelectionMembersAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: RemoveSelectionMembersAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: RemoveSelectionMembersAsync(Int32, Int32[], RequestOptions)
  nameWithType: SelectionAgent.RemoveSelectionMembersAsync(Int32, Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.RemoveSelectionMembersAsync(System.Int32, System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nRemoves members from the selection as  specified in the collection of entity ids. The ids are selection member ids (selection member primary key)\n"
  syntax:
    content: public Task RemoveSelectionMembersAsync(int selectionId, int[] selectionMemberIds, RequestOptions requestOptions = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection where to members will be removed.
    - id: selectionMemberIds
      type: System.Int32[]
      description: Selection member primary keys
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function RemoveSelectionMembersAsync(selectionId As Integer, selectionMemberIds As Integer(), requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.SelectionAgent.RemoveSelectionMembersAsync*
  nameWithType.vb: SelectionAgent.RemoveSelectionMembersAsync(Int32, Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.SelectionAgent.RemoveSelectionMembersAsync(System.Int32, System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: RemoveSelectionMembersAsync(Int32, Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.SelectionAgent.RemoveSelectionMembersByIdAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.RemoveSelectionMembersByIdAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  id: RemoveSelectionMembersByIdAsync(System.Int32,System.Int32[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: RemoveSelectionMembersByIdAsync(Int32, Int32[], RequestOptions)
  nameWithType: SelectionAgent.RemoveSelectionMembersByIdAsync(Int32, Int32[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.RemoveSelectionMembersByIdAsync(System.Int32, System.Int32[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nRemoves members from the selection as specified in the collection of entity ids. The ids can be a collection of sale ids, or other supported types.\n"
  syntax:
    content: public Task RemoveSelectionMembersByIdAsync(int selectionId, int[] ids, RequestOptions requestOptions = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection where to members will be removed.
    - id: ids
      type: System.Int32[]
      description: A collection of sale/project/contact ids to remove from the selection. The ids can be a collection of sale ids, or other supported types.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function RemoveSelectionMembersByIdAsync(selectionId As Integer, ids As Integer(), requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.SelectionAgent.RemoveSelectionMembersByIdAsync*
  nameWithType.vb: SelectionAgent.RemoveSelectionMembersByIdAsync(Int32, Int32(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.SelectionAgent.RemoveSelectionMembersByIdAsync(System.Int32, System.Int32(), SuperOffice.WebApi.RequestOptions)
  name.vb: RemoveSelectionMembersByIdAsync(Int32, Int32(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.SelectionAgent.AddSelectionMembersFromSearchAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.AddSelectionMembersFromSearchAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: AddSelectionMembersFromSearchAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: AddSelectionMembersFromSearchAsync(Int32, String, RequestOptions)
  nameWithType: SelectionAgent.AddSelectionMembersFromSearchAsync(Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.AddSelectionMembersFromSearchAsync(System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nAdds members from the selection using the search result.\n"
  syntax:
    content: public Task<int> AddSelectionMembersFromSearchAsync(int selectionId, string storageKey, RequestOptions requestOptions = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to add members
    - id: storageKey
      type: System.String
      description: Storage key to be interpreted by the restriction storage provider, when it fetches criteria for the search
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: Number of members added.
    content.vb: Public Function AddSelectionMembersFromSearchAsync(selectionId As Integer, storageKey As String, requestOptions As RequestOptions = Nothing) As Task(Of Integer)
  overload: SuperOffice.WebApi.Agents.SelectionAgent.AddSelectionMembersFromSearchAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.SelectionAgent.RemoveSelectionMembersFromSearchAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.RemoveSelectionMembersFromSearchAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: RemoveSelectionMembersFromSearchAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: RemoveSelectionMembersFromSearchAsync(Int32, String, RequestOptions)
  nameWithType: SelectionAgent.RemoveSelectionMembersFromSearchAsync(Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.RemoveSelectionMembersFromSearchAsync(System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nRemoves members from the selection using the search result.\n"
  syntax:
    content: public Task<int> RemoveSelectionMembersFromSearchAsync(int selectionId, string storageKey, RequestOptions requestOptions = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to remove members.
    - id: storageKey
      type: System.String
      description: Storage key to be interpreted by the restriction storage provider, when it fetches criteria for the search.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: Number of members removed
    content.vb: Public Function RemoveSelectionMembersFromSearchAsync(selectionId As Integer, storageKey As String, requestOptions As RequestOptions = Nothing) As Task(Of Integer)
  overload: SuperOffice.WebApi.Agents.SelectionAgent.RemoveSelectionMembersFromSearchAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.SelectionAgent.CopySelectionMembersAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.CopySelectionMembersAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: CopySelectionMembersAsync(System.Int32,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: CopySelectionMembersAsync(Int32, Int32, RequestOptions)
  nameWithType: SelectionAgent.CopySelectionMembersAsync(Int32, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.CopySelectionMembersAsync(System.Int32, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCopy selection members from selection into an existing selection.\n"
  syntax:
    content: public Task CopySelectionMembersAsync(int fromSelectionId, int toSelectionId, RequestOptions requestOptions = null)
    parameters:
    - id: fromSelectionId
      type: System.Int32
      description: The id of the selection to copy members from.
    - id: toSelectionId
      type: System.Int32
      description: The id of the selection to copy members to.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function CopySelectionMembersAsync(fromSelectionId As Integer, toSelectionId As Integer, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.SelectionAgent.CopySelectionMembersAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.SelectionAgent.CreateTemporarySelectionFromIdsAsync(System.Int32[],System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.CreateTemporarySelectionFromIdsAsync(System.Int32[],System.Int32,SuperOffice.WebApi.RequestOptions)
  id: CreateTemporarySelectionFromIdsAsync(System.Int32[],System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: CreateTemporarySelectionFromIdsAsync(Int32[], Int32, RequestOptions)
  nameWithType: SelectionAgent.CreateTemporarySelectionFromIdsAsync(Int32[], Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.CreateTemporarySelectionFromIdsAsync(System.Int32[], System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCreates a temporary selection with members from a collection of entity id&apos;s.\n"
  syntax:
    content: public Task<SelectionEntity> CreateTemporarySelectionFromIdsAsync(int[] ids, int targetTableNumber, RequestOptions requestOptions = null)
    parameters:
    - id: ids
      type: System.Int32[]
      description: A collection of Ids to copy into the temporary selection as members. The ids are primary keys of entities defined by the targetTableNumber parameter.
    - id: targetTableNumber
      type: System.Int32
      description: The type of selection to create.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SelectionEntity}
      description: Returns the newly created SelectionEntity.
    content.vb: Public Function CreateTemporarySelectionFromIdsAsync(ids As Integer(), targetTableNumber As Integer, requestOptions As RequestOptions = Nothing) As Task(Of SelectionEntity)
  overload: SuperOffice.WebApi.Agents.SelectionAgent.CreateTemporarySelectionFromIdsAsync*
  nameWithType.vb: SelectionAgent.CreateTemporarySelectionFromIdsAsync(Int32(), Int32, RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.SelectionAgent.CreateTemporarySelectionFromIdsAsync(System.Int32(), System.Int32, SuperOffice.WebApi.RequestOptions)
  name.vb: CreateTemporarySelectionFromIdsAsync(Int32(), Int32, RequestOptions)
- uid: SuperOffice.WebApi.Agents.SelectionAgent.CreateSelectionFromSelectionAsync(System.Int32,System.String,SuperOffice.WebApi.Data.SelectionType,System.Boolean,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.CreateSelectionFromSelectionAsync(System.Int32,System.String,SuperOffice.WebApi.Data.SelectionType,System.Boolean,SuperOffice.WebApi.RequestOptions)
  id: CreateSelectionFromSelectionAsync(System.Int32,System.String,SuperOffice.WebApi.Data.SelectionType,System.Boolean,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: CreateSelectionFromSelectionAsync(Int32, String, SelectionType, Boolean, RequestOptions)
  nameWithType: SelectionAgent.CreateSelectionFromSelectionAsync(Int32, String, SelectionType, Boolean, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.CreateSelectionFromSelectionAsync(System.Int32, System.String, SuperOffice.WebApi.Data.SelectionType, System.Boolean, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCreates a new selection based on selection members from an existing selection.\n"
  syntax:
    content: public Task<SelectionEntity> CreateSelectionFromSelectionAsync(int selectionId, string name, SelectionType targetSelectionType, bool copyMembers, RequestOptions requestOptions = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to copy members from.
    - id: name
      type: System.String
      description: The name of the new selection.
    - id: targetSelectionType
      type: SuperOffice.WebApi.Data.SelectionType
      description: The type of Selection to create. The type can be static or dynamic. If the original selection to copy from is static, the SelectionType can only be static. If the original selection is dynamic, both a static and dynamic selection can be created.
    - id: copyMembers
      type: System.Boolean
      description: If true, the members from the original selection will be added to the newly created selection.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SelectionEntity}
      description: Returns the newly created SelectionEntity.
    content.vb: Public Function CreateSelectionFromSelectionAsync(selectionId As Integer, name As String, targetSelectionType As SelectionType, copyMembers As Boolean, requestOptions As RequestOptions = Nothing) As Task(Of SelectionEntity)
  overload: SuperOffice.WebApi.Agents.SelectionAgent.CreateSelectionFromSelectionAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.SelectionAgent.CreateContactSelectionFromShadowSelectionAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.CreateContactSelectionFromShadowSelectionAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: CreateContactSelectionFromShadowSelectionAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: CreateContactSelectionFromShadowSelectionAsync(Int32, String, RequestOptions)
  nameWithType: SelectionAgent.CreateContactSelectionFromShadowSelectionAsync(Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.CreateContactSelectionFromShadowSelectionAsync(System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nCreates a new contact selection based on contact selection members from an existing shadow sale, appointment, project or document selection. The new selection will always be static even if the original selection is dynamic.\n"
  syntax:
    content: public Task<SelectionEntity> CreateContactSelectionFromShadowSelectionAsync(int selectionId, string name, RequestOptions requestOptions = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to copy members from.
    - id: name
      type: System.String
      description: The name of the new selection.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SelectionEntity}
      description: Returns the newly created SelectionEntity.
    content.vb: Public Function CreateContactSelectionFromShadowSelectionAsync(selectionId As Integer, name As String, requestOptions As RequestOptions = Nothing) As Task(Of SelectionEntity)
  overload: SuperOffice.WebApi.Agents.SelectionAgent.CreateContactSelectionFromShadowSelectionAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.SelectionAgent.DeleteEntitiesAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.DeleteEntitiesAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: DeleteEntitiesAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: DeleteEntitiesAsync(Int32, RequestOptions)
  nameWithType: SelectionAgent.DeleteEntitiesAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.DeleteEntitiesAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nDeletes all entities from a selection. If an entity does not have delete rights, it will be skipped.\n"
  syntax:
    content: public Task DeleteEntitiesAsync(int selectionId, RequestOptions requestOptions = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: Id of the selection the delete operation will be performed.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function DeleteEntitiesAsync(selectionId As Integer, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.SelectionAgent.DeleteEntitiesAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.SelectionAgent.GetParentCombinedSelectionsAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.GetParentCombinedSelectionsAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetParentCombinedSelectionsAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: GetParentCombinedSelectionsAsync(Int32, RequestOptions)
  nameWithType: SelectionAgent.GetParentCombinedSelectionsAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.GetParentCombinedSelectionsAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet a list of all selection ids where the given selection is used to create a combined selection.\n"
  syntax:
    content: public Task<int[]> GetParentCombinedSelectionsAsync(int selectionId, RequestOptions requestOptions = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The selectionId to query for.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.Int32[]}
      description: Array of selectionIds.
    content.vb: Public Function GetParentCombinedSelectionsAsync(selectionId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of Integer())
  overload: SuperOffice.WebApi.Agents.SelectionAgent.GetParentCombinedSelectionsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.SelectionAgent.GetSelectionMembersArchiveRowsAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.GetSelectionMembersArchiveRowsAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetSelectionMembersArchiveRowsAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: GetSelectionMembersArchiveRowsAsync(Int32, String, RequestOptions)
  nameWithType: SelectionAgent.GetSelectionMembersArchiveRowsAsync(Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.GetSelectionMembersArchiveRowsAsync(System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet the list of members in this selection. The type of members depends on the target table of the selection.\n"
  syntax:
    content: public Task<ArchiveListItem[]> GetSelectionMembersArchiveRowsAsync(int selectionId, string select, RequestOptions requestOptions = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The selectionId we want selection members for.
    - id: select
      type: System.String
      description: (optional) Comma separated Column names to include in result. List of columns varies depending on the selection&apos;s TargetTable. e.g. &apos;name&apos;, &apos;firstname&apos;, &apos;startTime&apos;
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ArchiveListItem[]}
      description: Array of archive rows, where each item represents one row of data (row level data + the requested columns). NULL if selection does not exist.
    content.vb: Public Function GetSelectionMembersArchiveRowsAsync(selectionId As Integer, select As String, requestOptions As RequestOptions = Nothing) As Task(Of ArchiveListItem())
  overload: SuperOffice.WebApi.Agents.SelectionAgent.GetSelectionMembersArchiveRowsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.SelectionAgent.GetSelectionShadowMembersArchiveRowsAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.GetSelectionShadowMembersArchiveRowsAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: GetSelectionShadowMembersArchiveRowsAsync(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: GetSelectionShadowMembersArchiveRowsAsync(Int32, String, RequestOptions)
  nameWithType: SelectionAgent.GetSelectionShadowMembersArchiveRowsAsync(Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.GetSelectionShadowMembersArchiveRowsAsync(System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet the list of members in this selection&apos;s shadow (i.e. the list of contacts + persons referenced in the main selection).\n"
  syntax:
    content: public Task<ArchiveListItem[]> GetSelectionShadowMembersArchiveRowsAsync(int selectionId, string select, RequestOptions requestOptions = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The selectionId we want selection members for.
    - id: select
      type: System.String
      description: (optional) Comma separated Column names to include in result. List of columns varies depending on the selection&apos;s TargetTable. e.g. &apos;name&apos;, &apos;firstname,name&apos;, &apos;startTime,firstname,name&apos;
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ArchiveListItem[]}
      description: Array of archive rows, where each item represents one row of data (row level data + the requested columns). NULL if selection does not exist.
    content.vb: Public Function GetSelectionShadowMembersArchiveRowsAsync(selectionId As Integer, select As String, requestOptions As RequestOptions = Nothing) As Task(Of ArchiveListItem())
  overload: SuperOffice.WebApi.Agents.SelectionAgent.GetSelectionShadowMembersArchiveRowsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.SelectionAgent.GetDynamicSelectionCriteriaAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.GetDynamicSelectionCriteriaAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetDynamicSelectionCriteriaAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: GetDynamicSelectionCriteriaAsync(Int32, RequestOptions)
  nameWithType: SelectionAgent.GetDynamicSelectionCriteriaAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.GetDynamicSelectionCriteriaAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet the criteria for this dynamic selection.\n"
  syntax:
    content: public Task<ArchiveRestrictionInfo[]> GetDynamicSelectionCriteriaAsync(int selectionId, RequestOptions requestOptions = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to add members
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ArchiveRestrictionInfo[]}
      description: Criteria defining the selection result. NULL if selection does not exist, or if this is not a dynamic selection.
    content.vb: Public Function GetDynamicSelectionCriteriaAsync(selectionId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of ArchiveRestrictionInfo())
  overload: SuperOffice.WebApi.Agents.SelectionAgent.GetDynamicSelectionCriteriaAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.SelectionAgent.SetDynamicSelectionCriteriaAsync(System.Int32,SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.SetDynamicSelectionCriteriaAsync(System.Int32,SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],SuperOffice.WebApi.RequestOptions)
  id: SetDynamicSelectionCriteriaAsync(System.Int32,SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: SetDynamicSelectionCriteriaAsync(Int32, ArchiveRestrictionInfo[], RequestOptions)
  nameWithType: SelectionAgent.SetDynamicSelectionCriteriaAsync(Int32, ArchiveRestrictionInfo[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.SetDynamicSelectionCriteriaAsync(System.Int32, SuperOffice.WebApi.Data.ArchiveRestrictionInfo[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdate the criteria for this dynamic selection. Replaces existing criteria with the new values.\n"
  example:
  - "\n<pre><code>&quot;name = &apos;SuperOffice AS&apos;&quot;\n&quot;name startsWith &apos;SuperOffice&apos;&quot;\n&quot;startsWith(name, &apos;SuperOffice&apos;)&quot;\n&quot;updatedDate after &apos;2000.12.30&apos;&quot;\n&quot;category = 10&quot;\n&quot;category in (10, 12, 53)&quot;\n&quot;category in (2,3,4) and name startswith &apos;super&apos;&quot;\n&quot;category in (2,3,4) or name startswith &apos;super&apos;&quot;\n&quot;(category = 2 or business = 3) and name contains &apos;super&apos;&quot;\n<p></p>\nvar agent = new FindAgent();\n<p></p>\nvar restrictions = new ArchiveRestrictionInfo[1];\nrestrictions[0] = new ArchiveRestrictionInfo(&quot;updatedBy&quot;, &quot;equals&quot;, &quot;2&quot;);\nvar res = _agent.FindFromRestrictions(restrictions, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res1.ArchiveRows)\n    (int)row.ColumnData[&quot;updatedBy&quot;].RawValue == 2\n<p></p>\nvar restrictions = new ArchiveRestrictionInfo[2];\nrestrictions[0] = new ArchiveRestrictionInfo(&quot;updatedBy&quot;, &quot;equals&quot;, &quot;2&quot;);\nrestrictions[1] = new ArchiveRestrictionInfo(&quot;updatedDate&quot;, &quot;after&quot;, &quot;2000.1.2&quot;);\nvar res = _agent.FindFromRestrictions(restrictions, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res2.ArchiveRows)\n    (int)row.ColumnData[&quot;updatedBy&quot;].RawValue != 6 &amp;&amp; \n    row.ColumnData[&quot;updatedDate&quot;].GetDateTimeValue() > new DateTime(2000, 1, 2);\n<p></p></code></pre>\n"
  syntax:
    content: public Task<ArchiveRestrictionInfo[]> SetDynamicSelectionCriteriaAsync(int selectionId, ArchiveRestrictionInfo[] criteria, RequestOptions requestOptions = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to add members
    - id: criteria
      type: SuperOffice.WebApi.Data.ArchiveRestrictionInfo[]
      description: Criteria defining the selection result.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ArchiveRestrictionInfo[]}
      description: Criteria defining the selection result. NULL if this is not a dynamic selection.
    content.vb: Public Function SetDynamicSelectionCriteriaAsync(selectionId As Integer, criteria As ArchiveRestrictionInfo(), requestOptions As RequestOptions = Nothing) As Task(Of ArchiveRestrictionInfo())
  overload: SuperOffice.WebApi.Agents.SelectionAgent.SetDynamicSelectionCriteriaAsync*
  nameWithType.vb: SelectionAgent.SetDynamicSelectionCriteriaAsync(Int32, ArchiveRestrictionInfo(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.SelectionAgent.SetDynamicSelectionCriteriaAsync(System.Int32, SuperOffice.WebApi.Data.ArchiveRestrictionInfo(), SuperOffice.WebApi.RequestOptions)
  name.vb: SetDynamicSelectionCriteriaAsync(Int32, ArchiveRestrictionInfo(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.SelectionAgent.SetDynamicSelectionCriteria2Async(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.SetDynamicSelectionCriteria2Async(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  id: SetDynamicSelectionCriteria2Async(System.Int32,System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: SetDynamicSelectionCriteria2Async(Int32, String, RequestOptions)
  nameWithType: SelectionAgent.SetDynamicSelectionCriteria2Async(Int32, String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.SetDynamicSelectionCriteria2Async(System.Int32, System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdate the criteria for this dynamic selection using string. Criteria are parsed from the OData filter form: &apos;&apos;name startswith &apos;foo&apos; and category in (1,2,3)&apos;&apos;\n"
  example:
  - "\n<pre><code>&quot;name = &apos;SuperOffice AS&apos;&quot;\n&quot;name startsWith &apos;SuperOffice&apos;&quot;\n&quot;startsWith(name, &apos;SuperOffice&apos;)&quot;\n&quot;updatedDate after &apos;2000.12.30&apos;&quot;\n&quot;category = 10&quot;\n&quot;category in (10, 12, 53)&quot;\n&quot;category in (2,3,4) and name startswith &apos;super&apos;&quot;\n&quot;category in (2,3,4) or name startswith &apos;super&apos;&quot;\n&quot;(category = 2 or business = 3) and name contains &apos;super&apos;&quot;\n<p></p>\nvar agent = new FindAgent();\n<p></p>\nvar res1 = agent.FindFromRestrictions2(&quot;updatedBy = 2&quot;, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res1.ArchiveRows)\n    (int)row.ColumnData[&quot;updatedBy&quot;].RawValue == 2\n<p></p>\nvar res2 = agent.FindFromRestrictions2(&quot;updatedBy unequals 6 and updatedDate after &apos;2000.1.2&apos;&quot;, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res2.ArchiveRows)\n    (int)row.ColumnData[&quot;updatedBy&quot;].RawValue != 6 &amp;&amp; \n    row.ColumnData[&quot;updatedDate&quot;].GetDateTimeValue() > new DateTime(2000, 1, 2);\n<p></p>\nvar res3 = agent.FindFromRestrictions2(&quot;category in (2,3)&quot;, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res3.ArchiveRows)\n    (int)row.ColumnData[&quot;category&quot;].RawValue == 2 || (int)row.ColumnData[&quot;category&quot;].RawValue == 3;\n<p></p>\nvar res4 = agent.FindFromRestrictions2(&quot;sale/date after &apos;2000.1.2&apos;&quot;, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res4.ArchiveRows)\n    (row.ColumnData[&quot;sale/date&quot;].GetDateTimeValue().Year >= 2000 \n<p></p>\nvar res5 = _agent.FindFromRestrictionsColumns2(&quot;(category =2 or business = 3) and name contains &apos;e&apos;&quot;, \n         _provider, &quot;category,business,name&quot;, 100, 0);\nforeach (var row in res5.ArchiveRows)\n    ((int)x.ColumnData[&quot;category&quot;].RawValue == 2 || \n     (int)x.ColumnData[&quot;business&quot;].RawValue == 3) &amp;&amp; \n     (x.ColumnData[&quot;name&quot;].RawValue as string).Contains(&quot;e&quot;) );\n<p></p>\n<p></p></code></pre>\n"
  syntax:
    content: public Task<ArchiveRestrictionInfo[]> SetDynamicSelectionCriteria2Async(int selectionId, string filter, RequestOptions requestOptions = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to add members
    - id: filter
      type: System.String
      description: 'Criteria defining the selection result in OData filter form: `category in (1,2,3) and name = &apos;foo&apos;` '
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ArchiveRestrictionInfo[]}
      description: Criteria defining the selection result. NULL if this is not a dynamic selection.
    content.vb: Public Function SetDynamicSelectionCriteria2Async(selectionId As Integer, filter As String, requestOptions As RequestOptions = Nothing) As Task(Of ArchiveRestrictionInfo())
  overload: SuperOffice.WebApi.Agents.SelectionAgent.SetDynamicSelectionCriteria2Async*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.SelectionAgent.SetDynamicSelectionCriteria3Async(System.Int32,SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],System.String,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.SetDynamicSelectionCriteria3Async(System.Int32,SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],System.String,SuperOffice.WebApi.RequestOptions)
  id: SetDynamicSelectionCriteria3Async(System.Int32,SuperOffice.WebApi.Data.ArchiveRestrictionInfo[],System.String,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: SetDynamicSelectionCriteria3Async(Int32, ArchiveRestrictionInfo[], String, RequestOptions)
  nameWithType: SelectionAgent.SetDynamicSelectionCriteria3Async(Int32, ArchiveRestrictionInfo[], String, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.SetDynamicSelectionCriteria3Async(System.Int32, SuperOffice.WebApi.Data.ArchiveRestrictionInfo[], System.String, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdate the criteria for this dynamic selection. Use criteria as either restriction objects or OData string format. Criteria are parsed from the OData filter form: &apos;&apos;name startswith &apos;foo&apos; and category in (1,2,3)&apos;&apos;\n"
  example:
  - "\n<pre><code>&quot;name = &apos;SuperOffice AS&apos;&quot;\n&quot;name startsWith &apos;SuperOffice&apos;&quot;\n&quot;startsWith(name, &apos;SuperOffice&apos;)&quot;\n&quot;updatedDate after &apos;2000.12.30&apos;&quot;\n&quot;category = 10&quot;\n&quot;category in (10, 12, 53)&quot;\n&quot;category in (2,3,4) and name startswith &apos;super&apos;&quot;\n&quot;category in (2,3,4) or name startswith &apos;super&apos;&quot;\n&quot;(category = 2 or business = 3) and name contains &apos;super&apos;&quot;\n<p></p>\nvar agent = new FindAgent();\n<p></p>\nvar restrictions = new ArchiveRestrictionInfo[1];\nrestrictions[0] = new ArchiveRestrictionInfo(&quot;updatedBy&quot;, &quot;equals&quot;, &quot;2&quot;);\nvar res = _agent.FindFromRestrictions(restrictions, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res1.ArchiveRows)\n    (int)row.ColumnData[&quot;updatedBy&quot;].RawValue == 2\n<p></p>\nvar restrictions = new ArchiveRestrictionInfo[2];\nrestrictions[0] = new ArchiveRestrictionInfo(&quot;updatedBy&quot;, &quot;equals&quot;, &quot;2&quot;);\nrestrictions[1] = new ArchiveRestrictionInfo(&quot;updatedDate&quot;, &quot;after&quot;, &quot;2000.1.2&quot;);\nvar res = _agent.FindFromRestrictions(restrictions, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res2.ArchiveRows)\n    (int)row.ColumnData[&quot;updatedBy&quot;].RawValue != 6 &amp;&amp; \n    row.ColumnData[&quot;updatedDate&quot;].GetDateTimeValue() > new DateTime(2000, 1, 2);\n<p></p>\n<p></p>\n&quot;name = &apos;SuperOffice AS&apos;&quot;\n&quot;name startsWith &apos;SuperOffice&apos;&quot;\n&quot;startsWith(name, &apos;SuperOffice&apos;)&quot;\n&quot;updatedDate after &apos;2000.12.30&apos;&quot;\n&quot;category = 10&quot;\n&quot;category in (10, 12, 53)&quot;\n&quot;category in (2,3,4) and name startswith &apos;super&apos;&quot;\n&quot;category in (2,3,4) or name startswith &apos;super&apos;&quot;\n&quot;(category = 2 or business = 3) and name contains &apos;super&apos;&quot;\n<p></p>\nvar agent = new FindAgent();\n<p></p>\nvar res1 = agent.FindFromRestrictions2(&quot;updatedBy = 2&quot;, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res1.ArchiveRows)\n    (int)row.ColumnData[&quot;updatedBy&quot;].RawValue == 2\n<p></p>\nvar res2 = agent.FindFromRestrictions2(&quot;updatedBy unequals 6 and updatedDate after &apos;2000.1.2&apos;&quot;, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res2.ArchiveRows)\n    (int)row.ColumnData[&quot;updatedBy&quot;].RawValue != 6 &amp;&amp; \n    row.ColumnData[&quot;updatedDate&quot;].GetDateTimeValue() > new DateTime(2000, 1, 2);\n<p></p>\nvar res3 = agent.FindFromRestrictions2(&quot;category in (2,3)&quot;, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res3.ArchiveRows)\n    (int)row.ColumnData[&quot;category&quot;].RawValue == 2 || (int)row.ColumnData[&quot;category&quot;].RawValue == 3;\n<p></p>\nvar res4 = agent.FindFromRestrictions2(&quot;sale/date after &apos;2000.1.2&apos;&quot;, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res4.ArchiveRows)\n    (row.ColumnData[&quot;sale/date&quot;].GetDateTimeValue().Year >= 2000 \n<p></p>\nvar res5 = _agent.FindFromRestrictionsColumns2(&quot;(category =2 or business = 3) and name contains &apos;e&apos;&quot;, \n         _provider, &quot;category,business,name&quot;, 100, 0);\nforeach (var row in res5.ArchiveRows)\n    ((int)x.ColumnData[&quot;category&quot;].RawValue == 2 || \n     (int)x.ColumnData[&quot;business&quot;].RawValue == 3) &amp;&amp; \n     (x.ColumnData[&quot;name&quot;].RawValue as string).Contains(&quot;e&quot;) );\n<p></p>\n<p></p></code></pre>\n"
  syntax:
    content: public Task<ArchiveRestrictionInfo[]> SetDynamicSelectionCriteria3Async(int selectionId, ArchiveRestrictionInfo[] criteria, string filter, RequestOptions requestOptions = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to add members
    - id: criteria
      type: SuperOffice.WebApi.Data.ArchiveRestrictionInfo[]
      description: Criteria defining the selection result. Pass NULL if using the filter string instead.
    - id: filter
      type: System.String
      description: 'Criteria defining the selection result in OData filter form: `category in (1,2,3) and name = &apos;foo&apos;`. Pass NULL or empty string &apos;&apos; if using the criteria objects.'
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ArchiveRestrictionInfo[]}
      description: Criteria defining the selection result. NULL if this is not a dynamic selection.
    content.vb: Public Function SetDynamicSelectionCriteria3Async(selectionId As Integer, criteria As ArchiveRestrictionInfo(), filter As String, requestOptions As RequestOptions = Nothing) As Task(Of ArchiveRestrictionInfo())
  overload: SuperOffice.WebApi.Agents.SelectionAgent.SetDynamicSelectionCriteria3Async*
  nameWithType.vb: SelectionAgent.SetDynamicSelectionCriteria3Async(Int32, ArchiveRestrictionInfo(), String, RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.SelectionAgent.SetDynamicSelectionCriteria3Async(System.Int32, SuperOffice.WebApi.Data.ArchiveRestrictionInfo(), System.String, SuperOffice.WebApi.RequestOptions)
  name.vb: SetDynamicSelectionCriteria3Async(Int32, ArchiveRestrictionInfo(), String, RequestOptions)
- uid: SuperOffice.WebApi.Agents.SelectionAgent.DeletePersonsAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.DeletePersonsAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: DeletePersonsAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: DeletePersonsAsync(Int32, RequestOptions)
  nameWithType: SelectionAgent.DeletePersonsAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.DeletePersonsAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nDeletes all persons from a selection. If a person does not have delete rights, it will be skipped.\n"
  syntax:
    content: public Task DeletePersonsAsync(int selectionId, RequestOptions requestOptions = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: Id of the selection the delete operation will be performed.
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function DeletePersonsAsync(selectionId As Integer, requestOptions As RequestOptions = Nothing) As Task
  overload: SuperOffice.WebApi.Agents.SelectionAgent.DeletePersonsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.SelectionAgent.GetDynamicSelectionCriteriaGroupsAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.GetDynamicSelectionCriteriaGroupsAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetDynamicSelectionCriteriaGroupsAsync(System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: GetDynamicSelectionCriteriaGroupsAsync(Int32, RequestOptions)
  nameWithType: SelectionAgent.GetDynamicSelectionCriteriaGroupsAsync(Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.GetDynamicSelectionCriteriaGroupsAsync(System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nGet the criteria for this dynamic selection. This call supports multiple criteria groups.\n"
  syntax:
    content: public Task<ArchiveRestrictionGroup[]> GetDynamicSelectionCriteriaGroupsAsync(int selectionId, RequestOptions requestOptions = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to add members
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ArchiveRestrictionGroup[]}
      description: Criteria groups defining the selection result. NULL if selection does not exist, or if this is not a dynamic selection.
    content.vb: Public Function GetDynamicSelectionCriteriaGroupsAsync(selectionId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of ArchiveRestrictionGroup())
  overload: SuperOffice.WebApi.Agents.SelectionAgent.GetDynamicSelectionCriteriaGroupsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.SelectionAgent.SetDynamicSelectionCriteriaGroupsAsync(System.Int32,SuperOffice.WebApi.Data.ArchiveRestrictionGroup[],SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.SetDynamicSelectionCriteriaGroupsAsync(System.Int32,SuperOffice.WebApi.Data.ArchiveRestrictionGroup[],SuperOffice.WebApi.RequestOptions)
  id: SetDynamicSelectionCriteriaGroupsAsync(System.Int32,SuperOffice.WebApi.Data.ArchiveRestrictionGroup[],SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: SetDynamicSelectionCriteriaGroupsAsync(Int32, ArchiveRestrictionGroup[], RequestOptions)
  nameWithType: SelectionAgent.SetDynamicSelectionCriteriaGroupsAsync(Int32, ArchiveRestrictionGroup[], RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.SetDynamicSelectionCriteriaGroupsAsync(System.Int32, SuperOffice.WebApi.Data.ArchiveRestrictionGroup[], SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdate the criteria for this dynamic selection. Replaces existing criteria with the new values. This call supports multiple criteria groups.\n"
  example:
  - "\n<pre><code>&quot;name = &apos;SuperOffice AS&apos;&quot;\n&quot;name startsWith &apos;SuperOffice&apos;&quot;\n&quot;startsWith(name, &apos;SuperOffice&apos;)&quot;\n&quot;updatedDate after &apos;2000.12.30&apos;&quot;\n&quot;category = 10&quot;\n&quot;category in (10, 12, 53)&quot;\n&quot;category in (2,3,4) and name startswith &apos;super&apos;&quot;\n&quot;category in (2,3,4) or name startswith &apos;super&apos;&quot;\n&quot;(category = 2 or business = 3) and name contains &apos;super&apos;&quot;\n<p></p>\nvar agent = new FindAgent();\n<p></p>\nvar restrictions = new ArchiveRestrictionInfo[1];\nrestrictions[0] = new ArchiveRestrictionInfo(&quot;updatedBy&quot;, &quot;equals&quot;, &quot;2&quot;);\nvar res = _agent.FindFromRestrictions(restrictions, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res1.ArchiveRows)\n    (int)row.ColumnData[&quot;updatedBy&quot;].RawValue == 2\n<p></p>\nvar restrictions = new ArchiveRestrictionInfo[2];\nrestrictions[0] = new ArchiveRestrictionInfo(&quot;updatedBy&quot;, &quot;equals&quot;, &quot;2&quot;);\nrestrictions[1] = new ArchiveRestrictionInfo(&quot;updatedDate&quot;, &quot;after&quot;, &quot;2000.1.2&quot;);\nvar res = _agent.FindFromRestrictions(restrictions, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res2.ArchiveRows)\n    (int)row.ColumnData[&quot;updatedBy&quot;].RawValue != 6 &amp;&amp; \n    row.ColumnData[&quot;updatedDate&quot;].GetDateTimeValue() > new DateTime(2000, 1, 2);\n<p></p></code></pre>\n"
  syntax:
    content: public Task<ArchiveRestrictionGroup[]> SetDynamicSelectionCriteriaGroupsAsync(int selectionId, ArchiveRestrictionGroup[] criteria, RequestOptions requestOptions = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to add members
    - id: criteria
      type: SuperOffice.WebApi.Data.ArchiveRestrictionGroup[]
      description: Criteria groups defining the selection result. Empty array is legal, simply means no criteria have been set
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ArchiveRestrictionGroup[]}
      description: Criteria groups defining the selection result. NULL if this is not a dynamic selection.
    content.vb: Public Function SetDynamicSelectionCriteriaGroupsAsync(selectionId As Integer, criteria As ArchiveRestrictionGroup(), requestOptions As RequestOptions = Nothing) As Task(Of ArchiveRestrictionGroup())
  overload: SuperOffice.WebApi.Agents.SelectionAgent.SetDynamicSelectionCriteriaGroupsAsync*
  nameWithType.vb: SelectionAgent.SetDynamicSelectionCriteriaGroupsAsync(Int32, ArchiveRestrictionGroup(), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.WebApi.Agents.SelectionAgent.SetDynamicSelectionCriteriaGroupsAsync(System.Int32, SuperOffice.WebApi.Data.ArchiveRestrictionGroup(), SuperOffice.WebApi.RequestOptions)
  name.vb: SetDynamicSelectionCriteriaGroupsAsync(Int32, ArchiveRestrictionGroup(), RequestOptions)
- uid: SuperOffice.WebApi.Agents.SelectionAgent.GetSelectionForFindAsync(System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.GetSelectionForFindAsync(System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
  id: GetSelectionForFindAsync(System.String,System.Int32,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: GetSelectionForFindAsync(String, Int32, RequestOptions)
  nameWithType: SelectionAgent.GetSelectionForFindAsync(String, Int32, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.GetSelectionForFindAsync(System.String, System.Int32, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nObtain a selection for the given entity, for the current user, of type WorkingSetForFind. Optionally populate criteria from the TypicalSearches system\n"
  syntax:
    content: public Task<SelectionForFind> GetSelectionForFindAsync(string entityName, int typicalSearchId, RequestOptions requestOptions = null)
    parameters:
    - id: entityName
      type: System.String
      description: The name of the entity to make a selection for; examples &apos;sale&apos;, &apos;project&apos;, &apos;y_equipment&apos;
    - id: typicalSearchId
      type: System.Int32
      description: If 0, keep existing criteria; if -1, reset to entity default; > 0 get criteria from given TypicalSearch
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SelectionForFind}
      description: Target selection id and provider name
    content.vb: Public Function GetSelectionForFindAsync(entityName As String, typicalSearchId As Integer, requestOptions As RequestOptions = Nothing) As Task(Of SelectionForFind)
  overload: SuperOffice.WebApi.Agents.SelectionAgent.GetSelectionForFindAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.WebApi.Agents.SelectionAgent.UpdateTypicalSearchAsync(SuperOffice.WebApi.Data.TypicalSearches,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.SelectionAgent.UpdateTypicalSearchAsync(SuperOffice.WebApi.Data.TypicalSearches,SuperOffice.WebApi.RequestOptions)
  id: UpdateTypicalSearchAsync(SuperOffice.WebApi.Data.TypicalSearches,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.SelectionAgent
  langs:
  - csharp
  - vb
  name: UpdateTypicalSearchAsync(TypicalSearches, RequestOptions)
  nameWithType: SelectionAgent.UpdateTypicalSearchAsync(TypicalSearches, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.UpdateTypicalSearchAsync(SuperOffice.WebApi.Data.TypicalSearches, SuperOffice.WebApi.RequestOptions)
  type: Method
  source:
    path: SuperOffice.WebApi
    isExternal: true
  assemblies:
  - SuperOffice.WebApi
  namespace: SuperOffice.WebApi.Agents
  summary: "\nUpdate (import) TypicalSearch information in the database\n"
  syntax:
    content: public Task<string> UpdateTypicalSearchAsync(TypicalSearches searches, RequestOptions requestOptions = null)
    parameters:
    - id: searches
      type: SuperOffice.WebApi.Data.TypicalSearches
      description: TypicalSearch structures to import. If null, then the fileset is scanned for *TypicalSearch.json files and those are imported instead
    - id: requestOptions
      type: SuperOffice.WebApi.RequestOptions
      description: 'Override language/culture codes on this request. '
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Message that can be shown to the user, summarizing what has been done, if anything.
    content.vb: Public Function UpdateTypicalSearchAsync(searches As TypicalSearches, requestOptions As RequestOptions = Nothing) As Task(Of String)
  overload: SuperOffice.WebApi.Agents.SelectionAgent.UpdateTypicalSearchAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.WebApi.Agents
  commentId: N:SuperOffice.WebApi.Agents
  isExternal: true
  name: SuperOffice.WebApi.Agents
  nameWithType: SuperOffice.WebApi.Agents
  fullName: SuperOffice.WebApi.Agents
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.WebApi.Agents.AgentBase
  commentId: T:SuperOffice.WebApi.Agents.AgentBase
  parent: SuperOffice.WebApi.Agents
  isExternal: true
  name: AgentBase
  nameWithType: AgentBase
  fullName: SuperOffice.WebApi.Agents.AgentBase
- uid: System.IDisposable
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: SuperOffice.WebApi.Agents.AgentBase._json
  commentId: F:SuperOffice.WebApi.Agents.AgentBase._json
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: _json
  nameWithType: AgentBase._json
  fullName: SuperOffice.WebApi.Agents.AgentBase._json
- uid: SuperOffice.WebApi.Agents.AgentBase._binary
  commentId: F:SuperOffice.WebApi.Agents.AgentBase._binary
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: _binary
  nameWithType: AgentBase._binary
  fullName: SuperOffice.WebApi.Agents.AgentBase._binary
- uid: SuperOffice.WebApi.Agents.AgentBase._config
  commentId: F:SuperOffice.WebApi.Agents.AgentBase._config
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: _config
  nameWithType: AgentBase._config
  fullName: SuperOffice.WebApi.Agents.AgentBase._config
- uid: SuperOffice.WebApi.Agents.AgentBase._client
  commentId: F:SuperOffice.WebApi.Agents.AgentBase._client
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: _client
  nameWithType: AgentBase._client
  fullName: SuperOffice.WebApi.Agents.AgentBase._client
- uid: SuperOffice.WebApi.Agents.AgentBase.Merge(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.Merge(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: Merge(RequestOptions)
  nameWithType: AgentBase.Merge(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AgentBase.Merge(SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.Merge(SuperOffice.WebApi.RequestOptions)
    name: Merge
    nameWithType: AgentBase.Merge
    fullName: SuperOffice.WebApi.Agents.AgentBase.Merge
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.Merge(SuperOffice.WebApi.RequestOptions)
    name: Merge
    nameWithType: AgentBase.Merge
    fullName: SuperOffice.WebApi.Agents.AgentBase.Merge
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: BuildRequestFromObject(HttpMethod, String, Object, WebApiOptions, String)
  nameWithType: AgentBase.BuildRequestFromObject(HttpMethod, String, Object, WebApiOptions, String)
  fullName: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject(System.Net.Http.HttpMethod, System.String, System.Object, SuperOffice.WebApi.WebApiOptions, System.String)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
    name: BuildRequestFromObject
    nameWithType: AgentBase.BuildRequestFromObject
    fullName: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.WebApiOptions
    name: WebApiOptions
    nameWithType: WebApiOptions
    fullName: SuperOffice.WebApi.WebApiOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
    name: BuildRequestFromObject
    nameWithType: AgentBase.BuildRequestFromObject
    fullName: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.WebApiOptions
    name: WebApiOptions
    nameWithType: WebApiOptions
    fullName: SuperOffice.WebApi.WebApiOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream(System.Net.Http.HttpMethod,System.String,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream(System.Net.Http.HttpMethod,System.String,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: BuildRequestFromStream(HttpMethod, String, Stream, WebApiOptions, String)
  nameWithType: AgentBase.BuildRequestFromStream(HttpMethod, String, Stream, WebApiOptions, String)
  fullName: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream(System.Net.Http.HttpMethod, System.String, System.IO.Stream, SuperOffice.WebApi.WebApiOptions, System.String)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream(System.Net.Http.HttpMethod,System.String,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
    name: BuildRequestFromStream
    nameWithType: AgentBase.BuildRequestFromStream
    fullName: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.WebApiOptions
    name: WebApiOptions
    nameWithType: WebApiOptions
    fullName: SuperOffice.WebApi.WebApiOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream(System.Net.Http.HttpMethod,System.String,System.IO.Stream,SuperOffice.WebApi.WebApiOptions,System.String)
    name: BuildRequestFromStream
    nameWithType: AgentBase.BuildRequestFromStream
    fullName: SuperOffice.WebApi.Agents.AgentBase.BuildRequestFromStream
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.WebApiOptions
    name: WebApiOptions
    nameWithType: WebApiOptions
    fullName: SuperOffice.WebApi.WebApiOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization(SuperOffice.WebApi.IAuthorization)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization(SuperOffice.WebApi.IAuthorization)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: ParseAuthorization(IAuthorization)
  nameWithType: AgentBase.ParseAuthorization(IAuthorization)
  fullName: SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization(SuperOffice.WebApi.IAuthorization)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization(SuperOffice.WebApi.IAuthorization)
    name: ParseAuthorization
    nameWithType: AgentBase.ParseAuthorization
    fullName: SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.IAuthorization
    name: IAuthorization
    nameWithType: IAuthorization
    fullName: SuperOffice.WebApi.IAuthorization
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization(SuperOffice.WebApi.IAuthorization)
    name: ParseAuthorization
    nameWithType: AgentBase.ParseAuthorization
    fullName: SuperOffice.WebApi.Agents.AgentBase.ParseAuthorization
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.IAuthorization
    name: IAuthorization
    nameWithType: IAuthorization
    fullName: SuperOffice.WebApi.IAuthorization
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.CancelRequest
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.CancelRequest
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: CancelRequest()
  nameWithType: AgentBase.CancelRequest()
  fullName: SuperOffice.WebApi.Agents.AgentBase.CancelRequest()
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.CancelRequest
    name: CancelRequest
    nameWithType: AgentBase.CancelRequest
    fullName: SuperOffice.WebApi.Agents.AgentBase.CancelRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.CancelRequest
    name: CancelRequest
    nameWithType: AgentBase.CancelRequest
    fullName: SuperOffice.WebApi.Agents.AgentBase.CancelRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.SendRequestObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.SendRequestObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: SendRequestObject(HttpMethod, String, Object, WebApiOptions, String)
  nameWithType: AgentBase.SendRequestObject(HttpMethod, String, Object, WebApiOptions, String)
  fullName: SuperOffice.WebApi.Agents.AgentBase.SendRequestObject(System.Net.Http.HttpMethod, System.String, System.Object, SuperOffice.WebApi.WebApiOptions, System.String)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.SendRequestObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
    name: SendRequestObject
    nameWithType: AgentBase.SendRequestObject
    fullName: SuperOffice.WebApi.Agents.AgentBase.SendRequestObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.WebApiOptions
    name: WebApiOptions
    nameWithType: WebApiOptions
    fullName: SuperOffice.WebApi.WebApiOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.SendRequestObject(System.Net.Http.HttpMethod,System.String,System.Object,SuperOffice.WebApi.WebApiOptions,System.String)
    name: SendRequestObject
    nameWithType: AgentBase.SendRequestObject
    fullName: SuperOffice.WebApi.Agents.AgentBase.SendRequestObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.WebApiOptions
    name: WebApiOptions
    nameWithType: WebApiOptions
    fullName: SuperOffice.WebApi.WebApiOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.SendRequest(System.Net.Http.HttpRequestMessage,SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.SendRequest(System.Net.Http.HttpRequestMessage,SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: SendRequest(HttpRequestMessage, RequestOptions)
  nameWithType: AgentBase.SendRequest(HttpRequestMessage, RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AgentBase.SendRequest(System.Net.Http.HttpRequestMessage, SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.SendRequest(System.Net.Http.HttpRequestMessage,SuperOffice.WebApi.RequestOptions)
    name: SendRequest
    nameWithType: AgentBase.SendRequest
    fullName: SuperOffice.WebApi.Agents.AgentBase.SendRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.SendRequest(System.Net.Http.HttpRequestMessage,SuperOffice.WebApi.RequestOptions)
    name: SendRequest
    nameWithType: AgentBase.SendRequest
    fullName: SuperOffice.WebApi.Agents.AgentBase.SendRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: ThrowOnResponseError(HttpRequestMessage, HttpResponseMessage)
  nameWithType: AgentBase.ThrowOnResponseError(HttpRequestMessage, HttpResponseMessage)
  fullName: SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError(System.Net.Http.HttpRequestMessage, System.Net.Http.HttpResponseMessage)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage)
    name: ThrowOnResponseError
    nameWithType: AgentBase.ThrowOnResponseError
    fullName: SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage)
    name: ThrowOnResponseError
    nameWithType: AgentBase.ThrowOnResponseError
    fullName: SuperOffice.WebApi.Agents.AgentBase.ThrowOnResponseError
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.ParseResponse``1(System.Net.Http.HttpResponseMessage)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.ParseResponse``1(System.Net.Http.HttpResponseMessage)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: ParseResponse<T>(HttpResponseMessage)
  nameWithType: AgentBase.ParseResponse<T>(HttpResponseMessage)
  fullName: SuperOffice.WebApi.Agents.AgentBase.ParseResponse<T>(System.Net.Http.HttpResponseMessage)
  nameWithType.vb: AgentBase.ParseResponse(Of T)(HttpResponseMessage)
  fullName.vb: SuperOffice.WebApi.Agents.AgentBase.ParseResponse(Of T)(System.Net.Http.HttpResponseMessage)
  name.vb: ParseResponse(Of T)(HttpResponseMessage)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.ParseResponse``1(System.Net.Http.HttpResponseMessage)
    name: ParseResponse<T>
    nameWithType: AgentBase.ParseResponse<T>
    fullName: SuperOffice.WebApi.Agents.AgentBase.ParseResponse<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.ParseResponse``1(System.Net.Http.HttpResponseMessage)
    name: ParseResponse(Of T)
    nameWithType: AgentBase.ParseResponse(Of T)
    fullName: SuperOffice.WebApi.Agents.AgentBase.ParseResponse(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.Finally(SuperOffice.WebApi.RequestOptions)
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.Finally(SuperOffice.WebApi.RequestOptions)
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: Finally(RequestOptions)
  nameWithType: AgentBase.Finally(RequestOptions)
  fullName: SuperOffice.WebApi.Agents.AgentBase.Finally(SuperOffice.WebApi.RequestOptions)
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.Finally(SuperOffice.WebApi.RequestOptions)
    name: Finally
    nameWithType: AgentBase.Finally
    fullName: SuperOffice.WebApi.Agents.AgentBase.Finally
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.Finally(SuperOffice.WebApi.RequestOptions)
    name: Finally
    nameWithType: AgentBase.Finally
    fullName: SuperOffice.WebApi.Agents.AgentBase.Finally
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.WebApi.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: SuperOffice.WebApi.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.Dispose
  commentId: M:SuperOffice.WebApi.Agents.AgentBase.Dispose
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: Dispose()
  nameWithType: AgentBase.Dispose()
  fullName: SuperOffice.WebApi.Agents.AgentBase.Dispose()
  spec.csharp:
  - uid: SuperOffice.WebApi.Agents.AgentBase.Dispose
    name: Dispose
    nameWithType: AgentBase.Dispose
    fullName: SuperOffice.WebApi.Agents.AgentBase.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.WebApi.Agents.AgentBase.Dispose
    name: Dispose
    nameWithType: AgentBase.Dispose
    fullName: SuperOffice.WebApi.Agents.AgentBase.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.AgentBase.Configuration
  commentId: P:SuperOffice.WebApi.Agents.AgentBase.Configuration
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: Configuration
  nameWithType: AgentBase.Configuration
  fullName: SuperOffice.WebApi.Agents.AgentBase.Configuration
- uid: SuperOffice.WebApi.Agents.AgentBase.Client
  commentId: P:SuperOffice.WebApi.Agents.AgentBase.Client
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: Client
  nameWithType: AgentBase.Client
  fullName: SuperOffice.WebApi.Agents.AgentBase.Client
- uid: SuperOffice.WebApi.Agents.AgentBase.HasRunningRequest
  commentId: P:SuperOffice.WebApi.Agents.AgentBase.HasRunningRequest
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: HasRunningRequest
  nameWithType: AgentBase.HasRunningRequest
  fullName: SuperOffice.WebApi.Agents.AgentBase.HasRunningRequest
- uid: SuperOffice.WebApi.Agents.AgentBase.ClientCancellationTokenSource
  commentId: P:SuperOffice.WebApi.Agents.AgentBase.ClientCancellationTokenSource
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: ClientCancellationTokenSource
  nameWithType: AgentBase.ClientCancellationTokenSource
  fullName: SuperOffice.WebApi.Agents.AgentBase.ClientCancellationTokenSource
- uid: SuperOffice.WebApi.Agents.AgentBase.ProgressListener
  commentId: P:SuperOffice.WebApi.Agents.AgentBase.ProgressListener
  parent: SuperOffice.WebApi.Agents.AgentBase
  isExternal: true
  name: ProgressListener
  nameWithType: AgentBase.ProgressListener
  fullName: SuperOffice.WebApi.Agents.AgentBase.ProgressListener
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.WebApi.Agents.SelectionAgent.#ctor*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.#ctor
  isExternal: true
  name: SelectionAgent
  nameWithType: SelectionAgent.SelectionAgent
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.SelectionAgent
- uid: System.Net.Http.HttpClient
  isExternal: true
  name: HttpClient
  nameWithType: HttpClient
  fullName: System.Net.Http.HttpClient
- uid: SuperOffice.WebApi.WebApiOptions
  commentId: T:SuperOffice.WebApi.WebApiOptions
  parent: SuperOffice.WebApi
  isExternal: true
  name: WebApiOptions
  nameWithType: WebApiOptions
  fullName: SuperOffice.WebApi.WebApiOptions
- uid: SuperOffice.WebApi
  commentId: N:SuperOffice.WebApi
  isExternal: true
  name: SuperOffice.WebApi
  nameWithType: SuperOffice.WebApi
  fullName: SuperOffice.WebApi
- uid: SuperOffice.WebApi.Agents.SelectionAgent.CreateDefaultMailMergeSettingsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.CreateDefaultMailMergeSettingsAsync
  isExternal: true
  name: CreateDefaultMailMergeSettingsAsync
  nameWithType: SelectionAgent.CreateDefaultMailMergeSettingsAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.CreateDefaultMailMergeSettingsAsync
- uid: SuperOffice.WebApi.RequestOptions
  commentId: T:SuperOffice.WebApi.RequestOptions
  parent: SuperOffice.WebApi
  isExternal: true
  name: RequestOptions
  nameWithType: RequestOptions
  fullName: SuperOffice.WebApi.RequestOptions
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.MailMergeSettings}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.MailMergeSettings}'
  definition: System.Threading.Tasks.Task`1
  name: Task<MailMergeSettings>
  nameWithType: Task<MailMergeSettings>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.MailMergeSettings>
  nameWithType.vb: Task(Of MailMergeSettings)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.MailMergeSettings)
  name.vb: Task(Of MailMergeSettings)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.MailMergeSettings
    name: MailMergeSettings
    nameWithType: MailMergeSettings
    fullName: SuperOffice.WebApi.Data.MailMergeSettings
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.MailMergeSettings
    name: MailMergeSettings
    nameWithType: MailMergeSettings
    fullName: SuperOffice.WebApi.Data.MailMergeSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.SelectionAgent.CreateDefaultMailMergeTaskAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.CreateDefaultMailMergeTaskAsync
  isExternal: true
  name: CreateDefaultMailMergeTaskAsync
  nameWithType: SelectionAgent.CreateDefaultMailMergeTaskAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.CreateDefaultMailMergeTaskAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.MailMergeTask}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.MailMergeTask}'
  definition: System.Threading.Tasks.Task`1
  name: Task<MailMergeTask>
  nameWithType: Task<MailMergeTask>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.MailMergeTask>
  nameWithType.vb: Task(Of MailMergeTask)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.MailMergeTask)
  name.vb: Task(Of MailMergeTask)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.MailMergeTask
    name: MailMergeTask
    nameWithType: MailMergeTask
    fullName: SuperOffice.WebApi.Data.MailMergeTask
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.MailMergeTask
    name: MailMergeTask
    nameWithType: MailMergeTask
    fullName: SuperOffice.WebApi.Data.MailMergeTask
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.SelectionAgent.CreateDefaultSelectionEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.CreateDefaultSelectionEntityAsync
  isExternal: true
  name: CreateDefaultSelectionEntityAsync
  nameWithType: SelectionAgent.CreateDefaultSelectionEntityAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.CreateDefaultSelectionEntityAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SelectionEntity}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SelectionEntity}'
  definition: System.Threading.Tasks.Task`1
  name: Task<SelectionEntity>
  nameWithType: Task<SelectionEntity>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.SelectionEntity>
  nameWithType.vb: Task(Of SelectionEntity)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.SelectionEntity)
  name.vb: Task(Of SelectionEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.SelectionEntity
    name: SelectionEntity
    nameWithType: SelectionEntity
    fullName: SuperOffice.WebApi.Data.SelectionEntity
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.SelectionEntity
    name: SelectionEntity
    nameWithType: SelectionEntity
    fullName: SuperOffice.WebApi.Data.SelectionEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.SelectionAgent.SaveSelectionEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.SaveSelectionEntityAsync
  isExternal: true
  name: SaveSelectionEntityAsync
  nameWithType: SelectionAgent.SaveSelectionEntityAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.SaveSelectionEntityAsync
- uid: SuperOffice.WebApi.Data.SelectionEntity
  commentId: T:SuperOffice.WebApi.Data.SelectionEntity
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: SelectionEntity
  nameWithType: SelectionEntity
  fullName: SuperOffice.WebApi.Data.SelectionEntity
- uid: SuperOffice.WebApi.Data
  commentId: N:SuperOffice.WebApi.Data
  isExternal: true
  name: SuperOffice.WebApi.Data
  nameWithType: SuperOffice.WebApi.Data
  fullName: SuperOffice.WebApi.Data
- uid: SuperOffice.WebApi.Agents.SelectionAgent.DeleteSelectionEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.DeleteSelectionEntityAsync
  isExternal: true
  name: DeleteSelectionEntityAsync
  nameWithType: SelectionAgent.DeleteSelectionEntityAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.DeleteSelectionEntityAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: SuperOffice.WebApi.Agents.SelectionAgent.GetSelectionEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.GetSelectionEntityAsync
  isExternal: true
  name: GetSelectionEntityAsync
  nameWithType: SelectionAgent.GetSelectionEntityAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.GetSelectionEntityAsync
- uid: SuperOffice.WebApi.Agents.SelectionAgent.CreateSelectionEntityAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.CreateSelectionEntityAsync
  isExternal: true
  name: CreateSelectionEntityAsync
  nameWithType: SelectionAgent.CreateSelectionEntityAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.CreateSelectionEntityAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.WebApi.Agents.SelectionAgent.CreateContactSelectionFromSelectionAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.CreateContactSelectionFromSelectionAsync
  isExternal: true
  name: CreateContactSelectionFromSelectionAsync
  nameWithType: SelectionAgent.CreateContactSelectionFromSelectionAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.CreateContactSelectionFromSelectionAsync
- uid: SuperOffice.WebApi.Data.SelectionType
  commentId: T:SuperOffice.WebApi.Data.SelectionType
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: SelectionType
  nameWithType: SelectionType
  fullName: SuperOffice.WebApi.Data.SelectionType
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.WebApi.Agents.SelectionAgent.CreateTemporaryContactSelectionFromContactPersonIdsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.CreateTemporaryContactSelectionFromContactPersonIdsAsync
  isExternal: true
  name: CreateTemporaryContactSelectionFromContactPersonIdsAsync
  nameWithType: SelectionAgent.CreateTemporaryContactSelectionFromContactPersonIdsAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.CreateTemporaryContactSelectionFromContactPersonIdsAsync
- uid: SuperOffice.WebApi.Data.ContactPersonId[]
  isExternal: true
  name: ContactPersonId[]
  nameWithType: ContactPersonId[]
  fullName: SuperOffice.WebApi.Data.ContactPersonId[]
  nameWithType.vb: ContactPersonId()
  fullName.vb: SuperOffice.WebApi.Data.ContactPersonId()
  name.vb: ContactPersonId()
  spec.csharp:
  - uid: SuperOffice.WebApi.Data.ContactPersonId
    name: ContactPersonId
    nameWithType: ContactPersonId
    fullName: SuperOffice.WebApi.Data.ContactPersonId
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.WebApi.Data.ContactPersonId
    name: ContactPersonId
    nameWithType: ContactPersonId
    fullName: SuperOffice.WebApi.Data.ContactPersonId
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.WebApi.Agents.SelectionAgent.CreateTemporaryContactSelectionFromProjectMembersAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.CreateTemporaryContactSelectionFromProjectMembersAsync
  isExternal: true
  name: CreateTemporaryContactSelectionFromProjectMembersAsync
  nameWithType: SelectionAgent.CreateTemporaryContactSelectionFromProjectMembersAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.CreateTemporaryContactSelectionFromProjectMembersAsync
- uid: SuperOffice.WebApi.Agents.SelectionAgent.CopyContactSelectionMembersAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.CopyContactSelectionMembersAsync
  isExternal: true
  name: CopyContactSelectionMembersAsync
  nameWithType: SelectionAgent.CopyContactSelectionMembersAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.CopyContactSelectionMembersAsync
- uid: SuperOffice.WebApi.Agents.SelectionAgent.GetRecipientStatisticsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.GetRecipientStatisticsAsync
  isExternal: true
  name: GetRecipientStatisticsAsync
  nameWithType: SelectionAgent.GetRecipientStatisticsAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.GetRecipientStatisticsAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.RecipientStatistics}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.RecipientStatistics}'
  definition: System.Threading.Tasks.Task`1
  name: Task<RecipientStatistics>
  nameWithType: Task<RecipientStatistics>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.RecipientStatistics>
  nameWithType.vb: Task(Of RecipientStatistics)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.RecipientStatistics)
  name.vb: Task(Of RecipientStatistics)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.RecipientStatistics
    name: RecipientStatistics
    nameWithType: RecipientStatistics
    fullName: SuperOffice.WebApi.Data.RecipientStatistics
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.RecipientStatistics
    name: RecipientStatistics
    nameWithType: RecipientStatistics
    fullName: SuperOffice.WebApi.Data.RecipientStatistics
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.SelectionAgent.GetRecipientStatisticsFromProjectMembersAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.GetRecipientStatisticsFromProjectMembersAsync
  isExternal: true
  name: GetRecipientStatisticsFromProjectMembersAsync
  nameWithType: SelectionAgent.GetRecipientStatisticsFromProjectMembersAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.GetRecipientStatisticsFromProjectMembersAsync
- uid: SuperOffice.WebApi.Agents.SelectionAgent.GetRecipientStatisticsFromContactPersonIdsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.GetRecipientStatisticsFromContactPersonIdsAsync
  isExternal: true
  name: GetRecipientStatisticsFromContactPersonIdsAsync
  nameWithType: SelectionAgent.GetRecipientStatisticsFromContactPersonIdsAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.GetRecipientStatisticsFromContactPersonIdsAsync
- uid: SuperOffice.WebApi.Agents.SelectionAgent.AddContactSelectionMembersAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.AddContactSelectionMembersAsync
  isExternal: true
  name: AddContactSelectionMembersAsync
  nameWithType: SelectionAgent.AddContactSelectionMembersAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.AddContactSelectionMembersAsync
- uid: SuperOffice.WebApi.Agents.SelectionAgent.RemoveContactSelectionMembersAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.RemoveContactSelectionMembersAsync
  isExternal: true
  name: RemoveContactSelectionMembersAsync
  nameWithType: SelectionAgent.RemoveContactSelectionMembersAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.RemoveContactSelectionMembersAsync
- uid: SuperOffice.WebApi.Agents.SelectionAgent.RemoveContactSelectionMembersFromIdsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.RemoveContactSelectionMembersFromIdsAsync
  isExternal: true
  name: RemoveContactSelectionMembersFromIdsAsync
  nameWithType: SelectionAgent.RemoveContactSelectionMembersFromIdsAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.RemoveContactSelectionMembersFromIdsAsync
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.WebApi.Agents.SelectionAgent.AddContactSelectionMembersFromSearchAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.AddContactSelectionMembersFromSearchAsync
  isExternal: true
  name: AddContactSelectionMembersFromSearchAsync
  nameWithType: SelectionAgent.AddContactSelectionMembersFromSearchAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.AddContactSelectionMembersFromSearchAsync
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: '!:System.Threading.Tasks.Task{System.Int32}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  nameWithType.vb: Task(Of Int32)
  fullName.vb: System.Threading.Tasks.Task(Of System.Int32)
  name.vb: Task(Of Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.SelectionAgent.RemoveContactSelectionMembersFromSearchAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.RemoveContactSelectionMembersFromSearchAsync
  isExternal: true
  name: RemoveContactSelectionMembersFromSearchAsync
  nameWithType: SelectionAgent.RemoveContactSelectionMembersFromSearchAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.RemoveContactSelectionMembersFromSearchAsync
- uid: SuperOffice.WebApi.Agents.SelectionAgent.CreateTemporaryContactSelectionAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.CreateTemporaryContactSelectionAsync
  isExternal: true
  name: CreateTemporaryContactSelectionAsync
  nameWithType: SelectionAgent.CreateTemporaryContactSelectionAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.CreateTemporaryContactSelectionAsync
- uid: SuperOffice.WebApi.Agents.SelectionAgent.CreateTemporaryContactSelectionFromSelectionMemberIdsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.CreateTemporaryContactSelectionFromSelectionMemberIdsAsync
  isExternal: true
  name: CreateTemporaryContactSelectionFromSelectionMemberIdsAsync
  nameWithType: SelectionAgent.CreateTemporaryContactSelectionFromSelectionMemberIdsAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.CreateTemporaryContactSelectionFromSelectionMemberIdsAsync
- uid: SuperOffice.WebApi.Agents.SelectionAgent.AddRemoveContactSelectionMemberInterestsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.AddRemoveContactSelectionMemberInterestsAsync
  isExternal: true
  name: AddRemoveContactSelectionMemberInterestsAsync
  nameWithType: SelectionAgent.AddRemoveContactSelectionMemberInterestsAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.AddRemoveContactSelectionMemberInterestsAsync
- uid: SuperOffice.WebApi.Agents.SelectionAgent.EditContactSelectionMemberDetailsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.EditContactSelectionMemberDetailsAsync
  isExternal: true
  name: EditContactSelectionMemberDetailsAsync
  nameWithType: SelectionAgent.EditContactSelectionMemberDetailsAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.EditContactSelectionMemberDetailsAsync
- uid: SuperOffice.WebApi.Data.SelectionMemberEditValues
  commentId: T:SuperOffice.WebApi.Data.SelectionMemberEditValues
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: SelectionMemberEditValues
  nameWithType: SelectionMemberEditValues
  fullName: SuperOffice.WebApi.Data.SelectionMemberEditValues
- uid: SuperOffice.WebApi.Agents.SelectionAgent.GenerateFollowUpsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.GenerateFollowUpsAsync
  isExternal: true
  name: GenerateFollowUpsAsync
  nameWithType: SelectionAgent.GenerateFollowUpsAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.GenerateFollowUpsAsync
- uid: SuperOffice.WebApi.Data.AppointmentEntity
  commentId: T:SuperOffice.WebApi.Data.AppointmentEntity
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: AppointmentEntity
  nameWithType: AppointmentEntity
  fullName: SuperOffice.WebApi.Data.AppointmentEntity
- uid: SuperOffice.WebApi.Agents.SelectionAgent.ExportSelectionMembersAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.ExportSelectionMembersAsync
  isExternal: true
  name: ExportSelectionMembersAsync
  nameWithType: SelectionAgent.ExportSelectionMembersAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.ExportSelectionMembersAsync
- uid: System.Threading.Tasks.Task{System.Byte[]}
  commentId: '!:System.Threading.Tasks.Task{System.Byte[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Byte[]>
  nameWithType: Task<Byte[]>
  fullName: System.Threading.Tasks.Task<System.Byte[]>
  nameWithType.vb: Task(Of Byte())
  fullName.vb: System.Threading.Tasks.Task(Of System.Byte())
  name.vb: Task(Of Byte())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.SelectionAgent.ExportSelectionMembersWithOrderByAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.ExportSelectionMembersWithOrderByAsync
  isExternal: true
  name: ExportSelectionMembersWithOrderByAsync
  nameWithType: SelectionAgent.ExportSelectionMembersWithOrderByAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.ExportSelectionMembersWithOrderByAsync
- uid: SuperOffice.WebApi.Agents.SelectionAgent.StartMailMergeAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.StartMailMergeAsync
  isExternal: true
  name: StartMailMergeAsync
  nameWithType: SelectionAgent.StartMailMergeAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.StartMailMergeAsync
- uid: SuperOffice.WebApi.Data.MailMergeSettings
  commentId: T:SuperOffice.WebApi.Data.MailMergeSettings
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: MailMergeSettings
  nameWithType: MailMergeSettings
  fullName: SuperOffice.WebApi.Data.MailMergeSettings
- uid: SuperOffice.WebApi.Agents.SelectionAgent.SetDuplicateRulesStatusAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.SetDuplicateRulesStatusAsync
  isExternal: true
  name: SetDuplicateRulesStatusAsync
  nameWithType: SelectionAgent.SetDuplicateRulesStatusAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.SetDuplicateRulesStatusAsync
- uid: SuperOffice.WebApi.Data.DuplicateRule[]
  isExternal: true
  name: DuplicateRule[]
  nameWithType: DuplicateRule[]
  fullName: SuperOffice.WebApi.Data.DuplicateRule[]
  nameWithType.vb: DuplicateRule()
  fullName.vb: SuperOffice.WebApi.Data.DuplicateRule()
  name.vb: DuplicateRule()
  spec.csharp:
  - uid: SuperOffice.WebApi.Data.DuplicateRule
    name: DuplicateRule
    nameWithType: DuplicateRule
    fullName: SuperOffice.WebApi.Data.DuplicateRule
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.WebApi.Data.DuplicateRule
    name: DuplicateRule
    nameWithType: DuplicateRule
    fullName: SuperOffice.WebApi.Data.DuplicateRule
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.WebApi.Agents.SelectionAgent.GetDuplicatesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.GetDuplicatesAsync
  isExternal: true
  name: GetDuplicatesAsync
  nameWithType: SelectionAgent.GetDuplicatesAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.GetDuplicatesAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DuplicateEntry[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DuplicateEntry[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<DuplicateEntry[]>
  nameWithType: Task<DuplicateEntry[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.DuplicateEntry[]>
  nameWithType.vb: Task(Of DuplicateEntry())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.DuplicateEntry())
  name.vb: Task(Of DuplicateEntry())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.DuplicateEntry
    name: DuplicateEntry
    nameWithType: DuplicateEntry
    fullName: SuperOffice.WebApi.Data.DuplicateEntry
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.DuplicateEntry
    name: DuplicateEntry
    nameWithType: DuplicateEntry
    fullName: SuperOffice.WebApi.Data.DuplicateEntry
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.SelectionAgent.GetDuplicateRulesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.GetDuplicateRulesAsync
  isExternal: true
  name: GetDuplicateRulesAsync
  nameWithType: SelectionAgent.GetDuplicateRulesAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.GetDuplicateRulesAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DuplicateRule[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.DuplicateRule[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<DuplicateRule[]>
  nameWithType: Task<DuplicateRule[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.DuplicateRule[]>
  nameWithType.vb: Task(Of DuplicateRule())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.DuplicateRule())
  name.vb: Task(Of DuplicateRule())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.DuplicateRule
    name: DuplicateRule
    nameWithType: DuplicateRule
    fullName: SuperOffice.WebApi.Data.DuplicateRule
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.DuplicateRule
    name: DuplicateRule
    nameWithType: DuplicateRule
    fullName: SuperOffice.WebApi.Data.DuplicateRule
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.SelectionAgent.CreateNewEntryAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.CreateNewEntryAsync
  isExternal: true
  name: CreateNewEntryAsync
  nameWithType: SelectionAgent.CreateNewEntryAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.CreateNewEntryAsync
- uid: SuperOffice.WebApi.Data.DuplicateEntry
  commentId: T:SuperOffice.WebApi.Data.DuplicateEntry
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: DuplicateEntry
  nameWithType: DuplicateEntry
  fullName: SuperOffice.WebApi.Data.DuplicateEntry
- uid: SuperOffice.WebApi.Agents.SelectionAgent.DeleteContactsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.DeleteContactsAsync
  isExternal: true
  name: DeleteContactsAsync
  nameWithType: SelectionAgent.DeleteContactsAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.DeleteContactsAsync
- uid: SuperOffice.WebApi.Agents.SelectionAgent.AddSelectionMembersAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.AddSelectionMembersAsync
  isExternal: true
  name: AddSelectionMembersAsync
  nameWithType: SelectionAgent.AddSelectionMembersAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.AddSelectionMembersAsync
- uid: SuperOffice.WebApi.Agents.SelectionAgent.RemoveSelectionMembersAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.RemoveSelectionMembersAsync
  isExternal: true
  name: RemoveSelectionMembersAsync
  nameWithType: SelectionAgent.RemoveSelectionMembersAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.RemoveSelectionMembersAsync
- uid: SuperOffice.WebApi.Agents.SelectionAgent.RemoveSelectionMembersByIdAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.RemoveSelectionMembersByIdAsync
  isExternal: true
  name: RemoveSelectionMembersByIdAsync
  nameWithType: SelectionAgent.RemoveSelectionMembersByIdAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.RemoveSelectionMembersByIdAsync
- uid: SuperOffice.WebApi.Agents.SelectionAgent.AddSelectionMembersFromSearchAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.AddSelectionMembersFromSearchAsync
  isExternal: true
  name: AddSelectionMembersFromSearchAsync
  nameWithType: SelectionAgent.AddSelectionMembersFromSearchAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.AddSelectionMembersFromSearchAsync
- uid: SuperOffice.WebApi.Agents.SelectionAgent.RemoveSelectionMembersFromSearchAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.RemoveSelectionMembersFromSearchAsync
  isExternal: true
  name: RemoveSelectionMembersFromSearchAsync
  nameWithType: SelectionAgent.RemoveSelectionMembersFromSearchAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.RemoveSelectionMembersFromSearchAsync
- uid: SuperOffice.WebApi.Agents.SelectionAgent.CopySelectionMembersAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.CopySelectionMembersAsync
  isExternal: true
  name: CopySelectionMembersAsync
  nameWithType: SelectionAgent.CopySelectionMembersAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.CopySelectionMembersAsync
- uid: SuperOffice.WebApi.Agents.SelectionAgent.CreateTemporarySelectionFromIdsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.CreateTemporarySelectionFromIdsAsync
  isExternal: true
  name: CreateTemporarySelectionFromIdsAsync
  nameWithType: SelectionAgent.CreateTemporarySelectionFromIdsAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.CreateTemporarySelectionFromIdsAsync
- uid: SuperOffice.WebApi.Agents.SelectionAgent.CreateSelectionFromSelectionAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.CreateSelectionFromSelectionAsync
  isExternal: true
  name: CreateSelectionFromSelectionAsync
  nameWithType: SelectionAgent.CreateSelectionFromSelectionAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.CreateSelectionFromSelectionAsync
- uid: SuperOffice.WebApi.Agents.SelectionAgent.CreateContactSelectionFromShadowSelectionAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.CreateContactSelectionFromShadowSelectionAsync
  isExternal: true
  name: CreateContactSelectionFromShadowSelectionAsync
  nameWithType: SelectionAgent.CreateContactSelectionFromShadowSelectionAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.CreateContactSelectionFromShadowSelectionAsync
- uid: SuperOffice.WebApi.Agents.SelectionAgent.DeleteEntitiesAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.DeleteEntitiesAsync
  isExternal: true
  name: DeleteEntitiesAsync
  nameWithType: SelectionAgent.DeleteEntitiesAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.DeleteEntitiesAsync
- uid: SuperOffice.WebApi.Agents.SelectionAgent.GetParentCombinedSelectionsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.GetParentCombinedSelectionsAsync
  isExternal: true
  name: GetParentCombinedSelectionsAsync
  nameWithType: SelectionAgent.GetParentCombinedSelectionsAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.GetParentCombinedSelectionsAsync
- uid: System.Threading.Tasks.Task{System.Int32[]}
  commentId: '!:System.Threading.Tasks.Task{System.Int32[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Int32[]>
  nameWithType: Task<Int32[]>
  fullName: System.Threading.Tasks.Task<System.Int32[]>
  nameWithType.vb: Task(Of Int32())
  fullName.vb: System.Threading.Tasks.Task(Of System.Int32())
  name.vb: Task(Of Int32())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.SelectionAgent.GetSelectionMembersArchiveRowsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.GetSelectionMembersArchiveRowsAsync
  isExternal: true
  name: GetSelectionMembersArchiveRowsAsync
  nameWithType: SelectionAgent.GetSelectionMembersArchiveRowsAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.GetSelectionMembersArchiveRowsAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ArchiveListItem[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ArchiveListItem[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ArchiveListItem[]>
  nameWithType: Task<ArchiveListItem[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.ArchiveListItem[]>
  nameWithType.vb: Task(Of ArchiveListItem())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.ArchiveListItem())
  name.vb: Task(Of ArchiveListItem())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.ArchiveListItem
    name: ArchiveListItem
    nameWithType: ArchiveListItem
    fullName: SuperOffice.WebApi.Data.ArchiveListItem
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.ArchiveListItem
    name: ArchiveListItem
    nameWithType: ArchiveListItem
    fullName: SuperOffice.WebApi.Data.ArchiveListItem
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.SelectionAgent.GetSelectionShadowMembersArchiveRowsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.GetSelectionShadowMembersArchiveRowsAsync
  isExternal: true
  name: GetSelectionShadowMembersArchiveRowsAsync
  nameWithType: SelectionAgent.GetSelectionShadowMembersArchiveRowsAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.GetSelectionShadowMembersArchiveRowsAsync
- uid: SuperOffice.WebApi.Agents.SelectionAgent.GetDynamicSelectionCriteriaAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.GetDynamicSelectionCriteriaAsync
  isExternal: true
  name: GetDynamicSelectionCriteriaAsync
  nameWithType: SelectionAgent.GetDynamicSelectionCriteriaAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.GetDynamicSelectionCriteriaAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ArchiveRestrictionInfo[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ArchiveRestrictionInfo[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ArchiveRestrictionInfo[]>
  nameWithType: Task<ArchiveRestrictionInfo[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.ArchiveRestrictionInfo[]>
  nameWithType.vb: Task(Of ArchiveRestrictionInfo())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.ArchiveRestrictionInfo())
  name.vb: Task(Of ArchiveRestrictionInfo())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.WebApi.Data.ArchiveRestrictionInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.WebApi.Data.ArchiveRestrictionInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.SelectionAgent.SetDynamicSelectionCriteriaAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.SetDynamicSelectionCriteriaAsync
  isExternal: true
  name: SetDynamicSelectionCriteriaAsync
  nameWithType: SelectionAgent.SetDynamicSelectionCriteriaAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.SetDynamicSelectionCriteriaAsync
- uid: SuperOffice.WebApi.Data.ArchiveRestrictionInfo[]
  isExternal: true
  name: ArchiveRestrictionInfo[]
  nameWithType: ArchiveRestrictionInfo[]
  fullName: SuperOffice.WebApi.Data.ArchiveRestrictionInfo[]
  nameWithType.vb: ArchiveRestrictionInfo()
  fullName.vb: SuperOffice.WebApi.Data.ArchiveRestrictionInfo()
  name.vb: ArchiveRestrictionInfo()
  spec.csharp:
  - uid: SuperOffice.WebApi.Data.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.WebApi.Data.ArchiveRestrictionInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.WebApi.Data.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.WebApi.Data.ArchiveRestrictionInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.WebApi.Agents.SelectionAgent.SetDynamicSelectionCriteria2Async*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.SetDynamicSelectionCriteria2Async
  isExternal: true
  name: SetDynamicSelectionCriteria2Async
  nameWithType: SelectionAgent.SetDynamicSelectionCriteria2Async
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.SetDynamicSelectionCriteria2Async
- uid: SuperOffice.WebApi.Agents.SelectionAgent.SetDynamicSelectionCriteria3Async*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.SetDynamicSelectionCriteria3Async
  isExternal: true
  name: SetDynamicSelectionCriteria3Async
  nameWithType: SelectionAgent.SetDynamicSelectionCriteria3Async
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.SetDynamicSelectionCriteria3Async
- uid: SuperOffice.WebApi.Agents.SelectionAgent.DeletePersonsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.DeletePersonsAsync
  isExternal: true
  name: DeletePersonsAsync
  nameWithType: SelectionAgent.DeletePersonsAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.DeletePersonsAsync
- uid: SuperOffice.WebApi.Agents.SelectionAgent.GetDynamicSelectionCriteriaGroupsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.GetDynamicSelectionCriteriaGroupsAsync
  isExternal: true
  name: GetDynamicSelectionCriteriaGroupsAsync
  nameWithType: SelectionAgent.GetDynamicSelectionCriteriaGroupsAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.GetDynamicSelectionCriteriaGroupsAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ArchiveRestrictionGroup[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.ArchiveRestrictionGroup[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ArchiveRestrictionGroup[]>
  nameWithType: Task<ArchiveRestrictionGroup[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.ArchiveRestrictionGroup[]>
  nameWithType.vb: Task(Of ArchiveRestrictionGroup())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.ArchiveRestrictionGroup())
  name.vb: Task(Of ArchiveRestrictionGroup())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.ArchiveRestrictionGroup
    name: ArchiveRestrictionGroup
    nameWithType: ArchiveRestrictionGroup
    fullName: SuperOffice.WebApi.Data.ArchiveRestrictionGroup
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.ArchiveRestrictionGroup
    name: ArchiveRestrictionGroup
    nameWithType: ArchiveRestrictionGroup
    fullName: SuperOffice.WebApi.Data.ArchiveRestrictionGroup
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.SelectionAgent.SetDynamicSelectionCriteriaGroupsAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.SetDynamicSelectionCriteriaGroupsAsync
  isExternal: true
  name: SetDynamicSelectionCriteriaGroupsAsync
  nameWithType: SelectionAgent.SetDynamicSelectionCriteriaGroupsAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.SetDynamicSelectionCriteriaGroupsAsync
- uid: SuperOffice.WebApi.Data.ArchiveRestrictionGroup[]
  isExternal: true
  name: ArchiveRestrictionGroup[]
  nameWithType: ArchiveRestrictionGroup[]
  fullName: SuperOffice.WebApi.Data.ArchiveRestrictionGroup[]
  nameWithType.vb: ArchiveRestrictionGroup()
  fullName.vb: SuperOffice.WebApi.Data.ArchiveRestrictionGroup()
  name.vb: ArchiveRestrictionGroup()
  spec.csharp:
  - uid: SuperOffice.WebApi.Data.ArchiveRestrictionGroup
    name: ArchiveRestrictionGroup
    nameWithType: ArchiveRestrictionGroup
    fullName: SuperOffice.WebApi.Data.ArchiveRestrictionGroup
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.WebApi.Data.ArchiveRestrictionGroup
    name: ArchiveRestrictionGroup
    nameWithType: ArchiveRestrictionGroup
    fullName: SuperOffice.WebApi.Data.ArchiveRestrictionGroup
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.WebApi.Agents.SelectionAgent.GetSelectionForFindAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.GetSelectionForFindAsync
  isExternal: true
  name: GetSelectionForFindAsync
  nameWithType: SelectionAgent.GetSelectionForFindAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.GetSelectionForFindAsync
- uid: System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SelectionForFind}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.WebApi.Data.SelectionForFind}'
  definition: System.Threading.Tasks.Task`1
  name: Task<SelectionForFind>
  nameWithType: Task<SelectionForFind>
  fullName: System.Threading.Tasks.Task<SuperOffice.WebApi.Data.SelectionForFind>
  nameWithType.vb: Task(Of SelectionForFind)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.WebApi.Data.SelectionForFind)
  name.vb: Task(Of SelectionForFind)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Data.SelectionForFind
    name: SelectionForFind
    nameWithType: SelectionForFind
    fullName: SuperOffice.WebApi.Data.SelectionForFind
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Data.SelectionForFind
    name: SelectionForFind
    nameWithType: SelectionForFind
    fullName: SuperOffice.WebApi.Data.SelectionForFind
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.WebApi.Agents.SelectionAgent.UpdateTypicalSearchAsync*
  commentId: Overload:SuperOffice.WebApi.Agents.SelectionAgent.UpdateTypicalSearchAsync
  isExternal: true
  name: UpdateTypicalSearchAsync
  nameWithType: SelectionAgent.UpdateTypicalSearchAsync
  fullName: SuperOffice.WebApi.Agents.SelectionAgent.UpdateTypicalSearchAsync
- uid: SuperOffice.WebApi.Data.TypicalSearches
  commentId: T:SuperOffice.WebApi.Data.TypicalSearches
  parent: SuperOffice.WebApi.Data
  isExternal: true
  name: TypicalSearches
  nameWithType: TypicalSearches
  fullName: SuperOffice.WebApi.Data.TypicalSearches
- uid: System.Threading.Tasks.Task{System.String}
  commentId: '!:System.Threading.Tasks.Task{System.String}'
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
