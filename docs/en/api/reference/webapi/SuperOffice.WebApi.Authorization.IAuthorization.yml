### YamlMime:ManagedReference
items:
- uid: SuperOffice.WebApi.Authorization.IAuthorization
  commentId: T:SuperOffice.WebApi.Authorization.IAuthorization
  id: IAuthorization
  parent: SuperOffice.WebApi.Authorization
  children:
  - SuperOffice.WebApi.Authorization.IAuthorization.GetAuthorization
  - SuperOffice.WebApi.Authorization.IAuthorization.RefreshAuthorizationAsync
  langs:
  - csharp
  - vb
  name: IAuthorization
  nameWithType: IAuthorization
  fullName: SuperOffice.WebApi.Authorization.IAuthorization
  type: Interface
  source:
    path: SuperOffice.WebApi.Authorization
    isExternal: true
  assemblies:
  - SuperOffice.WebApi.Authorization
  namespace: SuperOffice.WebApi.Authorization
  summary: "\nDefines a method to construct the Authorization header scheme and parameter for Http Requests.\n<xref href=\"SuperOffice.WebApi.Authorization.AuthorizationUsernamePassword\" data-throw-if-not-resolved=\"false\"></xref>,\n<xref href=\"SuperOffice.WebApi.Authorization.AuthorizationTicket\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"SuperOffice.WebApi.Authorization.AuthorizationImplicit\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: public interface IAuthorization
    content.vb: Public Interface IAuthorization
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.WebApi.Authorization.IAuthorization.GetAuthorization
  commentId: M:SuperOffice.WebApi.Authorization.IAuthorization.GetAuthorization
  id: GetAuthorization
  parent: SuperOffice.WebApi.Authorization.IAuthorization
  langs:
  - csharp
  - vb
  name: GetAuthorization()
  nameWithType: IAuthorization.GetAuthorization()
  fullName: SuperOffice.WebApi.Authorization.IAuthorization.GetAuthorization()
  type: Method
  source:
    path: SuperOffice.WebApi.Authorization
    isExternal: true
  assemblies:
  - SuperOffice.WebApi.Authorization
  namespace: SuperOffice.WebApi.Authorization
  summary: "\nReturn the HTTP Authorization scheme and parameters as an AuthenticationHeaderValue.\n"
  syntax:
    content: AuthenticationHeaderValue GetAuthorization()
    return:
      type: System.Net.Http.Headers.AuthenticationHeaderValue
      description: AuthenticationHeaderValue. Containing e.g. &quot;Basic&quot;, &quot;Base64encoded==&quot;
    content.vb: Function GetAuthorization As AuthenticationHeaderValue
  overload: SuperOffice.WebApi.Authorization.IAuthorization.GetAuthorization*
- uid: SuperOffice.WebApi.Authorization.IAuthorization.RefreshAuthorizationAsync
  commentId: P:SuperOffice.WebApi.Authorization.IAuthorization.RefreshAuthorizationAsync
  id: RefreshAuthorizationAsync
  parent: SuperOffice.WebApi.Authorization.IAuthorization
  langs:
  - csharp
  - vb
  name: RefreshAuthorizationAsync
  nameWithType: IAuthorization.RefreshAuthorizationAsync
  fullName: SuperOffice.WebApi.Authorization.IAuthorization.RefreshAuthorizationAsync
  type: Property
  source:
    path: SuperOffice.WebApi.Authorization
    isExternal: true
  assemblies:
  - SuperOffice.WebApi.Authorization
  namespace: SuperOffice.WebApi.Authorization
  summary: "\nDelegate called when authentication fails. Use to acquire and return a new authentication header value.\n"
  syntax:
    content: Func<ReAuthorizationArgs, Task<IAuthorization>> RefreshAuthorizationAsync { get; set; }
    parameters: []
    return:
      type: System.Func{SuperOffice.WebApi.Authorization.ReAuthorizationArgs,System.Threading.Tasks.Task{SuperOffice.WebApi.Authorization.IAuthorization}}
    content.vb: Property RefreshAuthorizationAsync As Func(Of ReAuthorizationArgs, Task(Of IAuthorization))
  overload: SuperOffice.WebApi.Authorization.IAuthorization.RefreshAuthorizationAsync*
  modifiers.csharp:
  - get
  - set
references:
- uid: SuperOffice.WebApi.Authorization
  commentId: N:SuperOffice.WebApi.Authorization
  isExternal: true
  name: SuperOffice.WebApi.Authorization
  nameWithType: SuperOffice.WebApi.Authorization
  fullName: SuperOffice.WebApi.Authorization
- uid: SuperOffice.WebApi.Authorization.IAuthorization.GetAuthorization*
  commentId: Overload:SuperOffice.WebApi.Authorization.IAuthorization.GetAuthorization
  isExternal: true
  name: GetAuthorization
  nameWithType: IAuthorization.GetAuthorization
  fullName: SuperOffice.WebApi.Authorization.IAuthorization.GetAuthorization
- uid: System.Net.Http.Headers.AuthenticationHeaderValue
  isExternal: true
  name: AuthenticationHeaderValue
  nameWithType: AuthenticationHeaderValue
  fullName: System.Net.Http.Headers.AuthenticationHeaderValue
- uid: SuperOffice.WebApi.Authorization.IAuthorization.RefreshAuthorizationAsync*
  commentId: Overload:SuperOffice.WebApi.Authorization.IAuthorization.RefreshAuthorizationAsync
  isExternal: true
  name: RefreshAuthorizationAsync
  nameWithType: IAuthorization.RefreshAuthorizationAsync
  fullName: SuperOffice.WebApi.Authorization.IAuthorization.RefreshAuthorizationAsync
- uid: System.Func{SuperOffice.WebApi.Authorization.ReAuthorizationArgs,System.Threading.Tasks.Task{SuperOffice.WebApi.Authorization.IAuthorization}}
  commentId: '!:System.Func{SuperOffice.WebApi.Authorization.ReAuthorizationArgs,System.Threading.Tasks.Task{SuperOffice.WebApi.Authorization.IAuthorization}}'
  definition: System.Func`2
  name: Func<ReAuthorizationArgs, Task<IAuthorization>>
  nameWithType: Func<ReAuthorizationArgs, Task<IAuthorization>>
  fullName: System.Func<SuperOffice.WebApi.Authorization.ReAuthorizationArgs, System.Threading.Tasks.Task<SuperOffice.WebApi.Authorization.IAuthorization>>
  nameWithType.vb: Func(Of ReAuthorizationArgs, Task(Of IAuthorization))
  fullName.vb: System.Func(Of SuperOffice.WebApi.Authorization.ReAuthorizationArgs, System.Threading.Tasks.Task(Of SuperOffice.WebApi.Authorization.IAuthorization))
  name.vb: Func(Of ReAuthorizationArgs, Task(Of IAuthorization))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Authorization.ReAuthorizationArgs
    name: ReAuthorizationArgs
    nameWithType: ReAuthorizationArgs
    fullName: SuperOffice.WebApi.Authorization.ReAuthorizationArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.WebApi.Authorization.IAuthorization
    name: IAuthorization
    nameWithType: IAuthorization
    fullName: SuperOffice.WebApi.Authorization.IAuthorization
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Authorization.ReAuthorizationArgs
    name: ReAuthorizationArgs
    nameWithType: ReAuthorizationArgs
    fullName: SuperOffice.WebApi.Authorization.ReAuthorizationArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.WebApi.Authorization.IAuthorization
    name: IAuthorization
    nameWithType: IAuthorization
    fullName: SuperOffice.WebApi.Authorization.IAuthorization
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  isExternal: true
  name: Func<, >
  nameWithType: Func<, >
  fullName: System.Func<, >
  nameWithType.vb: Func(Of , )
  fullName.vb: System.Func(Of , )
  name.vb: Func(Of , )
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
