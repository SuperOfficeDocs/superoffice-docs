### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Services.IFindAgent
  commentId: T:SuperOffice.CRM.Services.IFindAgent
  id: IFindAgent
  parent: SuperOffice.CRM.Services
  children:
  - SuperOffice.CRM.Services.IFindAgent.CreateRestrictionGroup(System.String,System.String,System.String,System.String)
  - SuperOffice.CRM.Services.IFindAgent.DeleteRestrictionGroup(System.String,System.String,System.String,System.Int32,System.String)
  - SuperOffice.CRM.Services.IFindAgent.Find(System.String,System.String,System.String,System.Int32,System.Int32)
  - SuperOffice.CRM.Services.IFindAgent.FindFromRestrictions(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.String,System.Int32,System.Int32)
  - SuperOffice.CRM.Services.IFindAgent.FindFromRestrictions2(System.String,System.String,System.Int32,System.Int32)
  - SuperOffice.CRM.Services.IFindAgent.FindFromRestrictionsColumns(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.String,System.String[],System.Int32,System.Int32)
  - SuperOffice.CRM.Services.IFindAgent.FindFromRestrictionsColumns2(System.String,System.String,System.String,System.Int32,System.Int32)
  - SuperOffice.CRM.Services.IFindAgent.FindFromRestrictionsColumnsOrderBy(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.String,System.String[],SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[],System.Int32,System.Int32)
  - SuperOffice.CRM.Services.IFindAgent.FindFromRestrictionsColumnsOrderBy2(System.String,System.String,System.String,System.String,System.Int32,System.Int32)
  - SuperOffice.CRM.Services.IFindAgent.FindOrderBy(System.String,System.String,System.String,System.Int32,System.Int32,SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[])
  - SuperOffice.CRM.Services.IFindAgent.FindOrderBy2(System.String,System.String,System.String,System.Int32,System.Int32,System.String)
  - SuperOffice.CRM.Services.IFindAgent.FindWithColumns(System.String,System.String,System.String,System.String[],System.Int32,System.Int32,SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[])
  - SuperOffice.CRM.Services.IFindAgent.FindWithExtraRestrictions(System.String,System.String,System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[],System.String[],System.Int32,System.Int32)
  - SuperOffice.CRM.Services.IFindAgent.FindWithExtraRestrictions2(System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32)
  - SuperOffice.CRM.Services.IFindAgent.GetAvailableRestrictionColumns(System.String,System.String)
  - SuperOffice.CRM.Services.IFindAgent.GetCriteriaInformation(System.String,System.String,System.String,System.String[])
  - SuperOffice.CRM.Services.IFindAgent.GetCriteriaInformationWithContext(System.String,System.String,System.String,System.String[],System.String)
  - SuperOffice.CRM.Services.IFindAgent.GetDefaultDesiredColumns(System.String,System.String,System.String)
  - SuperOffice.CRM.Services.IFindAgent.GetDefaultDesiredColumnsFromRestrictions(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  - SuperOffice.CRM.Services.IFindAgent.GetDefaultDesiredColumnsFromRestrictions2(System.String,System.String)
  - SuperOffice.CRM.Services.IFindAgent.GetDefaultOrderBy(System.String,System.String,System.String)
  - SuperOffice.CRM.Services.IFindAgent.GetDefaultOrderByFromDesiredColumns(System.String,System.String[])
  - SuperOffice.CRM.Services.IFindAgent.GetRestrictionGroup(System.String,System.String,System.String,System.Int32,System.String)
  - SuperOffice.CRM.Services.IFindAgent.GetRestrictionGroups(System.String,System.String,System.String,System.String)
  - SuperOffice.CRM.Services.IFindAgent.GetSpecifiedCriteriaInformationWithDefaults(System.String,System.String,System.String,System.String[],System.String[])
  - SuperOffice.CRM.Services.IFindAgent.GetSpecifiedCriteriaInformationWithDefaultsWithContext(System.String,System.String,System.String,System.String[],System.String[],System.String)
  - SuperOffice.CRM.Services.IFindAgent.PopulateRestrictions(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  - SuperOffice.CRM.Services.IFindAgent.PopulateRestrictionValues(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  - SuperOffice.CRM.Services.IFindAgent.SaveRestrictionGroup(System.String,System.String,System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup,System.String)
  - SuperOffice.CRM.Services.IFindAgent.SaveRestrictionGroups(System.String,System.String,System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup[],System.String)
  - SuperOffice.CRM.Services.IFindAgent.SaveRestrictions(System.String,System.String,System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  - SuperOffice.CRM.Services.IFindAgent.SaveRestrictions2(System.String,System.String,System.String,System.String)
  - SuperOffice.CRM.Services.IFindAgent.SaveRestrictionsAndGetCriteriaInformation(System.String,System.String,System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.String[])
  - SuperOffice.CRM.Services.IFindAgent.SaveRestrictionsAndGetCriteriaInformation2(System.String,System.String,System.String,System.String,System.String)
  - SuperOffice.CRM.Services.IFindAgent.SaveRestrictionsWithContext(System.String,System.String,System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.String)
  - SuperOffice.CRM.Services.IFindAgent.SaveRestrictionsWithContext2(System.String,System.String,System.String,System.String,System.String)
  langs:
  - csharp
  - vb
  name: IFindAgent
  nameWithType: IFindAgent
  fullName: SuperOffice.CRM.Services.IFindAgent
  type: Interface
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nInterface for the Find Agent\nFind functions\n"
  example:
  - "\n<pre><code>  using SuperOffice;\n  using SuperOffice.CRM.Services;\n\n  using (SoSession mySession = SoSession.Authenticate(&quot;user&quot;, &quot;pass&quot;))\n  {\n     using (FindAgent agent = new FindAgent())\n     {\n        // call methods on agent here...\n     }\n  }</code></pre>\n"
  syntax:
    content: >-
      [Agent("Find Agent", "Interface for the Find Agent. Find functions")]

      public interface IFindAgent : IAgent
    content.vb: >-
      <Agent("Find Agent", "Interface for the Find Agent. Find functions")>

      Public Interface IFindAgent

          Inherits IAgent
  attributes:
  - type: SuperOffice.CRM.Services.Reflection.AgentAttribute
    ctor: SuperOffice.CRM.Services.Reflection.AgentAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Find Agent
    - type: System.String
      value: Interface for the Find Agent. Find functions
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.CRM.Services.IFindAgent.GetCriteriaInformation(System.String,System.String,System.String,System.String[])
  commentId: M:SuperOffice.CRM.Services.IFindAgent.GetCriteriaInformation(System.String,System.String,System.String,System.String[])
  id: GetCriteriaInformation(System.String,System.String,System.String,System.String[])
  parent: SuperOffice.CRM.Services.IFindAgent
  langs:
  - csharp
  - vb
  name: GetCriteriaInformation(String, String, String, String[])
  nameWithType: IFindAgent.GetCriteriaInformation(String, String, String, String[])
  fullName: SuperOffice.CRM.Services.IFindAgent.GetCriteriaInformation(System.String, System.String, System.String, System.String[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet criteria information from a set of saved criteria. The result contains the restrictions in two forms: fully populated ArchiveRestrictionInfo objects, used to display details and for saving changes; and as a list suitable for an Archive control\n"
  syntax:
    content: CriteriaInformation GetCriteriaInformation(string storageType, string providerName, string storageKey, string[] staticColumns)
    parameters:
    - id: storageType
      type: System.String
      description: Restriction storage type specification, either &apos;Criteria&apos; or &apos;Reporter&apos; (or possible extensions)
    - id: providerName
      type: System.String
      description: Name of archive provider that is the intended consumer of the restrictions
    - id: storageKey
      type: System.String
      description: Storage key to be interpreted by the restriction storage provider, when it fetches criteria for the search
    - id: staticColumns
      type: System.String[]
      description: Optional array of restrictions that are to be EXCLUDED from the CriteriaArchiveRows part of the result. In the Find dialogs, that corresponds to the &apos;static&apos; fields, to avoid duplicating them in the &apos;Match also&apos; criteria list. This array can be null, indicating that all restrictions should be included in the criteria list.
    return:
      type: SuperOffice.CRM.Services.CriteriaInformation
      description: 'The result contains the restrictions in two forms: fully populated ArchiveRestrictionInfo objects, used to display details and for saving changes; and as a list suitable for an Archive control'
    content.vb: Function GetCriteriaInformation(storageType As String, providerName As String, storageKey As String, staticColumns As String()) As CriteriaInformation
  overload: SuperOffice.CRM.Services.IFindAgent.GetCriteriaInformation*
  nameWithType.vb: IFindAgent.GetCriteriaInformation(String, String, String, String())
  fullName.vb: SuperOffice.CRM.Services.IFindAgent.GetCriteriaInformation(System.String, System.String, System.String, System.String())
  name.vb: GetCriteriaInformation(String, String, String, String())
- uid: SuperOffice.CRM.Services.IFindAgent.GetCriteriaInformationWithContext(System.String,System.String,System.String,System.String[],System.String)
  commentId: M:SuperOffice.CRM.Services.IFindAgent.GetCriteriaInformationWithContext(System.String,System.String,System.String,System.String[],System.String)
  id: GetCriteriaInformationWithContext(System.String,System.String,System.String,System.String[],System.String)
  parent: SuperOffice.CRM.Services.IFindAgent
  langs:
  - csharp
  - vb
  name: GetCriteriaInformationWithContext(String, String, String, String[], String)
  nameWithType: IFindAgent.GetCriteriaInformationWithContext(String, String, String, String[], String)
  fullName: SuperOffice.CRM.Services.IFindAgent.GetCriteriaInformationWithContext(System.String, System.String, System.String, System.String[], System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet criteria information from a set of saved criteria. The result contains the restrictions in two forms: fully populated ArchiveRestrictionInfo objects, used to display details and for saving changes; and as a list suitable for an Archive control\n"
  syntax:
    content: CriteriaInformation GetCriteriaInformationWithContext(string storageType, string providerName, string storageKey, string[] staticColumns, string context)
    parameters:
    - id: storageType
      type: System.String
      description: Restriction storage type specification, either &apos;Criteria&apos; or &apos;Reporter&apos; (or possible extensions)
    - id: providerName
      type: System.String
      description: Name of archive provider that is the intended consumer of the restrictions
    - id: storageKey
      type: System.String
      description: Storage key to be interpreted by the restriction storage provider, when it fetches criteria for the search
    - id: staticColumns
      type: System.String[]
      description: Optional array of restrictions that are to be EXCLUDED from the CriteriaArchiveRows part of the result. In the Find dialogs, that corresponds to the &apos;static&apos; fields, to avoid duplicating them in the &apos;Match also&apos; criteria list. This array can be null, indicating that all restrictions should be included in the criteria list.
    - id: context
      type: System.String
      description: Optional context that can be used by FindProvider
    return:
      type: SuperOffice.CRM.Services.CriteriaInformation
      description: 'The result contains the restrictions in two forms: fully populated ArchiveRestrictionInfo objects, used to display details and for saving changes; and as a list suitable for an Archive control'
    content.vb: Function GetCriteriaInformationWithContext(storageType As String, providerName As String, storageKey As String, staticColumns As String(), context As String) As CriteriaInformation
  overload: SuperOffice.CRM.Services.IFindAgent.GetCriteriaInformationWithContext*
  nameWithType.vb: IFindAgent.GetCriteriaInformationWithContext(String, String, String, String(), String)
  fullName.vb: SuperOffice.CRM.Services.IFindAgent.GetCriteriaInformationWithContext(System.String, System.String, System.String, System.String(), System.String)
  name.vb: GetCriteriaInformationWithContext(String, String, String, String(), String)
- uid: SuperOffice.CRM.Services.IFindAgent.SaveRestrictions(System.String,System.String,System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  commentId: M:SuperOffice.CRM.Services.IFindAgent.SaveRestrictions(System.String,System.String,System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  id: SaveRestrictions(System.String,System.String,System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  parent: SuperOffice.CRM.Services.IFindAgent
  langs:
  - csharp
  - vb
  name: SaveRestrictions(String, String, String, ArchiveRestrictionInfo[])
  nameWithType: IFindAgent.SaveRestrictions(String, String, String, ArchiveRestrictionInfo[])
  fullName: SuperOffice.CRM.Services.IFindAgent.SaveRestrictions(System.String, System.String, System.String, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSave an array of restrictions for later use as search criteria (including as dynamic selection and Find). \n"
  syntax:
    content: void SaveRestrictions(string storageType, string providerName, string storageKey, ArchiveRestrictionInfo[] restrictions)
    parameters:
    - id: storageType
      type: System.String
      description: Restriction storage type specification, either &apos;Criteria&apos; or &apos;Reporter&apos; (or possible extensions)
    - id: providerName
      type: System.String
      description: Name of archive provider that is the intended consumer of the restrictions
    - id: storageKey
      type: System.String
      description: Storage key to be interpreted by the restriction storage provider, when it saves the restrictions as criteria
    - id: restrictions
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
      description: Array of restrictions. The ColumnInfo member and the DisplayValues members need NOT be populated; it is enough to provide a name, operator and any values the operator may need. The IsActive is also saved. Values should be encoded using the CultureDataFormatter to ensure compatibility across cultures.
    content.vb: Sub SaveRestrictions(storageType As String, providerName As String, storageKey As String, restrictions As ArchiveRestrictionInfo())
  overload: SuperOffice.CRM.Services.IFindAgent.SaveRestrictions*
  nameWithType.vb: IFindAgent.SaveRestrictions(String, String, String, ArchiveRestrictionInfo())
  fullName.vb: SuperOffice.CRM.Services.IFindAgent.SaveRestrictions(System.String, System.String, System.String, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo())
  name.vb: SaveRestrictions(String, String, String, ArchiveRestrictionInfo())
- uid: SuperOffice.CRM.Services.IFindAgent.SaveRestrictionsWithContext(System.String,System.String,System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.String)
  commentId: M:SuperOffice.CRM.Services.IFindAgent.SaveRestrictionsWithContext(System.String,System.String,System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.String)
  id: SaveRestrictionsWithContext(System.String,System.String,System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.String)
  parent: SuperOffice.CRM.Services.IFindAgent
  langs:
  - csharp
  - vb
  name: SaveRestrictionsWithContext(String, String, String, ArchiveRestrictionInfo[], String)
  nameWithType: IFindAgent.SaveRestrictionsWithContext(String, String, String, ArchiveRestrictionInfo[], String)
  fullName: SuperOffice.CRM.Services.IFindAgent.SaveRestrictionsWithContext(System.String, System.String, System.String, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[], System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSave an array of restrictions for later use as search criteria (including as dynamic selection and Find). \n"
  syntax:
    content: void SaveRestrictionsWithContext(string storageType, string providerName, string storageKey, ArchiveRestrictionInfo[] restrictions, string context)
    parameters:
    - id: storageType
      type: System.String
      description: Restriction storage type specification, either &apos;Criteria&apos; or &apos;Reporter&apos; (or possible extensions)
    - id: providerName
      type: System.String
      description: Name of archive provider that is the intended consumer of the restrictions
    - id: storageKey
      type: System.String
      description: Storage key to be interpreted by the restriction storage provider, when it saves the restrictions as criteria
    - id: restrictions
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
      description: Array of restrictions. The ColumnInfo member and the DisplayValues members need NOT be populated; it is enough to provide a name, operator and any values the operator may need. The IsActive is also saved. Values should be encoded using the CultureDataFormatter to ensure compatibility across cultures.
    - id: context
      type: System.String
      description: Optional context that can be used by FindProvider
    content.vb: Sub SaveRestrictionsWithContext(storageType As String, providerName As String, storageKey As String, restrictions As ArchiveRestrictionInfo(), context As String)
  overload: SuperOffice.CRM.Services.IFindAgent.SaveRestrictionsWithContext*
  nameWithType.vb: IFindAgent.SaveRestrictionsWithContext(String, String, String, ArchiveRestrictionInfo(), String)
  fullName.vb: SuperOffice.CRM.Services.IFindAgent.SaveRestrictionsWithContext(System.String, System.String, System.String, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo(), System.String)
  name.vb: SaveRestrictionsWithContext(String, String, String, ArchiveRestrictionInfo(), String)
- uid: SuperOffice.CRM.Services.IFindAgent.SaveRestrictionGroup(System.String,System.String,System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup,System.String)
  commentId: M:SuperOffice.CRM.Services.IFindAgent.SaveRestrictionGroup(System.String,System.String,System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup,System.String)
  id: SaveRestrictionGroup(System.String,System.String,System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup,System.String)
  parent: SuperOffice.CRM.Services.IFindAgent
  langs:
  - csharp
  - vb
  name: SaveRestrictionGroup(String, String, String, ArchiveRestrictionGroup, String)
  nameWithType: IFindAgent.SaveRestrictionGroup(String, String, String, ArchiveRestrictionGroup, String)
  fullName: SuperOffice.CRM.Services.IFindAgent.SaveRestrictionGroup(System.String, System.String, System.String, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSave an array of restrictions as a restriction group for later use as search criteria (including as dynamic selection and Find). \n"
  syntax:
    content: void SaveRestrictionGroup(string storageType, string providerName, string storageKey, ArchiveRestrictionGroup restrictionGroup, string context)
    parameters:
    - id: storageType
      type: System.String
      description: Restriction storage type specification, either &apos;Criteria&apos; or &apos;Reporter&apos; (or possible extensions)
    - id: providerName
      type: System.String
      description: Name of archive provider that is the intended consumer of the restrictions
    - id: storageKey
      type: System.String
      description: Storage key to be interpreted by the restriction storage provider, when it saves the restrictions as criteria
    - id: restrictionGroup
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup
      description: Information about a group of restrictions
    - id: context
      type: System.String
      description: Optional context that can be used by FindProvider
    content.vb: Sub SaveRestrictionGroup(storageType As String, providerName As String, storageKey As String, restrictionGroup As ArchiveRestrictionGroup, context As String)
  overload: SuperOffice.CRM.Services.IFindAgent.SaveRestrictionGroup*
- uid: SuperOffice.CRM.Services.IFindAgent.SaveRestrictionGroups(System.String,System.String,System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup[],System.String)
  commentId: M:SuperOffice.CRM.Services.IFindAgent.SaveRestrictionGroups(System.String,System.String,System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup[],System.String)
  id: SaveRestrictionGroups(System.String,System.String,System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup[],System.String)
  parent: SuperOffice.CRM.Services.IFindAgent
  langs:
  - csharp
  - vb
  name: SaveRestrictionGroups(String, String, String, ArchiveRestrictionGroup[], String)
  nameWithType: IFindAgent.SaveRestrictionGroups(String, String, String, ArchiveRestrictionGroup[], String)
  fullName: SuperOffice.CRM.Services.IFindAgent.SaveRestrictionGroups(System.String, System.String, System.String, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup[], System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSave and rerank an array of restriction groups, returning the possibly modified array.\n"
  syntax:
    content: ArchiveRestrictionGroup[] SaveRestrictionGroups(string storageType, string providerName, string storageKey, ArchiveRestrictionGroup[] restrictionGroups, string context)
    parameters:
    - id: storageType
      type: System.String
      description: Restriction storage type specification, either &apos;Criteria&apos; or &apos;Reporter&apos; (or possible extensions)
    - id: providerName
      type: System.String
      description: Name of archive provider that is the intended consumer of the restrictions
    - id: storageKey
      type: System.String
      description: Storage key to be interpreted by the restriction storage provider, when it saves the restrictions as criteria
    - id: restrictionGroups
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup[]
      description: Information about a group of restrictions
    - id: context
      type: System.String
      description: Optional context that can be used by FindProvider
    return:
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup[]
      description: The new restriction group.
    content.vb: Function SaveRestrictionGroups(storageType As String, providerName As String, storageKey As String, restrictionGroups As ArchiveRestrictionGroup(), context As String) As ArchiveRestrictionGroup()
  overload: SuperOffice.CRM.Services.IFindAgent.SaveRestrictionGroups*
  nameWithType.vb: IFindAgent.SaveRestrictionGroups(String, String, String, ArchiveRestrictionGroup(), String)
  fullName.vb: SuperOffice.CRM.Services.IFindAgent.SaveRestrictionGroups(System.String, System.String, System.String, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup(), System.String)
  name.vb: SaveRestrictionGroups(String, String, String, ArchiveRestrictionGroup(), String)
- uid: SuperOffice.CRM.Services.IFindAgent.GetRestrictionGroups(System.String,System.String,System.String,System.String)
  commentId: M:SuperOffice.CRM.Services.IFindAgent.GetRestrictionGroups(System.String,System.String,System.String,System.String)
  id: GetRestrictionGroups(System.String,System.String,System.String,System.String)
  parent: SuperOffice.CRM.Services.IFindAgent
  langs:
  - csharp
  - vb
  name: GetRestrictionGroups(String, String, String, String)
  nameWithType: IFindAgent.GetRestrictionGroups(String, String, String, String)
  fullName: SuperOffice.CRM.Services.IFindAgent.GetRestrictionGroups(System.String, System.String, System.String, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nReturn all the restriction groups.\n"
  syntax:
    content: ArchiveRestrictionGroup[] GetRestrictionGroups(string storageType, string providerName, string storageKey, string context)
    parameters:
    - id: storageType
      type: System.String
      description: Restriction storage type specification, either &apos;Criteria&apos; or &apos;Reporter&apos; (or possible extensions)
    - id: providerName
      type: System.String
      description: Name of archive provider that is the intended consumer of the restrictions
    - id: storageKey
      type: System.String
      description: Storage key to be interpreted by the restriction storage provider, when it saves the restrictions as criteria
    - id: context
      type: System.String
      description: Optional context that can be used by FindProvider
    return:
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup[]
      description: The restriction groups.
    content.vb: Function GetRestrictionGroups(storageType As String, providerName As String, storageKey As String, context As String) As ArchiveRestrictionGroup()
  overload: SuperOffice.CRM.Services.IFindAgent.GetRestrictionGroups*
- uid: SuperOffice.CRM.Services.IFindAgent.GetRestrictionGroup(System.String,System.String,System.String,System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.IFindAgent.GetRestrictionGroup(System.String,System.String,System.String,System.Int32,System.String)
  id: GetRestrictionGroup(System.String,System.String,System.String,System.Int32,System.String)
  parent: SuperOffice.CRM.Services.IFindAgent
  langs:
  - csharp
  - vb
  name: GetRestrictionGroup(String, String, String, Int32, String)
  nameWithType: IFindAgent.GetRestrictionGroup(String, String, String, Int32, String)
  fullName: SuperOffice.CRM.Services.IFindAgent.GetRestrictionGroup(System.String, System.String, System.String, System.Int32, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nReturn the restriction group with given rank or a blank carrier.\n"
  syntax:
    content: ArchiveRestrictionGroup GetRestrictionGroup(string storageType, string providerName, string storageKey, int rank, string context)
    parameters:
    - id: storageType
      type: System.String
      description: Restriction storage type specification, either &apos;Criteria&apos; or &apos;Reporter&apos; (or possible extensions)
    - id: providerName
      type: System.String
      description: Name of archive provider that is the intended consumer of the restrictions
    - id: storageKey
      type: System.String
      description: Storage key to be interpreted by the restriction storage provider, when it saves the restrictions as criteria
    - id: rank
      type: System.Int32
      description: Rank of the group to be deleted.
    - id: context
      type: System.String
      description: Optional context that can be used by FindProvider
    return:
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup
      description: The new restriction group.
    content.vb: Function GetRestrictionGroup(storageType As String, providerName As String, storageKey As String, rank As Integer, context As String) As ArchiveRestrictionGroup
  overload: SuperOffice.CRM.Services.IFindAgent.GetRestrictionGroup*
- uid: SuperOffice.CRM.Services.IFindAgent.CreateRestrictionGroup(System.String,System.String,System.String,System.String)
  commentId: M:SuperOffice.CRM.Services.IFindAgent.CreateRestrictionGroup(System.String,System.String,System.String,System.String)
  id: CreateRestrictionGroup(System.String,System.String,System.String,System.String)
  parent: SuperOffice.CRM.Services.IFindAgent
  langs:
  - csharp
  - vb
  name: CreateRestrictionGroup(String, String, String, String)
  nameWithType: IFindAgent.CreateRestrictionGroup(String, String, String, String)
  fullName: SuperOffice.CRM.Services.IFindAgent.CreateRestrictionGroup(System.String, System.String, System.String, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCreate a restriction group, initialized with next rank etc.\n"
  syntax:
    content: ArchiveRestrictionGroup CreateRestrictionGroup(string storageType, string providerName, string storageKey, string context)
    parameters:
    - id: storageType
      type: System.String
      description: Restriction storage type specification, either &apos;Criteria&apos; or &apos;Reporter&apos; (or possible extensions)
    - id: providerName
      type: System.String
      description: Name of archive provider that is the intended consumer of the restrictions
    - id: storageKey
      type: System.String
      description: Storage key to be interpreted by the restriction storage provider, when it saves the restrictions as criteria
    - id: context
      type: System.String
      description: Optional context that can be used by FindProvider
    return:
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup
      description: The new restriction group.
    content.vb: Function CreateRestrictionGroup(storageType As String, providerName As String, storageKey As String, context As String) As ArchiveRestrictionGroup
  overload: SuperOffice.CRM.Services.IFindAgent.CreateRestrictionGroup*
- uid: SuperOffice.CRM.Services.IFindAgent.DeleteRestrictionGroup(System.String,System.String,System.String,System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.IFindAgent.DeleteRestrictionGroup(System.String,System.String,System.String,System.Int32,System.String)
  id: DeleteRestrictionGroup(System.String,System.String,System.String,System.Int32,System.String)
  parent: SuperOffice.CRM.Services.IFindAgent
  langs:
  - csharp
  - vb
  name: DeleteRestrictionGroup(String, String, String, Int32, String)
  nameWithType: IFindAgent.DeleteRestrictionGroup(String, String, String, Int32, String)
  fullName: SuperOffice.CRM.Services.IFindAgent.DeleteRestrictionGroup(System.String, System.String, System.String, System.Int32, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCreate a restriction group, initialized with next rank etc.\n"
  syntax:
    content: void DeleteRestrictionGroup(string storageType, string providerName, string storageKey, int rank, string context)
    parameters:
    - id: storageType
      type: System.String
      description: Restriction storage type specification, either &apos;Criteria&apos; or &apos;Reporter&apos; (or possible extensions)
    - id: providerName
      type: System.String
      description: Name of archive provider that is the intended consumer of the restrictions
    - id: storageKey
      type: System.String
      description: Storage key to be interpreted by the restriction storage provider, when it saves the restrictions as criteria
    - id: rank
      type: System.Int32
      description: Rank of the group to be deleted.
    - id: context
      type: System.String
      description: Optional context that can be used by FindProvider
    content.vb: Sub DeleteRestrictionGroup(storageType As String, providerName As String, storageKey As String, rank As Integer, context As String)
  overload: SuperOffice.CRM.Services.IFindAgent.DeleteRestrictionGroup*
- uid: SuperOffice.CRM.Services.IFindAgent.SaveRestrictionsAndGetCriteriaInformation(System.String,System.String,System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.String[])
  commentId: M:SuperOffice.CRM.Services.IFindAgent.SaveRestrictionsAndGetCriteriaInformation(System.String,System.String,System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.String[])
  id: SaveRestrictionsAndGetCriteriaInformation(System.String,System.String,System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.String[])
  parent: SuperOffice.CRM.Services.IFindAgent
  langs:
  - csharp
  - vb
  name: SaveRestrictionsAndGetCriteriaInformation(String, String, String, ArchiveRestrictionInfo[], String[])
  nameWithType: IFindAgent.SaveRestrictionsAndGetCriteriaInformation(String, String, String, ArchiveRestrictionInfo[], String[])
  fullName: SuperOffice.CRM.Services.IFindAgent.SaveRestrictionsAndGetCriteriaInformation(System.String, System.String, System.String, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[], System.String[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSave an array of restrictions for later use as search criteria (including as dynamic selection and Find). Then, return the same result as a call to GetCriteriaInformation would have done. The purpose is to encapsulate saving and updating of a GUI in one round trip.\n"
  syntax:
    content: CriteriaInformation SaveRestrictionsAndGetCriteriaInformation(string storageType, string providerName, string storageKey, ArchiveRestrictionInfo[] restrictions, string[] staticColumns)
    parameters:
    - id: storageType
      type: System.String
      description: Restriction storage type specification, either &apos;Criteria&apos; or &apos;Reporter&apos; (or possible extensions)
    - id: providerName
      type: System.String
      description: Name of archive provider that is the intended consumer of the restrictions
    - id: storageKey
      type: System.String
      description: Storage key to be interpreted by the restriction storage provider, when it saves the restrictions as criteria
    - id: restrictions
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
      description: Array of restrictions. The ColumnInfo member and the DisplayValues members need NOT be populated; it is enough to provide a name, operator and any values the operator may need. The IsActive is also saved. Values should be encoded using the CultureDataFormatter to ensure compatibility across cultures.
    - id: staticColumns
      type: System.String[]
      description: Optional array of restrictions that are to be EXCLUDED from the CriteriaArchiveRows part of the result. In the Find dialogs, that corresponds to the &apos;static&apos; fields, to avoid duplicating them in the &apos;Match also&apos; criteria list. This array can be null, indicating that all restrictions should be included in the criteria list.
    return:
      type: SuperOffice.CRM.Services.CriteriaInformation
      description: 'The result contains the restrictions in two forms: fully populated ArchiveRestrictionInfo objects, used to display details and for saving changes; and as a list suitable for an Archive control'
    content.vb: Function SaveRestrictionsAndGetCriteriaInformation(storageType As String, providerName As String, storageKey As String, restrictions As ArchiveRestrictionInfo(), staticColumns As String()) As CriteriaInformation
  overload: SuperOffice.CRM.Services.IFindAgent.SaveRestrictionsAndGetCriteriaInformation*
  nameWithType.vb: IFindAgent.SaveRestrictionsAndGetCriteriaInformation(String, String, String, ArchiveRestrictionInfo(), String())
  fullName.vb: SuperOffice.CRM.Services.IFindAgent.SaveRestrictionsAndGetCriteriaInformation(System.String, System.String, System.String, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo(), System.String())
  name.vb: SaveRestrictionsAndGetCriteriaInformation(String, String, String, ArchiveRestrictionInfo(), String())
- uid: SuperOffice.CRM.Services.IFindAgent.Find(System.String,System.String,System.String,System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IFindAgent.Find(System.String,System.String,System.String,System.Int32,System.Int32)
  id: Find(System.String,System.String,System.String,System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.IFindAgent
  langs:
  - csharp
  - vb
  name: Find(String, String, String, Int32, Int32)
  nameWithType: IFindAgent.Find(String, String, String, Int32, Int32)
  fullName: SuperOffice.CRM.Services.IFindAgent.Find(System.String, System.String, System.String, System.Int32, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nExecute a Find operation and return a page of results. The criteria for the Find are fetched from the restriction storage provider according to the given parameters. The columns of the result are calculated based on the restriction. The orderby columns are also calculated by the system.&lt;para/>The other variants of the Find method allow you greater control over the individual aspects of the process.\n"
  syntax:
    content: FindResults Find(string storageType, string providerName, string storageKey, int pageSize, int pageNumber)
    parameters:
    - id: storageType
      type: System.String
      description: Restriction storage type specification, either &apos;Criteria&apos; or &apos;Reporter&apos; (or possible extensions)
    - id: providerName
      type: System.String
      description: Name of archive provider that is to execute the search and return the result columns/rows
    - id: storageKey
      type: System.String
      description: Storage key to be interpreted by the restriction storage provider, when it fetches criteria for the search
    - id: pageSize
      type: System.Int32
      description: Size of result set pages
    - id: pageNumber
      type: System.Int32
      description: Result set page to return, 0 is the first page. When a call returns no rows, no further pages are available. Negative page numbers are interpreted as number of rows to skip.
    return:
      type: SuperOffice.CRM.Services.FindResults
      description: Results from search, containing column information and result rows.
    content.vb: Function Find(storageType As String, providerName As String, storageKey As String, pageSize As Integer, pageNumber As Integer) As FindResults
  overload: SuperOffice.CRM.Services.IFindAgent.Find*
- uid: SuperOffice.CRM.Services.IFindAgent.FindFromRestrictions(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.String,System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IFindAgent.FindFromRestrictions(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.String,System.Int32,System.Int32)
  id: FindFromRestrictions(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.String,System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.IFindAgent
  langs:
  - csharp
  - vb
  name: FindFromRestrictions(ArchiveRestrictionInfo[], String, Int32, Int32)
  nameWithType: IFindAgent.FindFromRestrictions(ArchiveRestrictionInfo[], String, Int32, Int32)
  fullName: SuperOffice.CRM.Services.IFindAgent.FindFromRestrictions(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[], System.String, System.Int32, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nExecute a Find operation and return a page of results. The criteria for the Find are passed in directly, not fetched by a restriction storage provider. The columns of the result are calculated based on the restriction.\n"
  remarks: "\n<p>Archive Restriction Info objects represent search terms.</p>\n<p>Column names and operator strings are defined elsewhere.</p>\n<p>Values should be encoded using the CultureDataFormatter, so 10 is &quot;[I:10]&quot;.\n    Default string encodings should be handled ok, but beware of non-invariant cultures leading to incorrect date and float parsing.\n</p>\n<p></p>\n<pre><code>    var restriction1 = new ArchiveRestrictionInfo(&quot;category&quot;, &quot;equals&quot;, &quot;[I:10]&quot;);</code></pre>\n<p></p>\n<p></p>\n"
  example:
  - "\n<pre><code>&quot;name = &apos;SuperOffice AS&apos;&quot;\n&quot;name startsWith &apos;SuperOffice&apos;&quot;\n&quot;startsWith(name, &apos;SuperOffice&apos;)&quot;\n&quot;updatedDate after &apos;2000.12.30&apos;&quot;\n&quot;category = 10&quot;\n&quot;category in (10, 12, 53)&quot;\n&quot;category in (2,3,4) and name startswith &apos;super&apos;&quot;\n&quot;category in (2,3,4) or name startswith &apos;super&apos;&quot;\n&quot;(category = 2 or business = 3) and name contains &apos;super&apos;&quot;\n<p></p>\nvar agent = new FindAgent();\n<p></p>\nvar restrictions = new ArchiveRestrictionInfo[1];\nrestrictions[0] = new ArchiveRestrictionInfo(&quot;updatedBy&quot;, &quot;equals&quot;, &quot;2&quot;);\nvar res = _agent.FindFromRestrictions(restrictions, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res1.ArchiveRows)\n    (int)row.ColumnData[&quot;updatedBy&quot;].RawValue == 2\n<p></p>\nvar restrictions = new ArchiveRestrictionInfo[2];\nrestrictions[0] = new ArchiveRestrictionInfo(&quot;updatedBy&quot;, &quot;equals&quot;, &quot;2&quot;);\nrestrictions[1] = new ArchiveRestrictionInfo(&quot;updatedDate&quot;, &quot;after&quot;, &quot;2000.1.2&quot;);\nvar res = _agent.FindFromRestrictions(restrictions, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res2.ArchiveRows)\n    (int)row.ColumnData[&quot;updatedBy&quot;].RawValue != 6 &amp;&amp; \n    row.ColumnData[&quot;updatedDate&quot;].GetDateTimeValue() > new DateTime(2000, 1, 2);\n<p></p></code></pre>\n"
  syntax:
    content: FindResults FindFromRestrictions(ArchiveRestrictionInfo[] restrictions, string providerName, int pageSize, int pageNumber)
    parameters:
    - id: restrictions
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
      description: Array of restrictions specifying the search. Each restriction must match a column of the  given archive provider, and that column must have its CanRestrictBy property set to true.
    - id: providerName
      type: System.String
      description: Name of archive provider that is to execute the search and return the result columns/rows
    - id: pageSize
      type: System.Int32
      description: Size of result set pages
    - id: pageNumber
      type: System.Int32
      description: Result set page to return, 0 is the first page. When a call returns no rows, no further pages are available. Negative page numbers are interpreted as number of rows to skip.
    return:
      type: SuperOffice.CRM.Services.FindResults
      description: Results from search, containing column information and result rows.
    content.vb: Function FindFromRestrictions(restrictions As ArchiveRestrictionInfo(), providerName As String, pageSize As Integer, pageNumber As Integer) As FindResults
  overload: SuperOffice.CRM.Services.IFindAgent.FindFromRestrictions*
  nameWithType.vb: IFindAgent.FindFromRestrictions(ArchiveRestrictionInfo(), String, Int32, Int32)
  fullName.vb: SuperOffice.CRM.Services.IFindAgent.FindFromRestrictions(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo(), System.String, System.Int32, System.Int32)
  name.vb: FindFromRestrictions(ArchiveRestrictionInfo(), String, Int32, Int32)
- uid: SuperOffice.CRM.Services.IFindAgent.FindFromRestrictionsColumns(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.String,System.String[],System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IFindAgent.FindFromRestrictionsColumns(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.String,System.String[],System.Int32,System.Int32)
  id: FindFromRestrictionsColumns(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.String,System.String[],System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.IFindAgent
  langs:
  - csharp
  - vb
  name: FindFromRestrictionsColumns(ArchiveRestrictionInfo[], String, String[], Int32, Int32)
  nameWithType: IFindAgent.FindFromRestrictionsColumns(ArchiveRestrictionInfo[], String, String[], Int32, Int32)
  fullName: SuperOffice.CRM.Services.IFindAgent.FindFromRestrictionsColumns(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[], System.String, System.String[], System.Int32, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nExecute a Find operation and return a page of results. &lt;para/>The criteria for the Find are passed in directly, not fetched by a restriction storage provider. &lt;para/>The desired columns of the result set are also passed in directly.&lt;para/>The orderby information is calculated by the system.&lt;para/>Use the GetCriteriaInformation and GetDefaultDesiredColumns service methods to let the system calculate these values, if you want to use or modify them.\n"
  remarks: "\n<p>Archive Restriction Info objects represent search terms.</p>\n<p>Column names and operator strings are defined elsewhere.</p>\n<p>Values should be encoded using the CultureDataFormatter, so 10 is &quot;[I:10]&quot;.\n    Default string encodings should be handled ok, but beware of non-invariant cultures leading to incorrect date and float parsing.\n</p>\n<p></p>\n<pre><code>    var restriction1 = new ArchiveRestrictionInfo(&quot;category&quot;, &quot;equals&quot;, &quot;[I:10]&quot;);</code></pre>\n<p></p>\n<p></p>\n"
  example:
  - "\n<pre><code>&quot;name = &apos;SuperOffice AS&apos;&quot;\n&quot;name startsWith &apos;SuperOffice&apos;&quot;\n&quot;startsWith(name, &apos;SuperOffice&apos;)&quot;\n&quot;updatedDate after &apos;2000.12.30&apos;&quot;\n&quot;category = 10&quot;\n&quot;category in (10, 12, 53)&quot;\n&quot;category in (2,3,4) and name startswith &apos;super&apos;&quot;\n&quot;category in (2,3,4) or name startswith &apos;super&apos;&quot;\n&quot;(category = 2 or business = 3) and name contains &apos;super&apos;&quot;\n<p></p>\nvar agent = new FindAgent();\n<p></p>\nvar restrictions = new ArchiveRestrictionInfo[1];\nrestrictions[0] = new ArchiveRestrictionInfo(&quot;updatedBy&quot;, &quot;equals&quot;, &quot;2&quot;);\nvar res = _agent.FindFromRestrictions(restrictions, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res1.ArchiveRows)\n    (int)row.ColumnData[&quot;updatedBy&quot;].RawValue == 2\n<p></p>\nvar restrictions = new ArchiveRestrictionInfo[2];\nrestrictions[0] = new ArchiveRestrictionInfo(&quot;updatedBy&quot;, &quot;equals&quot;, &quot;2&quot;);\nrestrictions[1] = new ArchiveRestrictionInfo(&quot;updatedDate&quot;, &quot;after&quot;, &quot;2000.1.2&quot;);\nvar res = _agent.FindFromRestrictions(restrictions, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res2.ArchiveRows)\n    (int)row.ColumnData[&quot;updatedBy&quot;].RawValue != 6 &amp;&amp; \n    row.ColumnData[&quot;updatedDate&quot;].GetDateTimeValue() > new DateTime(2000, 1, 2);\n<p></p></code></pre>\n"
  syntax:
    content: FindResults FindFromRestrictionsColumns(ArchiveRestrictionInfo[] restrictions, string providerName, string[] desiredColumns, int pageSize, int pageNumber)
    parameters:
    - id: restrictions
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
      description: Array of restrictions specifying the search. Each restriction must match a column of the  given archive provider, and that column must have its CanRestrictBy property set to true.
    - id: providerName
      type: System.String
      description: Name of archive provider that is to execute the search and return the result columns/rows
    - id: desiredColumns
      type: System.String[]
      description: Array of column names desired for the result. Each name must match a column offered by the given archive provider.
    - id: pageSize
      type: System.Int32
      description: Size of result set pages
    - id: pageNumber
      type: System.Int32
      description: Result set page to return, 0 is the first page. When a call returns no rows, no further pages are available. Negative page numbers are interpreted as number of rows to skip.
    return:
      type: SuperOffice.CRM.Services.FindResults
      description: Results from search, containing column information and result rows.
    content.vb: Function FindFromRestrictionsColumns(restrictions As ArchiveRestrictionInfo(), providerName As String, desiredColumns As String(), pageSize As Integer, pageNumber As Integer) As FindResults
  overload: SuperOffice.CRM.Services.IFindAgent.FindFromRestrictionsColumns*
  nameWithType.vb: IFindAgent.FindFromRestrictionsColumns(ArchiveRestrictionInfo(), String, String(), Int32, Int32)
  fullName.vb: SuperOffice.CRM.Services.IFindAgent.FindFromRestrictionsColumns(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo(), System.String, System.String(), System.Int32, System.Int32)
  name.vb: FindFromRestrictionsColumns(ArchiveRestrictionInfo(), String, String(), Int32, Int32)
- uid: SuperOffice.CRM.Services.IFindAgent.GetAvailableRestrictionColumns(System.String,System.String)
  commentId: M:SuperOffice.CRM.Services.IFindAgent.GetAvailableRestrictionColumns(System.String,System.String)
  id: GetAvailableRestrictionColumns(System.String,System.String)
  parent: SuperOffice.CRM.Services.IFindAgent
  langs:
  - csharp
  - vb
  name: GetAvailableRestrictionColumns(String, String)
  nameWithType: IFindAgent.GetAvailableRestrictionColumns(String, String)
  fullName: SuperOffice.CRM.Services.IFindAgent.GetAvailableRestrictionColumns(System.String, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet a list of the column names corresponding to available restrictions for a certain archive provider and restriction storage provider. Such columns have CanRestrict set to true, and are supported by the given restriction storage provider.\n"
  syntax:
    content: string[] GetAvailableRestrictionColumns(string storageType, string providerName)
    parameters:
    - id: storageType
      type: System.String
      description: Restriction storage type specification, either &apos;Criteria&apos; or &apos;Reporter&apos; (or possible extensions)
    - id: providerName
      type: System.String
      description: Name of archive provider that is to execute the search and return the result columns/rows
    return:
      type: System.String[]
      description: Array of column names, corresponding to support restrictions for the given archive and restriction storage providers.
    content.vb: Function GetAvailableRestrictionColumns(storageType As String, providerName As String) As String()
  overload: SuperOffice.CRM.Services.IFindAgent.GetAvailableRestrictionColumns*
- uid: SuperOffice.CRM.Services.IFindAgent.GetSpecifiedCriteriaInformationWithDefaults(System.String,System.String,System.String,System.String[],System.String[])
  commentId: M:SuperOffice.CRM.Services.IFindAgent.GetSpecifiedCriteriaInformationWithDefaults(System.String,System.String,System.String,System.String[],System.String[])
  id: GetSpecifiedCriteriaInformationWithDefaults(System.String,System.String,System.String,System.String[],System.String[])
  parent: SuperOffice.CRM.Services.IFindAgent
  langs:
  - csharp
  - vb
  name: GetSpecifiedCriteriaInformationWithDefaults(String, String, String, String[], String[])
  nameWithType: IFindAgent.GetSpecifiedCriteriaInformationWithDefaults(String, String, String, String[], String[])
  fullName: SuperOffice.CRM.Services.IFindAgent.GetSpecifiedCriteriaInformationWithDefaults(System.String, System.String, System.String, System.String[], System.String[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet criteria information from a set of saved criteria, for a specific set of columns. The result contains the restrictions in two forms: fully populated ArchiveRestrictionInfo objects, used to display details and for saving changes; and as a list suitable for an Archive control. ALL columns specified in the call will be present in the results; those that do not have corresponding criteria set will have empty values and the default (first) operator, with the IsActive flag set to false.\n"
  syntax:
    content: CriteriaInformation GetSpecifiedCriteriaInformationWithDefaults(string storageType, string providerName, string storageKey, string[] desiredColumnNames, string[] staticColumns)
    parameters:
    - id: storageType
      type: System.String
      description: Restriction storage type specification, either &apos;Criteria&apos; or &apos;Reporter&apos; (or possible extensions)
    - id: providerName
      type: System.String
      description: Name of archive provider that is the intended consumer of the restrictions
    - id: storageKey
      type: System.String
      description: Storage key to be interpreted by the restriction storage provider, when it fetches criteria for the search
    - id: desiredColumnNames
      type: System.String[]
      description: Optional array of restrictions that are to be EXCLUDED from the CriteriaArchiveRows part of the result. In the Find dialogs, that corresponds to the &apos;static&apos; fields, to avoid duplicating them in the &apos;Match also&apos; criteria list. This array can be null, indicating that all restrictions should be included in the criteria list.
    - id: staticColumns
      type: System.String[]
      description: Optional array of restrictions that are to be EXCLUDED from the CriteriaArchiveRows part of the result. In the Find dialogs, that corresponds to the &apos;static&apos; fields, to avoid duplicating them in the &apos;Match also&apos; criteria list. This array can be null, indicating that all restrictions should be included in the criteria list.
    return:
      type: SuperOffice.CRM.Services.CriteriaInformation
      description: 'The result contains the restrictions in two forms: fully populated ArchiveRestrictionInfo objects, used to display details and for saving changes; and as a list suitable for an Archive control. ALL columns specified in the call will be present in the results; those that do not have corresponding criteria set will have empty values and the default (first) operator, with the IsActive flag set to false.'
    content.vb: Function GetSpecifiedCriteriaInformationWithDefaults(storageType As String, providerName As String, storageKey As String, desiredColumnNames As String(), staticColumns As String()) As CriteriaInformation
  overload: SuperOffice.CRM.Services.IFindAgent.GetSpecifiedCriteriaInformationWithDefaults*
  nameWithType.vb: IFindAgent.GetSpecifiedCriteriaInformationWithDefaults(String, String, String, String(), String())
  fullName.vb: SuperOffice.CRM.Services.IFindAgent.GetSpecifiedCriteriaInformationWithDefaults(System.String, System.String, System.String, System.String(), System.String())
  name.vb: GetSpecifiedCriteriaInformationWithDefaults(String, String, String, String(), String())
- uid: SuperOffice.CRM.Services.IFindAgent.GetSpecifiedCriteriaInformationWithDefaultsWithContext(System.String,System.String,System.String,System.String[],System.String[],System.String)
  commentId: M:SuperOffice.CRM.Services.IFindAgent.GetSpecifiedCriteriaInformationWithDefaultsWithContext(System.String,System.String,System.String,System.String[],System.String[],System.String)
  id: GetSpecifiedCriteriaInformationWithDefaultsWithContext(System.String,System.String,System.String,System.String[],System.String[],System.String)
  parent: SuperOffice.CRM.Services.IFindAgent
  langs:
  - csharp
  - vb
  name: GetSpecifiedCriteriaInformationWithDefaultsWithContext(String, String, String, String[], String[], String)
  nameWithType: IFindAgent.GetSpecifiedCriteriaInformationWithDefaultsWithContext(String, String, String, String[], String[], String)
  fullName: SuperOffice.CRM.Services.IFindAgent.GetSpecifiedCriteriaInformationWithDefaultsWithContext(System.String, System.String, System.String, System.String[], System.String[], System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet criteria information from a set of saved criteria, for a specific set of columns. The result contains the restrictions in two forms: fully populated ArchiveRestrictionInfo objects, used to display details and for saving changes; and as a list suitable for an Archive control. ALL columns specified in the call will be present in the results; those that do not have corresponding criteria set will have empty values and the default (first) operator, with the IsActive flag set to false.\n"
  syntax:
    content: CriteriaInformation GetSpecifiedCriteriaInformationWithDefaultsWithContext(string storageType, string providerName, string storageKey, string[] desiredColumnNames, string[] staticColumns, string context)
    parameters:
    - id: storageType
      type: System.String
      description: Restriction storage type specification, either &apos;Criteria&apos; or &apos;Reporter&apos; (or possible extensions)
    - id: providerName
      type: System.String
      description: Name of archive provider that is the intended consumer of the restrictions
    - id: storageKey
      type: System.String
      description: Storage key to be interpreted by the restriction storage provider, when it fetches criteria for the search
    - id: desiredColumnNames
      type: System.String[]
      description: Optional array of restrictions that are to be EXCLUDED from the CriteriaArchiveRows part of the result. In the Find dialogs, that corresponds to the &apos;static&apos; fields, to avoid duplicating them in the &apos;Match also&apos; criteria list. This array can be null, indicating that all restrictions should be included in the criteria list.
    - id: staticColumns
      type: System.String[]
      description: Optional array of restrictions that are to be EXCLUDED from the CriteriaArchiveRows part of the result. In the Find dialogs, that corresponds to the &apos;static&apos; fields, to avoid duplicating them in the &apos;Match also&apos; criteria list. This array can be null, indicating that all restrictions should be included in the criteria list.
    - id: context
      type: System.String
      description: Optional context that can be used by FindProvider
    return:
      type: SuperOffice.CRM.Services.CriteriaInformation
      description: 'The result contains the restrictions in two forms: fully populated ArchiveRestrictionInfo objects, used to display details and for saving changes; and as a list suitable for an Archive control. ALL columns specified in the call will be present in the results; those that do not have corresponding criteria set will have empty values and the default (first) operator, with the IsActive flag set to false.'
    content.vb: Function GetSpecifiedCriteriaInformationWithDefaultsWithContext(storageType As String, providerName As String, storageKey As String, desiredColumnNames As String(), staticColumns As String(), context As String) As CriteriaInformation
  overload: SuperOffice.CRM.Services.IFindAgent.GetSpecifiedCriteriaInformationWithDefaultsWithContext*
  nameWithType.vb: IFindAgent.GetSpecifiedCriteriaInformationWithDefaultsWithContext(String, String, String, String(), String(), String)
  fullName.vb: SuperOffice.CRM.Services.IFindAgent.GetSpecifiedCriteriaInformationWithDefaultsWithContext(System.String, System.String, System.String, System.String(), System.String(), System.String)
  name.vb: GetSpecifiedCriteriaInformationWithDefaultsWithContext(String, String, String, String(), String(), String)
- uid: SuperOffice.CRM.Services.IFindAgent.FindFromRestrictionsColumnsOrderBy(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.String,System.String[],SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[],System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IFindAgent.FindFromRestrictionsColumnsOrderBy(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.String,System.String[],SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[],System.Int32,System.Int32)
  id: FindFromRestrictionsColumnsOrderBy(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.String,System.String[],SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[],System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.IFindAgent
  langs:
  - csharp
  - vb
  name: FindFromRestrictionsColumnsOrderBy(ArchiveRestrictionInfo[], String, String[], ArchiveOrderByInfo[], Int32, Int32)
  nameWithType: IFindAgent.FindFromRestrictionsColumnsOrderBy(ArchiveRestrictionInfo[], String, String[], ArchiveOrderByInfo[], Int32, Int32)
  fullName: SuperOffice.CRM.Services.IFindAgent.FindFromRestrictionsColumnsOrderBy(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[], System.String, System.String[], SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[], System.Int32, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nExecute a Find operation and return a page of results. &lt;para/>The criteria for the Find are passed in directly, not fetched by a restriction storage provider. &lt;para/>The desired columns of the result set are also passed in directly.&lt;para/>The orderby information is also passed in directly.&lt;para/>Use the GetCriteriaInformation, GetDefaultDesiredColumns and GetDefaultOrderBy service methods to let the system calculate these values, if you want to use or modify them.\n"
  syntax:
    content: FindResults FindFromRestrictionsColumnsOrderBy(ArchiveRestrictionInfo[] restrictions, string providerName, string[] desiredColumns, ArchiveOrderByInfo[] orderBy, int pageSize, int pageNumber)
    parameters:
    - id: restrictions
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
      description: Array of restrictions specifying the search. Each restriction must match a column of the  given archive provider, and that column must have its CanRestrictBy property set to true.
    - id: providerName
      type: System.String
      description: Name of archive provider that is to execute the search and return the result columns/rows
    - id: desiredColumns
      type: System.String[]
      description: Array of column names desired for the result. Each name must match a column offered by the given archive provider.
    - id: orderBy
      type: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[]
      description: Array of order by specifications. If it is null or empty, the row order is unspecified, database dependent, and might not be the same from call to call, depending on query execution plans. The unspecified order willgenerally not vary within pages of the same query.
    - id: pageSize
      type: System.Int32
      description: Size of result set pages
    - id: pageNumber
      type: System.Int32
      description: Result set page to return, 0 is the first page. When a call returns no rows, no further pages are available. Negative page numbers are interpreted as number of rows to skip.
    return:
      type: SuperOffice.CRM.Services.FindResults
      description: Results from search, containing column information and result rows.
    content.vb: Function FindFromRestrictionsColumnsOrderBy(restrictions As ArchiveRestrictionInfo(), providerName As String, desiredColumns As String(), orderBy As ArchiveOrderByInfo(), pageSize As Integer, pageNumber As Integer) As FindResults
  overload: SuperOffice.CRM.Services.IFindAgent.FindFromRestrictionsColumnsOrderBy*
  nameWithType.vb: IFindAgent.FindFromRestrictionsColumnsOrderBy(ArchiveRestrictionInfo(), String, String(), ArchiveOrderByInfo(), Int32, Int32)
  fullName.vb: SuperOffice.CRM.Services.IFindAgent.FindFromRestrictionsColumnsOrderBy(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo(), System.String, System.String(), SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo(), System.Int32, System.Int32)
  name.vb: FindFromRestrictionsColumnsOrderBy(ArchiveRestrictionInfo(), String, String(), ArchiveOrderByInfo(), Int32, Int32)
- uid: SuperOffice.CRM.Services.IFindAgent.GetDefaultDesiredColumns(System.String,System.String,System.String)
  commentId: M:SuperOffice.CRM.Services.IFindAgent.GetDefaultDesiredColumns(System.String,System.String,System.String)
  id: GetDefaultDesiredColumns(System.String,System.String,System.String)
  parent: SuperOffice.CRM.Services.IFindAgent
  langs:
  - csharp
  - vb
  name: GetDefaultDesiredColumns(String, String, String)
  nameWithType: IFindAgent.GetDefaultDesiredColumns(String, String, String)
  fullName: SuperOffice.CRM.Services.IFindAgent.GetDefaultDesiredColumns(System.String, System.String, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCalculate the default desired columns, i.e., the result columns for a given search. The search is defined by a storage type, provider name and storage key, which are used to fetch the corresponding restrictions from the database (in the same way as Find does). If you want to specify the restriction directly, use the GetDefaultDesiredColumnsFromRestrictions method instead. This is the algorithm that is used by the Find service method.\n"
  syntax:
    content: ArchiveColumnInfo[] GetDefaultDesiredColumns(string storageType, string providerName, string storageKey)
    parameters:
    - id: storageType
      type: System.String
      description: Restriction storage type specification, either &apos;Criteria&apos; or &apos;Reporter&apos; (or possible extensions)
    - id: providerName
      type: System.String
      description: Name of the provider to calculate default desired columns for
    - id: storageKey
      type: System.String
      description: Storage key to be interpreted by the restriction storage provider, when it fetches criteria for the search
    return:
      type: SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo[]
      description: Column information for the default desired columns, fully populated. Percentage-specified column widths sum to exactly 100.
    content.vb: Function GetDefaultDesiredColumns(storageType As String, providerName As String, storageKey As String) As ArchiveColumnInfo()
  overload: SuperOffice.CRM.Services.IFindAgent.GetDefaultDesiredColumns*
- uid: SuperOffice.CRM.Services.IFindAgent.GetDefaultOrderBy(System.String,System.String,System.String)
  commentId: M:SuperOffice.CRM.Services.IFindAgent.GetDefaultOrderBy(System.String,System.String,System.String)
  id: GetDefaultOrderBy(System.String,System.String,System.String)
  parent: SuperOffice.CRM.Services.IFindAgent
  langs:
  - csharp
  - vb
  name: GetDefaultOrderBy(String, String, String)
  nameWithType: IFindAgent.GetDefaultOrderBy(String, String, String)
  fullName: SuperOffice.CRM.Services.IFindAgent.GetDefaultOrderBy(System.String, System.String, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCalculate the default orderby columns for a given provider and a search. The search is specified by a storage type, provider name and storage key, and is fetched from the database. Default desired columns are then calculated for the search, and those columns are then used as the basis for calculating an order by. If you want to specify the desired columns directly, use the GetDefaultOrderByFromDesiredColumns method instead.  This is the same algorithm that is used by the Find service method.\n"
  syntax:
    content: ArchiveOrderByInfo[] GetDefaultOrderBy(string storageType, string providerName, string storageKey)
    parameters:
    - id: storageType
      type: System.String
      description: Restriction storage type specification, either &apos;Criteria&apos; or &apos;Reporter&apos; (or possible extensions)
    - id: providerName
      type: System.String
      description: Provider name to calculate default orderby for
    - id: storageKey
      type: System.String
      description: Storage key to be interpreted by the restriction storage provider, when it fetches criteria for the search
    return:
      type: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[]
      description: Orderby information
    content.vb: Function GetDefaultOrderBy(storageType As String, providerName As String, storageKey As String) As ArchiveOrderByInfo()
  overload: SuperOffice.CRM.Services.IFindAgent.GetDefaultOrderBy*
- uid: SuperOffice.CRM.Services.IFindAgent.PopulateRestrictions(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  commentId: M:SuperOffice.CRM.Services.IFindAgent.PopulateRestrictions(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  id: PopulateRestrictions(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  parent: SuperOffice.CRM.Services.IFindAgent
  langs:
  - csharp
  - vb
  name: PopulateRestrictions(String, ArchiveRestrictionInfo[])
  nameWithType: IFindAgent.PopulateRestrictions(String, ArchiveRestrictionInfo[])
  fullName: SuperOffice.CRM.Services.IFindAgent.PopulateRestrictions(System.String, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nTake an incoming set of minimally populated restrictions (name + operator is required), and populate all the other parts of the ArchiveRestrictionInfo structure. This includes column information, display values (including list value lookup), and calculated/default values where the value hints specify read-only (R).\n"
  syntax:
    content: ArchiveRestrictionInfo[] PopulateRestrictions(string providerName, ArchiveRestrictionInfo[] restrictions)
    parameters:
    - id: providerName
      type: System.String
      description: Provider name to use for populating column information
    - id: restrictions
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
      description: Restrictions to populate. The Name and Operator fields have to have valid content, and Values should be set as appropriate. Other fields can be left blank or null. If a ColumnInfo is already set, it will not be overwritten.
    return:
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
      description: Fully populated restrictions in the same order as the incoming restrictions.
    content.vb: Function PopulateRestrictions(providerName As String, restrictions As ArchiveRestrictionInfo()) As ArchiveRestrictionInfo()
  overload: SuperOffice.CRM.Services.IFindAgent.PopulateRestrictions*
  nameWithType.vb: IFindAgent.PopulateRestrictions(String, ArchiveRestrictionInfo())
  fullName.vb: SuperOffice.CRM.Services.IFindAgent.PopulateRestrictions(System.String, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo())
  name.vb: PopulateRestrictions(String, ArchiveRestrictionInfo())
- uid: SuperOffice.CRM.Services.IFindAgent.PopulateRestrictionValues(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  commentId: M:SuperOffice.CRM.Services.IFindAgent.PopulateRestrictionValues(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  id: PopulateRestrictionValues(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  parent: SuperOffice.CRM.Services.IFindAgent
  langs:
  - csharp
  - vb
  name: PopulateRestrictionValues(ArchiveRestrictionInfo[])
  nameWithType: IFindAgent.PopulateRestrictionValues(ArchiveRestrictionInfo[])
  fullName: SuperOffice.CRM.Services.IFindAgent.PopulateRestrictionValues(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nTake an incoming set of Restrictions (name + operator + any user-entered values), and populate/expand all values as specified by the operator&apos;s ValueHints, taking into account any values already there. Used for dynamic date periods; perhaps others in the future\n"
  syntax:
    content: ArchiveRestrictionInfo[] PopulateRestrictionValues(ArchiveRestrictionInfo[] restrictions)
    parameters:
    - id: restrictions
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
      description: Restrictions to populate. The Name and Operator fields have to have valid content, and Values should be set as appropriate. Other fields can be left blank or null and will not be changed.
    return:
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
      description: Restrictions in the same order as the incoming restrictions, with all values expanded.
    content.vb: Function PopulateRestrictionValues(restrictions As ArchiveRestrictionInfo()) As ArchiveRestrictionInfo()
  overload: SuperOffice.CRM.Services.IFindAgent.PopulateRestrictionValues*
  nameWithType.vb: IFindAgent.PopulateRestrictionValues(ArchiveRestrictionInfo())
  fullName.vb: SuperOffice.CRM.Services.IFindAgent.PopulateRestrictionValues(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo())
  name.vb: PopulateRestrictionValues(ArchiveRestrictionInfo())
- uid: SuperOffice.CRM.Services.IFindAgent.GetDefaultDesiredColumnsFromRestrictions(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  commentId: M:SuperOffice.CRM.Services.IFindAgent.GetDefaultDesiredColumnsFromRestrictions(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  id: GetDefaultDesiredColumnsFromRestrictions(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  parent: SuperOffice.CRM.Services.IFindAgent
  langs:
  - csharp
  - vb
  name: GetDefaultDesiredColumnsFromRestrictions(String, ArchiveRestrictionInfo[])
  nameWithType: IFindAgent.GetDefaultDesiredColumnsFromRestrictions(String, ArchiveRestrictionInfo[])
  fullName: SuperOffice.CRM.Services.IFindAgent.GetDefaultDesiredColumnsFromRestrictions(System.String, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCalculate the default desired columns, i.e., the result columns for a given search. The search is defined by a provider name and a set of restrictions. This is the algorithm that is used by the Find service method.\n"
  syntax:
    content: ArchiveColumnInfo[] GetDefaultDesiredColumnsFromRestrictions(string providerName, ArchiveRestrictionInfo[] restrictions)
    parameters:
    - id: providerName
      type: System.String
      description: Name of the provider to calculate default desired columns for
    - id: restrictions
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
      description: Restriction to use in the calculation of default desired columns
    return:
      type: SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo[]
      description: Column information for the default desired columns, fully populated. Percentage-specified column widths sum to exactly 100.
    content.vb: Function GetDefaultDesiredColumnsFromRestrictions(providerName As String, restrictions As ArchiveRestrictionInfo()) As ArchiveColumnInfo()
  overload: SuperOffice.CRM.Services.IFindAgent.GetDefaultDesiredColumnsFromRestrictions*
  nameWithType.vb: IFindAgent.GetDefaultDesiredColumnsFromRestrictions(String, ArchiveRestrictionInfo())
  fullName.vb: SuperOffice.CRM.Services.IFindAgent.GetDefaultDesiredColumnsFromRestrictions(System.String, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo())
  name.vb: GetDefaultDesiredColumnsFromRestrictions(String, ArchiveRestrictionInfo())
- uid: SuperOffice.CRM.Services.IFindAgent.GetDefaultOrderByFromDesiredColumns(System.String,System.String[])
  commentId: M:SuperOffice.CRM.Services.IFindAgent.GetDefaultOrderByFromDesiredColumns(System.String,System.String[])
  id: GetDefaultOrderByFromDesiredColumns(System.String,System.String[])
  parent: SuperOffice.CRM.Services.IFindAgent
  langs:
  - csharp
  - vb
  name: GetDefaultOrderByFromDesiredColumns(String, String[])
  nameWithType: IFindAgent.GetDefaultOrderByFromDesiredColumns(String, String[])
  fullName: SuperOffice.CRM.Services.IFindAgent.GetDefaultOrderByFromDesiredColumns(System.String, System.String[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCalculate the default orderby columns for a given provider and a set of desired columns. This is the same algorithm that is used by the Find service method.\n"
  syntax:
    content: ArchiveOrderByInfo[] GetDefaultOrderByFromDesiredColumns(string providerName, string[] desiredColumns)
    parameters:
    - id: providerName
      type: System.String
      description: Provider name to calculate default orderby for
    - id: desiredColumns
      type: System.String[]
      description: Desired columns (return fields), used in the orderby calculation. You can generally only order by columns that have been set as &apos;desired&apos;.
    return:
      type: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[]
      description: Orderby information
    content.vb: Function GetDefaultOrderByFromDesiredColumns(providerName As String, desiredColumns As String()) As ArchiveOrderByInfo()
  overload: SuperOffice.CRM.Services.IFindAgent.GetDefaultOrderByFromDesiredColumns*
  nameWithType.vb: IFindAgent.GetDefaultOrderByFromDesiredColumns(String, String())
  fullName.vb: SuperOffice.CRM.Services.IFindAgent.GetDefaultOrderByFromDesiredColumns(System.String, System.String())
  name.vb: GetDefaultOrderByFromDesiredColumns(String, String())
- uid: SuperOffice.CRM.Services.IFindAgent.FindOrderBy(System.String,System.String,System.String,System.Int32,System.Int32,SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[])
  commentId: M:SuperOffice.CRM.Services.IFindAgent.FindOrderBy(System.String,System.String,System.String,System.Int32,System.Int32,SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[])
  id: FindOrderBy(System.String,System.String,System.String,System.Int32,System.Int32,SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[])
  parent: SuperOffice.CRM.Services.IFindAgent
  langs:
  - csharp
  - vb
  name: FindOrderBy(String, String, String, Int32, Int32, ArchiveOrderByInfo[])
  nameWithType: IFindAgent.FindOrderBy(String, String, String, Int32, Int32, ArchiveOrderByInfo[])
  fullName: SuperOffice.CRM.Services.IFindAgent.FindOrderBy(System.String, System.String, System.String, System.Int32, System.Int32, SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nExecute a Find operation and return a page of results. The criteria for the Find are fetched from the restriction storage provider according to the given parameters. The columns of the result are calculated based on the restriction. The orderby parameter is used for sorting the results.&lt;para/>The other variants of the Find method allow you greater control over the individual aspects of the process.\n"
  syntax:
    content: FindResults FindOrderBy(string storageType, string providerName, string storageKey, int pageSize, int pageNumber, ArchiveOrderByInfo[] orderBy)
    parameters:
    - id: storageType
      type: System.String
      description: Restriction storage type specification, either &apos;Criteria&apos; or &apos;Reporter&apos; (or possible extensions)
    - id: providerName
      type: System.String
      description: Name of archive provider that is to execute the search and return the result columns/rows
    - id: storageKey
      type: System.String
      description: Storage key to be interpreted by the restriction storage provider, when it fetches criteria for the search
    - id: pageSize
      type: System.Int32
      description: Size of result set pages
    - id: pageNumber
      type: System.Int32
      description: Result set page to return, 0 is the first page. When a call returns no rows, no further pages are available. Negative page numbers are interpreted as number of rows to skip.
    - id: orderBy
      type: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[]
      description: Array of order by specifications. If it is null or empty, the row order is unspecified, database dependent, and might not be the same from call to call, depending on query execution plans. The unspecified order willgenerally not vary within pages of the same query.
    return:
      type: SuperOffice.CRM.Services.FindResults
      description: Results from search, containing column information and result rows.
    content.vb: Function FindOrderBy(storageType As String, providerName As String, storageKey As String, pageSize As Integer, pageNumber As Integer, orderBy As ArchiveOrderByInfo()) As FindResults
  overload: SuperOffice.CRM.Services.IFindAgent.FindOrderBy*
  nameWithType.vb: IFindAgent.FindOrderBy(String, String, String, Int32, Int32, ArchiveOrderByInfo())
  fullName.vb: SuperOffice.CRM.Services.IFindAgent.FindOrderBy(System.String, System.String, System.String, System.Int32, System.Int32, SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo())
  name.vb: FindOrderBy(String, String, String, Int32, Int32, ArchiveOrderByInfo())
- uid: SuperOffice.CRM.Services.IFindAgent.FindWithExtraRestrictions(System.String,System.String,System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[],System.String[],System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IFindAgent.FindWithExtraRestrictions(System.String,System.String,System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[],System.String[],System.Int32,System.Int32)
  id: FindWithExtraRestrictions(System.String,System.String,System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[],System.String[],System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.IFindAgent
  langs:
  - csharp
  - vb
  name: FindWithExtraRestrictions(String, String, String, ArchiveRestrictionInfo[], ArchiveOrderByInfo[], String[], Int32, Int32)
  nameWithType: IFindAgent.FindWithExtraRestrictions(String, String, String, ArchiveRestrictionInfo[], ArchiveOrderByInfo[], String[], Int32, Int32)
  fullName: SuperOffice.CRM.Services.IFindAgent.FindWithExtraRestrictions(System.String, System.String, System.String, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[], SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[], System.String[], System.Int32, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nExecute a Find operation and return a page of results. The criteria for the Find are fetched from the restriction storage provider according to the given parameters. In addition an extra set of restrictions can be added to the search. These restrictions will not be saved, they are only valid for the current search. Extra restrictions will override restrictions with the same key already stored on the storagekey.\n"
  syntax:
    content: FindResults FindWithExtraRestrictions(string storageType, string providerName, string storageKey, ArchiveRestrictionInfo[] extraRestrictions, ArchiveOrderByInfo[] orderBy, string[] desiredColumns, int pageSize, int pageNumber)
    parameters:
    - id: storageType
      type: System.String
      description: Restriction storage type specification, either &apos;Criteria&apos; or &apos;Reporter&apos; (or possible extensions)
    - id: providerName
      type: System.String
      description: Name of archive provider that is to execute the search and return the result columns/rows
    - id: storageKey
      type: System.String
      description: Storage key to be interpreted by the restriction storage provider, when it fetches criteria for the search
    - id: extraRestrictions
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
      description: Extra restrictions to append to the the search. These will override saved restrictions with the same key.
    - id: orderBy
      type: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[]
      description: Array of order by specifications. If it is null or empty, the row order is unspecified, database dependent, and might not be the same from call to call, depending on query execution plans. The unspecified order willgenerally not vary within pages of the same query.
    - id: desiredColumns
      type: System.String[]
      description: Array of column names desired for the result. Each name must match a column offered by the given archive provider.
    - id: pageSize
      type: System.Int32
      description: Size of result set pages
    - id: pageNumber
      type: System.Int32
      description: Result set page to return, 0 is the first page. When a call returns no rows, no further pages are available. Negative page numbers are interpreted as number of rows to skip.
    return:
      type: SuperOffice.CRM.Services.FindResults
      description: Results from search, containing column information and result rows.
    content.vb: Function FindWithExtraRestrictions(storageType As String, providerName As String, storageKey As String, extraRestrictions As ArchiveRestrictionInfo(), orderBy As ArchiveOrderByInfo(), desiredColumns As String(), pageSize As Integer, pageNumber As Integer) As FindResults
  overload: SuperOffice.CRM.Services.IFindAgent.FindWithExtraRestrictions*
  nameWithType.vb: IFindAgent.FindWithExtraRestrictions(String, String, String, ArchiveRestrictionInfo(), ArchiveOrderByInfo(), String(), Int32, Int32)
  fullName.vb: SuperOffice.CRM.Services.IFindAgent.FindWithExtraRestrictions(System.String, System.String, System.String, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo(), SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo(), System.String(), System.Int32, System.Int32)
  name.vb: FindWithExtraRestrictions(String, String, String, ArchiveRestrictionInfo(), ArchiveOrderByInfo(), String(), Int32, Int32)
- uid: SuperOffice.CRM.Services.IFindAgent.FindWithColumns(System.String,System.String,System.String,System.String[],System.Int32,System.Int32,SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[])
  commentId: M:SuperOffice.CRM.Services.IFindAgent.FindWithColumns(System.String,System.String,System.String,System.String[],System.Int32,System.Int32,SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[])
  id: FindWithColumns(System.String,System.String,System.String,System.String[],System.Int32,System.Int32,SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[])
  parent: SuperOffice.CRM.Services.IFindAgent
  langs:
  - csharp
  - vb
  name: FindWithColumns(String, String, String, String[], Int32, Int32, ArchiveOrderByInfo[])
  nameWithType: IFindAgent.FindWithColumns(String, String, String, String[], Int32, Int32, ArchiveOrderByInfo[])
  fullName: SuperOffice.CRM.Services.IFindAgent.FindWithColumns(System.String, System.String, System.String, System.String[], System.Int32, System.Int32, SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nExecute a Find operation and return a page of results. The criteria for the Find are fetched from the restriction storage provider according to the given parameters.\n"
  syntax:
    content: FindResults FindWithColumns(string storageType, string providerName, string storageKey, string[] desiredColumns, int pageSize, int pageNumber, ArchiveOrderByInfo[] orderBy)
    parameters:
    - id: storageType
      type: System.String
      description: Restriction storage type specification, either &apos;Criteria&apos; or &apos;Reporter&apos; (or possible extensions)
    - id: providerName
      type: System.String
      description: Name of archive provider that is to execute the search and return the result columns/rows
    - id: storageKey
      type: System.String
      description: Storage key to be interpreted by the restriction storage provider, when it fetches criteria for the search
    - id: desiredColumns
      type: System.String[]
      description: Array of column names desired for the result. Each name must match a column offered by the given archive provider.
    - id: pageSize
      type: System.Int32
      description: Size of result set pages
    - id: pageNumber
      type: System.Int32
      description: Result set page to return, 0 is the first page. When a call returns no rows, no further pages are available. Negative page numbers are interpreted as number of rows to skip.
    - id: orderBy
      type: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[]
      description: Array of order by specifications. If it is null or empty, the row order is unspecified, database dependent, and might not be the same from call to call, depending on query execution plans. The unspecified order willgenerally not vary within pages of the same query.
    return:
      type: SuperOffice.CRM.Services.FindResults
      description: Results from search, containing column information and result rows.
    content.vb: Function FindWithColumns(storageType As String, providerName As String, storageKey As String, desiredColumns As String(), pageSize As Integer, pageNumber As Integer, orderBy As ArchiveOrderByInfo()) As FindResults
  overload: SuperOffice.CRM.Services.IFindAgent.FindWithColumns*
  nameWithType.vb: IFindAgent.FindWithColumns(String, String, String, String(), Int32, Int32, ArchiveOrderByInfo())
  fullName.vb: SuperOffice.CRM.Services.IFindAgent.FindWithColumns(System.String, System.String, System.String, System.String(), System.Int32, System.Int32, SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo())
  name.vb: FindWithColumns(String, String, String, String(), Int32, Int32, ArchiveOrderByInfo())
- uid: SuperOffice.CRM.Services.IFindAgent.SaveRestrictions2(System.String,System.String,System.String,System.String)
  commentId: M:SuperOffice.CRM.Services.IFindAgent.SaveRestrictions2(System.String,System.String,System.String,System.String)
  id: SaveRestrictions2(System.String,System.String,System.String,System.String)
  parent: SuperOffice.CRM.Services.IFindAgent
  langs:
  - csharp
  - vb
  name: SaveRestrictions2(String, String, String, String)
  nameWithType: IFindAgent.SaveRestrictions2(String, String, String, String)
  fullName: SuperOffice.CRM.Services.IFindAgent.SaveRestrictions2(System.String, System.String, System.String, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSave an array of restrictions for later use as search criteria (including as dynamic selection and Find). \n"
  syntax:
    content: void SaveRestrictions2(string storageType, string providerName, string storageKey, string restrictions)
    parameters:
    - id: storageType
      type: System.String
      description: Restriction storage type specification, either &apos;Criteria&apos; or &apos;Reporter&apos; (or possible extensions)
    - id: providerName
      type: System.String
      description: Name of archive provider that is the intended consumer of the restrictions
    - id: storageKey
      type: System.String
      description: Storage key to be interpreted by the restriction storage provider, when it saves the restrictions as criteria
    - id: restrictions
      type: System.String
      description: String of restrictions. &quot;name = &apos;SuperOffice&apos;&quot; The ColumnInfo member and the DisplayValues members need NOT be populated; it is enough to provide a name, operator and any values the operator may need. The IsActive is also saved. Values should be encoded using the CultureDataFormatter to ensure compatibility across cultures.
    content.vb: Sub SaveRestrictions2(storageType As String, providerName As String, storageKey As String, restrictions As String)
  overload: SuperOffice.CRM.Services.IFindAgent.SaveRestrictions2*
- uid: SuperOffice.CRM.Services.IFindAgent.SaveRestrictionsWithContext2(System.String,System.String,System.String,System.String,System.String)
  commentId: M:SuperOffice.CRM.Services.IFindAgent.SaveRestrictionsWithContext2(System.String,System.String,System.String,System.String,System.String)
  id: SaveRestrictionsWithContext2(System.String,System.String,System.String,System.String,System.String)
  parent: SuperOffice.CRM.Services.IFindAgent
  langs:
  - csharp
  - vb
  name: SaveRestrictionsWithContext2(String, String, String, String, String)
  nameWithType: IFindAgent.SaveRestrictionsWithContext2(String, String, String, String, String)
  fullName: SuperOffice.CRM.Services.IFindAgent.SaveRestrictionsWithContext2(System.String, System.String, System.String, System.String, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSave an array of restrictions for later use as search criteria (including as dynamic selection and Find). \n"
  syntax:
    content: void SaveRestrictionsWithContext2(string storageType, string providerName, string storageKey, string restrictions, string context)
    parameters:
    - id: storageType
      type: System.String
      description: Restriction storage type specification, either &apos;Criteria&apos; or &apos;Reporter&apos; (or possible extensions)
    - id: providerName
      type: System.String
      description: Name of archive provider that is the intended consumer of the restrictions
    - id: storageKey
      type: System.String
      description: Storage key to be interpreted by the restriction storage provider, when it saves the restrictions as criteria
    - id: restrictions
      type: System.String
      description: String of restrictions. The ColumnInfo member and the DisplayValues members need NOT be populated; it is enough to provide a name, operator and any values the operator may need. The IsActive is also saved. Values should be encoded using the CultureDataFormatter to ensure compatibility across cultures.
    - id: context
      type: System.String
      description: Optional context that can be used by FindProvider
    content.vb: Sub SaveRestrictionsWithContext2(storageType As String, providerName As String, storageKey As String, restrictions As String, context As String)
  overload: SuperOffice.CRM.Services.IFindAgent.SaveRestrictionsWithContext2*
- uid: SuperOffice.CRM.Services.IFindAgent.SaveRestrictionsAndGetCriteriaInformation2(System.String,System.String,System.String,System.String,System.String)
  commentId: M:SuperOffice.CRM.Services.IFindAgent.SaveRestrictionsAndGetCriteriaInformation2(System.String,System.String,System.String,System.String,System.String)
  id: SaveRestrictionsAndGetCriteriaInformation2(System.String,System.String,System.String,System.String,System.String)
  parent: SuperOffice.CRM.Services.IFindAgent
  langs:
  - csharp
  - vb
  name: SaveRestrictionsAndGetCriteriaInformation2(String, String, String, String, String)
  nameWithType: IFindAgent.SaveRestrictionsAndGetCriteriaInformation2(String, String, String, String, String)
  fullName: SuperOffice.CRM.Services.IFindAgent.SaveRestrictionsAndGetCriteriaInformation2(System.String, System.String, System.String, System.String, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSave an array of restrictions for later use as search criteria (including as dynamic selection and Find). Then, return the same result as a call to GetCriteriaInformation would have done. The purpose is to encapsulate saving and updating of a GUI in one round trip.\n"
  syntax:
    content: CriteriaInformation SaveRestrictionsAndGetCriteriaInformation2(string storageType, string providerName, string storageKey, string restrictions, string staticColumns)
    parameters:
    - id: storageType
      type: System.String
      description: Restriction storage type specification, either &apos;Criteria&apos; or &apos;Reporter&apos; (or possible extensions)
    - id: providerName
      type: System.String
      description: Name of archive provider that is the intended consumer of the restrictions
    - id: storageKey
      type: System.String
      description: Storage key to be interpreted by the restriction storage provider, when it saves the restrictions as criteria
    - id: restrictions
      type: System.String
      description: String of restrictions. The ColumnInfo member and the DisplayValues members need NOT be populated; it is enough to provide a name, operator and any values the operator may need. The IsActive is also saved. Values should be encoded using the CultureDataFormatter to ensure compatibility across cultures.
    - id: staticColumns
      type: System.String
      description: Optional string of comma-separated columns that are to be EXCLUDED from the CriteriaArchiveRows part of the result. In the Find dialogs, that corresponds to the &apos;static&apos; fields, to avoid duplicating them in the &apos;Match also&apos; criteria list. This array can be null, indicating that all restrictions should be included in the criteria list.
    return:
      type: SuperOffice.CRM.Services.CriteriaInformation
      description: 'The result contains the restrictions in two forms: fully populated ArchiveRestrictionInfo objects, used to display details and for saving changes; and as a list suitable for an Archive control'
    content.vb: Function SaveRestrictionsAndGetCriteriaInformation2(storageType As String, providerName As String, storageKey As String, restrictions As String, staticColumns As String) As CriteriaInformation
  overload: SuperOffice.CRM.Services.IFindAgent.SaveRestrictionsAndGetCriteriaInformation2*
- uid: SuperOffice.CRM.Services.IFindAgent.FindFromRestrictions2(System.String,System.String,System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IFindAgent.FindFromRestrictions2(System.String,System.String,System.Int32,System.Int32)
  id: FindFromRestrictions2(System.String,System.String,System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.IFindAgent
  langs:
  - csharp
  - vb
  name: FindFromRestrictions2(String, String, Int32, Int32)
  nameWithType: IFindAgent.FindFromRestrictions2(String, String, Int32, Int32)
  fullName: SuperOffice.CRM.Services.IFindAgent.FindFromRestrictions2(System.String, System.String, System.Int32, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nExecute a Find operation and return a page of results. The criteria for the Find are passed in directly, not fetched by a restriction storage provider. The columns of the result are calculated based on the restriction.\n"
  remarks: "\n<p>\n    Archive Restriction strings are OData or SQL-ish.\n    They are parsed and converted into ArchiveRestrictions.\n</p>\nFor example:\n<pre><code>    &quot;name begins &apos;Super&apos;&quot;\n    &quot;category = 3&quot;\n    &quot;category in (2,3,4)&quot;\n    &quot;xstop set&quot;\n    &quot;registered after &apos;2014.3.4&apos;&quot;\n    &quot;registered dateBetween (&apos;2014.11.29&apos;, &apos;2014.12.25&apos;)&quot;</code></pre>\nUnary operators:\n<pre><code>&quot;updatedDate lastWeek&quot;, &quot;assocId currentAssociate&quot;</code></pre>\n<p></p>\n<h2>Brackets and or</h2>\n<p>AND and OR can be used to combine terms. AND has a higher priority than OR</p>\n<pre><code>&quot;business = 2  AND name contains &apos;super&apos;&quot;</code></pre>\n<p>Brackets can be used for grouping.</p>\n<pre><code>&quot;(business = 2 or category = 3) and name contains &apos;super&apos;&quot;</code></pre>\n<p></p>\n<h2>Aggregation operators</h2>\n<p>\n    The column names can encode grouping and summarizing.\n    You add functions and modifiers to the column name to trigger aggregation.\n</p>\nExample: group last names together, and inject a header row for each group.\n<pre><code>    GroupBy(lastName):Header</code></pre>\nExample: count instances of middle names, and hide the individual rows, \nreport just the totals for each group using a footer. Note how the modifiers stack.\n<pre><code>    Count(middleName):HideDetail:Footer</code></pre>\nExample: the aggregator functions can nest, so you can say\n<pre><code>    GroupBy(DatePart(personUpdatedDate):YearMonth):Header</code></pre>\n<h2>Strings</h2>\n<p>\n    Use the <code>begins</code> or <code>contains</code> operators to do string searches.\n    You can also use the normal = operator to do string exact match checks.\n</p>\n<p>\n    Use backslash to escape single quotes in strings\n    (note that backslash needs to be doubled because c# also uses backslash escapes):\n</p>\n<pre><code>&quot;department contains &apos;Bob\\\\&apos;s&apos;&quot;</code></pre>\n<p></p>\n"
  example:
  - "\n<pre><code>&quot;name = &apos;SuperOffice AS&apos;&quot;\n&quot;name startsWith &apos;SuperOffice&apos;&quot;\n&quot;startsWith(name, &apos;SuperOffice&apos;)&quot;\n&quot;updatedDate after &apos;2000.12.30&apos;&quot;\n&quot;category = 10&quot;\n&quot;category in (10, 12, 53)&quot;\n&quot;category in (2,3,4) and name startswith &apos;super&apos;&quot;\n&quot;category in (2,3,4) or name startswith &apos;super&apos;&quot;\n&quot;(category = 2 or business = 3) and name contains &apos;super&apos;&quot;\n<p></p>\nvar agent = new FindAgent();\n<p></p>\nvar res1 = agent.FindFromRestrictions2(&quot;updatedBy = 2&quot;, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res1.ArchiveRows)\n    (int)row.ColumnData[&quot;updatedBy&quot;].RawValue == 2\n<p></p>\nvar res2 = agent.FindFromRestrictions2(&quot;updatedBy unequals 6 and updatedDate after &apos;2000.1.2&apos;&quot;, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res2.ArchiveRows)\n    (int)row.ColumnData[&quot;updatedBy&quot;].RawValue != 6 &amp;&amp; \n    row.ColumnData[&quot;updatedDate&quot;].GetDateTimeValue() > new DateTime(2000, 1, 2);\n<p></p>\nvar res3 = agent.FindFromRestrictions2(&quot;category in (2,3)&quot;, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res3.ArchiveRows)\n    (int)row.ColumnData[&quot;category&quot;].RawValue == 2 || (int)row.ColumnData[&quot;category&quot;].RawValue == 3;\n<p></p>\nvar res4 = agent.FindFromRestrictions2(&quot;sale/date after &apos;2000.1.2&apos;&quot;, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res4.ArchiveRows)\n    (row.ColumnData[&quot;sale/date&quot;].GetDateTimeValue().Year >= 2000 \n<p></p>\nvar res5 = _agent.FindFromRestrictionsColumns2(&quot;(category =2 or business = 3) and name contains &apos;e&apos;&quot;, \n         _provider, &quot;category,business,name&quot;, 100, 0);\nforeach (var row in res5.ArchiveRows)\n    ((int)x.ColumnData[&quot;category&quot;].RawValue == 2 || \n     (int)x.ColumnData[&quot;business&quot;].RawValue == 3) &amp;&amp; \n     (x.ColumnData[&quot;name&quot;].RawValue as string).Contains(&quot;e&quot;) );\n<p></p>\n<p></p></code></pre>\n"
  syntax:
    content: FindResults FindFromRestrictions2(string restrictions, string providerName, int pageSize, int pageNumber)
    parameters:
    - id: restrictions
      type: System.String
      description: String of restrictions specifying the search. e.g. &quot;name=&apos;SuperOffice&apos;&quot; Each restriction must match a column of the  given archive provider, and that column must have its CanRestrictBy property set to true.
    - id: providerName
      type: System.String
      description: Name of archive provider that is to execute the search and return the result columns/rows
    - id: pageSize
      type: System.Int32
      description: Size of result set pages
    - id: pageNumber
      type: System.Int32
      description: Result set page to return, 0 is the first page. When a call returns no rows, no further pages are available. Negative page numbers are interpreted as number of rows to skip.
    return:
      type: SuperOffice.CRM.Services.FindResults
      description: Results from search, containing column information and result rows.
    content.vb: Function FindFromRestrictions2(restrictions As String, providerName As String, pageSize As Integer, pageNumber As Integer) As FindResults
  overload: SuperOffice.CRM.Services.IFindAgent.FindFromRestrictions2*
- uid: SuperOffice.CRM.Services.IFindAgent.FindFromRestrictionsColumns2(System.String,System.String,System.String,System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IFindAgent.FindFromRestrictionsColumns2(System.String,System.String,System.String,System.Int32,System.Int32)
  id: FindFromRestrictionsColumns2(System.String,System.String,System.String,System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.IFindAgent
  langs:
  - csharp
  - vb
  name: FindFromRestrictionsColumns2(String, String, String, Int32, Int32)
  nameWithType: IFindAgent.FindFromRestrictionsColumns2(String, String, String, Int32, Int32)
  fullName: SuperOffice.CRM.Services.IFindAgent.FindFromRestrictionsColumns2(System.String, System.String, System.String, System.Int32, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nExecute a Find operation and return a page of results. &lt;para/>The criteria for the Find are passed in directly, not fetched by a restriction storage provider. &lt;para/>The desired columns of the result set are also passed in directly.&lt;para/>The orderby information is calculated by the system.&lt;para/>Use the GetCriteriaInformation and GetDefaultDesiredColumns service methods to let the system calculate these values, if you want to use or modify them.\n"
  remarks: "\n<p>\n    Archive Restriction strings are OData or SQL-ish.\n    They are parsed and converted into ArchiveRestrictions.\n</p>\nFor example:\n<pre><code>    &quot;name begins &apos;Super&apos;&quot;\n    &quot;category = 3&quot;\n    &quot;category in (2,3,4)&quot;\n    &quot;xstop set&quot;\n    &quot;registered after &apos;2014.3.4&apos;&quot;\n    &quot;registered dateBetween (&apos;2014.11.29&apos;, &apos;2014.12.25&apos;)&quot;</code></pre>\nUnary operators:\n<pre><code>&quot;updatedDate lastWeek&quot;, &quot;assocId currentAssociate&quot;</code></pre>\n<p></p>\n<h2>Brackets and or</h2>\n<p>AND and OR can be used to combine terms. AND has a higher priority than OR</p>\n<pre><code>&quot;business = 2  AND name contains &apos;super&apos;&quot;</code></pre>\n<p>Brackets can be used for grouping.</p>\n<pre><code>&quot;(business = 2 or category = 3) and name contains &apos;super&apos;&quot;</code></pre>\n<p></p>\n<h2>Aggregation operators</h2>\n<p>\n    The column names can encode grouping and summarizing.\n    You add functions and modifiers to the column name to trigger aggregation.\n</p>\nExample: group last names together, and inject a header row for each group.\n<pre><code>    GroupBy(lastName):Header</code></pre>\nExample: count instances of middle names, and hide the individual rows, \nreport just the totals for each group using a footer. Note how the modifiers stack.\n<pre><code>    Count(middleName):HideDetail:Footer</code></pre>\nExample: the aggregator functions can nest, so you can say\n<pre><code>    GroupBy(DatePart(personUpdatedDate):YearMonth):Header</code></pre>\n<h2>Strings</h2>\n<p>\n    Use the <code>begins</code> or <code>contains</code> operators to do string searches.\n    You can also use the normal = operator to do string exact match checks.\n</p>\n<p>\n    Use backslash to escape single quotes in strings\n    (note that backslash needs to be doubled because c# also uses backslash escapes):\n</p>\n<pre><code>&quot;department contains &apos;Bob\\\\&apos;s&apos;&quot;</code></pre>\n<p></p>\n"
  example:
  - "\n<pre><code>&quot;name = &apos;SuperOffice AS&apos;&quot;\n&quot;name startsWith &apos;SuperOffice&apos;&quot;\n&quot;startsWith(name, &apos;SuperOffice&apos;)&quot;\n&quot;updatedDate after &apos;2000.12.30&apos;&quot;\n&quot;category = 10&quot;\n&quot;category in (10, 12, 53)&quot;\n&quot;category in (2,3,4) and name startswith &apos;super&apos;&quot;\n&quot;category in (2,3,4) or name startswith &apos;super&apos;&quot;\n&quot;(category = 2 or business = 3) and name contains &apos;super&apos;&quot;\n<p></p>\nvar agent = new FindAgent();\n<p></p>\nvar res1 = agent.FindFromRestrictions2(&quot;updatedBy = 2&quot;, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res1.ArchiveRows)\n    (int)row.ColumnData[&quot;updatedBy&quot;].RawValue == 2\n<p></p>\nvar res2 = agent.FindFromRestrictions2(&quot;updatedBy unequals 6 and updatedDate after &apos;2000.1.2&apos;&quot;, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res2.ArchiveRows)\n    (int)row.ColumnData[&quot;updatedBy&quot;].RawValue != 6 &amp;&amp; \n    row.ColumnData[&quot;updatedDate&quot;].GetDateTimeValue() > new DateTime(2000, 1, 2);\n<p></p>\nvar res3 = agent.FindFromRestrictions2(&quot;category in (2,3)&quot;, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res3.ArchiveRows)\n    (int)row.ColumnData[&quot;category&quot;].RawValue == 2 || (int)row.ColumnData[&quot;category&quot;].RawValue == 3;\n<p></p>\nvar res4 = agent.FindFromRestrictions2(&quot;sale/date after &apos;2000.1.2&apos;&quot;, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res4.ArchiveRows)\n    (row.ColumnData[&quot;sale/date&quot;].GetDateTimeValue().Year >= 2000 \n<p></p>\nvar res5 = _agent.FindFromRestrictionsColumns2(&quot;(category =2 or business = 3) and name contains &apos;e&apos;&quot;, \n         _provider, &quot;category,business,name&quot;, 100, 0);\nforeach (var row in res5.ArchiveRows)\n    ((int)x.ColumnData[&quot;category&quot;].RawValue == 2 || \n     (int)x.ColumnData[&quot;business&quot;].RawValue == 3) &amp;&amp; \n     (x.ColumnData[&quot;name&quot;].RawValue as string).Contains(&quot;e&quot;) );\n<p></p>\n<p></p></code></pre>\n"
  syntax:
    content: FindResults FindFromRestrictionsColumns2(string restrictions, string providerName, string desiredColumns, int pageSize, int pageNumber)
    parameters:
    - id: restrictions
      type: System.String
      description: String of restrictions specifying the search. e.g.:&quot;name begins &apos;Super&apos;&quot;. Each restriction must match a column of the  given archive provider, and that column must have its CanRestrictBy property set to true.
    - id: providerName
      type: System.String
      description: Name of archive provider that is to execute the search and return the result columns/rows
    - id: desiredColumns
      type: System.String
      description: Array of column names desired for the result. Each name must match a column offered by the given archive provider.
    - id: pageSize
      type: System.Int32
      description: Size of result set pages
    - id: pageNumber
      type: System.Int32
      description: Result set page to return, 0 is the first page. When a call returns no rows, no further pages are available. Negative page numbers are interpreted as number of rows to skip.
    return:
      type: SuperOffice.CRM.Services.FindResults
      description: Results from search, containing column information and result rows.
    content.vb: Function FindFromRestrictionsColumns2(restrictions As String, providerName As String, desiredColumns As String, pageSize As Integer, pageNumber As Integer) As FindResults
  overload: SuperOffice.CRM.Services.IFindAgent.FindFromRestrictionsColumns2*
- uid: SuperOffice.CRM.Services.IFindAgent.FindFromRestrictionsColumnsOrderBy2(System.String,System.String,System.String,System.String,System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IFindAgent.FindFromRestrictionsColumnsOrderBy2(System.String,System.String,System.String,System.String,System.Int32,System.Int32)
  id: FindFromRestrictionsColumnsOrderBy2(System.String,System.String,System.String,System.String,System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.IFindAgent
  langs:
  - csharp
  - vb
  name: FindFromRestrictionsColumnsOrderBy2(String, String, String, String, Int32, Int32)
  nameWithType: IFindAgent.FindFromRestrictionsColumnsOrderBy2(String, String, String, String, Int32, Int32)
  fullName: SuperOffice.CRM.Services.IFindAgent.FindFromRestrictionsColumnsOrderBy2(System.String, System.String, System.String, System.String, System.Int32, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nExecute a Find operation and return a page of results. &lt;para/>The criteria for the Find are passed in directly, not fetched by a restriction storage provider. &lt;para/>The desired columns of the result set are also passed in directly.&lt;para/>The orderby information is also passed in directly.&lt;para/>Use the GetCriteriaInformation, GetDefaultDesiredColumns and GetDefaultOrderBy service methods to let the system calculate these values, if you want to use or modify them.\n"
  remarks: "\n<p>\n    Archive Restriction strings are OData or SQL-ish.\n    They are parsed and converted into ArchiveRestrictions.\n</p>\nFor example:\n<pre><code>    &quot;name begins &apos;Super&apos;&quot;\n    &quot;category = 3&quot;\n    &quot;category in (2,3,4)&quot;\n    &quot;xstop set&quot;\n    &quot;registered after &apos;2014.3.4&apos;&quot;\n    &quot;registered dateBetween (&apos;2014.11.29&apos;, &apos;2014.12.25&apos;)&quot;</code></pre>\nUnary operators:\n<pre><code>&quot;updatedDate lastWeek&quot;, &quot;assocId currentAssociate&quot;</code></pre>\n<p></p>\n<h2>Brackets and or</h2>\n<p>AND and OR can be used to combine terms. AND has a higher priority than OR</p>\n<pre><code>&quot;business = 2  AND name contains &apos;super&apos;&quot;</code></pre>\n<p>Brackets can be used for grouping.</p>\n<pre><code>&quot;(business = 2 or category = 3) and name contains &apos;super&apos;&quot;</code></pre>\n<p></p>\n<h2>Aggregation operators</h2>\n<p>\n    The column names can encode grouping and summarizing.\n    You add functions and modifiers to the column name to trigger aggregation.\n</p>\nExample: group last names together, and inject a header row for each group.\n<pre><code>    GroupBy(lastName):Header</code></pre>\nExample: count instances of middle names, and hide the individual rows, \nreport just the totals for each group using a footer. Note how the modifiers stack.\n<pre><code>    Count(middleName):HideDetail:Footer</code></pre>\nExample: the aggregator functions can nest, so you can say\n<pre><code>    GroupBy(DatePart(personUpdatedDate):YearMonth):Header</code></pre>\n<h2>Strings</h2>\n<p>\n    Use the <code>begins</code> or <code>contains</code> operators to do string searches.\n    You can also use the normal = operator to do string exact match checks.\n</p>\n<p>\n    Use backslash to escape single quotes in strings\n    (note that backslash needs to be doubled because c# also uses backslash escapes):\n</p>\n<pre><code>&quot;department contains &apos;Bob\\\\&apos;s&apos;&quot;</code></pre>\n<p></p>\n"
  example:
  - "\n<pre><code>&quot;name = &apos;SuperOffice AS&apos;&quot;\n&quot;name startsWith &apos;SuperOffice&apos;&quot;\n&quot;startsWith(name, &apos;SuperOffice&apos;)&quot;\n&quot;updatedDate after &apos;2000.12.30&apos;&quot;\n&quot;category = 10&quot;\n&quot;category in (10, 12, 53)&quot;\n&quot;category in (2,3,4) and name startswith &apos;super&apos;&quot;\n&quot;category in (2,3,4) or name startswith &apos;super&apos;&quot;\n&quot;(category = 2 or business = 3) and name contains &apos;super&apos;&quot;\n<p></p>\nvar agent = new FindAgent();\n<p></p>\nvar res1 = agent.FindFromRestrictions2(&quot;updatedBy = 2&quot;, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res1.ArchiveRows)\n    (int)row.ColumnData[&quot;updatedBy&quot;].RawValue == 2\n<p></p>\nvar res2 = agent.FindFromRestrictions2(&quot;updatedBy unequals 6 and updatedDate after &apos;2000.1.2&apos;&quot;, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res2.ArchiveRows)\n    (int)row.ColumnData[&quot;updatedBy&quot;].RawValue != 6 &amp;&amp; \n    row.ColumnData[&quot;updatedDate&quot;].GetDateTimeValue() > new DateTime(2000, 1, 2);\n<p></p>\nvar res3 = agent.FindFromRestrictions2(&quot;category in (2,3)&quot;, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res3.ArchiveRows)\n    (int)row.ColumnData[&quot;category&quot;].RawValue == 2 || (int)row.ColumnData[&quot;category&quot;].RawValue == 3;\n<p></p>\nvar res4 = agent.FindFromRestrictions2(&quot;sale/date after &apos;2000.1.2&apos;&quot;, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res4.ArchiveRows)\n    (row.ColumnData[&quot;sale/date&quot;].GetDateTimeValue().Year >= 2000 \n<p></p>\nvar res5 = _agent.FindFromRestrictionsColumns2(&quot;(category =2 or business = 3) and name contains &apos;e&apos;&quot;, \n         _provider, &quot;category,business,name&quot;, 100, 0);\nforeach (var row in res5.ArchiveRows)\n    ((int)x.ColumnData[&quot;category&quot;].RawValue == 2 || \n     (int)x.ColumnData[&quot;business&quot;].RawValue == 3) &amp;&amp; \n     (x.ColumnData[&quot;name&quot;].RawValue as string).Contains(&quot;e&quot;) );\n<p></p>\n<p></p></code></pre>\n"
  syntax:
    content: FindResults FindFromRestrictionsColumnsOrderBy2(string restrictions, string providerName, string desiredColumns, string orderBy, int pageSize, int pageNumber)
    parameters:
    - id: restrictions
      type: System.String
      description: String of restrictions specifying the search. Each restriction must match a column of the  given archive provider, and that column must have its CanRestrictBy property set to true.
    - id: providerName
      type: System.String
      description: Name of archive provider that is to execute the search and return the result columns/rows
    - id: desiredColumns
      type: System.String
      description: Comma separated list of column names desired for the result. Each name must match a column offered by the given archive provider.
    - id: orderBy
      type: System.String
      description: String of order by specifications. If it is null or empty, the row order is unspecified, database dependent, and might not be the same from call to call, depending on query execution plans. The unspecified order willgenerally not vary within pages of the same query.
    - id: pageSize
      type: System.Int32
      description: Size of result set pages
    - id: pageNumber
      type: System.Int32
      description: Result set page to return, 0 is the first page. When a call returns no rows, no further pages are available. Negative page numbers are interpreted as number of rows to skip.
    return:
      type: SuperOffice.CRM.Services.FindResults
      description: Results from search, containing column information and result rows.
    content.vb: Function FindFromRestrictionsColumnsOrderBy2(restrictions As String, providerName As String, desiredColumns As String, orderBy As String, pageSize As Integer, pageNumber As Integer) As FindResults
  overload: SuperOffice.CRM.Services.IFindAgent.FindFromRestrictionsColumnsOrderBy2*
- uid: SuperOffice.CRM.Services.IFindAgent.GetDefaultDesiredColumnsFromRestrictions2(System.String,System.String)
  commentId: M:SuperOffice.CRM.Services.IFindAgent.GetDefaultDesiredColumnsFromRestrictions2(System.String,System.String)
  id: GetDefaultDesiredColumnsFromRestrictions2(System.String,System.String)
  parent: SuperOffice.CRM.Services.IFindAgent
  langs:
  - csharp
  - vb
  name: GetDefaultDesiredColumnsFromRestrictions2(String, String)
  nameWithType: IFindAgent.GetDefaultDesiredColumnsFromRestrictions2(String, String)
  fullName: SuperOffice.CRM.Services.IFindAgent.GetDefaultDesiredColumnsFromRestrictions2(System.String, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCalculate the default desired columns, i.e., the result columns for a given search. The search is defined by a provider name and a set of restrictions. This is the algorithm that is used by the Find service method.\n"
  remarks: "\n<p>\n    Archive Restriction strings are OData or SQL-ish.\n    They are parsed and converted into ArchiveRestrictions.\n</p>\nFor example:\n<pre><code>    &quot;name begins &apos;Super&apos;&quot;\n    &quot;category = 3&quot;\n    &quot;category in (2,3,4)&quot;\n    &quot;xstop set&quot;\n    &quot;registered after &apos;2014.3.4&apos;&quot;\n    &quot;registered dateBetween (&apos;2014.11.29&apos;, &apos;2014.12.25&apos;)&quot;</code></pre>\nUnary operators:\n<pre><code>&quot;updatedDate lastWeek&quot;, &quot;assocId currentAssociate&quot;</code></pre>\n<p></p>\n<h2>Brackets and or</h2>\n<p>AND and OR can be used to combine terms. AND has a higher priority than OR</p>\n<pre><code>&quot;business = 2  AND name contains &apos;super&apos;&quot;</code></pre>\n<p>Brackets can be used for grouping.</p>\n<pre><code>&quot;(business = 2 or category = 3) and name contains &apos;super&apos;&quot;</code></pre>\n<p></p>\n<h2>Aggregation operators</h2>\n<p>\n    The column names can encode grouping and summarizing.\n    You add functions and modifiers to the column name to trigger aggregation.\n</p>\nExample: group last names together, and inject a header row for each group.\n<pre><code>    GroupBy(lastName):Header</code></pre>\nExample: count instances of middle names, and hide the individual rows, \nreport just the totals for each group using a footer. Note how the modifiers stack.\n<pre><code>    Count(middleName):HideDetail:Footer</code></pre>\nExample: the aggregator functions can nest, so you can say\n<pre><code>    GroupBy(DatePart(personUpdatedDate):YearMonth):Header</code></pre>\n<h2>Strings</h2>\n<p>\n    Use the <code>begins</code> or <code>contains</code> operators to do string searches.\n    You can also use the normal = operator to do string exact match checks.\n</p>\n<p>\n    Use backslash to escape single quotes in strings\n    (note that backslash needs to be doubled because c# also uses backslash escapes):\n</p>\n<pre><code>&quot;department contains &apos;Bob\\\\&apos;s&apos;&quot;</code></pre>\n<p></p>\n"
  example:
  - "\n<pre><code>&quot;name = &apos;SuperOffice AS&apos;&quot;\n&quot;name startsWith &apos;SuperOffice&apos;&quot;\n&quot;startsWith(name, &apos;SuperOffice&apos;)&quot;\n&quot;updatedDate after &apos;2000.12.30&apos;&quot;\n&quot;category = 10&quot;\n&quot;category in (10, 12, 53)&quot;\n&quot;category in (2,3,4) and name startswith &apos;super&apos;&quot;\n&quot;category in (2,3,4) or name startswith &apos;super&apos;&quot;\n&quot;(category = 2 or business = 3) and name contains &apos;super&apos;&quot;\n<p></p>\nvar agent = new FindAgent();\n<p></p>\nvar res1 = agent.FindFromRestrictions2(&quot;updatedBy = 2&quot;, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res1.ArchiveRows)\n    (int)row.ColumnData[&quot;updatedBy&quot;].RawValue == 2\n<p></p>\nvar res2 = agent.FindFromRestrictions2(&quot;updatedBy unequals 6 and updatedDate after &apos;2000.1.2&apos;&quot;, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res2.ArchiveRows)\n    (int)row.ColumnData[&quot;updatedBy&quot;].RawValue != 6 &amp;&amp; \n    row.ColumnData[&quot;updatedDate&quot;].GetDateTimeValue() > new DateTime(2000, 1, 2);\n<p></p>\nvar res3 = agent.FindFromRestrictions2(&quot;category in (2,3)&quot;, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res3.ArchiveRows)\n    (int)row.ColumnData[&quot;category&quot;].RawValue == 2 || (int)row.ColumnData[&quot;category&quot;].RawValue == 3;\n<p></p>\nvar res4 = agent.FindFromRestrictions2(&quot;sale/date after &apos;2000.1.2&apos;&quot;, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res4.ArchiveRows)\n    (row.ColumnData[&quot;sale/date&quot;].GetDateTimeValue().Year >= 2000 \n<p></p>\nvar res5 = _agent.FindFromRestrictionsColumns2(&quot;(category =2 or business = 3) and name contains &apos;e&apos;&quot;, \n         _provider, &quot;category,business,name&quot;, 100, 0);\nforeach (var row in res5.ArchiveRows)\n    ((int)x.ColumnData[&quot;category&quot;].RawValue == 2 || \n     (int)x.ColumnData[&quot;business&quot;].RawValue == 3) &amp;&amp; \n     (x.ColumnData[&quot;name&quot;].RawValue as string).Contains(&quot;e&quot;) );\n<p></p>\n<p></p></code></pre>\n"
  syntax:
    content: ArchiveColumnInfo[] GetDefaultDesiredColumnsFromRestrictions2(string providerName, string restrictions)
    parameters:
    - id: providerName
      type: System.String
      description: Name of the provider to calculate default desired columns for
    - id: restrictions
      type: System.String
      description: Restriction to use in the calculation of default desired columns
    return:
      type: SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo[]
      description: Column information for the default desired columns, fully populated. Percentage-specified column widths sum to exactly 100.
    content.vb: Function GetDefaultDesiredColumnsFromRestrictions2(providerName As String, restrictions As String) As ArchiveColumnInfo()
  overload: SuperOffice.CRM.Services.IFindAgent.GetDefaultDesiredColumnsFromRestrictions2*
- uid: SuperOffice.CRM.Services.IFindAgent.FindOrderBy2(System.String,System.String,System.String,System.Int32,System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.IFindAgent.FindOrderBy2(System.String,System.String,System.String,System.Int32,System.Int32,System.String)
  id: FindOrderBy2(System.String,System.String,System.String,System.Int32,System.Int32,System.String)
  parent: SuperOffice.CRM.Services.IFindAgent
  langs:
  - csharp
  - vb
  name: FindOrderBy2(String, String, String, Int32, Int32, String)
  nameWithType: IFindAgent.FindOrderBy2(String, String, String, Int32, Int32, String)
  fullName: SuperOffice.CRM.Services.IFindAgent.FindOrderBy2(System.String, System.String, System.String, System.Int32, System.Int32, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nExecute a Find operation and return a page of results. The criteria for the Find are fetched from the restriction storage provider according to the given parameters. The columns of the result are calculated based on the restriction. The orderby parameter is used for sorting the results.&lt;para/>The other variants of the Find method allow you greater control over the individual aspects of the process.\n"
  syntax:
    content: FindResults FindOrderBy2(string storageType, string providerName, string storageKey, int pageSize, int pageNumber, string orderBy)
    parameters:
    - id: storageType
      type: System.String
      description: Restriction storage type specification, either &apos;Criteria&apos; or &apos;Reporter&apos; (or possible extensions)
    - id: providerName
      type: System.String
      description: Name of archive provider that is to execute the search and return the result columns/rows
    - id: storageKey
      type: System.String
      description: Storage key to be interpreted by the restriction storage provider, when it fetches criteria for the search
    - id: pageSize
      type: System.Int32
      description: Size of result set pages
    - id: pageNumber
      type: System.Int32
      description: Result set page to return, 0 is the first page. When a call returns no rows, no further pages are available. Negative page numbers are interpreted as number of rows to skip.
    - id: orderBy
      type: System.String
      description: Comma separated list of order by specifications. &quot;name asc, dept desc&quot; If it is null or empty, the row order is unspecified, database dependent, and might not be the same from call to call, depending on query execution plans. The unspecified order willgenerally not vary within pages of the same query.
    return:
      type: SuperOffice.CRM.Services.FindResults
      description: Results from search, containing column information and result rows.
    content.vb: Function FindOrderBy2(storageType As String, providerName As String, storageKey As String, pageSize As Integer, pageNumber As Integer, orderBy As String) As FindResults
  overload: SuperOffice.CRM.Services.IFindAgent.FindOrderBy2*
- uid: SuperOffice.CRM.Services.IFindAgent.FindWithExtraRestrictions2(System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IFindAgent.FindWithExtraRestrictions2(System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32)
  id: FindWithExtraRestrictions2(System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.IFindAgent
  langs:
  - csharp
  - vb
  name: FindWithExtraRestrictions2(String, String, String, String, String, String, Int32, Int32)
  nameWithType: IFindAgent.FindWithExtraRestrictions2(String, String, String, String, String, String, Int32, Int32)
  fullName: SuperOffice.CRM.Services.IFindAgent.FindWithExtraRestrictions2(System.String, System.String, System.String, System.String, System.String, System.String, System.Int32, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nExecute a Find operation and return a page of results. The criteria for the Find are fetched from the restriction storage provider according to the given parameters. In addition an extra set of restrictions can be added to the search. These restrictions will not be saved, they are only valid for the current search. Extra restrictions will override restrictions with the same key already stored on the storagekey.\n"
  remarks: "\n<p>\n    Archive Restriction strings are OData or SQL-ish.\n    They are parsed and converted into ArchiveRestrictions.\n</p>\nFor example:\n<pre><code>    &quot;name begins &apos;Super&apos;&quot;\n    &quot;category = 3&quot;\n    &quot;category in (2,3,4)&quot;\n    &quot;xstop set&quot;\n    &quot;registered after &apos;2014.3.4&apos;&quot;\n    &quot;registered dateBetween (&apos;2014.11.29&apos;, &apos;2014.12.25&apos;)&quot;</code></pre>\nUnary operators:\n<pre><code>&quot;updatedDate lastWeek&quot;, &quot;assocId currentAssociate&quot;</code></pre>\n<p></p>\n<h2>Brackets and or</h2>\n<p>AND and OR can be used to combine terms. AND has a higher priority than OR</p>\n<pre><code>&quot;business = 2  AND name contains &apos;super&apos;&quot;</code></pre>\n<p>Brackets can be used for grouping.</p>\n<pre><code>&quot;(business = 2 or category = 3) and name contains &apos;super&apos;&quot;</code></pre>\n<p></p>\n<h2>Aggregation operators</h2>\n<p>\n    The column names can encode grouping and summarizing.\n    You add functions and modifiers to the column name to trigger aggregation.\n</p>\nExample: group last names together, and inject a header row for each group.\n<pre><code>    GroupBy(lastName):Header</code></pre>\nExample: count instances of middle names, and hide the individual rows, \nreport just the totals for each group using a footer. Note how the modifiers stack.\n<pre><code>    Count(middleName):HideDetail:Footer</code></pre>\nExample: the aggregator functions can nest, so you can say\n<pre><code>    GroupBy(DatePart(personUpdatedDate):YearMonth):Header</code></pre>\n<h2>Strings</h2>\n<p>\n    Use the <code>begins</code> or <code>contains</code> operators to do string searches.\n    You can also use the normal = operator to do string exact match checks.\n</p>\n<p>\n    Use backslash to escape single quotes in strings\n    (note that backslash needs to be doubled because c# also uses backslash escapes):\n</p>\n<pre><code>&quot;department contains &apos;Bob\\\\&apos;s&apos;&quot;</code></pre>\n<p></p>\n"
  example:
  - "\n<pre><code>&quot;name = &apos;SuperOffice AS&apos;&quot;\n&quot;name startsWith &apos;SuperOffice&apos;&quot;\n&quot;startsWith(name, &apos;SuperOffice&apos;)&quot;\n&quot;updatedDate after &apos;2000.12.30&apos;&quot;\n&quot;category = 10&quot;\n&quot;category in (10, 12, 53)&quot;\n&quot;category in (2,3,4) and name startswith &apos;super&apos;&quot;\n&quot;category in (2,3,4) or name startswith &apos;super&apos;&quot;\n&quot;(category = 2 or business = 3) and name contains &apos;super&apos;&quot;\n<p></p>\nvar agent = new FindAgent();\n<p></p>\nvar res1 = agent.FindFromRestrictions2(&quot;updatedBy = 2&quot;, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res1.ArchiveRows)\n    (int)row.ColumnData[&quot;updatedBy&quot;].RawValue == 2\n<p></p>\nvar res2 = agent.FindFromRestrictions2(&quot;updatedBy unequals 6 and updatedDate after &apos;2000.1.2&apos;&quot;, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res2.ArchiveRows)\n    (int)row.ColumnData[&quot;updatedBy&quot;].RawValue != 6 &amp;&amp; \n    row.ColumnData[&quot;updatedDate&quot;].GetDateTimeValue() > new DateTime(2000, 1, 2);\n<p></p>\nvar res3 = agent.FindFromRestrictions2(&quot;category in (2,3)&quot;, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res3.ArchiveRows)\n    (int)row.ColumnData[&quot;category&quot;].RawValue == 2 || (int)row.ColumnData[&quot;category&quot;].RawValue == 3;\n<p></p>\nvar res4 = agent.FindFromRestrictions2(&quot;sale/date after &apos;2000.1.2&apos;&quot;, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res4.ArchiveRows)\n    (row.ColumnData[&quot;sale/date&quot;].GetDateTimeValue().Year >= 2000 \n<p></p>\nvar res5 = _agent.FindFromRestrictionsColumns2(&quot;(category =2 or business = 3) and name contains &apos;e&apos;&quot;, \n         _provider, &quot;category,business,name&quot;, 100, 0);\nforeach (var row in res5.ArchiveRows)\n    ((int)x.ColumnData[&quot;category&quot;].RawValue == 2 || \n     (int)x.ColumnData[&quot;business&quot;].RawValue == 3) &amp;&amp; \n     (x.ColumnData[&quot;name&quot;].RawValue as string).Contains(&quot;e&quot;) );\n<p></p>\n<p></p></code></pre>\n"
  syntax:
    content: FindResults FindWithExtraRestrictions2(string storageType, string providerName, string storageKey, string extraRestrictions, string orderBy, string desiredColumns, int pageSize, int pageNumber)
    parameters:
    - id: storageType
      type: System.String
      description: Restriction storage type specification, either &apos;Criteria&apos; or &apos;Reporter&apos; (or possible extensions)
    - id: providerName
      type: System.String
      description: Name of archive provider that is to execute the search and return the result columns/rows
    - id: storageKey
      type: System.String
      description: Storage key to be interpreted by the restriction storage provider, when it fetches criteria for the search
    - id: extraRestrictions
      type: System.String
      description: Extra restrictions to append to the the search. These will override saved restrictions with the same key.
    - id: orderBy
      type: System.String
      description: Comma separated list of order by specifications. If it is null or empty, the row order is unspecified, database dependent, and might not be the same from call to call, depending on query execution plans. The unspecified order willgenerally not vary within pages of the same query.
    - id: desiredColumns
      type: System.String
      description: Comma separated list of column names desired for the result. Each name must match a column offered by the given archive provider.
    - id: pageSize
      type: System.Int32
      description: Size of result set pages
    - id: pageNumber
      type: System.Int32
      description: Result set page to return, 0 is the first page. When a call returns no rows, no further pages are available. Negative page numbers are interpreted as number of rows to skip.
    return:
      type: SuperOffice.CRM.Services.FindResults
      description: Results from search, containing column information and result rows.
    content.vb: Function FindWithExtraRestrictions2(storageType As String, providerName As String, storageKey As String, extraRestrictions As String, orderBy As String, desiredColumns As String, pageSize As Integer, pageNumber As Integer) As FindResults
  overload: SuperOffice.CRM.Services.IFindAgent.FindWithExtraRestrictions2*
references:
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
- uid: SuperOffice.CRM.Services.IFindAgent.GetCriteriaInformation*
  commentId: Overload:SuperOffice.CRM.Services.IFindAgent.GetCriteriaInformation
  isExternal: true
  name: GetCriteriaInformation
  nameWithType: IFindAgent.GetCriteriaInformation
  fullName: SuperOffice.CRM.Services.IFindAgent.GetCriteriaInformation
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.CriteriaInformation
  commentId: T:SuperOffice.CRM.Services.CriteriaInformation
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: CriteriaInformation
  nameWithType: CriteriaInformation
  fullName: SuperOffice.CRM.Services.CriteriaInformation
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Services.IFindAgent.GetCriteriaInformationWithContext*
  commentId: Overload:SuperOffice.CRM.Services.IFindAgent.GetCriteriaInformationWithContext
  isExternal: true
  name: GetCriteriaInformationWithContext
  nameWithType: IFindAgent.GetCriteriaInformationWithContext
  fullName: SuperOffice.CRM.Services.IFindAgent.GetCriteriaInformationWithContext
- uid: SuperOffice.CRM.Services.IFindAgent.SaveRestrictions*
  commentId: Overload:SuperOffice.CRM.Services.IFindAgent.SaveRestrictions
  isExternal: true
  name: SaveRestrictions
  nameWithType: IFindAgent.SaveRestrictions
  fullName: SuperOffice.CRM.Services.IFindAgent.SaveRestrictions
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
  isExternal: true
  name: ArchiveRestrictionInfo[]
  nameWithType: ArchiveRestrictionInfo[]
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
  nameWithType.vb: ArchiveRestrictionInfo()
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo()
  name.vb: ArchiveRestrictionInfo()
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.IFindAgent.SaveRestrictionsWithContext*
  commentId: Overload:SuperOffice.CRM.Services.IFindAgent.SaveRestrictionsWithContext
  isExternal: true
  name: SaveRestrictionsWithContext
  nameWithType: IFindAgent.SaveRestrictionsWithContext
  fullName: SuperOffice.CRM.Services.IFindAgent.SaveRestrictionsWithContext
- uid: SuperOffice.CRM.Services.IFindAgent.SaveRestrictionGroup*
  commentId: Overload:SuperOffice.CRM.Services.IFindAgent.SaveRestrictionGroup
  isExternal: true
  name: SaveRestrictionGroup
  nameWithType: IFindAgent.SaveRestrictionGroup
  fullName: SuperOffice.CRM.Services.IFindAgent.SaveRestrictionGroup
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup
  isExternal: true
  name: ArchiveRestrictionGroup
  nameWithType: ArchiveRestrictionGroup
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup
- uid: SuperOffice.CRM.Services.IFindAgent.SaveRestrictionGroups*
  commentId: Overload:SuperOffice.CRM.Services.IFindAgent.SaveRestrictionGroups
  isExternal: true
  name: SaveRestrictionGroups
  nameWithType: IFindAgent.SaveRestrictionGroups
  fullName: SuperOffice.CRM.Services.IFindAgent.SaveRestrictionGroups
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup[]
  isExternal: true
  name: ArchiveRestrictionGroup[]
  nameWithType: ArchiveRestrictionGroup[]
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup[]
  nameWithType.vb: ArchiveRestrictionGroup()
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup()
  name.vb: ArchiveRestrictionGroup()
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup
    name: ArchiveRestrictionGroup
    nameWithType: ArchiveRestrictionGroup
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup
    name: ArchiveRestrictionGroup
    nameWithType: ArchiveRestrictionGroup
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.IFindAgent.GetRestrictionGroups*
  commentId: Overload:SuperOffice.CRM.Services.IFindAgent.GetRestrictionGroups
  isExternal: true
  name: GetRestrictionGroups
  nameWithType: IFindAgent.GetRestrictionGroups
  fullName: SuperOffice.CRM.Services.IFindAgent.GetRestrictionGroups
- uid: SuperOffice.CRM.Services.IFindAgent.GetRestrictionGroup*
  commentId: Overload:SuperOffice.CRM.Services.IFindAgent.GetRestrictionGroup
  isExternal: true
  name: GetRestrictionGroup
  nameWithType: IFindAgent.GetRestrictionGroup
  fullName: SuperOffice.CRM.Services.IFindAgent.GetRestrictionGroup
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.CRM.Services.IFindAgent.CreateRestrictionGroup*
  commentId: Overload:SuperOffice.CRM.Services.IFindAgent.CreateRestrictionGroup
  isExternal: true
  name: CreateRestrictionGroup
  nameWithType: IFindAgent.CreateRestrictionGroup
  fullName: SuperOffice.CRM.Services.IFindAgent.CreateRestrictionGroup
- uid: SuperOffice.CRM.Services.IFindAgent.DeleteRestrictionGroup*
  commentId: Overload:SuperOffice.CRM.Services.IFindAgent.DeleteRestrictionGroup
  isExternal: true
  name: DeleteRestrictionGroup
  nameWithType: IFindAgent.DeleteRestrictionGroup
  fullName: SuperOffice.CRM.Services.IFindAgent.DeleteRestrictionGroup
- uid: SuperOffice.CRM.Services.IFindAgent.SaveRestrictionsAndGetCriteriaInformation*
  commentId: Overload:SuperOffice.CRM.Services.IFindAgent.SaveRestrictionsAndGetCriteriaInformation
  isExternal: true
  name: SaveRestrictionsAndGetCriteriaInformation
  nameWithType: IFindAgent.SaveRestrictionsAndGetCriteriaInformation
  fullName: SuperOffice.CRM.Services.IFindAgent.SaveRestrictionsAndGetCriteriaInformation
- uid: SuperOffice.CRM.Services.IFindAgent.Find*
  commentId: Overload:SuperOffice.CRM.Services.IFindAgent.Find
  isExternal: true
  name: Find
  nameWithType: IFindAgent.Find
  fullName: SuperOffice.CRM.Services.IFindAgent.Find
- uid: SuperOffice.CRM.Services.FindResults
  commentId: T:SuperOffice.CRM.Services.FindResults
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: FindResults
  nameWithType: FindResults
  fullName: SuperOffice.CRM.Services.FindResults
- uid: SuperOffice.CRM.Services.IFindAgent.FindFromRestrictions*
  commentId: Overload:SuperOffice.CRM.Services.IFindAgent.FindFromRestrictions
  isExternal: true
  name: FindFromRestrictions
  nameWithType: IFindAgent.FindFromRestrictions
  fullName: SuperOffice.CRM.Services.IFindAgent.FindFromRestrictions
- uid: SuperOffice.CRM.Services.IFindAgent.FindFromRestrictionsColumns*
  commentId: Overload:SuperOffice.CRM.Services.IFindAgent.FindFromRestrictionsColumns
  isExternal: true
  name: FindFromRestrictionsColumns
  nameWithType: IFindAgent.FindFromRestrictionsColumns
  fullName: SuperOffice.CRM.Services.IFindAgent.FindFromRestrictionsColumns
- uid: SuperOffice.CRM.Services.IFindAgent.GetAvailableRestrictionColumns*
  commentId: Overload:SuperOffice.CRM.Services.IFindAgent.GetAvailableRestrictionColumns
  isExternal: true
  name: GetAvailableRestrictionColumns
  nameWithType: IFindAgent.GetAvailableRestrictionColumns
  fullName: SuperOffice.CRM.Services.IFindAgent.GetAvailableRestrictionColumns
- uid: SuperOffice.CRM.Services.IFindAgent.GetSpecifiedCriteriaInformationWithDefaults*
  commentId: Overload:SuperOffice.CRM.Services.IFindAgent.GetSpecifiedCriteriaInformationWithDefaults
  isExternal: true
  name: GetSpecifiedCriteriaInformationWithDefaults
  nameWithType: IFindAgent.GetSpecifiedCriteriaInformationWithDefaults
  fullName: SuperOffice.CRM.Services.IFindAgent.GetSpecifiedCriteriaInformationWithDefaults
- uid: SuperOffice.CRM.Services.IFindAgent.GetSpecifiedCriteriaInformationWithDefaultsWithContext*
  commentId: Overload:SuperOffice.CRM.Services.IFindAgent.GetSpecifiedCriteriaInformationWithDefaultsWithContext
  isExternal: true
  name: GetSpecifiedCriteriaInformationWithDefaultsWithContext
  nameWithType: IFindAgent.GetSpecifiedCriteriaInformationWithDefaultsWithContext
  fullName: SuperOffice.CRM.Services.IFindAgent.GetSpecifiedCriteriaInformationWithDefaultsWithContext
- uid: SuperOffice.CRM.Services.IFindAgent.FindFromRestrictionsColumnsOrderBy*
  commentId: Overload:SuperOffice.CRM.Services.IFindAgent.FindFromRestrictionsColumnsOrderBy
  isExternal: true
  name: FindFromRestrictionsColumnsOrderBy
  nameWithType: IFindAgent.FindFromRestrictionsColumnsOrderBy
  fullName: SuperOffice.CRM.Services.IFindAgent.FindFromRestrictionsColumnsOrderBy
- uid: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[]
  isExternal: true
  name: ArchiveOrderByInfo[]
  nameWithType: ArchiveOrderByInfo[]
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[]
  nameWithType.vb: ArchiveOrderByInfo()
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo()
  name.vb: ArchiveOrderByInfo()
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo
    name: ArchiveOrderByInfo
    nameWithType: ArchiveOrderByInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo
    name: ArchiveOrderByInfo
    nameWithType: ArchiveOrderByInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.IFindAgent.GetDefaultDesiredColumns*
  commentId: Overload:SuperOffice.CRM.Services.IFindAgent.GetDefaultDesiredColumns
  isExternal: true
  name: GetDefaultDesiredColumns
  nameWithType: IFindAgent.GetDefaultDesiredColumns
  fullName: SuperOffice.CRM.Services.IFindAgent.GetDefaultDesiredColumns
- uid: SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo[]
  isExternal: true
  name: ArchiveColumnInfo[]
  nameWithType: ArchiveColumnInfo[]
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo[]
  nameWithType.vb: ArchiveColumnInfo()
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo()
  name.vb: ArchiveColumnInfo()
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo
    name: ArchiveColumnInfo
    nameWithType: ArchiveColumnInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo
    name: ArchiveColumnInfo
    nameWithType: ArchiveColumnInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.IFindAgent.GetDefaultOrderBy*
  commentId: Overload:SuperOffice.CRM.Services.IFindAgent.GetDefaultOrderBy
  isExternal: true
  name: GetDefaultOrderBy
  nameWithType: IFindAgent.GetDefaultOrderBy
  fullName: SuperOffice.CRM.Services.IFindAgent.GetDefaultOrderBy
- uid: SuperOffice.CRM.Services.IFindAgent.PopulateRestrictions*
  commentId: Overload:SuperOffice.CRM.Services.IFindAgent.PopulateRestrictions
  isExternal: true
  name: PopulateRestrictions
  nameWithType: IFindAgent.PopulateRestrictions
  fullName: SuperOffice.CRM.Services.IFindAgent.PopulateRestrictions
- uid: SuperOffice.CRM.Services.IFindAgent.PopulateRestrictionValues*
  commentId: Overload:SuperOffice.CRM.Services.IFindAgent.PopulateRestrictionValues
  isExternal: true
  name: PopulateRestrictionValues
  nameWithType: IFindAgent.PopulateRestrictionValues
  fullName: SuperOffice.CRM.Services.IFindAgent.PopulateRestrictionValues
- uid: SuperOffice.CRM.Services.IFindAgent.GetDefaultDesiredColumnsFromRestrictions*
  commentId: Overload:SuperOffice.CRM.Services.IFindAgent.GetDefaultDesiredColumnsFromRestrictions
  isExternal: true
  name: GetDefaultDesiredColumnsFromRestrictions
  nameWithType: IFindAgent.GetDefaultDesiredColumnsFromRestrictions
  fullName: SuperOffice.CRM.Services.IFindAgent.GetDefaultDesiredColumnsFromRestrictions
- uid: SuperOffice.CRM.Services.IFindAgent.GetDefaultOrderByFromDesiredColumns*
  commentId: Overload:SuperOffice.CRM.Services.IFindAgent.GetDefaultOrderByFromDesiredColumns
  isExternal: true
  name: GetDefaultOrderByFromDesiredColumns
  nameWithType: IFindAgent.GetDefaultOrderByFromDesiredColumns
  fullName: SuperOffice.CRM.Services.IFindAgent.GetDefaultOrderByFromDesiredColumns
- uid: SuperOffice.CRM.Services.IFindAgent.FindOrderBy*
  commentId: Overload:SuperOffice.CRM.Services.IFindAgent.FindOrderBy
  isExternal: true
  name: FindOrderBy
  nameWithType: IFindAgent.FindOrderBy
  fullName: SuperOffice.CRM.Services.IFindAgent.FindOrderBy
- uid: SuperOffice.CRM.Services.IFindAgent.FindWithExtraRestrictions*
  commentId: Overload:SuperOffice.CRM.Services.IFindAgent.FindWithExtraRestrictions
  isExternal: true
  name: FindWithExtraRestrictions
  nameWithType: IFindAgent.FindWithExtraRestrictions
  fullName: SuperOffice.CRM.Services.IFindAgent.FindWithExtraRestrictions
- uid: SuperOffice.CRM.Services.IFindAgent.FindWithColumns*
  commentId: Overload:SuperOffice.CRM.Services.IFindAgent.FindWithColumns
  isExternal: true
  name: FindWithColumns
  nameWithType: IFindAgent.FindWithColumns
  fullName: SuperOffice.CRM.Services.IFindAgent.FindWithColumns
- uid: SuperOffice.CRM.Services.IFindAgent.SaveRestrictions2*
  commentId: Overload:SuperOffice.CRM.Services.IFindAgent.SaveRestrictions2
  isExternal: true
  name: SaveRestrictions2
  nameWithType: IFindAgent.SaveRestrictions2
  fullName: SuperOffice.CRM.Services.IFindAgent.SaveRestrictions2
- uid: SuperOffice.CRM.Services.IFindAgent.SaveRestrictionsWithContext2*
  commentId: Overload:SuperOffice.CRM.Services.IFindAgent.SaveRestrictionsWithContext2
  isExternal: true
  name: SaveRestrictionsWithContext2
  nameWithType: IFindAgent.SaveRestrictionsWithContext2
  fullName: SuperOffice.CRM.Services.IFindAgent.SaveRestrictionsWithContext2
- uid: SuperOffice.CRM.Services.IFindAgent.SaveRestrictionsAndGetCriteriaInformation2*
  commentId: Overload:SuperOffice.CRM.Services.IFindAgent.SaveRestrictionsAndGetCriteriaInformation2
  isExternal: true
  name: SaveRestrictionsAndGetCriteriaInformation2
  nameWithType: IFindAgent.SaveRestrictionsAndGetCriteriaInformation2
  fullName: SuperOffice.CRM.Services.IFindAgent.SaveRestrictionsAndGetCriteriaInformation2
- uid: SuperOffice.CRM.Services.IFindAgent.FindFromRestrictions2*
  commentId: Overload:SuperOffice.CRM.Services.IFindAgent.FindFromRestrictions2
  isExternal: true
  name: FindFromRestrictions2
  nameWithType: IFindAgent.FindFromRestrictions2
  fullName: SuperOffice.CRM.Services.IFindAgent.FindFromRestrictions2
- uid: SuperOffice.CRM.Services.IFindAgent.FindFromRestrictionsColumns2*
  commentId: Overload:SuperOffice.CRM.Services.IFindAgent.FindFromRestrictionsColumns2
  isExternal: true
  name: FindFromRestrictionsColumns2
  nameWithType: IFindAgent.FindFromRestrictionsColumns2
  fullName: SuperOffice.CRM.Services.IFindAgent.FindFromRestrictionsColumns2
- uid: SuperOffice.CRM.Services.IFindAgent.FindFromRestrictionsColumnsOrderBy2*
  commentId: Overload:SuperOffice.CRM.Services.IFindAgent.FindFromRestrictionsColumnsOrderBy2
  isExternal: true
  name: FindFromRestrictionsColumnsOrderBy2
  nameWithType: IFindAgent.FindFromRestrictionsColumnsOrderBy2
  fullName: SuperOffice.CRM.Services.IFindAgent.FindFromRestrictionsColumnsOrderBy2
- uid: SuperOffice.CRM.Services.IFindAgent.GetDefaultDesiredColumnsFromRestrictions2*
  commentId: Overload:SuperOffice.CRM.Services.IFindAgent.GetDefaultDesiredColumnsFromRestrictions2
  isExternal: true
  name: GetDefaultDesiredColumnsFromRestrictions2
  nameWithType: IFindAgent.GetDefaultDesiredColumnsFromRestrictions2
  fullName: SuperOffice.CRM.Services.IFindAgent.GetDefaultDesiredColumnsFromRestrictions2
- uid: SuperOffice.CRM.Services.IFindAgent.FindOrderBy2*
  commentId: Overload:SuperOffice.CRM.Services.IFindAgent.FindOrderBy2
  isExternal: true
  name: FindOrderBy2
  nameWithType: IFindAgent.FindOrderBy2
  fullName: SuperOffice.CRM.Services.IFindAgent.FindOrderBy2
- uid: SuperOffice.CRM.Services.IFindAgent.FindWithExtraRestrictions2*
  commentId: Overload:SuperOffice.CRM.Services.IFindAgent.FindWithExtraRestrictions2
  isExternal: true
  name: FindWithExtraRestrictions2
  nameWithType: IFindAgent.FindWithExtraRestrictions2
  fullName: SuperOffice.CRM.Services.IFindAgent.FindWithExtraRestrictions2
