### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Services.IConfigurationAgent
  commentId: T:SuperOffice.CRM.Services.IConfigurationAgent
  id: IConfigurationAgent
  parent: SuperOffice.CRM.Services
  children:
  - SuperOffice.CRM.Services.IConfigurationAgent.ClearConfigurationCache(System.String,System.String,System.Boolean)
  - SuperOffice.CRM.Services.IConfigurationAgent.CreateDefaultConfigurableScreenDelta
  - SuperOffice.CRM.Services.IConfigurationAgent.CreateDefaultDiaryViewEntity
  - SuperOffice.CRM.Services.IConfigurationAgent.CreateDefaultSystemEventEntity
  - SuperOffice.CRM.Services.IConfigurationAgent.DeleteConfigurableScreenDelta(System.Int32)
  - SuperOffice.CRM.Services.IConfigurationAgent.DeleteDiaryViewEntity(System.Int32)
  - SuperOffice.CRM.Services.IConfigurationAgent.DeleteSystemEventEntity(System.Int32)
  - SuperOffice.CRM.Services.IConfigurationAgent.DeleteWindowPosSize(System.Int32)
  - SuperOffice.CRM.Services.IConfigurationAgent.ExistsSystemEvent(System.String)
  - SuperOffice.CRM.Services.IConfigurationAgent.GetAnyConfiguration(System.String,System.String,System.String,System.String)
  - SuperOffice.CRM.Services.IConfigurationAgent.GetApplicationConfiguration(System.String,System.String)
  - SuperOffice.CRM.Services.IConfigurationAgent.GetConfigurableScreenDelta(System.Int32)
  - SuperOffice.CRM.Services.IConfigurationAgent.GetConfigurableScreenDeltasByDelta(SuperOffice.CRM.Services.ConfigurableScreenDelta)
  - SuperOffice.CRM.Services.IConfigurationAgent.GetConfigurableScreenDeltasByQuery(SuperOffice.CRM.Services.DeltaQuery)
  - SuperOffice.CRM.Services.IConfigurationAgent.GetCRMUrl(System.String,System.String,System.Boolean)
  - SuperOffice.CRM.Services.IConfigurationAgent.GetCSAuthUrl(System.String,System.String,System.String,System.String)
  - SuperOffice.CRM.Services.IConfigurationAgent.GetCsCgiUrlInternal
  - SuperOffice.CRM.Services.IConfigurationAgent.GetCsProgramUrl(System.String,System.String,System.String,System.String)
  - SuperOffice.CRM.Services.IConfigurationAgent.GetCSRegistryValue(System.Int32)
  - SuperOffice.CRM.Services.IConfigurationAgent.GetCSWwwFolder
  - SuperOffice.CRM.Services.IConfigurationAgent.GetCustomerUrl
  - SuperOffice.CRM.Services.IConfigurationAgent.GetDiaryViewEntity(System.Int32)
  - SuperOffice.CRM.Services.IConfigurationAgent.GetEmailNumberOfDays
  - SuperOffice.CRM.Services.IConfigurationAgent.GetEMarketingUrl(System.String)
  - SuperOffice.CRM.Services.IConfigurationAgent.GetFilterList(System.String,System.String)
  - SuperOffice.CRM.Services.IConfigurationAgent.GetHelpDispatcherUrl
  - SuperOffice.CRM.Services.IConfigurationAgent.GetMyWindowPosSizes
  - SuperOffice.CRM.Services.IConfigurationAgent.GetObjectMapping(System.String,System.String)
  - SuperOffice.CRM.Services.IConfigurationAgent.GetPageConfiguration(System.String,System.String,System.String)
  - SuperOffice.CRM.Services.IConfigurationAgent.GetRefreshedPageConfiguration(System.String,System.String,System.String)
  - SuperOffice.CRM.Services.IConfigurationAgent.GetScreenConfigurationDelta(SuperOffice.Data.DeltaType,SuperOffice.Data.DeltaState)
  - SuperOffice.CRM.Services.IConfigurationAgent.GetScreenConfigurationDeltas
  - SuperOffice.CRM.Services.IConfigurationAgent.GetSystemEventEntity(System.Int32)
  - SuperOffice.CRM.Services.IConfigurationAgent.GetWindowPosSize(System.Int32)
  - SuperOffice.CRM.Services.IConfigurationAgent.GetWindowPosSizeList(System.Int32[])
  - SuperOffice.CRM.Services.IConfigurationAgent.GetWindowPosSizesOnAssociateId(System.Int32)
  - SuperOffice.CRM.Services.IConfigurationAgent.GetWindowPosSizesOnPersonId(System.Int32)
  - SuperOffice.CRM.Services.IConfigurationAgent.GetWwwUrl(System.String)
  - SuperOffice.CRM.Services.IConfigurationAgent.GetWwwUrlForSMWeb
  - SuperOffice.CRM.Services.IConfigurationAgent.RebuildUdefDeltas
  - SuperOffice.CRM.Services.IConfigurationAgent.RebuildWebpanelDeltas
  - SuperOffice.CRM.Services.IConfigurationAgent.SaveConfigurableScreenDelta(SuperOffice.CRM.Services.ConfigurableScreenDelta)
  - SuperOffice.CRM.Services.IConfigurationAgent.SaveDiaryViewEntity(SuperOffice.CRM.Services.DiaryViewEntity)
  - SuperOffice.CRM.Services.IConfigurationAgent.SaveSystemEventEntity(SuperOffice.CRM.Services.SystemEventEntity)
  - SuperOffice.CRM.Services.IConfigurationAgent.SaveWindowPosSize(SuperOffice.CRM.Services.WindowPosSize)
  - SuperOffice.CRM.Services.IConfigurationAgent.SaveWindowPosSizes(SuperOffice.CRM.Services.WindowPosSize[])
  langs:
  - csharp
  - vb
  name: IConfigurationAgent
  nameWithType: IConfigurationAgent
  fullName: SuperOffice.CRM.Services.IConfigurationAgent
  type: Interface
  source:
    path: SuperOffice.DCF.Services
    isExternal: true
  assemblies:
  - SuperOffice.DCF.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nInterface for the Configuration Agent\nUser interface configuration - XMLs and other elements such as inter-client URLs\n"
  example:
  - "\n<pre><code>  using SuperOffice;\n  using SuperOffice.CRM.Services;\n\n  using (SoSession mySession = SoSession.Authenticate(&quot;user&quot;, &quot;pass&quot;))\n  {\n     using (ConfigurationAgent agent = new ConfigurationAgent())\n     {\n        // call methods on agent here...\n     }\n  }</code></pre>\n"
  syntax:
    content: >-
      [Agent("Configuration Agent", "Interface for the Configuration Agent. User interface configuration - XMLs and other elements such as inter-client URLs")]

      public interface IConfigurationAgent : IAgent
    content.vb: >-
      <Agent("Configuration Agent", "Interface for the Configuration Agent. User interface configuration - XMLs and other elements such as inter-client URLs")>

      Public Interface IConfigurationAgent

          Inherits IAgent
  attributes:
  - type: SuperOffice.CRM.Services.Reflection.AgentAttribute
    ctor: SuperOffice.CRM.Services.Reflection.AgentAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Configuration Agent
    - type: System.String
      value: Interface for the Configuration Agent. User interface configuration - XMLs and other elements such as inter-client URLs
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.CRM.Services.IConfigurationAgent.CreateDefaultDiaryViewEntity
  commentId: M:SuperOffice.CRM.Services.IConfigurationAgent.CreateDefaultDiaryViewEntity
  id: CreateDefaultDiaryViewEntity
  parent: SuperOffice.CRM.Services.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultDiaryViewEntity()
  nameWithType: IConfigurationAgent.CreateDefaultDiaryViewEntity()
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.CreateDefaultDiaryViewEntity()
  type: Method
  source:
    path: SuperOffice.DCF.Services
    isExternal: true
  assemblies:
  - SuperOffice.DCF.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nLoading default values into a new DiaryViewEntity.\nNetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: DiaryViewEntity CreateDefaultDiaryViewEntity()
    return:
      type: SuperOffice.CRM.Services.DiaryViewEntity
      description: New DiaryViewEntity with default values
    content.vb: Function CreateDefaultDiaryViewEntity As DiaryViewEntity
  overload: SuperOffice.CRM.Services.IConfigurationAgent.CreateDefaultDiaryViewEntity*
- uid: SuperOffice.CRM.Services.IConfigurationAgent.SaveDiaryViewEntity(SuperOffice.CRM.Services.DiaryViewEntity)
  commentId: M:SuperOffice.CRM.Services.IConfigurationAgent.SaveDiaryViewEntity(SuperOffice.CRM.Services.DiaryViewEntity)
  id: SaveDiaryViewEntity(SuperOffice.CRM.Services.DiaryViewEntity)
  parent: SuperOffice.CRM.Services.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: SaveDiaryViewEntity(DiaryViewEntity)
  nameWithType: IConfigurationAgent.SaveDiaryViewEntity(DiaryViewEntity)
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.SaveDiaryViewEntity(SuperOffice.CRM.Services.DiaryViewEntity)
  type: Method
  source:
    path: SuperOffice.DCF.Services
    isExternal: true
  assemblies:
  - SuperOffice.DCF.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nUpdates the existing DiaryViewEntity or creates a new DiaryViewEntity if the id parameter is empty\n"
  syntax:
    content: DiaryViewEntity SaveDiaryViewEntity(DiaryViewEntity diaryViewEntity)
    parameters:
    - id: diaryViewEntity
      type: SuperOffice.CRM.Services.DiaryViewEntity
      description: The DiaryViewEntity that is saved.
    return:
      type: SuperOffice.CRM.Services.DiaryViewEntity
      description: New or updated DiaryViewEntity
    content.vb: Function SaveDiaryViewEntity(diaryViewEntity As DiaryViewEntity) As DiaryViewEntity
  overload: SuperOffice.CRM.Services.IConfigurationAgent.SaveDiaryViewEntity*
- uid: SuperOffice.CRM.Services.IConfigurationAgent.DeleteDiaryViewEntity(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IConfigurationAgent.DeleteDiaryViewEntity(System.Int32)
  id: DeleteDiaryViewEntity(System.Int32)
  parent: SuperOffice.CRM.Services.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: DeleteDiaryViewEntity(Int32)
  nameWithType: IConfigurationAgent.DeleteDiaryViewEntity(Int32)
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.DeleteDiaryViewEntity(System.Int32)
  type: Method
  source:
    path: SuperOffice.DCF.Services
    isExternal: true
  assemblies:
  - SuperOffice.DCF.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nDeletes the DiaryViewEntity\n"
  syntax:
    content: void DeleteDiaryViewEntity(int diaryViewEntityId)
    parameters:
    - id: diaryViewEntityId
      type: System.Int32
      description: The identity of the DiaryViewEntity
    content.vb: Sub DeleteDiaryViewEntity(diaryViewEntityId As Integer)
  overload: SuperOffice.CRM.Services.IConfigurationAgent.DeleteDiaryViewEntity*
- uid: SuperOffice.CRM.Services.IConfigurationAgent.CreateDefaultSystemEventEntity
  commentId: M:SuperOffice.CRM.Services.IConfigurationAgent.CreateDefaultSystemEventEntity
  id: CreateDefaultSystemEventEntity
  parent: SuperOffice.CRM.Services.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultSystemEventEntity()
  nameWithType: IConfigurationAgent.CreateDefaultSystemEventEntity()
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.CreateDefaultSystemEventEntity()
  type: Method
  source:
    path: SuperOffice.DCF.Services
    isExternal: true
  assemblies:
  - SuperOffice.DCF.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nLoading default values into a new SystemEventEntity.\nNetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: SystemEventEntity CreateDefaultSystemEventEntity()
    return:
      type: SuperOffice.CRM.Services.SystemEventEntity
      description: New SystemEventEntity with default values
    content.vb: Function CreateDefaultSystemEventEntity As SystemEventEntity
  overload: SuperOffice.CRM.Services.IConfigurationAgent.CreateDefaultSystemEventEntity*
- uid: SuperOffice.CRM.Services.IConfigurationAgent.SaveSystemEventEntity(SuperOffice.CRM.Services.SystemEventEntity)
  commentId: M:SuperOffice.CRM.Services.IConfigurationAgent.SaveSystemEventEntity(SuperOffice.CRM.Services.SystemEventEntity)
  id: SaveSystemEventEntity(SuperOffice.CRM.Services.SystemEventEntity)
  parent: SuperOffice.CRM.Services.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: SaveSystemEventEntity(SystemEventEntity)
  nameWithType: IConfigurationAgent.SaveSystemEventEntity(SystemEventEntity)
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.SaveSystemEventEntity(SuperOffice.CRM.Services.SystemEventEntity)
  type: Method
  source:
    path: SuperOffice.DCF.Services
    isExternal: true
  assemblies:
  - SuperOffice.DCF.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nUpdates the existing SystemEventEntity or creates a new SystemEventEntity if the id parameter is empty\n"
  syntax:
    content: SystemEventEntity SaveSystemEventEntity(SystemEventEntity systemEventEntity)
    parameters:
    - id: systemEventEntity
      type: SuperOffice.CRM.Services.SystemEventEntity
      description: The SystemEventEntity that is saved.
    return:
      type: SuperOffice.CRM.Services.SystemEventEntity
      description: New or updated SystemEventEntity
    content.vb: Function SaveSystemEventEntity(systemEventEntity As SystemEventEntity) As SystemEventEntity
  overload: SuperOffice.CRM.Services.IConfigurationAgent.SaveSystemEventEntity*
- uid: SuperOffice.CRM.Services.IConfigurationAgent.DeleteSystemEventEntity(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IConfigurationAgent.DeleteSystemEventEntity(System.Int32)
  id: DeleteSystemEventEntity(System.Int32)
  parent: SuperOffice.CRM.Services.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: DeleteSystemEventEntity(Int32)
  nameWithType: IConfigurationAgent.DeleteSystemEventEntity(Int32)
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.DeleteSystemEventEntity(System.Int32)
  type: Method
  source:
    path: SuperOffice.DCF.Services
    isExternal: true
  assemblies:
  - SuperOffice.DCF.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nDeletes the SystemEventEntity\n"
  syntax:
    content: void DeleteSystemEventEntity(int systemEventEntityId)
    parameters:
    - id: systemEventEntityId
      type: System.Int32
      description: The identity of the SystemEventEntity
    content.vb: Sub DeleteSystemEventEntity(systemEventEntityId As Integer)
  overload: SuperOffice.CRM.Services.IConfigurationAgent.DeleteSystemEventEntity*
- uid: SuperOffice.CRM.Services.IConfigurationAgent.CreateDefaultConfigurableScreenDelta
  commentId: M:SuperOffice.CRM.Services.IConfigurationAgent.CreateDefaultConfigurableScreenDelta
  id: CreateDefaultConfigurableScreenDelta
  parent: SuperOffice.CRM.Services.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultConfigurableScreenDelta()
  nameWithType: IConfigurationAgent.CreateDefaultConfigurableScreenDelta()
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.CreateDefaultConfigurableScreenDelta()
  type: Method
  source:
    path: SuperOffice.DCF.Services
    isExternal: true
  assemblies:
  - SuperOffice.DCF.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nLoading default values into a new ConfigurableScreenDelta.\nNetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: ConfigurableScreenDelta CreateDefaultConfigurableScreenDelta()
    return:
      type: SuperOffice.CRM.Services.ConfigurableScreenDelta
      description: New ConfigurableScreenDelta with default values
    content.vb: Function CreateDefaultConfigurableScreenDelta As ConfigurableScreenDelta
  overload: SuperOffice.CRM.Services.IConfigurationAgent.CreateDefaultConfigurableScreenDelta*
- uid: SuperOffice.CRM.Services.IConfigurationAgent.SaveConfigurableScreenDelta(SuperOffice.CRM.Services.ConfigurableScreenDelta)
  commentId: M:SuperOffice.CRM.Services.IConfigurationAgent.SaveConfigurableScreenDelta(SuperOffice.CRM.Services.ConfigurableScreenDelta)
  id: SaveConfigurableScreenDelta(SuperOffice.CRM.Services.ConfigurableScreenDelta)
  parent: SuperOffice.CRM.Services.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: SaveConfigurableScreenDelta(ConfigurableScreenDelta)
  nameWithType: IConfigurationAgent.SaveConfigurableScreenDelta(ConfigurableScreenDelta)
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.SaveConfigurableScreenDelta(SuperOffice.CRM.Services.ConfigurableScreenDelta)
  type: Method
  source:
    path: SuperOffice.DCF.Services
    isExternal: true
  assemblies:
  - SuperOffice.DCF.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nUpdates the existing ConfigurableScreenDelta or creates a new ConfigurableScreenDelta if the id parameter is empty\n"
  syntax:
    content: ConfigurableScreenDelta SaveConfigurableScreenDelta(ConfigurableScreenDelta configurableScreenDelta)
    parameters:
    - id: configurableScreenDelta
      type: SuperOffice.CRM.Services.ConfigurableScreenDelta
      description: The ConfigurableScreenDelta that is saved.
    return:
      type: SuperOffice.CRM.Services.ConfigurableScreenDelta
      description: New or updated ConfigurableScreenDelta
    content.vb: Function SaveConfigurableScreenDelta(configurableScreenDelta As ConfigurableScreenDelta) As ConfigurableScreenDelta
  overload: SuperOffice.CRM.Services.IConfigurationAgent.SaveConfigurableScreenDelta*
- uid: SuperOffice.CRM.Services.IConfigurationAgent.DeleteConfigurableScreenDelta(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IConfigurationAgent.DeleteConfigurableScreenDelta(System.Int32)
  id: DeleteConfigurableScreenDelta(System.Int32)
  parent: SuperOffice.CRM.Services.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: DeleteConfigurableScreenDelta(Int32)
  nameWithType: IConfigurationAgent.DeleteConfigurableScreenDelta(Int32)
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.DeleteConfigurableScreenDelta(System.Int32)
  type: Method
  source:
    path: SuperOffice.DCF.Services
    isExternal: true
  assemblies:
  - SuperOffice.DCF.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nDeletes the ConfigurableScreenDelta\n"
  syntax:
    content: void DeleteConfigurableScreenDelta(int configurableScreenDeltaId)
    parameters:
    - id: configurableScreenDeltaId
      type: System.Int32
      description: The identity of the ConfigurableScreenDelta
    content.vb: Sub DeleteConfigurableScreenDelta(configurableScreenDeltaId As Integer)
  overload: SuperOffice.CRM.Services.IConfigurationAgent.DeleteConfigurableScreenDelta*
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetApplicationConfiguration(System.String,System.String)
  commentId: M:SuperOffice.CRM.Services.IConfigurationAgent.GetApplicationConfiguration(System.String,System.String)
  id: GetApplicationConfiguration(System.String,System.String)
  parent: SuperOffice.CRM.Services.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetApplicationConfiguration(String, String)
  nameWithType: IConfigurationAgent.GetApplicationConfiguration(String, String)
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetApplicationConfiguration(System.String, System.String)
  type: Method
  source:
    path: SuperOffice.DCF.Services
    isExternal: true
  assemblies:
  - SuperOffice.DCF.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nReturn the application configuration. This is a list of pages, with information about the name, main panel and preference mappings of each page.\n"
  syntax:
    content: string GetApplicationConfiguration(string application, string instance)
    parameters:
    - id: application
      type: System.String
      description: The application name, for instance &apos;SixWeb&apos;
    - id: instance
      type: System.String
      description: The instance name for the application, like &apos;MainInstance&apos;
    return:
      type: System.String
      description: XML structure containing the application configuration
    content.vb: Function GetApplicationConfiguration(application As String, instance As String) As String
  overload: SuperOffice.CRM.Services.IConfigurationAgent.GetApplicationConfiguration*
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetPageConfiguration(System.String,System.String,System.String)
  commentId: M:SuperOffice.CRM.Services.IConfigurationAgent.GetPageConfiguration(System.String,System.String,System.String)
  id: GetPageConfiguration(System.String,System.String,System.String)
  parent: SuperOffice.CRM.Services.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetPageConfiguration(String, String, String)
  nameWithType: IConfigurationAgent.GetPageConfiguration(String, String, String)
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetPageConfiguration(System.String, System.String, System.String)
  type: Method
  source:
    path: SuperOffice.DCF.Services
    isExternal: true
  assemblies:
  - SuperOffice.DCF.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet the configuration for one whole web page, including all its panels etc.  totally asynchronous items like menus are not included, but all references are resolved and all special processing is applied.\n"
  syntax:
    content: string GetPageConfiguration(string application, string instance, string page)
    parameters:
    - id: application
      type: System.String
      description: The application name, for instance &apos;SixWeb
    - id: instance
      type: System.String
      description: The instance name for the application, like &apos;MainInstance&apos;
    - id: page
      type: System.String
      description: Page name, must correspond to one of the pages in the Application Configuration
    return:
      type: System.String
      description: XML containing the configuration for the given page, from the page down to the control level.
    content.vb: Function GetPageConfiguration(application As String, instance As String, page As String) As String
  overload: SuperOffice.CRM.Services.IConfigurationAgent.GetPageConfiguration*
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetObjectMapping(System.String,System.String)
  commentId: M:SuperOffice.CRM.Services.IConfigurationAgent.GetObjectMapping(System.String,System.String)
  id: GetObjectMapping(System.String,System.String)
  parent: SuperOffice.CRM.Services.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetObjectMapping(String, String)
  nameWithType: IConfigurationAgent.GetObjectMapping(String, String)
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetObjectMapping(System.String, System.String)
  type: Method
  source:
    path: SuperOffice.DCF.Services
    isExternal: true
  assemblies:
  - SuperOffice.DCF.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet the object mappings, i.e., the what code objects should be instantiated to handle the entities of the client configuration.\n"
  syntax:
    content: string GetObjectMapping(string application, string instance)
    parameters:
    - id: application
      type: System.String
      description: The application name, for instance &apos;SixWeb&apos;
    - id: instance
      type: System.String
      description: The instance name for the application, like &apos;MainInstance&apos;
    return:
      type: System.String
      description: XML containing the object mappings, including assembly and class names
    content.vb: Function GetObjectMapping(application As String, instance As String) As String
  overload: SuperOffice.CRM.Services.IConfigurationAgent.GetObjectMapping*
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetFilterList(System.String,System.String)
  commentId: M:SuperOffice.CRM.Services.IConfigurationAgent.GetFilterList(System.String,System.String)
  id: GetFilterList(System.String,System.String)
  parent: SuperOffice.CRM.Services.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetFilterList(String, String)
  nameWithType: IConfigurationAgent.GetFilterList(String, String)
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetFilterList(System.String, System.String)
  type: Method
  source:
    path: SuperOffice.DCF.Services
    isExternal: true
  assemblies:
  - SuperOffice.DCF.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet the list of filters to be used for processing the configuration data for this application.\n"
  syntax:
    content: string GetFilterList(string application, string instance)
    parameters:
    - id: application
      type: System.String
      description: The application name, for instance &apos;SixWeb&apos;
    - id: instance
      type: System.String
      description: The instance name for the application, like &apos;MainInstance&apos;
    return:
      type: System.String
      description: XML representing the list of filters and any configuration data they may need.
    content.vb: Function GetFilterList(application As String, instance As String) As String
  overload: SuperOffice.CRM.Services.IConfigurationAgent.GetFilterList*
- uid: SuperOffice.CRM.Services.IConfigurationAgent.ClearConfigurationCache(System.String,System.String,System.Boolean)
  commentId: M:SuperOffice.CRM.Services.IConfigurationAgent.ClearConfigurationCache(System.String,System.String,System.Boolean)
  id: ClearConfigurationCache(System.String,System.String,System.Boolean)
  parent: SuperOffice.CRM.Services.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: ClearConfigurationCache(String, String, Boolean)
  nameWithType: IConfigurationAgent.ClearConfigurationCache(String, String, Boolean)
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.ClearConfigurationCache(System.String, System.String, System.Boolean)
  type: Method
  source:
    path: SuperOffice.DCF.Services
    isExternal: true
  assemblies:
  - SuperOffice.DCF.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nConfiguration XML&apos;s may be expensive to build and parse, and are therefore cached to the database. &lt;para/>Cahcing is per application/instance/associate, and can be turned off through the config file. &lt;para/>If caching is on, and the configuration is changed, it is necessary to clear the cached configurations from the database, through this call.&lt;para/>Note that changes to the externalapplication table require cache invalidation. SoAdmin will do so automatically.\n"
  syntax:
    content: void ClearConfigurationCache(string application, string instance, bool forAllAssociates)
    parameters:
    - id: application
      type: System.String
      description: The application name, for instance &apos;SixWeb&apos;
    - id: instance
      type: System.String
      description: The instance name for the application, like &apos;MainInstance&apos;
    - id: forAllAssociates
      type: System.Boolean
      description: If false, only the current associate&apos;s configuration is cleared. If true, configurations are cleared for all associates.
    content.vb: Sub ClearConfigurationCache(application As String, instance As String, forAllAssociates As Boolean)
  overload: SuperOffice.CRM.Services.IConfigurationAgent.ClearConfigurationCache*
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetAnyConfiguration(System.String,System.String,System.String,System.String)
  commentId: M:SuperOffice.CRM.Services.IConfigurationAgent.GetAnyConfiguration(System.String,System.String,System.String,System.String)
  id: GetAnyConfiguration(System.String,System.String,System.String,System.String)
  parent: SuperOffice.CRM.Services.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetAnyConfiguration(String, String, String, String)
  nameWithType: IConfigurationAgent.GetAnyConfiguration(String, String, String, String)
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetAnyConfiguration(System.String, System.String, System.String, System.String)
  type: Method
  source:
    path: SuperOffice.DCF.Services
    isExternal: true
  assemblies:
  - SuperOffice.DCF.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet one defined configuration fragment, with full reference resolution and parsing applied. This is essentially the same service as the GetPageConfiguration, except that this service is not locked to objects of type Page.\n"
  syntax:
    content: string GetAnyConfiguration(string application, string instance, string item, string type)
    parameters:
    - id: application
      type: System.String
      description: The application name, for instance Six.Web
    - id: instance
      type: System.String
      description: The instance name, for instance Main
    - id: item
      type: System.String
      description: The configuration item name (first component of file name)
    - id: type
      type: System.String
      description: The configuration item type (second component of file name)
    return:
      type: System.String
      description: Fully resolved and parsed configuration XML, as string.
    content.vb: Function GetAnyConfiguration(application As String, instance As String, item As String, type As String) As String
  overload: SuperOffice.CRM.Services.IConfigurationAgent.GetAnyConfiguration*
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetEMarketingUrl(System.String)
  commentId: M:SuperOffice.CRM.Services.IConfigurationAgent.GetEMarketingUrl(System.String)
  id: GetEMarketingUrl(System.String)
  parent: SuperOffice.CRM.Services.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetEMarketingUrl(String)
  nameWithType: IConfigurationAgent.GetEMarketingUrl(String)
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetEMarketingUrl(System.String)
  type: Method
  source:
    path: SuperOffice.DCF.Services
    isExternal: true
  assemblies:
  - SuperOffice.DCF.Services
  namespace: SuperOffice.CRM.Services
  summary: "\n\n"
  syntax:
    content: string GetEMarketingUrl(string language)
    parameters:
    - id: language
      type: System.String
    return:
      type: System.String
    content.vb: Function GetEMarketingUrl(language As String) As String
  overload: SuperOffice.CRM.Services.IConfigurationAgent.GetEMarketingUrl*
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetCsProgramUrl(System.String,System.String,System.String,System.String)
  commentId: M:SuperOffice.CRM.Services.IConfigurationAgent.GetCsProgramUrl(System.String,System.String,System.String,System.String)
  id: GetCsProgramUrl(System.String,System.String,System.String,System.String)
  parent: SuperOffice.CRM.Services.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetCsProgramUrl(String, String, String, String)
  nameWithType: IConfigurationAgent.GetCsProgramUrl(String, String, String, String)
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetCsProgramUrl(System.String, System.String, System.String, System.String)
  type: Method
  source:
    path: SuperOffice.DCF.Services
    isExternal: true
  assemblies:
  - SuperOffice.DCF.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nThis method will convert a module name into a CS URL.\n"
  syntax:
    content: string GetCsProgramUrl(string language, string programName, string action, string extraParameters)
    parameters:
    - id: language
      type: System.String
      description: By setting this parameter, you can change the CS language for the current user.
    - id: programName
      type: System.String
      description: In this parameter you must specify which CS program you want to create an URL for. Valid examples are &quot;ticket&quot;, &quot;rms&quot;, &quot;spm&quot; etc.
    - id: action
      type: System.String
      description: Here you can optionally specify the action for the current program. This will enable you to go to a specific screen.
    - id: extraParameters
      type: System.String
      description: If an action is specified, you can specify extra parameters here. This can be used to set specific behaviour for the chosen screen/action. If an empty action is supplied, this parameter will be ignored.
    return:
      type: System.String
      description: Returns a valid CS URL composed of the give parameters.
    content.vb: Function GetCsProgramUrl(language As String, programName As String, action As String, extraParameters As String) As String
  overload: SuperOffice.CRM.Services.IConfigurationAgent.GetCsProgramUrl*
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetCSAuthUrl(System.String,System.String,System.String,System.String)
  commentId: M:SuperOffice.CRM.Services.IConfigurationAgent.GetCSAuthUrl(System.String,System.String,System.String,System.String)
  id: GetCSAuthUrl(System.String,System.String,System.String,System.String)
  parent: SuperOffice.CRM.Services.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetCSAuthUrl(String, String, String, String)
  nameWithType: IConfigurationAgent.GetCSAuthUrl(String, String, String, String)
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetCSAuthUrl(System.String, System.String, System.String, System.String)
  type: Method
  source:
    path: SuperOffice.DCF.Services
    isExternal: true
  assemblies:
  - SuperOffice.DCF.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nWill generate an url to the emarketing module\n"
  syntax:
    content: string GetCSAuthUrl(string language, string programName, string action, string extraParameters)
    parameters:
    - id: language
      type: System.String
      description: By setting this parameter, you can change the CS language for the current user.
    - id: programName
      type: System.String
      description: In this parameter you must specify which CS program you want to create an URL for. Valid examples are &quot;ticket&quot;, &quot;rms&quot;, &quot;spm&quot; etc.
    - id: action
      type: System.String
      description: Here you can optionally specify the action for the current program. This will enable you to go to a specific screen.
    - id: extraParameters
      type: System.String
      description: If an action is specified, you can specify extra parameters here. This can be used to set specific behaviour for the chosen screen/action. If an empty action is supplied, this parameter will be ignored.
    return:
      type: System.String
      description: Returns a valid CS URL composed of the give parameters.
    content.vb: Function GetCSAuthUrl(language As String, programName As String, action As String, extraParameters As String) As String
  overload: SuperOffice.CRM.Services.IConfigurationAgent.GetCSAuthUrl*
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetCSRegistryValue(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IConfigurationAgent.GetCSRegistryValue(System.Int32)
  id: GetCSRegistryValue(System.Int32)
  parent: SuperOffice.CRM.Services.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetCSRegistryValue(Int32)
  nameWithType: IConfigurationAgent.GetCSRegistryValue(Int32)
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetCSRegistryValue(System.Int32)
  type: Method
  source:
    path: SuperOffice.DCF.Services
    isExternal: true
  assemblies:
  - SuperOffice.DCF.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nThis method will get a value from the CS Registry table.\n"
  syntax:
    content: string GetCSRegistryValue(int entry)
    parameters:
    - id: entry
      type: System.Int32
      description: The Registry entry to get
    return:
      type: System.String
      description: The value of the specified Registry entry
    content.vb: Function GetCSRegistryValue(entry As Integer) As String
  overload: SuperOffice.CRM.Services.IConfigurationAgent.GetCSRegistryValue*
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetCSWwwFolder
  commentId: M:SuperOffice.CRM.Services.IConfigurationAgent.GetCSWwwFolder
  id: GetCSWwwFolder
  parent: SuperOffice.CRM.Services.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetCSWwwFolder()
  nameWithType: IConfigurationAgent.GetCSWwwFolder()
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetCSWwwFolder()
  type: Method
  source:
    path: SuperOffice.DCF.Services
    isExternal: true
  assemblies:
  - SuperOffice.DCF.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nThis method will get the www folder for CS\n"
  syntax:
    content: string GetCSWwwFolder()
    return:
      type: System.String
      description: The www folder for CS
    content.vb: Function GetCSWwwFolder As String
  overload: SuperOffice.CRM.Services.IConfigurationAgent.GetCSWwwFolder*
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetRefreshedPageConfiguration(System.String,System.String,System.String)
  commentId: M:SuperOffice.CRM.Services.IConfigurationAgent.GetRefreshedPageConfiguration(System.String,System.String,System.String)
  id: GetRefreshedPageConfiguration(System.String,System.String,System.String)
  parent: SuperOffice.CRM.Services.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetRefreshedPageConfiguration(String, String, String)
  nameWithType: IConfigurationAgent.GetRefreshedPageConfiguration(String, String, String)
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetRefreshedPageConfiguration(System.String, System.String, System.String)
  type: Method
  source:
    path: SuperOffice.DCF.Services
    isExternal: true
  assemblies:
  - SuperOffice.DCF.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet the configuration for one whole web page, including all its panels etc.  totally asynchronous items like menus are not included, but all references are resolved and all special processing is applied. Does not use cache for fetching, but updates the cache with refreshed configuration.\n"
  syntax:
    content: string GetRefreshedPageConfiguration(string application, string instance, string page)
    parameters:
    - id: application
      type: System.String
      description: The application name, for instance &apos;SixWeb
    - id: instance
      type: System.String
      description: The instance name for the application, like &apos;MainInstance&apos;
    - id: page
      type: System.String
      description: Page name, must correspond to one of the pages in the Application Configuration
    return:
      type: System.String
      description: XML containing the configuration for the given page, from the page down to the control level.
    content.vb: Function GetRefreshedPageConfiguration(application As String, instance As String, page As String) As String
  overload: SuperOffice.CRM.Services.IConfigurationAgent.GetRefreshedPageConfiguration*
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetWwwUrl(System.String)
  commentId: M:SuperOffice.CRM.Services.IConfigurationAgent.GetWwwUrl(System.String)
  id: GetWwwUrl(System.String)
  parent: SuperOffice.CRM.Services.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetWwwUrl(String)
  nameWithType: IConfigurationAgent.GetWwwUrl(String)
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetWwwUrl(System.String)
  type: Method
  source:
    path: SuperOffice.DCF.Services
    isExternal: true
  assemblies:
  - SuperOffice.DCF.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nWill get the default URL used for the logo, from the [NetServices] PageUrl preferencec, with tags substituted.\n"
  syntax:
    content: string GetWwwUrl(string client)
    parameters:
    - id: client
      type: System.String
      description: The name for the client application, like &apos;CS&apos; or &apos;SM.web&apos;, used for the &lt;clie> variable
    return:
      type: System.String
      description: URL to be used when clicking the logo
    content.vb: Function GetWwwUrl(client As String) As String
  overload: SuperOffice.CRM.Services.IConfigurationAgent.GetWwwUrl*
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetHelpDispatcherUrl
  commentId: M:SuperOffice.CRM.Services.IConfigurationAgent.GetHelpDispatcherUrl
  id: GetHelpDispatcherUrl
  parent: SuperOffice.CRM.Services.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetHelpDispatcherUrl()
  nameWithType: IConfigurationAgent.GetHelpDispatcherUrl()
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetHelpDispatcherUrl()
  type: Method
  source:
    path: SuperOffice.DCF.Services
    isExternal: true
  assemblies:
  - SuperOffice.DCF.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nWill get the GetHelpDispatcherUrl used by the help system\n"
  syntax:
    content: string GetHelpDispatcherUrl()
    return:
      type: System.String
      description: URL to be used by the help system
    content.vb: Function GetHelpDispatcherUrl As String
  overload: SuperOffice.CRM.Services.IConfigurationAgent.GetHelpDispatcherUrl*
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetWwwUrlForSMWeb
  commentId: M:SuperOffice.CRM.Services.IConfigurationAgent.GetWwwUrlForSMWeb
  id: GetWwwUrlForSMWeb
  parent: SuperOffice.CRM.Services.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetWwwUrlForSMWeb()
  nameWithType: IConfigurationAgent.GetWwwUrlForSMWeb()
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetWwwUrlForSMWeb()
  type: Method
  source:
    path: SuperOffice.DCF.Services
    isExternal: true
  assemblies:
  - SuperOffice.DCF.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nReturns the URL used for the logo by the SM.web client. Uses urldispatch.aspx\n"
  syntax:
    content: string GetWwwUrlForSMWeb()
    return:
      type: System.String
      description: Link to urldispatch.aspx tagged with [SOSITEURL]
    content.vb: Function GetWwwUrlForSMWeb As String
  overload: SuperOffice.CRM.Services.IConfigurationAgent.GetWwwUrlForSMWeb*
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetCsCgiUrlInternal
  commentId: M:SuperOffice.CRM.Services.IConfigurationAgent.GetCsCgiUrlInternal
  id: GetCsCgiUrlInternal
  parent: SuperOffice.CRM.Services.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetCsCgiUrlInternal()
  nameWithType: IConfigurationAgent.GetCsCgiUrlInternal()
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetCsCgiUrlInternal()
  type: Method
  source:
    path: SuperOffice.DCF.Services
    isExternal: true
  assemblies:
  - SuperOffice.DCF.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nThis method will get the host name for CS\n"
  syntax:
    content: string GetCsCgiUrlInternal()
    return:
      type: System.String
      description: Will get the host name for where CS is installed
    content.vb: Function GetCsCgiUrlInternal As String
  overload: SuperOffice.CRM.Services.IConfigurationAgent.GetCsCgiUrlInternal*
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetCRMUrl(System.String,System.String,System.Boolean)
  commentId: M:SuperOffice.CRM.Services.IConfigurationAgent.GetCRMUrl(System.String,System.String,System.Boolean)
  id: GetCRMUrl(System.String,System.String,System.Boolean)
  parent: SuperOffice.CRM.Services.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetCRMUrl(String, String, Boolean)
  nameWithType: IConfigurationAgent.GetCRMUrl(String, String, Boolean)
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetCRMUrl(System.String, System.String, System.Boolean)
  type: Method
  source:
    path: SuperOffice.DCF.Services
    isExternal: true
  assemblies:
  - SuperOffice.DCF.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nReturns a valid url based in the soprotocol provided\n"
  syntax:
    content: string GetCRMUrl(string soProtocol, string currents, bool frameless)
    parameters:
    - id: soProtocol
      type: System.String
      description: SoProtocol to display. Eg. contact.activityarchive.minipreview
    - id: currents
      type: System.String
      description: currents to set. Eg. contact_id=100&amp;person_id=299
    - id: frameless
      type: System.Boolean
      description: If true frame is not rendered( Navigationbar, buttonbar and menu )
    return:
      type: System.String
      description: Url with soprotocol
    content.vb: Function GetCRMUrl(soProtocol As String, currents As String, frameless As Boolean) As String
  overload: SuperOffice.CRM.Services.IConfigurationAgent.GetCRMUrl*
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetEmailNumberOfDays
  commentId: M:SuperOffice.CRM.Services.IConfigurationAgent.GetEmailNumberOfDays
  id: GetEmailNumberOfDays
  parent: SuperOffice.CRM.Services.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetEmailNumberOfDays()
  nameWithType: IConfigurationAgent.GetEmailNumberOfDays()
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetEmailNumberOfDays()
  type: Method
  source:
    path: SuperOffice.DCF.Services
    isExternal: true
  assemblies:
  - SuperOffice.DCF.Services
  namespace: SuperOffice.CRM.Services
  summary: "\n\n"
  syntax:
    content: int GetEmailNumberOfDays()
    return:
      type: System.Int32
      description: Number of days in the past for which we are fetching email
    content.vb: Function GetEmailNumberOfDays As Integer
  overload: SuperOffice.CRM.Services.IConfigurationAgent.GetEmailNumberOfDays*
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetCustomerUrl
  commentId: M:SuperOffice.CRM.Services.IConfigurationAgent.GetCustomerUrl
  id: GetCustomerUrl
  parent: SuperOffice.CRM.Services.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetCustomerUrl()
  nameWithType: IConfigurationAgent.GetCustomerUrl()
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetCustomerUrl()
  type: Method
  source:
    path: SuperOffice.DCF.Services
    isExternal: true
  assemblies:
  - SuperOffice.DCF.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nThis method will get the URL for the external access to the customer center\n"
  syntax:
    content: string GetCustomerUrl()
    return:
      type: System.String
      description: The URL to the customer center, without any actions
    content.vb: Function GetCustomerUrl As String
  overload: SuperOffice.CRM.Services.IConfigurationAgent.GetCustomerUrl*
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetDiaryViewEntity(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IConfigurationAgent.GetDiaryViewEntity(System.Int32)
  id: GetDiaryViewEntity(System.Int32)
  parent: SuperOffice.CRM.Services.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetDiaryViewEntity(Int32)
  nameWithType: IConfigurationAgent.GetDiaryViewEntity(Int32)
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetDiaryViewEntity(System.Int32)
  type: Method
  source:
    path: SuperOffice.DCF.Services
    isExternal: true
  assemblies:
  - SuperOffice.DCF.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets a DiaryViewEntity object.                        \n"
  syntax:
    content: DiaryViewEntity GetDiaryViewEntity(int diaryViewEntityId)
    parameters:
    - id: diaryViewEntityId
      type: System.Int32
      description: The identifier of the DiaryViewEntity object
    return:
      type: SuperOffice.CRM.Services.DiaryViewEntity
      description: DiaryViewEntity
    content.vb: Function GetDiaryViewEntity(diaryViewEntityId As Integer) As DiaryViewEntity
  overload: SuperOffice.CRM.Services.IConfigurationAgent.GetDiaryViewEntity*
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetWindowPosSize(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IConfigurationAgent.GetWindowPosSize(System.Int32)
  id: GetWindowPosSize(System.Int32)
  parent: SuperOffice.CRM.Services.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetWindowPosSize(Int32)
  nameWithType: IConfigurationAgent.GetWindowPosSize(Int32)
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetWindowPosSize(System.Int32)
  type: Method
  source:
    path: SuperOffice.DCF.Services
    isExternal: true
  assemblies:
  - SuperOffice.DCF.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets a WindowPosSize object.                        \n"
  syntax:
    content: WindowPosSize GetWindowPosSize(int windowPosSizeId)
    parameters:
    - id: windowPosSizeId
      type: System.Int32
      description: The identifier of the WindowPosSize object
    return:
      type: SuperOffice.CRM.Services.WindowPosSize
      description: WindowPosSize
    content.vb: Function GetWindowPosSize(windowPosSizeId As Integer) As WindowPosSize
  overload: SuperOffice.CRM.Services.IConfigurationAgent.GetWindowPosSize*
- uid: SuperOffice.CRM.Services.IConfigurationAgent.SaveWindowPosSize(SuperOffice.CRM.Services.WindowPosSize)
  commentId: M:SuperOffice.CRM.Services.IConfigurationAgent.SaveWindowPosSize(SuperOffice.CRM.Services.WindowPosSize)
  id: SaveWindowPosSize(SuperOffice.CRM.Services.WindowPosSize)
  parent: SuperOffice.CRM.Services.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: SaveWindowPosSize(WindowPosSize)
  nameWithType: IConfigurationAgent.SaveWindowPosSize(WindowPosSize)
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.SaveWindowPosSize(SuperOffice.CRM.Services.WindowPosSize)
  type: Method
  source:
    path: SuperOffice.DCF.Services
    isExternal: true
  assemblies:
  - SuperOffice.DCF.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSaves a window and dialog position and size setting.\n"
  syntax:
    content: WindowPosSize SaveWindowPosSize(WindowPosSize windowPosSize)
    parameters:
    - id: windowPosSize
      type: SuperOffice.CRM.Services.WindowPosSize
      description: The item that is saved
    return:
      type: SuperOffice.CRM.Services.WindowPosSize
      description: The saved item
    content.vb: Function SaveWindowPosSize(windowPosSize As WindowPosSize) As WindowPosSize
  overload: SuperOffice.CRM.Services.IConfigurationAgent.SaveWindowPosSize*
- uid: SuperOffice.CRM.Services.IConfigurationAgent.DeleteWindowPosSize(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IConfigurationAgent.DeleteWindowPosSize(System.Int32)
  id: DeleteWindowPosSize(System.Int32)
  parent: SuperOffice.CRM.Services.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: DeleteWindowPosSize(Int32)
  nameWithType: IConfigurationAgent.DeleteWindowPosSize(Int32)
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.DeleteWindowPosSize(System.Int32)
  type: Method
  source:
    path: SuperOffice.DCF.Services
    isExternal: true
  assemblies:
  - SuperOffice.DCF.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nDeletes a window and dialog position and size setting.\n"
  syntax:
    content: void DeleteWindowPosSize(int windowPosSizeId)
    parameters:
    - id: windowPosSizeId
      type: System.Int32
      description: Id of the window and dialog position and size settings item.
    content.vb: Sub DeleteWindowPosSize(windowPosSizeId As Integer)
  overload: SuperOffice.CRM.Services.IConfigurationAgent.DeleteWindowPosSize*
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetWindowPosSizeList(System.Int32[])
  commentId: M:SuperOffice.CRM.Services.IConfigurationAgent.GetWindowPosSizeList(System.Int32[])
  id: GetWindowPosSizeList(System.Int32[])
  parent: SuperOffice.CRM.Services.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetWindowPosSizeList(Int32[])
  nameWithType: IConfigurationAgent.GetWindowPosSizeList(Int32[])
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetWindowPosSizeList(System.Int32[])
  type: Method
  source:
    path: SuperOffice.DCF.Services
    isExternal: true
  assemblies:
  - SuperOffice.DCF.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets an array of WindowPosSize objects.                        \n"
  syntax:
    content: WindowPosSize[] GetWindowPosSizeList(int[] windowPosSizeIds)
    parameters:
    - id: windowPosSizeIds
      type: System.Int32[]
      description: The identifiers of the WindowPosSize object
    return:
      type: SuperOffice.CRM.Services.WindowPosSize[]
      description: Array of WindowPosSize objects
    content.vb: Function GetWindowPosSizeList(windowPosSizeIds As Integer()) As WindowPosSize()
  overload: SuperOffice.CRM.Services.IConfigurationAgent.GetWindowPosSizeList*
  nameWithType.vb: IConfigurationAgent.GetWindowPosSizeList(Int32())
  fullName.vb: SuperOffice.CRM.Services.IConfigurationAgent.GetWindowPosSizeList(System.Int32())
  name.vb: GetWindowPosSizeList(Int32())
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetMyWindowPosSizes
  commentId: M:SuperOffice.CRM.Services.IConfigurationAgent.GetMyWindowPosSizes
  id: GetMyWindowPosSizes
  parent: SuperOffice.CRM.Services.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetMyWindowPosSizes()
  nameWithType: IConfigurationAgent.GetMyWindowPosSizes()
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetMyWindowPosSizes()
  type: Method
  source:
    path: SuperOffice.DCF.Services
    isExternal: true
  assemblies:
  - SuperOffice.DCF.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets the window and dialog position and size settings belonging to the currently logged on user\n"
  syntax:
    content: WindowPosSize[] GetMyWindowPosSizes()
    return:
      type: SuperOffice.CRM.Services.WindowPosSize[]
      description: Array of window and dialog position and size settings
    content.vb: Function GetMyWindowPosSizes As WindowPosSize()
  overload: SuperOffice.CRM.Services.IConfigurationAgent.GetMyWindowPosSizes*
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetWindowPosSizesOnPersonId(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IConfigurationAgent.GetWindowPosSizesOnPersonId(System.Int32)
  id: GetWindowPosSizesOnPersonId(System.Int32)
  parent: SuperOffice.CRM.Services.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetWindowPosSizesOnPersonId(Int32)
  nameWithType: IConfigurationAgent.GetWindowPosSizesOnPersonId(Int32)
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetWindowPosSizesOnPersonId(System.Int32)
  type: Method
  source:
    path: SuperOffice.DCF.Services
    isExternal: true
  assemblies:
  - SuperOffice.DCF.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets the window and dialog position and size settings belonging to the specified person\n"
  syntax:
    content: WindowPosSize[] GetWindowPosSizesOnPersonId(int personId)
    parameters:
    - id: personId
      type: System.Int32
      description: Person id of the associate owning these window settings
    return:
      type: SuperOffice.CRM.Services.WindowPosSize[]
      description: Array of window and dialog position and size settings
    content.vb: Function GetWindowPosSizesOnPersonId(personId As Integer) As WindowPosSize()
  overload: SuperOffice.CRM.Services.IConfigurationAgent.GetWindowPosSizesOnPersonId*
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetWindowPosSizesOnAssociateId(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IConfigurationAgent.GetWindowPosSizesOnAssociateId(System.Int32)
  id: GetWindowPosSizesOnAssociateId(System.Int32)
  parent: SuperOffice.CRM.Services.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetWindowPosSizesOnAssociateId(Int32)
  nameWithType: IConfigurationAgent.GetWindowPosSizesOnAssociateId(Int32)
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetWindowPosSizesOnAssociateId(System.Int32)
  type: Method
  source:
    path: SuperOffice.DCF.Services
    isExternal: true
  assemblies:
  - SuperOffice.DCF.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets the window and dialog position and size settings belonging to the specified associate\n"
  syntax:
    content: WindowPosSize[] GetWindowPosSizesOnAssociateId(int associateId)
    parameters:
    - id: associateId
      type: System.Int32
      description: Associate id of the Associate/Person owning these window settings
    return:
      type: SuperOffice.CRM.Services.WindowPosSize[]
      description: Array of window and dialog position and size settings
    content.vb: Function GetWindowPosSizesOnAssociateId(associateId As Integer) As WindowPosSize()
  overload: SuperOffice.CRM.Services.IConfigurationAgent.GetWindowPosSizesOnAssociateId*
- uid: SuperOffice.CRM.Services.IConfigurationAgent.SaveWindowPosSizes(SuperOffice.CRM.Services.WindowPosSize[])
  commentId: M:SuperOffice.CRM.Services.IConfigurationAgent.SaveWindowPosSizes(SuperOffice.CRM.Services.WindowPosSize[])
  id: SaveWindowPosSizes(SuperOffice.CRM.Services.WindowPosSize[])
  parent: SuperOffice.CRM.Services.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: SaveWindowPosSizes(WindowPosSize[])
  nameWithType: IConfigurationAgent.SaveWindowPosSizes(WindowPosSize[])
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.SaveWindowPosSizes(SuperOffice.CRM.Services.WindowPosSize[])
  type: Method
  source:
    path: SuperOffice.DCF.Services
    isExternal: true
  assemblies:
  - SuperOffice.DCF.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSaves a set of window and dialog position and size settings.\n"
  syntax:
    content: WindowPosSize[] SaveWindowPosSizes(WindowPosSize[] windowPosSizes)
    parameters:
    - id: windowPosSizes
      type: SuperOffice.CRM.Services.WindowPosSize[]
      description: The items that are saved
    return:
      type: SuperOffice.CRM.Services.WindowPosSize[]
      description: The saved items
    content.vb: Function SaveWindowPosSizes(windowPosSizes As WindowPosSize()) As WindowPosSize()
  overload: SuperOffice.CRM.Services.IConfigurationAgent.SaveWindowPosSizes*
  nameWithType.vb: IConfigurationAgent.SaveWindowPosSizes(WindowPosSize())
  fullName.vb: SuperOffice.CRM.Services.IConfigurationAgent.SaveWindowPosSizes(SuperOffice.CRM.Services.WindowPosSize())
  name.vb: SaveWindowPosSizes(WindowPosSize())
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetSystemEventEntity(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IConfigurationAgent.GetSystemEventEntity(System.Int32)
  id: GetSystemEventEntity(System.Int32)
  parent: SuperOffice.CRM.Services.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetSystemEventEntity(Int32)
  nameWithType: IConfigurationAgent.GetSystemEventEntity(Int32)
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetSystemEventEntity(System.Int32)
  type: Method
  source:
    path: SuperOffice.DCF.Services
    isExternal: true
  assemblies:
  - SuperOffice.DCF.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets a SystemEventEntity object.                        \n"
  syntax:
    content: SystemEventEntity GetSystemEventEntity(int systemEventEntityId)
    parameters:
    - id: systemEventEntityId
      type: System.Int32
      description: The identifier of the SystemEventEntity object
    return:
      type: SuperOffice.CRM.Services.SystemEventEntity
      description: SystemEventEntity
    content.vb: Function GetSystemEventEntity(systemEventEntityId As Integer) As SystemEventEntity
  overload: SuperOffice.CRM.Services.IConfigurationAgent.GetSystemEventEntity*
- uid: SuperOffice.CRM.Services.IConfigurationAgent.ExistsSystemEvent(System.String)
  commentId: M:SuperOffice.CRM.Services.IConfigurationAgent.ExistsSystemEvent(System.String)
  id: ExistsSystemEvent(System.String)
  parent: SuperOffice.CRM.Services.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: ExistsSystemEvent(String)
  nameWithType: IConfigurationAgent.ExistsSystemEvent(String)
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.ExistsSystemEvent(System.String)
  type: Method
  source:
    path: SuperOffice.DCF.Services
    isExternal: true
  assemblies:
  - SuperOffice.DCF.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nIs there a system event with the given key?\n"
  syntax:
    content: bool ExistsSystemEvent(string key)
    parameters:
    - id: key
      type: System.String
      description: The key to match on
    return:
      type: System.Boolean
      description: The system event
    content.vb: Function ExistsSystemEvent(key As String) As Boolean
  overload: SuperOffice.CRM.Services.IConfigurationAgent.ExistsSystemEvent*
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetConfigurableScreenDelta(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IConfigurationAgent.GetConfigurableScreenDelta(System.Int32)
  id: GetConfigurableScreenDelta(System.Int32)
  parent: SuperOffice.CRM.Services.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetConfigurableScreenDelta(Int32)
  nameWithType: IConfigurationAgent.GetConfigurableScreenDelta(Int32)
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetConfigurableScreenDelta(System.Int32)
  type: Method
  source:
    path: SuperOffice.DCF.Services
    isExternal: true
  assemblies:
  - SuperOffice.DCF.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets a ConfigurableScreenDelta object.                        \n"
  syntax:
    content: ConfigurableScreenDelta GetConfigurableScreenDelta(int configurableScreenDeltaId)
    parameters:
    - id: configurableScreenDeltaId
      type: System.Int32
      description: The identifier of the ConfigurableScreenDelta object
    return:
      type: SuperOffice.CRM.Services.ConfigurableScreenDelta
      description: ConfigurableScreenDelta
    content.vb: Function GetConfigurableScreenDelta(configurableScreenDeltaId As Integer) As ConfigurableScreenDelta
  overload: SuperOffice.CRM.Services.IConfigurationAgent.GetConfigurableScreenDelta*
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetScreenConfigurationDeltas
  commentId: M:SuperOffice.CRM.Services.IConfigurationAgent.GetScreenConfigurationDeltas
  id: GetScreenConfigurationDeltas
  parent: SuperOffice.CRM.Services.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetScreenConfigurationDeltas()
  nameWithType: IConfigurationAgent.GetScreenConfigurationDeltas()
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetScreenConfigurationDeltas()
  type: Method
  source:
    path: SuperOffice.DCF.Services
    isExternal: true
  assemblies:
  - SuperOffice.DCF.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nThis method will return a json with all deltas for screen\n"
  syntax:
    content: string GetScreenConfigurationDeltas()
    return:
      type: System.String
      description: A string with all recipe deltas in json for logged in associate
    content.vb: Function GetScreenConfigurationDeltas As String
  overload: SuperOffice.CRM.Services.IConfigurationAgent.GetScreenConfigurationDeltas*
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetScreenConfigurationDelta(SuperOffice.Data.DeltaType,SuperOffice.Data.DeltaState)
  commentId: M:SuperOffice.CRM.Services.IConfigurationAgent.GetScreenConfigurationDelta(SuperOffice.Data.DeltaType,SuperOffice.Data.DeltaState)
  id: GetScreenConfigurationDelta(SuperOffice.Data.DeltaType,SuperOffice.Data.DeltaState)
  parent: SuperOffice.CRM.Services.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetScreenConfigurationDelta(DeltaType, DeltaState)
  nameWithType: IConfigurationAgent.GetScreenConfigurationDelta(DeltaType, DeltaState)
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetScreenConfigurationDelta(SuperOffice.Data.DeltaType, SuperOffice.Data.DeltaState)
  type: Method
  source:
    path: SuperOffice.DCF.Services
    isExternal: true
  assemblies:
  - SuperOffice.DCF.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nThis method will return a json with all deltas for screen\n"
  syntax:
    content: string GetScreenConfigurationDelta(DeltaType deltaType, DeltaState deltaState)
    parameters:
    - id: deltaType
      type: SuperOffice.Data.DeltaType
      description: 'The recipe in json for this DeltaType: System, WebPanel, CustomFields, Custom...'
    - id: deltaState
      type: SuperOffice.Data.DeltaState
      description: Draft or published or None
    return:
      type: System.String
      description: A string with recipe delta in json for logged in associate of given deltatype
    content.vb: Function GetScreenConfigurationDelta(deltaType As DeltaType, deltaState As DeltaState) As String
  overload: SuperOffice.CRM.Services.IConfigurationAgent.GetScreenConfigurationDelta*
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetConfigurableScreenDeltasByDelta(SuperOffice.CRM.Services.ConfigurableScreenDelta)
  commentId: M:SuperOffice.CRM.Services.IConfigurationAgent.GetConfigurableScreenDeltasByDelta(SuperOffice.CRM.Services.ConfigurableScreenDelta)
  id: GetConfigurableScreenDeltasByDelta(SuperOffice.CRM.Services.ConfigurableScreenDelta)
  parent: SuperOffice.CRM.Services.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetConfigurableScreenDeltasByDelta(ConfigurableScreenDelta)
  nameWithType: IConfigurationAgent.GetConfigurableScreenDeltasByDelta(ConfigurableScreenDelta)
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetConfigurableScreenDeltasByDelta(SuperOffice.CRM.Services.ConfigurableScreenDelta)
  type: Method
  source:
    path: SuperOffice.DCF.Services
    isExternal: true
  assemblies:
  - SuperOffice.DCF.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nThis method will return a configurablescreen delta matching the properties received from the incomming delta\n"
  syntax:
    content: ConfigurableScreenDelta[] GetConfigurableScreenDeltasByDelta(ConfigurableScreenDelta configurableScreenDelta)
    parameters:
    - id: configurableScreenDelta
      type: SuperOffice.CRM.Services.ConfigurableScreenDelta
      description: A delta populated with wanted properties
    return:
      type: SuperOffice.CRM.Services.ConfigurableScreenDelta[]
      description: An array of deltas matching the values of the incomming parameter-delta
    content.vb: Function GetConfigurableScreenDeltasByDelta(configurableScreenDelta As ConfigurableScreenDelta) As ConfigurableScreenDelta()
  overload: SuperOffice.CRM.Services.IConfigurationAgent.GetConfigurableScreenDeltasByDelta*
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetConfigurableScreenDeltasByQuery(SuperOffice.CRM.Services.DeltaQuery)
  commentId: M:SuperOffice.CRM.Services.IConfigurationAgent.GetConfigurableScreenDeltasByQuery(SuperOffice.CRM.Services.DeltaQuery)
  id: GetConfigurableScreenDeltasByQuery(SuperOffice.CRM.Services.DeltaQuery)
  parent: SuperOffice.CRM.Services.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: GetConfigurableScreenDeltasByQuery(DeltaQuery)
  nameWithType: IConfigurationAgent.GetConfigurableScreenDeltasByQuery(DeltaQuery)
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetConfigurableScreenDeltasByQuery(SuperOffice.CRM.Services.DeltaQuery)
  type: Method
  source:
    path: SuperOffice.DCF.Services
    isExternal: true
  assemblies:
  - SuperOffice.DCF.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nThis method will return a configurablescreen delta matching the properties received from the incomming query\n"
  syntax:
    content: ConfigurableScreenDelta[] GetConfigurableScreenDeltasByQuery(DeltaQuery deltaQuery)
    parameters:
    - id: deltaQuery
      type: SuperOffice.CRM.Services.DeltaQuery
      description: An object populated with wanted properties for the deltas to return
    return:
      type: SuperOffice.CRM.Services.ConfigurableScreenDelta[]
      description: An array of deltas matching the values of the incomming query
    content.vb: Function GetConfigurableScreenDeltasByQuery(deltaQuery As DeltaQuery) As ConfigurableScreenDelta()
  overload: SuperOffice.CRM.Services.IConfigurationAgent.GetConfigurableScreenDeltasByQuery*
- uid: SuperOffice.CRM.Services.IConfigurationAgent.RebuildUdefDeltas
  commentId: M:SuperOffice.CRM.Services.IConfigurationAgent.RebuildUdefDeltas
  id: RebuildUdefDeltas
  parent: SuperOffice.CRM.Services.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: RebuildUdefDeltas()
  nameWithType: IConfigurationAgent.RebuildUdefDeltas()
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.RebuildUdefDeltas()
  type: Method
  source:
    path: SuperOffice.DCF.Services
    isExternal: true
  assemblies:
  - SuperOffice.DCF.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nFlush and rebuild userdefined field deltas. Mostly used after publishing udefs or adding/editing Customer Service extrafields\n"
  syntax:
    content: void RebuildUdefDeltas()
    content.vb: Sub RebuildUdefDeltas
  overload: SuperOffice.CRM.Services.IConfigurationAgent.RebuildUdefDeltas*
- uid: SuperOffice.CRM.Services.IConfigurationAgent.RebuildWebpanelDeltas
  commentId: M:SuperOffice.CRM.Services.IConfigurationAgent.RebuildWebpanelDeltas
  id: RebuildWebpanelDeltas
  parent: SuperOffice.CRM.Services.IConfigurationAgent
  langs:
  - csharp
  - vb
  name: RebuildWebpanelDeltas()
  nameWithType: IConfigurationAgent.RebuildWebpanelDeltas()
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.RebuildWebpanelDeltas()
  type: Method
  source:
    path: SuperOffice.DCF.Services
    isExternal: true
  assemblies:
  - SuperOffice.DCF.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nFlush and rebuild webpanel deltas. Mostly used after adding/editing webpanels or change group visibility of them\n"
  syntax:
    content: void RebuildWebpanelDeltas()
    content.vb: Sub RebuildWebpanelDeltas
  overload: SuperOffice.CRM.Services.IConfigurationAgent.RebuildWebpanelDeltas*
references:
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
- uid: SuperOffice.CRM.Services.IConfigurationAgent.CreateDefaultDiaryViewEntity*
  commentId: Overload:SuperOffice.CRM.Services.IConfigurationAgent.CreateDefaultDiaryViewEntity
  isExternal: true
  name: CreateDefaultDiaryViewEntity
  nameWithType: IConfigurationAgent.CreateDefaultDiaryViewEntity
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.CreateDefaultDiaryViewEntity
- uid: SuperOffice.CRM.Services.DiaryViewEntity
  commentId: T:SuperOffice.CRM.Services.DiaryViewEntity
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: DiaryViewEntity
  nameWithType: DiaryViewEntity
  fullName: SuperOffice.CRM.Services.DiaryViewEntity
- uid: SuperOffice.CRM.Services.IConfigurationAgent.SaveDiaryViewEntity*
  commentId: Overload:SuperOffice.CRM.Services.IConfigurationAgent.SaveDiaryViewEntity
  isExternal: true
  name: SaveDiaryViewEntity
  nameWithType: IConfigurationAgent.SaveDiaryViewEntity
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.SaveDiaryViewEntity
- uid: SuperOffice.CRM.Services.IConfigurationAgent.DeleteDiaryViewEntity*
  commentId: Overload:SuperOffice.CRM.Services.IConfigurationAgent.DeleteDiaryViewEntity
  isExternal: true
  name: DeleteDiaryViewEntity
  nameWithType: IConfigurationAgent.DeleteDiaryViewEntity
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.DeleteDiaryViewEntity
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Services.IConfigurationAgent.CreateDefaultSystemEventEntity*
  commentId: Overload:SuperOffice.CRM.Services.IConfigurationAgent.CreateDefaultSystemEventEntity
  isExternal: true
  name: CreateDefaultSystemEventEntity
  nameWithType: IConfigurationAgent.CreateDefaultSystemEventEntity
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.CreateDefaultSystemEventEntity
- uid: SuperOffice.CRM.Services.SystemEventEntity
  commentId: T:SuperOffice.CRM.Services.SystemEventEntity
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: SystemEventEntity
  nameWithType: SystemEventEntity
  fullName: SuperOffice.CRM.Services.SystemEventEntity
- uid: SuperOffice.CRM.Services.IConfigurationAgent.SaveSystemEventEntity*
  commentId: Overload:SuperOffice.CRM.Services.IConfigurationAgent.SaveSystemEventEntity
  isExternal: true
  name: SaveSystemEventEntity
  nameWithType: IConfigurationAgent.SaveSystemEventEntity
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.SaveSystemEventEntity
- uid: SuperOffice.CRM.Services.IConfigurationAgent.DeleteSystemEventEntity*
  commentId: Overload:SuperOffice.CRM.Services.IConfigurationAgent.DeleteSystemEventEntity
  isExternal: true
  name: DeleteSystemEventEntity
  nameWithType: IConfigurationAgent.DeleteSystemEventEntity
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.DeleteSystemEventEntity
- uid: SuperOffice.CRM.Services.IConfigurationAgent.CreateDefaultConfigurableScreenDelta*
  commentId: Overload:SuperOffice.CRM.Services.IConfigurationAgent.CreateDefaultConfigurableScreenDelta
  isExternal: true
  name: CreateDefaultConfigurableScreenDelta
  nameWithType: IConfigurationAgent.CreateDefaultConfigurableScreenDelta
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.CreateDefaultConfigurableScreenDelta
- uid: SuperOffice.CRM.Services.ConfigurableScreenDelta
  commentId: T:SuperOffice.CRM.Services.ConfigurableScreenDelta
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: ConfigurableScreenDelta
  nameWithType: ConfigurableScreenDelta
  fullName: SuperOffice.CRM.Services.ConfigurableScreenDelta
- uid: SuperOffice.CRM.Services.IConfigurationAgent.SaveConfigurableScreenDelta*
  commentId: Overload:SuperOffice.CRM.Services.IConfigurationAgent.SaveConfigurableScreenDelta
  isExternal: true
  name: SaveConfigurableScreenDelta
  nameWithType: IConfigurationAgent.SaveConfigurableScreenDelta
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.SaveConfigurableScreenDelta
- uid: SuperOffice.CRM.Services.IConfigurationAgent.DeleteConfigurableScreenDelta*
  commentId: Overload:SuperOffice.CRM.Services.IConfigurationAgent.DeleteConfigurableScreenDelta
  isExternal: true
  name: DeleteConfigurableScreenDelta
  nameWithType: IConfigurationAgent.DeleteConfigurableScreenDelta
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.DeleteConfigurableScreenDelta
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetApplicationConfiguration*
  commentId: Overload:SuperOffice.CRM.Services.IConfigurationAgent.GetApplicationConfiguration
  isExternal: true
  name: GetApplicationConfiguration
  nameWithType: IConfigurationAgent.GetApplicationConfiguration
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetApplicationConfiguration
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetPageConfiguration*
  commentId: Overload:SuperOffice.CRM.Services.IConfigurationAgent.GetPageConfiguration
  isExternal: true
  name: GetPageConfiguration
  nameWithType: IConfigurationAgent.GetPageConfiguration
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetPageConfiguration
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetObjectMapping*
  commentId: Overload:SuperOffice.CRM.Services.IConfigurationAgent.GetObjectMapping
  isExternal: true
  name: GetObjectMapping
  nameWithType: IConfigurationAgent.GetObjectMapping
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetObjectMapping
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetFilterList*
  commentId: Overload:SuperOffice.CRM.Services.IConfigurationAgent.GetFilterList
  isExternal: true
  name: GetFilterList
  nameWithType: IConfigurationAgent.GetFilterList
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetFilterList
- uid: SuperOffice.CRM.Services.IConfigurationAgent.ClearConfigurationCache*
  commentId: Overload:SuperOffice.CRM.Services.IConfigurationAgent.ClearConfigurationCache
  isExternal: true
  name: ClearConfigurationCache
  nameWithType: IConfigurationAgent.ClearConfigurationCache
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.ClearConfigurationCache
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetAnyConfiguration*
  commentId: Overload:SuperOffice.CRM.Services.IConfigurationAgent.GetAnyConfiguration
  isExternal: true
  name: GetAnyConfiguration
  nameWithType: IConfigurationAgent.GetAnyConfiguration
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetAnyConfiguration
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetEMarketingUrl*
  commentId: Overload:SuperOffice.CRM.Services.IConfigurationAgent.GetEMarketingUrl
  isExternal: true
  name: GetEMarketingUrl
  nameWithType: IConfigurationAgent.GetEMarketingUrl
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetEMarketingUrl
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetCsProgramUrl*
  commentId: Overload:SuperOffice.CRM.Services.IConfigurationAgent.GetCsProgramUrl
  isExternal: true
  name: GetCsProgramUrl
  nameWithType: IConfigurationAgent.GetCsProgramUrl
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetCsProgramUrl
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetCSAuthUrl*
  commentId: Overload:SuperOffice.CRM.Services.IConfigurationAgent.GetCSAuthUrl
  isExternal: true
  name: GetCSAuthUrl
  nameWithType: IConfigurationAgent.GetCSAuthUrl
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetCSAuthUrl
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetCSRegistryValue*
  commentId: Overload:SuperOffice.CRM.Services.IConfigurationAgent.GetCSRegistryValue
  isExternal: true
  name: GetCSRegistryValue
  nameWithType: IConfigurationAgent.GetCSRegistryValue
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetCSRegistryValue
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetCSWwwFolder*
  commentId: Overload:SuperOffice.CRM.Services.IConfigurationAgent.GetCSWwwFolder
  isExternal: true
  name: GetCSWwwFolder
  nameWithType: IConfigurationAgent.GetCSWwwFolder
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetCSWwwFolder
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetRefreshedPageConfiguration*
  commentId: Overload:SuperOffice.CRM.Services.IConfigurationAgent.GetRefreshedPageConfiguration
  isExternal: true
  name: GetRefreshedPageConfiguration
  nameWithType: IConfigurationAgent.GetRefreshedPageConfiguration
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetRefreshedPageConfiguration
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetWwwUrl*
  commentId: Overload:SuperOffice.CRM.Services.IConfigurationAgent.GetWwwUrl
  isExternal: true
  name: GetWwwUrl
  nameWithType: IConfigurationAgent.GetWwwUrl
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetWwwUrl
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetHelpDispatcherUrl*
  commentId: Overload:SuperOffice.CRM.Services.IConfigurationAgent.GetHelpDispatcherUrl
  isExternal: true
  name: GetHelpDispatcherUrl
  nameWithType: IConfigurationAgent.GetHelpDispatcherUrl
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetHelpDispatcherUrl
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetWwwUrlForSMWeb*
  commentId: Overload:SuperOffice.CRM.Services.IConfigurationAgent.GetWwwUrlForSMWeb
  isExternal: true
  name: GetWwwUrlForSMWeb
  nameWithType: IConfigurationAgent.GetWwwUrlForSMWeb
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetWwwUrlForSMWeb
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetCsCgiUrlInternal*
  commentId: Overload:SuperOffice.CRM.Services.IConfigurationAgent.GetCsCgiUrlInternal
  isExternal: true
  name: GetCsCgiUrlInternal
  nameWithType: IConfigurationAgent.GetCsCgiUrlInternal
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetCsCgiUrlInternal
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetCRMUrl*
  commentId: Overload:SuperOffice.CRM.Services.IConfigurationAgent.GetCRMUrl
  isExternal: true
  name: GetCRMUrl
  nameWithType: IConfigurationAgent.GetCRMUrl
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetCRMUrl
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetEmailNumberOfDays*
  commentId: Overload:SuperOffice.CRM.Services.IConfigurationAgent.GetEmailNumberOfDays
  isExternal: true
  name: GetEmailNumberOfDays
  nameWithType: IConfigurationAgent.GetEmailNumberOfDays
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetEmailNumberOfDays
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetCustomerUrl*
  commentId: Overload:SuperOffice.CRM.Services.IConfigurationAgent.GetCustomerUrl
  isExternal: true
  name: GetCustomerUrl
  nameWithType: IConfigurationAgent.GetCustomerUrl
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetCustomerUrl
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetDiaryViewEntity*
  commentId: Overload:SuperOffice.CRM.Services.IConfigurationAgent.GetDiaryViewEntity
  isExternal: true
  name: GetDiaryViewEntity
  nameWithType: IConfigurationAgent.GetDiaryViewEntity
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetDiaryViewEntity
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetWindowPosSize*
  commentId: Overload:SuperOffice.CRM.Services.IConfigurationAgent.GetWindowPosSize
  isExternal: true
  name: GetWindowPosSize
  nameWithType: IConfigurationAgent.GetWindowPosSize
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetWindowPosSize
- uid: SuperOffice.CRM.Services.WindowPosSize
  commentId: T:SuperOffice.CRM.Services.WindowPosSize
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: WindowPosSize
  nameWithType: WindowPosSize
  fullName: SuperOffice.CRM.Services.WindowPosSize
- uid: SuperOffice.CRM.Services.IConfigurationAgent.SaveWindowPosSize*
  commentId: Overload:SuperOffice.CRM.Services.IConfigurationAgent.SaveWindowPosSize
  isExternal: true
  name: SaveWindowPosSize
  nameWithType: IConfigurationAgent.SaveWindowPosSize
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.SaveWindowPosSize
- uid: SuperOffice.CRM.Services.IConfigurationAgent.DeleteWindowPosSize*
  commentId: Overload:SuperOffice.CRM.Services.IConfigurationAgent.DeleteWindowPosSize
  isExternal: true
  name: DeleteWindowPosSize
  nameWithType: IConfigurationAgent.DeleteWindowPosSize
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.DeleteWindowPosSize
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetWindowPosSizeList*
  commentId: Overload:SuperOffice.CRM.Services.IConfigurationAgent.GetWindowPosSizeList
  isExternal: true
  name: GetWindowPosSizeList
  nameWithType: IConfigurationAgent.GetWindowPosSizeList
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetWindowPosSizeList
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.WindowPosSize[]
  isExternal: true
  name: WindowPosSize[]
  nameWithType: WindowPosSize[]
  fullName: SuperOffice.CRM.Services.WindowPosSize[]
  nameWithType.vb: WindowPosSize()
  fullName.vb: SuperOffice.CRM.Services.WindowPosSize()
  name.vb: WindowPosSize()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.WindowPosSize
    name: WindowPosSize
    nameWithType: WindowPosSize
    fullName: SuperOffice.CRM.Services.WindowPosSize
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.Services.WindowPosSize
    name: WindowPosSize
    nameWithType: WindowPosSize
    fullName: SuperOffice.CRM.Services.WindowPosSize
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetMyWindowPosSizes*
  commentId: Overload:SuperOffice.CRM.Services.IConfigurationAgent.GetMyWindowPosSizes
  isExternal: true
  name: GetMyWindowPosSizes
  nameWithType: IConfigurationAgent.GetMyWindowPosSizes
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetMyWindowPosSizes
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetWindowPosSizesOnPersonId*
  commentId: Overload:SuperOffice.CRM.Services.IConfigurationAgent.GetWindowPosSizesOnPersonId
  isExternal: true
  name: GetWindowPosSizesOnPersonId
  nameWithType: IConfigurationAgent.GetWindowPosSizesOnPersonId
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetWindowPosSizesOnPersonId
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetWindowPosSizesOnAssociateId*
  commentId: Overload:SuperOffice.CRM.Services.IConfigurationAgent.GetWindowPosSizesOnAssociateId
  isExternal: true
  name: GetWindowPosSizesOnAssociateId
  nameWithType: IConfigurationAgent.GetWindowPosSizesOnAssociateId
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetWindowPosSizesOnAssociateId
- uid: SuperOffice.CRM.Services.IConfigurationAgent.SaveWindowPosSizes*
  commentId: Overload:SuperOffice.CRM.Services.IConfigurationAgent.SaveWindowPosSizes
  isExternal: true
  name: SaveWindowPosSizes
  nameWithType: IConfigurationAgent.SaveWindowPosSizes
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.SaveWindowPosSizes
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetSystemEventEntity*
  commentId: Overload:SuperOffice.CRM.Services.IConfigurationAgent.GetSystemEventEntity
  isExternal: true
  name: GetSystemEventEntity
  nameWithType: IConfigurationAgent.GetSystemEventEntity
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetSystemEventEntity
- uid: SuperOffice.CRM.Services.IConfigurationAgent.ExistsSystemEvent*
  commentId: Overload:SuperOffice.CRM.Services.IConfigurationAgent.ExistsSystemEvent
  isExternal: true
  name: ExistsSystemEvent
  nameWithType: IConfigurationAgent.ExistsSystemEvent
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.ExistsSystemEvent
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetConfigurableScreenDelta*
  commentId: Overload:SuperOffice.CRM.Services.IConfigurationAgent.GetConfigurableScreenDelta
  isExternal: true
  name: GetConfigurableScreenDelta
  nameWithType: IConfigurationAgent.GetConfigurableScreenDelta
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetConfigurableScreenDelta
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetScreenConfigurationDeltas*
  commentId: Overload:SuperOffice.CRM.Services.IConfigurationAgent.GetScreenConfigurationDeltas
  isExternal: true
  name: GetScreenConfigurationDeltas
  nameWithType: IConfigurationAgent.GetScreenConfigurationDeltas
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetScreenConfigurationDeltas
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetScreenConfigurationDelta*
  commentId: Overload:SuperOffice.CRM.Services.IConfigurationAgent.GetScreenConfigurationDelta
  isExternal: true
  name: GetScreenConfigurationDelta
  nameWithType: IConfigurationAgent.GetScreenConfigurationDelta
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetScreenConfigurationDelta
- uid: SuperOffice.Data.DeltaType
  isExternal: true
  name: DeltaType
  nameWithType: DeltaType
  fullName: SuperOffice.Data.DeltaType
- uid: SuperOffice.Data.DeltaState
  isExternal: true
  name: DeltaState
  nameWithType: DeltaState
  fullName: SuperOffice.Data.DeltaState
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetConfigurableScreenDeltasByDelta*
  commentId: Overload:SuperOffice.CRM.Services.IConfigurationAgent.GetConfigurableScreenDeltasByDelta
  isExternal: true
  name: GetConfigurableScreenDeltasByDelta
  nameWithType: IConfigurationAgent.GetConfigurableScreenDeltasByDelta
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetConfigurableScreenDeltasByDelta
- uid: SuperOffice.CRM.Services.ConfigurableScreenDelta[]
  isExternal: true
  name: ConfigurableScreenDelta[]
  nameWithType: ConfigurableScreenDelta[]
  fullName: SuperOffice.CRM.Services.ConfigurableScreenDelta[]
  nameWithType.vb: ConfigurableScreenDelta()
  fullName.vb: SuperOffice.CRM.Services.ConfigurableScreenDelta()
  name.vb: ConfigurableScreenDelta()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ConfigurableScreenDelta
    name: ConfigurableScreenDelta
    nameWithType: ConfigurableScreenDelta
    fullName: SuperOffice.CRM.Services.ConfigurableScreenDelta
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.Services.ConfigurableScreenDelta
    name: ConfigurableScreenDelta
    nameWithType: ConfigurableScreenDelta
    fullName: SuperOffice.CRM.Services.ConfigurableScreenDelta
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.IConfigurationAgent.GetConfigurableScreenDeltasByQuery*
  commentId: Overload:SuperOffice.CRM.Services.IConfigurationAgent.GetConfigurableScreenDeltasByQuery
  isExternal: true
  name: GetConfigurableScreenDeltasByQuery
  nameWithType: IConfigurationAgent.GetConfigurableScreenDeltasByQuery
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.GetConfigurableScreenDeltasByQuery
- uid: SuperOffice.CRM.Services.DeltaQuery
  commentId: T:SuperOffice.CRM.Services.DeltaQuery
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: DeltaQuery
  nameWithType: DeltaQuery
  fullName: SuperOffice.CRM.Services.DeltaQuery
- uid: SuperOffice.CRM.Services.IConfigurationAgent.RebuildUdefDeltas*
  commentId: Overload:SuperOffice.CRM.Services.IConfigurationAgent.RebuildUdefDeltas
  isExternal: true
  name: RebuildUdefDeltas
  nameWithType: IConfigurationAgent.RebuildUdefDeltas
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.RebuildUdefDeltas
- uid: SuperOffice.CRM.Services.IConfigurationAgent.RebuildWebpanelDeltas*
  commentId: Overload:SuperOffice.CRM.Services.IConfigurationAgent.RebuildWebpanelDeltas
  isExternal: true
  name: RebuildWebpanelDeltas
  nameWithType: IConfigurationAgent.RebuildWebpanelDeltas
  fullName: SuperOffice.CRM.Services.IConfigurationAgent.RebuildWebpanelDeltas
