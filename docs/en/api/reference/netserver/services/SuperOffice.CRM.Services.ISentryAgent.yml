### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Services.ISentryAgent
  commentId: T:SuperOffice.CRM.Services.ISentryAgent
  id: ISentryAgent
  parent: SuperOffice.CRM.Services
  children:
  - SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInAllDiariesAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInAssociateDiariesAsync(System.Int32[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInEachAssociatesDiaryAsync(System.Int32[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISentryAgent.GetFunctionRightsAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISentryAgent.GetNewTableRightAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISentryAgent.GetTableRightByContactOwnershipAsync(System.String,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISentryAgent.GetTableRightByOwnershipAsync(System.String,System.Int32,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISentryAgent.HasFunctionRightAsync(System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: ISentryAgent
  nameWithType: ISentryAgent
  fullName: SuperOffice.CRM.Services.ISentryAgent
  type: Interface
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nInterface for the Sentry Agent\nData and function right queries\n"
  example:
  - "\n<pre><code>  using SuperOffice;\n  using SuperOffice.CRM.Services;\n\n  using (SoSession mySession = SoSession.Authenticate(&quot;user&quot;, &quot;pass&quot;))\n  {\n     using (SentryAgent agent = new SentryAgent())\n     {\n        // call methods on agent here...\n     }\n  }</code></pre>\n"
  syntax:
    content: >-
      [Agent("Sentry Agent", "Interface for the Sentry Agent. Data and function right queries")]

      public interface ISentryAgent : IAgent
    content.vb: >-
      <Agent("Sentry Agent", "Interface for the Sentry Agent. Data and function right queries")>

      Public Interface ISentryAgent
          Inherits IAgent
  attributes:
  - type: SuperOffice.CRM.Services.Reflection.AgentAttribute
    ctor: SuperOffice.CRM.Services.Reflection.AgentAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Sentry Agent
    - type: System.String
      value: Interface for the Sentry Agent. Data and function right queries
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.CRM.Services.ISentryAgent.GetNewTableRightAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISentryAgent.GetNewTableRightAsync(System.String,System.Threading.CancellationToken)
  id: GetNewTableRightAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISentryAgent
  langs:
  - csharp
  - vb
  name: GetNewTableRightAsync(String, CancellationToken)
  nameWithType: ISentryAgent.GetNewTableRightAsync(String, CancellationToken)
  fullName: SuperOffice.CRM.Services.ISentryAgent.GetNewTableRightAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nReturns a TableRight for a new row based on tableName parameter.\n"
  syntax:
    content: Task<TableRight> GetNewTableRightAsync(string tableName, CancellationToken cancellationToken = null)
    parameters:
    - id: tableName
      type: System.String
      description: Name of the table to get the TableRights from
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Security.TableRight}
      description: The TableRight
    content.vb: Function GetNewTableRightAsync(tableName As String, cancellationToken As CancellationToken = Nothing) As Task(Of TableRight)
  overload: SuperOffice.CRM.Services.ISentryAgent.GetNewTableRightAsync*
- uid: SuperOffice.CRM.Services.ISentryAgent.GetTableRightByOwnershipAsync(System.String,System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISentryAgent.GetTableRightByOwnershipAsync(System.String,System.Int32,System.Int32,System.Threading.CancellationToken)
  id: GetTableRightByOwnershipAsync(System.String,System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISentryAgent
  langs:
  - csharp
  - vb
  name: GetTableRightByOwnershipAsync(String, Int32, Int32, CancellationToken)
  nameWithType: ISentryAgent.GetTableRightByOwnershipAsync(String, Int32, Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.ISentryAgent.GetTableRightByOwnershipAsync(System.String, System.Int32, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nReturn the TableRight from the relationship between the current user and the given user and group.\n"
  syntax:
    content: Task<TableRight> GetTableRightByOwnershipAsync(string tableName, int contactGroupId, int contactAssociateId, CancellationToken cancellationToken = null)
    parameters:
    - id: tableName
      type: System.String
      description: Name of the table to get the TableRights from.
    - id: contactGroupId
      type: System.Int32
      description: The user-group that the associate id is part of.
    - id: contactAssociateId
      type: System.Int32
      description: The associate id of the owner of the record
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Security.TableRight}
      description: The TableRight
    content.vb: Function GetTableRightByOwnershipAsync(tableName As String, contactGroupId As Integer, contactAssociateId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of TableRight)
  overload: SuperOffice.CRM.Services.ISentryAgent.GetTableRightByOwnershipAsync*
- uid: SuperOffice.CRM.Services.ISentryAgent.GetFunctionRightsAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISentryAgent.GetFunctionRightsAsync(System.Threading.CancellationToken)
  id: GetFunctionRightsAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISentryAgent
  langs:
  - csharp
  - vb
  name: GetFunctionRightsAsync(CancellationToken)
  nameWithType: ISentryAgent.GetFunctionRightsAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.ISentryAgent.GetFunctionRightsAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet a string array of all functions rights for the role of the current associate.\n"
  syntax:
    content: Task<string[]> GetFunctionRightsAsync(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String[]}
      description: String array with the technical names of assigned function rights
    content.vb: Function GetFunctionRightsAsync(cancellationToken As CancellationToken = Nothing) As Task(Of String())
  overload: SuperOffice.CRM.Services.ISentryAgent.GetFunctionRightsAsync*
- uid: SuperOffice.CRM.Services.ISentryAgent.HasFunctionRightAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISentryAgent.HasFunctionRightAsync(System.String,System.Threading.CancellationToken)
  id: HasFunctionRightAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISentryAgent
  langs:
  - csharp
  - vb
  name: HasFunctionRightAsync(String, CancellationToken)
  nameWithType: ISentryAgent.HasFunctionRightAsync(String, CancellationToken)
  fullName: SuperOffice.CRM.Services.ISentryAgent.HasFunctionRightAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet a boolean value indicating if the current user has the functional right.\n"
  syntax:
    content: Task<bool> HasFunctionRightAsync(string functionRight, CancellationToken cancellationToken = null)
    parameters:
    - id: functionRight
      type: System.String
      description: Function right to check.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Function HasFunctionRightAsync(functionRight As String, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.Services.ISentryAgent.HasFunctionRightAsync*
- uid: SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInAssociateDiariesAsync(System.Int32[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInAssociateDiariesAsync(System.Int32[],System.Threading.CancellationToken)
  id: CanCreateAppointmentInAssociateDiariesAsync(System.Int32[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISentryAgent
  langs:
  - csharp
  - vb
  name: CanCreateAppointmentInAssociateDiariesAsync(Int32[], CancellationToken)
  nameWithType: ISentryAgent.CanCreateAppointmentInAssociateDiariesAsync(Int32[], CancellationToken)
  fullName: SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInAssociateDiariesAsync(System.Int32[], System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCanCreateAppointmentInAssociateDiaries will check if the current associate can create appointments in diaries belonging to the associates listed in associateIds. CanCreateAppointmentInAssociateDiaries will only check against associates that are diary owners. If none of the associates listed in the associateIds parameter is a diary owner, the method will return true.\n"
  syntax:
    content: Task<bool> CanCreateAppointmentInAssociateDiariesAsync(int[] associateIds, CancellationToken cancellationToken = null)
    parameters:
    - id: associateIds
      type: System.Int32[]
      description: Array of associate ids to check.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: Returns true if the current associate can create appointments in the diary of all the other associates, otherwise false.
    content.vb: Function CanCreateAppointmentInAssociateDiariesAsync(associateIds As Integer(), cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInAssociateDiariesAsync*
  nameWithType.vb: ISentryAgent.CanCreateAppointmentInAssociateDiariesAsync(Int32(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInAssociateDiariesAsync(System.Int32(), System.Threading.CancellationToken)
  name.vb: CanCreateAppointmentInAssociateDiariesAsync(Int32(), CancellationToken)
- uid: SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInEachAssociatesDiaryAsync(System.Int32[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInEachAssociatesDiaryAsync(System.Int32[],System.Threading.CancellationToken)
  id: CanCreateAppointmentInEachAssociatesDiaryAsync(System.Int32[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISentryAgent
  langs:
  - csharp
  - vb
  name: CanCreateAppointmentInEachAssociatesDiaryAsync(Int32[], CancellationToken)
  nameWithType: ISentryAgent.CanCreateAppointmentInEachAssociatesDiaryAsync(Int32[], CancellationToken)
  fullName: SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInEachAssociatesDiaryAsync(System.Int32[], System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCanCreateAppointmentInEachAssociateDiary will check if the current associate can create appointments in diaries belonging to the associates listed in associateIds. CanCreateAppointmentInEachAssociateDiary will only check against associates that are diary owners. If none of the associates listed in the associateIds parameter is a diary owner, the method will return true.\n"
  syntax:
    content: Task<bool[]> CanCreateAppointmentInEachAssociatesDiaryAsync(int[] associateIds, CancellationToken cancellationToken = null)
    parameters:
    - id: associateIds
      type: System.Int32[]
      description: Array of associate ids to check.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean[]}
      description: Returns true if for each given associate if the current associate can create appointments in that diary, otherwise false.
    content.vb: Function CanCreateAppointmentInEachAssociatesDiaryAsync(associateIds As Integer(), cancellationToken As CancellationToken = Nothing) As Task(Of Boolean())
  overload: SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInEachAssociatesDiaryAsync*
  nameWithType.vb: ISentryAgent.CanCreateAppointmentInEachAssociatesDiaryAsync(Int32(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInEachAssociatesDiaryAsync(System.Int32(), System.Threading.CancellationToken)
  name.vb: CanCreateAppointmentInEachAssociatesDiaryAsync(Int32(), CancellationToken)
- uid: SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInAllDiariesAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInAllDiariesAsync(System.Threading.CancellationToken)
  id: CanCreateAppointmentInAllDiariesAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISentryAgent
  langs:
  - csharp
  - vb
  name: CanCreateAppointmentInAllDiariesAsync(CancellationToken)
  nameWithType: ISentryAgent.CanCreateAppointmentInAllDiariesAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInAllDiariesAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCanCreateAppointmentInAllDiaries will check if the current associate can create appointments in diaries belonging all other associates. CanCreateAppointmentInAssociateDiaries will only check against associates that are diary owners.\n"
  syntax:
    content: Task<bool> CanCreateAppointmentInAllDiariesAsync(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: Returns true if the current associate can create appointments in the diary of all the other associates, otherwise false.
    content.vb: Function CanCreateAppointmentInAllDiariesAsync(cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInAllDiariesAsync*
- uid: SuperOffice.CRM.Services.ISentryAgent.GetTableRightByContactOwnershipAsync(System.String,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISentryAgent.GetTableRightByContactOwnershipAsync(System.String,System.Int32,System.Threading.CancellationToken)
  id: GetTableRightByContactOwnershipAsync(System.String,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISentryAgent
  langs:
  - csharp
  - vb
  name: GetTableRightByContactOwnershipAsync(String, Int32, CancellationToken)
  nameWithType: ISentryAgent.GetTableRightByContactOwnershipAsync(String, Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.ISentryAgent.GetTableRightByContactOwnershipAsync(System.String, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nReturn the TableRight from the relationship between the current user and the given user and group.\n"
  syntax:
    content: Task<TableRight> GetTableRightByContactOwnershipAsync(string tableName, int contactId, CancellationToken cancellationToken = null)
    parameters:
    - id: tableName
      type: System.String
      description: Name of the table to get the TableRights from.
    - id: contactId
      type: System.Int32
      description: The owner contact.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Security.TableRight}
      description: The TableRight
    content.vb: Function GetTableRightByContactOwnershipAsync(tableName As String, contactId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of TableRight)
  overload: SuperOffice.CRM.Services.ISentryAgent.GetTableRightByContactOwnershipAsync*
references:
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
- uid: SuperOffice.CRM.Services.ISentryAgent.GetNewTableRightAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISentryAgent.GetNewTableRightAsync
  isExternal: true
  name: GetNewTableRightAsync
  nameWithType: ISentryAgent.GetNewTableRightAsync
  fullName: SuperOffice.CRM.Services.ISentryAgent.GetNewTableRightAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Security.TableRight}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Security.TableRight}'
  definition: System.Threading.Tasks.Task`1
  name: Task<TableRight>
  nameWithType: Task<TableRight>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Security.TableRight>
  nameWithType.vb: Task(Of TableRight)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Security.TableRight)
  name.vb: Task(Of TableRight)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Security.TableRight
    name: TableRight
    nameWithType: TableRight
    fullName: SuperOffice.CRM.Security.TableRight
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Security.TableRight
    name: TableRight
    nameWithType: TableRight
    fullName: SuperOffice.CRM.Security.TableRight
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.ISentryAgent.GetTableRightByOwnershipAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISentryAgent.GetTableRightByOwnershipAsync
  isExternal: true
  name: GetTableRightByOwnershipAsync
  nameWithType: ISentryAgent.GetTableRightByOwnershipAsync
  fullName: SuperOffice.CRM.Services.ISentryAgent.GetTableRightByOwnershipAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.CRM.Services.ISentryAgent.GetFunctionRightsAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISentryAgent.GetFunctionRightsAsync
  isExternal: true
  name: GetFunctionRightsAsync
  nameWithType: ISentryAgent.GetFunctionRightsAsync
  fullName: SuperOffice.CRM.Services.ISentryAgent.GetFunctionRightsAsync
- uid: System.Threading.Tasks.Task{System.String[]}
  commentId: '!:System.Threading.Tasks.Task{System.String[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<String[]>
  nameWithType: Task<String[]>
  fullName: System.Threading.Tasks.Task<System.String[]>
  nameWithType.vb: Task(Of String())
  fullName.vb: System.Threading.Tasks.Task(Of System.String())
  name.vb: Task(Of String())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.ISentryAgent.HasFunctionRightAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISentryAgent.HasFunctionRightAsync
  isExternal: true
  name: HasFunctionRightAsync
  nameWithType: ISentryAgent.HasFunctionRightAsync
  fullName: SuperOffice.CRM.Services.ISentryAgent.HasFunctionRightAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: '!:System.Threading.Tasks.Task{System.Boolean}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInAssociateDiariesAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInAssociateDiariesAsync
  isExternal: true
  name: CanCreateAppointmentInAssociateDiariesAsync
  nameWithType: ISentryAgent.CanCreateAppointmentInAssociateDiariesAsync
  fullName: SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInAssociateDiariesAsync
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInEachAssociatesDiaryAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInEachAssociatesDiaryAsync
  isExternal: true
  name: CanCreateAppointmentInEachAssociatesDiaryAsync
  nameWithType: ISentryAgent.CanCreateAppointmentInEachAssociatesDiaryAsync
  fullName: SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInEachAssociatesDiaryAsync
- uid: System.Threading.Tasks.Task{System.Boolean[]}
  commentId: '!:System.Threading.Tasks.Task{System.Boolean[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean[]>
  nameWithType: Task<Boolean[]>
  fullName: System.Threading.Tasks.Task<System.Boolean[]>
  nameWithType.vb: Task(Of Boolean())
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean())
  name.vb: Task(Of Boolean())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInAllDiariesAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInAllDiariesAsync
  isExternal: true
  name: CanCreateAppointmentInAllDiariesAsync
  nameWithType: ISentryAgent.CanCreateAppointmentInAllDiariesAsync
  fullName: SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInAllDiariesAsync
- uid: SuperOffice.CRM.Services.ISentryAgent.GetTableRightByContactOwnershipAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISentryAgent.GetTableRightByContactOwnershipAsync
  isExternal: true
  name: GetTableRightByContactOwnershipAsync
  nameWithType: ISentryAgent.GetTableRightByContactOwnershipAsync
  fullName: SuperOffice.CRM.Services.ISentryAgent.GetTableRightByContactOwnershipAsync
