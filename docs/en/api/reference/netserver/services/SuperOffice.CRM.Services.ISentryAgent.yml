### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Services.ISentryAgent
  commentId: T:SuperOffice.CRM.Services.ISentryAgent
  id: ISentryAgent
  parent: SuperOffice.CRM.Services
  children:
  - SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInAllDiariesAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInAssociateDiariesAsync(System.Int32[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInEachAssociatesDiaryAsync(System.Int32[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISentryAgent.GetFunctionRightsAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISentryAgent.GetNewTableRightAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISentryAgent.GetTableRightByContactOwnershipAsync(System.String,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISentryAgent.GetTableRightByOwnershipAsync(System.String,System.Int32,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISentryAgent.HasFunctionRightAsync(System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: ISentryAgent
  nameWithType: ISentryAgent
  fullName: SuperOffice.CRM.Services.ISentryAgent
  type: Interface
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Interface for the Sentry Agent

    Data and function right queries
  example:
  - >-
    <pre><code class="lang-csharp">using SuperOffice;

    using SuperOffice.CRM.Services;


    using (SoSession mySession = SoSession.Authenticate("user", "pass"))

    {
       using (SentryAgent agent = new SentryAgent())
       {
          // call methods on agent here...
       }
    }</code></pre>
  syntax:
    content: >-
      [Agent("Sentry Agent", "Interface for the Sentry Agent. Data and function right queries")]

      public interface ISentryAgent : IAgent
    content.vb: >-
      <Agent("Sentry Agent", "Interface for the Sentry Agent. Data and function right queries")>

      Public Interface ISentryAgent Inherits IAgent
  attributes:
  - type: SuperOffice.CRM.Services.Reflection.AgentAttribute
    ctor: SuperOffice.CRM.Services.Reflection.AgentAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Sentry Agent
    - type: System.String
      value: Interface for the Sentry Agent. Data and function right queries
- uid: SuperOffice.CRM.Services.ISentryAgent.GetNewTableRightAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISentryAgent.GetNewTableRightAsync(System.String,System.Threading.CancellationToken)
  id: GetNewTableRightAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISentryAgent
  langs:
  - csharp
  - vb
  name: GetNewTableRightAsync(string, CancellationToken)
  nameWithType: ISentryAgent.GetNewTableRightAsync(string, CancellationToken)
  fullName: SuperOffice.CRM.Services.ISentryAgent.GetNewTableRightAsync(string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Returns a TableRight for a new row based on tableName parameter.
  example: []
  syntax:
    content: Task<TableRight> GetNewTableRightAsync(string tableName, CancellationToken cancellationToken = default)
    parameters:
    - id: tableName
      type: System.String
      description: Name of the table to get the TableRights from
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Security.TableRight}
      description: The TableRight
    content.vb: Function GetNewTableRightAsync(tableName As String, cancellationToken As CancellationToken = Nothing) As Task(Of TableRight)
  overload: SuperOffice.CRM.Services.ISentryAgent.GetNewTableRightAsync*
  nameWithType.vb: ISentryAgent.GetNewTableRightAsync(String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ISentryAgent.GetNewTableRightAsync(String, System.Threading.CancellationToken)
  name.vb: GetNewTableRightAsync(String, CancellationToken)
- uid: SuperOffice.CRM.Services.ISentryAgent.GetTableRightByOwnershipAsync(System.String,System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISentryAgent.GetTableRightByOwnershipAsync(System.String,System.Int32,System.Int32,System.Threading.CancellationToken)
  id: GetTableRightByOwnershipAsync(System.String,System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISentryAgent
  langs:
  - csharp
  - vb
  name: GetTableRightByOwnershipAsync(string, int, int, CancellationToken)
  nameWithType: ISentryAgent.GetTableRightByOwnershipAsync(string, int, int, CancellationToken)
  fullName: SuperOffice.CRM.Services.ISentryAgent.GetTableRightByOwnershipAsync(string, int, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Return the TableRight from the relationship between the current user and the given user and group.
  example: []
  syntax:
    content: Task<TableRight> GetTableRightByOwnershipAsync(string tableName, int contactGroupId, int contactAssociateId, CancellationToken cancellationToken = default)
    parameters:
    - id: tableName
      type: System.String
      description: Name of the table to get the TableRights from.
    - id: contactGroupId
      type: System.Int32
      description: The user-group that the associate id is part of.
    - id: contactAssociateId
      type: System.Int32
      description: The associate id of the owner of the record
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Security.TableRight}
      description: The TableRight
    content.vb: Function GetTableRightByOwnershipAsync(tableName As String, contactGroupId As Integer, contactAssociateId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of TableRight)
  overload: SuperOffice.CRM.Services.ISentryAgent.GetTableRightByOwnershipAsync*
  nameWithType.vb: ISentryAgent.GetTableRightByOwnershipAsync(String, Integer, Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ISentryAgent.GetTableRightByOwnershipAsync(String, Integer, Integer, System.Threading.CancellationToken)
  name.vb: GetTableRightByOwnershipAsync(String, Integer, Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.ISentryAgent.GetFunctionRightsAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISentryAgent.GetFunctionRightsAsync(System.Threading.CancellationToken)
  id: GetFunctionRightsAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISentryAgent
  langs:
  - csharp
  - vb
  name: GetFunctionRightsAsync(CancellationToken)
  nameWithType: ISentryAgent.GetFunctionRightsAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.ISentryAgent.GetFunctionRightsAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get a string array of all functions rights for the role of the current associate.
  example: []
  syntax:
    content: Task<string[]> GetFunctionRightsAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String[]}
      description: String array with the technical names of assigned function rights
    content.vb: Function GetFunctionRightsAsync(cancellationToken As CancellationToken = Nothing) As Task(Of String())
  overload: SuperOffice.CRM.Services.ISentryAgent.GetFunctionRightsAsync*
- uid: SuperOffice.CRM.Services.ISentryAgent.HasFunctionRightAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISentryAgent.HasFunctionRightAsync(System.String,System.Threading.CancellationToken)
  id: HasFunctionRightAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISentryAgent
  langs:
  - csharp
  - vb
  name: HasFunctionRightAsync(string, CancellationToken)
  nameWithType: ISentryAgent.HasFunctionRightAsync(string, CancellationToken)
  fullName: SuperOffice.CRM.Services.ISentryAgent.HasFunctionRightAsync(string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get a boolean value indicating if the current user has the functional right.
  example: []
  syntax:
    content: Task<bool> HasFunctionRightAsync(string functionRight, CancellationToken cancellationToken = default)
    parameters:
    - id: functionRight
      type: System.String
      description: Function right to check.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: ''
    content.vb: Function HasFunctionRightAsync(functionRight As String, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.Services.ISentryAgent.HasFunctionRightAsync*
  nameWithType.vb: ISentryAgent.HasFunctionRightAsync(String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ISentryAgent.HasFunctionRightAsync(String, System.Threading.CancellationToken)
  name.vb: HasFunctionRightAsync(String, CancellationToken)
- uid: SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInAssociateDiariesAsync(System.Int32[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInAssociateDiariesAsync(System.Int32[],System.Threading.CancellationToken)
  id: CanCreateAppointmentInAssociateDiariesAsync(System.Int32[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISentryAgent
  langs:
  - csharp
  - vb
  name: CanCreateAppointmentInAssociateDiariesAsync(int[], CancellationToken)
  nameWithType: ISentryAgent.CanCreateAppointmentInAssociateDiariesAsync(int[], CancellationToken)
  fullName: SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInAssociateDiariesAsync(int[], System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: CanCreateAppointmentInAssociateDiaries will check if the current associate can create appointments in diaries belonging to the associates listed in associateIds. CanCreateAppointmentInAssociateDiaries will only check against associates that are diary owners. If none of the associates listed in the associateIds parameter is a diary owner, the method will return true.
  example: []
  syntax:
    content: Task<bool> CanCreateAppointmentInAssociateDiariesAsync(int[] associateIds, CancellationToken cancellationToken = default)
    parameters:
    - id: associateIds
      type: System.Int32[]
      description: Array of associate ids to check.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: Returns true if the current associate can create appointments in the diary of all the other associates, otherwise false.
    content.vb: Function CanCreateAppointmentInAssociateDiariesAsync(associateIds As Integer(), cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInAssociateDiariesAsync*
  nameWithType.vb: ISentryAgent.CanCreateAppointmentInAssociateDiariesAsync(Integer(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInAssociateDiariesAsync(Integer(), System.Threading.CancellationToken)
  name.vb: CanCreateAppointmentInAssociateDiariesAsync(Integer(), CancellationToken)
- uid: SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInEachAssociatesDiaryAsync(System.Int32[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInEachAssociatesDiaryAsync(System.Int32[],System.Threading.CancellationToken)
  id: CanCreateAppointmentInEachAssociatesDiaryAsync(System.Int32[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISentryAgent
  langs:
  - csharp
  - vb
  name: CanCreateAppointmentInEachAssociatesDiaryAsync(int[], CancellationToken)
  nameWithType: ISentryAgent.CanCreateAppointmentInEachAssociatesDiaryAsync(int[], CancellationToken)
  fullName: SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInEachAssociatesDiaryAsync(int[], System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: CanCreateAppointmentInEachAssociateDiary will check if the current associate can create appointments in diaries belonging to the associates listed in associateIds. CanCreateAppointmentInEachAssociateDiary will only check against associates that are diary owners. If none of the associates listed in the associateIds parameter is a diary owner, the method will return true.
  example: []
  syntax:
    content: Task<bool[]> CanCreateAppointmentInEachAssociatesDiaryAsync(int[] associateIds, CancellationToken cancellationToken = default)
    parameters:
    - id: associateIds
      type: System.Int32[]
      description: Array of associate ids to check.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean[]}
      description: Returns true if for each given associate if the current associate can create appointments in that diary, otherwise false.
    content.vb: Function CanCreateAppointmentInEachAssociatesDiaryAsync(associateIds As Integer(), cancellationToken As CancellationToken = Nothing) As Task(Of Boolean())
  overload: SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInEachAssociatesDiaryAsync*
  nameWithType.vb: ISentryAgent.CanCreateAppointmentInEachAssociatesDiaryAsync(Integer(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInEachAssociatesDiaryAsync(Integer(), System.Threading.CancellationToken)
  name.vb: CanCreateAppointmentInEachAssociatesDiaryAsync(Integer(), CancellationToken)
- uid: SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInAllDiariesAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInAllDiariesAsync(System.Threading.CancellationToken)
  id: CanCreateAppointmentInAllDiariesAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISentryAgent
  langs:
  - csharp
  - vb
  name: CanCreateAppointmentInAllDiariesAsync(CancellationToken)
  nameWithType: ISentryAgent.CanCreateAppointmentInAllDiariesAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInAllDiariesAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: CanCreateAppointmentInAllDiaries will check if the current associate can create appointments in diaries belonging all other associates. CanCreateAppointmentInAssociateDiaries will only check against associates that are diary owners.
  example: []
  syntax:
    content: Task<bool> CanCreateAppointmentInAllDiariesAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: Returns true if the current associate can create appointments in the diary of all the other associates, otherwise false.
    content.vb: Function CanCreateAppointmentInAllDiariesAsync(cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInAllDiariesAsync*
- uid: SuperOffice.CRM.Services.ISentryAgent.GetTableRightByContactOwnershipAsync(System.String,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISentryAgent.GetTableRightByContactOwnershipAsync(System.String,System.Int32,System.Threading.CancellationToken)
  id: GetTableRightByContactOwnershipAsync(System.String,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISentryAgent
  langs:
  - csharp
  - vb
  name: GetTableRightByContactOwnershipAsync(string, int, CancellationToken)
  nameWithType: ISentryAgent.GetTableRightByContactOwnershipAsync(string, int, CancellationToken)
  fullName: SuperOffice.CRM.Services.ISentryAgent.GetTableRightByContactOwnershipAsync(string, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Return the TableRight from the relationship between the current user and the given user and group.
  example: []
  syntax:
    content: Task<TableRight> GetTableRightByContactOwnershipAsync(string tableName, int contactId, CancellationToken cancellationToken = default)
    parameters:
    - id: tableName
      type: System.String
      description: Name of the table to get the TableRights from.
    - id: contactId
      type: System.Int32
      description: The owner contact.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Security.TableRight}
      description: The TableRight
    content.vb: Function GetTableRightByContactOwnershipAsync(tableName As String, contactId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of TableRight)
  overload: SuperOffice.CRM.Services.ISentryAgent.GetTableRightByContactOwnershipAsync*
  nameWithType.vb: ISentryAgent.GetTableRightByContactOwnershipAsync(String, Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ISentryAgent.GetTableRightByContactOwnershipAsync(String, Integer, System.Threading.CancellationToken)
  name.vb: GetTableRightByContactOwnershipAsync(String, Integer, CancellationToken)
references:
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
- uid: SuperOffice.CRM.Services.ISentryAgent.GetNewTableRightAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISentryAgent.GetNewTableRightAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ISentryAgent.html#SuperOffice_CRM_Services_ISentryAgent_GetNewTableRightAsync_System_String_System_Threading_CancellationToken_
  name: GetNewTableRightAsync
  nameWithType: ISentryAgent.GetNewTableRightAsync
  fullName: SuperOffice.CRM.Services.ISentryAgent.GetNewTableRightAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Security.TableRight}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Security.TableRight}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TableRight>
  nameWithType: Task<TableRight>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Security.TableRight>
  nameWithType.vb: Task(Of TableRight)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Security.TableRight)
  name.vb: Task(Of TableRight)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Security.TableRight
    name: TableRight
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Security.TableRight
    name: TableRight
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: SuperOffice.CRM.Services.ISentryAgent.GetTableRightByOwnershipAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISentryAgent.GetTableRightByOwnershipAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ISentryAgent.html#SuperOffice_CRM_Services_ISentryAgent_GetTableRightByOwnershipAsync_System_String_System_Int32_System_Int32_System_Threading_CancellationToken_
  name: GetTableRightByOwnershipAsync
  nameWithType: ISentryAgent.GetTableRightByOwnershipAsync
  fullName: SuperOffice.CRM.Services.ISentryAgent.GetTableRightByOwnershipAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: SuperOffice.CRM.Services.ISentryAgent.GetFunctionRightsAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISentryAgent.GetFunctionRightsAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ISentryAgent.html#SuperOffice_CRM_Services_ISentryAgent_GetFunctionRightsAsync_System_Threading_CancellationToken_
  name: GetFunctionRightsAsync
  nameWithType: ISentryAgent.GetFunctionRightsAsync
  fullName: SuperOffice.CRM.Services.ISentryAgent.GetFunctionRightsAsync
- uid: System.Threading.Tasks.Task{System.String[]}
  commentId: T:System.Threading.Tasks.Task{System.String[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<string[]>
  nameWithType: Task<string[]>
  fullName: System.Threading.Tasks.Task<string[]>
  nameWithType.vb: Task(Of String())
  fullName.vb: System.Threading.Tasks.Task(Of String())
  name.vb: Task(Of String())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.CRM.Services.ISentryAgent.HasFunctionRightAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISentryAgent.HasFunctionRightAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ISentryAgent.html#SuperOffice_CRM_Services_ISentryAgent_HasFunctionRightAsync_System_String_System_Threading_CancellationToken_
  name: HasFunctionRightAsync
  nameWithType: ISentryAgent.HasFunctionRightAsync
  fullName: SuperOffice.CRM.Services.ISentryAgent.HasFunctionRightAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInAssociateDiariesAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInAssociateDiariesAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ISentryAgent.html#SuperOffice_CRM_Services_ISentryAgent_CanCreateAppointmentInAssociateDiariesAsync_System_Int32___System_Threading_CancellationToken_
  name: CanCreateAppointmentInAssociateDiariesAsync
  nameWithType: ISentryAgent.CanCreateAppointmentInAssociateDiariesAsync
  fullName: SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInAssociateDiariesAsync
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInEachAssociatesDiaryAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInEachAssociatesDiaryAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ISentryAgent.html#SuperOffice_CRM_Services_ISentryAgent_CanCreateAppointmentInEachAssociatesDiaryAsync_System_Int32___System_Threading_CancellationToken_
  name: CanCreateAppointmentInEachAssociatesDiaryAsync
  nameWithType: ISentryAgent.CanCreateAppointmentInEachAssociatesDiaryAsync
  fullName: SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInEachAssociatesDiaryAsync
- uid: System.Threading.Tasks.Task{System.Boolean[]}
  commentId: T:System.Threading.Tasks.Task{System.Boolean[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool[]>
  nameWithType: Task<bool[]>
  fullName: System.Threading.Tasks.Task<bool[]>
  nameWithType.vb: Task(Of Boolean())
  fullName.vb: System.Threading.Tasks.Task(Of Boolean())
  name.vb: Task(Of Boolean())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInAllDiariesAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInAllDiariesAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ISentryAgent.html#SuperOffice_CRM_Services_ISentryAgent_CanCreateAppointmentInAllDiariesAsync_System_Threading_CancellationToken_
  name: CanCreateAppointmentInAllDiariesAsync
  nameWithType: ISentryAgent.CanCreateAppointmentInAllDiariesAsync
  fullName: SuperOffice.CRM.Services.ISentryAgent.CanCreateAppointmentInAllDiariesAsync
- uid: SuperOffice.CRM.Services.ISentryAgent.GetTableRightByContactOwnershipAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISentryAgent.GetTableRightByContactOwnershipAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ISentryAgent.html#SuperOffice_CRM_Services_ISentryAgent_GetTableRightByContactOwnershipAsync_System_String_System_Int32_System_Threading_CancellationToken_
  name: GetTableRightByContactOwnershipAsync
  nameWithType: ISentryAgent.GetTableRightByContactOwnershipAsync
  fullName: SuperOffice.CRM.Services.ISentryAgent.GetTableRightByContactOwnershipAsync
