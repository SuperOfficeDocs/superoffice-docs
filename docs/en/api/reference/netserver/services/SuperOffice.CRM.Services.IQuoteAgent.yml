### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Services.IQuoteAgent
  commentId: T:SuperOffice.CRM.Services.IQuoteAgent
  id: IQuoteAgent
  parent: SuperOffice.CRM.Services
  children:
  - SuperOffice.CRM.Services.IQuoteAgent.AddSaleTypeQuoteAttachment(System.Int32,System.Int32)
  - SuperOffice.CRM.Services.IQuoteAgent.ApproveQuoteVersion(System.Int32,System.String,System.Int32,System.String)
  - SuperOffice.CRM.Services.IQuoteAgent.CanConnectorProvideCapability(System.Int32,System.String)
  - SuperOffice.CRM.Services.IQuoteAgent.CopyQuoteAlternative(System.Int32,System.Int32,System.String)
  - SuperOffice.CRM.Services.IQuoteAgent.CopySuperOfficePriceList(System.Int32,System.String,System.DateTime,System.DateTime,System.Int32,System.Boolean)
  - SuperOffice.CRM.Services.IQuoteAgent.CreateAndSaveQuote(System.Int32,System.Int32,System.String)
  - SuperOffice.CRM.Services.IQuoteAgent.CreateAndSaveQuoteFromSale(System.Int32,System.Int32)
  - SuperOffice.CRM.Services.IQuoteAgent.CreateAndSaveQuoteVersion(System.Int32)
  - SuperOffice.CRM.Services.IQuoteAgent.CreateConnectionFromConnectorName(System.String)
  - SuperOffice.CRM.Services.IQuoteAgent.CreateDefaultPriceList
  - SuperOffice.CRM.Services.IQuoteAgent.CreateDefaultProduct
  - SuperOffice.CRM.Services.IQuoteAgent.CreateDefaultQuoteAlternative
  - SuperOffice.CRM.Services.IQuoteAgent.CreateOrUpdateQuoteVersionAttachments(System.Int32)
  - SuperOffice.CRM.Services.IQuoteAgent.CreateQuoteAlternative(System.Int32,System.String,System.String)
  - SuperOffice.CRM.Services.IQuoteAgent.CreateQuoteLine(System.Int32,System.String)
  - SuperOffice.CRM.Services.IQuoteAgent.CreateQuoteLineFromProduct(System.Int32,SuperOffice.CRM.Services.Product)
  - SuperOffice.CRM.Services.IQuoteAgent.DeleteConnection(System.Int32)
  - SuperOffice.CRM.Services.IQuoteAgent.DeletePriceList(System.Int32)
  - SuperOffice.CRM.Services.IQuoteAgent.DeleteProduct(System.Int32)
  - SuperOffice.CRM.Services.IQuoteAgent.DeleteQuote(System.Int32)
  - SuperOffice.CRM.Services.IQuoteAgent.DeleteQuoteAlternative(System.Int32)
  - SuperOffice.CRM.Services.IQuoteAgent.DeleteQuoteLine(System.Int32)
  - SuperOffice.CRM.Services.IQuoteAgent.DeleteQuoteLines(System.Int32[])
  - SuperOffice.CRM.Services.IQuoteAgent.DeleteSaleTypeQuoteAttachment(System.Int32)
  - SuperOffice.CRM.Services.IQuoteAgent.FindProduct(System.Int32,System.String,System.String)
  - SuperOffice.CRM.Services.IQuoteAgent.GenerateQuoteDocuments(System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.String)
  - SuperOffice.CRM.Services.IQuoteAgent.GetActivePriceLists(System.Int32,System.String)
  - SuperOffice.CRM.Services.IQuoteAgent.GetActivePriceListsByCurrencyId(System.Int32,System.Int32)
  - SuperOffice.CRM.Services.IQuoteAgent.GetAllAvailableQuoteConnections
  - SuperOffice.CRM.Services.IQuoteAgent.GetAllAvailableQuoteConnectionsWithPriceLists
  - SuperOffice.CRM.Services.IQuoteAgent.GetAllInstalledQuoteConnections
  - SuperOffice.CRM.Services.IQuoteAgent.GetAllPriceLists(System.Int32,System.String)
  - SuperOffice.CRM.Services.IQuoteAgent.GetAllPriceListsByCurrencyId(System.Int32,System.Int32)
  - SuperOffice.CRM.Services.IQuoteAgent.GetAllQuoteLineConfigurations
  - SuperOffice.CRM.Services.IQuoteAgent.GetConfigurationFields(System.Int32,System.String)
  - SuperOffice.CRM.Services.IQuoteAgent.GetConnection(System.Int32)
  - SuperOffice.CRM.Services.IQuoteAgent.GetConnectionConfigFields(System.Int32)
  - SuperOffice.CRM.Services.IQuoteAgent.GetConnectionsForAssociate(System.Int32)
  - SuperOffice.CRM.Services.IQuoteAgent.GetConnectionStartupErrors
  - SuperOffice.CRM.Services.IQuoteAgent.GetConnectionStartupResponse(System.Int32)
  - SuperOffice.CRM.Services.IQuoteAgent.GetConnectorCapabilities(System.Int32)
  - SuperOffice.CRM.Services.IQuoteAgent.GetConnectorCapabilityNames(System.Int32)
  - SuperOffice.CRM.Services.IQuoteAgent.GetExtraInfo(System.String)
  - SuperOffice.CRM.Services.IQuoteAgent.GetInUseQuoteLineConfigurations
  - SuperOffice.CRM.Services.IQuoteAgent.GetOrderConfirmation(System.Int32,System.Int32)
  - SuperOffice.CRM.Services.IQuoteAgent.GetOrderState(System.Int32)
  - SuperOffice.CRM.Services.IQuoteAgent.GetPriceList(System.Int32)
  - SuperOffice.CRM.Services.IQuoteAgent.GetProduct(System.Int32,System.String)
  - SuperOffice.CRM.Services.IQuoteAgent.GetProductFromDbId(System.Int32)
  - SuperOffice.CRM.Services.IQuoteAgent.GetProductImage(System.Int32,System.String,System.Int32)
  - SuperOffice.CRM.Services.IQuoteAgent.GetQuote(System.Int32)
  - SuperOffice.CRM.Services.IQuoteAgent.GetQuoteAlternative(System.Int32)
  - SuperOffice.CRM.Services.IQuoteAgent.GetQuoteAlternatives(System.Int32)
  - SuperOffice.CRM.Services.IQuoteAgent.GetQuoteEntity(System.Int32)
  - SuperOffice.CRM.Services.IQuoteAgent.GetQuoteEntityFromSaleId(System.Int32)
  - SuperOffice.CRM.Services.IQuoteAgent.GetQuoteFromSaleId(System.Int32)
  - SuperOffice.CRM.Services.IQuoteAgent.GetQuoteLine(System.Int32)
  - SuperOffice.CRM.Services.IQuoteAgent.GetQuoteLineConfiguration(System.Int32)
  - SuperOffice.CRM.Services.IQuoteAgent.GetQuoteLineConfigurationFromFieldName(System.String)
  - SuperOffice.CRM.Services.IQuoteAgent.GetQuoteLineImage(System.Int32,System.Int32)
  - SuperOffice.CRM.Services.IQuoteAgent.GetQuoteLines(System.Int32)
  - SuperOffice.CRM.Services.IQuoteAgent.GetQuoteList(System.String)
  - SuperOffice.CRM.Services.IQuoteAgent.GetQuoteVersion(System.Int32)
  - SuperOffice.CRM.Services.IQuoteAgent.GetQuoteVersions(System.Int32)
  - SuperOffice.CRM.Services.IQuoteAgent.GetQuoteVersionWorkflowButtonStates(System.Int32,System.Int32)
  - SuperOffice.CRM.Services.IQuoteAgent.GetQuoteVersionWorkflowImageState(System.Int32)
  - SuperOffice.CRM.Services.IQuoteAgent.GetQuoteVersionWorkflowState(System.Int32,System.Int32)
  - SuperOffice.CRM.Services.IQuoteAgent.GetQuoteVersionWorkflowStatusInfo(System.Int32)
  - SuperOffice.CRM.Services.IQuoteAgent.HasConnections
  - SuperOffice.CRM.Services.IQuoteAgent.IncludeQuoteVersionAttachment(System.Int32,System.Int32,System.Boolean)
  - SuperOffice.CRM.Services.IQuoteAgent.MoveQuoteLine(System.Int32,System.Boolean)
  - SuperOffice.CRM.Services.IQuoteAgent.PlaceOrder(System.Int32,System.Boolean,System.String,System.String,System.String)
  - SuperOffice.CRM.Services.IQuoteAgent.RecalculateQuoteAlternative(System.Int32)
  - SuperOffice.CRM.Services.IQuoteAgent.RecalculateQuoteLine(SuperOffice.CRM.Services.QuoteLine,System.String[])
  - SuperOffice.CRM.Services.IQuoteAgent.RejectQuoteVersion(System.Int32,System.String,System.Int32,System.String)
  - SuperOffice.CRM.Services.IQuoteAgent.RemoveProduct(System.Int32)
  - SuperOffice.CRM.Services.IQuoteAgent.RestoreConnection(System.Int32)
  - SuperOffice.CRM.Services.IQuoteAgent.SaveConnection(SuperOffice.CRM.Services.QuoteConnection)
  - SuperOffice.CRM.Services.IQuoteAgent.SaveConnectionConfigFields(System.Int32,SuperOffice.CRM.Services.StringDictionary)
  - SuperOffice.CRM.Services.IQuoteAgent.SavePriceList(SuperOffice.CRM.Services.PriceList)
  - SuperOffice.CRM.Services.IQuoteAgent.SaveProduct(SuperOffice.CRM.Services.Product)
  - SuperOffice.CRM.Services.IQuoteAgent.SaveQuote(SuperOffice.CRM.Services.Quote)
  - SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteAlternative(SuperOffice.CRM.Services.QuoteAlternative)
  - SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteEntity(SuperOffice.CRM.Services.QuoteEntity)
  - SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteLine(SuperOffice.CRM.Services.QuoteLine)
  - SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteLineConfiguration(SuperOffice.CRM.Services.QuoteLineConfiguration)
  - SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteLineConfigurations(SuperOffice.CRM.Services.QuoteLineConfiguration[])
  - SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteLineImage(System.Int32,System.Drawing.Image,System.Int32)
  - SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteLines(SuperOffice.CRM.Services.QuoteLine[])
  - SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteVersion(SuperOffice.CRM.Services.QuoteVersion)
  - SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteVersionNumber(System.Int32,System.String)
  - SuperOffice.CRM.Services.IQuoteAgent.SendQuoteVersion(System.Int32,System.DateTime,System.DateTime,System.String,System.String)
  - SuperOffice.CRM.Services.IQuoteAgent.TestConnection(System.String,SuperOffice.CRM.Services.StringDictionary)
  - SuperOffice.CRM.Services.IQuoteAgent.ToggleProductInAssortment(System.Int32)
  - SuperOffice.CRM.Services.IQuoteAgent.ToggleQuoteVersionAttachmentIncluded(System.Int32)
  - SuperOffice.CRM.Services.IQuoteAgent.ToggleSaleTypeQuoteAttachmentDefaultIncluded(System.Int32)
  - SuperOffice.CRM.Services.IQuoteAgent.UpdateQuoteVersionPrices(System.Int32)
  - SuperOffice.CRM.Services.IQuoteAgent.ValidateQuoteVersion(System.Int32,SuperOffice.Data.QuoteVersionButtonAction)
  langs:
  - csharp
  - vb
  name: IQuoteAgent
  nameWithType: IQuoteAgent
  fullName: SuperOffice.CRM.Services.IQuoteAgent
  type: Interface
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nInterface for the Quote Agent\nServices for the Quote Management feature, part of the Sale module\n"
  example:
  - "\n<pre><code>  using SuperOffice;\n  using SuperOffice.CRM.Services;\n\n  using (SoSession mySession = SoSession.Authenticate(&quot;user&quot;, &quot;pass&quot;))\n  {\n     using (QuoteAgent agent = new QuoteAgent())\n     {\n        // call methods on agent here...\n     }\n  }</code></pre>\n"
  syntax:
    content: >-
      [Agent("Quote Agent", "Interface for the Quote Agent. Services for the Quote Management feature, part of the Sale module")]

      public interface IQuoteAgent : IAgent
    content.vb: >-
      <Agent("Quote Agent", "Interface for the Quote Agent. Services for the Quote Management feature, part of the Sale module")>

      Public Interface IQuoteAgent

          Inherits IAgent
  attributes:
  - type: SuperOffice.CRM.Services.Reflection.AgentAttribute
    ctor: SuperOffice.CRM.Services.Reflection.AgentAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Quote Agent
    - type: System.String
      value: Interface for the Quote Agent. Services for the Quote Management feature, part of the Sale module
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.CRM.Services.IQuoteAgent.CreateDefaultPriceList
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.CreateDefaultPriceList
  id: CreateDefaultPriceList
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultPriceList()
  nameWithType: IQuoteAgent.CreateDefaultPriceList()
  fullName: SuperOffice.CRM.Services.IQuoteAgent.CreateDefaultPriceList()
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nLoading default values into a new PriceList.\nNetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: PriceList CreateDefaultPriceList()
    return:
      type: SuperOffice.CRM.Services.PriceList
      description: New PriceList with default values
    content.vb: Function CreateDefaultPriceList As PriceList
  overload: SuperOffice.CRM.Services.IQuoteAgent.CreateDefaultPriceList*
- uid: SuperOffice.CRM.Services.IQuoteAgent.SavePriceList(SuperOffice.CRM.Services.PriceList)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.SavePriceList(SuperOffice.CRM.Services.PriceList)
  id: SavePriceList(SuperOffice.CRM.Services.PriceList)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: SavePriceList(PriceList)
  nameWithType: IQuoteAgent.SavePriceList(PriceList)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.SavePriceList(SuperOffice.CRM.Services.PriceList)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nUpdates the existing PriceList or creates a new PriceList if the id parameter is empty\n"
  syntax:
    content: PriceList SavePriceList(PriceList priceList)
    parameters:
    - id: priceList
      type: SuperOffice.CRM.Services.PriceList
      description: The PriceList that is saved.
    return:
      type: SuperOffice.CRM.Services.PriceList
      description: New or updated PriceList
    content.vb: Function SavePriceList(priceList As PriceList) As PriceList
  overload: SuperOffice.CRM.Services.IQuoteAgent.SavePriceList*
- uid: SuperOffice.CRM.Services.IQuoteAgent.DeletePriceList(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.DeletePriceList(System.Int32)
  id: DeletePriceList(System.Int32)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: DeletePriceList(Int32)
  nameWithType: IQuoteAgent.DeletePriceList(Int32)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.DeletePriceList(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nDeletes the PriceList\n"
  syntax:
    content: void DeletePriceList(int priceListId)
    parameters:
    - id: priceListId
      type: System.Int32
      description: The identity of the PriceList
    content.vb: Sub DeletePriceList(priceListId As Integer)
  overload: SuperOffice.CRM.Services.IQuoteAgent.DeletePriceList*
- uid: SuperOffice.CRM.Services.IQuoteAgent.CreateDefaultProduct
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.CreateDefaultProduct
  id: CreateDefaultProduct
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultProduct()
  nameWithType: IQuoteAgent.CreateDefaultProduct()
  fullName: SuperOffice.CRM.Services.IQuoteAgent.CreateDefaultProduct()
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nLoading default values into a new Product.\nNetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: Product CreateDefaultProduct()
    return:
      type: SuperOffice.CRM.Services.Product
      description: New Product with default values
    content.vb: Function CreateDefaultProduct As Product
  overload: SuperOffice.CRM.Services.IQuoteAgent.CreateDefaultProduct*
- uid: SuperOffice.CRM.Services.IQuoteAgent.SaveProduct(SuperOffice.CRM.Services.Product)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.SaveProduct(SuperOffice.CRM.Services.Product)
  id: SaveProduct(SuperOffice.CRM.Services.Product)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: SaveProduct(Product)
  nameWithType: IQuoteAgent.SaveProduct(Product)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.SaveProduct(SuperOffice.CRM.Services.Product)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nUpdates the existing Product or creates a new Product if the id parameter is empty\n"
  syntax:
    content: Product SaveProduct(Product product)
    parameters:
    - id: product
      type: SuperOffice.CRM.Services.Product
      description: The Product that is saved.
    return:
      type: SuperOffice.CRM.Services.Product
      description: New or updated Product
    content.vb: Function SaveProduct(product As Product) As Product
  overload: SuperOffice.CRM.Services.IQuoteAgent.SaveProduct*
- uid: SuperOffice.CRM.Services.IQuoteAgent.DeleteProduct(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.DeleteProduct(System.Int32)
  id: DeleteProduct(System.Int32)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: DeleteProduct(Int32)
  nameWithType: IQuoteAgent.DeleteProduct(Int32)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.DeleteProduct(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nDeletes the Product\n"
  syntax:
    content: void DeleteProduct(int productId)
    parameters:
    - id: productId
      type: System.Int32
      description: The identity of the Product
    content.vb: Sub DeleteProduct(productId As Integer)
  overload: SuperOffice.CRM.Services.IQuoteAgent.DeleteProduct*
- uid: SuperOffice.CRM.Services.IQuoteAgent.CreateDefaultQuoteAlternative
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.CreateDefaultQuoteAlternative
  id: CreateDefaultQuoteAlternative
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultQuoteAlternative()
  nameWithType: IQuoteAgent.CreateDefaultQuoteAlternative()
  fullName: SuperOffice.CRM.Services.IQuoteAgent.CreateDefaultQuoteAlternative()
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nLoading default values into a new QuoteAlternative.\nNetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: QuoteAlternative CreateDefaultQuoteAlternative()
    return:
      type: SuperOffice.CRM.Services.QuoteAlternative
      description: New QuoteAlternative with default values
    content.vb: Function CreateDefaultQuoteAlternative As QuoteAlternative
  overload: SuperOffice.CRM.Services.IQuoteAgent.CreateDefaultQuoteAlternative*
- uid: SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteAlternative(SuperOffice.CRM.Services.QuoteAlternative)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteAlternative(SuperOffice.CRM.Services.QuoteAlternative)
  id: SaveQuoteAlternative(SuperOffice.CRM.Services.QuoteAlternative)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: SaveQuoteAlternative(QuoteAlternative)
  nameWithType: IQuoteAgent.SaveQuoteAlternative(QuoteAlternative)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteAlternative(SuperOffice.CRM.Services.QuoteAlternative)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nUpdates the existing QuoteAlternative or creates a new QuoteAlternative if the id parameter is empty\n"
  syntax:
    content: QuoteAlternative SaveQuoteAlternative(QuoteAlternative quoteAlternative)
    parameters:
    - id: quoteAlternative
      type: SuperOffice.CRM.Services.QuoteAlternative
      description: The QuoteAlternative that is saved.
    return:
      type: SuperOffice.CRM.Services.QuoteAlternative
      description: New or updated QuoteAlternative
    content.vb: Function SaveQuoteAlternative(quoteAlternative As QuoteAlternative) As QuoteAlternative
  overload: SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteAlternative*
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetConfigurationFields(System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.GetConfigurationFields(System.Int32,System.String)
  id: GetConfigurationFields(System.Int32,System.String)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: GetConfigurationFields(Int32, String)
  nameWithType: IQuoteAgent.GetConfigurationFields(Int32, String)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetConfigurationFields(System.Int32, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nUsed by ADMIN. Asks for metadata needed to populate admin dialog that takes in the information needed to create a connection to an ERP system. The values entered in the dialog are stored in SuperOffice db and used when InitializeConnector is called by the client.\n"
  syntax:
    content: FieldMetadataDictionary GetConfigurationFields(int connectionId, string connectorName)
    parameters:
    - id: connectionId
      type: System.Int32
      description: Id of an existing connection, if any. Initializes connection with current config values if non-zero.
    - id: connectorName
      type: System.String
      description: Name of the connector. Ignored if connectionId is non-zero.
    return:
      type: SuperOffice.CRM.Services.FieldMetadataDictionary
      description: carriers
    content.vb: Function GetConfigurationFields(connectionId As Integer, connectorName As String) As FieldMetadataDictionary
  overload: SuperOffice.CRM.Services.IQuoteAgent.GetConfigurationFields*
- uid: SuperOffice.CRM.Services.IQuoteAgent.TestConnection(System.String,SuperOffice.CRM.Services.StringDictionary)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.TestConnection(System.String,SuperOffice.CRM.Services.StringDictionary)
  id: TestConnection(System.String,SuperOffice.CRM.Services.StringDictionary)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: TestConnection(String, StringDictionary)
  nameWithType: IQuoteAgent.TestConnection(String, StringDictionary)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.TestConnection(System.String, SuperOffice.CRM.Services.StringDictionary)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nUsed by the Admin clients. Testing if the connection data is sufficient to get a connection with the ERP system. The Connector should try to do some operations to check if the connection has sufficient rights to run. The connection has not been created yet. TestConnection is called without InitializeConnector being called first.\n"
  syntax:
    content: PluginResponse TestConnection(string connectorName, StringDictionary connectionData)
    parameters:
    - id: connectorName
      type: System.String
      description: Name of the connector.
    - id: connectionData
      type: SuperOffice.CRM.Services.StringDictionary
      description: Basically the name/value collection of the configuration data requested to create a connection
    return:
      type: SuperOffice.CRM.Services.PluginResponse
      description: How the test went
    content.vb: Function TestConnection(connectorName As String, connectionData As StringDictionary) As PluginResponse
  overload: SuperOffice.CRM.Services.IQuoteAgent.TestConnection*
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetPriceList(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.GetPriceList(System.Int32)
  id: GetPriceList(System.Int32)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: GetPriceList(Int32)
  nameWithType: IQuoteAgent.GetPriceList(Int32)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetPriceList(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets a PriceList object.                        \n"
  syntax:
    content: PriceList GetPriceList(int priceListId)
    parameters:
    - id: priceListId
      type: System.Int32
      description: The identifier of the PriceList object
    return:
      type: SuperOffice.CRM.Services.PriceList
      description: PriceList
    content.vb: Function GetPriceList(priceListId As Integer) As PriceList
  overload: SuperOffice.CRM.Services.IQuoteAgent.GetPriceList*
- uid: SuperOffice.CRM.Services.IQuoteAgent.CopySuperOfficePriceList(System.Int32,System.String,System.DateTime,System.DateTime,System.Int32,System.Boolean)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.CopySuperOfficePriceList(System.Int32,System.String,System.DateTime,System.DateTime,System.Int32,System.Boolean)
  id: CopySuperOfficePriceList(System.Int32,System.String,System.DateTime,System.DateTime,System.Int32,System.Boolean)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: CopySuperOfficePriceList(Int32, String, DateTime, DateTime, Int32, Boolean)
  nameWithType: IQuoteAgent.CopySuperOfficePriceList(Int32, String, DateTime, DateTime, Int32, Boolean)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.CopySuperOfficePriceList(System.Int32, System.String, System.DateTime, System.DateTime, System.Int32, System.Boolean)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCreate a copy of a PriceList in the SuperOffice database\n"
  syntax:
    content: PriceList CopySuperOfficePriceList(int originalPriceListId, string newName, DateTime validFrom, DateTime validTo, int newCurrencyId, bool convertCurrency)
    parameters:
    - id: originalPriceListId
      type: System.Int32
      description: Id of the PriceList to be copied
    - id: newName
      type: System.String
      description: Name of the copied PriceList
    - id: validFrom
      type: System.DateTime
      description: Start date for the new pricelist.
    - id: validTo
      type: System.DateTime
      description: End date for the new pricelist.
    - id: newCurrencyId
      type: System.Int32
      description: Currency id of the copied PriceList. If 0 or the same as the original the copied products will keep their prices and the currency will be the same as the original.
    - id: convertCurrency
      type: System.Boolean
      description: If true, product prices will be recalculated to the new currency. If false, product prices will be set to zero.
    return:
      type: SuperOffice.CRM.Services.PriceList
      description: The copied PriceList
    content.vb: Function CopySuperOfficePriceList(originalPriceListId As Integer, newName As String, validFrom As Date, validTo As Date, newCurrencyId As Integer, convertCurrency As Boolean) As PriceList
  overload: SuperOffice.CRM.Services.IQuoteAgent.CopySuperOfficePriceList*
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetProductImage(System.Int32,System.String,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.GetProductImage(System.Int32,System.String,System.Int32)
  id: GetProductImage(System.Int32,System.String,System.Int32)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: GetProductImage(Int32, String, Int32)
  nameWithType: IQuoteAgent.GetProductImage(Int32, String, Int32)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetProductImage(System.Int32, System.String, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets an image connected to a product, from the ProductProvider\n"
  syntax:
    content: string GetProductImage(int quoteConnectionId, string eRPProductKey, int rank)
    parameters:
    - id: quoteConnectionId
      type: System.Int32
      description: The connection this product comes from.
    - id: eRPProductKey
      type: System.String
      description: 'Primary key of the Product in the ProductProvider '
    - id: rank
      type: System.Int32
      description: The rank of the image.
    return:
      type: System.String
      description: The base64 encoded image as a string.
    content.vb: Function GetProductImage(quoteConnectionId As Integer, eRPProductKey As String, rank As Integer) As String
  overload: SuperOffice.CRM.Services.IQuoteAgent.GetProductImage*
- uid: SuperOffice.CRM.Services.IQuoteAgent.FindProduct(System.Int32,System.String,System.String)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.FindProduct(System.Int32,System.String,System.String)
  id: FindProduct(System.Int32,System.String,System.String)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: FindProduct(Int32, String, String)
  nameWithType: IQuoteAgent.FindProduct(Int32, String, String)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.FindProduct(System.Int32, System.String, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets a product, from the ProductProvider\n"
  syntax:
    content: Product[] FindProduct(int quoteAlternativeId, string userInput, string priceListKey)
    parameters:
    - id: quoteAlternativeId
      type: System.Int32
      description: Quote alternative to search in.
    - id: userInput
      type: System.String
      description: search string
    - id: priceListKey
      type: System.String
      description: If the pricelist is null or empty, the function will search in all active pricelists.
    return:
      type: SuperOffice.CRM.Services.Product[]
      description: Product array
    content.vb: Function FindProduct(quoteAlternativeId As Integer, userInput As String, priceListKey As String) As Product()
  overload: SuperOffice.CRM.Services.IQuoteAgent.FindProduct*
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetProduct(System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.GetProduct(System.Int32,System.String)
  id: GetProduct(System.Int32,System.String)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: GetProduct(Int32, String)
  nameWithType: IQuoteAgent.GetProduct(Int32, String)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetProduct(System.Int32, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet a product with the given key\n"
  syntax:
    content: Product GetProduct(int quoteConnectionId, string eRPProductKey)
    parameters:
    - id: quoteConnectionId
      type: System.Int32
      description: The connection this product comes from.
    - id: eRPProductKey
      type: System.String
      description: Primary key of the Product in the ProductProvider
    return:
      type: SuperOffice.CRM.Services.Product
    content.vb: Function GetProduct(quoteConnectionId As Integer, eRPProductKey As String) As Product
  overload: SuperOffice.CRM.Services.IQuoteAgent.GetProduct*
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetProductFromDbId(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.GetProductFromDbId(System.Int32)
  id: GetProductFromDbId(System.Int32)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: GetProductFromDbId(Int32)
  nameWithType: IQuoteAgent.GetProductFromDbId(Int32)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetProductFromDbId(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet a product with the given database id\n"
  syntax:
    content: Product GetProductFromDbId(int productId)
    parameters:
    - id: productId
      type: System.Int32
      description: The database id of the product
    return:
      type: SuperOffice.CRM.Services.Product
      description: The product info
    content.vb: Function GetProductFromDbId(productId As Integer) As Product
  overload: SuperOffice.CRM.Services.IQuoteAgent.GetProductFromDbId*
- uid: SuperOffice.CRM.Services.IQuoteAgent.RemoveProduct(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.RemoveProduct(System.Int32)
  id: RemoveProduct(System.Int32)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: RemoveProduct(Int32)
  nameWithType: IQuoteAgent.RemoveProduct(Int32)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.RemoveProduct(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nRemoves a product from the database\n"
  syntax:
    content: void RemoveProduct(int productId)
    parameters:
    - id: productId
      type: System.Int32
      description: The database id of the product to remove
    content.vb: Sub RemoveProduct(productId As Integer)
  overload: SuperOffice.CRM.Services.IQuoteAgent.RemoveProduct*
- uid: SuperOffice.CRM.Services.IQuoteAgent.ToggleProductInAssortment(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.ToggleProductInAssortment(System.Int32)
  id: ToggleProductInAssortment(System.Int32)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: ToggleProductInAssortment(Int32)
  nameWithType: IQuoteAgent.ToggleProductInAssortment(Int32)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.ToggleProductInAssortment(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nToggles if the prdouct is in assortment or not\n"
  syntax:
    content: void ToggleProductInAssortment(int productId)
    parameters:
    - id: productId
      type: System.Int32
      description: The database id of the product to toggle is assortment value of
    content.vb: Sub ToggleProductInAssortment(productId As Integer)
  overload: SuperOffice.CRM.Services.IQuoteAgent.ToggleProductInAssortment*
- uid: SuperOffice.CRM.Services.IQuoteAgent.SaveQuote(SuperOffice.CRM.Services.Quote)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.SaveQuote(SuperOffice.CRM.Services.Quote)
  id: SaveQuote(SuperOffice.CRM.Services.Quote)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: SaveQuote(Quote)
  nameWithType: IQuoteAgent.SaveQuote(Quote)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.SaveQuote(SuperOffice.CRM.Services.Quote)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSaves a Quote\n"
  syntax:
    content: Quote SaveQuote(Quote quote)
    parameters:
    - id: quote
      type: SuperOffice.CRM.Services.Quote
      description: The Quote to save
    return:
      type: SuperOffice.CRM.Services.Quote
      description: The saved Quote
    content.vb: Function SaveQuote(quote As Quote) As Quote
  overload: SuperOffice.CRM.Services.IQuoteAgent.SaveQuote*
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetQuote(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.GetQuote(System.Int32)
  id: GetQuote(System.Int32)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: GetQuote(Int32)
  nameWithType: IQuoteAgent.GetQuote(Int32)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetQuote(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet a Quote\n"
  syntax:
    content: Quote GetQuote(int quoteId)
    parameters:
    - id: quoteId
      type: System.Int32
      description: QuoteId of the Quote to get.
    return:
      type: SuperOffice.CRM.Services.Quote
      description: The Quote
    content.vb: Function GetQuote(quoteId As Integer) As Quote
  overload: SuperOffice.CRM.Services.IQuoteAgent.GetQuote*
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteFromSaleId(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.GetQuoteFromSaleId(System.Int32)
  id: GetQuoteFromSaleId(System.Int32)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: GetQuoteFromSaleId(Int32)
  nameWithType: IQuoteAgent.GetQuoteFromSaleId(Int32)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteFromSaleId(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet a Quote for a sale\n"
  syntax:
    content: Quote GetQuoteFromSaleId(int saleId)
    parameters:
    - id: saleId
      type: System.Int32
      description: SaleId of the Quote to get.
    return:
      type: SuperOffice.CRM.Services.Quote
      description: The Quote
    content.vb: Function GetQuoteFromSaleId(saleId As Integer) As Quote
  overload: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteFromSaleId*
- uid: SuperOffice.CRM.Services.IQuoteAgent.CreateAndSaveQuote(System.Int32,System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.CreateAndSaveQuote(System.Int32,System.Int32,System.String)
  id: CreateAndSaveQuote(System.Int32,System.Int32,System.String)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: CreateAndSaveQuote(Int32, Int32, String)
  nameWithType: IQuoteAgent.CreateAndSaveQuote(Int32, Int32, String)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.CreateAndSaveQuote(System.Int32, System.Int32, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCreates a new quote on a sale.\n"
  syntax:
    content: QuoteEntity CreateAndSaveQuote(int saleId, int connectionId, string firstAlternativeName)
    parameters:
    - id: saleId
      type: System.Int32
      description: SaleId of the connected sale
    - id: connectionId
      type: System.Int32
      description: ConnectionId
    - id: firstAlternativeName
      type: System.String
      description: Name to be given to the default alternative
    return:
      type: SuperOffice.CRM.Services.QuoteEntity
      description: Quote carrier
    content.vb: Function CreateAndSaveQuote(saleId As Integer, connectionId As Integer, firstAlternativeName As String) As QuoteEntity
  overload: SuperOffice.CRM.Services.IQuoteAgent.CreateAndSaveQuote*
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteEntity(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.GetQuoteEntity(System.Int32)
  id: GetQuoteEntity(System.Int32)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: GetQuoteEntity(Int32)
  nameWithType: IQuoteAgent.GetQuoteEntity(Int32)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteEntity(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet a Quote\n"
  syntax:
    content: QuoteEntity GetQuoteEntity(int quoteId)
    parameters:
    - id: quoteId
      type: System.Int32
      description: QuoteId of the Quote to get.
    return:
      type: SuperOffice.CRM.Services.QuoteEntity
      description: The Quote
    content.vb: Function GetQuoteEntity(quoteId As Integer) As QuoteEntity
  overload: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteEntity*
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteEntityFromSaleId(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.GetQuoteEntityFromSaleId(System.Int32)
  id: GetQuoteEntityFromSaleId(System.Int32)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: GetQuoteEntityFromSaleId(Int32)
  nameWithType: IQuoteAgent.GetQuoteEntityFromSaleId(Int32)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteEntityFromSaleId(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet a Quote for a sale\n"
  syntax:
    content: QuoteEntity GetQuoteEntityFromSaleId(int saleId)
    parameters:
    - id: saleId
      type: System.Int32
      description: SaleId of the Quote to get.
    return:
      type: SuperOffice.CRM.Services.QuoteEntity
      description: The Quote
    content.vb: Function GetQuoteEntityFromSaleId(saleId As Integer) As QuoteEntity
  overload: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteEntityFromSaleId*
- uid: SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteEntity(SuperOffice.CRM.Services.QuoteEntity)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteEntity(SuperOffice.CRM.Services.QuoteEntity)
  id: SaveQuoteEntity(SuperOffice.CRM.Services.QuoteEntity)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: SaveQuoteEntity(QuoteEntity)
  nameWithType: IQuoteAgent.SaveQuoteEntity(QuoteEntity)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteEntity(SuperOffice.CRM.Services.QuoteEntity)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSaves a QuoteEntity. Versions and alternatives will not be saved by this call.\n"
  syntax:
    content: QuoteEntity SaveQuoteEntity(QuoteEntity quoteEntity)
    parameters:
    - id: quoteEntity
      type: SuperOffice.CRM.Services.QuoteEntity
      description: The Quote entity to save
    return:
      type: SuperOffice.CRM.Services.QuoteEntity
      description: The saved Quote
    content.vb: Function SaveQuoteEntity(quoteEntity As QuoteEntity) As QuoteEntity
  overload: SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteEntity*
- uid: SuperOffice.CRM.Services.IQuoteAgent.CreateAndSaveQuoteFromSale(System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.CreateAndSaveQuoteFromSale(System.Int32,System.Int32)
  id: CreateAndSaveQuoteFromSale(System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: CreateAndSaveQuoteFromSale(Int32, Int32)
  nameWithType: IQuoteAgent.CreateAndSaveQuoteFromSale(Int32, Int32)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.CreateAndSaveQuoteFromSale(System.Int32, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCreates a copy the active version with connected alternatives and quotelines from another sale.\n"
  syntax:
    content: QuoteEntity CreateAndSaveQuoteFromSale(int copyFromSaleId, int copyToSaleId)
    parameters:
    - id: copyFromSaleId
      type: System.Int32
      description: Id of the sale to copy the active quote from.
    - id: copyToSaleId
      type: System.Int32
      description: Id of the sale to copy the active quote to.
    return:
      type: SuperOffice.CRM.Services.QuoteEntity
      description: The created Quote
    content.vb: Function CreateAndSaveQuoteFromSale(copyFromSaleId As Integer, copyToSaleId As Integer) As QuoteEntity
  overload: SuperOffice.CRM.Services.IQuoteAgent.CreateAndSaveQuoteFromSale*
- uid: SuperOffice.CRM.Services.IQuoteAgent.PlaceOrder(System.Int32,System.Boolean,System.String,System.String,System.String)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.PlaceOrder(System.Int32,System.Boolean,System.String,System.String,System.String)
  id: PlaceOrder(System.Int32,System.Boolean,System.String,System.String,System.String)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: PlaceOrder(Int32, Boolean, String, String, String)
  nameWithType: IQuoteAgent.PlaceOrder(Int32, Boolean, String, String, String)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.PlaceOrder(System.Int32, System.Boolean, System.String, System.String, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nPlace an order in the ERP system.\n"
  syntax:
    content: PluginUrlResponse PlaceOrder(int quoteAlternativeId, bool markSaleAsSold, string poNumber, string orderComment, string culture)
    parameters:
    - id: quoteAlternativeId
      type: System.Int32
      description: Id of the alternative to place the order on.
    - id: markSaleAsSold
      type: System.Boolean
      description: Should the state of the owning Sale be set to sold
    - id: poNumber
      type: System.String
      description: Purchase order number, saved to Quote record
    - id: orderComment
      type: System.String
      description: Order comment, saved to Quote record
    - id: culture
      type: System.String
      description: Desired culture for email body and other culture-sensitive templates/content
    return:
      type: SuperOffice.CRM.Services.PluginUrlResponse
      description: Status for the placed order.
    content.vb: Function PlaceOrder(quoteAlternativeId As Integer, markSaleAsSold As Boolean, poNumber As String, orderComment As String, culture As String) As PluginUrlResponse
  overload: SuperOffice.CRM.Services.IQuoteAgent.PlaceOrder*
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetOrderState(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.GetOrderState(System.Int32)
  id: GetOrderState(System.Int32)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: GetOrderState(Int32)
  nameWithType: IQuoteAgent.GetOrderState(Int32)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetOrderState(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nIf there is a problem with a quoteline, the error description shall be placed in the status and reason fields of the quoteline, if there is a problem with the alternative, the error description shall be placed in the status and reason fields of the alternative. A summary of all the problems (if any) should be placed in the response object. Requires that the Create-Order capability is true.\n"
  syntax:
    content: PluginUrlResponse GetOrderState(int quoteVersionId)
    parameters:
    - id: quoteVersionId
      type: System.Int32
      description: the QuoteVersionId of the ordered version.
    return:
      type: SuperOffice.CRM.Services.PluginUrlResponse
      description: The order state. If a new quoteversion is created, the QuoteVersionId will be found in Changes.AddedRecords.
    content.vb: Function GetOrderState(quoteVersionId As Integer) As PluginUrlResponse
  overload: SuperOffice.CRM.Services.IQuoteAgent.GetOrderState*
- uid: SuperOffice.CRM.Services.IQuoteAgent.DeleteQuote(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.DeleteQuote(System.Int32)
  id: DeleteQuote(System.Int32)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: DeleteQuote(Int32)
  nameWithType: IQuoteAgent.DeleteQuote(Int32)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.DeleteQuote(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nDelete a Quote\n"
  syntax:
    content: void DeleteQuote(int quoteId)
    parameters:
    - id: quoteId
      type: System.Int32
      description: QuoteId of the Quote to delete.
    content.vb: Sub DeleteQuote(quoteId As Integer)
  overload: SuperOffice.CRM.Services.IQuoteAgent.DeleteQuote*
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteAlternative(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.GetQuoteAlternative(System.Int32)
  id: GetQuoteAlternative(System.Int32)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: GetQuoteAlternative(Int32)
  nameWithType: IQuoteAgent.GetQuoteAlternative(Int32)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteAlternative(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets a QuoteAlternative object.                        \n"
  syntax:
    content: QuoteAlternative GetQuoteAlternative(int quoteAlternativeId)
    parameters:
    - id: quoteAlternativeId
      type: System.Int32
      description: The identifier of the QuoteAlternative object
    return:
      type: SuperOffice.CRM.Services.QuoteAlternative
      description: QuoteAlternative
    content.vb: Function GetQuoteAlternative(quoteAlternativeId As Integer) As QuoteAlternative
  overload: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteAlternative*
- uid: SuperOffice.CRM.Services.IQuoteAgent.RecalculateQuoteAlternative(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.RecalculateQuoteAlternative(System.Int32)
  id: RecalculateQuoteAlternative(System.Int32)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: RecalculateQuoteAlternative(Int32)
  nameWithType: IQuoteAgent.RecalculateQuoteAlternative(Int32)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.RecalculateQuoteAlternative(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nWhen the user changes one or more values in a quoteline or a quoteAlternative, the connector gets to change the QuoteLines and the alternative, for instance calculate VAT. RecalculateQuoteAlternative shall be called when the user changes any of the following fields: Quantity, DiscountAmount, DiscountPercent, listprice (if allowed). RecalculateQuoteAlternative will calculate the TotalPrice and the VAT (if possible) for the lines and the alternative.\n"
  syntax:
    content: QuoteAlternativeRecalculated RecalculateQuoteAlternative(int quoteAlternative)
    parameters:
    - id: quoteAlternative
      type: System.Int32
      description: The alternative to be recalculated
    return:
      type: SuperOffice.CRM.Services.QuoteAlternativeRecalculated
      description: The updated quote version.
    content.vb: Function RecalculateQuoteAlternative(quoteAlternative As Integer) As QuoteAlternativeRecalculated
  overload: SuperOffice.CRM.Services.IQuoteAgent.RecalculateQuoteAlternative*
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteAlternatives(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.GetQuoteAlternatives(System.Int32)
  id: GetQuoteAlternatives(System.Int32)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: GetQuoteAlternatives(Int32)
  nameWithType: IQuoteAgent.GetQuoteAlternatives(Int32)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteAlternatives(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet all quote alternatives for a quote version\n"
  syntax:
    content: QuoteAlternative[] GetQuoteAlternatives(int quoteVersionId)
    parameters:
    - id: quoteVersionId
      type: System.Int32
      description: QuoteVersionId of the revison to get alternatives for.
    return:
      type: SuperOffice.CRM.Services.QuoteAlternative[]
      description: Array of Quote alternatives
    content.vb: Function GetQuoteAlternatives(quoteVersionId As Integer) As QuoteAlternative()
  overload: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteAlternatives*
- uid: SuperOffice.CRM.Services.IQuoteAgent.MoveQuoteLine(System.Int32,System.Boolean)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.MoveQuoteLine(System.Int32,System.Boolean)
  id: MoveQuoteLine(System.Int32,System.Boolean)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: MoveQuoteLine(Int32, Boolean)
  nameWithType: IQuoteAgent.MoveQuoteLine(Int32, Boolean)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.MoveQuoteLine(System.Int32, System.Boolean)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nMove quote line rank up/down\n"
  syntax:
    content: void MoveQuoteLine(int quoteLineId, bool direction)
    parameters:
    - id: quoteLineId
      type: System.Int32
      description: Id of quote line to move up/down
    - id: direction
      type: System.Boolean
      description: True is up, false is down
    content.vb: Sub MoveQuoteLine(quoteLineId As Integer, direction As Boolean)
  overload: SuperOffice.CRM.Services.IQuoteAgent.MoveQuoteLine*
- uid: SuperOffice.CRM.Services.IQuoteAgent.CreateQuoteAlternative(System.Int32,System.String,System.String)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.CreateQuoteAlternative(System.Int32,System.String,System.String)
  id: CreateQuoteAlternative(System.Int32,System.String,System.String)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: CreateQuoteAlternative(Int32, String, String)
  nameWithType: IQuoteAgent.CreateQuoteAlternative(Int32, String, String)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.CreateQuoteAlternative(System.Int32, System.String, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCreate a new quote alternative on a version.\n"
  syntax:
    content: QuoteAlternative CreateQuoteAlternative(int quoteVersionId, string quoteAlternativeName, string quoteAlternativeDescription)
    parameters:
    - id: quoteVersionId
      type: System.Int32
      description: QuoteVersionId of the version to create the alternative on.
    - id: quoteAlternativeName
      type: System.String
      description: The name to set on the new alternative.
    - id: quoteAlternativeDescription
      type: System.String
      description: The description to set on the new alternative.
    return:
      type: SuperOffice.CRM.Services.QuoteAlternative
      description: The newly created QuoteAlternative.
    content.vb: Function CreateQuoteAlternative(quoteVersionId As Integer, quoteAlternativeName As String, quoteAlternativeDescription As String) As QuoteAlternative
  overload: SuperOffice.CRM.Services.IQuoteAgent.CreateQuoteAlternative*
- uid: SuperOffice.CRM.Services.IQuoteAgent.CopyQuoteAlternative(System.Int32,System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.CopyQuoteAlternative(System.Int32,System.Int32,System.String)
  id: CopyQuoteAlternative(System.Int32,System.Int32,System.String)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: CopyQuoteAlternative(Int32, Int32, String)
  nameWithType: IQuoteAgent.CopyQuoteAlternative(Int32, Int32, String)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.CopyQuoteAlternative(System.Int32, System.Int32, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCopy a quote alternative from the same sale and adds it to a version.\n"
  syntax:
    content: QuoteAlternative CopyQuoteAlternative(int quoteVersionId, int quoteAlternativeId, string quoteAlternativeName)
    parameters:
    - id: quoteVersionId
      type: System.Int32
      description: QuoteVersionId of the version to copy the alternative to.
    - id: quoteAlternativeId
      type: System.Int32
      description: QuoteAlternativeId of the alternative to make a copy of.
    - id: quoteAlternativeName
      type: System.String
      description: The name to set on the new alternative.
    return:
      type: SuperOffice.CRM.Services.QuoteAlternative
      description: The copied QuoteAlternative.
    content.vb: Function CopyQuoteAlternative(quoteVersionId As Integer, quoteAlternativeId As Integer, quoteAlternativeName As String) As QuoteAlternative
  overload: SuperOffice.CRM.Services.IQuoteAgent.CopyQuoteAlternative*
- uid: SuperOffice.CRM.Services.IQuoteAgent.DeleteQuoteAlternative(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.DeleteQuoteAlternative(System.Int32)
  id: DeleteQuoteAlternative(System.Int32)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: DeleteQuoteAlternative(Int32)
  nameWithType: IQuoteAgent.DeleteQuoteAlternative(Int32)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.DeleteQuoteAlternative(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nDelete a quote alternative\n"
  syntax:
    content: void DeleteQuoteAlternative(int quoteAlternativeId)
    parameters:
    - id: quoteAlternativeId
      type: System.Int32
      description: Id of the quote alternative to delete.
    content.vb: Sub DeleteQuoteAlternative(quoteAlternativeId As Integer)
  overload: SuperOffice.CRM.Services.IQuoteAgent.DeleteQuoteAlternative*
- uid: SuperOffice.CRM.Services.IQuoteAgent.HasConnections
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.HasConnections
  id: HasConnections
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: HasConnections()
  nameWithType: IQuoteAgent.HasConnections()
  fullName: SuperOffice.CRM.Services.IQuoteAgent.HasConnections()
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nWhether or not the system has any connections available for this user.\n"
  syntax:
    content: PluginResponse HasConnections()
    return:
      type: SuperOffice.CRM.Services.PluginResponse
      description: The response
    content.vb: Function HasConnections As PluginResponse
  overload: SuperOffice.CRM.Services.IQuoteAgent.HasConnections*
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetAllInstalledQuoteConnections
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.GetAllInstalledQuoteConnections
  id: GetAllInstalledQuoteConnections
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: GetAllInstalledQuoteConnections()
  nameWithType: IQuoteAgent.GetAllInstalledQuoteConnections()
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetAllInstalledQuoteConnections()
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet all installed connections. Some installed connections may not be available to the user.\n"
  syntax:
    content: QuoteConnection[] GetAllInstalledQuoteConnections()
    return:
      type: SuperOffice.CRM.Services.QuoteConnection[]
      description: List of connections
    content.vb: Function GetAllInstalledQuoteConnections As QuoteConnection()
  overload: SuperOffice.CRM.Services.IQuoteAgent.GetAllInstalledQuoteConnections*
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetAllAvailableQuoteConnections
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.GetAllAvailableQuoteConnections
  id: GetAllAvailableQuoteConnections
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: GetAllAvailableQuoteConnections()
  nameWithType: IQuoteAgent.GetAllAvailableQuoteConnections()
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetAllAvailableQuoteConnections()
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet all available connections. Some installed connections may not be available to the user. Use GetAllAvailableQuoteConnectionsWithPriceLists if you need the pricelists on the connections as well.\n"
  syntax:
    content: QuoteConnection[] GetAllAvailableQuoteConnections()
    return:
      type: SuperOffice.CRM.Services.QuoteConnection[]
      description: List of connections
    content.vb: Function GetAllAvailableQuoteConnections As QuoteConnection()
  overload: SuperOffice.CRM.Services.IQuoteAgent.GetAllAvailableQuoteConnections*
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetAllAvailableQuoteConnectionsWithPriceLists
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.GetAllAvailableQuoteConnectionsWithPriceLists
  id: GetAllAvailableQuoteConnectionsWithPriceLists
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: GetAllAvailableQuoteConnectionsWithPriceLists()
  nameWithType: IQuoteAgent.GetAllAvailableQuoteConnectionsWithPriceLists()
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetAllAvailableQuoteConnectionsWithPriceLists()
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet all available connections. Some installed connections may not be available to the user. Includes pricelists for the connection. This is a heavy call\n"
  syntax:
    content: QuoteConnection[] GetAllAvailableQuoteConnectionsWithPriceLists()
    return:
      type: SuperOffice.CRM.Services.QuoteConnection[]
      description: List of connections
    content.vb: Function GetAllAvailableQuoteConnectionsWithPriceLists As QuoteConnection()
  overload: SuperOffice.CRM.Services.IQuoteAgent.GetAllAvailableQuoteConnectionsWithPriceLists*
- uid: SuperOffice.CRM.Services.IQuoteAgent.CreateConnectionFromConnectorName(System.String)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.CreateConnectionFromConnectorName(System.String)
  id: CreateConnectionFromConnectorName(System.String)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: CreateConnectionFromConnectorName(String)
  nameWithType: IQuoteAgent.CreateConnectionFromConnectorName(String)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.CreateConnectionFromConnectorName(System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCreate a new connection.\n"
  syntax:
    content: QuoteConnection CreateConnectionFromConnectorName(string connectorName)
    parameters:
    - id: connectorName
      type: System.String
      description: The name of the connector to create this connection for.
    return:
      type: SuperOffice.CRM.Services.QuoteConnection
      description: The created connection
    content.vb: Function CreateConnectionFromConnectorName(connectorName As String) As QuoteConnection
  overload: SuperOffice.CRM.Services.IQuoteAgent.CreateConnectionFromConnectorName*
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetConnection(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.GetConnection(System.Int32)
  id: GetConnection(System.Int32)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: GetConnection(Int32)
  nameWithType: IQuoteAgent.GetConnection(Int32)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetConnection(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nReturns the specified connection.\n"
  syntax:
    content: QuoteConnection GetConnection(int quoteConnectionId)
    parameters:
    - id: quoteConnectionId
      type: System.Int32
      description: Primary key of the connection
    return:
      type: SuperOffice.CRM.Services.QuoteConnection
      description: The connection
    content.vb: Function GetConnection(quoteConnectionId As Integer) As QuoteConnection
  overload: SuperOffice.CRM.Services.IQuoteAgent.GetConnection*
- uid: SuperOffice.CRM.Services.IQuoteAgent.SaveConnection(SuperOffice.CRM.Services.QuoteConnection)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.SaveConnection(SuperOffice.CRM.Services.QuoteConnection)
  id: SaveConnection(SuperOffice.CRM.Services.QuoteConnection)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: SaveConnection(QuoteConnection)
  nameWithType: IQuoteAgent.SaveConnection(QuoteConnection)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.SaveConnection(SuperOffice.CRM.Services.QuoteConnection)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSaves a connection to the database.\n"
  syntax:
    content: QuoteConnection SaveConnection(QuoteConnection connection)
    parameters:
    - id: connection
      type: SuperOffice.CRM.Services.QuoteConnection
      description: The connection to save.
    return:
      type: SuperOffice.CRM.Services.QuoteConnection
      description: The resulting connection.
    content.vb: Function SaveConnection(connection As QuoteConnection) As QuoteConnection
  overload: SuperOffice.CRM.Services.IQuoteAgent.SaveConnection*
- uid: SuperOffice.CRM.Services.IQuoteAgent.DeleteConnection(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.DeleteConnection(System.Int32)
  id: DeleteConnection(System.Int32)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: DeleteConnection(Int32)
  nameWithType: IQuoteAgent.DeleteConnection(Int32)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.DeleteConnection(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nMarks a connection as deleted.\n"
  syntax:
    content: void DeleteConnection(int quoteConnectionId)
    parameters:
    - id: quoteConnectionId
      type: System.Int32
      description: Primary key of the connection to delete
    content.vb: Sub DeleteConnection(quoteConnectionId As Integer)
  overload: SuperOffice.CRM.Services.IQuoteAgent.DeleteConnection*
- uid: SuperOffice.CRM.Services.IQuoteAgent.RestoreConnection(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.RestoreConnection(System.Int32)
  id: RestoreConnection(System.Int32)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: RestoreConnection(Int32)
  nameWithType: IQuoteAgent.RestoreConnection(Int32)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.RestoreConnection(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nRestores a connection marked as deleted.\n"
  syntax:
    content: void RestoreConnection(int quoteConnectionId)
    parameters:
    - id: quoteConnectionId
      type: System.Int32
      description: Primary key of the connection to restore
    content.vb: Sub RestoreConnection(quoteConnectionId As Integer)
  overload: SuperOffice.CRM.Services.IQuoteAgent.RestoreConnection*
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetConnectionsForAssociate(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.GetConnectionsForAssociate(System.Int32)
  id: GetConnectionsForAssociate(System.Int32)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: GetConnectionsForAssociate(Int32)
  nameWithType: IQuoteAgent.GetConnectionsForAssociate(Int32)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetConnectionsForAssociate(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nReturns all connections available for the specified user.\n"
  syntax:
    content: QuoteConnection[] GetConnectionsForAssociate(int associateId)
    parameters:
    - id: associateId
      type: System.Int32
      description: Primary key of the user
    return:
      type: SuperOffice.CRM.Services.QuoteConnection[]
      description: The connections
    content.vb: Function GetConnectionsForAssociate(associateId As Integer) As QuoteConnection()
  overload: SuperOffice.CRM.Services.IQuoteAgent.GetConnectionsForAssociate*
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetActivePriceLists(System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.GetActivePriceLists(System.Int32,System.String)
  id: GetActivePriceLists(System.Int32,System.String)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: GetActivePriceLists(Int32, String)
  nameWithType: IQuoteAgent.GetActivePriceLists(Int32, String)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetActivePriceLists(System.Int32, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets the available active PriceLists in a specific currency. Will return empty array if there is no PriceList with the stated currency available.\n"
  syntax:
    content: PriceList[] GetActivePriceLists(int quoteConnectionId, string currency)
    parameters:
    - id: quoteConnectionId
      type: System.Int32
      description: Primary key of the connection
    - id: currency
      type: System.String
      description: 'Iso currency like: USD or NOK. See http://www.currency-iso.org/dl_iso_table_a1.xls for details. Case insensitive. Will return empty array if there is no PriceList with the stated currency available.'
    return:
      type: SuperOffice.CRM.Services.PriceList[]
      description: The PriceLists that supports a specific currency
    content.vb: Function GetActivePriceLists(quoteConnectionId As Integer, currency As String) As PriceList()
  overload: SuperOffice.CRM.Services.IQuoteAgent.GetActivePriceLists*
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetActivePriceListsByCurrencyId(System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.GetActivePriceListsByCurrencyId(System.Int32,System.Int32)
  id: GetActivePriceListsByCurrencyId(System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: GetActivePriceListsByCurrencyId(Int32, Int32)
  nameWithType: IQuoteAgent.GetActivePriceListsByCurrencyId(Int32, Int32)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetActivePriceListsByCurrencyId(System.Int32, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets the available active PriceLists in a specific currency. Will return empty array if there is no PriceList with the stated currency available.\n"
  syntax:
    content: PriceList[] GetActivePriceListsByCurrencyId(int quoteConnectionId, int currencyId)
    parameters:
    - id: quoteConnectionId
      type: System.Int32
      description: Primary key of the connection
    - id: currencyId
      type: System.Int32
      description: SuperOffice currency id.
    return:
      type: SuperOffice.CRM.Services.PriceList[]
      description: The PriceLists that supports a specific currency
    content.vb: Function GetActivePriceListsByCurrencyId(quoteConnectionId As Integer, currencyId As Integer) As PriceList()
  overload: SuperOffice.CRM.Services.IQuoteAgent.GetActivePriceListsByCurrencyId*
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetAllPriceLists(System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.GetAllPriceLists(System.Int32,System.String)
  id: GetAllPriceLists(System.Int32,System.String)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: GetAllPriceLists(Int32, String)
  nameWithType: IQuoteAgent.GetAllPriceLists(Int32, String)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetAllPriceLists(System.Int32, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets the all PriceLists in all currencies, including those inactive. Will return empty array if there is no PriceList available.\n"
  syntax:
    content: PriceList[] GetAllPriceLists(int quoteConnectionId, string currency)
    parameters:
    - id: quoteConnectionId
      type: System.Int32
      description: Primary key of the connection
    - id: currency
      type: System.String
      description: 'Iso currency like: USD or NOK. See http://www.currency-iso.org/dl_iso_table_a1.xls for details. Case insensitive. Will return empty array if there is no PriceList with the stated currency available.'
    return:
      type: SuperOffice.CRM.Services.PriceList[]
      description: The PriceLists that supports a specific currency
    content.vb: Function GetAllPriceLists(quoteConnectionId As Integer, currency As String) As PriceList()
  overload: SuperOffice.CRM.Services.IQuoteAgent.GetAllPriceLists*
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetAllPriceListsByCurrencyId(System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.GetAllPriceListsByCurrencyId(System.Int32,System.Int32)
  id: GetAllPriceListsByCurrencyId(System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: GetAllPriceListsByCurrencyId(Int32, Int32)
  nameWithType: IQuoteAgent.GetAllPriceListsByCurrencyId(Int32, Int32)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetAllPriceListsByCurrencyId(System.Int32, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets the all PriceLists in all currencies, including those inactive. Will return empty array if there is no PriceList available.\n"
  syntax:
    content: PriceList[] GetAllPriceListsByCurrencyId(int quoteConnectionId, int currencyId)
    parameters:
    - id: quoteConnectionId
      type: System.Int32
      description: Primary key of the connection
    - id: currencyId
      type: System.Int32
      description: SuperOffice currency id.
    return:
      type: SuperOffice.CRM.Services.PriceList[]
      description: The PriceLists that supports a specific currency
    content.vb: Function GetAllPriceListsByCurrencyId(quoteConnectionId As Integer, currencyId As Integer) As PriceList()
  overload: SuperOffice.CRM.Services.IQuoteAgent.GetAllPriceListsByCurrencyId*
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetConnectorCapabilityNames(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.GetConnectorCapabilityNames(System.Int32)
  id: GetConnectorCapabilityNames(System.Int32)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: GetConnectorCapabilityNames(Int32)
  nameWithType: IQuoteAgent.GetConnectorCapabilityNames(Int32)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetConnectorCapabilityNames(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets a list of all possible connector capabilities\n"
  syntax:
    content: string[] GetConnectorCapabilityNames(int quoteConnectionId)
    parameters:
    - id: quoteConnectionId
      type: System.Int32
      description: Primary key of the connection
    return:
      type: System.String[]
      description: Capabilities names
    content.vb: Function GetConnectorCapabilityNames(quoteConnectionId As Integer) As String()
  overload: SuperOffice.CRM.Services.IQuoteAgent.GetConnectorCapabilityNames*
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetConnectorCapabilities(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.GetConnectorCapabilities(System.Int32)
  id: GetConnectorCapabilities(System.Int32)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: GetConnectorCapabilities(Int32)
  nameWithType: IQuoteAgent.GetConnectorCapabilities(Int32)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetConnectorCapabilities(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets a list of connector capabilities\n"
  syntax:
    content: string[] GetConnectorCapabilities(int quoteConnectionId)
    parameters:
    - id: quoteConnectionId
      type: System.Int32
      description: Primary key of the connection
    return:
      type: System.String[]
      description: Capabilities
    content.vb: Function GetConnectorCapabilities(quoteConnectionId As Integer) As String()
  overload: SuperOffice.CRM.Services.IQuoteAgent.GetConnectorCapabilities*
- uid: SuperOffice.CRM.Services.IQuoteAgent.CanConnectorProvideCapability(System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.CanConnectorProvideCapability(System.Int32,System.String)
  id: CanConnectorProvideCapability(System.Int32,System.String)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: CanConnectorProvideCapability(Int32, String)
  nameWithType: IQuoteAgent.CanConnectorProvideCapability(Int32, String)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.CanConnectorProvideCapability(System.Int32, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCan the connector provide the capability\n"
  syntax:
    content: bool CanConnectorProvideCapability(int quoteConnectionId, string capabilityName)
    parameters:
    - id: quoteConnectionId
      type: System.Int32
      description: Primary key of the connection
    - id: capabilityName
      type: System.String
      description: Capability name
    return:
      type: System.Boolean
      description: Capability name
    content.vb: Function CanConnectorProvideCapability(quoteConnectionId As Integer, capabilityName As String) As Boolean
  overload: SuperOffice.CRM.Services.IQuoteAgent.CanConnectorProvideCapability*
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetConnectionStartupErrors
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.GetConnectionStartupErrors
  id: GetConnectionStartupErrors
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: GetConnectionStartupErrors()
  nameWithType: IQuoteAgent.GetConnectionStartupErrors()
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetConnectionStartupErrors()
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nReturns an array of PluginResponseInfos for all failed connection initializations.\n"
  syntax:
    content: PluginResponse[] GetConnectionStartupErrors()
    return:
      type: SuperOffice.CRM.Services.PluginResponse[]
      description: Array of PluginResponseInfos for each failed connection initialization.
    content.vb: Function GetConnectionStartupErrors As PluginResponse()
  overload: SuperOffice.CRM.Services.IQuoteAgent.GetConnectionStartupErrors*
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetConnectionStartupResponse(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.GetConnectionStartupResponse(System.Int32)
  id: GetConnectionStartupResponse(System.Int32)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: GetConnectionStartupResponse(Int32)
  nameWithType: IQuoteAgent.GetConnectionStartupResponse(Int32)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetConnectionStartupResponse(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nReturns the PluginResponseInfo for the connection initialization. Does not initialize the connection, just returns what happened when initialize was called.\n"
  syntax:
    content: PluginResponse GetConnectionStartupResponse(int quoteConnectionId)
    parameters:
    - id: quoteConnectionId
      type: System.Int32
      description: Primary key of the connection
    return:
      type: SuperOffice.CRM.Services.PluginResponse
      description: PluginResponseInfo for the connection initialization.
    content.vb: Function GetConnectionStartupResponse(quoteConnectionId As Integer) As PluginResponse
  overload: SuperOffice.CRM.Services.IQuoteAgent.GetConnectionStartupResponse*
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetConnectionConfigFields(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.GetConnectionConfigFields(System.Int32)
  id: GetConnectionConfigFields(System.Int32)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: GetConnectionConfigFields(Int32)
  nameWithType: IQuoteAgent.GetConnectionConfigFields(Int32)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetConnectionConfigFields(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nReturns the config fields for the connection.\n"
  syntax:
    content: StringDictionary GetConnectionConfigFields(int quoteConnectionId)
    parameters:
    - id: quoteConnectionId
      type: System.Int32
      description: Primary key of the connection
    return:
      type: SuperOffice.CRM.Services.StringDictionary
      description: Config Fields
    content.vb: Function GetConnectionConfigFields(quoteConnectionId As Integer) As StringDictionary
  overload: SuperOffice.CRM.Services.IQuoteAgent.GetConnectionConfigFields*
- uid: SuperOffice.CRM.Services.IQuoteAgent.SaveConnectionConfigFields(System.Int32,SuperOffice.CRM.Services.StringDictionary)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.SaveConnectionConfigFields(System.Int32,SuperOffice.CRM.Services.StringDictionary)
  id: SaveConnectionConfigFields(System.Int32,SuperOffice.CRM.Services.StringDictionary)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: SaveConnectionConfigFields(Int32, StringDictionary)
  nameWithType: IQuoteAgent.SaveConnectionConfigFields(Int32, StringDictionary)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.SaveConnectionConfigFields(System.Int32, SuperOffice.CRM.Services.StringDictionary)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSaves the connection config fields\n"
  syntax:
    content: StringDictionary SaveConnectionConfigFields(int quoteConnectionId, StringDictionary connectionConfigFields)
    parameters:
    - id: quoteConnectionId
      type: System.Int32
      description: Primary key of the connection
    - id: connectionConfigFields
      type: SuperOffice.CRM.Services.StringDictionary
      description: ConnectionConfigFields to save.
    return:
      type: SuperOffice.CRM.Services.StringDictionary
      description: Config Fields
    content.vb: Function SaveConnectionConfigFields(quoteConnectionId As Integer, connectionConfigFields As StringDictionary) As StringDictionary
  overload: SuperOffice.CRM.Services.IQuoteAgent.SaveConnectionConfigFields*
- uid: SuperOffice.CRM.Services.IQuoteAgent.CreateQuoteLine(System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.CreateQuoteLine(System.Int32,System.String)
  id: CreateQuoteLine(System.Int32,System.String)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: CreateQuoteLine(Int32, String)
  nameWithType: IQuoteAgent.CreateQuoteLine(Int32, String)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.CreateQuoteLine(System.Int32, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCreate a quoteline based on a product key.\n"
  syntax:
    content: QuoteLine CreateQuoteLine(int quoteAlternativeId, string eRPProductKey)
    parameters:
    - id: quoteAlternativeId
      type: System.Int32
      description: Primary key of the alternative
    - id: eRPProductKey
      type: System.String
      description: Primary key of the product in the ProductProvider
    return:
      type: SuperOffice.CRM.Services.QuoteLine
      description: The updated quote line.
    content.vb: Function CreateQuoteLine(quoteAlternativeId As Integer, eRPProductKey As String) As QuoteLine
  overload: SuperOffice.CRM.Services.IQuoteAgent.CreateQuoteLine*
- uid: SuperOffice.CRM.Services.IQuoteAgent.CreateQuoteLineFromProduct(System.Int32,SuperOffice.CRM.Services.Product)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.CreateQuoteLineFromProduct(System.Int32,SuperOffice.CRM.Services.Product)
  id: CreateQuoteLineFromProduct(System.Int32,SuperOffice.CRM.Services.Product)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: CreateQuoteLineFromProduct(Int32, Product)
  nameWithType: IQuoteAgent.CreateQuoteLineFromProduct(Int32, Product)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.CreateQuoteLineFromProduct(System.Int32, SuperOffice.CRM.Services.Product)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCreate a quoteline based on a product.\n"
  syntax:
    content: QuoteLine CreateQuoteLineFromProduct(int quoteAlternativeId, Product product)
    parameters:
    - id: quoteAlternativeId
      type: System.Int32
      description: Primary key of the alternative
    - id: product
      type: SuperOffice.CRM.Services.Product
      description: Product carrier
    return:
      type: SuperOffice.CRM.Services.QuoteLine
      description: The updated quote line.
    content.vb: Function CreateQuoteLineFromProduct(quoteAlternativeId As Integer, product As Product) As QuoteLine
  overload: SuperOffice.CRM.Services.IQuoteAgent.CreateQuoteLineFromProduct*
- uid: SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteLine(SuperOffice.CRM.Services.QuoteLine)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteLine(SuperOffice.CRM.Services.QuoteLine)
  id: SaveQuoteLine(SuperOffice.CRM.Services.QuoteLine)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: SaveQuoteLine(QuoteLine)
  nameWithType: IQuoteAgent.SaveQuoteLine(QuoteLine)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteLine(SuperOffice.CRM.Services.QuoteLine)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSaves the QuoteLine in the SuperOffice database\n"
  syntax:
    content: QuoteLine SaveQuoteLine(QuoteLine quoteLine)
    parameters:
    - id: quoteLine
      type: SuperOffice.CRM.Services.QuoteLine
      description: The QuoteLine to save.
    return:
      type: SuperOffice.CRM.Services.QuoteLine
      description: The updated quote line (If the quoteline was new, it returns with id&apos;s set.
    content.vb: Function SaveQuoteLine(quoteLine As QuoteLine) As QuoteLine
  overload: SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteLine*
- uid: SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteLines(SuperOffice.CRM.Services.QuoteLine[])
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteLines(SuperOffice.CRM.Services.QuoteLine[])
  id: SaveQuoteLines(SuperOffice.CRM.Services.QuoteLine[])
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: SaveQuoteLines(QuoteLine[])
  nameWithType: IQuoteAgent.SaveQuoteLines(QuoteLine[])
  fullName: SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteLines(SuperOffice.CRM.Services.QuoteLine[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSaves the QuoteLines in the SuperOffice database\n"
  syntax:
    content: QuoteLine[] SaveQuoteLines(QuoteLine[] quoteLines)
    parameters:
    - id: quoteLines
      type: SuperOffice.CRM.Services.QuoteLine[]
      description: The QuoteLines to save.
    return:
      type: SuperOffice.CRM.Services.QuoteLine[]
      description: The updated quote lines (If the quoteline was new, it returns with id&apos;s set.
    content.vb: Function SaveQuoteLines(quoteLines As QuoteLine()) As QuoteLine()
  overload: SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteLines*
  nameWithType.vb: IQuoteAgent.SaveQuoteLines(QuoteLine())
  fullName.vb: SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteLines(SuperOffice.CRM.Services.QuoteLine())
  name.vb: SaveQuoteLines(QuoteLine())
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteLine(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.GetQuoteLine(System.Int32)
  id: GetQuoteLine(System.Int32)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: GetQuoteLine(Int32)
  nameWithType: IQuoteAgent.GetQuoteLine(Int32)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteLine(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet QuoteLine from database\n"
  syntax:
    content: QuoteLine GetQuoteLine(int quoteLineId)
    parameters:
    - id: quoteLineId
      type: System.Int32
      description: Primary key of the quoteline to get.
    return:
      type: SuperOffice.CRM.Services.QuoteLine
      description: The updated quote line (If the quoteline was new, it returns with id&apos;s set.
    content.vb: Function GetQuoteLine(quoteLineId As Integer) As QuoteLine
  overload: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteLine*
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteLines(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.GetQuoteLines(System.Int32)
  id: GetQuoteLines(System.Int32)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: GetQuoteLines(Int32)
  nameWithType: IQuoteAgent.GetQuoteLines(Int32)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteLines(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet all QuoteLines from an alternative\n"
  syntax:
    content: QuoteLine[] GetQuoteLines(int quoteAlternativeId)
    parameters:
    - id: quoteAlternativeId
      type: System.Int32
      description: Id of the alternative to return the quotelines for
    return:
      type: SuperOffice.CRM.Services.QuoteLine[]
      description: QuoteLine array
    content.vb: Function GetQuoteLines(quoteAlternativeId As Integer) As QuoteLine()
  overload: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteLines*
- uid: SuperOffice.CRM.Services.IQuoteAgent.DeleteQuoteLine(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.DeleteQuoteLine(System.Int32)
  id: DeleteQuoteLine(System.Int32)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: DeleteQuoteLine(Int32)
  nameWithType: IQuoteAgent.DeleteQuoteLine(Int32)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.DeleteQuoteLine(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nDeletes the QuoteLine in the SuperOffice database\n"
  syntax:
    content: void DeleteQuoteLine(int quoteLineId)
    parameters:
    - id: quoteLineId
      type: System.Int32
      description: Primary key of the quoteline to delete
    content.vb: Sub DeleteQuoteLine(quoteLineId As Integer)
  overload: SuperOffice.CRM.Services.IQuoteAgent.DeleteQuoteLine*
- uid: SuperOffice.CRM.Services.IQuoteAgent.DeleteQuoteLines(System.Int32[])
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.DeleteQuoteLines(System.Int32[])
  id: DeleteQuoteLines(System.Int32[])
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: DeleteQuoteLines(Int32[])
  nameWithType: IQuoteAgent.DeleteQuoteLines(Int32[])
  fullName: SuperOffice.CRM.Services.IQuoteAgent.DeleteQuoteLines(System.Int32[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nDelete the QuoteLines in the SuperOffice database\n"
  syntax:
    content: void DeleteQuoteLines(int[] quoteLineIds)
    parameters:
    - id: quoteLineIds
      type: System.Int32[]
      description: Primary keys of the quotelines to delete
    content.vb: Sub DeleteQuoteLines(quoteLineIds As Integer())
  overload: SuperOffice.CRM.Services.IQuoteAgent.DeleteQuoteLines*
  nameWithType.vb: IQuoteAgent.DeleteQuoteLines(Int32())
  fullName.vb: SuperOffice.CRM.Services.IQuoteAgent.DeleteQuoteLines(System.Int32())
  name.vb: DeleteQuoteLines(Int32())
- uid: SuperOffice.CRM.Services.IQuoteAgent.RecalculateQuoteLine(SuperOffice.CRM.Services.QuoteLine,System.String[])
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.RecalculateQuoteLine(SuperOffice.CRM.Services.QuoteLine,System.String[])
  id: RecalculateQuoteLine(SuperOffice.CRM.Services.QuoteLine,System.String[])
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: RecalculateQuoteLine(QuoteLine, String[])
  nameWithType: IQuoteAgent.RecalculateQuoteLine(QuoteLine, String[])
  fullName: SuperOffice.CRM.Services.IQuoteAgent.RecalculateQuoteLine(SuperOffice.CRM.Services.QuoteLine, System.String[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nWhen the user changes one or more values in a quoteline, the connector gets to change the QuoteLine, for instance calculate VAT. Shall be called when the user changes any of the following fields: Quantity, DiscountAmount, DiscountPercent, ListPrice (if allowed). Will calculate the TotalPrice and the VAT (if possible) for the line.\n"
  syntax:
    content: QuoteLine RecalculateQuoteLine(QuoteLine quoteLine, string[] changedFields)
    parameters:
    - id: quoteLine
      type: SuperOffice.CRM.Services.QuoteLine
      description: The QuoteLine to recalculate
    - id: changedFields
      type: System.String[]
      description: The id of the changed fields in the form &apos;TableName.FieldName&apos;
    return:
      type: SuperOffice.CRM.Services.QuoteLine
      description: The updated quote line.
    content.vb: Function RecalculateQuoteLine(quoteLine As QuoteLine, changedFields As String()) As QuoteLine
  overload: SuperOffice.CRM.Services.IQuoteAgent.RecalculateQuoteLine*
  nameWithType.vb: IQuoteAgent.RecalculateQuoteLine(QuoteLine, String())
  fullName.vb: SuperOffice.CRM.Services.IQuoteAgent.RecalculateQuoteLine(SuperOffice.CRM.Services.QuoteLine, System.String())
  name.vb: RecalculateQuoteLine(QuoteLine, String())
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteLineImage(System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.GetQuoteLineImage(System.Int32,System.Int32)
  id: GetQuoteLineImage(System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: GetQuoteLineImage(Int32, Int32)
  nameWithType: IQuoteAgent.GetQuoteLineImage(Int32, Int32)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteLineImage(System.Int32, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets an image connected to a quoteline, either from the ERPProvider or from the SuperOffice database\n"
  syntax:
    content: Image GetQuoteLineImage(int quoteLineId, int rank)
    parameters:
    - id: quoteLineId
      type: System.Int32
      description: Primary key of the quoteline
    - id: rank
      type: System.Int32
      description: The rank of the image.
    return:
      type: System.Drawing.Image
      description: The image. Returns null if no image available.
    content.vb: Function GetQuoteLineImage(quoteLineId As Integer, rank As Integer) As Image
  overload: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteLineImage*
- uid: SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteLineImage(System.Int32,System.Drawing.Image,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteLineImage(System.Int32,System.Drawing.Image,System.Int32)
  id: SaveQuoteLineImage(System.Int32,System.Drawing.Image,System.Int32)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: SaveQuoteLineImage(Int32, Image, Int32)
  nameWithType: IQuoteAgent.SaveQuoteLineImage(Int32, Image, Int32)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteLineImage(System.Int32, System.Drawing.Image, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSaves the image connected to a quoteline in the SuperOffice database\n"
  syntax:
    content: void SaveQuoteLineImage(int quoteLineId, Image image, int rank)
    parameters:
    - id: quoteLineId
      type: System.Int32
      description: Primary key of the quoteline
    - id: image
      type: System.Drawing.Image
      description: The image.
    - id: rank
      type: System.Int32
      description: The rank of the image.
    content.vb: Sub SaveQuoteLineImage(quoteLineId As Integer, image As Image, rank As Integer)
  overload: SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteLineImage*
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetExtraInfo(System.String)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.GetExtraInfo(System.String)
  id: GetExtraInfo(System.String)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: GetExtraInfo(String)
  nameWithType: IQuoteAgent.GetExtraInfo(String)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetExtraInfo(System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nConverts an xml string into an object representation.\n"
  syntax:
    content: ProductExtraDataField[] GetExtraInfo(string quoteLineExtraData)
    parameters:
    - id: quoteLineExtraData
      type: System.String
      description: The extra data as xml.
    return:
      type: SuperOffice.CRM.Services.ProductExtraDataField[]
      description: An object representation on the xml
    content.vb: Function GetExtraInfo(quoteLineExtraData As String) As ProductExtraDataField()
  overload: SuperOffice.CRM.Services.IQuoteAgent.GetExtraInfo*
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteLineConfiguration(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.GetQuoteLineConfiguration(System.Int32)
  id: GetQuoteLineConfiguration(System.Int32)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: GetQuoteLineConfiguration(Int32)
  nameWithType: IQuoteAgent.GetQuoteLineConfiguration(Int32)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteLineConfiguration(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nReturns the configuration field with the given id\n"
  syntax:
    content: QuoteLineConfiguration GetQuoteLineConfiguration(int quoteLineConfigurationId)
    parameters:
    - id: quoteLineConfigurationId
      type: System.Int32
      description: Id of the QuoteLineConfiguration to get.
    return:
      type: SuperOffice.CRM.Services.QuoteLineConfiguration
      description: QuoteLineConfiguration
    content.vb: Function GetQuoteLineConfiguration(quoteLineConfigurationId As Integer) As QuoteLineConfiguration
  overload: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteLineConfiguration*
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteLineConfigurationFromFieldName(System.String)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.GetQuoteLineConfigurationFromFieldName(System.String)
  id: GetQuoteLineConfigurationFromFieldName(System.String)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: GetQuoteLineConfigurationFromFieldName(String)
  nameWithType: IQuoteAgent.GetQuoteLineConfigurationFromFieldName(String)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteLineConfigurationFromFieldName(System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nReturns the configuration field with the given field name\n"
  syntax:
    content: QuoteLineConfiguration GetQuoteLineConfigurationFromFieldName(string fieldName)
    parameters:
    - id: fieldName
      type: System.String
      description: Field name of the QuoteLineConfiguration to get.
    return:
      type: SuperOffice.CRM.Services.QuoteLineConfiguration
      description: QuoteLineConfiguration
    content.vb: Function GetQuoteLineConfigurationFromFieldName(fieldName As String) As QuoteLineConfiguration
  overload: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteLineConfigurationFromFieldName*
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetAllQuoteLineConfigurations
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.GetAllQuoteLineConfigurations
  id: GetAllQuoteLineConfigurations
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: GetAllQuoteLineConfigurations()
  nameWithType: IQuoteAgent.GetAllQuoteLineConfigurations()
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetAllQuoteLineConfigurations()
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nReturns all the configuration fields\n"
  syntax:
    content: QuoteLineConfiguration[] GetAllQuoteLineConfigurations()
    return:
      type: SuperOffice.CRM.Services.QuoteLineConfiguration[]
      description: Array of QuoteLineConfigurations
    content.vb: Function GetAllQuoteLineConfigurations As QuoteLineConfiguration()
  overload: SuperOffice.CRM.Services.IQuoteAgent.GetAllQuoteLineConfigurations*
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetInUseQuoteLineConfigurations
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.GetInUseQuoteLineConfigurations
  id: GetInUseQuoteLineConfigurations
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: GetInUseQuoteLineConfigurations()
  nameWithType: IQuoteAgent.GetInUseQuoteLineConfigurations()
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetInUseQuoteLineConfigurations()
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nReturns the configuration fields that should be visible in the GUI.\n"
  syntax:
    content: QuoteLineConfiguration[] GetInUseQuoteLineConfigurations()
    return:
      type: SuperOffice.CRM.Services.QuoteLineConfiguration[]
      description: Array of QuoteLineConfigurations
    content.vb: Function GetInUseQuoteLineConfigurations As QuoteLineConfiguration()
  overload: SuperOffice.CRM.Services.IQuoteAgent.GetInUseQuoteLineConfigurations*
- uid: SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteLineConfiguration(SuperOffice.CRM.Services.QuoteLineConfiguration)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteLineConfiguration(SuperOffice.CRM.Services.QuoteLineConfiguration)
  id: SaveQuoteLineConfiguration(SuperOffice.CRM.Services.QuoteLineConfiguration)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: SaveQuoteLineConfiguration(QuoteLineConfiguration)
  nameWithType: IQuoteAgent.SaveQuoteLineConfiguration(QuoteLineConfiguration)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteLineConfiguration(SuperOffice.CRM.Services.QuoteLineConfiguration)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSave a QuoteLineConfiguration object. It is not possible to add a new configuration.\n"
  syntax:
    content: QuoteLineConfiguration SaveQuoteLineConfiguration(QuoteLineConfiguration quoteLineConfiguration)
    parameters:
    - id: quoteLineConfiguration
      type: SuperOffice.CRM.Services.QuoteLineConfiguration
      description: The QuoteLineConfiguration to save.
    return:
      type: SuperOffice.CRM.Services.QuoteLineConfiguration
      description: The saved QuoteLineConfiguration.
    content.vb: Function SaveQuoteLineConfiguration(quoteLineConfiguration As QuoteLineConfiguration) As QuoteLineConfiguration
  overload: SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteLineConfiguration*
- uid: SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteLineConfigurations(SuperOffice.CRM.Services.QuoteLineConfiguration[])
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteLineConfigurations(SuperOffice.CRM.Services.QuoteLineConfiguration[])
  id: SaveQuoteLineConfigurations(SuperOffice.CRM.Services.QuoteLineConfiguration[])
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: SaveQuoteLineConfigurations(QuoteLineConfiguration[])
  nameWithType: IQuoteAgent.SaveQuoteLineConfigurations(QuoteLineConfiguration[])
  fullName: SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteLineConfigurations(SuperOffice.CRM.Services.QuoteLineConfiguration[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSave a collection of QuoteLineConfigurations. It is not possible to add a new configurations.\n"
  syntax:
    content: QuoteLineConfiguration[] SaveQuoteLineConfigurations(QuoteLineConfiguration[] quoteLineConfigurations)
    parameters:
    - id: quoteLineConfigurations
      type: SuperOffice.CRM.Services.QuoteLineConfiguration[]
      description: The QuoteLineConfigurations to save.
    return:
      type: SuperOffice.CRM.Services.QuoteLineConfiguration[]
      description: The saved QuoteLineConfigurations.
    content.vb: Function SaveQuoteLineConfigurations(quoteLineConfigurations As QuoteLineConfiguration()) As QuoteLineConfiguration()
  overload: SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteLineConfigurations*
  nameWithType.vb: IQuoteAgent.SaveQuoteLineConfigurations(QuoteLineConfiguration())
  fullName.vb: SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteLineConfigurations(SuperOffice.CRM.Services.QuoteLineConfiguration())
  name.vb: SaveQuoteLineConfigurations(QuoteLineConfiguration())
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteList(System.String)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.GetQuoteList(System.String)
  id: GetQuoteList(System.String)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: GetQuoteList(String)
  nameWithType: IQuoteAgent.GetQuoteList(String)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteList(System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets a named list from the connector Return array of QuoteListItems. Return NULL if the given list is not supported.\n"
  syntax:
    content: QuoteListItem[] GetQuoteList(string quoteListType)
    parameters:
    - id: quoteListType
      type: System.String
      description: 'The name of the requested list, for instance: ProductCategory, ProductFamily, ProductType, PaymentTerms, PaymentType, DeliveryTerms, DeliveryType.'
    return:
      type: SuperOffice.CRM.Services.QuoteListItem[]
      description: The list items
    content.vb: Function GetQuoteList(quoteListType As String) As QuoteListItem()
  overload: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteList*
- uid: SuperOffice.CRM.Services.IQuoteAgent.ValidateQuoteVersion(System.Int32,SuperOffice.Data.QuoteVersionButtonAction)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.ValidateQuoteVersion(System.Int32,SuperOffice.Data.QuoteVersionButtonAction)
  id: ValidateQuoteVersion(System.Int32,SuperOffice.Data.QuoteVersionButtonAction)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: ValidateQuoteVersion(Int32, QuoteVersionButtonAction)
  nameWithType: IQuoteAgent.ValidateQuoteVersion(Int32, QuoteVersionButtonAction)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.ValidateQuoteVersion(System.Int32, SuperOffice.Data.QuoteVersionButtonAction)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nWhen the user changes one or more values in a quoteline or a quoteAlternative, the connector gets to change the QuoteLines and the alternative, for instance calculate VAT. ValidateQuoteVersion shall be called when the user presses the validate button, presses the send button or closes the quote dialog. RecalculateQuoteAlternative should typically validate all alternatives, set values in extrafields, and set the state in the version.\n"
  syntax:
    content: QuoteVersionValidated ValidateQuoteVersion(int quoteVersionId, QuoteVersionButtonAction action)
    parameters:
    - id: quoteVersionId
      type: System.Int32
      description: The version to be validated
    - id: action
      type: SuperOffice.Data.QuoteVersionButtonAction
      description: The action, if any, related to the validate call, like PlaceOrder or SendQuote
    return:
      type: SuperOffice.CRM.Services.QuoteVersionValidated
      description: The updated quote version.
    content.vb: Function ValidateQuoteVersion(quoteVersionId As Integer, action As QuoteVersionButtonAction) As QuoteVersionValidated
  overload: SuperOffice.CRM.Services.IQuoteAgent.ValidateQuoteVersion*
- uid: SuperOffice.CRM.Services.IQuoteAgent.CreateAndSaveQuoteVersion(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.CreateAndSaveQuoteVersion(System.Int32)
  id: CreateAndSaveQuoteVersion(System.Int32)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: CreateAndSaveQuoteVersion(Int32)
  nameWithType: IQuoteAgent.CreateAndSaveQuoteVersion(Int32)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.CreateAndSaveQuoteVersion(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCreated a new QuoteVersion based on another QuoteVersion on the same Quote.\n"
  syntax:
    content: QuoteVersion CreateAndSaveQuoteVersion(int quoteVersionId)
    parameters:
    - id: quoteVersionId
      type: System.Int32
      description: QuoteVersionId of the version to copy the contents from.
    return:
      type: SuperOffice.CRM.Services.QuoteVersion
      description: The Quote version
    content.vb: Function CreateAndSaveQuoteVersion(quoteVersionId As Integer) As QuoteVersion
  overload: SuperOffice.CRM.Services.IQuoteAgent.CreateAndSaveQuoteVersion*
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteVersion(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.GetQuoteVersion(System.Int32)
  id: GetQuoteVersion(System.Int32)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: GetQuoteVersion(Int32)
  nameWithType: IQuoteAgent.GetQuoteVersion(Int32)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteVersion(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet a QuoteVersion\n"
  syntax:
    content: QuoteVersion GetQuoteVersion(int quoteVersionId)
    parameters:
    - id: quoteVersionId
      type: System.Int32
      description: QuoteVersionId to get information from
    return:
      type: SuperOffice.CRM.Services.QuoteVersion
      description: Array of Quote versions
    content.vb: Function GetQuoteVersion(quoteVersionId As Integer) As QuoteVersion
  overload: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteVersion*
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteVersions(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.GetQuoteVersions(System.Int32)
  id: GetQuoteVersions(System.Int32)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: GetQuoteVersions(Int32)
  nameWithType: IQuoteAgent.GetQuoteVersions(Int32)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteVersions(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet all quote versions for a sale\n"
  syntax:
    content: QuoteVersion[] GetQuoteVersions(int quoteId)
    parameters:
    - id: quoteId
      type: System.Int32
      description: QuoteId of the quote to get versions from
    return:
      type: SuperOffice.CRM.Services.QuoteVersion[]
      description: Array of Quote versions
    content.vb: Function GetQuoteVersions(quoteId As Integer) As QuoteVersion()
  overload: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteVersions*
- uid: SuperOffice.CRM.Services.IQuoteAgent.SendQuoteVersion(System.Int32,System.DateTime,System.DateTime,System.String,System.String)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.SendQuoteVersion(System.Int32,System.DateTime,System.DateTime,System.String,System.String)
  id: SendQuoteVersion(System.Int32,System.DateTime,System.DateTime,System.String,System.String)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: SendQuoteVersion(Int32, DateTime, DateTime, String, String)
  nameWithType: IQuoteAgent.SendQuoteVersion(Int32, DateTime, DateTime, String, String)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.SendQuoteVersion(System.Int32, System.DateTime, System.DateTime, System.String, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSend the quote to the user&apos;s customer. More parameters to be added later...\n"
  syntax:
    content: PluginUrlResponse SendQuoteVersion(int quoteVersionId, DateTime expiryDate, DateTime followupDate, string followupText, string culture)
    parameters:
    - id: quoteVersionId
      type: System.Int32
      description: QuoteVersionId of the quoteversion to send
    - id: expiryDate
      type: System.DateTime
      description: Date the quote expires
    - id: followupDate
      type: System.DateTime
      description: Date for the followup task, to remind the sales rep about the quote
    - id: followupText
      type: System.String
      description: The body text for the follwup appointment, resolved to the correct culture (no resources please)
    - id: culture
      type: System.String
      description: Desired culture for email body and other culture-sensitive templates/content
    return:
      type: SuperOffice.CRM.Services.PluginUrlResponse
      description: Response of the operation
    content.vb: Function SendQuoteVersion(quoteVersionId As Integer, expiryDate As Date, followupDate As Date, followupText As String, culture As String) As PluginUrlResponse
  overload: SuperOffice.CRM.Services.IQuoteAgent.SendQuoteVersion*
- uid: SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteVersion(SuperOffice.CRM.Services.QuoteVersion)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteVersion(SuperOffice.CRM.Services.QuoteVersion)
  id: SaveQuoteVersion(SuperOffice.CRM.Services.QuoteVersion)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: SaveQuoteVersion(QuoteVersion)
  nameWithType: IQuoteAgent.SaveQuoteVersion(QuoteVersion)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteVersion(SuperOffice.CRM.Services.QuoteVersion)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSaves a quote version\n"
  syntax:
    content: QuoteVersion SaveQuoteVersion(QuoteVersion quoteVersion)
    parameters:
    - id: quoteVersion
      type: SuperOffice.CRM.Services.QuoteVersion
      description: The quote version to save
    return:
      type: SuperOffice.CRM.Services.QuoteVersion
      description: The saved quote version
    content.vb: Function SaveQuoteVersion(quoteVersion As QuoteVersion) As QuoteVersion
  overload: SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteVersion*
- uid: SuperOffice.CRM.Services.IQuoteAgent.ApproveQuoteVersion(System.Int32,System.String,System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.ApproveQuoteVersion(System.Int32,System.String,System.Int32,System.String)
  id: ApproveQuoteVersion(System.Int32,System.String,System.Int32,System.String)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: ApproveQuoteVersion(Int32, String, Int32, String)
  nameWithType: IQuoteAgent.ApproveQuoteVersion(Int32, String, Int32, String)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.ApproveQuoteVersion(System.Int32, System.String, System.Int32, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nApproves a quote version\n"
  syntax:
    content: ApproveRejectResponse ApproveQuoteVersion(int quoteVersionId, string approvedByText, int approvedByAssociateId, string approvalText)
    parameters:
    - id: quoteVersionId
      type: System.Int32
      description: QuoteVersionId to approve.
    - id: approvedByText
      type: System.String
      description: '&apos;Approved by&apos; prefix to ApprovalText used when creating appointment task to log approval. Must be passed since service does not know which language to use for &apos;Approved By&apos; string.'
    - id: approvedByAssociateId
      type: System.Int32
      description: AssociateId of the associate who approved the quote version.
    - id: approvalText
      type: System.String
      description: Approval text.
    return:
      type: SuperOffice.CRM.Services.ApproveRejectResponse
      description: Response of the the operation
    content.vb: Function ApproveQuoteVersion(quoteVersionId As Integer, approvedByText As String, approvedByAssociateId As Integer, approvalText As String) As ApproveRejectResponse
  overload: SuperOffice.CRM.Services.IQuoteAgent.ApproveQuoteVersion*
- uid: SuperOffice.CRM.Services.IQuoteAgent.RejectQuoteVersion(System.Int32,System.String,System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.RejectQuoteVersion(System.Int32,System.String,System.Int32,System.String)
  id: RejectQuoteVersion(System.Int32,System.String,System.Int32,System.String)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: RejectQuoteVersion(Int32, String, Int32, String)
  nameWithType: IQuoteAgent.RejectQuoteVersion(Int32, String, Int32, String)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.RejectQuoteVersion(System.Int32, System.String, System.Int32, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nRejects a quote version\n"
  syntax:
    content: ApproveRejectResponse RejectQuoteVersion(int quoteVersionId, string rejectedByText, int rejectedByAssociateId, string rejectionText)
    parameters:
    - id: quoteVersionId
      type: System.Int32
      description: QuoteVersionId to approve.
    - id: rejectedByText
      type: System.String
      description: '&apos;Rejected by&apos; prefix to RejectionText used when creating appointment task to log rejection. Must be passed since service does not know which language to use for &apos;Rejected By&apos; string.'
    - id: rejectedByAssociateId
      type: System.Int32
      description: AssociateId of the associate who rejected the quote version.
    - id: rejectionText
      type: System.String
      description: Rejection text.
    return:
      type: SuperOffice.CRM.Services.ApproveRejectResponse
      description: Response of the the operation
    content.vb: Function RejectQuoteVersion(quoteVersionId As Integer, rejectedByText As String, rejectedByAssociateId As Integer, rejectionText As String) As ApproveRejectResponse
  overload: SuperOffice.CRM.Services.IQuoteAgent.RejectQuoteVersion*
- uid: SuperOffice.CRM.Services.IQuoteAgent.GenerateQuoteDocuments(System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.String)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.GenerateQuoteDocuments(System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.String)
  id: GenerateQuoteDocuments(System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.String)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: GenerateQuoteDocuments(Int32, Int32, Boolean, Int32, Boolean, String)
  nameWithType: IQuoteAgent.GenerateQuoteDocuments(Int32, Int32, Boolean, Int32, Boolean, String)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GenerateQuoteDocuments(System.Int32, System.Int32, System.Boolean, System.Int32, System.Boolean, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGenerate all the documents required to send the Quote as an email to the prospect - or an Order Confirmation; it just depends on the template id&apos;s for the lines doc and mail body. Quote version status is not changed by this method.\n"
  syntax:
    content: QuotePublishDocuments GenerateQuoteDocuments(int quoteVersionId, int emailBodyTemplateId, bool attachMainDocument, int quotedProductsTemplateId, bool includeAttachments, string rawMailSubject)
    parameters:
    - id: quoteVersionId
      type: System.Int32
      description: VersionId of the quote to be sent; the status of the version will not be changed by calling this method
    - id: emailBodyTemplateId
      type: System.Int32
      description: Id of the template for the email body, must be nonzero and refer to either a Quote mail body or Order Confirmation mail body, with html content
    - id: attachMainDocument
      type: System.Boolean
      description: Should the main quote document be attached to the email; generally false for Order Confirmations
    - id: quotedProductsTemplateId
      type: System.Int32
      description: Id of the template for the quote- or order confirmation-lines; zero if no document should be produced
    - id: includeAttachments
      type: System.Boolean
      description: If true, then the currently specified (in the database) attachments will be included
    - id: rawMailSubject
      type: System.String
      description: Subject line for email, in the correct language, sent in here to have any template variables substituted
    return:
      type: SuperOffice.CRM.Services.QuotePublishDocuments
      description: Carrier specifying the document id&apos;s of all the documents, as well as other results
    content.vb: Function GenerateQuoteDocuments(quoteVersionId As Integer, emailBodyTemplateId As Integer, attachMainDocument As Boolean, quotedProductsTemplateId As Integer, includeAttachments As Boolean, rawMailSubject As String) As QuotePublishDocuments
  overload: SuperOffice.CRM.Services.IQuoteAgent.GenerateQuoteDocuments*
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetOrderConfirmation(System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.GetOrderConfirmation(System.Int32,System.Int32)
  id: GetOrderConfirmation(System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: GetOrderConfirmation(Int32, Int32)
  nameWithType: IQuoteAgent.GetOrderConfirmation(Int32, Int32)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetOrderConfirmation(System.Int32, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet a base64-encoded data stream that is just the order confirmation document, for the given quote version; no permanent document is created or stored anywhere; the result is a PDF\n"
  syntax:
    content: string GetOrderConfirmation(int quoteVersionId, int confirmationTemplateId)
    parameters:
    - id: quoteVersionId
      type: System.Int32
      description: VersionId of the quote to be sent; the status of the version will not be changed by calling this method
    - id: confirmationTemplateId
      type: System.Int32
      description: Id of the template for the order confirmation lines document
    return:
      type: System.String
      description: Base64-encoded binary data, that is in fact a PDF document that should be shown to the user
    content.vb: Function GetOrderConfirmation(quoteVersionId As Integer, confirmationTemplateId As Integer) As String
  overload: SuperOffice.CRM.Services.IQuoteAgent.GetOrderConfirmation*
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteVersionWorkflowState(System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.GetQuoteVersionWorkflowState(System.Int32,System.Int32)
  id: GetQuoteVersionWorkflowState(System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: GetQuoteVersionWorkflowState(Int32, Int32)
  nameWithType: IQuoteAgent.GetQuoteVersionWorkflowState(Int32, Int32)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteVersionWorkflowState(System.Int32, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet all button states for the Quote version dialog. Packages ImageState, Button states and status info into one call. Collects most important warnings/errors from across all quotelines/alternatives in this quote version.\n"
  syntax:
    content: QuoteVersionWorkflowState GetQuoteVersionWorkflowState(int quoteVersionId, int quoteAlternativeId)
    parameters:
    - id: quoteVersionId
      type: System.Int32
      description: Id of the quote version to get the button states for.
    - id: quoteAlternativeId
      type: System.Int32
      description: Id of the active quote alternative id.
    return:
      type: SuperOffice.CRM.Services.QuoteVersionWorkflowState
      description: Workflow state information
    content.vb: Function GetQuoteVersionWorkflowState(quoteVersionId As Integer, quoteAlternativeId As Integer) As QuoteVersionWorkflowState
  overload: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteVersionWorkflowState*
- uid: SuperOffice.CRM.Services.IQuoteAgent.UpdateQuoteVersionPrices(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.UpdateQuoteVersionPrices(System.Int32)
  id: UpdateQuoteVersionPrices(System.Int32)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: UpdateQuoteVersionPrices(Int32)
  nameWithType: IQuoteAgent.UpdateQuoteVersionPrices(Int32)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.UpdateQuoteVersionPrices(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nUpdate price on the all the quotelines for each alternative in the current quote version\n"
  syntax:
    content: QuoteVersionValidated UpdateQuoteVersionPrices(int quoteVersionId)
    parameters:
    - id: quoteVersionId
      type: System.Int32
      description: The version to be update prices for
    return:
      type: SuperOffice.CRM.Services.QuoteVersionValidated
      description: The updated quote version.
    content.vb: Function UpdateQuoteVersionPrices(quoteVersionId As Integer) As QuoteVersionValidated
  overload: SuperOffice.CRM.Services.IQuoteAgent.UpdateQuoteVersionPrices*
- uid: SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteVersionNumber(System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteVersionNumber(System.Int32,System.String)
  id: SaveQuoteVersionNumber(System.Int32,System.String)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: SaveQuoteVersionNumber(Int32, String)
  nameWithType: IQuoteAgent.SaveQuoteVersionNumber(Int32, String)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteVersionNumber(System.Int32, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSave the quote version number if it is valid\n"
  syntax:
    content: bool SaveQuoteVersionNumber(int quoteVersionId, string number)
    parameters:
    - id: quoteVersionId
      type: System.Int32
      description: VersionId of the quote version
    - id: number
      type: System.String
      description: The number to save
    return:
      type: System.Boolean
      description: True if the number was valid and then saved
    content.vb: Function SaveQuoteVersionNumber(quoteVersionId As Integer, number As String) As Boolean
  overload: SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteVersionNumber*
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteVersionWorkflowImageState(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.GetQuoteVersionWorkflowImageState(System.Int32)
  id: GetQuoteVersionWorkflowImageState(System.Int32)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: GetQuoteVersionWorkflowImageState(Int32)
  nameWithType: IQuoteAgent.GetQuoteVersionWorkflowImageState(Int32)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteVersionWorkflowImageState(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet state icon and name for the Quote version dialog header.\n"
  syntax:
    content: QuoteVersionButtonState GetQuoteVersionWorkflowImageState(int quoteVersionId)
    parameters:
    - id: quoteVersionId
      type: System.Int32
      description: Id of the quote version to get the version state for.
    return:
      type: SuperOffice.CRM.Services.QuoteVersionButtonState
      description: Image and state name information
    content.vb: Function GetQuoteVersionWorkflowImageState(quoteVersionId As Integer) As QuoteVersionButtonState
  overload: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteVersionWorkflowImageState*
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteVersionWorkflowButtonStates(System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.GetQuoteVersionWorkflowButtonStates(System.Int32,System.Int32)
  id: GetQuoteVersionWorkflowButtonStates(System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: GetQuoteVersionWorkflowButtonStates(Int32, Int32)
  nameWithType: IQuoteAgent.GetQuoteVersionWorkflowButtonStates(Int32, Int32)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteVersionWorkflowButtonStates(System.Int32, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet all button states for the Quote version dialog.\n"
  syntax:
    content: QuoteVersionWorkflowState GetQuoteVersionWorkflowButtonStates(int quoteVersionId, int quoteAlternativeId)
    parameters:
    - id: quoteVersionId
      type: System.Int32
      description: Id of the quote version to get the button states for.
    - id: quoteAlternativeId
      type: System.Int32
      description: Id of the active quote alternative id.
    return:
      type: SuperOffice.CRM.Services.QuoteVersionWorkflowState
      description: Workflow state information
    content.vb: Function GetQuoteVersionWorkflowButtonStates(quoteVersionId As Integer, quoteAlternativeId As Integer) As QuoteVersionWorkflowState
  overload: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteVersionWorkflowButtonStates*
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteVersionWorkflowStatusInfo(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.GetQuoteVersionWorkflowStatusInfo(System.Int32)
  id: GetQuoteVersionWorkflowStatusInfo(System.Int32)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: GetQuoteVersionWorkflowStatusInfo(Int32)
  nameWithType: IQuoteAgent.GetQuoteVersionWorkflowStatusInfo(Int32)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteVersionWorkflowStatusInfo(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet status info for the Quote version dialog header. Collects most important warnings/errors from across all quotelines/alternatives in this quote version.\n"
  syntax:
    content: QuoteVersionStatusInformation GetQuoteVersionWorkflowStatusInfo(int quoteVersionId)
    parameters:
    - id: quoteVersionId
      type: System.Int32
      description: Id of the quote version to get the status info for.
    return:
      type: SuperOffice.CRM.Services.QuoteVersionStatusInformation
      description: Most important status text + icon information.
    content.vb: Function GetQuoteVersionWorkflowStatusInfo(quoteVersionId As Integer) As QuoteVersionStatusInformation
  overload: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteVersionWorkflowStatusInfo*
- uid: SuperOffice.CRM.Services.IQuoteAgent.CreateOrUpdateQuoteVersionAttachments(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.CreateOrUpdateQuoteVersionAttachments(System.Int32)
  id: CreateOrUpdateQuoteVersionAttachments(System.Int32)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: CreateOrUpdateQuoteVersionAttachments(Int32)
  nameWithType: IQuoteAgent.CreateOrUpdateQuoteVersionAttachments(Int32)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.CreateOrUpdateQuoteVersionAttachments(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nLook at the Quote version, related sale and sale type, and ensure that the correct QuoteVersionAttachment records exist. This method may create or delete records\n"
  syntax:
    content: QuoteVersionAttachment[] CreateOrUpdateQuoteVersionAttachments(int quoteVersionId)
    parameters:
    - id: quoteVersionId
      type: System.Int32
      description: The ID of the quote version
    return:
      type: SuperOffice.CRM.Services.QuoteVersionAttachment[]
      description: The current attachments for the given Quote version, after all updates have been completed
    content.vb: Function CreateOrUpdateQuoteVersionAttachments(quoteVersionId As Integer) As QuoteVersionAttachment()
  overload: SuperOffice.CRM.Services.IQuoteAgent.CreateOrUpdateQuoteVersionAttachments*
- uid: SuperOffice.CRM.Services.IQuoteAgent.IncludeQuoteVersionAttachment(System.Int32,System.Int32,System.Boolean)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.IncludeQuoteVersionAttachment(System.Int32,System.Int32,System.Boolean)
  id: IncludeQuoteVersionAttachment(System.Int32,System.Int32,System.Boolean)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: IncludeQuoteVersionAttachment(Int32, Int32, Boolean)
  nameWithType: IQuoteAgent.IncludeQuoteVersionAttachment(Int32, Int32, Boolean)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.IncludeQuoteVersionAttachment(System.Int32, System.Int32, System.Boolean)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nToggle the &apos;included&apos; state of a quote version attachment; will throw exceptions if called on locked versions\n"
  syntax:
    content: bool IncludeQuoteVersionAttachment(int quoteVersionId, int documentId, bool include)
    parameters:
    - id: quoteVersionId
      type: System.Int32
      description: The ID of the Quote version
    - id: documentId
      type: System.Int32
      description: The ID of the document
    - id: include
      type: System.Boolean
      description: Desired state
    return:
      type: System.Boolean
      description: The new state
    content.vb: Function IncludeQuoteVersionAttachment(quoteVersionId As Integer, documentId As Integer, include As Boolean) As Boolean
  overload: SuperOffice.CRM.Services.IQuoteAgent.IncludeQuoteVersionAttachment*
- uid: SuperOffice.CRM.Services.IQuoteAgent.ToggleSaleTypeQuoteAttachmentDefaultIncluded(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.ToggleSaleTypeQuoteAttachmentDefaultIncluded(System.Int32)
  id: ToggleSaleTypeQuoteAttachmentDefaultIncluded(System.Int32)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: ToggleSaleTypeQuoteAttachmentDefaultIncluded(Int32)
  nameWithType: IQuoteAgent.ToggleSaleTypeQuoteAttachmentDefaultIncluded(Int32)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.ToggleSaleTypeQuoteAttachmentDefaultIncluded(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nToggle the &apos;default included&apos; state of a sale type quote attachment\n"
  syntax:
    content: bool ToggleSaleTypeQuoteAttachmentDefaultIncluded(int saleTypeQuoteAttachmentId)
    parameters:
    - id: saleTypeQuoteAttachmentId
      type: System.Int32
      description: The ID of the sale type quote attachment row
    return:
      type: System.Boolean
      description: The new state
    content.vb: Function ToggleSaleTypeQuoteAttachmentDefaultIncluded(saleTypeQuoteAttachmentId As Integer) As Boolean
  overload: SuperOffice.CRM.Services.IQuoteAgent.ToggleSaleTypeQuoteAttachmentDefaultIncluded*
- uid: SuperOffice.CRM.Services.IQuoteAgent.AddSaleTypeQuoteAttachment(System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.AddSaleTypeQuoteAttachment(System.Int32,System.Int32)
  id: AddSaleTypeQuoteAttachment(System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: AddSaleTypeQuoteAttachment(Int32, Int32)
  nameWithType: IQuoteAgent.AddSaleTypeQuoteAttachment(Int32, Int32)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.AddSaleTypeQuoteAttachment(System.Int32, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nAdds a new quote attachment document to a sale type\n"
  syntax:
    content: int AddSaleTypeQuoteAttachment(int saleTypeId, int documentId)
    parameters:
    - id: saleTypeId
      type: System.Int32
      description: The ID of the sale type
    - id: documentId
      type: System.Int32
      description: The ID of the document
    return:
      type: System.Int32
      description: ID of the new sale type quote attachment row
    content.vb: Function AddSaleTypeQuoteAttachment(saleTypeId As Integer, documentId As Integer) As Integer
  overload: SuperOffice.CRM.Services.IQuoteAgent.AddSaleTypeQuoteAttachment*
- uid: SuperOffice.CRM.Services.IQuoteAgent.DeleteSaleTypeQuoteAttachment(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.DeleteSaleTypeQuoteAttachment(System.Int32)
  id: DeleteSaleTypeQuoteAttachment(System.Int32)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: DeleteSaleTypeQuoteAttachment(Int32)
  nameWithType: IQuoteAgent.DeleteSaleTypeQuoteAttachment(Int32)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.DeleteSaleTypeQuoteAttachment(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nDeletes the sale type quote attachment with the given id\n"
  syntax:
    content: void DeleteSaleTypeQuoteAttachment(int saleTypeQuoteAttachmentId)
    parameters:
    - id: saleTypeQuoteAttachmentId
      type: System.Int32
      description: The ID of the sale type quote attachment row to delete
    content.vb: Sub DeleteSaleTypeQuoteAttachment(saleTypeQuoteAttachmentId As Integer)
  overload: SuperOffice.CRM.Services.IQuoteAgent.DeleteSaleTypeQuoteAttachment*
- uid: SuperOffice.CRM.Services.IQuoteAgent.ToggleQuoteVersionAttachmentIncluded(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IQuoteAgent.ToggleQuoteVersionAttachmentIncluded(System.Int32)
  id: ToggleQuoteVersionAttachmentIncluded(System.Int32)
  parent: SuperOffice.CRM.Services.IQuoteAgent
  langs:
  - csharp
  - vb
  name: ToggleQuoteVersionAttachmentIncluded(Int32)
  nameWithType: IQuoteAgent.ToggleQuoteVersionAttachmentIncluded(Int32)
  fullName: SuperOffice.CRM.Services.IQuoteAgent.ToggleQuoteVersionAttachmentIncluded(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nToggle the &apos;included&apos; state of a quote version attachment\n"
  syntax:
    content: bool ToggleQuoteVersionAttachmentIncluded(int quoteVersionAttachmentId)
    parameters:
    - id: quoteVersionAttachmentId
      type: System.Int32
      description: The ID of the quote version attachment row
    return:
      type: System.Boolean
      description: The new state
    content.vb: Function ToggleQuoteVersionAttachmentIncluded(quoteVersionAttachmentId As Integer) As Boolean
  overload: SuperOffice.CRM.Services.IQuoteAgent.ToggleQuoteVersionAttachmentIncluded*
references:
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
- uid: SuperOffice.CRM.Services.IQuoteAgent.CreateDefaultPriceList*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.CreateDefaultPriceList
  isExternal: true
  name: CreateDefaultPriceList
  nameWithType: IQuoteAgent.CreateDefaultPriceList
  fullName: SuperOffice.CRM.Services.IQuoteAgent.CreateDefaultPriceList
- uid: SuperOffice.CRM.Services.PriceList
  commentId: T:SuperOffice.CRM.Services.PriceList
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: PriceList
  nameWithType: PriceList
  fullName: SuperOffice.CRM.Services.PriceList
- uid: SuperOffice.CRM.Services.IQuoteAgent.SavePriceList*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.SavePriceList
  isExternal: true
  name: SavePriceList
  nameWithType: IQuoteAgent.SavePriceList
  fullName: SuperOffice.CRM.Services.IQuoteAgent.SavePriceList
- uid: SuperOffice.CRM.Services.IQuoteAgent.DeletePriceList*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.DeletePriceList
  isExternal: true
  name: DeletePriceList
  nameWithType: IQuoteAgent.DeletePriceList
  fullName: SuperOffice.CRM.Services.IQuoteAgent.DeletePriceList
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Services.IQuoteAgent.CreateDefaultProduct*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.CreateDefaultProduct
  isExternal: true
  name: CreateDefaultProduct
  nameWithType: IQuoteAgent.CreateDefaultProduct
  fullName: SuperOffice.CRM.Services.IQuoteAgent.CreateDefaultProduct
- uid: SuperOffice.CRM.Services.Product
  commentId: T:SuperOffice.CRM.Services.Product
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: Product
  nameWithType: Product
  fullName: SuperOffice.CRM.Services.Product
- uid: SuperOffice.CRM.Services.IQuoteAgent.SaveProduct*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.SaveProduct
  isExternal: true
  name: SaveProduct
  nameWithType: IQuoteAgent.SaveProduct
  fullName: SuperOffice.CRM.Services.IQuoteAgent.SaveProduct
- uid: SuperOffice.CRM.Services.IQuoteAgent.DeleteProduct*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.DeleteProduct
  isExternal: true
  name: DeleteProduct
  nameWithType: IQuoteAgent.DeleteProduct
  fullName: SuperOffice.CRM.Services.IQuoteAgent.DeleteProduct
- uid: SuperOffice.CRM.Services.IQuoteAgent.CreateDefaultQuoteAlternative*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.CreateDefaultQuoteAlternative
  isExternal: true
  name: CreateDefaultQuoteAlternative
  nameWithType: IQuoteAgent.CreateDefaultQuoteAlternative
  fullName: SuperOffice.CRM.Services.IQuoteAgent.CreateDefaultQuoteAlternative
- uid: SuperOffice.CRM.Services.QuoteAlternative
  commentId: T:SuperOffice.CRM.Services.QuoteAlternative
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: QuoteAlternative
  nameWithType: QuoteAlternative
  fullName: SuperOffice.CRM.Services.QuoteAlternative
- uid: SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteAlternative*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteAlternative
  isExternal: true
  name: SaveQuoteAlternative
  nameWithType: IQuoteAgent.SaveQuoteAlternative
  fullName: SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteAlternative
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetConfigurationFields*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.GetConfigurationFields
  isExternal: true
  name: GetConfigurationFields
  nameWithType: IQuoteAgent.GetConfigurationFields
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetConfigurationFields
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.Services.FieldMetadataDictionary
  commentId: T:SuperOffice.CRM.Services.FieldMetadataDictionary
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: FieldMetadataDictionary
  nameWithType: FieldMetadataDictionary
  fullName: SuperOffice.CRM.Services.FieldMetadataDictionary
- uid: SuperOffice.CRM.Services.IQuoteAgent.TestConnection*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.TestConnection
  isExternal: true
  name: TestConnection
  nameWithType: IQuoteAgent.TestConnection
  fullName: SuperOffice.CRM.Services.IQuoteAgent.TestConnection
- uid: SuperOffice.CRM.Services.StringDictionary
  isExternal: true
  name: StringDictionary
  nameWithType: StringDictionary
  fullName: SuperOffice.CRM.Services.StringDictionary
- uid: SuperOffice.CRM.Services.PluginResponse
  commentId: T:SuperOffice.CRM.Services.PluginResponse
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: PluginResponse
  nameWithType: PluginResponse
  fullName: SuperOffice.CRM.Services.PluginResponse
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetPriceList*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.GetPriceList
  isExternal: true
  name: GetPriceList
  nameWithType: IQuoteAgent.GetPriceList
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetPriceList
- uid: SuperOffice.CRM.Services.IQuoteAgent.CopySuperOfficePriceList*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.CopySuperOfficePriceList
  isExternal: true
  name: CopySuperOfficePriceList
  nameWithType: IQuoteAgent.CopySuperOfficePriceList
  fullName: SuperOffice.CRM.Services.IQuoteAgent.CopySuperOfficePriceList
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetProductImage*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.GetProductImage
  isExternal: true
  name: GetProductImage
  nameWithType: IQuoteAgent.GetProductImage
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetProductImage
- uid: SuperOffice.CRM.Services.IQuoteAgent.FindProduct*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.FindProduct
  isExternal: true
  name: FindProduct
  nameWithType: IQuoteAgent.FindProduct
  fullName: SuperOffice.CRM.Services.IQuoteAgent.FindProduct
- uid: SuperOffice.CRM.Services.Product[]
  isExternal: true
  name: Product[]
  nameWithType: Product[]
  fullName: SuperOffice.CRM.Services.Product[]
  nameWithType.vb: Product()
  fullName.vb: SuperOffice.CRM.Services.Product()
  name.vb: Product()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.Product
    name: Product
    nameWithType: Product
    fullName: SuperOffice.CRM.Services.Product
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.Services.Product
    name: Product
    nameWithType: Product
    fullName: SuperOffice.CRM.Services.Product
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetProduct*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.GetProduct
  isExternal: true
  name: GetProduct
  nameWithType: IQuoteAgent.GetProduct
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetProduct
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetProductFromDbId*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.GetProductFromDbId
  isExternal: true
  name: GetProductFromDbId
  nameWithType: IQuoteAgent.GetProductFromDbId
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetProductFromDbId
- uid: SuperOffice.CRM.Services.IQuoteAgent.RemoveProduct*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.RemoveProduct
  isExternal: true
  name: RemoveProduct
  nameWithType: IQuoteAgent.RemoveProduct
  fullName: SuperOffice.CRM.Services.IQuoteAgent.RemoveProduct
- uid: SuperOffice.CRM.Services.IQuoteAgent.ToggleProductInAssortment*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.ToggleProductInAssortment
  isExternal: true
  name: ToggleProductInAssortment
  nameWithType: IQuoteAgent.ToggleProductInAssortment
  fullName: SuperOffice.CRM.Services.IQuoteAgent.ToggleProductInAssortment
- uid: SuperOffice.CRM.Services.IQuoteAgent.SaveQuote*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.SaveQuote
  isExternal: true
  name: SaveQuote
  nameWithType: IQuoteAgent.SaveQuote
  fullName: SuperOffice.CRM.Services.IQuoteAgent.SaveQuote
- uid: SuperOffice.CRM.Services.Quote
  commentId: T:SuperOffice.CRM.Services.Quote
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: Quote
  nameWithType: Quote
  fullName: SuperOffice.CRM.Services.Quote
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetQuote*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.GetQuote
  isExternal: true
  name: GetQuote
  nameWithType: IQuoteAgent.GetQuote
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetQuote
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteFromSaleId*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.GetQuoteFromSaleId
  isExternal: true
  name: GetQuoteFromSaleId
  nameWithType: IQuoteAgent.GetQuoteFromSaleId
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteFromSaleId
- uid: SuperOffice.CRM.Services.IQuoteAgent.CreateAndSaveQuote*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.CreateAndSaveQuote
  isExternal: true
  name: CreateAndSaveQuote
  nameWithType: IQuoteAgent.CreateAndSaveQuote
  fullName: SuperOffice.CRM.Services.IQuoteAgent.CreateAndSaveQuote
- uid: SuperOffice.CRM.Services.QuoteEntity
  commentId: T:SuperOffice.CRM.Services.QuoteEntity
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: QuoteEntity
  nameWithType: QuoteEntity
  fullName: SuperOffice.CRM.Services.QuoteEntity
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteEntity*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.GetQuoteEntity
  isExternal: true
  name: GetQuoteEntity
  nameWithType: IQuoteAgent.GetQuoteEntity
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteEntity
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteEntityFromSaleId*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.GetQuoteEntityFromSaleId
  isExternal: true
  name: GetQuoteEntityFromSaleId
  nameWithType: IQuoteAgent.GetQuoteEntityFromSaleId
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteEntityFromSaleId
- uid: SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteEntity*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteEntity
  isExternal: true
  name: SaveQuoteEntity
  nameWithType: IQuoteAgent.SaveQuoteEntity
  fullName: SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteEntity
- uid: SuperOffice.CRM.Services.IQuoteAgent.CreateAndSaveQuoteFromSale*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.CreateAndSaveQuoteFromSale
  isExternal: true
  name: CreateAndSaveQuoteFromSale
  nameWithType: IQuoteAgent.CreateAndSaveQuoteFromSale
  fullName: SuperOffice.CRM.Services.IQuoteAgent.CreateAndSaveQuoteFromSale
- uid: SuperOffice.CRM.Services.IQuoteAgent.PlaceOrder*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.PlaceOrder
  isExternal: true
  name: PlaceOrder
  nameWithType: IQuoteAgent.PlaceOrder
  fullName: SuperOffice.CRM.Services.IQuoteAgent.PlaceOrder
- uid: SuperOffice.CRM.Services.PluginUrlResponse
  commentId: T:SuperOffice.CRM.Services.PluginUrlResponse
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: PluginUrlResponse
  nameWithType: PluginUrlResponse
  fullName: SuperOffice.CRM.Services.PluginUrlResponse
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetOrderState*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.GetOrderState
  isExternal: true
  name: GetOrderState
  nameWithType: IQuoteAgent.GetOrderState
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetOrderState
- uid: SuperOffice.CRM.Services.IQuoteAgent.DeleteQuote*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.DeleteQuote
  isExternal: true
  name: DeleteQuote
  nameWithType: IQuoteAgent.DeleteQuote
  fullName: SuperOffice.CRM.Services.IQuoteAgent.DeleteQuote
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteAlternative*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.GetQuoteAlternative
  isExternal: true
  name: GetQuoteAlternative
  nameWithType: IQuoteAgent.GetQuoteAlternative
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteAlternative
- uid: SuperOffice.CRM.Services.IQuoteAgent.RecalculateQuoteAlternative*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.RecalculateQuoteAlternative
  isExternal: true
  name: RecalculateQuoteAlternative
  nameWithType: IQuoteAgent.RecalculateQuoteAlternative
  fullName: SuperOffice.CRM.Services.IQuoteAgent.RecalculateQuoteAlternative
- uid: SuperOffice.CRM.Services.QuoteAlternativeRecalculated
  commentId: T:SuperOffice.CRM.Services.QuoteAlternativeRecalculated
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: QuoteAlternativeRecalculated
  nameWithType: QuoteAlternativeRecalculated
  fullName: SuperOffice.CRM.Services.QuoteAlternativeRecalculated
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteAlternatives*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.GetQuoteAlternatives
  isExternal: true
  name: GetQuoteAlternatives
  nameWithType: IQuoteAgent.GetQuoteAlternatives
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteAlternatives
- uid: SuperOffice.CRM.Services.QuoteAlternative[]
  isExternal: true
  name: QuoteAlternative[]
  nameWithType: QuoteAlternative[]
  fullName: SuperOffice.CRM.Services.QuoteAlternative[]
  nameWithType.vb: QuoteAlternative()
  fullName.vb: SuperOffice.CRM.Services.QuoteAlternative()
  name.vb: QuoteAlternative()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.QuoteAlternative
    name: QuoteAlternative
    nameWithType: QuoteAlternative
    fullName: SuperOffice.CRM.Services.QuoteAlternative
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.Services.QuoteAlternative
    name: QuoteAlternative
    nameWithType: QuoteAlternative
    fullName: SuperOffice.CRM.Services.QuoteAlternative
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.IQuoteAgent.MoveQuoteLine*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.MoveQuoteLine
  isExternal: true
  name: MoveQuoteLine
  nameWithType: IQuoteAgent.MoveQuoteLine
  fullName: SuperOffice.CRM.Services.IQuoteAgent.MoveQuoteLine
- uid: SuperOffice.CRM.Services.IQuoteAgent.CreateQuoteAlternative*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.CreateQuoteAlternative
  isExternal: true
  name: CreateQuoteAlternative
  nameWithType: IQuoteAgent.CreateQuoteAlternative
  fullName: SuperOffice.CRM.Services.IQuoteAgent.CreateQuoteAlternative
- uid: SuperOffice.CRM.Services.IQuoteAgent.CopyQuoteAlternative*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.CopyQuoteAlternative
  isExternal: true
  name: CopyQuoteAlternative
  nameWithType: IQuoteAgent.CopyQuoteAlternative
  fullName: SuperOffice.CRM.Services.IQuoteAgent.CopyQuoteAlternative
- uid: SuperOffice.CRM.Services.IQuoteAgent.DeleteQuoteAlternative*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.DeleteQuoteAlternative
  isExternal: true
  name: DeleteQuoteAlternative
  nameWithType: IQuoteAgent.DeleteQuoteAlternative
  fullName: SuperOffice.CRM.Services.IQuoteAgent.DeleteQuoteAlternative
- uid: SuperOffice.CRM.Services.IQuoteAgent.HasConnections*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.HasConnections
  isExternal: true
  name: HasConnections
  nameWithType: IQuoteAgent.HasConnections
  fullName: SuperOffice.CRM.Services.IQuoteAgent.HasConnections
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetAllInstalledQuoteConnections*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.GetAllInstalledQuoteConnections
  isExternal: true
  name: GetAllInstalledQuoteConnections
  nameWithType: IQuoteAgent.GetAllInstalledQuoteConnections
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetAllInstalledQuoteConnections
- uid: SuperOffice.CRM.Services.QuoteConnection[]
  isExternal: true
  name: QuoteConnection[]
  nameWithType: QuoteConnection[]
  fullName: SuperOffice.CRM.Services.QuoteConnection[]
  nameWithType.vb: QuoteConnection()
  fullName.vb: SuperOffice.CRM.Services.QuoteConnection()
  name.vb: QuoteConnection()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.QuoteConnection
    name: QuoteConnection
    nameWithType: QuoteConnection
    fullName: SuperOffice.CRM.Services.QuoteConnection
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.Services.QuoteConnection
    name: QuoteConnection
    nameWithType: QuoteConnection
    fullName: SuperOffice.CRM.Services.QuoteConnection
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetAllAvailableQuoteConnections*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.GetAllAvailableQuoteConnections
  isExternal: true
  name: GetAllAvailableQuoteConnections
  nameWithType: IQuoteAgent.GetAllAvailableQuoteConnections
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetAllAvailableQuoteConnections
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetAllAvailableQuoteConnectionsWithPriceLists*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.GetAllAvailableQuoteConnectionsWithPriceLists
  isExternal: true
  name: GetAllAvailableQuoteConnectionsWithPriceLists
  nameWithType: IQuoteAgent.GetAllAvailableQuoteConnectionsWithPriceLists
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetAllAvailableQuoteConnectionsWithPriceLists
- uid: SuperOffice.CRM.Services.IQuoteAgent.CreateConnectionFromConnectorName*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.CreateConnectionFromConnectorName
  isExternal: true
  name: CreateConnectionFromConnectorName
  nameWithType: IQuoteAgent.CreateConnectionFromConnectorName
  fullName: SuperOffice.CRM.Services.IQuoteAgent.CreateConnectionFromConnectorName
- uid: SuperOffice.CRM.Services.QuoteConnection
  commentId: T:SuperOffice.CRM.Services.QuoteConnection
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: QuoteConnection
  nameWithType: QuoteConnection
  fullName: SuperOffice.CRM.Services.QuoteConnection
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetConnection*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.GetConnection
  isExternal: true
  name: GetConnection
  nameWithType: IQuoteAgent.GetConnection
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetConnection
- uid: SuperOffice.CRM.Services.IQuoteAgent.SaveConnection*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.SaveConnection
  isExternal: true
  name: SaveConnection
  nameWithType: IQuoteAgent.SaveConnection
  fullName: SuperOffice.CRM.Services.IQuoteAgent.SaveConnection
- uid: SuperOffice.CRM.Services.IQuoteAgent.DeleteConnection*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.DeleteConnection
  isExternal: true
  name: DeleteConnection
  nameWithType: IQuoteAgent.DeleteConnection
  fullName: SuperOffice.CRM.Services.IQuoteAgent.DeleteConnection
- uid: SuperOffice.CRM.Services.IQuoteAgent.RestoreConnection*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.RestoreConnection
  isExternal: true
  name: RestoreConnection
  nameWithType: IQuoteAgent.RestoreConnection
  fullName: SuperOffice.CRM.Services.IQuoteAgent.RestoreConnection
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetConnectionsForAssociate*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.GetConnectionsForAssociate
  isExternal: true
  name: GetConnectionsForAssociate
  nameWithType: IQuoteAgent.GetConnectionsForAssociate
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetConnectionsForAssociate
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetActivePriceLists*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.GetActivePriceLists
  isExternal: true
  name: GetActivePriceLists
  nameWithType: IQuoteAgent.GetActivePriceLists
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetActivePriceLists
- uid: SuperOffice.CRM.Services.PriceList[]
  isExternal: true
  name: PriceList[]
  nameWithType: PriceList[]
  fullName: SuperOffice.CRM.Services.PriceList[]
  nameWithType.vb: PriceList()
  fullName.vb: SuperOffice.CRM.Services.PriceList()
  name.vb: PriceList()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.PriceList
    name: PriceList
    nameWithType: PriceList
    fullName: SuperOffice.CRM.Services.PriceList
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.Services.PriceList
    name: PriceList
    nameWithType: PriceList
    fullName: SuperOffice.CRM.Services.PriceList
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetActivePriceListsByCurrencyId*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.GetActivePriceListsByCurrencyId
  isExternal: true
  name: GetActivePriceListsByCurrencyId
  nameWithType: IQuoteAgent.GetActivePriceListsByCurrencyId
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetActivePriceListsByCurrencyId
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetAllPriceLists*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.GetAllPriceLists
  isExternal: true
  name: GetAllPriceLists
  nameWithType: IQuoteAgent.GetAllPriceLists
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetAllPriceLists
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetAllPriceListsByCurrencyId*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.GetAllPriceListsByCurrencyId
  isExternal: true
  name: GetAllPriceListsByCurrencyId
  nameWithType: IQuoteAgent.GetAllPriceListsByCurrencyId
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetAllPriceListsByCurrencyId
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetConnectorCapabilityNames*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.GetConnectorCapabilityNames
  isExternal: true
  name: GetConnectorCapabilityNames
  nameWithType: IQuoteAgent.GetConnectorCapabilityNames
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetConnectorCapabilityNames
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetConnectorCapabilities*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.GetConnectorCapabilities
  isExternal: true
  name: GetConnectorCapabilities
  nameWithType: IQuoteAgent.GetConnectorCapabilities
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetConnectorCapabilities
- uid: SuperOffice.CRM.Services.IQuoteAgent.CanConnectorProvideCapability*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.CanConnectorProvideCapability
  isExternal: true
  name: CanConnectorProvideCapability
  nameWithType: IQuoteAgent.CanConnectorProvideCapability
  fullName: SuperOffice.CRM.Services.IQuoteAgent.CanConnectorProvideCapability
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetConnectionStartupErrors*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.GetConnectionStartupErrors
  isExternal: true
  name: GetConnectionStartupErrors
  nameWithType: IQuoteAgent.GetConnectionStartupErrors
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetConnectionStartupErrors
- uid: SuperOffice.CRM.Services.PluginResponse[]
  isExternal: true
  name: PluginResponse[]
  nameWithType: PluginResponse[]
  fullName: SuperOffice.CRM.Services.PluginResponse[]
  nameWithType.vb: PluginResponse()
  fullName.vb: SuperOffice.CRM.Services.PluginResponse()
  name.vb: PluginResponse()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.PluginResponse
    name: PluginResponse
    nameWithType: PluginResponse
    fullName: SuperOffice.CRM.Services.PluginResponse
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.Services.PluginResponse
    name: PluginResponse
    nameWithType: PluginResponse
    fullName: SuperOffice.CRM.Services.PluginResponse
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetConnectionStartupResponse*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.GetConnectionStartupResponse
  isExternal: true
  name: GetConnectionStartupResponse
  nameWithType: IQuoteAgent.GetConnectionStartupResponse
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetConnectionStartupResponse
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetConnectionConfigFields*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.GetConnectionConfigFields
  isExternal: true
  name: GetConnectionConfigFields
  nameWithType: IQuoteAgent.GetConnectionConfigFields
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetConnectionConfigFields
- uid: SuperOffice.CRM.Services.IQuoteAgent.SaveConnectionConfigFields*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.SaveConnectionConfigFields
  isExternal: true
  name: SaveConnectionConfigFields
  nameWithType: IQuoteAgent.SaveConnectionConfigFields
  fullName: SuperOffice.CRM.Services.IQuoteAgent.SaveConnectionConfigFields
- uid: SuperOffice.CRM.Services.IQuoteAgent.CreateQuoteLine*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.CreateQuoteLine
  isExternal: true
  name: CreateQuoteLine
  nameWithType: IQuoteAgent.CreateQuoteLine
  fullName: SuperOffice.CRM.Services.IQuoteAgent.CreateQuoteLine
- uid: SuperOffice.CRM.Services.QuoteLine
  commentId: T:SuperOffice.CRM.Services.QuoteLine
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: QuoteLine
  nameWithType: QuoteLine
  fullName: SuperOffice.CRM.Services.QuoteLine
- uid: SuperOffice.CRM.Services.IQuoteAgent.CreateQuoteLineFromProduct*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.CreateQuoteLineFromProduct
  isExternal: true
  name: CreateQuoteLineFromProduct
  nameWithType: IQuoteAgent.CreateQuoteLineFromProduct
  fullName: SuperOffice.CRM.Services.IQuoteAgent.CreateQuoteLineFromProduct
- uid: SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteLine*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteLine
  isExternal: true
  name: SaveQuoteLine
  nameWithType: IQuoteAgent.SaveQuoteLine
  fullName: SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteLine
- uid: SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteLines*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteLines
  isExternal: true
  name: SaveQuoteLines
  nameWithType: IQuoteAgent.SaveQuoteLines
  fullName: SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteLines
- uid: SuperOffice.CRM.Services.QuoteLine[]
  isExternal: true
  name: QuoteLine[]
  nameWithType: QuoteLine[]
  fullName: SuperOffice.CRM.Services.QuoteLine[]
  nameWithType.vb: QuoteLine()
  fullName.vb: SuperOffice.CRM.Services.QuoteLine()
  name.vb: QuoteLine()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.QuoteLine
    name: QuoteLine
    nameWithType: QuoteLine
    fullName: SuperOffice.CRM.Services.QuoteLine
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.Services.QuoteLine
    name: QuoteLine
    nameWithType: QuoteLine
    fullName: SuperOffice.CRM.Services.QuoteLine
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteLine*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.GetQuoteLine
  isExternal: true
  name: GetQuoteLine
  nameWithType: IQuoteAgent.GetQuoteLine
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteLine
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteLines*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.GetQuoteLines
  isExternal: true
  name: GetQuoteLines
  nameWithType: IQuoteAgent.GetQuoteLines
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteLines
- uid: SuperOffice.CRM.Services.IQuoteAgent.DeleteQuoteLine*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.DeleteQuoteLine
  isExternal: true
  name: DeleteQuoteLine
  nameWithType: IQuoteAgent.DeleteQuoteLine
  fullName: SuperOffice.CRM.Services.IQuoteAgent.DeleteQuoteLine
- uid: SuperOffice.CRM.Services.IQuoteAgent.DeleteQuoteLines*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.DeleteQuoteLines
  isExternal: true
  name: DeleteQuoteLines
  nameWithType: IQuoteAgent.DeleteQuoteLines
  fullName: SuperOffice.CRM.Services.IQuoteAgent.DeleteQuoteLines
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.IQuoteAgent.RecalculateQuoteLine*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.RecalculateQuoteLine
  isExternal: true
  name: RecalculateQuoteLine
  nameWithType: IQuoteAgent.RecalculateQuoteLine
  fullName: SuperOffice.CRM.Services.IQuoteAgent.RecalculateQuoteLine
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteLineImage*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.GetQuoteLineImage
  isExternal: true
  name: GetQuoteLineImage
  nameWithType: IQuoteAgent.GetQuoteLineImage
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteLineImage
- uid: System.Drawing.Image
  isExternal: true
  name: Image
  nameWithType: Image
  fullName: System.Drawing.Image
- uid: SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteLineImage*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteLineImage
  isExternal: true
  name: SaveQuoteLineImage
  nameWithType: IQuoteAgent.SaveQuoteLineImage
  fullName: SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteLineImage
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetExtraInfo*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.GetExtraInfo
  isExternal: true
  name: GetExtraInfo
  nameWithType: IQuoteAgent.GetExtraInfo
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetExtraInfo
- uid: SuperOffice.CRM.Services.ProductExtraDataField[]
  isExternal: true
  name: ProductExtraDataField[]
  nameWithType: ProductExtraDataField[]
  fullName: SuperOffice.CRM.Services.ProductExtraDataField[]
  nameWithType.vb: ProductExtraDataField()
  fullName.vb: SuperOffice.CRM.Services.ProductExtraDataField()
  name.vb: ProductExtraDataField()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ProductExtraDataField
    name: ProductExtraDataField
    nameWithType: ProductExtraDataField
    fullName: SuperOffice.CRM.Services.ProductExtraDataField
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.Services.ProductExtraDataField
    name: ProductExtraDataField
    nameWithType: ProductExtraDataField
    fullName: SuperOffice.CRM.Services.ProductExtraDataField
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteLineConfiguration*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.GetQuoteLineConfiguration
  isExternal: true
  name: GetQuoteLineConfiguration
  nameWithType: IQuoteAgent.GetQuoteLineConfiguration
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteLineConfiguration
- uid: SuperOffice.CRM.Services.QuoteLineConfiguration
  commentId: T:SuperOffice.CRM.Services.QuoteLineConfiguration
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: QuoteLineConfiguration
  nameWithType: QuoteLineConfiguration
  fullName: SuperOffice.CRM.Services.QuoteLineConfiguration
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteLineConfigurationFromFieldName*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.GetQuoteLineConfigurationFromFieldName
  isExternal: true
  name: GetQuoteLineConfigurationFromFieldName
  nameWithType: IQuoteAgent.GetQuoteLineConfigurationFromFieldName
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteLineConfigurationFromFieldName
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetAllQuoteLineConfigurations*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.GetAllQuoteLineConfigurations
  isExternal: true
  name: GetAllQuoteLineConfigurations
  nameWithType: IQuoteAgent.GetAllQuoteLineConfigurations
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetAllQuoteLineConfigurations
- uid: SuperOffice.CRM.Services.QuoteLineConfiguration[]
  isExternal: true
  name: QuoteLineConfiguration[]
  nameWithType: QuoteLineConfiguration[]
  fullName: SuperOffice.CRM.Services.QuoteLineConfiguration[]
  nameWithType.vb: QuoteLineConfiguration()
  fullName.vb: SuperOffice.CRM.Services.QuoteLineConfiguration()
  name.vb: QuoteLineConfiguration()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.QuoteLineConfiguration
    name: QuoteLineConfiguration
    nameWithType: QuoteLineConfiguration
    fullName: SuperOffice.CRM.Services.QuoteLineConfiguration
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.Services.QuoteLineConfiguration
    name: QuoteLineConfiguration
    nameWithType: QuoteLineConfiguration
    fullName: SuperOffice.CRM.Services.QuoteLineConfiguration
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetInUseQuoteLineConfigurations*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.GetInUseQuoteLineConfigurations
  isExternal: true
  name: GetInUseQuoteLineConfigurations
  nameWithType: IQuoteAgent.GetInUseQuoteLineConfigurations
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetInUseQuoteLineConfigurations
- uid: SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteLineConfiguration*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteLineConfiguration
  isExternal: true
  name: SaveQuoteLineConfiguration
  nameWithType: IQuoteAgent.SaveQuoteLineConfiguration
  fullName: SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteLineConfiguration
- uid: SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteLineConfigurations*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteLineConfigurations
  isExternal: true
  name: SaveQuoteLineConfigurations
  nameWithType: IQuoteAgent.SaveQuoteLineConfigurations
  fullName: SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteLineConfigurations
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteList*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.GetQuoteList
  isExternal: true
  name: GetQuoteList
  nameWithType: IQuoteAgent.GetQuoteList
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteList
- uid: SuperOffice.CRM.Services.QuoteListItem[]
  isExternal: true
  name: QuoteListItem[]
  nameWithType: QuoteListItem[]
  fullName: SuperOffice.CRM.Services.QuoteListItem[]
  nameWithType.vb: QuoteListItem()
  fullName.vb: SuperOffice.CRM.Services.QuoteListItem()
  name.vb: QuoteListItem()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.QuoteListItem
    name: QuoteListItem
    nameWithType: QuoteListItem
    fullName: SuperOffice.CRM.Services.QuoteListItem
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.Services.QuoteListItem
    name: QuoteListItem
    nameWithType: QuoteListItem
    fullName: SuperOffice.CRM.Services.QuoteListItem
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.IQuoteAgent.ValidateQuoteVersion*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.ValidateQuoteVersion
  isExternal: true
  name: ValidateQuoteVersion
  nameWithType: IQuoteAgent.ValidateQuoteVersion
  fullName: SuperOffice.CRM.Services.IQuoteAgent.ValidateQuoteVersion
- uid: SuperOffice.Data.QuoteVersionButtonAction
  isExternal: true
  name: QuoteVersionButtonAction
  nameWithType: QuoteVersionButtonAction
  fullName: SuperOffice.Data.QuoteVersionButtonAction
- uid: SuperOffice.CRM.Services.QuoteVersionValidated
  commentId: T:SuperOffice.CRM.Services.QuoteVersionValidated
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: QuoteVersionValidated
  nameWithType: QuoteVersionValidated
  fullName: SuperOffice.CRM.Services.QuoteVersionValidated
- uid: SuperOffice.CRM.Services.IQuoteAgent.CreateAndSaveQuoteVersion*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.CreateAndSaveQuoteVersion
  isExternal: true
  name: CreateAndSaveQuoteVersion
  nameWithType: IQuoteAgent.CreateAndSaveQuoteVersion
  fullName: SuperOffice.CRM.Services.IQuoteAgent.CreateAndSaveQuoteVersion
- uid: SuperOffice.CRM.Services.QuoteVersion
  commentId: T:SuperOffice.CRM.Services.QuoteVersion
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: QuoteVersion
  nameWithType: QuoteVersion
  fullName: SuperOffice.CRM.Services.QuoteVersion
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteVersion*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.GetQuoteVersion
  isExternal: true
  name: GetQuoteVersion
  nameWithType: IQuoteAgent.GetQuoteVersion
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteVersion
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteVersions*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.GetQuoteVersions
  isExternal: true
  name: GetQuoteVersions
  nameWithType: IQuoteAgent.GetQuoteVersions
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteVersions
- uid: SuperOffice.CRM.Services.QuoteVersion[]
  isExternal: true
  name: QuoteVersion[]
  nameWithType: QuoteVersion[]
  fullName: SuperOffice.CRM.Services.QuoteVersion[]
  nameWithType.vb: QuoteVersion()
  fullName.vb: SuperOffice.CRM.Services.QuoteVersion()
  name.vb: QuoteVersion()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.QuoteVersion
    name: QuoteVersion
    nameWithType: QuoteVersion
    fullName: SuperOffice.CRM.Services.QuoteVersion
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.Services.QuoteVersion
    name: QuoteVersion
    nameWithType: QuoteVersion
    fullName: SuperOffice.CRM.Services.QuoteVersion
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.IQuoteAgent.SendQuoteVersion*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.SendQuoteVersion
  isExternal: true
  name: SendQuoteVersion
  nameWithType: IQuoteAgent.SendQuoteVersion
  fullName: SuperOffice.CRM.Services.IQuoteAgent.SendQuoteVersion
- uid: SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteVersion*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteVersion
  isExternal: true
  name: SaveQuoteVersion
  nameWithType: IQuoteAgent.SaveQuoteVersion
  fullName: SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteVersion
- uid: SuperOffice.CRM.Services.IQuoteAgent.ApproveQuoteVersion*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.ApproveQuoteVersion
  isExternal: true
  name: ApproveQuoteVersion
  nameWithType: IQuoteAgent.ApproveQuoteVersion
  fullName: SuperOffice.CRM.Services.IQuoteAgent.ApproveQuoteVersion
- uid: SuperOffice.CRM.Services.ApproveRejectResponse
  commentId: T:SuperOffice.CRM.Services.ApproveRejectResponse
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: ApproveRejectResponse
  nameWithType: ApproveRejectResponse
  fullName: SuperOffice.CRM.Services.ApproveRejectResponse
- uid: SuperOffice.CRM.Services.IQuoteAgent.RejectQuoteVersion*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.RejectQuoteVersion
  isExternal: true
  name: RejectQuoteVersion
  nameWithType: IQuoteAgent.RejectQuoteVersion
  fullName: SuperOffice.CRM.Services.IQuoteAgent.RejectQuoteVersion
- uid: SuperOffice.CRM.Services.IQuoteAgent.GenerateQuoteDocuments*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.GenerateQuoteDocuments
  isExternal: true
  name: GenerateQuoteDocuments
  nameWithType: IQuoteAgent.GenerateQuoteDocuments
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GenerateQuoteDocuments
- uid: SuperOffice.CRM.Services.QuotePublishDocuments
  commentId: T:SuperOffice.CRM.Services.QuotePublishDocuments
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: QuotePublishDocuments
  nameWithType: QuotePublishDocuments
  fullName: SuperOffice.CRM.Services.QuotePublishDocuments
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetOrderConfirmation*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.GetOrderConfirmation
  isExternal: true
  name: GetOrderConfirmation
  nameWithType: IQuoteAgent.GetOrderConfirmation
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetOrderConfirmation
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteVersionWorkflowState*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.GetQuoteVersionWorkflowState
  isExternal: true
  name: GetQuoteVersionWorkflowState
  nameWithType: IQuoteAgent.GetQuoteVersionWorkflowState
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteVersionWorkflowState
- uid: SuperOffice.CRM.Services.QuoteVersionWorkflowState
  commentId: T:SuperOffice.CRM.Services.QuoteVersionWorkflowState
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: QuoteVersionWorkflowState
  nameWithType: QuoteVersionWorkflowState
  fullName: SuperOffice.CRM.Services.QuoteVersionWorkflowState
- uid: SuperOffice.CRM.Services.IQuoteAgent.UpdateQuoteVersionPrices*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.UpdateQuoteVersionPrices
  isExternal: true
  name: UpdateQuoteVersionPrices
  nameWithType: IQuoteAgent.UpdateQuoteVersionPrices
  fullName: SuperOffice.CRM.Services.IQuoteAgent.UpdateQuoteVersionPrices
- uid: SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteVersionNumber*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteVersionNumber
  isExternal: true
  name: SaveQuoteVersionNumber
  nameWithType: IQuoteAgent.SaveQuoteVersionNumber
  fullName: SuperOffice.CRM.Services.IQuoteAgent.SaveQuoteVersionNumber
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteVersionWorkflowImageState*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.GetQuoteVersionWorkflowImageState
  isExternal: true
  name: GetQuoteVersionWorkflowImageState
  nameWithType: IQuoteAgent.GetQuoteVersionWorkflowImageState
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteVersionWorkflowImageState
- uid: SuperOffice.CRM.Services.QuoteVersionButtonState
  commentId: T:SuperOffice.CRM.Services.QuoteVersionButtonState
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: QuoteVersionButtonState
  nameWithType: QuoteVersionButtonState
  fullName: SuperOffice.CRM.Services.QuoteVersionButtonState
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteVersionWorkflowButtonStates*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.GetQuoteVersionWorkflowButtonStates
  isExternal: true
  name: GetQuoteVersionWorkflowButtonStates
  nameWithType: IQuoteAgent.GetQuoteVersionWorkflowButtonStates
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteVersionWorkflowButtonStates
- uid: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteVersionWorkflowStatusInfo*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.GetQuoteVersionWorkflowStatusInfo
  isExternal: true
  name: GetQuoteVersionWorkflowStatusInfo
  nameWithType: IQuoteAgent.GetQuoteVersionWorkflowStatusInfo
  fullName: SuperOffice.CRM.Services.IQuoteAgent.GetQuoteVersionWorkflowStatusInfo
- uid: SuperOffice.CRM.Services.QuoteVersionStatusInformation
  commentId: T:SuperOffice.CRM.Services.QuoteVersionStatusInformation
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: QuoteVersionStatusInformation
  nameWithType: QuoteVersionStatusInformation
  fullName: SuperOffice.CRM.Services.QuoteVersionStatusInformation
- uid: SuperOffice.CRM.Services.IQuoteAgent.CreateOrUpdateQuoteVersionAttachments*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.CreateOrUpdateQuoteVersionAttachments
  isExternal: true
  name: CreateOrUpdateQuoteVersionAttachments
  nameWithType: IQuoteAgent.CreateOrUpdateQuoteVersionAttachments
  fullName: SuperOffice.CRM.Services.IQuoteAgent.CreateOrUpdateQuoteVersionAttachments
- uid: SuperOffice.CRM.Services.QuoteVersionAttachment[]
  isExternal: true
  name: QuoteVersionAttachment[]
  nameWithType: QuoteVersionAttachment[]
  fullName: SuperOffice.CRM.Services.QuoteVersionAttachment[]
  nameWithType.vb: QuoteVersionAttachment()
  fullName.vb: SuperOffice.CRM.Services.QuoteVersionAttachment()
  name.vb: QuoteVersionAttachment()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.QuoteVersionAttachment
    name: QuoteVersionAttachment
    nameWithType: QuoteVersionAttachment
    fullName: SuperOffice.CRM.Services.QuoteVersionAttachment
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.Services.QuoteVersionAttachment
    name: QuoteVersionAttachment
    nameWithType: QuoteVersionAttachment
    fullName: SuperOffice.CRM.Services.QuoteVersionAttachment
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.IQuoteAgent.IncludeQuoteVersionAttachment*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.IncludeQuoteVersionAttachment
  isExternal: true
  name: IncludeQuoteVersionAttachment
  nameWithType: IQuoteAgent.IncludeQuoteVersionAttachment
  fullName: SuperOffice.CRM.Services.IQuoteAgent.IncludeQuoteVersionAttachment
- uid: SuperOffice.CRM.Services.IQuoteAgent.ToggleSaleTypeQuoteAttachmentDefaultIncluded*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.ToggleSaleTypeQuoteAttachmentDefaultIncluded
  isExternal: true
  name: ToggleSaleTypeQuoteAttachmentDefaultIncluded
  nameWithType: IQuoteAgent.ToggleSaleTypeQuoteAttachmentDefaultIncluded
  fullName: SuperOffice.CRM.Services.IQuoteAgent.ToggleSaleTypeQuoteAttachmentDefaultIncluded
- uid: SuperOffice.CRM.Services.IQuoteAgent.AddSaleTypeQuoteAttachment*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.AddSaleTypeQuoteAttachment
  isExternal: true
  name: AddSaleTypeQuoteAttachment
  nameWithType: IQuoteAgent.AddSaleTypeQuoteAttachment
  fullName: SuperOffice.CRM.Services.IQuoteAgent.AddSaleTypeQuoteAttachment
- uid: SuperOffice.CRM.Services.IQuoteAgent.DeleteSaleTypeQuoteAttachment*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.DeleteSaleTypeQuoteAttachment
  isExternal: true
  name: DeleteSaleTypeQuoteAttachment
  nameWithType: IQuoteAgent.DeleteSaleTypeQuoteAttachment
  fullName: SuperOffice.CRM.Services.IQuoteAgent.DeleteSaleTypeQuoteAttachment
- uid: SuperOffice.CRM.Services.IQuoteAgent.ToggleQuoteVersionAttachmentIncluded*
  commentId: Overload:SuperOffice.CRM.Services.IQuoteAgent.ToggleQuoteVersionAttachmentIncluded
  isExternal: true
  name: ToggleQuoteVersionAttachmentIncluded
  nameWithType: IQuoteAgent.ToggleQuoteVersionAttachmentIncluded
  fullName: SuperOffice.CRM.Services.IQuoteAgent.ToggleQuoteVersionAttachmentIncluded
