### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Services.IImportAgent
  commentId: T:SuperOffice.CRM.Services.IImportAgent
  id: IImportAgent
  parent: SuperOffice.CRM.Services
  children:
  - SuperOffice.CRM.Services.IImportAgent.CreateDefaultImportLineAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IImportAgent.CreateErpImportDataAsync(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.String[],System.Int32,SuperOffice.Data.ErpActorType,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IImportAgent.PreviewImportAsync(SuperOffice.CRM.Services.ImportLine[],System.String[],System.String,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IImportAgent.SaveImportAsync(SuperOffice.CRM.Services.ImportLine[],System.String[],System.Boolean,System.String,System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IImportAgent
  nameWithType: IImportAgent
  fullName: SuperOffice.CRM.Services.IImportAgent
  type: Interface
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nInterface for the Import Agent\nThis agent can be used to import data into the system\n"
  example:
  - "\n<pre><code>  using SuperOffice;\n  using SuperOffice.CRM.Services;\n\n  using (SoSession mySession = SoSession.Authenticate(&quot;user&quot;, &quot;pass&quot;))\n  {\n     using (ImportAgent agent = new ImportAgent())\n     {\n        // call methods on agent here...\n     }\n  }</code></pre>\n"
  syntax:
    content: >-
      [Agent("Import Agent", "Interface for the Import Agent. This agent can be used to import data into the system")]

      public interface IImportAgent : IAgent
    content.vb: >-
      <Agent("Import Agent", "Interface for the Import Agent. This agent can be used to import data into the system")>

      Public Interface IImportAgent
          Inherits IAgent
  attributes:
  - type: SuperOffice.CRM.Services.Reflection.AgentAttribute
    ctor: SuperOffice.CRM.Services.Reflection.AgentAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Import Agent
    - type: System.String
      value: Interface for the Import Agent. This agent can be used to import data into the system
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.CRM.Services.IImportAgent.PreviewImportAsync(SuperOffice.CRM.Services.ImportLine[],System.String[],System.String,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IImportAgent.PreviewImportAsync(SuperOffice.CRM.Services.ImportLine[],System.String[],System.String,System.String,System.Threading.CancellationToken)
  id: PreviewImportAsync(SuperOffice.CRM.Services.ImportLine[],System.String[],System.String,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IImportAgent
  langs:
  - csharp
  - vb
  name: PreviewImportAsync(ImportLine[], String[], String, String, CancellationToken)
  nameWithType: IImportAgent.PreviewImportAsync(ImportLine[], String[], String, String, CancellationToken)
  fullName: SuperOffice.CRM.Services.IImportAgent.PreviewImportAsync(SuperOffice.CRM.Services.ImportLine[], System.String[], System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nPreview the import\n"
  syntax:
    content: Task<ImportLine[]> PreviewImportAsync(ImportLine[] importLines, string[] columnDefinition, string culture, string context, CancellationToken cancellationToken = null)
    parameters:
    - id: importLines
      type: SuperOffice.CRM.Services.ImportLine[]
      description: The rows that will be manipulated and according to Import rules
    - id: columnDefinition
      type: System.String[]
      description: An array of the columndefinitions, like firstname, lastname, ...
    - id: culture
      type: System.String
      description: The current culture used in the import. Used to match language specific strings
    - id: context
      type: System.String
      description: Optional context for the import.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.ImportLine[]}
      description: An array of the the rows that can be imported, manipulated according to Import rules given
    content.vb: Function PreviewImportAsync(importLines As ImportLine(), columnDefinition As String(), culture As String, context As String, cancellationToken As CancellationToken = Nothing) As Task(Of ImportLine())
  overload: SuperOffice.CRM.Services.IImportAgent.PreviewImportAsync*
  nameWithType.vb: IImportAgent.PreviewImportAsync(ImportLine(), String(), String, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IImportAgent.PreviewImportAsync(SuperOffice.CRM.Services.ImportLine(), System.String(), System.String, System.String, System.Threading.CancellationToken)
  name.vb: PreviewImportAsync(ImportLine(), String(), String, String, CancellationToken)
- uid: SuperOffice.CRM.Services.IImportAgent.SaveImportAsync(SuperOffice.CRM.Services.ImportLine[],System.String[],System.Boolean,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IImportAgent.SaveImportAsync(SuperOffice.CRM.Services.ImportLine[],System.String[],System.Boolean,System.String,System.String,System.Threading.CancellationToken)
  id: SaveImportAsync(SuperOffice.CRM.Services.ImportLine[],System.String[],System.Boolean,System.String,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IImportAgent
  langs:
  - csharp
  - vb
  name: SaveImportAsync(ImportLine[], String[], Boolean, String, String, CancellationToken)
  nameWithType: IImportAgent.SaveImportAsync(ImportLine[], String[], Boolean, String, String, CancellationToken)
  fullName: SuperOffice.CRM.Services.IImportAgent.SaveImportAsync(SuperOffice.CRM.Services.ImportLine[], System.String[], System.Boolean, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nDo the actual import\n"
  syntax:
    content: Task<int[]> SaveImportAsync(ImportLine[] importLines, string[] columnDefinition, bool createSelection, string culture, string context, CancellationToken cancellationToken = null)
    parameters:
    - id: importLines
      type: SuperOffice.CRM.Services.ImportLine[]
      description: The rows that will be imported
    - id: columnDefinition
      type: System.String[]
      description: An array of the columndefinitions, like firstname, lastname, ...
    - id: createSelection
      type: System.Boolean
      description: true if a selection of the imported entities shall be made
    - id: culture
      type: System.String
      description: The current culture used in the import. Used to match language specific strings
    - id: context
      type: System.String
      description: Optional context for the import.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32[]}
      description: 'First part: the id of the selection created after the import, 0 if no selection is created. Second part: The number of rows actually imported'
    content.vb: Function SaveImportAsync(importLines As ImportLine(), columnDefinition As String(), createSelection As Boolean, culture As String, context As String, cancellationToken As CancellationToken = Nothing) As Task(Of Integer())
  overload: SuperOffice.CRM.Services.IImportAgent.SaveImportAsync*
  nameWithType.vb: IImportAgent.SaveImportAsync(ImportLine(), String(), Boolean, String, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IImportAgent.SaveImportAsync(SuperOffice.CRM.Services.ImportLine(), System.String(), System.Boolean, System.String, System.String, System.Threading.CancellationToken)
  name.vb: SaveImportAsync(ImportLine(), String(), Boolean, String, String, CancellationToken)
- uid: SuperOffice.CRM.Services.IImportAgent.CreateDefaultImportLineAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IImportAgent.CreateDefaultImportLineAsync(System.Int32,System.Threading.CancellationToken)
  id: CreateDefaultImportLineAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IImportAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultImportLineAsync(Int32, CancellationToken)
  nameWithType: IImportAgent.CreateDefaultImportLineAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.IImportAgent.CreateDefaultImportLineAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCreate a new empty import row with x count of values\n"
  syntax:
    content: Task<ImportLine> CreateDefaultImportLineAsync(int countColumns, CancellationToken cancellationToken = null)
    parameters:
    - id: countColumns
      type: System.Int32
      description: The count of values that will can be filled out
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.ImportLine}
      description: A new ImportLine
    content.vb: Function CreateDefaultImportLineAsync(countColumns As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of ImportLine)
  overload: SuperOffice.CRM.Services.IImportAgent.CreateDefaultImportLineAsync*
- uid: SuperOffice.CRM.Services.IImportAgent.CreateErpImportDataAsync(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.String[],System.Int32,SuperOffice.Data.ErpActorType,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IImportAgent.CreateErpImportDataAsync(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.String[],System.Int32,SuperOffice.Data.ErpActorType,System.Threading.CancellationToken)
  id: CreateErpImportDataAsync(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.String[],System.Int32,SuperOffice.Data.ErpActorType,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IImportAgent
  langs:
  - csharp
  - vb
  name: CreateErpImportDataAsync(ArchiveRestrictionInfo[], String[], Int32, ErpActorType, CancellationToken)
  nameWithType: IImportAgent.CreateErpImportDataAsync(ArchiveRestrictionInfo[], String[], Int32, ErpActorType, CancellationToken)
  fullName: SuperOffice.CRM.Services.IImportAgent.CreateErpImportDataAsync(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[], System.String[], System.Int32, SuperOffice.Data.ErpActorType, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nPopulates the ImportLines and columnDefs basedfrom erp system\n"
  syntax:
    content: Task<ImportErpData> CreateErpImportDataAsync(ArchiveRestrictionInfo[] restriction, string[] columns, int connectionId, ErpActorType erpActorType, CancellationToken cancellationToken = null)
    parameters:
    - id: restriction
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
      description: Archive restrictions.
    - id: columns
      type: System.String[]
      description: Columns.
    - id: connectionId
      type: System.Int32
      description: Connection id for Erp system
    - id: erpActorType
      type: SuperOffice.Data.ErpActorType
      description: Erp Actor type
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.ImportErpData}
      description: The ImportLines and ColumnDefs
    content.vb: Function CreateErpImportDataAsync(restriction As ArchiveRestrictionInfo(), columns As String(), connectionId As Integer, erpActorType As ErpActorType, cancellationToken As CancellationToken = Nothing) As Task(Of ImportErpData)
  overload: SuperOffice.CRM.Services.IImportAgent.CreateErpImportDataAsync*
  nameWithType.vb: IImportAgent.CreateErpImportDataAsync(ArchiveRestrictionInfo(), String(), Int32, ErpActorType, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IImportAgent.CreateErpImportDataAsync(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo(), System.String(), System.Int32, SuperOffice.Data.ErpActorType, System.Threading.CancellationToken)
  name.vb: CreateErpImportDataAsync(ArchiveRestrictionInfo(), String(), Int32, ErpActorType, CancellationToken)
references:
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
- uid: SuperOffice.CRM.Services.IImportAgent.PreviewImportAsync*
  commentId: Overload:SuperOffice.CRM.Services.IImportAgent.PreviewImportAsync
  isExternal: true
  name: PreviewImportAsync
  nameWithType: IImportAgent.PreviewImportAsync
  fullName: SuperOffice.CRM.Services.IImportAgent.PreviewImportAsync
- uid: SuperOffice.CRM.Services.ImportLine[]
  isExternal: true
  name: ImportLine[]
  nameWithType: ImportLine[]
  fullName: SuperOffice.CRM.Services.ImportLine[]
  nameWithType.vb: ImportLine()
  fullName.vb: SuperOffice.CRM.Services.ImportLine()
  name.vb: ImportLine()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ImportLine
    name: ImportLine
    nameWithType: ImportLine
    fullName: SuperOffice.CRM.Services.ImportLine
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.Services.ImportLine
    name: ImportLine
    nameWithType: ImportLine
    fullName: SuperOffice.CRM.Services.ImportLine
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.ImportLine[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Services.ImportLine[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ImportLine[]>
  nameWithType: Task<ImportLine[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.ImportLine[]>
  nameWithType.vb: Task(Of ImportLine())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.ImportLine())
  name.vb: Task(Of ImportLine())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Services.ImportLine
    name: ImportLine
    nameWithType: ImportLine
    fullName: SuperOffice.CRM.Services.ImportLine
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Services.ImportLine
    name: ImportLine
    nameWithType: ImportLine
    fullName: SuperOffice.CRM.Services.ImportLine
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.IImportAgent.SaveImportAsync*
  commentId: Overload:SuperOffice.CRM.Services.IImportAgent.SaveImportAsync
  isExternal: true
  name: SaveImportAsync
  nameWithType: IImportAgent.SaveImportAsync
  fullName: SuperOffice.CRM.Services.IImportAgent.SaveImportAsync
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.Tasks.Task{System.Int32[]}
  commentId: '!:System.Threading.Tasks.Task{System.Int32[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Int32[]>
  nameWithType: Task<Int32[]>
  fullName: System.Threading.Tasks.Task<System.Int32[]>
  nameWithType.vb: Task(Of Int32())
  fullName.vb: System.Threading.Tasks.Task(Of System.Int32())
  name.vb: Task(Of Int32())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.IImportAgent.CreateDefaultImportLineAsync*
  commentId: Overload:SuperOffice.CRM.Services.IImportAgent.CreateDefaultImportLineAsync
  isExternal: true
  name: CreateDefaultImportLineAsync
  nameWithType: IImportAgent.CreateDefaultImportLineAsync
  fullName: SuperOffice.CRM.Services.IImportAgent.CreateDefaultImportLineAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.ImportLine}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Services.ImportLine}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ImportLine>
  nameWithType: Task<ImportLine>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.ImportLine>
  nameWithType.vb: Task(Of ImportLine)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.ImportLine)
  name.vb: Task(Of ImportLine)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Services.ImportLine
    name: ImportLine
    nameWithType: ImportLine
    fullName: SuperOffice.CRM.Services.ImportLine
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Services.ImportLine
    name: ImportLine
    nameWithType: ImportLine
    fullName: SuperOffice.CRM.Services.ImportLine
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.IImportAgent.CreateErpImportDataAsync*
  commentId: Overload:SuperOffice.CRM.Services.IImportAgent.CreateErpImportDataAsync
  isExternal: true
  name: CreateErpImportDataAsync
  nameWithType: IImportAgent.CreateErpImportDataAsync
  fullName: SuperOffice.CRM.Services.IImportAgent.CreateErpImportDataAsync
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
  isExternal: true
  name: ArchiveRestrictionInfo[]
  nameWithType: ArchiveRestrictionInfo[]
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
  nameWithType.vb: ArchiveRestrictionInfo()
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo()
  name.vb: ArchiveRestrictionInfo()
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.Data.ErpActorType
  isExternal: true
  name: ErpActorType
  nameWithType: ErpActorType
  fullName: SuperOffice.Data.ErpActorType
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.ImportErpData}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Services.ImportErpData}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ImportErpData>
  nameWithType: Task<ImportErpData>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.ImportErpData>
  nameWithType.vb: Task(Of ImportErpData)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.ImportErpData)
  name.vb: Task(Of ImportErpData)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Services.ImportErpData
    name: ImportErpData
    nameWithType: ImportErpData
    fullName: SuperOffice.CRM.Services.ImportErpData
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Services.ImportErpData
    name: ImportErpData
    nameWithType: ImportErpData
    fullName: SuperOffice.CRM.Services.ImportErpData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
