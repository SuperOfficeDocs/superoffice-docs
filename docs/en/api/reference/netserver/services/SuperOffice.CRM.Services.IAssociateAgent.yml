### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Services.IAssociateAgent
  commentId: T:SuperOffice.CRM.Services.IAssociateAgent
  id: IAssociateAgent
  parent: SuperOffice.CRM.Services
  children:
  - SuperOffice.CRM.Services.IAssociateAgent.GetAssociateAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAssociateAgent.GetAssociateByPersonIdAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAssociateAgent.GetAssociateListAsync(System.Int32[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAssociateAgent.GetAssociatesByGroupAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAssociateAgent.GetEncryptionKeyAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAssociateAgent.GetNoteAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAssociateAgent.LogOffWindowsUsersAsync(System.Int32[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAssociateAgent.SaveNoteAsync(System.Int32,System.String[],System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IAssociateAgent
  nameWithType: IAssociateAgent
  fullName: SuperOffice.CRM.Services.IAssociateAgent
  type: Interface
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nInterface for the Associate Agent\nAssociate utilities, notes, not user admininstration\n"
  example:
  - "\n<pre><code>  using SuperOffice;\n  using SuperOffice.CRM.Services;\n\n  using (SoSession mySession = SoSession.Authenticate(&quot;user&quot;, &quot;pass&quot;))\n  {\n     using (AssociateAgent agent = new AssociateAgent())\n     {\n        // call methods on agent here...\n     }\n  }</code></pre>\n"
  syntax:
    content: >-
      [Agent("Associate Agent", "Interface for the Associate Agent. Associate utilities, notes, not user admininstration")]

      public interface IAssociateAgent : IAgent
    content.vb: >-
      <Agent("Associate Agent", "Interface for the Associate Agent. Associate utilities, notes, not user admininstration")>

      Public Interface IAssociateAgent
          Inherits IAgent
  attributes:
  - type: SuperOffice.CRM.Services.Reflection.AgentAttribute
    ctor: SuperOffice.CRM.Services.Reflection.AgentAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Associate Agent
    - type: System.String
      value: Interface for the Associate Agent. Associate utilities, notes, not user admininstration
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.CRM.Services.IAssociateAgent.GetAssociateAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAssociateAgent.GetAssociateAsync(System.Int32,System.Threading.CancellationToken)
  id: GetAssociateAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAssociateAgent
  langs:
  - csharp
  - vb
  name: GetAssociateAsync(Int32, CancellationToken)
  nameWithType: IAssociateAgent.GetAssociateAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAssociateAgent.GetAssociateAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets a Associate object.                        \n"
  syntax:
    content: Task<Associate> GetAssociateAsync(int associateId, CancellationToken cancellationToken = null)
    parameters:
    - id: associateId
      type: System.Int32
      description: The identifier of the Associate object
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Associate}
      description: Associate
    content.vb: Function GetAssociateAsync(associateId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Associate)
  overload: SuperOffice.CRM.Services.IAssociateAgent.GetAssociateAsync*
- uid: SuperOffice.CRM.Services.IAssociateAgent.GetAssociateByPersonIdAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAssociateAgent.GetAssociateByPersonIdAsync(System.Int32,System.Threading.CancellationToken)
  id: GetAssociateByPersonIdAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAssociateAgent
  langs:
  - csharp
  - vb
  name: GetAssociateByPersonIdAsync(Int32, CancellationToken)
  nameWithType: IAssociateAgent.GetAssociateByPersonIdAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAssociateAgent.GetAssociateByPersonIdAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nReturns the associate that belongs to this person if the person is an associate.\n"
  syntax:
    content: Task<Associate> GetAssociateByPersonIdAsync(int personId, CancellationToken cancellationToken = null)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Associate}
      description: Associate if person is associate
    content.vb: Function GetAssociateByPersonIdAsync(personId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Associate)
  overload: SuperOffice.CRM.Services.IAssociateAgent.GetAssociateByPersonIdAsync*
- uid: SuperOffice.CRM.Services.IAssociateAgent.GetNoteAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAssociateAgent.GetNoteAsync(System.Int32,System.Threading.CancellationToken)
  id: GetNoteAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAssociateAgent
  langs:
  - csharp
  - vb
  name: GetNoteAsync(Int32, CancellationToken)
  nameWithType: IAssociateAgent.GetNoteAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAssociateAgent.GetNoteAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nReturns an array of strings(notepad pages).\n"
  syntax:
    content: Task<string[]> GetNoteAsync(int associateId, CancellationToken cancellationToken = null)
    parameters:
    - id: associateId
      type: System.Int32
      description: The associate id
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String[]}
      description: Returns an array of strings(notepad pages).
    content.vb: Function GetNoteAsync(associateId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of String())
  overload: SuperOffice.CRM.Services.IAssociateAgent.GetNoteAsync*
- uid: SuperOffice.CRM.Services.IAssociateAgent.SaveNoteAsync(System.Int32,System.String[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAssociateAgent.SaveNoteAsync(System.Int32,System.String[],System.Threading.CancellationToken)
  id: SaveNoteAsync(System.Int32,System.String[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAssociateAgent
  langs:
  - csharp
  - vb
  name: SaveNoteAsync(Int32, String[], CancellationToken)
  nameWithType: IAssociateAgent.SaveNoteAsync(Int32, String[], CancellationToken)
  fullName: SuperOffice.CRM.Services.IAssociateAgent.SaveNoteAsync(System.Int32, System.String[], System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSaves an array of strings(notepad pages).\n"
  syntax:
    content: Task SaveNoteAsync(int associateId, string[] note, CancellationToken cancellationToken = null)
    parameters:
    - id: associateId
      type: System.Int32
      description: The associate id
    - id: note
      type: System.String[]
      description: The array of strings(notepad pages).
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function SaveNoteAsync(associateId As Integer, note As String(), cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IAssociateAgent.SaveNoteAsync*
  nameWithType.vb: IAssociateAgent.SaveNoteAsync(Int32, String(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAssociateAgent.SaveNoteAsync(System.Int32, System.String(), System.Threading.CancellationToken)
  name.vb: SaveNoteAsync(Int32, String(), CancellationToken)
- uid: SuperOffice.CRM.Services.IAssociateAgent.GetEncryptionKeyAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAssociateAgent.GetEncryptionKeyAsync(System.Threading.CancellationToken)
  id: GetEncryptionKeyAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAssociateAgent
  langs:
  - csharp
  - vb
  name: GetEncryptionKeyAsync(CancellationToken)
  nameWithType: IAssociateAgent.GetEncryptionKeyAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.IAssociateAgent.GetEncryptionKeyAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet unique key made from AssociateId and dbTag used for local storage encryption operations.\n"
  syntax:
    content: Task<string> GetEncryptionKeyAsync(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: encryptionKey
    content.vb: Function GetEncryptionKeyAsync(cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Services.IAssociateAgent.GetEncryptionKeyAsync*
- uid: SuperOffice.CRM.Services.IAssociateAgent.GetAssociateListAsync(System.Int32[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAssociateAgent.GetAssociateListAsync(System.Int32[],System.Threading.CancellationToken)
  id: GetAssociateListAsync(System.Int32[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAssociateAgent
  langs:
  - csharp
  - vb
  name: GetAssociateListAsync(Int32[], CancellationToken)
  nameWithType: IAssociateAgent.GetAssociateListAsync(Int32[], CancellationToken)
  fullName: SuperOffice.CRM.Services.IAssociateAgent.GetAssociateListAsync(System.Int32[], System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets an array of Associate objects.                        \n"
  syntax:
    content: Task<Associate[]> GetAssociateListAsync(int[] associateIds, CancellationToken cancellationToken = null)
    parameters:
    - id: associateIds
      type: System.Int32[]
      description: The identifiers of the Associate object
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Associate[]}
      description: Array of Associate objects
    content.vb: Function GetAssociateListAsync(associateIds As Integer(), cancellationToken As CancellationToken = Nothing) As Task(Of Associate())
  overload: SuperOffice.CRM.Services.IAssociateAgent.GetAssociateListAsync*
  nameWithType.vb: IAssociateAgent.GetAssociateListAsync(Int32(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAssociateAgent.GetAssociateListAsync(System.Int32(), System.Threading.CancellationToken)
  name.vb: GetAssociateListAsync(Int32(), CancellationToken)
- uid: SuperOffice.CRM.Services.IAssociateAgent.GetAssociatesByGroupAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAssociateAgent.GetAssociatesByGroupAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  id: GetAssociatesByGroupAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAssociateAgent
  langs:
  - csharp
  - vb
  name: GetAssociatesByGroupAsync(Int32, Int32, CancellationToken)
  nameWithType: IAssociateAgent.GetAssociatesByGroupAsync(Int32, Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAssociateAgent.GetAssociatesByGroupAsync(System.Int32, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nMethod that returns a array of associate , based on DiaryGroupType and groupId. The differernt types are, Userdefined, Usergroup and ResourceHeadings\n"
  syntax:
    content: Task<Associate[]> GetAssociatesByGroupAsync(int groupId, int type, CancellationToken cancellationToken = null)
    parameters:
    - id: groupId
      type: System.Int32
      description: Id of the group
    - id: type
      type: System.Int32
      description: The type of group. See DiaryGroupType
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Associate[]}
      description: Array of associate
    content.vb: Function GetAssociatesByGroupAsync(groupId As Integer, type As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Associate())
  overload: SuperOffice.CRM.Services.IAssociateAgent.GetAssociatesByGroupAsync*
- uid: SuperOffice.CRM.Services.IAssociateAgent.LogOffWindowsUsersAsync(System.Int32[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAssociateAgent.LogOffWindowsUsersAsync(System.Int32[],System.Threading.CancellationToken)
  id: LogOffWindowsUsersAsync(System.Int32[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAssociateAgent
  langs:
  - csharp
  - vb
  name: LogOffWindowsUsersAsync(Int32[], CancellationToken)
  nameWithType: IAssociateAgent.LogOffWindowsUsersAsync(Int32[], CancellationToken)
  fullName: SuperOffice.CRM.Services.IAssociateAgent.LogOffWindowsUsersAsync(System.Int32[], System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nMethod that logs off associates that are logged on to the win client\n"
  syntax:
    content: Task LogOffWindowsUsersAsync(int[] associateIds, CancellationToken cancellationToken = null)
    parameters:
    - id: associateIds
      type: System.Int32[]
      description: The ids of the associates that shall be logged off
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: A void return
    content.vb: Function LogOffWindowsUsersAsync(associateIds As Integer(), cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IAssociateAgent.LogOffWindowsUsersAsync*
  nameWithType.vb: IAssociateAgent.LogOffWindowsUsersAsync(Int32(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAssociateAgent.LogOffWindowsUsersAsync(System.Int32(), System.Threading.CancellationToken)
  name.vb: LogOffWindowsUsersAsync(Int32(), CancellationToken)
references:
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
- uid: SuperOffice.CRM.Services.IAssociateAgent.GetAssociateAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAssociateAgent.GetAssociateAsync
  isExternal: true
  name: GetAssociateAsync
  nameWithType: IAssociateAgent.GetAssociateAsync
  fullName: SuperOffice.CRM.Services.IAssociateAgent.GetAssociateAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Associate}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Services.Associate}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Associate>
  nameWithType: Task<Associate>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.Associate>
  nameWithType.vb: Task(Of Associate)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.Associate)
  name.vb: Task(Of Associate)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Services.Associate
    name: Associate
    nameWithType: Associate
    fullName: SuperOffice.CRM.Services.Associate
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Services.Associate
    name: Associate
    nameWithType: Associate
    fullName: SuperOffice.CRM.Services.Associate
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.IAssociateAgent.GetAssociateByPersonIdAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAssociateAgent.GetAssociateByPersonIdAsync
  isExternal: true
  name: GetAssociateByPersonIdAsync
  nameWithType: IAssociateAgent.GetAssociateByPersonIdAsync
  fullName: SuperOffice.CRM.Services.IAssociateAgent.GetAssociateByPersonIdAsync
- uid: SuperOffice.CRM.Services.IAssociateAgent.GetNoteAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAssociateAgent.GetNoteAsync
  isExternal: true
  name: GetNoteAsync
  nameWithType: IAssociateAgent.GetNoteAsync
  fullName: SuperOffice.CRM.Services.IAssociateAgent.GetNoteAsync
- uid: System.Threading.Tasks.Task{System.String[]}
  commentId: '!:System.Threading.Tasks.Task{System.String[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<String[]>
  nameWithType: Task<String[]>
  fullName: System.Threading.Tasks.Task<System.String[]>
  nameWithType.vb: Task(Of String())
  fullName.vb: System.Threading.Tasks.Task(Of System.String())
  name.vb: Task(Of String())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.IAssociateAgent.SaveNoteAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAssociateAgent.SaveNoteAsync
  isExternal: true
  name: SaveNoteAsync
  nameWithType: IAssociateAgent.SaveNoteAsync
  fullName: SuperOffice.CRM.Services.IAssociateAgent.SaveNoteAsync
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Threading.Tasks.Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: SuperOffice.CRM.Services.IAssociateAgent.GetEncryptionKeyAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAssociateAgent.GetEncryptionKeyAsync
  isExternal: true
  name: GetEncryptionKeyAsync
  nameWithType: IAssociateAgent.GetEncryptionKeyAsync
  fullName: SuperOffice.CRM.Services.IAssociateAgent.GetEncryptionKeyAsync
- uid: System.Threading.Tasks.Task{System.String}
  commentId: '!:System.Threading.Tasks.Task{System.String}'
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.IAssociateAgent.GetAssociateListAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAssociateAgent.GetAssociateListAsync
  isExternal: true
  name: GetAssociateListAsync
  nameWithType: IAssociateAgent.GetAssociateListAsync
  fullName: SuperOffice.CRM.Services.IAssociateAgent.GetAssociateListAsync
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Associate[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Services.Associate[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Associate[]>
  nameWithType: Task<Associate[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.Associate[]>
  nameWithType.vb: Task(Of Associate())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.Associate())
  name.vb: Task(Of Associate())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Services.Associate
    name: Associate
    nameWithType: Associate
    fullName: SuperOffice.CRM.Services.Associate
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Services.Associate
    name: Associate
    nameWithType: Associate
    fullName: SuperOffice.CRM.Services.Associate
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.IAssociateAgent.GetAssociatesByGroupAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAssociateAgent.GetAssociatesByGroupAsync
  isExternal: true
  name: GetAssociatesByGroupAsync
  nameWithType: IAssociateAgent.GetAssociatesByGroupAsync
  fullName: SuperOffice.CRM.Services.IAssociateAgent.GetAssociatesByGroupAsync
- uid: SuperOffice.CRM.Services.IAssociateAgent.LogOffWindowsUsersAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAssociateAgent.LogOffWindowsUsersAsync
  isExternal: true
  name: LogOffWindowsUsersAsync
  nameWithType: IAssociateAgent.LogOffWindowsUsersAsync
  fullName: SuperOffice.CRM.Services.IAssociateAgent.LogOffWindowsUsersAsync
