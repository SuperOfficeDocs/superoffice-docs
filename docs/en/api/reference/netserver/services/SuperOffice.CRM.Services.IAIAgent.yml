### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Services.IAIAgent
  commentId: T:SuperOffice.CRM.Services.IAIAgent
  id: IAIAgent
  parent: SuperOffice.CRM.Services
  children:
  - SuperOffice.CRM.Services.IAIAgent.AnalyzeBizCardImageAsync(System.IO.Stream,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAIAgent.AnalyzeBizCardTextAsync(System.String,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAIAgent.AnswerAcceptedAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAIAgent.AnswerAsync(System.String,System.String,SuperOffice.Data.RagType,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAIAgent.AnswerFeedbackAsync(System.String,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAIAgent.ClearChatbotTurnsAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAIAgent.CreateTextForAppointmentAsync(SuperOffice.CRM.Services.AppointmentEntity,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAIAgent.DetectLanguageAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAIAgent.DetectSentimentAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAIAgent.ExpandTextAsync(System.String,System.Int32,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAIAgent.GetChatbotPromptSuggestionsAsync(System.String,System.String,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAIAgent.GetChatbotResponseAsync(System.String,System.String,System.String,System.String,SuperOffice.CRM.Services.ChatbotTurn[],System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAIAgent.GetChatbotTurnsAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAIAgent.GetSummarizeContactPromptAsync(System.Int32,System.Int32,System.String,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAIAgent.GetSummarizeSalePromptAsync(System.Int32,System.Int32,System.String,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAIAgent.GetSummarizeTicketPromptAsync(System.Int32,System.Int32,System.String,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAIAgent.GetTrainingStatusAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAIAgent.GuessCategoryAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAIAgent.RephraseTextAsync(System.String,SuperOffice.Data.AiTextStyle,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAIAgent.SearchAsync(System.String,System.String,SuperOffice.Data.RagType,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAIAgent.StartRagIndexingAsync(System.String,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAIAgent.SummarizeContactAsync(System.Int32,System.Int32,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAIAgent.SummarizeSaleAsync(System.Int32,System.Int32,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAIAgent.SummarizeTextAsync(System.String,System.Int32,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAIAgent.SummarizeTicketAsync(System.Int32,System.Int32,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAIAgent.TrainCategoryGuesserAsync(System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAIAgent.TranslateAsync(System.String,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAIAgent.TranslateEntityAsync(System.String,System.Int32,System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IAIAgent
  nameWithType: IAIAgent
  fullName: SuperOffice.CRM.Services.IAIAgent
  type: Interface
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Interface for the AI Agent

    AI services, such as Translation, Statistics, Sentiment analysis, backed by calls to Public Cloud providers

    <p></p>

    <b>Experimental:</b> The AI agent is experimental, subject to change, and not intended for partners.
  example:
  - >-
    <pre><code class="lang-csharp">using SuperOffice;

    using SuperOffice.CRM.Services;


    using (SoSession mySession = SoSession.Authenticate("user", "pass"))

    {
       using (AIAgent agent = new AIAgent())
       {
          // call methods on agent here...
       }
    }</code></pre>
  syntax:
    content: >-
      [Agent("AI Agent", "Interface for the AI Agent. AI services, such as Translation, Statistics, Sentiment analysis, backed by calls to Public Cloud providers")]

      public interface IAIAgent : IAgent
    content.vb: >-
      <Agent("AI Agent", "Interface for the AI Agent. AI services, such as Translation, Statistics, Sentiment analysis, backed by calls to Public Cloud providers")>

      Public Interface IAIAgent Inherits IAgent
  attributes:
  - type: SuperOffice.CRM.Services.Reflection.AgentAttribute
    ctor: SuperOffice.CRM.Services.Reflection.AgentAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: AI Agent
    - type: System.String
      value: Interface for the AI Agent. AI services, such as Translation, Statistics, Sentiment analysis, backed by calls to Public Cloud providers
- uid: SuperOffice.CRM.Services.IAIAgent.SummarizeTextAsync(System.String,System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAIAgent.SummarizeTextAsync(System.String,System.Int32,System.String,System.Threading.CancellationToken)
  id: SummarizeTextAsync(System.String,System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAIAgent
  langs:
  - csharp
  - vb
  name: SummarizeTextAsync(string, int, string, CancellationToken)
  nameWithType: IAIAgent.SummarizeTextAsync(string, int, string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAIAgent.SummarizeTextAsync(string, int, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Generate a short summary of a text

    <p></p>

    <b>Experimental:</b> The operation is experimental, subject to change, and not intended for partners.
  example: []
  syntax:
    content: Task<string> SummarizeTextAsync(string text, int percentSmaller, string isoLangCode, CancellationToken cancellationToken = default)
    parameters:
    - id: text
      type: System.String
      description: Text to summarize
    - id: percentSmaller
      type: System.Int32
      description: How much to shorten.
    - id: isoLangCode
      type: System.String
      description: Language returned text should be in. Blank = do not specify language.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Short summary of the text
    content.vb: Function SummarizeTextAsync(text As String, percentSmaller As Integer, isoLangCode As String, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Services.IAIAgent.SummarizeTextAsync*
  nameWithType.vb: IAIAgent.SummarizeTextAsync(String, Integer, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAIAgent.SummarizeTextAsync(String, Integer, String, System.Threading.CancellationToken)
  name.vb: SummarizeTextAsync(String, Integer, String, CancellationToken)
- uid: SuperOffice.CRM.Services.IAIAgent.ExpandTextAsync(System.String,System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAIAgent.ExpandTextAsync(System.String,System.Int32,System.String,System.Threading.CancellationToken)
  id: ExpandTextAsync(System.String,System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAIAgent
  langs:
  - csharp
  - vb
  name: ExpandTextAsync(string, int, string, CancellationToken)
  nameWithType: IAIAgent.ExpandTextAsync(string, int, string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAIAgent.ExpandTextAsync(string, int, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Generate a longer version of a text

    <p></p>

    <b>Experimental:</b> The operation is experimental, subject to change, and not intended for partners.
  example: []
  syntax:
    content: Task<string> ExpandTextAsync(string text, int percentBigger, string isoLangCode, CancellationToken cancellationToken = default)
    parameters:
    - id: text
      type: System.String
      description: Text to embiggen
    - id: percentBigger
      type: System.Int32
      description: How much to embiggen.
    - id: isoLangCode
      type: System.String
      description: Language returned text should be in. Blank = do not specify language.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Expanded version of the text
    content.vb: Function ExpandTextAsync(text As String, percentBigger As Integer, isoLangCode As String, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Services.IAIAgent.ExpandTextAsync*
  nameWithType.vb: IAIAgent.ExpandTextAsync(String, Integer, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAIAgent.ExpandTextAsync(String, Integer, String, System.Threading.CancellationToken)
  name.vb: ExpandTextAsync(String, Integer, String, CancellationToken)
- uid: SuperOffice.CRM.Services.IAIAgent.RephraseTextAsync(System.String,SuperOffice.Data.AiTextStyle,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAIAgent.RephraseTextAsync(System.String,SuperOffice.Data.AiTextStyle,System.String,System.Threading.CancellationToken)
  id: RephraseTextAsync(System.String,SuperOffice.Data.AiTextStyle,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAIAgent
  langs:
  - csharp
  - vb
  name: RephraseTextAsync(string, AiTextStyle, string, CancellationToken)
  nameWithType: IAIAgent.RephraseTextAsync(string, AiTextStyle, string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAIAgent.RephraseTextAsync(string, SuperOffice.Data.AiTextStyle, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Generate a new version of a text

    <p></p>

    <b>Experimental:</b> The operation is experimental, subject to change, and not intended for partners.
  example: []
  syntax:
    content: Task<string> RephraseTextAsync(string text, AiTextStyle style, string isoLangCode, CancellationToken cancellationToken = default)
    parameters:
    - id: text
      type: System.String
      description: Text to transform
    - id: style
      type: SuperOffice.Data.AiTextStyle
      description: New style to transform text into (Rephrase, Correct, Casual, Formal)
    - id: isoLangCode
      type: System.String
      description: Language returned text should be in. Blank = do not specify language.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: New version of the text
    content.vb: Function RephraseTextAsync(text As String, style As AiTextStyle, isoLangCode As String, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Services.IAIAgent.RephraseTextAsync*
  nameWithType.vb: IAIAgent.RephraseTextAsync(String, AiTextStyle, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAIAgent.RephraseTextAsync(String, SuperOffice.Data.AiTextStyle, String, System.Threading.CancellationToken)
  name.vb: RephraseTextAsync(String, AiTextStyle, String, CancellationToken)
- uid: SuperOffice.CRM.Services.IAIAgent.CreateTextForAppointmentAsync(SuperOffice.CRM.Services.AppointmentEntity,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAIAgent.CreateTextForAppointmentAsync(SuperOffice.CRM.Services.AppointmentEntity,System.String,System.Threading.CancellationToken)
  id: CreateTextForAppointmentAsync(SuperOffice.CRM.Services.AppointmentEntity,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAIAgent
  langs:
  - csharp
  - vb
  name: CreateTextForAppointmentAsync(AppointmentEntity, string, CancellationToken)
  nameWithType: IAIAgent.CreateTextForAppointmentAsync(AppointmentEntity, string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAIAgent.CreateTextForAppointmentAsync(SuperOffice.CRM.Services.AppointmentEntity, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Generate agenda text for an appointment based on appointment's company category, title, person, etc.

    <p></p>

    <b>Experimental:</b> The operation is experimental, subject to change, and not intended for partners.
  example: []
  syntax:
    content: Task<string> CreateTextForAppointmentAsync(AppointmentEntity appointment, string isoLangCode, CancellationToken cancellationToken = default)
    parameters:
    - id: appointment
      type: SuperOffice.CRM.Services.AppointmentEntity
      description: The appointment object to generate text for.
    - id: isoLangCode
      type: System.String
      description: Language returned text should be in. Blank = do not specify language.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Agenda text in markdown format
    content.vb: Function CreateTextForAppointmentAsync(appointment As AppointmentEntity, isoLangCode As String, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Services.IAIAgent.CreateTextForAppointmentAsync*
  nameWithType.vb: IAIAgent.CreateTextForAppointmentAsync(AppointmentEntity, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAIAgent.CreateTextForAppointmentAsync(SuperOffice.CRM.Services.AppointmentEntity, String, System.Threading.CancellationToken)
  name.vb: CreateTextForAppointmentAsync(AppointmentEntity, String, CancellationToken)
- uid: SuperOffice.CRM.Services.IAIAgent.AnalyzeBizCardImageAsync(System.IO.Stream,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAIAgent.AnalyzeBizCardImageAsync(System.IO.Stream,System.Boolean,System.Threading.CancellationToken)
  id: AnalyzeBizCardImageAsync(System.IO.Stream,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAIAgent
  langs:
  - csharp
  - vb
  name: AnalyzeBizCardImageAsync(Stream, bool, CancellationToken)
  nameWithType: IAIAgent.AnalyzeBizCardImageAsync(Stream, bool, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAIAgent.AnalyzeBizCardImageAsync(System.IO.Stream, bool, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Returns contact and person information from an image. Merges results with matching database records if merge = true

    <p></p>

    <b>Experimental:</b> The operation is experimental, subject to change, and not intended for partners.
  example: []
  syntax:
    content: Task<BizCard> AnalyzeBizCardImageAsync(Stream image, bool mergeWithDatabase, CancellationToken cancellationToken = default)
    parameters:
    - id: image
      type: System.IO.Stream
      description: Image data containg a business card
    - id: mergeWithDatabase
      type: System.Boolean
      description: 'Merge results from analysis with matching database records? True: match company/person names and set ids on returned entities.'
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.BizCard}
      description: Returns a Contact and a Person entity.
    content.vb: Function AnalyzeBizCardImageAsync(image As Stream, mergeWithDatabase As Boolean, cancellationToken As CancellationToken = Nothing) As Task(Of BizCard)
  overload: SuperOffice.CRM.Services.IAIAgent.AnalyzeBizCardImageAsync*
  nameWithType.vb: IAIAgent.AnalyzeBizCardImageAsync(Stream, Boolean, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAIAgent.AnalyzeBizCardImageAsync(System.IO.Stream, Boolean, System.Threading.CancellationToken)
  name.vb: AnalyzeBizCardImageAsync(Stream, Boolean, CancellationToken)
- uid: SuperOffice.CRM.Services.IAIAgent.AnalyzeBizCardTextAsync(System.String,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAIAgent.AnalyzeBizCardTextAsync(System.String,System.Boolean,System.Threading.CancellationToken)
  id: AnalyzeBizCardTextAsync(System.String,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAIAgent
  langs:
  - csharp
  - vb
  name: AnalyzeBizCardTextAsync(string, bool, CancellationToken)
  nameWithType: IAIAgent.AnalyzeBizCardTextAsync(string, bool, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAIAgent.AnalyzeBizCardTextAsync(string, bool, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Extract contact and person information from text. Merge results with matching database records if merge = true

    <p></p>

    <b>Experimental:</b> The operation is experimental, subject to change, and not intended for partners.
  example: []
  syntax:
    content: Task<BizCard> AnalyzeBizCardTextAsync(string text, bool mergeWithDatabase, CancellationToken cancellationToken = default)
    parameters:
    - id: text
      type: System.String
      description: Text that contains useful contact and person information.
    - id: mergeWithDatabase
      type: System.Boolean
      description: 'Merge results from analysis with matching database records? True: match company/person names and set ids on returned entities.'
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.BizCard}
      description: Returns a Contact and a Person entity.
    content.vb: Function AnalyzeBizCardTextAsync(text As String, mergeWithDatabase As Boolean, cancellationToken As CancellationToken = Nothing) As Task(Of BizCard)
  overload: SuperOffice.CRM.Services.IAIAgent.AnalyzeBizCardTextAsync*
  nameWithType.vb: IAIAgent.AnalyzeBizCardTextAsync(String, Boolean, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAIAgent.AnalyzeBizCardTextAsync(String, Boolean, System.Threading.CancellationToken)
  name.vb: AnalyzeBizCardTextAsync(String, Boolean, CancellationToken)
- uid: SuperOffice.CRM.Services.IAIAgent.GetTrainingStatusAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAIAgent.GetTrainingStatusAsync(System.Threading.CancellationToken)
  id: GetTrainingStatusAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAIAgent
  langs:
  - csharp
  - vb
  name: GetTrainingStatusAsync(CancellationToken)
  nameWithType: IAIAgent.GetTrainingStatusAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.IAIAgent.GetTrainingStatusAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Calling the HugoAI endpoint to fetch the current training status.

    <p></p>

    <b>Experimental:</b> The operation is experimental, subject to change, and not intended for partners.
  example: []
  syntax:
    content: Task<CategorizationStatusResponse> GetTrainingStatusAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.CategorizationStatusResponse}
      description: Carrier to describe the current status of HugoAI categorization
    content.vb: Function GetTrainingStatusAsync(cancellationToken As CancellationToken = Nothing) As Task(Of CategorizationStatusResponse)
  overload: SuperOffice.CRM.Services.IAIAgent.GetTrainingStatusAsync*
- uid: SuperOffice.CRM.Services.IAIAgent.GuessCategoryAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAIAgent.GuessCategoryAsync(System.Int32,System.Threading.CancellationToken)
  id: GuessCategoryAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAIAgent
  langs:
  - csharp
  - vb
  name: GuessCategoryAsync(int, CancellationToken)
  nameWithType: IAIAgent.GuessCategoryAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAIAgent.GuessCategoryAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Given a ticket's id, guess the ticket category it should be placed in. Currently this is based on the first message in the ticket

    <p></p>

    <b>Experimental:</b> The operation is experimental, subject to change, and not intended for partners.
  example: []
  syntax:
    content: Task<int> GuessCategoryAsync(int ticketId, CancellationToken cancellationToken = default)
    parameters:
    - id: ticketId
      type: System.Int32
      description: Id of ticket to guess category for
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: Suggested ticket category ID
    content.vb: Function GuessCategoryAsync(ticketId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Integer)
  overload: SuperOffice.CRM.Services.IAIAgent.GuessCategoryAsync*
  nameWithType.vb: IAIAgent.GuessCategoryAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAIAgent.GuessCategoryAsync(Integer, System.Threading.CancellationToken)
  name.vb: GuessCategoryAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IAIAgent.TrainCategoryGuesserAsync(System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAIAgent.TrainCategoryGuesserAsync(System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken)
  id: TrainCategoryGuesserAsync(System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAIAgent
  langs:
  - csharp
  - vb
  name: TrainCategoryGuesserAsync(int, int, int, CancellationToken)
  nameWithType: IAIAgent.TrainCategoryGuesserAsync(int, int, int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAIAgent.TrainCategoryGuesserAsync(int, int, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    The category guesser training API will be called with an array of CategorizationTrainingItem during the (background, Batch) execution of this call

    <p></p>

    <b>Experimental:</b> The operation is experimental, subject to change, and not intended for partners.
  example: []
  syntax:
    content: Task<string> TrainCategoryGuesserAsync(int selectionId, int maxItems, int maxTextLength, CancellationToken cancellationToken = default)
    parameters:
    - id: selectionId
      type: System.Int32
      description: Id of selection of tickets, to retrieve training data from
    - id: maxItems
      type: System.Int32
      description: Maximum number of tickets to retrieve data from
    - id: maxTextLength
      type: System.Int32
      description: Maximum length of PlainTextBody or any other large text, truncated to nearest word boundary
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Placeholder for result...  should this be a BatchTaskId?  maybe not useful?
    content.vb: Function TrainCategoryGuesserAsync(selectionId As Integer, maxItems As Integer, maxTextLength As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Services.IAIAgent.TrainCategoryGuesserAsync*
  nameWithType.vb: IAIAgent.TrainCategoryGuesserAsync(Integer, Integer, Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAIAgent.TrainCategoryGuesserAsync(Integer, Integer, Integer, System.Threading.CancellationToken)
  name.vb: TrainCategoryGuesserAsync(Integer, Integer, Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IAIAgent.GetChatbotResponseAsync(System.String,System.String,System.String,System.String,SuperOffice.CRM.Services.ChatbotTurn[],System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAIAgent.GetChatbotResponseAsync(System.String,System.String,System.String,System.String,SuperOffice.CRM.Services.ChatbotTurn[],System.String,System.Threading.CancellationToken)
  id: GetChatbotResponseAsync(System.String,System.String,System.String,System.String,SuperOffice.CRM.Services.ChatbotTurn[],System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAIAgent
  langs:
  - csharp
  - vb
  name: GetChatbotResponseAsync(string, string, string, string, ChatbotTurn[], string, CancellationToken)
  nameWithType: IAIAgent.GetChatbotResponseAsync(string, string, string, string, ChatbotTurn[], string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAIAgent.GetChatbotResponseAsync(string, string, string, string, SuperOffice.CRM.Services.ChatbotTurn[], string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Return a chatbot response given prompt and previous turns. Stores the new turn in the history for the chatId

    <p></p>

    <b>Experimental:</b> The operation is experimental, subject to change, and not intended for partners.
  example: []
  syntax:
    content: Task<ChatbotTurn> GetChatbotResponseAsync(string chatId, string isoLangCode, string userPrompt, string displayValue, ChatbotTurn[] previousTurns, string apiUrl, CancellationToken cancellationToken = default)
    parameters:
    - id: chatId
      type: System.String
      description: identifies this chat = arbitrary name (e.g. user-defined) or the soprotocol + id (e.g. ticket-123, contact-43, diary)
    - id: isoLangCode
      type: System.String
      description: ISO2 Language code ('en', 'no', 'de'...) for suggestions in response
    - id: userPrompt
      type: System.String
      description: User question for chatbot
    - id: displayValue
      type: System.String
      description: User question for display - optional - null = use userPrompt
    - id: previousTurns
      type: SuperOffice.CRM.Services.ChatbotTurn[]
      description: Chat history - all previous turns in chronological order
    - id: apiUrl
      type: System.String
      description: CRM API endpoint URL for chatbot to make callbacks to. 'https://example.com/superoffice/api/'
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.ChatbotTurn}
      description: Returns new turn that client can append to its local history.
    content.vb: Function GetChatbotResponseAsync(chatId As String, isoLangCode As String, userPrompt As String, displayValue As String, previousTurns As ChatbotTurn(), apiUrl As String, cancellationToken As CancellationToken = Nothing) As Task(Of ChatbotTurn)
  overload: SuperOffice.CRM.Services.IAIAgent.GetChatbotResponseAsync*
  nameWithType.vb: IAIAgent.GetChatbotResponseAsync(String, String, String, String, ChatbotTurn(), String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAIAgent.GetChatbotResponseAsync(String, String, String, String, SuperOffice.CRM.Services.ChatbotTurn(), String, System.Threading.CancellationToken)
  name.vb: GetChatbotResponseAsync(String, String, String, String, ChatbotTurn(), String, CancellationToken)
- uid: SuperOffice.CRM.Services.IAIAgent.GetChatbotPromptSuggestionsAsync(System.String,System.String,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAIAgent.GetChatbotPromptSuggestionsAsync(System.String,System.String,System.Int32,System.Threading.CancellationToken)
  id: GetChatbotPromptSuggestionsAsync(System.String,System.String,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAIAgent
  langs:
  - csharp
  - vb
  name: GetChatbotPromptSuggestionsAsync(string, string, int, CancellationToken)
  nameWithType: IAIAgent.GetChatbotPromptSuggestionsAsync(string, string, int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAIAgent.GetChatbotPromptSuggestionsAsync(string, string, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Return one or more suggested prompts as actions to display in an empty chat window

    <p></p>

    <b>Experimental:</b> The operation is experimental, subject to change, and not intended for partners.
  example: []
  syntax:
    content: Task<ChatbotTurn> GetChatbotPromptSuggestionsAsync(string isoLangCode, string soProtocol, int currentId, CancellationToken cancellationToken = default)
    parameters:
    - id: isoLangCode
      type: System.String
      description: ISO2 Language code ('en', 'no', 'de'...) for suggestions in response
    - id: soProtocol
      type: System.String
      description: Context for suggestions ('contact.main.activities')
    - id: currentId
      type: System.Int32
      description: current company/person/project id - used for context in suggestions
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.ChatbotTurn}
      description: Contains zero or more BotActions, and welcome message in Bot response
    content.vb: Function GetChatbotPromptSuggestionsAsync(isoLangCode As String, soProtocol As String, currentId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of ChatbotTurn)
  overload: SuperOffice.CRM.Services.IAIAgent.GetChatbotPromptSuggestionsAsync*
  nameWithType.vb: IAIAgent.GetChatbotPromptSuggestionsAsync(String, String, Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAIAgent.GetChatbotPromptSuggestionsAsync(String, String, Integer, System.Threading.CancellationToken)
  name.vb: GetChatbotPromptSuggestionsAsync(String, String, Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IAIAgent.GetChatbotTurnsAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAIAgent.GetChatbotTurnsAsync(System.String,System.Threading.CancellationToken)
  id: GetChatbotTurnsAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAIAgent
  langs:
  - csharp
  - vb
  name: GetChatbotTurnsAsync(string, CancellationToken)
  nameWithType: IAIAgent.GetChatbotTurnsAsync(string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAIAgent.GetChatbotTurnsAsync(string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Returns stored history of chat messages for a given chat_id. Chat_id is usually derived from soproto + current id, but could also be arbitrary name.

    <p></p>

    <b>Experimental:</b> The operation is experimental, subject to change, and not intended for partners.
  example: []
  syntax:
    content: Task<ChatbotTurn[]> GetChatbotTurnsAsync(string chatId, CancellationToken cancellationToken = default)
    parameters:
    - id: chatId
      type: System.String
      description: identifies this chat = arbitrary name (e.g. user-defined) or the soprotocol + id (e.g. ticket-123, contact-43, diary)
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.ChatbotTurn[]}
      description: Array containing zero or more turns. If you got zero turns, call GetChatbotPromptSuggestions to get an initial turn from the bot.
    content.vb: Function GetChatbotTurnsAsync(chatId As String, cancellationToken As CancellationToken = Nothing) As Task(Of ChatbotTurn())
  overload: SuperOffice.CRM.Services.IAIAgent.GetChatbotTurnsAsync*
  nameWithType.vb: IAIAgent.GetChatbotTurnsAsync(String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAIAgent.GetChatbotTurnsAsync(String, System.Threading.CancellationToken)
  name.vb: GetChatbotTurnsAsync(String, CancellationToken)
- uid: SuperOffice.CRM.Services.IAIAgent.ClearChatbotTurnsAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAIAgent.ClearChatbotTurnsAsync(System.String,System.Threading.CancellationToken)
  id: ClearChatbotTurnsAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAIAgent
  langs:
  - csharp
  - vb
  name: ClearChatbotTurnsAsync(string, CancellationToken)
  nameWithType: IAIAgent.ClearChatbotTurnsAsync(string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAIAgent.ClearChatbotTurnsAsync(string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Clears the stored history of chat messages for a given chat_id. Chat_id is usually derived from soproto + current id, but could also be arbitrary name

    <p></p>

    <b>Experimental:</b> The operation is experimental, subject to change, and not intended for partners.
  example: []
  syntax:
    content: Task ClearChatbotTurnsAsync(string chatId, CancellationToken cancellationToken = default)
    parameters:
    - id: chatId
      type: System.String
      description: identifies this chat = arbitrary name (e.g. user-defined) or the soprotocol + id (e.g. ticket-123, contact-43, diary)
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Function ClearChatbotTurnsAsync(chatId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IAIAgent.ClearChatbotTurnsAsync*
  nameWithType.vb: IAIAgent.ClearChatbotTurnsAsync(String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAIAgent.ClearChatbotTurnsAsync(String, System.Threading.CancellationToken)
  name.vb: ClearChatbotTurnsAsync(String, CancellationToken)
- uid: SuperOffice.CRM.Services.IAIAgent.DetectLanguageAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAIAgent.DetectLanguageAsync(System.String,System.Threading.CancellationToken)
  id: DetectLanguageAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAIAgent
  langs:
  - csharp
  - vb
  name: DetectLanguageAsync(string, CancellationToken)
  nameWithType: IAIAgent.DetectLanguageAsync(string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAIAgent.DetectLanguageAsync(string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Given a (reasonably short) text, detect the language it is written in

    <p></p>

    <b>Experimental:</b> The operation is experimental, subject to change, and not intended for partners.
  example: []
  syntax:
    content: Task<string> DetectLanguageAsync(string text, CancellationToken cancellationToken = default)
    parameters:
    - id: text
      type: System.String
      description: Text to be analyzed; there may be a cost-per-character so do not send a book here
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: ISO Language code, such as NO, US, ES, FR
    content.vb: Function DetectLanguageAsync(text As String, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Services.IAIAgent.DetectLanguageAsync*
  nameWithType.vb: IAIAgent.DetectLanguageAsync(String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAIAgent.DetectLanguageAsync(String, System.Threading.CancellationToken)
  name.vb: DetectLanguageAsync(String, CancellationToken)
- uid: SuperOffice.CRM.Services.IAIAgent.DetectSentimentAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAIAgent.DetectSentimentAsync(System.String,System.Threading.CancellationToken)
  id: DetectSentimentAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAIAgent
  langs:
  - csharp
  - vb
  name: DetectSentimentAsync(string, CancellationToken)
  nameWithType: IAIAgent.DetectSentimentAsync(string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAIAgent.DetectSentimentAsync(string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Detect the sentiment of a (reasonably short) text. Sentiment analysis may cause a translation to be made, since sentiment analysis only supports a limited set of languages

    <p></p>

    <b>Experimental:</b> The operation is experimental, subject to change, and not intended for partners.
  example: []
  syntax:
    content: Task<Sentiment> DetectSentimentAsync(string text, CancellationToken cancellationToken = default)
    parameters:
    - id: text
      type: System.String
      description: Text to be analyzed
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Sentiment}
      description: 'The sentiment information: score (-100 to +100) and confidence'
    content.vb: Function DetectSentimentAsync(text As String, cancellationToken As CancellationToken = Nothing) As Task(Of Sentiment)
  overload: SuperOffice.CRM.Services.IAIAgent.DetectSentimentAsync*
  nameWithType.vb: IAIAgent.DetectSentimentAsync(String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAIAgent.DetectSentimentAsync(String, System.Threading.CancellationToken)
  name.vb: DetectSentimentAsync(String, CancellationToken)
- uid: SuperOffice.CRM.Services.IAIAgent.TranslateAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAIAgent.TranslateAsync(System.String,System.String,System.Threading.CancellationToken)
  id: TranslateAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAIAgent
  langs:
  - csharp
  - vb
  name: TranslateAsync(string, string, CancellationToken)
  nameWithType: IAIAgent.TranslateAsync(string, string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAIAgent.TranslateAsync(string, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Translate a text from one language to another. Language of the text is automatically detected.

    <p></p>

    <b>Experimental:</b> The operation is experimental, subject to change, and not intended for partners.
  example: []
  syntax:
    content: Task<string> TranslateAsync(string text, string targetLanguage, CancellationToken cancellationToken = default)
    parameters:
    - id: text
      type: System.String
      description: Text to be translated. Language of the text is automatically detected.
    - id: targetLanguage
      type: System.String
      description: ISO Language code (such as FR) to translate the text into
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Translated text
    content.vb: Function TranslateAsync(text As String, targetLanguage As String, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Services.IAIAgent.TranslateAsync*
  nameWithType.vb: IAIAgent.TranslateAsync(String, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAIAgent.TranslateAsync(String, String, System.Threading.CancellationToken)
  name.vb: TranslateAsync(String, String, CancellationToken)
- uid: SuperOffice.CRM.Services.IAIAgent.TranslateEntityAsync(System.String,System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAIAgent.TranslateEntityAsync(System.String,System.Int32,System.String,System.Threading.CancellationToken)
  id: TranslateEntityAsync(System.String,System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAIAgent
  langs:
  - csharp
  - vb
  name: TranslateEntityAsync(string, int, string, CancellationToken)
  nameWithType: IAIAgent.TranslateEntityAsync(string, int, string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAIAgent.TranslateEntityAsync(string, int, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Retrieve, format and translate text for an entity to a specified language

    <p></p>

    <b>Experimental:</b> The operation is experimental, subject to change, and not intended for partners.
  example: []
  syntax:
    content: Task<string> TranslateEntityAsync(string entityName, int entityId, string targetLanguage, CancellationToken cancellationToken = default)
    parameters:
    - id: entityName
      type: System.String
      description: Name of entity to get the text to be translated; eg., 'ticketMessage'
    - id: entityId
      type: System.Int32
      description: Identifier for the entity to get text to be translated
    - id: targetLanguage
      type: System.String
      description: ISO Language code (such as FR) to translate the text into
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Translated text
    content.vb: Function TranslateEntityAsync(entityName As String, entityId As Integer, targetLanguage As String, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Services.IAIAgent.TranslateEntityAsync*
  nameWithType.vb: IAIAgent.TranslateEntityAsync(String, Integer, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAIAgent.TranslateEntityAsync(String, Integer, String, System.Threading.CancellationToken)
  name.vb: TranslateEntityAsync(String, Integer, String, CancellationToken)
- uid: SuperOffice.CRM.Services.IAIAgent.AnswerAsync(System.String,System.String,SuperOffice.Data.RagType,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAIAgent.AnswerAsync(System.String,System.String,SuperOffice.Data.RagType,System.Int32,System.Threading.CancellationToken)
  id: AnswerAsync(System.String,System.String,SuperOffice.Data.RagType,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAIAgent
  langs:
  - csharp
  - vb
  name: AnswerAsync(string, string, RagType, int, CancellationToken)
  nameWithType: IAIAgent.AnswerAsync(string, string, RagType, int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAIAgent.AnswerAsync(string, string, SuperOffice.Data.RagType, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Returns an answer.

    <p></p>

    <b>Experimental:</b> The operation is experimental, subject to change, and not intended for partners.
  example: []
  syntax:
    content: Task<RagAnswer> AnswerAsync(string namespaceName, string query, RagType type, int top, CancellationToken cancellationToken = default)
    parameters:
    - id: namespaceName
      type: System.String
      description: Defines the search domain used for generating answer. e.g. 'ServiceCopilot'
    - id: query
      type: System.String
      description: Question. The search query to answer.
    - id: type
      type: SuperOffice.Data.RagType
      description: 'Filter results based on content type. Default: None = no filtering'
    - id: top
      type: System.Int32
      description: Max Number of results to use in generating answer.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.RagAnswer}
      description: Generated answer based on query.
    content.vb: Function AnswerAsync(namespaceName As String, query As String, type As RagType, top As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of RagAnswer)
  overload: SuperOffice.CRM.Services.IAIAgent.AnswerAsync*
  nameWithType.vb: IAIAgent.AnswerAsync(String, String, RagType, Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAIAgent.AnswerAsync(String, String, SuperOffice.Data.RagType, Integer, System.Threading.CancellationToken)
  name.vb: AnswerAsync(String, String, RagType, Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IAIAgent.AnswerFeedbackAsync(System.String,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAIAgent.AnswerFeedbackAsync(System.String,System.Boolean,System.Threading.CancellationToken)
  id: AnswerFeedbackAsync(System.String,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAIAgent
  langs:
  - csharp
  - vb
  name: AnswerFeedbackAsync(string, bool, CancellationToken)
  nameWithType: IAIAgent.AnswerFeedbackAsync(string, bool, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAIAgent.AnswerFeedbackAsync(string, bool, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Send feedback on answer - feedback is logged and used to improve the answer algorithm.

    <p></p>

    <b>Experimental:</b> The operation is experimental, subject to change, and not intended for partners.
  example: []
  syntax:
    content: Task AnswerFeedbackAsync(string trackingId, bool isThumbsUp, CancellationToken cancellationToken = default)
    parameters:
    - id: trackingId
      type: System.String
      description: The id of the answer that you are giving feedback to.
    - id: isThumbsUp
      type: System.Boolean
      description: True = Like, False = Dislike.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Function AnswerFeedbackAsync(trackingId As String, isThumbsUp As Boolean, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IAIAgent.AnswerFeedbackAsync*
  nameWithType.vb: IAIAgent.AnswerFeedbackAsync(String, Boolean, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAIAgent.AnswerFeedbackAsync(String, Boolean, System.Threading.CancellationToken)
  name.vb: AnswerFeedbackAsync(String, Boolean, CancellationToken)
- uid: SuperOffice.CRM.Services.IAIAgent.AnswerAcceptedAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAIAgent.AnswerAcceptedAsync(System.String,System.Threading.CancellationToken)
  id: AnswerAcceptedAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAIAgent
  langs:
  - csharp
  - vb
  name: AnswerAcceptedAsync(string, CancellationToken)
  nameWithType: IAIAgent.AnswerAcceptedAsync(string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAIAgent.AnswerAcceptedAsync(string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Signal that answer was inserted into response- feedback is logged and used to improve the answer algorithm.

    <p></p>

    <b>Experimental:</b> The operation is experimental, subject to change, and not intended for partners.
  example: []
  syntax:
    content: Task AnswerAcceptedAsync(string trackingId, CancellationToken cancellationToken = default)
    parameters:
    - id: trackingId
      type: System.String
      description: The id of the answer that you are giving feedback to.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Function AnswerAcceptedAsync(trackingId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IAIAgent.AnswerAcceptedAsync*
  nameWithType.vb: IAIAgent.AnswerAcceptedAsync(String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAIAgent.AnswerAcceptedAsync(String, System.Threading.CancellationToken)
  name.vb: AnswerAcceptedAsync(String, CancellationToken)
- uid: SuperOffice.CRM.Services.IAIAgent.SearchAsync(System.String,System.String,SuperOffice.Data.RagType,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAIAgent.SearchAsync(System.String,System.String,SuperOffice.Data.RagType,System.Int32,System.Threading.CancellationToken)
  id: SearchAsync(System.String,System.String,SuperOffice.Data.RagType,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAIAgent
  langs:
  - csharp
  - vb
  name: SearchAsync(string, string, RagType, int, CancellationToken)
  nameWithType: IAIAgent.SearchAsync(string, string, RagType, int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAIAgent.SearchAsync(string, string, SuperOffice.Data.RagType, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Returns semantic search results from vector database.

    <p></p>

    <b>Experimental:</b> The operation is experimental, subject to change, and not intended for partners.
  example: []
  syntax:
    content: Task<RagResult[]> SearchAsync(string namespaceName, string query, RagType type, int top, CancellationToken cancellationToken = default)
    parameters:
    - id: namespaceName
      type: System.String
      description: Defines the search domain. e.g. 'ServiceCopilot'.
    - id: query
      type: System.String
      description: Search query.
    - id: type
      type: SuperOffice.Data.RagType
      description: 'Filter results based on a specific content type. Default: None = no filtering'
    - id: top
      type: System.Int32
      description: Max Number of results to return.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.RagResult[]}
      description: Array containing vector search results
    content.vb: Function SearchAsync(namespaceName As String, query As String, type As RagType, top As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of RagResult())
  overload: SuperOffice.CRM.Services.IAIAgent.SearchAsync*
  nameWithType.vb: IAIAgent.SearchAsync(String, String, RagType, Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAIAgent.SearchAsync(String, String, SuperOffice.Data.RagType, Integer, System.Threading.CancellationToken)
  name.vb: SearchAsync(String, String, RagType, Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IAIAgent.StartRagIndexingAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAIAgent.StartRagIndexingAsync(System.String,System.String,System.Threading.CancellationToken)
  id: StartRagIndexingAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAIAgent
  langs:
  - csharp
  - vb
  name: StartRagIndexingAsync(string, string, CancellationToken)
  nameWithType: IAIAgent.StartRagIndexingAsync(string, string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAIAgent.StartRagIndexingAsync(string, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Kicks off a batch task to update the RAG index

    <p></p>

    <b>Experimental:</b> The operation is experimental, subject to change, and not intended for partners.
  example: []
  syntax:
    content: Task<int> StartRagIndexingAsync(string namespaceName, string sourceId, CancellationToken cancellationToken = default)
    parameters:
    - id: namespaceName
      type: System.String
      description: Defines the search domain. e.g. 'ServiceCopilot'.
    - id: sourceId
      type: System.String
      description: (Optional) Identifies the data source to update. Blank = all sources
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: The batch task id
    content.vb: Function StartRagIndexingAsync(namespaceName As String, sourceId As String, cancellationToken As CancellationToken = Nothing) As Task(Of Integer)
  overload: SuperOffice.CRM.Services.IAIAgent.StartRagIndexingAsync*
  nameWithType.vb: IAIAgent.StartRagIndexingAsync(String, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAIAgent.StartRagIndexingAsync(String, String, System.Threading.CancellationToken)
  name.vb: StartRagIndexingAsync(String, String, CancellationToken)
- uid: SuperOffice.CRM.Services.IAIAgent.SummarizeTicketAsync(System.Int32,System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAIAgent.SummarizeTicketAsync(System.Int32,System.Int32,System.String,System.Threading.CancellationToken)
  id: SummarizeTicketAsync(System.Int32,System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAIAgent
  langs:
  - csharp
  - vb
  name: SummarizeTicketAsync(int, int, string, CancellationToken)
  nameWithType: IAIAgent.SummarizeTicketAsync(int, int, string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAIAgent.SummarizeTicketAsync(int, int, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Generate a short summary of the messages on a ticket

    <p></p>

    <b>Experimental:</b> The operation is experimental, subject to change, and not intended for partners.
  example: []
  syntax:
    content: Task<string> SummarizeTicketAsync(int ticketId, int numSentences, string isoLangCode, CancellationToken cancellationToken = default)
    parameters:
    - id: ticketId
      type: System.Int32
      description: Ticket id to summarize
    - id: numSentences
      type: System.Int32
      description: Length of summary
    - id: isoLangCode
      type: System.String
      description: Language returned text should be in
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Short summary of the messages on a ticket - in HTML.
    content.vb: Function SummarizeTicketAsync(ticketId As Integer, numSentences As Integer, isoLangCode As String, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Services.IAIAgent.SummarizeTicketAsync*
  nameWithType.vb: IAIAgent.SummarizeTicketAsync(Integer, Integer, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAIAgent.SummarizeTicketAsync(Integer, Integer, String, System.Threading.CancellationToken)
  name.vb: SummarizeTicketAsync(Integer, Integer, String, CancellationToken)
- uid: SuperOffice.CRM.Services.IAIAgent.GetSummarizeTicketPromptAsync(System.Int32,System.Int32,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAIAgent.GetSummarizeTicketPromptAsync(System.Int32,System.Int32,System.String,System.String,System.Threading.CancellationToken)
  id: GetSummarizeTicketPromptAsync(System.Int32,System.Int32,System.String,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAIAgent
  langs:
  - csharp
  - vb
  name: GetSummarizeTicketPromptAsync(int, int, string, string, CancellationToken)
  nameWithType: IAIAgent.GetSummarizeTicketPromptAsync(int, int, string, string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAIAgent.GetSummarizeTicketPromptAsync(int, int, string, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Return the prompt used to get a short summary of the messages on a ticket. Does not call the chatbot for a response. Used for transfering a summary to a chat session.

    <p></p>

    <b>Experimental:</b> The operation is experimental, subject to change, and not intended for partners.
  example: []
  syntax:
    content: Task<ChatbotTurn> GetSummarizeTicketPromptAsync(int ticketId, int numSentences, string summary, string isoLangCode, CancellationToken cancellationToken = default)
    parameters:
    - id: ticketId
      type: System.Int32
      description: Ticket id to summarize
    - id: numSentences
      type: System.Int32
      description: Length of summary
    - id: summary
      type: System.String
      description: Chatbot's summary of the ticket
    - id: isoLangCode
      type: System.String
      description: Language returned text should be in
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.ChatbotTurn}
      description: Display text and Prompt used to generate a short summary of the messages on a ticket.
    content.vb: Function GetSummarizeTicketPromptAsync(ticketId As Integer, numSentences As Integer, summary As String, isoLangCode As String, cancellationToken As CancellationToken = Nothing) As Task(Of ChatbotTurn)
  overload: SuperOffice.CRM.Services.IAIAgent.GetSummarizeTicketPromptAsync*
  nameWithType.vb: IAIAgent.GetSummarizeTicketPromptAsync(Integer, Integer, String, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAIAgent.GetSummarizeTicketPromptAsync(Integer, Integer, String, String, System.Threading.CancellationToken)
  name.vb: GetSummarizeTicketPromptAsync(Integer, Integer, String, String, CancellationToken)
- uid: SuperOffice.CRM.Services.IAIAgent.SummarizeContactAsync(System.Int32,System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAIAgent.SummarizeContactAsync(System.Int32,System.Int32,System.String,System.Threading.CancellationToken)
  id: SummarizeContactAsync(System.Int32,System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAIAgent
  langs:
  - csharp
  - vb
  name: SummarizeContactAsync(int, int, string, CancellationToken)
  nameWithType: IAIAgent.SummarizeContactAsync(int, int, string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAIAgent.SummarizeContactAsync(int, int, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Generate a short summary of the activities on a contact

    <p></p>

    <b>Experimental:</b> The operation is experimental, subject to change, and not intended for partners.
  example: []
  syntax:
    content: Task<string> SummarizeContactAsync(int contactId, int numSentences, string isoLangCode, CancellationToken cancellationToken = default)
    parameters:
    - id: contactId
      type: System.Int32
      description: Contact id to summarize
    - id: numSentences
      type: System.Int32
      description: Length of summary
    - id: isoLangCode
      type: System.String
      description: Language returned text should be in. Blank = do not specify language.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Short summary of the activities on a contact - in HTML.
    content.vb: Function SummarizeContactAsync(contactId As Integer, numSentences As Integer, isoLangCode As String, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Services.IAIAgent.SummarizeContactAsync*
  nameWithType.vb: IAIAgent.SummarizeContactAsync(Integer, Integer, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAIAgent.SummarizeContactAsync(Integer, Integer, String, System.Threading.CancellationToken)
  name.vb: SummarizeContactAsync(Integer, Integer, String, CancellationToken)
- uid: SuperOffice.CRM.Services.IAIAgent.GetSummarizeContactPromptAsync(System.Int32,System.Int32,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAIAgent.GetSummarizeContactPromptAsync(System.Int32,System.Int32,System.String,System.String,System.Threading.CancellationToken)
  id: GetSummarizeContactPromptAsync(System.Int32,System.Int32,System.String,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAIAgent
  langs:
  - csharp
  - vb
  name: GetSummarizeContactPromptAsync(int, int, string, string, CancellationToken)
  nameWithType: IAIAgent.GetSummarizeContactPromptAsync(int, int, string, string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAIAgent.GetSummarizeContactPromptAsync(int, int, string, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Return the prompt used to get a short summary of the activities on a contact. Does not call the chatbot for a response. Used for transfering a summary to a chat session.

    <p></p>

    <b>Experimental:</b> The operation is experimental, subject to change, and not intended for partners.
  example: []
  syntax:
    content: Task<ChatbotTurn> GetSummarizeContactPromptAsync(int contactId, int numSentences, string summary, string isoLangCode, CancellationToken cancellationToken = default)
    parameters:
    - id: contactId
      type: System.Int32
      description: Contact id to summarize
    - id: numSentences
      type: System.Int32
      description: Length of summary
    - id: summary
      type: System.String
      description: Chatbot's summary of the contact activities
    - id: isoLangCode
      type: System.String
      description: Language returned text should be in. Blank = do not specify language.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.ChatbotTurn}
      description: Display text and Prompt used to generate a short summary of the activities on a contact.
    content.vb: Function GetSummarizeContactPromptAsync(contactId As Integer, numSentences As Integer, summary As String, isoLangCode As String, cancellationToken As CancellationToken = Nothing) As Task(Of ChatbotTurn)
  overload: SuperOffice.CRM.Services.IAIAgent.GetSummarizeContactPromptAsync*
  nameWithType.vb: IAIAgent.GetSummarizeContactPromptAsync(Integer, Integer, String, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAIAgent.GetSummarizeContactPromptAsync(Integer, Integer, String, String, System.Threading.CancellationToken)
  name.vb: GetSummarizeContactPromptAsync(Integer, Integer, String, String, CancellationToken)
- uid: SuperOffice.CRM.Services.IAIAgent.SummarizeSaleAsync(System.Int32,System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAIAgent.SummarizeSaleAsync(System.Int32,System.Int32,System.String,System.Threading.CancellationToken)
  id: SummarizeSaleAsync(System.Int32,System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAIAgent
  langs:
  - csharp
  - vb
  name: SummarizeSaleAsync(int, int, string, CancellationToken)
  nameWithType: IAIAgent.SummarizeSaleAsync(int, int, string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAIAgent.SummarizeSaleAsync(int, int, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Generate a short summary of the activities on a sale

    <p></p>

    <b>Experimental:</b> The operation is experimental, subject to change, and not intended for partners.
  example: []
  syntax:
    content: Task<string> SummarizeSaleAsync(int saleId, int numSentences, string isoLangCode, CancellationToken cancellationToken = default)
    parameters:
    - id: saleId
      type: System.Int32
      description: Sale id to summarize
    - id: numSentences
      type: System.Int32
      description: Length of summary
    - id: isoLangCode
      type: System.String
      description: Language returned text should be in. Blank = do not specify language.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Short summary of the activities on a sale - in HTML.
    content.vb: Function SummarizeSaleAsync(saleId As Integer, numSentences As Integer, isoLangCode As String, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Services.IAIAgent.SummarizeSaleAsync*
  nameWithType.vb: IAIAgent.SummarizeSaleAsync(Integer, Integer, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAIAgent.SummarizeSaleAsync(Integer, Integer, String, System.Threading.CancellationToken)
  name.vb: SummarizeSaleAsync(Integer, Integer, String, CancellationToken)
- uid: SuperOffice.CRM.Services.IAIAgent.GetSummarizeSalePromptAsync(System.Int32,System.Int32,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAIAgent.GetSummarizeSalePromptAsync(System.Int32,System.Int32,System.String,System.String,System.Threading.CancellationToken)
  id: GetSummarizeSalePromptAsync(System.Int32,System.Int32,System.String,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAIAgent
  langs:
  - csharp
  - vb
  name: GetSummarizeSalePromptAsync(int, int, string, string, CancellationToken)
  nameWithType: IAIAgent.GetSummarizeSalePromptAsync(int, int, string, string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAIAgent.GetSummarizeSalePromptAsync(int, int, string, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Return the prompt used to get a short summary of the activities on a sale. Does not call the chatbot for a response. Used for transfering a summary to a chat session.

    <p></p>

    <b>Experimental:</b> The operation is experimental, subject to change, and not intended for partners.
  example: []
  syntax:
    content: Task<ChatbotTurn> GetSummarizeSalePromptAsync(int saleId, int numSentences, string summary, string isoLangCode, CancellationToken cancellationToken = default)
    parameters:
    - id: saleId
      type: System.Int32
      description: Sale id to summarize
    - id: numSentences
      type: System.Int32
      description: Length of summary
    - id: summary
      type: System.String
      description: Chatbot's summary of the sale activities
    - id: isoLangCode
      type: System.String
      description: Language returned text should be in
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.ChatbotTurn}
      description: Display text and Prompt used to generate a short summary of the activities on a sale.
    content.vb: Function GetSummarizeSalePromptAsync(saleId As Integer, numSentences As Integer, summary As String, isoLangCode As String, cancellationToken As CancellationToken = Nothing) As Task(Of ChatbotTurn)
  overload: SuperOffice.CRM.Services.IAIAgent.GetSummarizeSalePromptAsync*
  nameWithType.vb: IAIAgent.GetSummarizeSalePromptAsync(Integer, Integer, String, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAIAgent.GetSummarizeSalePromptAsync(Integer, Integer, String, String, System.Threading.CancellationToken)
  name.vb: GetSummarizeSalePromptAsync(Integer, Integer, String, String, CancellationToken)
references:
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
- uid: SuperOffice.CRM.Services.IAIAgent.SummarizeTextAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAIAgent.SummarizeTextAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAIAgent.html#SuperOffice_CRM_Services_IAIAgent_SummarizeTextAsync_System_String_System_Int32_System_String_System_Threading_CancellationToken_
  name: SummarizeTextAsync
  nameWithType: IAIAgent.SummarizeTextAsync
  fullName: SuperOffice.CRM.Services.IAIAgent.SummarizeTextAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<string>
  nameWithType: Task<string>
  fullName: System.Threading.Tasks.Task<string>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: SuperOffice.CRM.Services.IAIAgent.ExpandTextAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAIAgent.ExpandTextAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAIAgent.html#SuperOffice_CRM_Services_IAIAgent_ExpandTextAsync_System_String_System_Int32_System_String_System_Threading_CancellationToken_
  name: ExpandTextAsync
  nameWithType: IAIAgent.ExpandTextAsync
  fullName: SuperOffice.CRM.Services.IAIAgent.ExpandTextAsync
- uid: SuperOffice.CRM.Services.IAIAgent.RephraseTextAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAIAgent.RephraseTextAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAIAgent.html#SuperOffice_CRM_Services_IAIAgent_RephraseTextAsync_System_String_SuperOffice_Data_AiTextStyle_System_String_System_Threading_CancellationToken_
  name: RephraseTextAsync
  nameWithType: IAIAgent.RephraseTextAsync
  fullName: SuperOffice.CRM.Services.IAIAgent.RephraseTextAsync
- uid: SuperOffice.Data.AiTextStyle
  isExternal: true
  name: AiTextStyle
  nameWithType: AiTextStyle
  fullName: SuperOffice.Data.AiTextStyle
- uid: SuperOffice.CRM.Services.IAIAgent.CreateTextForAppointmentAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAIAgent.CreateTextForAppointmentAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAIAgent.html#SuperOffice_CRM_Services_IAIAgent_CreateTextForAppointmentAsync_SuperOffice_CRM_Services_AppointmentEntity_System_String_System_Threading_CancellationToken_
  name: CreateTextForAppointmentAsync
  nameWithType: IAIAgent.CreateTextForAppointmentAsync
  fullName: SuperOffice.CRM.Services.IAIAgent.CreateTextForAppointmentAsync
- uid: SuperOffice.CRM.Services.AppointmentEntity
  commentId: T:SuperOffice.CRM.Services.AppointmentEntity
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.AppointmentEntity.html
  name: AppointmentEntity
  nameWithType: AppointmentEntity
  fullName: SuperOffice.CRM.Services.AppointmentEntity
- uid: SuperOffice.CRM.Services.IAIAgent.AnalyzeBizCardImageAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAIAgent.AnalyzeBizCardImageAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAIAgent.html#SuperOffice_CRM_Services_IAIAgent_AnalyzeBizCardImageAsync_System_IO_Stream_System_Boolean_System_Threading_CancellationToken_
  name: AnalyzeBizCardImageAsync
  nameWithType: IAIAgent.AnalyzeBizCardImageAsync
  fullName: SuperOffice.CRM.Services.IAIAgent.AnalyzeBizCardImageAsync
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.BizCard}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.BizCard}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<BizCard>
  nameWithType: Task<BizCard>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.BizCard>
  nameWithType.vb: Task(Of BizCard)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.BizCard)
  name.vb: Task(Of BizCard)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.BizCard
    name: BizCard
    isExternal: true
    href: SuperOffice.CRM.Services.BizCard.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.BizCard
    name: BizCard
    isExternal: true
    href: SuperOffice.CRM.Services.BizCard.html
  - name: )
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
- uid: SuperOffice.CRM.Services.IAIAgent.AnalyzeBizCardTextAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAIAgent.AnalyzeBizCardTextAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAIAgent.html#SuperOffice_CRM_Services_IAIAgent_AnalyzeBizCardTextAsync_System_String_System_Boolean_System_Threading_CancellationToken_
  name: AnalyzeBizCardTextAsync
  nameWithType: IAIAgent.AnalyzeBizCardTextAsync
  fullName: SuperOffice.CRM.Services.IAIAgent.AnalyzeBizCardTextAsync
- uid: SuperOffice.CRM.Services.IAIAgent.GetTrainingStatusAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAIAgent.GetTrainingStatusAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAIAgent.html#SuperOffice_CRM_Services_IAIAgent_GetTrainingStatusAsync_System_Threading_CancellationToken_
  name: GetTrainingStatusAsync
  nameWithType: IAIAgent.GetTrainingStatusAsync
  fullName: SuperOffice.CRM.Services.IAIAgent.GetTrainingStatusAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.CategorizationStatusResponse}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.CategorizationStatusResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<CategorizationStatusResponse>
  nameWithType: Task<CategorizationStatusResponse>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.CategorizationStatusResponse>
  nameWithType.vb: Task(Of CategorizationStatusResponse)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.CategorizationStatusResponse)
  name.vb: Task(Of CategorizationStatusResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.CategorizationStatusResponse
    name: CategorizationStatusResponse
    isExternal: true
    href: SuperOffice.CRM.Services.CategorizationStatusResponse.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.CategorizationStatusResponse
    name: CategorizationStatusResponse
    isExternal: true
    href: SuperOffice.CRM.Services.CategorizationStatusResponse.html
  - name: )
- uid: SuperOffice.CRM.Services.IAIAgent.GuessCategoryAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAIAgent.GuessCategoryAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAIAgent.html#SuperOffice_CRM_Services_IAIAgent_GuessCategoryAsync_System_Int32_System_Threading_CancellationToken_
  name: GuessCategoryAsync
  nameWithType: IAIAgent.GuessCategoryAsync
  fullName: SuperOffice.CRM.Services.IAIAgent.GuessCategoryAsync
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: T:System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<int>
  nameWithType: Task<int>
  fullName: System.Threading.Tasks.Task<int>
  nameWithType.vb: Task(Of Integer)
  fullName.vb: System.Threading.Tasks.Task(Of Integer)
  name.vb: Task(Of Integer)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SuperOffice.CRM.Services.IAIAgent.TrainCategoryGuesserAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAIAgent.TrainCategoryGuesserAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAIAgent.html#SuperOffice_CRM_Services_IAIAgent_TrainCategoryGuesserAsync_System_Int32_System_Int32_System_Int32_System_Threading_CancellationToken_
  name: TrainCategoryGuesserAsync
  nameWithType: IAIAgent.TrainCategoryGuesserAsync
  fullName: SuperOffice.CRM.Services.IAIAgent.TrainCategoryGuesserAsync
- uid: SuperOffice.CRM.Services.IAIAgent.GetChatbotResponseAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAIAgent.GetChatbotResponseAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAIAgent.html#SuperOffice_CRM_Services_IAIAgent_GetChatbotResponseAsync_System_String_System_String_System_String_System_String_SuperOffice_CRM_Services_ChatbotTurn___System_String_System_Threading_CancellationToken_
  name: GetChatbotResponseAsync
  nameWithType: IAIAgent.GetChatbotResponseAsync
  fullName: SuperOffice.CRM.Services.IAIAgent.GetChatbotResponseAsync
- uid: SuperOffice.CRM.Services.ChatbotTurn[]
  isExternal: true
  href: SuperOffice.CRM.Services.ChatbotTurn.html
  name: ChatbotTurn[]
  nameWithType: ChatbotTurn[]
  fullName: SuperOffice.CRM.Services.ChatbotTurn[]
  nameWithType.vb: ChatbotTurn()
  fullName.vb: SuperOffice.CRM.Services.ChatbotTurn()
  name.vb: ChatbotTurn()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ChatbotTurn
    name: ChatbotTurn
    isExternal: true
    href: SuperOffice.CRM.Services.ChatbotTurn.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Services.ChatbotTurn
    name: ChatbotTurn
    isExternal: true
    href: SuperOffice.CRM.Services.ChatbotTurn.html
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.ChatbotTurn}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.ChatbotTurn}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ChatbotTurn>
  nameWithType: Task<ChatbotTurn>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.ChatbotTurn>
  nameWithType.vb: Task(Of ChatbotTurn)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.ChatbotTurn)
  name.vb: Task(Of ChatbotTurn)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.ChatbotTurn
    name: ChatbotTurn
    isExternal: true
    href: SuperOffice.CRM.Services.ChatbotTurn.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.ChatbotTurn
    name: ChatbotTurn
    isExternal: true
    href: SuperOffice.CRM.Services.ChatbotTurn.html
  - name: )
- uid: SuperOffice.CRM.Services.IAIAgent.GetChatbotPromptSuggestionsAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAIAgent.GetChatbotPromptSuggestionsAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAIAgent.html#SuperOffice_CRM_Services_IAIAgent_GetChatbotPromptSuggestionsAsync_System_String_System_String_System_Int32_System_Threading_CancellationToken_
  name: GetChatbotPromptSuggestionsAsync
  nameWithType: IAIAgent.GetChatbotPromptSuggestionsAsync
  fullName: SuperOffice.CRM.Services.IAIAgent.GetChatbotPromptSuggestionsAsync
- uid: SuperOffice.CRM.Services.IAIAgent.GetChatbotTurnsAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAIAgent.GetChatbotTurnsAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAIAgent.html#SuperOffice_CRM_Services_IAIAgent_GetChatbotTurnsAsync_System_String_System_Threading_CancellationToken_
  name: GetChatbotTurnsAsync
  nameWithType: IAIAgent.GetChatbotTurnsAsync
  fullName: SuperOffice.CRM.Services.IAIAgent.GetChatbotTurnsAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.ChatbotTurn[]}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.ChatbotTurn[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ChatbotTurn[]>
  nameWithType: Task<ChatbotTurn[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.ChatbotTurn[]>
  nameWithType.vb: Task(Of ChatbotTurn())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.ChatbotTurn())
  name.vb: Task(Of ChatbotTurn())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.ChatbotTurn
    name: ChatbotTurn
    isExternal: true
    href: SuperOffice.CRM.Services.ChatbotTurn.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.ChatbotTurn
    name: ChatbotTurn
    isExternal: true
    href: SuperOffice.CRM.Services.ChatbotTurn.html
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.CRM.Services.IAIAgent.ClearChatbotTurnsAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAIAgent.ClearChatbotTurnsAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAIAgent.html#SuperOffice_CRM_Services_IAIAgent_ClearChatbotTurnsAsync_System_String_System_Threading_CancellationToken_
  name: ClearChatbotTurnsAsync
  nameWithType: IAIAgent.ClearChatbotTurnsAsync
  fullName: SuperOffice.CRM.Services.IAIAgent.ClearChatbotTurnsAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: SuperOffice.CRM.Services.IAIAgent.DetectLanguageAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAIAgent.DetectLanguageAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAIAgent.html#SuperOffice_CRM_Services_IAIAgent_DetectLanguageAsync_System_String_System_Threading_CancellationToken_
  name: DetectLanguageAsync
  nameWithType: IAIAgent.DetectLanguageAsync
  fullName: SuperOffice.CRM.Services.IAIAgent.DetectLanguageAsync
- uid: SuperOffice.CRM.Services.IAIAgent.DetectSentimentAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAIAgent.DetectSentimentAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAIAgent.html#SuperOffice_CRM_Services_IAIAgent_DetectSentimentAsync_System_String_System_Threading_CancellationToken_
  name: DetectSentimentAsync
  nameWithType: IAIAgent.DetectSentimentAsync
  fullName: SuperOffice.CRM.Services.IAIAgent.DetectSentimentAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Sentiment}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.Sentiment}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Sentiment>
  nameWithType: Task<Sentiment>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.Sentiment>
  nameWithType.vb: Task(Of Sentiment)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.Sentiment)
  name.vb: Task(Of Sentiment)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.Sentiment
    name: Sentiment
    isExternal: true
    href: SuperOffice.CRM.Services.Sentiment.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.Sentiment
    name: Sentiment
    isExternal: true
    href: SuperOffice.CRM.Services.Sentiment.html
  - name: )
- uid: SuperOffice.CRM.Services.IAIAgent.TranslateAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAIAgent.TranslateAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAIAgent.html#SuperOffice_CRM_Services_IAIAgent_TranslateAsync_System_String_System_String_System_Threading_CancellationToken_
  name: TranslateAsync
  nameWithType: IAIAgent.TranslateAsync
  fullName: SuperOffice.CRM.Services.IAIAgent.TranslateAsync
- uid: SuperOffice.CRM.Services.IAIAgent.TranslateEntityAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAIAgent.TranslateEntityAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAIAgent.html#SuperOffice_CRM_Services_IAIAgent_TranslateEntityAsync_System_String_System_Int32_System_String_System_Threading_CancellationToken_
  name: TranslateEntityAsync
  nameWithType: IAIAgent.TranslateEntityAsync
  fullName: SuperOffice.CRM.Services.IAIAgent.TranslateEntityAsync
- uid: SuperOffice.CRM.Services.IAIAgent.AnswerAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAIAgent.AnswerAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAIAgent.html#SuperOffice_CRM_Services_IAIAgent_AnswerAsync_System_String_System_String_SuperOffice_Data_RagType_System_Int32_System_Threading_CancellationToken_
  name: AnswerAsync
  nameWithType: IAIAgent.AnswerAsync
  fullName: SuperOffice.CRM.Services.IAIAgent.AnswerAsync
- uid: SuperOffice.Data.RagType
  isExternal: true
  name: RagType
  nameWithType: RagType
  fullName: SuperOffice.Data.RagType
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.RagAnswer}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.RagAnswer}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<RagAnswer>
  nameWithType: Task<RagAnswer>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.RagAnswer>
  nameWithType.vb: Task(Of RagAnswer)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.RagAnswer)
  name.vb: Task(Of RagAnswer)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.RagAnswer
    name: RagAnswer
    isExternal: true
    href: SuperOffice.CRM.Services.RagAnswer.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.RagAnswer
    name: RagAnswer
    isExternal: true
    href: SuperOffice.CRM.Services.RagAnswer.html
  - name: )
- uid: SuperOffice.CRM.Services.IAIAgent.AnswerFeedbackAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAIAgent.AnswerFeedbackAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAIAgent.html#SuperOffice_CRM_Services_IAIAgent_AnswerFeedbackAsync_System_String_System_Boolean_System_Threading_CancellationToken_
  name: AnswerFeedbackAsync
  nameWithType: IAIAgent.AnswerFeedbackAsync
  fullName: SuperOffice.CRM.Services.IAIAgent.AnswerFeedbackAsync
- uid: SuperOffice.CRM.Services.IAIAgent.AnswerAcceptedAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAIAgent.AnswerAcceptedAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAIAgent.html#SuperOffice_CRM_Services_IAIAgent_AnswerAcceptedAsync_System_String_System_Threading_CancellationToken_
  name: AnswerAcceptedAsync
  nameWithType: IAIAgent.AnswerAcceptedAsync
  fullName: SuperOffice.CRM.Services.IAIAgent.AnswerAcceptedAsync
- uid: SuperOffice.CRM.Services.IAIAgent.SearchAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAIAgent.SearchAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAIAgent.html#SuperOffice_CRM_Services_IAIAgent_SearchAsync_System_String_System_String_SuperOffice_Data_RagType_System_Int32_System_Threading_CancellationToken_
  name: SearchAsync
  nameWithType: IAIAgent.SearchAsync
  fullName: SuperOffice.CRM.Services.IAIAgent.SearchAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.RagResult[]}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.RagResult[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<RagResult[]>
  nameWithType: Task<RagResult[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.RagResult[]>
  nameWithType.vb: Task(Of RagResult())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.RagResult())
  name.vb: Task(Of RagResult())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.RagResult
    name: RagResult
    isExternal: true
    href: SuperOffice.CRM.Services.RagResult.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.RagResult
    name: RagResult
    isExternal: true
    href: SuperOffice.CRM.Services.RagResult.html
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.CRM.Services.IAIAgent.StartRagIndexingAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAIAgent.StartRagIndexingAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAIAgent.html#SuperOffice_CRM_Services_IAIAgent_StartRagIndexingAsync_System_String_System_String_System_Threading_CancellationToken_
  name: StartRagIndexingAsync
  nameWithType: IAIAgent.StartRagIndexingAsync
  fullName: SuperOffice.CRM.Services.IAIAgent.StartRagIndexingAsync
- uid: SuperOffice.CRM.Services.IAIAgent.SummarizeTicketAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAIAgent.SummarizeTicketAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAIAgent.html#SuperOffice_CRM_Services_IAIAgent_SummarizeTicketAsync_System_Int32_System_Int32_System_String_System_Threading_CancellationToken_
  name: SummarizeTicketAsync
  nameWithType: IAIAgent.SummarizeTicketAsync
  fullName: SuperOffice.CRM.Services.IAIAgent.SummarizeTicketAsync
- uid: SuperOffice.CRM.Services.IAIAgent.GetSummarizeTicketPromptAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAIAgent.GetSummarizeTicketPromptAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAIAgent.html#SuperOffice_CRM_Services_IAIAgent_GetSummarizeTicketPromptAsync_System_Int32_System_Int32_System_String_System_String_System_Threading_CancellationToken_
  name: GetSummarizeTicketPromptAsync
  nameWithType: IAIAgent.GetSummarizeTicketPromptAsync
  fullName: SuperOffice.CRM.Services.IAIAgent.GetSummarizeTicketPromptAsync
- uid: SuperOffice.CRM.Services.IAIAgent.SummarizeContactAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAIAgent.SummarizeContactAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAIAgent.html#SuperOffice_CRM_Services_IAIAgent_SummarizeContactAsync_System_Int32_System_Int32_System_String_System_Threading_CancellationToken_
  name: SummarizeContactAsync
  nameWithType: IAIAgent.SummarizeContactAsync
  fullName: SuperOffice.CRM.Services.IAIAgent.SummarizeContactAsync
- uid: SuperOffice.CRM.Services.IAIAgent.GetSummarizeContactPromptAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAIAgent.GetSummarizeContactPromptAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAIAgent.html#SuperOffice_CRM_Services_IAIAgent_GetSummarizeContactPromptAsync_System_Int32_System_Int32_System_String_System_String_System_Threading_CancellationToken_
  name: GetSummarizeContactPromptAsync
  nameWithType: IAIAgent.GetSummarizeContactPromptAsync
  fullName: SuperOffice.CRM.Services.IAIAgent.GetSummarizeContactPromptAsync
- uid: SuperOffice.CRM.Services.IAIAgent.SummarizeSaleAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAIAgent.SummarizeSaleAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAIAgent.html#SuperOffice_CRM_Services_IAIAgent_SummarizeSaleAsync_System_Int32_System_Int32_System_String_System_Threading_CancellationToken_
  name: SummarizeSaleAsync
  nameWithType: IAIAgent.SummarizeSaleAsync
  fullName: SuperOffice.CRM.Services.IAIAgent.SummarizeSaleAsync
- uid: SuperOffice.CRM.Services.IAIAgent.GetSummarizeSalePromptAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAIAgent.GetSummarizeSalePromptAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAIAgent.html#SuperOffice_CRM_Services_IAIAgent_GetSummarizeSalePromptAsync_System_Int32_System_Int32_System_String_System_String_System_Threading_CancellationToken_
  name: GetSummarizeSalePromptAsync
  nameWithType: IAIAgent.GetSummarizeSalePromptAsync
  fullName: SuperOffice.CRM.Services.IAIAgent.GetSummarizeSalePromptAsync
