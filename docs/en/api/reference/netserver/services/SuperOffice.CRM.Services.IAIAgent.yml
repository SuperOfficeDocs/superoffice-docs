### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Services.IAIAgent
  commentId: T:SuperOffice.CRM.Services.IAIAgent
  id: IAIAgent
  parent: SuperOffice.CRM.Services
  children:
  - SuperOffice.CRM.Services.IAIAgent.DetectLanguage(System.String)
  - SuperOffice.CRM.Services.IAIAgent.DetectSentiment(System.String)
  - SuperOffice.CRM.Services.IAIAgent.GetTrainingStatus
  - SuperOffice.CRM.Services.IAIAgent.GuessCategory(System.Int32)
  - SuperOffice.CRM.Services.IAIAgent.TrainCategoryGuesser(System.Int32,System.Int32,System.Int32)
  - SuperOffice.CRM.Services.IAIAgent.Translate(System.String,System.String)
  langs:
  - csharp
  - vb
  name: IAIAgent
  nameWithType: IAIAgent
  fullName: SuperOffice.CRM.Services.IAIAgent
  type: Interface
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nInterface for the AI Agent\nAI services, such as Translation, Statistics, Sentiment analysis, backed by calls to Public Cloud providers\n"
  example:
  - "\n<pre><code>  using SuperOffice;\n  using SuperOffice.CRM.Services;\n\n  using (SoSession mySession = SoSession.Authenticate(&quot;user&quot;, &quot;pass&quot;))\n  {\n     using (AIAgent agent = new AIAgent())\n     {\n        // call methods on agent here...\n     }\n  }</code></pre>\n"
  syntax:
    content: >-
      [Agent("AI Agent", "Interface for the AI Agent. AI services, such as Translation, Statistics, Sentiment analysis, backed by calls to Public Cloud providers")]

      public interface IAIAgent : IAgent
    content.vb: >-
      <Agent("AI Agent", "Interface for the AI Agent. AI services, such as Translation, Statistics, Sentiment analysis, backed by calls to Public Cloud providers")>

      Public Interface IAIAgent

          Inherits IAgent
  attributes:
  - type: SuperOffice.CRM.Services.Reflection.AgentAttribute
    ctor: SuperOffice.CRM.Services.Reflection.AgentAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: AI Agent
    - type: System.String
      value: Interface for the AI Agent. AI services, such as Translation, Statistics, Sentiment analysis, backed by calls to Public Cloud providers
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.CRM.Services.IAIAgent.DetectLanguage(System.String)
  commentId: M:SuperOffice.CRM.Services.IAIAgent.DetectLanguage(System.String)
  id: DetectLanguage(System.String)
  parent: SuperOffice.CRM.Services.IAIAgent
  langs:
  - csharp
  - vb
  name: DetectLanguage(String)
  nameWithType: IAIAgent.DetectLanguage(String)
  fullName: SuperOffice.CRM.Services.IAIAgent.DetectLanguage(System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGiven a (reasonably short) text, detect the language it is written in\n"
  syntax:
    content: string DetectLanguage(string text)
    parameters:
    - id: text
      type: System.String
      description: Text to be analyzed; there may be a cost-per-character so do not send a book here
    return:
      type: System.String
      description: ISO Language code, such as NO, US, ES, FR
    content.vb: Function DetectLanguage(text As String) As String
  overload: SuperOffice.CRM.Services.IAIAgent.DetectLanguage*
- uid: SuperOffice.CRM.Services.IAIAgent.DetectSentiment(System.String)
  commentId: M:SuperOffice.CRM.Services.IAIAgent.DetectSentiment(System.String)
  id: DetectSentiment(System.String)
  parent: SuperOffice.CRM.Services.IAIAgent
  langs:
  - csharp
  - vb
  name: DetectSentiment(String)
  nameWithType: IAIAgent.DetectSentiment(String)
  fullName: SuperOffice.CRM.Services.IAIAgent.DetectSentiment(System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nDetect the sentiment of a (reasonably short) text. Sentiment analysis may cause a translation to be made, since sentiment analysis only supports a limited set of languages\n"
  syntax:
    content: Sentiment DetectSentiment(string text)
    parameters:
    - id: text
      type: System.String
      description: Text to be analyzed
    return:
      type: SuperOffice.CRM.Services.Sentiment
      description: 'The sentiment information: score (-100 to +100) and confidence'
    content.vb: Function DetectSentiment(text As String) As Sentiment
  overload: SuperOffice.CRM.Services.IAIAgent.DetectSentiment*
- uid: SuperOffice.CRM.Services.IAIAgent.Translate(System.String,System.String)
  commentId: M:SuperOffice.CRM.Services.IAIAgent.Translate(System.String,System.String)
  id: Translate(System.String,System.String)
  parent: SuperOffice.CRM.Services.IAIAgent
  langs:
  - csharp
  - vb
  name: Translate(String, String)
  nameWithType: IAIAgent.Translate(String, String)
  fullName: SuperOffice.CRM.Services.IAIAgent.Translate(System.String, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nTranslate a text from one language to another. Language of the text is automatically detected.\n"
  syntax:
    content: string Translate(string text, string targetLanguage)
    parameters:
    - id: text
      type: System.String
      description: Text to be translated. Language of the text is automatically detected.
    - id: targetLanguage
      type: System.String
      description: ISO Language code (such as FR) to translate the text into.
    return:
      type: System.String
      description: Translated text
    content.vb: Function Translate(text As String, targetLanguage As String) As String
  overload: SuperOffice.CRM.Services.IAIAgent.Translate*
- uid: SuperOffice.CRM.Services.IAIAgent.GuessCategory(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IAIAgent.GuessCategory(System.Int32)
  id: GuessCategory(System.Int32)
  parent: SuperOffice.CRM.Services.IAIAgent
  langs:
  - csharp
  - vb
  name: GuessCategory(Int32)
  nameWithType: IAIAgent.GuessCategory(Int32)
  fullName: SuperOffice.CRM.Services.IAIAgent.GuessCategory(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGiven a ticket&apos;s id, guess the ticket category it should be placed in. Currently this is based on the first message in the ticket\n"
  syntax:
    content: int GuessCategory(int ticketId)
    parameters:
    - id: ticketId
      type: System.Int32
      description: Id of ticket to guess category for
    return:
      type: System.Int32
      description: Suggested ticket category ID
    content.vb: Function GuessCategory(ticketId As Integer) As Integer
  overload: SuperOffice.CRM.Services.IAIAgent.GuessCategory*
- uid: SuperOffice.CRM.Services.IAIAgent.TrainCategoryGuesser(System.Int32,System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IAIAgent.TrainCategoryGuesser(System.Int32,System.Int32,System.Int32)
  id: TrainCategoryGuesser(System.Int32,System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.IAIAgent
  langs:
  - csharp
  - vb
  name: TrainCategoryGuesser(Int32, Int32, Int32)
  nameWithType: IAIAgent.TrainCategoryGuesser(Int32, Int32, Int32)
  fullName: SuperOffice.CRM.Services.IAIAgent.TrainCategoryGuesser(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nThe category guesser training API will be called with an array of CategorizationTrainingItem during the (background, Batch) execution of this call\n"
  syntax:
    content: string TrainCategoryGuesser(int selectionId, int maxItems, int maxTextLength)
    parameters:
    - id: selectionId
      type: System.Int32
      description: Id of selection of tickets, to retrieve training data from
    - id: maxItems
      type: System.Int32
      description: Maximum number of tickets to retrieve data from
    - id: maxTextLength
      type: System.Int32
      description: Maximum length of PlainTextBody or any other large text, truncated to nearest word boundary
    return:
      type: System.String
      description: Placeholder for result...  should this be a BatchTaskId?  maybe not useful?
    content.vb: Function TrainCategoryGuesser(selectionId As Integer, maxItems As Integer, maxTextLength As Integer) As String
  overload: SuperOffice.CRM.Services.IAIAgent.TrainCategoryGuesser*
- uid: SuperOffice.CRM.Services.IAIAgent.GetTrainingStatus
  commentId: M:SuperOffice.CRM.Services.IAIAgent.GetTrainingStatus
  id: GetTrainingStatus
  parent: SuperOffice.CRM.Services.IAIAgent
  langs:
  - csharp
  - vb
  name: GetTrainingStatus()
  nameWithType: IAIAgent.GetTrainingStatus()
  fullName: SuperOffice.CRM.Services.IAIAgent.GetTrainingStatus()
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCalling the HugoAI endpoint to fetch the current training status.\n"
  syntax:
    content: CategorizationStatusResponse GetTrainingStatus()
    return:
      type: SuperOffice.CRM.Services.CategorizationStatusResponse
      description: Carrier to describe the current status of HugoAI categorization
    content.vb: Function GetTrainingStatus As CategorizationStatusResponse
  overload: SuperOffice.CRM.Services.IAIAgent.GetTrainingStatus*
references:
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
- uid: SuperOffice.CRM.Services.IAIAgent.DetectLanguage*
  commentId: Overload:SuperOffice.CRM.Services.IAIAgent.DetectLanguage
  isExternal: true
  name: DetectLanguage
  nameWithType: IAIAgent.DetectLanguage
  fullName: SuperOffice.CRM.Services.IAIAgent.DetectLanguage
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Services.IAIAgent.DetectSentiment*
  commentId: Overload:SuperOffice.CRM.Services.IAIAgent.DetectSentiment
  isExternal: true
  name: DetectSentiment
  nameWithType: IAIAgent.DetectSentiment
  fullName: SuperOffice.CRM.Services.IAIAgent.DetectSentiment
- uid: SuperOffice.CRM.Services.Sentiment
  commentId: T:SuperOffice.CRM.Services.Sentiment
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: Sentiment
  nameWithType: Sentiment
  fullName: SuperOffice.CRM.Services.Sentiment
- uid: SuperOffice.CRM.Services.IAIAgent.Translate*
  commentId: Overload:SuperOffice.CRM.Services.IAIAgent.Translate
  isExternal: true
  name: Translate
  nameWithType: IAIAgent.Translate
  fullName: SuperOffice.CRM.Services.IAIAgent.Translate
- uid: SuperOffice.CRM.Services.IAIAgent.GuessCategory*
  commentId: Overload:SuperOffice.CRM.Services.IAIAgent.GuessCategory
  isExternal: true
  name: GuessCategory
  nameWithType: IAIAgent.GuessCategory
  fullName: SuperOffice.CRM.Services.IAIAgent.GuessCategory
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.CRM.Services.IAIAgent.TrainCategoryGuesser*
  commentId: Overload:SuperOffice.CRM.Services.IAIAgent.TrainCategoryGuesser
  isExternal: true
  name: TrainCategoryGuesser
  nameWithType: IAIAgent.TrainCategoryGuesser
  fullName: SuperOffice.CRM.Services.IAIAgent.TrainCategoryGuesser
- uid: SuperOffice.CRM.Services.IAIAgent.GetTrainingStatus*
  commentId: Overload:SuperOffice.CRM.Services.IAIAgent.GetTrainingStatus
  isExternal: true
  name: GetTrainingStatus
  nameWithType: IAIAgent.GetTrainingStatus
  fullName: SuperOffice.CRM.Services.IAIAgent.GetTrainingStatus
- uid: SuperOffice.CRM.Services.CategorizationStatusResponse
  commentId: T:SuperOffice.CRM.Services.CategorizationStatusResponse
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: CategorizationStatusResponse
  nameWithType: CategorizationStatusResponse
  fullName: SuperOffice.CRM.Services.CategorizationStatusResponse
