### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Services.IPersonAgent
  commentId: T:SuperOffice.CRM.Services.IPersonAgent
  id: IPersonAgent
  parent: SuperOffice.CRM.Services
  children:
  - SuperOffice.CRM.Services.IPersonAgent.AddBounceAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.AddBounceWithCountAsync(System.String,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.AddBounceWithDetailsAsync(System.String,System.Int32,System.Int32,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.AddEmailAddressToPersonAsync(System.Int32,System.String,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.ChangeCountryAsync(SuperOffice.CRM.Services.PersonEntity,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.ChangePersonRankAsync(System.Int32,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.CheckTemporaryKeyAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.CreateDefaultByContactIdAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.CreateDefaultConsentPersonAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.CreateDefaultFromCredentialAsync(System.Int32,System.String,System.String,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.CreateDefaultPersonEntityAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.CreateDefaultPersonImageAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.CreateOrUpdateUserCandidateAsync(System.Int32,System.String,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.CreateTemporaryKeyAsync(SuperOffice.Data.TemporaryKeyDomain,System.Int32,System.Int32,System.DateTime,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.CreateTemporaryKeyWithPayloadAsync(SuperOffice.Data.TemporaryKeyDomain,System.Int32,System.Int32,System.DateTime,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.DeleteConsentPersonAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.DeleteExpiredAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.DeletePersonEntityAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.DeleteTemporaryKeysOfDomainAsync(SuperOffice.Data.TemporaryKeyDomain,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.GetAddressAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.GetAddressByCountryAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.GetBestSoLanguageForTemplateAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.GetColleaguesAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.GetColleaguesByDepartmentAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.GetColleaguesBySourceAsync(SuperOffice.CRM.Services.Util.AssociateSourceType,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.GetConsentInfosAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.GetConsentPersonAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.GetCustomerCentrePasswordReplyTemplateAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.GetMyOwnerAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.GetMyPersonAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.GetOwnerOnPersonIdAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.GetPersonAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.GetPersonEntityAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.GetPersonImageAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.GetPersonImagesAsync(System.Int32[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.GetPersonListAsync(System.Int32[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.GetPersonsFromContactAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.GetPersonsFromProjectAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.GetPersonSummaryAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.GetPhonesAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.GetSalesRepAsync(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.GetUserCandidateByPersonAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.HasConsentAsync(System.Int32,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.IsNumberValidAsync(System.Int32,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.MergeAsync(System.Int32,System.Int32,System.DateTime,System.Boolean,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.MoveAsync(System.Int32,System.Int32,System.DateTime,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.NormalizeRanksAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.RemoveConsentAsync(System.Int32,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.ResolvePersonFromInfoAsync(System.Int32,System.String,System.String[],System.String[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.SaveConsentPersonAsync(SuperOffice.CRM.Services.ConsentPerson,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.SavePersonEntityAsync(SuperOffice.CRM.Services.PersonEntity,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.SendConsentConfirmationEmailAsync(System.Int32,System.String,System.Int32,System.Int32,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.SendCustomerCentrePasswordEmailAsync(System.Int32,System.String,System.String,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.SendEmailAsync(System.String,System.String,System.String,System.String,System.String,System.Int32[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.SendEmailWithEventNameAsync(System.String,System.String,System.String,System.String,System.String,System.Int32[],System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.SetConsentAsync(System.Int32,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.SetPersonImageAsync(System.Int32,System.Drawing.Image,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.SetPersonRankAsync(System.Int32,System.Int16,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.TryAddPersonsToEmailFlowAsync(System.Int32,System.Int32[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.UndeleteAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPersonAgent.ValidatePersonEntityAsync(SuperOffice.CRM.Services.PersonEntity,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IPersonAgent
  nameWithType: IPersonAgent
  fullName: SuperOffice.CRM.Services.IPersonAgent
  type: Interface
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nInterface for the Person Agent\nPerson data services.\n"
  example:
  - "\n<pre><code>  using SuperOffice;\n  using SuperOffice.CRM.Services;\n\n  using (SoSession mySession = SoSession.Authenticate(&quot;user&quot;, &quot;pass&quot;))\n  {\n     using (PersonAgent agent = new PersonAgent())\n     {\n        // call methods on agent here...\n     }\n  }</code></pre>\n"
  syntax:
    content: >-
      [Agent("Person Agent", "Interface for the Person Agent. Person data services.")]

      public interface IPersonAgent : IAgent
    content.vb: >-
      <Agent("Person Agent", "Interface for the Person Agent. Person data services.")>

      Public Interface IPersonAgent
          Inherits IAgent
  attributes:
  - type: SuperOffice.CRM.Services.Reflection.AgentAttribute
    ctor: SuperOffice.CRM.Services.Reflection.AgentAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Person Agent
    - type: System.String
      value: Interface for the Person Agent. Person data services.
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultConsentPersonAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.CreateDefaultConsentPersonAsync(System.Threading.CancellationToken)
  id: CreateDefaultConsentPersonAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultConsentPersonAsync(CancellationToken)
  nameWithType: IPersonAgent.CreateDefaultConsentPersonAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultConsentPersonAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nLoading default values into a new ConsentPerson.\nNetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: Task<ConsentPerson> CreateDefaultConsentPersonAsync(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.ConsentPerson}
      description: New ConsentPerson with default values
    content.vb: Function CreateDefaultConsentPersonAsync(cancellationToken As CancellationToken = Nothing) As Task(Of ConsentPerson)
  overload: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultConsentPersonAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.SaveConsentPersonAsync(SuperOffice.CRM.Services.ConsentPerson,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.SaveConsentPersonAsync(SuperOffice.CRM.Services.ConsentPerson,System.Threading.CancellationToken)
  id: SaveConsentPersonAsync(SuperOffice.CRM.Services.ConsentPerson,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: SaveConsentPersonAsync(ConsentPerson, CancellationToken)
  nameWithType: IPersonAgent.SaveConsentPersonAsync(ConsentPerson, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.SaveConsentPersonAsync(SuperOffice.CRM.Services.ConsentPerson, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nUpdates the existing ConsentPerson or creates a new ConsentPerson if the id parameter is empty\n"
  syntax:
    content: Task<ConsentPerson> SaveConsentPersonAsync(ConsentPerson consentPerson, CancellationToken cancellationToken = null)
    parameters:
    - id: consentPerson
      type: SuperOffice.CRM.Services.ConsentPerson
      description: The ConsentPerson that is saved.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.ConsentPerson}
      description: New or updated ConsentPerson
    content.vb: Function SaveConsentPersonAsync(consentPerson As ConsentPerson, cancellationToken As CancellationToken = Nothing) As Task(Of ConsentPerson)
  overload: SuperOffice.CRM.Services.IPersonAgent.SaveConsentPersonAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.DeleteConsentPersonAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.DeleteConsentPersonAsync(System.Int32,System.Threading.CancellationToken)
  id: DeleteConsentPersonAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: DeleteConsentPersonAsync(Int32, CancellationToken)
  nameWithType: IPersonAgent.DeleteConsentPersonAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.DeleteConsentPersonAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nDeletes the ConsentPerson\n"
  syntax:
    content: Task DeleteConsentPersonAsync(int consentPersonId, CancellationToken cancellationToken = null)
    parameters:
    - id: consentPersonId
      type: System.Int32
      description: The identity of the ConsentPerson
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function DeleteConsentPersonAsync(consentPersonId As Integer, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IPersonAgent.DeleteConsentPersonAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultPersonEntityAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.CreateDefaultPersonEntityAsync(System.Threading.CancellationToken)
  id: CreateDefaultPersonEntityAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultPersonEntityAsync(CancellationToken)
  nameWithType: IPersonAgent.CreateDefaultPersonEntityAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultPersonEntityAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nLoading default values into a new PersonEntity.\nNetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: Task<PersonEntity> CreateDefaultPersonEntityAsync(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.PersonEntity}
      description: New PersonEntity with default values
    content.vb: Function CreateDefaultPersonEntityAsync(cancellationToken As CancellationToken = Nothing) As Task(Of PersonEntity)
  overload: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultPersonEntityAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.SavePersonEntityAsync(SuperOffice.CRM.Services.PersonEntity,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.SavePersonEntityAsync(SuperOffice.CRM.Services.PersonEntity,System.Threading.CancellationToken)
  id: SavePersonEntityAsync(SuperOffice.CRM.Services.PersonEntity,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: SavePersonEntityAsync(PersonEntity, CancellationToken)
  nameWithType: IPersonAgent.SavePersonEntityAsync(PersonEntity, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.SavePersonEntityAsync(SuperOffice.CRM.Services.PersonEntity, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nUpdates the existing PersonEntity or creates a new PersonEntity if the id parameter is empty\n"
  syntax:
    content: Task<PersonEntity> SavePersonEntityAsync(PersonEntity personEntity, CancellationToken cancellationToken = null)
    parameters:
    - id: personEntity
      type: SuperOffice.CRM.Services.PersonEntity
      description: The PersonEntity that is saved.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.PersonEntity}
      description: New or updated PersonEntity
    content.vb: Function SavePersonEntityAsync(personEntity As PersonEntity, cancellationToken As CancellationToken = Nothing) As Task(Of PersonEntity)
  overload: SuperOffice.CRM.Services.IPersonAgent.SavePersonEntityAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.DeletePersonEntityAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.DeletePersonEntityAsync(System.Int32,System.Threading.CancellationToken)
  id: DeletePersonEntityAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: DeletePersonEntityAsync(Int32, CancellationToken)
  nameWithType: IPersonAgent.DeletePersonEntityAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.DeletePersonEntityAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nDeletes the PersonEntity\n"
  syntax:
    content: Task DeletePersonEntityAsync(int personEntityId, CancellationToken cancellationToken = null)
    parameters:
    - id: personEntityId
      type: System.Int32
      description: The identity of the PersonEntity
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function DeletePersonEntityAsync(personEntityId As Integer, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IPersonAgent.DeletePersonEntityAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultPersonImageAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.CreateDefaultPersonImageAsync(System.Threading.CancellationToken)
  id: CreateDefaultPersonImageAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultPersonImageAsync(CancellationToken)
  nameWithType: IPersonAgent.CreateDefaultPersonImageAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultPersonImageAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nLoading default values into a new PersonImage.\nNetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: Task<PersonImage> CreateDefaultPersonImageAsync(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.PersonImage}
      description: New PersonImage with default values
    content.vb: Function CreateDefaultPersonImageAsync(cancellationToken As CancellationToken = Nothing) As Task(Of PersonImage)
  overload: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultPersonImageAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.GetConsentPersonAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetConsentPersonAsync(System.Int32,System.Threading.CancellationToken)
  id: GetConsentPersonAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: GetConsentPersonAsync(Int32, CancellationToken)
  nameWithType: IPersonAgent.GetConsentPersonAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetConsentPersonAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets a ConsentPerson object.                        \n"
  syntax:
    content: Task<ConsentPerson> GetConsentPersonAsync(int consentPersonId, CancellationToken cancellationToken = null)
    parameters:
    - id: consentPersonId
      type: System.Int32
      description: The identifier of the ConsentPerson object
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.ConsentPerson}
      description: ConsentPerson
    content.vb: Function GetConsentPersonAsync(consentPersonId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of ConsentPerson)
  overload: SuperOffice.CRM.Services.IPersonAgent.GetConsentPersonAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.GetPersonAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetPersonAsync(System.Int32,System.Threading.CancellationToken)
  id: GetPersonAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: GetPersonAsync(Int32, CancellationToken)
  nameWithType: IPersonAgent.GetPersonAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetPersonAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets a Person object.                        \n"
  syntax:
    content: Task<Person> GetPersonAsync(int personId, CancellationToken cancellationToken = null)
    parameters:
    - id: personId
      type: System.Int32
      description: The identifier of the Person object
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Person}
      description: Person
    content.vb: Function GetPersonAsync(personId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Person)
  overload: SuperOffice.CRM.Services.IPersonAgent.GetPersonAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.TryAddPersonsToEmailFlowAsync(System.Int32,System.Int32[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.TryAddPersonsToEmailFlowAsync(System.Int32,System.Int32[],System.Threading.CancellationToken)
  id: TryAddPersonsToEmailFlowAsync(System.Int32,System.Int32[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: TryAddPersonsToEmailFlowAsync(Int32, Int32[], CancellationToken)
  nameWithType: IPersonAgent.TryAddPersonsToEmailFlowAsync(Int32, Int32[], CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.TryAddPersonsToEmailFlowAsync(System.Int32, System.Int32[], System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nTry to add a participant to the EmailFlow, Same function available in WorkflowAgent\n"
  syntax:
    content: Task<bool[]> TryAddPersonsToEmailFlowAsync(int emailFlowId, int[] personIds, CancellationToken cancellationToken = null)
    parameters:
    - id: emailFlowId
      type: System.Int32
      description: Primary key of EmailFlow
    - id: personIds
      type: System.Int32[]
      description: Array of Person Ids
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean[]}
      description: True if the corresponding participant was successfully added, false if it could not be added because of filter criteria or other reason
    content.vb: Function TryAddPersonsToEmailFlowAsync(emailFlowId As Integer, personIds As Integer(), cancellationToken As CancellationToken = Nothing) As Task(Of Boolean())
  overload: SuperOffice.CRM.Services.IPersonAgent.TryAddPersonsToEmailFlowAsync*
  nameWithType.vb: IPersonAgent.TryAddPersonsToEmailFlowAsync(Int32, Int32(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.TryAddPersonsToEmailFlowAsync(System.Int32, System.Int32(), System.Threading.CancellationToken)
  name.vb: TryAddPersonsToEmailFlowAsync(Int32, Int32(), CancellationToken)
- uid: SuperOffice.CRM.Services.IPersonAgent.GetPersonEntityAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetPersonEntityAsync(System.Int32,System.Threading.CancellationToken)
  id: GetPersonEntityAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: GetPersonEntityAsync(Int32, CancellationToken)
  nameWithType: IPersonAgent.GetPersonEntityAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetPersonEntityAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets a PersonEntity object.                        \n"
  syntax:
    content: Task<PersonEntity> GetPersonEntityAsync(int personEntityId, CancellationToken cancellationToken = null)
    parameters:
    - id: personEntityId
      type: System.Int32
      description: The identifier of the PersonEntity object
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.PersonEntity}
      description: PersonEntity
    content.vb: Function GetPersonEntityAsync(personEntityId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of PersonEntity)
  overload: SuperOffice.CRM.Services.IPersonAgent.GetPersonEntityAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.UndeleteAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.UndeleteAsync(System.Int32,System.Threading.CancellationToken)
  id: UndeleteAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: UndeleteAsync(Int32, CancellationToken)
  nameWithType: IPersonAgent.UndeleteAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.UndeleteAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nThis entity supports Soft Delete. Call this method to Undelete a previously soft-deleted record\n"
  syntax:
    content: Task UndeleteAsync(int id, CancellationToken cancellationToken = null)
    parameters:
    - id: id
      type: System.Int32
      description: The primary key of the entity to undelete
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Function UndeleteAsync(id As Integer, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IPersonAgent.UndeleteAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.GetMyPersonAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetMyPersonAsync(System.Threading.CancellationToken)
  id: GetMyPersonAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: GetMyPersonAsync(CancellationToken)
  nameWithType: IPersonAgent.GetMyPersonAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetMyPersonAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets the person info belonging to the currently logged on user.\n"
  syntax:
    content: Task<PersonEntity> GetMyPersonAsync(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.PersonEntity}
      description: The PersonEntity
    content.vb: Function GetMyPersonAsync(cancellationToken As CancellationToken = Nothing) As Task(Of PersonEntity)
  overload: SuperOffice.CRM.Services.IPersonAgent.GetMyPersonAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.GetSalesRepAsync(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetSalesRepAsync(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: GetSalesRepAsync(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: GetSalesRepAsync(String, String, String, String, String, CancellationToken)
  nameWithType: IPersonAgent.GetSalesRepAsync(String, String, String, String, String, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetSalesRepAsync(System.String, System.String, System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nReturns the sales representative for an external user. If this method is accessed with anonymous authentication the external user is recognized by contact and name, or by email, or phone number. If the external user is recognized as an CRM5 user (internal or external) the input fields can be left blank.\n"
  syntax:
    content: Task<PersonEntity> GetSalesRepAsync(string contactName, string personFirstname, string personLastname, string emailAddress, string phoneNumber, CancellationToken cancellationToken = null)
    parameters:
    - id: contactName
      type: System.String
      description: The company name of the person requesting his sales representative. May be empty if email or phone is provided.
    - id: personFirstname
      type: System.String
      description: The firstname of the person requesting his sales representative. May be empty if email or phone is provided.
    - id: personLastname
      type: System.String
      description: The lastname of the person requesting his sales representative. May be empty if email or phone is provided.
    - id: emailAddress
      type: System.String
      description: The email address of the person requesting his sales representative. May be empty if phone, or contact and person name is provided.
    - id: phoneNumber
      type: System.String
      description: The phone number of the person requesting his sales representative. May be empty if email, or contact and person name is provided.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.PersonEntity}
      description: The PersonEntity of the sales rep.
    content.vb: Function GetSalesRepAsync(contactName As String, personFirstname As String, personLastname As String, emailAddress As String, phoneNumber As String, cancellationToken As CancellationToken = Nothing) As Task(Of PersonEntity)
  overload: SuperOffice.CRM.Services.IPersonAgent.GetSalesRepAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.GetPhonesAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetPhonesAsync(System.Int32,System.Threading.CancellationToken)
  id: GetPhonesAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: GetPhonesAsync(Int32, CancellationToken)
  nameWithType: IPersonAgent.GetPhonesAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetPhonesAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nReturning all phones that belong to a person, ordered by the phone type.\n"
  syntax:
    content: Task<EntityElement[]> GetPhonesAsync(int personId, CancellationToken cancellationToken = null)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.EntityElement[]}
      description: An array of Phones
    content.vb: Function GetPhonesAsync(personId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of EntityElement())
  overload: SuperOffice.CRM.Services.IPersonAgent.GetPhonesAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.ChangeCountryAsync(SuperOffice.CRM.Services.PersonEntity,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.ChangeCountryAsync(SuperOffice.CRM.Services.PersonEntity,System.Int32,System.Threading.CancellationToken)
  id: ChangeCountryAsync(SuperOffice.CRM.Services.PersonEntity,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: ChangeCountryAsync(PersonEntity, Int32, CancellationToken)
  nameWithType: IPersonAgent.ChangeCountryAsync(PersonEntity, Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.ChangeCountryAsync(SuperOffice.CRM.Services.PersonEntity, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nChange country regenerates the default values and localized information such as phone number and address format for this entity.\n"
  syntax:
    content: Task<PersonEntity> ChangeCountryAsync(PersonEntity personEntity, int toCountryId, CancellationToken cancellationToken = null)
    parameters:
    - id: personEntity
      type: SuperOffice.CRM.Services.PersonEntity
      description: The PersonEntity to change country on
    - id: toCountryId
      type: System.Int32
      description: The country to switch to
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.PersonEntity}
      description: The PersonEntity
    content.vb: Function ChangeCountryAsync(personEntity As PersonEntity, toCountryId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of PersonEntity)
  overload: SuperOffice.CRM.Services.IPersonAgent.ChangeCountryAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.GetAddressAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetAddressAsync(System.Int32,System.Threading.CancellationToken)
  id: GetAddressAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: GetAddressAsync(Int32, CancellationToken)
  nameWithType: IPersonAgent.GetAddressAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetAddressAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets the person&apos;s localized address.\n"
  syntax:
    content: Task<Address> GetAddressAsync(int personId, CancellationToken cancellationToken = null)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Address}
      description: The address as LocalizedField[][].
    content.vb: Function GetAddressAsync(personId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Address)
  overload: SuperOffice.CRM.Services.IPersonAgent.GetAddressAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.GetAddressByCountryAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetAddressByCountryAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  id: GetAddressByCountryAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: GetAddressByCountryAsync(Int32, Int32, CancellationToken)
  nameWithType: IPersonAgent.GetAddressByCountryAsync(Int32, Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetAddressByCountryAsync(System.Int32, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets the person&apos;s localized address.\n"
  syntax:
    content: Task<Address> GetAddressByCountryAsync(int personId, int countryId, CancellationToken cancellationToken = null)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id
    - id: countryId
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Address}
      description: The address as LocalizedField[][].
    content.vb: Function GetAddressByCountryAsync(personId As Integer, countryId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Address)
  overload: SuperOffice.CRM.Services.IPersonAgent.GetAddressByCountryAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.GetPersonImageAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetPersonImageAsync(System.Int32,System.Threading.CancellationToken)
  id: GetPersonImageAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: GetPersonImageAsync(Int32, CancellationToken)
  nameWithType: IPersonAgent.GetPersonImageAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetPersonImageAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nReturns the person image that is displayed in the CRM application.\n"
  syntax:
    content: Task<Image> GetPersonImageAsync(int personId, CancellationToken cancellationToken = null)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id of the person the image belongs to.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Drawing.Image}
      description: The image as a System.Drawing.Image. (If the the image is returned over webservices, the stream is returned as a Base64 encoded string.)
    content.vb: Function GetPersonImageAsync(personId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Image)
  overload: SuperOffice.CRM.Services.IPersonAgent.GetPersonImageAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.SetPersonImageAsync(System.Int32,System.Drawing.Image,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.SetPersonImageAsync(System.Int32,System.Drawing.Image,System.Threading.CancellationToken)
  id: SetPersonImageAsync(System.Int32,System.Drawing.Image,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: SetPersonImageAsync(Int32, Image, CancellationToken)
  nameWithType: IPersonAgent.SetPersonImageAsync(Int32, Image, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.SetPersonImageAsync(System.Int32, System.Drawing.Image, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nStores the person image that is displayed in the CRM application.\n"
  syntax:
    content: Task SetPersonImageAsync(int personId, Image image, CancellationToken cancellationToken = null)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id of the person the image belongs to.
    - id: image
      type: System.Drawing.Image
      description: The image that is stored on the person (System.Drawing.Image)
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function SetPersonImageAsync(personId As Integer, image As Image, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IPersonAgent.SetPersonImageAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultByContactIdAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.CreateDefaultByContactIdAsync(System.Int32,System.Threading.CancellationToken)
  id: CreateDefaultByContactIdAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultByContactIdAsync(Int32, CancellationToken)
  nameWithType: IPersonAgent.CreateDefaultByContactIdAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultByContactIdAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCreates a PersonEntity with default values based on the contactId.\n"
  syntax:
    content: Task<PersonEntity> CreateDefaultByContactIdAsync(int contactId, CancellationToken cancellationToken = null)
    parameters:
    - id: contactId
      type: System.Int32
      description: Contact id of the person
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.PersonEntity}
    content.vb: Function CreateDefaultByContactIdAsync(contactId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of PersonEntity)
  overload: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultByContactIdAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.MoveAsync(System.Int32,System.Int32,System.DateTime,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.MoveAsync(System.Int32,System.Int32,System.DateTime,System.Threading.CancellationToken)
  id: MoveAsync(System.Int32,System.Int32,System.DateTime,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: MoveAsync(Int32, Int32, DateTime, CancellationToken)
  nameWithType: IPersonAgent.MoveAsync(Int32, Int32, DateTime, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.MoveAsync(System.Int32, System.Int32, System.DateTime, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nMove a person to a specified contact. You must specify the date after which activities will be moved along with the person.\n"
  syntax:
    content: Task MoveAsync(int personId, int destinationContactId, DateTime moveAfterDate, CancellationToken cancellationToken = null)
    parameters:
    - id: personId
      type: System.Int32
      description: The identifier for the person
    - id: destinationContactId
      type: System.Int32
      description: The identifier for the contact which the person will be moved to
    - id: moveAfterDate
      type: System.DateTime
      description: Move activites after this date. Activities before this date are left alone.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function MoveAsync(personId As Integer, destinationContactId As Integer, moveAfterDate As DateTime, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IPersonAgent.MoveAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.MergeAsync(System.Int32,System.Int32,System.DateTime,System.Boolean,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.MergeAsync(System.Int32,System.Int32,System.DateTime,System.Boolean,System.Boolean,System.Threading.CancellationToken)
  id: MergeAsync(System.Int32,System.Int32,System.DateTime,System.Boolean,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: MergeAsync(Int32, Int32, DateTime, Boolean, Boolean, CancellationToken)
  nameWithType: IPersonAgent.MergeAsync(Int32, Int32, DateTime, Boolean, Boolean, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.MergeAsync(System.Int32, System.Int32, System.DateTime, System.Boolean, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nMerge two persons. The destination person will remain. You must specify the date after which activities will be moved along with the person.\n"
  syntax:
    content: Task MergeAsync(int sourcePersonId, int destinationPersonId, DateTime moveAfterDate, bool deleteSource, bool replaceEmptyFieldsOnDestination, CancellationToken cancellationToken = null)
    parameters:
    - id: sourcePersonId
      type: System.Int32
      description: The identifier for the person which will be merged into the destination person. The source person is deleted/marked retired after the merge.
    - id: destinationPersonId
      type: System.Int32
      description: The identifier for the person which will remain after the merge. The target person is updated.
    - id: moveAfterDate
      type: System.DateTime
      description: Merge activites after this date. Activities before this date are left alone.
    - id: deleteSource
      type: System.Boolean
      description: If true, the source person will be deleted after the merge. If false, it will have its retired flag set
    - id: replaceEmptyFieldsOnDestination
      type: System.Boolean
      description: If true, empty fields on destination will be replaced by values from source.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function MergeAsync(sourcePersonId As Integer, destinationPersonId As Integer, moveAfterDate As DateTime, deleteSource As Boolean, replaceEmptyFieldsOnDestination As Boolean, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IPersonAgent.MergeAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultFromCredentialAsync(System.Int32,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.CreateDefaultFromCredentialAsync(System.Int32,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: CreateDefaultFromCredentialAsync(System.Int32,System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultFromCredentialAsync(Int32, String, String, String, CancellationToken)
  nameWithType: IPersonAgent.CreateDefaultFromCredentialAsync(Int32, String, String, String, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultFromCredentialAsync(System.Int32, System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCreates a PersonEntity with default values based on the contactId and credentials.\n"
  syntax:
    content: Task<PersonEntity> CreateDefaultFromCredentialAsync(int contactId, string credentialType, string credentialValue, string credentialDisplayValue, CancellationToken cancellationToken = null)
    parameters:
    - id: contactId
      type: System.Int32
      description: Contact id of the person
    - id: credentialType
      type: System.String
      description: Type of credentials, corresponding to name of plugin and type in the credentials table.
    - id: credentialValue
      type: System.String
      description: This is the actuall value of the credentials.  This will typically be the password or teh users SID in active directory
    - id: credentialDisplayValue
      type: System.String
      description: The value displayed to the user. this will typically be the users login name in active directory.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.PersonEntity}
    content.vb: Function CreateDefaultFromCredentialAsync(contactId As Integer, credentialType As String, credentialValue As String, credentialDisplayValue As String, cancellationToken As CancellationToken = Nothing) As Task(Of PersonEntity)
  overload: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultFromCredentialAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.IsNumberValidAsync(System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.IsNumberValidAsync(System.Int32,System.String,System.Threading.CancellationToken)
  id: IsNumberValidAsync(System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: IsNumberValidAsync(Int32, String, CancellationToken)
  nameWithType: IPersonAgent.IsNumberValidAsync(Int32, String, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.IsNumberValidAsync(System.Int32, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nChecks if the number is unique or required.  The setting is configured from admin under system options.\n"
  syntax:
    content: Task<bool> IsNumberValidAsync(int contactId, string number, CancellationToken cancellationToken = null)
    parameters:
    - id: contactId
      type: System.Int32
    - id: number
      type: System.String
      description: Number to check.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if number is ok (passes uniqueness/required checks)
    content.vb: Function IsNumberValidAsync(contactId As Integer, number As String, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.Services.IPersonAgent.IsNumberValidAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.SetConsentAsync(System.Int32,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.SetConsentAsync(System.Int32,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: SetConsentAsync(System.Int32,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: SetConsentAsync(Int32, String, String, String, String, CancellationToken)
  nameWithType: IPersonAgent.SetConsentAsync(Int32, String, String, String, String, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.SetConsentAsync(System.Int32, System.String, System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSet a specified type of consent on the person.\n"
  syntax:
    content: Task SetConsentAsync(int personId, string purpose, string source, string legalBase, string comment, CancellationToken cancellationToken = null)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id
    - id: purpose
      type: System.String
      description: The Key of the purpose this affects. e.g. &apos;STORE&apos; or &apos;EMARKETING&apos;.
    - id: source
      type: System.String
      description: The Key of the source of this consent. e.g. &apos;USER&apos;, &apos;WEBFORM&apos; or &apos;API&apos;.
    - id: legalBase
      type: System.String
      description: The Key of the legal base for this consent. e.g. &apos;61A&apos;, &apos;61B&apos;, &apos;61F&apos;
    - id: comment
      type: System.String
      description: A comment regarding this consent. May be null or empty.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function SetConsentAsync(personId As Integer, purpose As String, source As String, legalBase As String, comment As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IPersonAgent.SetConsentAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.RemoveConsentAsync(System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.RemoveConsentAsync(System.Int32,System.String,System.Threading.CancellationToken)
  id: RemoveConsentAsync(System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: RemoveConsentAsync(Int32, String, CancellationToken)
  nameWithType: IPersonAgent.RemoveConsentAsync(Int32, String, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.RemoveConsentAsync(System.Int32, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nTurn off consent for a specified person and purpose.\n"
  syntax:
    content: Task RemoveConsentAsync(int personId, string purpose, CancellationToken cancellationToken = null)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id
    - id: purpose
      type: System.String
      description: The key of the purpose to remove. (e.g. &apos;STORE&apos; or &apos;EMARKETING&apos;)
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function RemoveConsentAsync(personId As Integer, purpose As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IPersonAgent.RemoveConsentAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.HasConsentAsync(System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.HasConsentAsync(System.Int32,System.String,System.Threading.CancellationToken)
  id: HasConsentAsync(System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: HasConsentAsync(Int32, String, CancellationToken)
  nameWithType: IPersonAgent.HasConsentAsync(Int32, String, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.HasConsentAsync(System.Int32, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCheck if consent has been given by a specified person, for a specific purpose. Withdraw consents return FALSE.\n"
  syntax:
    content: Task<bool> HasConsentAsync(int personId, string purpose, CancellationToken cancellationToken = null)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id
    - id: purpose
      type: System.String
      description: The key of the purpose to check. (e.g. &apos;STORE&apos; or &apos;EMARKETING&apos;)
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the person has consented to the given purpose.
    content.vb: Function HasConsentAsync(personId As Integer, purpose As String, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.Services.IPersonAgent.HasConsentAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.GetConsentInfosAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetConsentInfosAsync(System.Int32,System.Threading.CancellationToken)
  id: GetConsentInfosAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: GetConsentInfosAsync(Int32, CancellationToken)
  nameWithType: IPersonAgent.GetConsentInfosAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetConsentInfosAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet all consent information for a given person. May include withdrawn consents (check \n"
  syntax:
    content: Task<ConsentInfo[]> GetConsentInfosAsync(int personId, CancellationToken cancellationToken = null)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id to get consents for
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.ConsentInfo[]}
      description: List of consents recorded on this person
    content.vb: Function GetConsentInfosAsync(personId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of ConsentInfo())
  overload: SuperOffice.CRM.Services.IPersonAgent.GetConsentInfosAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.SendConsentConfirmationEmailAsync(System.Int32,System.String,System.Int32,System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.SendConsentConfirmationEmailAsync(System.Int32,System.String,System.Int32,System.Int32,System.String,System.Threading.CancellationToken)
  id: SendConsentConfirmationEmailAsync(System.Int32,System.String,System.Int32,System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: SendConsentConfirmationEmailAsync(Int32, String, Int32, Int32, String, CancellationToken)
  nameWithType: IPersonAgent.SendConsentConfirmationEmailAsync(Int32, String, Int32, Int32, String, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.SendConsentConfirmationEmailAsync(System.Int32, System.String, System.Int32, System.Int32, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSend confirmation email to the provided person, email address (id), using the document template\n"
  syntax:
    content: Task SendConsentConfirmationEmailAsync(int personId, string emailAddress, int emailTemplateId, int cultureLcidId, string subject, CancellationToken cancellationToken = null)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id
    - id: emailAddress
      type: System.String
      description: The email address to send to.
    - id: emailTemplateId
      type: System.Int32
      description: The id of the email template (doctmpl_id)
    - id: cultureLcidId
      type: System.Int32
      description: The id of the culture (LCID)
    - id: subject
      type: System.String
      description: Optional email subject
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function SendConsentConfirmationEmailAsync(personId As Integer, emailAddress As String, emailTemplateId As Integer, cultureLcidId As Integer, subject As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IPersonAgent.SendConsentConfirmationEmailAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.ResolvePersonFromInfoAsync(System.Int32,System.String,System.String[],System.String[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.ResolvePersonFromInfoAsync(System.Int32,System.String,System.String[],System.String[],System.Threading.CancellationToken)
  id: ResolvePersonFromInfoAsync(System.Int32,System.String,System.String[],System.String[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: ResolvePersonFromInfoAsync(Int32, String, String[], String[], CancellationToken)
  nameWithType: IPersonAgent.ResolvePersonFromInfoAsync(Int32, String, String[], String[], CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.ResolvePersonFromInfoAsync(System.Int32, System.String, System.String[], System.String[], System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet a person from the provided information. If the person does not exist, it will be created on demand.\n"
  syntax:
    content: Task<ResolvedPerson> ResolvePersonFromInfoAsync(int contactId, string personName, string[] phoneNumbers, string[] emails, CancellationToken cancellationToken = null)
    parameters:
    - id: contactId
      type: System.Int32
      description: The contact Id of the contact which the person belongs to. Cannot be 0.
    - id: personName
      type: System.String
      description: The full name of the person to be resolved. Optional.
    - id: phoneNumbers
      type: System.String[]
      description: Phone numbers registered on the person. Optional.
    - id: emails
      type: System.String[]
      description: Email-addresses registered on the person. Optional.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.ResolvedPerson}
      description: The results of the resolve-operation.
    content.vb: Function ResolvePersonFromInfoAsync(contactId As Integer, personName As String, phoneNumbers As String(), emails As String(), cancellationToken As CancellationToken = Nothing) As Task(Of ResolvedPerson)
  overload: SuperOffice.CRM.Services.IPersonAgent.ResolvePersonFromInfoAsync*
  nameWithType.vb: IPersonAgent.ResolvePersonFromInfoAsync(Int32, String, String(), String(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.ResolvePersonFromInfoAsync(System.Int32, System.String, System.String(), System.String(), System.Threading.CancellationToken)
  name.vb: ResolvePersonFromInfoAsync(Int32, String, String(), String(), CancellationToken)
- uid: SuperOffice.CRM.Services.IPersonAgent.AddEmailAddressToPersonAsync(System.Int32,System.String,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.AddEmailAddressToPersonAsync(System.Int32,System.String,System.Boolean,System.Threading.CancellationToken)
  id: AddEmailAddressToPersonAsync(System.Int32,System.String,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: AddEmailAddressToPersonAsync(Int32, String, Boolean, CancellationToken)
  nameWithType: IPersonAgent.AddEmailAddressToPersonAsync(Int32, String, Boolean, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.AddEmailAddressToPersonAsync(System.Int32, System.String, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSets the primary email address on person, possibly re-ranking email addresses accordingly.\n"
  syntax:
    content: Task AddEmailAddressToPersonAsync(int personId, string emailAddress, bool setAsPrimaryEmail, CancellationToken cancellationToken = null)
    parameters:
    - id: personId
      type: System.Int32
      description: Person id of the person
    - id: emailAddress
      type: System.String
      description: The email address to set as primary email address
    - id: setAsPrimaryEmail
      type: System.Boolean
      description: True if the address shall be primary email address (have rank == 1)
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function AddEmailAddressToPersonAsync(personId As Integer, emailAddress As String, setAsPrimaryEmail As Boolean, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IPersonAgent.AddEmailAddressToPersonAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.CreateTemporaryKeyAsync(SuperOffice.Data.TemporaryKeyDomain,System.Int32,System.Int32,System.DateTime,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.CreateTemporaryKeyAsync(SuperOffice.Data.TemporaryKeyDomain,System.Int32,System.Int32,System.DateTime,System.Threading.CancellationToken)
  id: CreateTemporaryKeyAsync(SuperOffice.Data.TemporaryKeyDomain,System.Int32,System.Int32,System.DateTime,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: CreateTemporaryKeyAsync(TemporaryKeyDomain, Int32, Int32, DateTime, CancellationToken)
  nameWithType: IPersonAgent.CreateTemporaryKeyAsync(TemporaryKeyDomain, Int32, Int32, DateTime, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.CreateTemporaryKeyAsync(SuperOffice.Data.TemporaryKeyDomain, System.Int32, System.Int32, System.DateTime, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCreate a temporary key in the database from the given parameters and return the key string. Used for temporary keys for accessing customer centric functionality, such as UpdateSubscriptions.\n"
  syntax:
    content: Task<string> CreateTemporaryKeyAsync(TemporaryKeyDomain domain, int targetId, int personId, DateTime expires, CancellationToken cancellationToken = null)
    parameters:
    - id: domain
      type: SuperOffice.Data.TemporaryKeyDomain
      description: The domain this key is for
    - id: targetId
      type: System.Int32
      description: The primary key of the entity this is for. Depends on domain.
    - id: personId
      type: System.Int32
      description: The person this key is for. May be null.
    - id: expires
      type: System.DateTime
      description: When the key will expire (servers local time)
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The key as base64, ready to be used e.g. in a URL
    content.vb: Function CreateTemporaryKeyAsync(domain As TemporaryKeyDomain, targetId As Integer, personId As Integer, expires As DateTime, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Services.IPersonAgent.CreateTemporaryKeyAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.CreateTemporaryKeyWithPayloadAsync(SuperOffice.Data.TemporaryKeyDomain,System.Int32,System.Int32,System.DateTime,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.CreateTemporaryKeyWithPayloadAsync(SuperOffice.Data.TemporaryKeyDomain,System.Int32,System.Int32,System.DateTime,System.String,System.Threading.CancellationToken)
  id: CreateTemporaryKeyWithPayloadAsync(SuperOffice.Data.TemporaryKeyDomain,System.Int32,System.Int32,System.DateTime,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: CreateTemporaryKeyWithPayloadAsync(TemporaryKeyDomain, Int32, Int32, DateTime, String, CancellationToken)
  nameWithType: IPersonAgent.CreateTemporaryKeyWithPayloadAsync(TemporaryKeyDomain, Int32, Int32, DateTime, String, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.CreateTemporaryKeyWithPayloadAsync(SuperOffice.Data.TemporaryKeyDomain, System.Int32, System.Int32, System.DateTime, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCreate a temporary key in the database from the given parameters and return the key string. Used for temporary keys for accessing customer centric functionality, such as UpdateSubscriptions.\n"
  syntax:
    content: Task<string> CreateTemporaryKeyWithPayloadAsync(TemporaryKeyDomain domain, int targetId, int personId, DateTime expires, string payload, CancellationToken cancellationToken = null)
    parameters:
    - id: domain
      type: SuperOffice.Data.TemporaryKeyDomain
      description: The domain this key is for
    - id: targetId
      type: System.Int32
      description: The primary key of the entity this is for. Depends on domain.
    - id: personId
      type: System.Int32
      description: The person this key is for. May be null.
    - id: expires
      type: System.DateTime
      description: When the key will expire (servers local time)
    - id: payload
      type: System.String
      description: The payload for the temporary key
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The key as base64, ready to be used e.g. in a URL
    content.vb: Function CreateTemporaryKeyWithPayloadAsync(domain As TemporaryKeyDomain, targetId As Integer, personId As Integer, expires As DateTime, payload As String, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Services.IPersonAgent.CreateTemporaryKeyWithPayloadAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.CheckTemporaryKeyAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.CheckTemporaryKeyAsync(System.String,System.Threading.CancellationToken)
  id: CheckTemporaryKeyAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: CheckTemporaryKeyAsync(String, CancellationToken)
  nameWithType: IPersonAgent.CheckTemporaryKeyAsync(String, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.CheckTemporaryKeyAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCheck a temporary key for validity, and in case it is valid, return its domain, targetId and personId\n"
  syntax:
    content: Task<TemporaryKeyInfo> CheckTemporaryKeyAsync(string temporaryKey, CancellationToken cancellationToken = null)
    parameters:
    - id: temporaryKey
      type: System.String
      description: The base64 encoded key value, as returned by CreateTemporaryKey
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.TemporaryKeyInfo}
      description: The info about the temporary key. Domain will be Unknown if key is not valid.
    content.vb: Function CheckTemporaryKeyAsync(temporaryKey As String, cancellationToken As CancellationToken = Nothing) As Task(Of TemporaryKeyInfo)
  overload: SuperOffice.CRM.Services.IPersonAgent.CheckTemporaryKeyAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.DeleteTemporaryKeysOfDomainAsync(SuperOffice.Data.TemporaryKeyDomain,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.DeleteTemporaryKeysOfDomainAsync(SuperOffice.Data.TemporaryKeyDomain,System.Int32,System.Threading.CancellationToken)
  id: DeleteTemporaryKeysOfDomainAsync(SuperOffice.Data.TemporaryKeyDomain,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: DeleteTemporaryKeysOfDomainAsync(TemporaryKeyDomain, Int32, CancellationToken)
  nameWithType: IPersonAgent.DeleteTemporaryKeysOfDomainAsync(TemporaryKeyDomain, Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.DeleteTemporaryKeysOfDomainAsync(SuperOffice.Data.TemporaryKeyDomain, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nDelete all temporary keys for a given domain and person\n"
  syntax:
    content: Task DeleteTemporaryKeysOfDomainAsync(TemporaryKeyDomain domain, int personId, CancellationToken cancellationToken = null)
    parameters:
    - id: domain
      type: SuperOffice.Data.TemporaryKeyDomain
      description: The domain type to delete
    - id: personId
      type: System.Int32
      description: The person for which to delete the keys
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function DeleteTemporaryKeysOfDomainAsync(domain As TemporaryKeyDomain, personId As Integer, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IPersonAgent.DeleteTemporaryKeysOfDomainAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.DeleteExpiredAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.DeleteExpiredAsync(System.Threading.CancellationToken)
  id: DeleteExpiredAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: DeleteExpiredAsync(CancellationToken)
  nameWithType: IPersonAgent.DeleteExpiredAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.DeleteExpiredAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nTrigger deletion of persons that has been (soft) deleted and have timed out the expiry period (the SoftDeleteRetention preference).\n"
  syntax:
    content: Task DeleteExpiredAsync(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function DeleteExpiredAsync(cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IPersonAgent.DeleteExpiredAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.GetPersonSummaryAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetPersonSummaryAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  id: GetPersonSummaryAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: GetPersonSummaryAsync(Int32, Int32, CancellationToken)
  nameWithType: IPersonAgent.GetPersonSummaryAsync(Int32, Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetPersonSummaryAsync(System.Int32, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet summary of person and recent activity.\n"
  syntax:
    content: Task<PersonSummary> GetPersonSummaryAsync(int personId, int limit, CancellationToken cancellationToken = null)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id to summarize.
    - id: limit
      type: System.Int32
      description: Max number of items to include in summary lists.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.PersonSummary}
      description: Summary of person, with recent requests, sales, follow-ups, chats.
    content.vb: Function GetPersonSummaryAsync(personId As Integer, limit As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of PersonSummary)
  overload: SuperOffice.CRM.Services.IPersonAgent.GetPersonSummaryAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.AddBounceAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.AddBounceAsync(System.String,System.Threading.CancellationToken)
  id: AddBounceAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: AddBounceAsync(String, CancellationToken)
  nameWithType: IPersonAgent.AddBounceAsync(String, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.AddBounceAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nAdd a bounce count on the email address if it exists\n"
  syntax:
    content: Task AddBounceAsync(string emailAddress, CancellationToken cancellationToken = null)
    parameters:
    - id: emailAddress
      type: System.String
      description: The email address which we want to add a bounce count to
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function AddBounceAsync(emailAddress As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IPersonAgent.AddBounceAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.ValidatePersonEntityAsync(SuperOffice.CRM.Services.PersonEntity,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.ValidatePersonEntityAsync(SuperOffice.CRM.Services.PersonEntity,System.Threading.CancellationToken)
  id: ValidatePersonEntityAsync(SuperOffice.CRM.Services.PersonEntity,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: ValidatePersonEntityAsync(PersonEntity, CancellationToken)
  nameWithType: IPersonAgent.ValidatePersonEntityAsync(PersonEntity, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.ValidatePersonEntityAsync(SuperOffice.CRM.Services.PersonEntity, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCheck that entity is ready for saving, return error messages by field.\n"
  syntax:
    content: Task<StringDictionary> ValidatePersonEntityAsync(PersonEntity personEntity, CancellationToken cancellationToken = null)
    parameters:
    - id: personEntity
      type: SuperOffice.CRM.Services.PersonEntity
      description: Entity to be checked for errors.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.StringDictionary}
      description: Error messages tagged by field.
    content.vb: Function ValidatePersonEntityAsync(personEntity As PersonEntity, cancellationToken As CancellationToken = Nothing) As Task(Of StringDictionary)
  overload: SuperOffice.CRM.Services.IPersonAgent.ValidatePersonEntityAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.AddBounceWithCountAsync(System.String,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.AddBounceWithCountAsync(System.String,System.Int32,System.Threading.CancellationToken)
  id: AddBounceWithCountAsync(System.String,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: AddBounceWithCountAsync(String, Int32, CancellationToken)
  nameWithType: IPersonAgent.AddBounceWithCountAsync(String, Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.AddBounceWithCountAsync(System.String, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nAdd a number of bounce counts on the email address if it exists\n"
  syntax:
    content: Task AddBounceWithCountAsync(string emailAddress, int counts, CancellationToken cancellationToken = null)
    parameters:
    - id: emailAddress
      type: System.String
      description: The email address which we want to add bounce counts to
    - id: counts
      type: System.Int32
      description: The number of bounce counts to add
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function AddBounceWithCountAsync(emailAddress As String, counts As Integer, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IPersonAgent.AddBounceWithCountAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.GetBestSoLanguageForTemplateAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetBestSoLanguageForTemplateAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  id: GetBestSoLanguageForTemplateAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: GetBestSoLanguageForTemplateAsync(Int32, Int32, CancellationToken)
  nameWithType: IPersonAgent.GetBestSoLanguageForTemplateAsync(Int32, Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetBestSoLanguageForTemplateAsync(System.Int32, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet the best language for this person on this template\n"
  syntax:
    content: Task<string> GetBestSoLanguageForTemplateAsync(int personId, int templateId, CancellationToken cancellationToken = null)
    parameters:
    - id: personId
      type: System.Int32
      description: The id of the person
    - id: templateId
      type: System.Int32
      description: The id of the template to find languages on
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The solang code for best language, empty string if no best language found
    content.vb: Function GetBestSoLanguageForTemplateAsync(personId As Integer, templateId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Services.IPersonAgent.GetBestSoLanguageForTemplateAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.AddBounceWithDetailsAsync(System.String,System.Int32,System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.AddBounceWithDetailsAsync(System.String,System.Int32,System.Int32,System.String,System.Threading.CancellationToken)
  id: AddBounceWithDetailsAsync(System.String,System.Int32,System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: AddBounceWithDetailsAsync(String, Int32, Int32, String, CancellationToken)
  nameWithType: IPersonAgent.AddBounceWithDetailsAsync(String, Int32, Int32, String, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.AddBounceWithDetailsAsync(System.String, System.Int32, System.Int32, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nAdd a number of bounce counts on the email address if it exists, and with possible bounce code and reason\n"
  syntax:
    content: Task AddBounceWithDetailsAsync(string emailAddress, int counts, int code, string reason, CancellationToken cancellationToken = null)
    parameters:
    - id: emailAddress
      type: System.String
      description: The email address which we want to add bounce counts to
    - id: counts
      type: System.Int32
      description: The number of bounce counts to add
    - id: code
      type: System.Int32
      description: A numeric code representing the bounce reason
    - id: reason
      type: System.String
      description: A textual tag representing the bounce reason
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function AddBounceWithDetailsAsync(emailAddress As String, counts As Integer, code As Integer, reason As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IPersonAgent.AddBounceWithDetailsAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.GetPersonImagesAsync(System.Int32[],System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetPersonImagesAsync(System.Int32[],System.Int32,System.Int32,System.Threading.CancellationToken)
  id: GetPersonImagesAsync(System.Int32[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: GetPersonImagesAsync(Int32[], Int32, Int32, CancellationToken)
  nameWithType: IPersonAgent.GetPersonImagesAsync(Int32[], Int32, Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetPersonImagesAsync(System.Int32[], System.Int32, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet the image for a set of persons scaled to a specific size. Returned images are in PNG format.\n"
  syntax:
    content: Task<PersonImage[]> GetPersonImagesAsync(int[] personIds, int scaledWidth, int scaledHeight, CancellationToken cancellationToken = null)
    parameters:
    - id: personIds
      type: System.Int32[]
      description: List of persons to get images for.
    - id: scaledWidth
      type: System.Int32
      description: Returned images are scaled to this width
    - id: scaledHeight
      type: System.Int32
      description: Returned images are scaled to this height
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.PersonImage[]}
      description: List of person images. Persons without an image are not present in this list.
    content.vb: Function GetPersonImagesAsync(personIds As Integer(), scaledWidth As Integer, scaledHeight As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of PersonImage())
  overload: SuperOffice.CRM.Services.IPersonAgent.GetPersonImagesAsync*
  nameWithType.vb: IPersonAgent.GetPersonImagesAsync(Int32(), Int32, Int32, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.GetPersonImagesAsync(System.Int32(), System.Int32, System.Int32, System.Threading.CancellationToken)
  name.vb: GetPersonImagesAsync(Int32(), Int32, Int32, CancellationToken)
- uid: SuperOffice.CRM.Services.IPersonAgent.CreateOrUpdateUserCandidateAsync(System.Int32,System.String,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.CreateOrUpdateUserCandidateAsync(System.Int32,System.String,System.Boolean,System.Threading.CancellationToken)
  id: CreateOrUpdateUserCandidateAsync(System.Int32,System.String,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: CreateOrUpdateUserCandidateAsync(Int32, String, Boolean, CancellationToken)
  nameWithType: IPersonAgent.CreateOrUpdateUserCandidateAsync(Int32, String, Boolean, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.CreateOrUpdateUserCandidateAsync(System.Int32, System.String, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCreates a Customer Centre User (UserCandidate) for a given Contact (personId) with the supplied parameters. If the Customer Centre User already exists for a given Contact, the user is updated with the supplied parameters.\n"
  syntax:
    content: Task<UserCandidate> CreateOrUpdateUserCandidateAsync(int personId, string username, bool accessAllRequests, CancellationToken cancellationToken = null)
    parameters:
    - id: personId
      type: System.Int32
      description: Person to create UserCandidate for.
    - id: username
      type: System.String
      description: Desired username. Username must be unique. If the username is not unique, method will throw an error.
    - id: accessAllRequests
      type: System.Boolean
      description: Determines if Custom Center User has access to all requests created for all Contacts in the company.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.UserCandidate}
      description: UserCandidate created or updated.
    content.vb: Function CreateOrUpdateUserCandidateAsync(personId As Integer, username As String, accessAllRequests As Boolean, cancellationToken As CancellationToken = Nothing) As Task(Of UserCandidate)
  overload: SuperOffice.CRM.Services.IPersonAgent.CreateOrUpdateUserCandidateAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.GetUserCandidateByPersonAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetUserCandidateByPersonAsync(System.Int32,System.Threading.CancellationToken)
  id: GetUserCandidateByPersonAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: GetUserCandidateByPersonAsync(Int32, CancellationToken)
  nameWithType: IPersonAgent.GetUserCandidateByPersonAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetUserCandidateByPersonAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets user candidate linked to a person.\n"
  syntax:
    content: Task<UserCandidate> GetUserCandidateByPersonAsync(int personId, CancellationToken cancellationToken = null)
    parameters:
    - id: personId
      type: System.Int32
      description: Person related to requested UserCandidate.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.UserCandidate}
      description: UserCandidate linked to a person.
    content.vb: Function GetUserCandidateByPersonAsync(personId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of UserCandidate)
  overload: SuperOffice.CRM.Services.IPersonAgent.GetUserCandidateByPersonAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.GetCustomerCentrePasswordReplyTemplateAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetCustomerCentrePasswordReplyTemplateAsync(System.Int32,System.Threading.CancellationToken)
  id: GetCustomerCentrePasswordReplyTemplateAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: GetCustomerCentrePasswordReplyTemplateAsync(Int32, CancellationToken)
  nameWithType: IPersonAgent.GetCustomerCentrePasswordReplyTemplateAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetCustomerCentrePasswordReplyTemplateAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets a parsed Customer Centre password reply template for a particular customer\n"
  syntax:
    content: Task<ReplyTemplateParsed> GetCustomerCentrePasswordReplyTemplateAsync(int personId, CancellationToken cancellationToken = null)
    parameters:
    - id: personId
      type: System.Int32
      description: Person/customer id to get the template for.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.ReplyTemplateParsed}
      description: A parsed Customer Centre password reply template.
    content.vb: Function GetCustomerCentrePasswordReplyTemplateAsync(personId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of ReplyTemplateParsed)
  overload: SuperOffice.CRM.Services.IPersonAgent.GetCustomerCentrePasswordReplyTemplateAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.SendCustomerCentrePasswordEmailAsync(System.Int32,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.SendCustomerCentrePasswordEmailAsync(System.Int32,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: SendCustomerCentrePasswordEmailAsync(System.Int32,System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: SendCustomerCentrePasswordEmailAsync(Int32, String, String, String, CancellationToken)
  nameWithType: IPersonAgent.SendCustomerCentrePasswordEmailAsync(Int32, String, String, String, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.SendCustomerCentrePasswordEmailAsync(System.Int32, System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSends a Customer Centre password email based on the reply template.\n"
  syntax:
    content: Task SendCustomerCentrePasswordEmailAsync(int personId, string from, string to, string subject, CancellationToken cancellationToken = null)
    parameters:
    - id: personId
      type: System.Int32
      description: Person id associated to email&apos;s reply template.
    - id: from
      type: System.String
      description: Sender&apos;s email address.
    - id: to
      type: System.String
      description: Recipient&apos;s email address.
    - id: subject
      type: System.String
      description: Email&apos;s subject.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Function SendCustomerCentrePasswordEmailAsync(personId As Integer, from As String, to As String, subject As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IPersonAgent.SendCustomerCentrePasswordEmailAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.SendEmailAsync(System.String,System.String,System.String,System.String,System.String,System.Int32[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.SendEmailAsync(System.String,System.String,System.String,System.String,System.String,System.Int32[],System.Threading.CancellationToken)
  id: SendEmailAsync(System.String,System.String,System.String,System.String,System.String,System.Int32[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: SendEmailAsync(String, String, String, String, String, Int32[], CancellationToken)
  nameWithType: IPersonAgent.SendEmailAsync(String, String, String, String, String, Int32[], CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.SendEmailAsync(System.String, System.String, System.String, System.String, System.String, System.Int32[], System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nInserts into outbox an email with specified details.\n"
  syntax:
    content: Task SendEmailAsync(string from, string to, string subject, string plainBody, string htmlBody, int[] attachmentIds, CancellationToken cancellationToken = null)
    parameters:
    - id: from
      type: System.String
      description: Sender&apos;s email address.
    - id: to
      type: System.String
      description: Recipient&apos;s email address.
    - id: subject
      type: System.String
      description: Email&apos;s subject.
    - id: plainBody
      type: System.String
      description: Email&apos;s plain body.
    - id: htmlBody
      type: System.String
      description: Email&apos;s html body.
    - id: attachmentIds
      type: System.Int32[]
      description: Ids of email&apos;s attachments.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Function SendEmailAsync(from As String, to As String, subject As String, plainBody As String, htmlBody As String, attachmentIds As Integer(), cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IPersonAgent.SendEmailAsync*
  nameWithType.vb: IPersonAgent.SendEmailAsync(String, String, String, String, String, Int32(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.SendEmailAsync(System.String, System.String, System.String, System.String, System.String, System.Int32(), System.Threading.CancellationToken)
  name.vb: SendEmailAsync(String, String, String, String, String, Int32(), CancellationToken)
- uid: SuperOffice.CRM.Services.IPersonAgent.SendEmailWithEventNameAsync(System.String,System.String,System.String,System.String,System.String,System.Int32[],System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.SendEmailWithEventNameAsync(System.String,System.String,System.String,System.String,System.String,System.Int32[],System.String,System.Threading.CancellationToken)
  id: SendEmailWithEventNameAsync(System.String,System.String,System.String,System.String,System.String,System.Int32[],System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: SendEmailWithEventNameAsync(String, String, String, String, String, Int32[], String, CancellationToken)
  nameWithType: IPersonAgent.SendEmailWithEventNameAsync(String, String, String, String, String, Int32[], String, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.SendEmailWithEventNameAsync(System.String, System.String, System.String, System.String, System.String, System.Int32[], System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nInserts into outbox an email with specified details and event name.\n"
  syntax:
    content: Task SendEmailWithEventNameAsync(string from, string to, string subject, string plainBody, string htmlBody, int[] attachmentIds, string eventName, CancellationToken cancellationToken = null)
    parameters:
    - id: from
      type: System.String
      description: Sender&apos;s email address.
    - id: to
      type: System.String
      description: Recipient&apos;s email address.
    - id: subject
      type: System.String
      description: Email&apos;s subject.
    - id: plainBody
      type: System.String
      description: Email&apos;s plain body.
    - id: htmlBody
      type: System.String
      description: Email&apos;s html body.
    - id: attachmentIds
      type: System.Int32[]
      description: Ids of email&apos;s attachments.
    - id: eventName
      type: System.String
      description: Event name passed to outbound email trigger
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Function SendEmailWithEventNameAsync(from As String, to As String, subject As String, plainBody As String, htmlBody As String, attachmentIds As Integer(), eventName As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IPersonAgent.SendEmailWithEventNameAsync*
  nameWithType.vb: IPersonAgent.SendEmailWithEventNameAsync(String, String, String, String, String, Int32(), String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.SendEmailWithEventNameAsync(System.String, System.String, System.String, System.String, System.String, System.Int32(), System.String, System.Threading.CancellationToken)
  name.vb: SendEmailWithEventNameAsync(String, String, String, String, String, Int32(), String, CancellationToken)
- uid: SuperOffice.CRM.Services.IPersonAgent.GetPersonListAsync(System.Int32[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetPersonListAsync(System.Int32[],System.Threading.CancellationToken)
  id: GetPersonListAsync(System.Int32[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: GetPersonListAsync(Int32[], CancellationToken)
  nameWithType: IPersonAgent.GetPersonListAsync(Int32[], CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetPersonListAsync(System.Int32[], System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets an array of Person objects.                        \n"
  syntax:
    content: Task<Person[]> GetPersonListAsync(int[] personIds, CancellationToken cancellationToken = null)
    parameters:
    - id: personIds
      type: System.Int32[]
      description: The identifiers of the Person object
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Person[]}
      description: Array of Person objects
    content.vb: Function GetPersonListAsync(personIds As Integer(), cancellationToken As CancellationToken = Nothing) As Task(Of Person())
  overload: SuperOffice.CRM.Services.IPersonAgent.GetPersonListAsync*
  nameWithType.vb: IPersonAgent.GetPersonListAsync(Int32(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.GetPersonListAsync(System.Int32(), System.Threading.CancellationToken)
  name.vb: GetPersonListAsync(Int32(), CancellationToken)
- uid: SuperOffice.CRM.Services.IPersonAgent.GetPersonsFromContactAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetPersonsFromContactAsync(System.Int32,System.Threading.CancellationToken)
  id: GetPersonsFromContactAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: GetPersonsFromContactAsync(Int32, CancellationToken)
  nameWithType: IPersonAgent.GetPersonsFromContactAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetPersonsFromContactAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nReturns all the persons belonging to a contact.\n"
  syntax:
    content: Task<Person[]> GetPersonsFromContactAsync(int contactId, CancellationToken cancellationToken = null)
    parameters:
    - id: contactId
      type: System.Int32
      description: The project id
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Person[]}
      description: The persons belonging to a contact.
    content.vb: Function GetPersonsFromContactAsync(contactId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Person())
  overload: SuperOffice.CRM.Services.IPersonAgent.GetPersonsFromContactAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.GetPersonsFromProjectAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetPersonsFromProjectAsync(System.Int32,System.Threading.CancellationToken)
  id: GetPersonsFromProjectAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: GetPersonsFromProjectAsync(Int32, CancellationToken)
  nameWithType: IPersonAgent.GetPersonsFromProjectAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetPersonsFromProjectAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nReturns all the persons belonging to a project.\n"
  syntax:
    content: Task<Person[]> GetPersonsFromProjectAsync(int projectId, CancellationToken cancellationToken = null)
    parameters:
    - id: projectId
      type: System.Int32
      description: The project id
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Person[]}
      description: The persons belonging to a project.
    content.vb: Function GetPersonsFromProjectAsync(projectId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Person())
  overload: SuperOffice.CRM.Services.IPersonAgent.GetPersonsFromProjectAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.GetColleaguesAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetColleaguesAsync(System.Threading.CancellationToken)
  id: GetColleaguesAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: GetColleaguesAsync(CancellationToken)
  nameWithType: IPersonAgent.GetColleaguesAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetColleaguesAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets the persons working in the same company as the logged on user.\n"
  syntax:
    content: Task<Person[]> GetColleaguesAsync(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Person[]}
      description: Colleagues.
    content.vb: Function GetColleaguesAsync(cancellationToken As CancellationToken = Nothing) As Task(Of Person())
  overload: SuperOffice.CRM.Services.IPersonAgent.GetColleaguesAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.GetColleaguesByDepartmentAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetColleaguesByDepartmentAsync(System.Int32,System.Threading.CancellationToken)
  id: GetColleaguesByDepartmentAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: GetColleaguesByDepartmentAsync(Int32, CancellationToken)
  nameWithType: IPersonAgent.GetColleaguesByDepartmentAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetColleaguesByDepartmentAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets the persons working in a specific department in the same company as the logged on user. Departments can be retrieved with the PhoneList.DepartmentList service.\n"
  syntax:
    content: Task<Person[]> GetColleaguesByDepartmentAsync(int departmentId, CancellationToken cancellationToken = null)
    parameters:
    - id: departmentId
      type: System.Int32
      description: The department id.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Person[]}
      description: PersonList with colleagues.
    content.vb: Function GetColleaguesByDepartmentAsync(departmentId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Person())
  overload: SuperOffice.CRM.Services.IPersonAgent.GetColleaguesByDepartmentAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.GetColleaguesBySourceAsync(SuperOffice.CRM.Services.Util.AssociateSourceType,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetColleaguesBySourceAsync(SuperOffice.CRM.Services.Util.AssociateSourceType,System.Int32,System.Threading.CancellationToken)
  id: GetColleaguesBySourceAsync(SuperOffice.CRM.Services.Util.AssociateSourceType,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: GetColleaguesBySourceAsync(AssociateSourceType, Int32, CancellationToken)
  nameWithType: IPersonAgent.GetColleaguesBySourceAsync(AssociateSourceType, Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetColleaguesBySourceAsync(SuperOffice.CRM.Services.Util.AssociateSourceType, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets the persons working in the same company as the logged on user. The list of person could be retrieved from the history list, the diary view list, or from all sources.\n"
  syntax:
    content: Task<Person[]> GetColleaguesBySourceAsync(AssociateSourceType sourceType, int count, CancellationToken cancellationToken = null)
    parameters:
    - id: sourceType
      type: SuperOffice.CRM.Services.Util.AssociateSourceType
      description: The “source” the colleagues should be retrieved from. &lt;see cref=&quot;AssociateSourceType&quot;/> for more information.
    - id: count
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Person[]}
      description: Colleagues.
    content.vb: Function GetColleaguesBySourceAsync(sourceType As AssociateSourceType, count As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Person())
  overload: SuperOffice.CRM.Services.IPersonAgent.GetColleaguesBySourceAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.GetMyOwnerAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetMyOwnerAsync(System.Threading.CancellationToken)
  id: GetMyOwnerAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: GetMyOwnerAsync(CancellationToken)
  nameWithType: IPersonAgent.GetMyOwnerAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetMyOwnerAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet the owner of the logged in person.\n"
  syntax:
    content: Task<Person> GetMyOwnerAsync(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Person}
      description: Person
    content.vb: Function GetMyOwnerAsync(cancellationToken As CancellationToken = Nothing) As Task(Of Person)
  overload: SuperOffice.CRM.Services.IPersonAgent.GetMyOwnerAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.GetOwnerOnPersonIdAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetOwnerOnPersonIdAsync(System.Int32,System.Threading.CancellationToken)
  id: GetOwnerOnPersonIdAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: GetOwnerOnPersonIdAsync(Int32, CancellationToken)
  nameWithType: IPersonAgent.GetOwnerOnPersonIdAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetOwnerOnPersonIdAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet the owner of the person by id.\n"
  syntax:
    content: Task<Person> GetOwnerOnPersonIdAsync(int personId, CancellationToken cancellationToken = null)
    parameters:
    - id: personId
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Person}
      description: Person
    content.vb: Function GetOwnerOnPersonIdAsync(personId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Person)
  overload: SuperOffice.CRM.Services.IPersonAgent.GetOwnerOnPersonIdAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.ChangePersonRankAsync(System.Int32,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.ChangePersonRankAsync(System.Int32,System.Boolean,System.Threading.CancellationToken)
  id: ChangePersonRankAsync(System.Int32,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: ChangePersonRankAsync(Int32, Boolean, CancellationToken)
  nameWithType: IPersonAgent.ChangePersonRankAsync(Int32, Boolean, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.ChangePersonRankAsync(System.Int32, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nMove one person up or down in the ranking in the Person Archive, if possible.&lt;para/>The person record that has rank = 1 is the primary contact for a company, and is the one used in situations where no person has been explicitly chosen (such as in selections).&lt;para/>This method corresponds to the move up/move down functions in the person archive in the contact panel.&lt;para/>This method always affects two records.\n"
  syntax:
    content: Task<int> ChangePersonRankAsync(int personId, bool moveUp, CancellationToken cancellationToken = null)
    parameters:
    - id: personId
      type: System.Int32
      description: Primary key of person record to move up or down. You must have write access both to this record AND to whatever record is adjacent in the direction you want to move.
    - id: moveUp
      type: System.Boolean
      description: If true, the given person is moved to an earlier rank (lower numeric rank value, down to a limit of 1; up in the GUI if sorted by ascending rank). If false, movement is to later priority (higher numeric rank value).
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: If movement occurred, the return value will be the ID of the OTHER person that got moved. A GUI should switch the positions of the original person ID and this return value.&lt;para/>If no movement occurred, for any reason,  0 is returned.
    content.vb: Function ChangePersonRankAsync(personId As Integer, moveUp As Boolean, cancellationToken As CancellationToken = Nothing) As Task(Of Integer)
  overload: SuperOffice.CRM.Services.IPersonAgent.ChangePersonRankAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.SetPersonRankAsync(System.Int32,System.Int16,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.SetPersonRankAsync(System.Int32,System.Int16,System.Threading.CancellationToken)
  id: SetPersonRankAsync(System.Int32,System.Int16,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: SetPersonRankAsync(Int32, Int16, CancellationToken)
  nameWithType: IPersonAgent.SetPersonRankAsync(Int32, Int16, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.SetPersonRankAsync(System.Int32, System.Int16, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nDirectly set the rank field of a person record, adjusting all other person records under the same contact as needed.&lt;para/>This call may affect multiple records, potentially all person records belonging to one contact.&lt;para/>You must have write access for to affected records for this method to succeed.\n"
  syntax:
    content: Task<bool> SetPersonRankAsync(int personId, short desiredRank, CancellationToken cancellationToken = null)
    parameters:
    - id: personId
      type: System.Int32
      description: Id of person to change
    - id: desiredRank
      type: System.Int16
      description: Desired rank to set, legal values are from 1 to the number of person records on this contact. Out of range values will be moved to the closest valid value and processed.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: 'If movement occurred, or the person already had exactly the desired rank value, then the return value will be true. If movement did not occur, for any other reason, the return value is false. '
    content.vb: Function SetPersonRankAsync(personId As Integer, desiredRank As Short, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.Services.IPersonAgent.SetPersonRankAsync*
- uid: SuperOffice.CRM.Services.IPersonAgent.NormalizeRanksAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.NormalizeRanksAsync(System.Int32,System.Threading.CancellationToken)
  id: NormalizeRanksAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: NormalizeRanksAsync(Int32, CancellationToken)
  nameWithType: IPersonAgent.NormalizeRanksAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPersonAgent.NormalizeRanksAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nNomralize the ranks for all persons that belong to a contact. This means that the persons will be sorted according to their current rank values, and the ranks will be made monotonically increasing from 1.\n"
  syntax:
    content: Task<bool> NormalizeRanksAsync(int contactId, CancellationToken cancellationToken = null)
    parameters:
    - id: contactId
      type: System.Int32
      description: Id of contact whose persons are to be rank normalized
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: The reutrn value is true if the operation suceeded, either because all persons were already normalized, or because normalization was done. It is false if Sentry blocks any required changes.
    content.vb: Function NormalizeRanksAsync(contactId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.Services.IPersonAgent.NormalizeRanksAsync*
references:
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
- uid: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultConsentPersonAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.CreateDefaultConsentPersonAsync
  isExternal: true
  name: CreateDefaultConsentPersonAsync
  nameWithType: IPersonAgent.CreateDefaultConsentPersonAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultConsentPersonAsync
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.ConsentPerson}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Services.ConsentPerson}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ConsentPerson>
  nameWithType: Task<ConsentPerson>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.ConsentPerson>
  nameWithType.vb: Task(Of ConsentPerson)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.ConsentPerson)
  name.vb: Task(Of ConsentPerson)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Services.ConsentPerson
    name: ConsentPerson
    nameWithType: ConsentPerson
    fullName: SuperOffice.CRM.Services.ConsentPerson
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Services.ConsentPerson
    name: ConsentPerson
    nameWithType: ConsentPerson
    fullName: SuperOffice.CRM.Services.ConsentPerson
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.IPersonAgent.SaveConsentPersonAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.SaveConsentPersonAsync
  isExternal: true
  name: SaveConsentPersonAsync
  nameWithType: IPersonAgent.SaveConsentPersonAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.SaveConsentPersonAsync
- uid: SuperOffice.CRM.Services.ConsentPerson
  commentId: T:SuperOffice.CRM.Services.ConsentPerson
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: ConsentPerson
  nameWithType: ConsentPerson
  fullName: SuperOffice.CRM.Services.ConsentPerson
- uid: SuperOffice.CRM.Services.IPersonAgent.DeleteConsentPersonAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.DeleteConsentPersonAsync
  isExternal: true
  name: DeleteConsentPersonAsync
  nameWithType: IPersonAgent.DeleteConsentPersonAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.DeleteConsentPersonAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultPersonEntityAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.CreateDefaultPersonEntityAsync
  isExternal: true
  name: CreateDefaultPersonEntityAsync
  nameWithType: IPersonAgent.CreateDefaultPersonEntityAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultPersonEntityAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.PersonEntity}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Services.PersonEntity}'
  definition: System.Threading.Tasks.Task`1
  name: Task<PersonEntity>
  nameWithType: Task<PersonEntity>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.PersonEntity>
  nameWithType.vb: Task(Of PersonEntity)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.PersonEntity)
  name.vb: Task(Of PersonEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Services.PersonEntity
    name: PersonEntity
    nameWithType: PersonEntity
    fullName: SuperOffice.CRM.Services.PersonEntity
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Services.PersonEntity
    name: PersonEntity
    nameWithType: PersonEntity
    fullName: SuperOffice.CRM.Services.PersonEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.IPersonAgent.SavePersonEntityAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.SavePersonEntityAsync
  isExternal: true
  name: SavePersonEntityAsync
  nameWithType: IPersonAgent.SavePersonEntityAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.SavePersonEntityAsync
- uid: SuperOffice.CRM.Services.PersonEntity
  commentId: T:SuperOffice.CRM.Services.PersonEntity
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: PersonEntity
  nameWithType: PersonEntity
  fullName: SuperOffice.CRM.Services.PersonEntity
- uid: SuperOffice.CRM.Services.IPersonAgent.DeletePersonEntityAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.DeletePersonEntityAsync
  isExternal: true
  name: DeletePersonEntityAsync
  nameWithType: IPersonAgent.DeletePersonEntityAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.DeletePersonEntityAsync
- uid: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultPersonImageAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.CreateDefaultPersonImageAsync
  isExternal: true
  name: CreateDefaultPersonImageAsync
  nameWithType: IPersonAgent.CreateDefaultPersonImageAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultPersonImageAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.PersonImage}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Services.PersonImage}'
  definition: System.Threading.Tasks.Task`1
  name: Task<PersonImage>
  nameWithType: Task<PersonImage>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.PersonImage>
  nameWithType.vb: Task(Of PersonImage)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.PersonImage)
  name.vb: Task(Of PersonImage)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Services.PersonImage
    name: PersonImage
    nameWithType: PersonImage
    fullName: SuperOffice.CRM.Services.PersonImage
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Services.PersonImage
    name: PersonImage
    nameWithType: PersonImage
    fullName: SuperOffice.CRM.Services.PersonImage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.IPersonAgent.GetConsentPersonAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.GetConsentPersonAsync
  isExternal: true
  name: GetConsentPersonAsync
  nameWithType: IPersonAgent.GetConsentPersonAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetConsentPersonAsync
- uid: SuperOffice.CRM.Services.IPersonAgent.GetPersonAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.GetPersonAsync
  isExternal: true
  name: GetPersonAsync
  nameWithType: IPersonAgent.GetPersonAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetPersonAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Person}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Services.Person}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Person>
  nameWithType: Task<Person>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.Person>
  nameWithType.vb: Task(Of Person)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.Person)
  name.vb: Task(Of Person)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Services.Person
    name: Person
    nameWithType: Person
    fullName: SuperOffice.CRM.Services.Person
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Services.Person
    name: Person
    nameWithType: Person
    fullName: SuperOffice.CRM.Services.Person
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.IPersonAgent.TryAddPersonsToEmailFlowAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.TryAddPersonsToEmailFlowAsync
  isExternal: true
  name: TryAddPersonsToEmailFlowAsync
  nameWithType: IPersonAgent.TryAddPersonsToEmailFlowAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.TryAddPersonsToEmailFlowAsync
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Threading.Tasks.Task{System.Boolean[]}
  commentId: '!:System.Threading.Tasks.Task{System.Boolean[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean[]>
  nameWithType: Task<Boolean[]>
  fullName: System.Threading.Tasks.Task<System.Boolean[]>
  nameWithType.vb: Task(Of Boolean())
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean())
  name.vb: Task(Of Boolean())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.IPersonAgent.GetPersonEntityAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.GetPersonEntityAsync
  isExternal: true
  name: GetPersonEntityAsync
  nameWithType: IPersonAgent.GetPersonEntityAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetPersonEntityAsync
- uid: SuperOffice.CRM.Services.IPersonAgent.UndeleteAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.UndeleteAsync
  isExternal: true
  name: UndeleteAsync
  nameWithType: IPersonAgent.UndeleteAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.UndeleteAsync
- uid: SuperOffice.CRM.Services.IPersonAgent.GetMyPersonAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.GetMyPersonAsync
  isExternal: true
  name: GetMyPersonAsync
  nameWithType: IPersonAgent.GetMyPersonAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetMyPersonAsync
- uid: SuperOffice.CRM.Services.IPersonAgent.GetSalesRepAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.GetSalesRepAsync
  isExternal: true
  name: GetSalesRepAsync
  nameWithType: IPersonAgent.GetSalesRepAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetSalesRepAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.Services.IPersonAgent.GetPhonesAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.GetPhonesAsync
  isExternal: true
  name: GetPhonesAsync
  nameWithType: IPersonAgent.GetPhonesAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetPhonesAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.EntityElement[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Services.EntityElement[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<EntityElement[]>
  nameWithType: Task<EntityElement[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.EntityElement[]>
  nameWithType.vb: Task(Of EntityElement())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.EntityElement())
  name.vb: Task(Of EntityElement())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Services.EntityElement
    name: EntityElement
    nameWithType: EntityElement
    fullName: SuperOffice.CRM.Services.EntityElement
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Services.EntityElement
    name: EntityElement
    nameWithType: EntityElement
    fullName: SuperOffice.CRM.Services.EntityElement
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.IPersonAgent.ChangeCountryAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.ChangeCountryAsync
  isExternal: true
  name: ChangeCountryAsync
  nameWithType: IPersonAgent.ChangeCountryAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.ChangeCountryAsync
- uid: SuperOffice.CRM.Services.IPersonAgent.GetAddressAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.GetAddressAsync
  isExternal: true
  name: GetAddressAsync
  nameWithType: IPersonAgent.GetAddressAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetAddressAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Address}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Services.Address}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Address>
  nameWithType: Task<Address>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.Address>
  nameWithType.vb: Task(Of Address)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.Address)
  name.vb: Task(Of Address)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Services.Address
    name: Address
    nameWithType: Address
    fullName: SuperOffice.CRM.Services.Address
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Services.Address
    name: Address
    nameWithType: Address
    fullName: SuperOffice.CRM.Services.Address
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.IPersonAgent.GetAddressByCountryAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.GetAddressByCountryAsync
  isExternal: true
  name: GetAddressByCountryAsync
  nameWithType: IPersonAgent.GetAddressByCountryAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetAddressByCountryAsync
- uid: SuperOffice.CRM.Services.IPersonAgent.GetPersonImageAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.GetPersonImageAsync
  isExternal: true
  name: GetPersonImageAsync
  nameWithType: IPersonAgent.GetPersonImageAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetPersonImageAsync
- uid: System.Threading.Tasks.Task{System.Drawing.Image}
  commentId: '!:System.Threading.Tasks.Task{System.Drawing.Image}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Image>
  nameWithType: Task<Image>
  fullName: System.Threading.Tasks.Task<System.Drawing.Image>
  nameWithType.vb: Task(Of Image)
  fullName.vb: System.Threading.Tasks.Task(Of System.Drawing.Image)
  name.vb: Task(Of Image)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Drawing.Image
    name: Image
    nameWithType: Image
    fullName: System.Drawing.Image
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Drawing.Image
    name: Image
    nameWithType: Image
    fullName: System.Drawing.Image
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.IPersonAgent.SetPersonImageAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.SetPersonImageAsync
  isExternal: true
  name: SetPersonImageAsync
  nameWithType: IPersonAgent.SetPersonImageAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.SetPersonImageAsync
- uid: System.Drawing.Image
  isExternal: true
  name: Image
  nameWithType: Image
  fullName: System.Drawing.Image
- uid: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultByContactIdAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.CreateDefaultByContactIdAsync
  isExternal: true
  name: CreateDefaultByContactIdAsync
  nameWithType: IPersonAgent.CreateDefaultByContactIdAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultByContactIdAsync
- uid: SuperOffice.CRM.Services.IPersonAgent.MoveAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.MoveAsync
  isExternal: true
  name: MoveAsync
  nameWithType: IPersonAgent.MoveAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.MoveAsync
- uid: System.DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: SuperOffice.CRM.Services.IPersonAgent.MergeAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.MergeAsync
  isExternal: true
  name: MergeAsync
  nameWithType: IPersonAgent.MergeAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.MergeAsync
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultFromCredentialAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.CreateDefaultFromCredentialAsync
  isExternal: true
  name: CreateDefaultFromCredentialAsync
  nameWithType: IPersonAgent.CreateDefaultFromCredentialAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultFromCredentialAsync
- uid: SuperOffice.CRM.Services.IPersonAgent.IsNumberValidAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.IsNumberValidAsync
  isExternal: true
  name: IsNumberValidAsync
  nameWithType: IPersonAgent.IsNumberValidAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.IsNumberValidAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: '!:System.Threading.Tasks.Task{System.Boolean}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.IPersonAgent.SetConsentAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.SetConsentAsync
  isExternal: true
  name: SetConsentAsync
  nameWithType: IPersonAgent.SetConsentAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.SetConsentAsync
- uid: SuperOffice.CRM.Services.IPersonAgent.RemoveConsentAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.RemoveConsentAsync
  isExternal: true
  name: RemoveConsentAsync
  nameWithType: IPersonAgent.RemoveConsentAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.RemoveConsentAsync
- uid: SuperOffice.CRM.Services.IPersonAgent.HasConsentAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.HasConsentAsync
  isExternal: true
  name: HasConsentAsync
  nameWithType: IPersonAgent.HasConsentAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.HasConsentAsync
- uid: SuperOffice.CRM.Services.IPersonAgent.GetConsentInfosAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.GetConsentInfosAsync
  isExternal: true
  name: GetConsentInfosAsync
  nameWithType: IPersonAgent.GetConsentInfosAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetConsentInfosAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.ConsentInfo[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Services.ConsentInfo[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ConsentInfo[]>
  nameWithType: Task<ConsentInfo[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.ConsentInfo[]>
  nameWithType.vb: Task(Of ConsentInfo())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.ConsentInfo())
  name.vb: Task(Of ConsentInfo())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Services.ConsentInfo
    name: ConsentInfo
    nameWithType: ConsentInfo
    fullName: SuperOffice.CRM.Services.ConsentInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Services.ConsentInfo
    name: ConsentInfo
    nameWithType: ConsentInfo
    fullName: SuperOffice.CRM.Services.ConsentInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.IPersonAgent.SendConsentConfirmationEmailAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.SendConsentConfirmationEmailAsync
  isExternal: true
  name: SendConsentConfirmationEmailAsync
  nameWithType: IPersonAgent.SendConsentConfirmationEmailAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.SendConsentConfirmationEmailAsync
- uid: SuperOffice.CRM.Services.IPersonAgent.ResolvePersonFromInfoAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.ResolvePersonFromInfoAsync
  isExternal: true
  name: ResolvePersonFromInfoAsync
  nameWithType: IPersonAgent.ResolvePersonFromInfoAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.ResolvePersonFromInfoAsync
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.ResolvedPerson}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Services.ResolvedPerson}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ResolvedPerson>
  nameWithType: Task<ResolvedPerson>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.ResolvedPerson>
  nameWithType.vb: Task(Of ResolvedPerson)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.ResolvedPerson)
  name.vb: Task(Of ResolvedPerson)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Services.ResolvedPerson
    name: ResolvedPerson
    nameWithType: ResolvedPerson
    fullName: SuperOffice.CRM.Services.ResolvedPerson
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Services.ResolvedPerson
    name: ResolvedPerson
    nameWithType: ResolvedPerson
    fullName: SuperOffice.CRM.Services.ResolvedPerson
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.IPersonAgent.AddEmailAddressToPersonAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.AddEmailAddressToPersonAsync
  isExternal: true
  name: AddEmailAddressToPersonAsync
  nameWithType: IPersonAgent.AddEmailAddressToPersonAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.AddEmailAddressToPersonAsync
- uid: SuperOffice.CRM.Services.IPersonAgent.CreateTemporaryKeyAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.CreateTemporaryKeyAsync
  isExternal: true
  name: CreateTemporaryKeyAsync
  nameWithType: IPersonAgent.CreateTemporaryKeyAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.CreateTemporaryKeyAsync
- uid: SuperOffice.Data.TemporaryKeyDomain
  isExternal: true
  name: TemporaryKeyDomain
  nameWithType: TemporaryKeyDomain
  fullName: SuperOffice.Data.TemporaryKeyDomain
- uid: System.Threading.Tasks.Task{System.String}
  commentId: '!:System.Threading.Tasks.Task{System.String}'
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.IPersonAgent.CreateTemporaryKeyWithPayloadAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.CreateTemporaryKeyWithPayloadAsync
  isExternal: true
  name: CreateTemporaryKeyWithPayloadAsync
  nameWithType: IPersonAgent.CreateTemporaryKeyWithPayloadAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.CreateTemporaryKeyWithPayloadAsync
- uid: SuperOffice.CRM.Services.IPersonAgent.CheckTemporaryKeyAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.CheckTemporaryKeyAsync
  isExternal: true
  name: CheckTemporaryKeyAsync
  nameWithType: IPersonAgent.CheckTemporaryKeyAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.CheckTemporaryKeyAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.TemporaryKeyInfo}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Services.TemporaryKeyInfo}'
  definition: System.Threading.Tasks.Task`1
  name: Task<TemporaryKeyInfo>
  nameWithType: Task<TemporaryKeyInfo>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.TemporaryKeyInfo>
  nameWithType.vb: Task(Of TemporaryKeyInfo)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.TemporaryKeyInfo)
  name.vb: Task(Of TemporaryKeyInfo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Services.TemporaryKeyInfo
    name: TemporaryKeyInfo
    nameWithType: TemporaryKeyInfo
    fullName: SuperOffice.CRM.Services.TemporaryKeyInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Services.TemporaryKeyInfo
    name: TemporaryKeyInfo
    nameWithType: TemporaryKeyInfo
    fullName: SuperOffice.CRM.Services.TemporaryKeyInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.IPersonAgent.DeleteTemporaryKeysOfDomainAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.DeleteTemporaryKeysOfDomainAsync
  isExternal: true
  name: DeleteTemporaryKeysOfDomainAsync
  nameWithType: IPersonAgent.DeleteTemporaryKeysOfDomainAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.DeleteTemporaryKeysOfDomainAsync
- uid: SuperOffice.CRM.Services.IPersonAgent.DeleteExpiredAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.DeleteExpiredAsync
  isExternal: true
  name: DeleteExpiredAsync
  nameWithType: IPersonAgent.DeleteExpiredAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.DeleteExpiredAsync
- uid: SuperOffice.CRM.Services.IPersonAgent.GetPersonSummaryAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.GetPersonSummaryAsync
  isExternal: true
  name: GetPersonSummaryAsync
  nameWithType: IPersonAgent.GetPersonSummaryAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetPersonSummaryAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.PersonSummary}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Services.PersonSummary}'
  definition: System.Threading.Tasks.Task`1
  name: Task<PersonSummary>
  nameWithType: Task<PersonSummary>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.PersonSummary>
  nameWithType.vb: Task(Of PersonSummary)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.PersonSummary)
  name.vb: Task(Of PersonSummary)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Services.PersonSummary
    name: PersonSummary
    nameWithType: PersonSummary
    fullName: SuperOffice.CRM.Services.PersonSummary
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Services.PersonSummary
    name: PersonSummary
    nameWithType: PersonSummary
    fullName: SuperOffice.CRM.Services.PersonSummary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.IPersonAgent.AddBounceAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.AddBounceAsync
  isExternal: true
  name: AddBounceAsync
  nameWithType: IPersonAgent.AddBounceAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.AddBounceAsync
- uid: SuperOffice.CRM.Services.IPersonAgent.ValidatePersonEntityAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.ValidatePersonEntityAsync
  isExternal: true
  name: ValidatePersonEntityAsync
  nameWithType: IPersonAgent.ValidatePersonEntityAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.ValidatePersonEntityAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.StringDictionary}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Services.StringDictionary}'
  definition: System.Threading.Tasks.Task`1
  name: Task<StringDictionary>
  nameWithType: Task<StringDictionary>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.StringDictionary>
  nameWithType.vb: Task(Of StringDictionary)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.StringDictionary)
  name.vb: Task(Of StringDictionary)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Services.StringDictionary
    name: StringDictionary
    nameWithType: StringDictionary
    fullName: SuperOffice.CRM.Services.StringDictionary
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Services.StringDictionary
    name: StringDictionary
    nameWithType: StringDictionary
    fullName: SuperOffice.CRM.Services.StringDictionary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.IPersonAgent.AddBounceWithCountAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.AddBounceWithCountAsync
  isExternal: true
  name: AddBounceWithCountAsync
  nameWithType: IPersonAgent.AddBounceWithCountAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.AddBounceWithCountAsync
- uid: SuperOffice.CRM.Services.IPersonAgent.GetBestSoLanguageForTemplateAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.GetBestSoLanguageForTemplateAsync
  isExternal: true
  name: GetBestSoLanguageForTemplateAsync
  nameWithType: IPersonAgent.GetBestSoLanguageForTemplateAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetBestSoLanguageForTemplateAsync
- uid: SuperOffice.CRM.Services.IPersonAgent.AddBounceWithDetailsAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.AddBounceWithDetailsAsync
  isExternal: true
  name: AddBounceWithDetailsAsync
  nameWithType: IPersonAgent.AddBounceWithDetailsAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.AddBounceWithDetailsAsync
- uid: SuperOffice.CRM.Services.IPersonAgent.GetPersonImagesAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.GetPersonImagesAsync
  isExternal: true
  name: GetPersonImagesAsync
  nameWithType: IPersonAgent.GetPersonImagesAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetPersonImagesAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.PersonImage[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Services.PersonImage[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<PersonImage[]>
  nameWithType: Task<PersonImage[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.PersonImage[]>
  nameWithType.vb: Task(Of PersonImage())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.PersonImage())
  name.vb: Task(Of PersonImage())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Services.PersonImage
    name: PersonImage
    nameWithType: PersonImage
    fullName: SuperOffice.CRM.Services.PersonImage
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Services.PersonImage
    name: PersonImage
    nameWithType: PersonImage
    fullName: SuperOffice.CRM.Services.PersonImage
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.IPersonAgent.CreateOrUpdateUserCandidateAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.CreateOrUpdateUserCandidateAsync
  isExternal: true
  name: CreateOrUpdateUserCandidateAsync
  nameWithType: IPersonAgent.CreateOrUpdateUserCandidateAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.CreateOrUpdateUserCandidateAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.UserCandidate}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Services.UserCandidate}'
  definition: System.Threading.Tasks.Task`1
  name: Task<UserCandidate>
  nameWithType: Task<UserCandidate>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.UserCandidate>
  nameWithType.vb: Task(Of UserCandidate)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.UserCandidate)
  name.vb: Task(Of UserCandidate)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Services.UserCandidate
    name: UserCandidate
    nameWithType: UserCandidate
    fullName: SuperOffice.CRM.Services.UserCandidate
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Services.UserCandidate
    name: UserCandidate
    nameWithType: UserCandidate
    fullName: SuperOffice.CRM.Services.UserCandidate
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.IPersonAgent.GetUserCandidateByPersonAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.GetUserCandidateByPersonAsync
  isExternal: true
  name: GetUserCandidateByPersonAsync
  nameWithType: IPersonAgent.GetUserCandidateByPersonAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetUserCandidateByPersonAsync
- uid: SuperOffice.CRM.Services.IPersonAgent.GetCustomerCentrePasswordReplyTemplateAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.GetCustomerCentrePasswordReplyTemplateAsync
  isExternal: true
  name: GetCustomerCentrePasswordReplyTemplateAsync
  nameWithType: IPersonAgent.GetCustomerCentrePasswordReplyTemplateAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetCustomerCentrePasswordReplyTemplateAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.ReplyTemplateParsed}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Services.ReplyTemplateParsed}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ReplyTemplateParsed>
  nameWithType: Task<ReplyTemplateParsed>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.ReplyTemplateParsed>
  nameWithType.vb: Task(Of ReplyTemplateParsed)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.ReplyTemplateParsed)
  name.vb: Task(Of ReplyTemplateParsed)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Services.ReplyTemplateParsed
    name: ReplyTemplateParsed
    nameWithType: ReplyTemplateParsed
    fullName: SuperOffice.CRM.Services.ReplyTemplateParsed
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Services.ReplyTemplateParsed
    name: ReplyTemplateParsed
    nameWithType: ReplyTemplateParsed
    fullName: SuperOffice.CRM.Services.ReplyTemplateParsed
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.IPersonAgent.SendCustomerCentrePasswordEmailAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.SendCustomerCentrePasswordEmailAsync
  isExternal: true
  name: SendCustomerCentrePasswordEmailAsync
  nameWithType: IPersonAgent.SendCustomerCentrePasswordEmailAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.SendCustomerCentrePasswordEmailAsync
- uid: SuperOffice.CRM.Services.IPersonAgent.SendEmailAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.SendEmailAsync
  isExternal: true
  name: SendEmailAsync
  nameWithType: IPersonAgent.SendEmailAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.SendEmailAsync
- uid: SuperOffice.CRM.Services.IPersonAgent.SendEmailWithEventNameAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.SendEmailWithEventNameAsync
  isExternal: true
  name: SendEmailWithEventNameAsync
  nameWithType: IPersonAgent.SendEmailWithEventNameAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.SendEmailWithEventNameAsync
- uid: SuperOffice.CRM.Services.IPersonAgent.GetPersonListAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.GetPersonListAsync
  isExternal: true
  name: GetPersonListAsync
  nameWithType: IPersonAgent.GetPersonListAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetPersonListAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Person[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Services.Person[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Person[]>
  nameWithType: Task<Person[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.Person[]>
  nameWithType.vb: Task(Of Person())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.Person())
  name.vb: Task(Of Person())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Services.Person
    name: Person
    nameWithType: Person
    fullName: SuperOffice.CRM.Services.Person
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Services.Person
    name: Person
    nameWithType: Person
    fullName: SuperOffice.CRM.Services.Person
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.IPersonAgent.GetPersonsFromContactAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.GetPersonsFromContactAsync
  isExternal: true
  name: GetPersonsFromContactAsync
  nameWithType: IPersonAgent.GetPersonsFromContactAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetPersonsFromContactAsync
- uid: SuperOffice.CRM.Services.IPersonAgent.GetPersonsFromProjectAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.GetPersonsFromProjectAsync
  isExternal: true
  name: GetPersonsFromProjectAsync
  nameWithType: IPersonAgent.GetPersonsFromProjectAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetPersonsFromProjectAsync
- uid: SuperOffice.CRM.Services.IPersonAgent.GetColleaguesAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.GetColleaguesAsync
  isExternal: true
  name: GetColleaguesAsync
  nameWithType: IPersonAgent.GetColleaguesAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetColleaguesAsync
- uid: SuperOffice.CRM.Services.IPersonAgent.GetColleaguesByDepartmentAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.GetColleaguesByDepartmentAsync
  isExternal: true
  name: GetColleaguesByDepartmentAsync
  nameWithType: IPersonAgent.GetColleaguesByDepartmentAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetColleaguesByDepartmentAsync
- uid: SuperOffice.CRM.Services.IPersonAgent.GetColleaguesBySourceAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.GetColleaguesBySourceAsync
  isExternal: true
  name: GetColleaguesBySourceAsync
  nameWithType: IPersonAgent.GetColleaguesBySourceAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetColleaguesBySourceAsync
- uid: SuperOffice.CRM.Services.Util.AssociateSourceType
  commentId: T:SuperOffice.CRM.Services.Util.AssociateSourceType
  parent: SuperOffice.CRM.Services.Util
  isExternal: true
  name: AssociateSourceType
  nameWithType: AssociateSourceType
  fullName: SuperOffice.CRM.Services.Util.AssociateSourceType
- uid: SuperOffice.CRM.Services.Util
  commentId: N:SuperOffice.CRM.Services.Util
  isExternal: true
  name: SuperOffice.CRM.Services.Util
  nameWithType: SuperOffice.CRM.Services.Util
  fullName: SuperOffice.CRM.Services.Util
- uid: SuperOffice.CRM.Services.IPersonAgent.GetMyOwnerAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.GetMyOwnerAsync
  isExternal: true
  name: GetMyOwnerAsync
  nameWithType: IPersonAgent.GetMyOwnerAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetMyOwnerAsync
- uid: SuperOffice.CRM.Services.IPersonAgent.GetOwnerOnPersonIdAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.GetOwnerOnPersonIdAsync
  isExternal: true
  name: GetOwnerOnPersonIdAsync
  nameWithType: IPersonAgent.GetOwnerOnPersonIdAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetOwnerOnPersonIdAsync
- uid: SuperOffice.CRM.Services.IPersonAgent.ChangePersonRankAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.ChangePersonRankAsync
  isExternal: true
  name: ChangePersonRankAsync
  nameWithType: IPersonAgent.ChangePersonRankAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.ChangePersonRankAsync
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: '!:System.Threading.Tasks.Task{System.Int32}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  nameWithType.vb: Task(Of Int32)
  fullName.vb: System.Threading.Tasks.Task(Of System.Int32)
  name.vb: Task(Of Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.IPersonAgent.SetPersonRankAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.SetPersonRankAsync
  isExternal: true
  name: SetPersonRankAsync
  nameWithType: IPersonAgent.SetPersonRankAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.SetPersonRankAsync
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: SuperOffice.CRM.Services.IPersonAgent.NormalizeRanksAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.NormalizeRanksAsync
  isExternal: true
  name: NormalizeRanksAsync
  nameWithType: IPersonAgent.NormalizeRanksAsync
  fullName: SuperOffice.CRM.Services.IPersonAgent.NormalizeRanksAsync
