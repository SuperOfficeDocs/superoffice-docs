### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Services.LicenseResult
  commentId: T:SuperOffice.CRM.Services.LicenseResult
  id: LicenseResult
  parent: SuperOffice.CRM.Services
  children:
  - SuperOffice.CRM.Services.LicenseResult.#ctor
  - SuperOffice.CRM.Services.LicenseResult.Reason
  - SuperOffice.CRM.Services.LicenseResult.Succeeded
  - SuperOffice.CRM.Services.LicenseResult.ToString
  - SuperOffice.CRM.Services.LicenseResult.ToString(System.String)
  langs:
  - csharp
  - vb
  name: LicenseResult
  nameWithType: LicenseResult
  fullName: SuperOffice.CRM.Services.LicenseResult
  type: Class
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCarrier object for LicenseResult.\nServices for the LicenseResult Carrier is available from the <xref href=\"SuperOffice.CRM.Services.ILicenseAgent\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: 'public class LicenseResult : Carrier'
    content.vb: >-
      Public Class LicenseResult

          Inherits Carrier
  seealso:
  - linkId: SuperOffice.CRM.Services.LicenseAgent
    commentId: T:SuperOffice.CRM.Services.LicenseAgent
  - linkId: SuperOffice.CRM.Services.ILicenseAgent
    commentId: T:SuperOffice.CRM.Services.ILicenseAgent
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Services.LicenseResult.#ctor
  commentId: M:SuperOffice.CRM.Services.LicenseResult.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.Services.LicenseResult
  langs:
  - csharp
  - vb
  name: LicenseResult()
  nameWithType: LicenseResult.LicenseResult()
  fullName: SuperOffice.CRM.Services.LicenseResult.LicenseResult()
  type: Constructor
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nDefault constructor\n"
  syntax:
    content: public LicenseResult()
    content.vb: Public Sub New
  overload: SuperOffice.CRM.Services.LicenseResult.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.LicenseResult.ToString
  commentId: M:SuperOffice.CRM.Services.LicenseResult.ToString
  id: ToString
  parent: SuperOffice.CRM.Services.LicenseResult
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: LicenseResult.ToString()
  fullName: SuperOffice.CRM.Services.LicenseResult.ToString()
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nReturns the carrier contents as a formatted string.\n"
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: The carrier contents.
    content.vb: Public Overrides Function ToString As String
  overload: SuperOffice.CRM.Services.LicenseResult.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.CRM.Services.LicenseResult.ToString(System.String)
  commentId: M:SuperOffice.CRM.Services.LicenseResult.ToString(System.String)
  id: ToString(System.String)
  parent: SuperOffice.CRM.Services.LicenseResult
  langs:
  - csharp
  - vb
  name: ToString(String)
  nameWithType: LicenseResult.ToString(String)
  fullName: SuperOffice.CRM.Services.LicenseResult.ToString(System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nReturns the carrier contents as a formatted string, useful for debugging.\nEach line in the output is prefixed with the input value.\n"
  syntax:
    content: public string ToString(string prefix)
    parameters:
    - id: prefix
      type: System.String
      description: The line prefix (typically used for indenting)
    return:
      type: System.String
      description: The carrier contents.
    content.vb: Public Function ToString(prefix As String) As String
  overload: SuperOffice.CRM.Services.LicenseResult.ToString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.LicenseResult.Succeeded
  commentId: P:SuperOffice.CRM.Services.LicenseResult.Succeeded
  id: Succeeded
  parent: SuperOffice.CRM.Services.LicenseResult
  langs:
  - csharp
  - vb
  name: Succeeded
  nameWithType: LicenseResult.Succeeded
  fullName: SuperOffice.CRM.Services.LicenseResult.Succeeded
  type: Property
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\n\n"
  syntax:
    content: public virtual bool Succeeded { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable Property Succeeded As Boolean
  overload: SuperOffice.CRM.Services.LicenseResult.Succeeded*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Services.LicenseResult.Reason
  commentId: P:SuperOffice.CRM.Services.LicenseResult.Reason
  id: Reason
  parent: SuperOffice.CRM.Services.LicenseResult
  langs:
  - csharp
  - vb
  name: Reason
  nameWithType: LicenseResult.Reason
  fullName: SuperOffice.CRM.Services.LicenseResult.Reason
  type: Property
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\n\n"
  syntax:
    content: public virtual string Reason { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property Reason As String
  overload: SuperOffice.CRM.Services.LicenseResult.Reason*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.CRM.Services.LicenseAgent
  commentId: T:SuperOffice.CRM.Services.LicenseAgent
  isExternal: true
  name: LicenseAgent
  nameWithType: LicenseAgent
  fullName: SuperOffice.CRM.Services.LicenseAgent
- uid: SuperOffice.CRM.Services.ILicenseAgent
  commentId: T:SuperOffice.CRM.Services.ILicenseAgent
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: ILicenseAgent
  nameWithType: ILicenseAgent
  fullName: SuperOffice.CRM.Services.ILicenseAgent
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Services.LicenseResult.#ctor*
  commentId: Overload:SuperOffice.CRM.Services.LicenseResult.#ctor
  isExternal: true
  name: LicenseResult
  nameWithType: LicenseResult.LicenseResult
  fullName: SuperOffice.CRM.Services.LicenseResult.LicenseResult
- uid: SuperOffice.CRM.Services.LicenseResult.ToString*
  commentId: Overload:SuperOffice.CRM.Services.LicenseResult.ToString
  isExternal: true
  name: ToString
  nameWithType: LicenseResult.ToString
  fullName: SuperOffice.CRM.Services.LicenseResult.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.Services.LicenseResult.Succeeded*
  commentId: Overload:SuperOffice.CRM.Services.LicenseResult.Succeeded
  isExternal: true
  name: Succeeded
  nameWithType: LicenseResult.Succeeded
  fullName: SuperOffice.CRM.Services.LicenseResult.Succeeded
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.CRM.Services.LicenseResult.Reason*
  commentId: Overload:SuperOffice.CRM.Services.LicenseResult.Reason
  isExternal: true
  name: Reason
  nameWithType: LicenseResult.Reason
  fullName: SuperOffice.CRM.Services.LicenseResult.Reason
