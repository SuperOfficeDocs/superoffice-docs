### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Services.IDocumentAgent
  commentId: T:SuperOffice.CRM.Services.IDocumentAgent
  id: IDocumentAgent
  parent: SuperOffice.CRM.Services
  children:
  - SuperOffice.CRM.Services.IDocumentAgent.CheckinDocument(System.Int32,System.String[],System.String,System.String[])
  - SuperOffice.CRM.Services.IDocumentAgent.CheckoutDocument(System.Int32,System.String[])
  - SuperOffice.CRM.Services.IDocumentAgent.CreateDefaultDocumentEntity
  - SuperOffice.CRM.Services.IDocumentAgent.CreateDefaultDocumentEntityFromSuggestion(System.Int32)
  - SuperOffice.CRM.Services.IDocumentAgent.CreateDefaultDocumentPreview
  - SuperOffice.CRM.Services.IDocumentAgent.CreateDefaultSuggestedDocumentEntity
  - SuperOffice.CRM.Services.IDocumentAgent.CreateDefaultTemplateVariablesParameters
  - SuperOffice.CRM.Services.IDocumentAgent.CreateDocumentStream(SuperOffice.CRM.Services.DocumentEntity,System.Boolean)
  - SuperOffice.CRM.Services.IDocumentAgent.CreateNewPhysicalDocumentFromTemplate(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String)
  - SuperOffice.CRM.Services.IDocumentAgent.CreateNewPhysicalDocumentFromTemplateWithCustomTags(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String[],System.String[],System.String)
  - SuperOffice.CRM.Services.IDocumentAgent.CreateNewPhysicalDocumentFromTemplateWithCustomTags2(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,SuperOffice.CRM.Services.StringDictionary,System.String)
  - SuperOffice.CRM.Services.IDocumentAgent.CreateNewPhysicalMailMergeDocumentFromTemplate(System.Int32,System.String)
  - SuperOffice.CRM.Services.IDocumentAgent.CreateTempFile(System.String,System.IO.Stream)
  - SuperOffice.CRM.Services.IDocumentAgent.DeleteDocumentEntity(System.Int32)
  - SuperOffice.CRM.Services.IDocumentAgent.DeletePhysicalDocument(System.Int32,System.String[])
  - SuperOffice.CRM.Services.IDocumentAgent.DeleteTempFile(System.String)
  - SuperOffice.CRM.Services.IDocumentAgent.ExecuteDocumentCommand(System.Int32,System.String,System.String[],System.String,System.String[])
  - SuperOffice.CRM.Services.IDocumentAgent.GetAppointmentDocuments(System.Int32)
  - SuperOffice.CRM.Services.IDocumentAgent.GetCheckoutState(System.Int32)
  - SuperOffice.CRM.Services.IDocumentAgent.GetContactDocuments(System.Int32,System.DateTime,System.DateTime,System.Int32)
  - SuperOffice.CRM.Services.IDocumentAgent.GetContactDocumentsByTemplateHeading(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32)
  - SuperOffice.CRM.Services.IDocumentAgent.GetContactDocumentsByTemplateType(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32)
  - SuperOffice.CRM.Services.IDocumentAgent.GetContactDocumentsByTemplateTypes(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[])
  - SuperOffice.CRM.Services.IDocumentAgent.GetDocument(System.Int32)
  - SuperOffice.CRM.Services.IDocumentAgent.GetDocumentCommands(System.Int32,System.String[])
  - SuperOffice.CRM.Services.IDocumentAgent.GetDocumentEntity(System.Int32)
  - SuperOffice.CRM.Services.IDocumentAgent.GetDocumentLength(System.Int32,System.String)
  - SuperOffice.CRM.Services.IDocumentAgent.GetDocumentList(System.Int32[])
  - SuperOffice.CRM.Services.IDocumentAgent.GetDocumentProperties(System.Int32,System.String[])
  - SuperOffice.CRM.Services.IDocumentAgent.GetDocumentsByTemplateHeading(System.Int32)
  - SuperOffice.CRM.Services.IDocumentAgent.GetDocumentStream(System.Int32)
  - SuperOffice.CRM.Services.IDocumentAgent.GetDocumentStreamFromEntity(SuperOffice.CRM.Services.DocumentEntity)
  - SuperOffice.CRM.Services.IDocumentAgent.GetDocumentUrl(System.Int32,System.String,System.Boolean)
  - SuperOffice.CRM.Services.IDocumentAgent.GetMyPublishedDocuments
  - SuperOffice.CRM.Services.IDocumentAgent.GetPersonDocuments(System.Int32)
  - SuperOffice.CRM.Services.IDocumentAgent.GetPersonDocumentsByDate(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32)
  - SuperOffice.CRM.Services.IDocumentAgent.GetPersonDocumentsByTemplateHeading(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32)
  - SuperOffice.CRM.Services.IDocumentAgent.GetPersonDocumentsByTemplateType(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32)
  - SuperOffice.CRM.Services.IDocumentAgent.GetPersonDocumentsByTemplateTypes(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32[])
  - SuperOffice.CRM.Services.IDocumentAgent.GetPluginCapabilities(System.Int32)
  - SuperOffice.CRM.Services.IDocumentAgent.GetPluginList
  - SuperOffice.CRM.Services.IDocumentAgent.GetPreviewDocumentStream(System.Int32)
  - SuperOffice.CRM.Services.IDocumentAgent.GetProjectDocuments(System.Int32,System.DateTime,System.DateTime,System.Int32)
  - SuperOffice.CRM.Services.IDocumentAgent.GetProjectDocumentsByTemplateHeading(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32)
  - SuperOffice.CRM.Services.IDocumentAgent.GetProjectDocumentsByTemplateType(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32)
  - SuperOffice.CRM.Services.IDocumentAgent.GetProjectDocumentsByTemplateTypes(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[])
  - SuperOffice.CRM.Services.IDocumentAgent.GetProjectMemberDocuments(System.Int32,System.DateTime,System.DateTime,System.Int32)
  - SuperOffice.CRM.Services.IDocumentAgent.GetProjectMemberDocumentsByTemplateHeading(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32)
  - SuperOffice.CRM.Services.IDocumentAgent.GetProjectMemberDocumentsByTemplateType(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32)
  - SuperOffice.CRM.Services.IDocumentAgent.GetProjectMemberDocumentsByTemplateTypes(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[])
  - SuperOffice.CRM.Services.IDocumentAgent.GetPublishedDocument(System.Int32)
  - SuperOffice.CRM.Services.IDocumentAgent.GetPublishedDocuments(System.Int32[])
  - SuperOffice.CRM.Services.IDocumentAgent.GetPublishedDocumentsByDate(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32)
  - SuperOffice.CRM.Services.IDocumentAgent.GetPublishedPersonDocumentsByDate(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32)
  - SuperOffice.CRM.Services.IDocumentAgent.GetPublishedProjectDocuments(System.Int32)
  - SuperOffice.CRM.Services.IDocumentAgent.GetSaleDocuments(System.Int32)
  - SuperOffice.CRM.Services.IDocumentAgent.GetSanitizedDocumentStream(System.Int32)
  - SuperOffice.CRM.Services.IDocumentAgent.GetSanitizedTemplateStream(System.String,System.Boolean,System.String)
  - SuperOffice.CRM.Services.IDocumentAgent.GetSanitizedTemplateStreamFromId(System.Int32,System.String)
  - SuperOffice.CRM.Services.IDocumentAgent.GetSuggestedDocumentEntity(System.Int32)
  - SuperOffice.CRM.Services.IDocumentAgent.GetTempFile(System.String)
  - SuperOffice.CRM.Services.IDocumentAgent.GetTemplateStream(System.String,System.Boolean,System.String)
  - SuperOffice.CRM.Services.IDocumentAgent.GetTemplateStreamFromId(System.Int32,System.String)
  - SuperOffice.CRM.Services.IDocumentAgent.GetUnsanitizedPreviewDocumentStream(System.Int32)
  - SuperOffice.CRM.Services.IDocumentAgent.GetVersionList(System.Int32)
  - SuperOffice.CRM.Services.IDocumentAgent.RenameDocument(System.Int32,System.String)
  - SuperOffice.CRM.Services.IDocumentAgent.SaveDocumentEntity(SuperOffice.CRM.Services.DocumentEntity)
  - SuperOffice.CRM.Services.IDocumentAgent.SaveDocumentTemplateStream(System.Int32,System.IO.Stream,System.String,System.Int32)
  - SuperOffice.CRM.Services.IDocumentAgent.SavePrivacyReport(System.String,System.String,System.Int32)
  - SuperOffice.CRM.Services.IDocumentAgent.SaveSuggestedDocumentEntity(SuperOffice.CRM.Services.SuggestedDocumentEntity)
  - SuperOffice.CRM.Services.IDocumentAgent.SetDocumentStream(SuperOffice.CRM.Services.DocumentEntity,System.IO.Stream,System.Boolean)
  - SuperOffice.CRM.Services.IDocumentAgent.SetDocumentStreamFromId(System.Int32,System.IO.Stream)
  - SuperOffice.CRM.Services.IDocumentAgent.SetTemplateStream(System.String,System.Boolean,System.IO.Stream)
  - SuperOffice.CRM.Services.IDocumentAgent.SubstituteMergeDocumentTemplateVariables(System.Int32,System.Int32,System.String[],System.String[])
  - SuperOffice.CRM.Services.IDocumentAgent.SubstituteMergeDocumentTemplateVariables2(System.Int32,System.Int32,SuperOffice.CRM.Services.StringDictionary)
  - SuperOffice.CRM.Services.IDocumentAgent.SubstituteMergeDocumentTemplateVariablesEx(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String[],System.String[])
  - SuperOffice.CRM.Services.IDocumentAgent.SubstituteMergeDocumentTemplateVariablesEx2(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,SuperOffice.CRM.Services.StringDictionary)
  - SuperOffice.CRM.Services.IDocumentAgent.SubstituteTemplateVariables(System.String,SuperOffice.Data.GeneratorEncoding,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String)
  - SuperOffice.CRM.Services.IDocumentAgent.SubstituteTemplateVariablesEx(SuperOffice.CRM.Services.TemplateVariablesParameters)
  - SuperOffice.CRM.Services.IDocumentAgent.SubstituteTemplateVariablesWithCustomTags(System.String,SuperOffice.Data.GeneratorEncoding,System.String[],System.String[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String)
  - SuperOffice.CRM.Services.IDocumentAgent.SubstituteTemplateVariablesWithCustomTags2(System.String,SuperOffice.Data.GeneratorEncoding,SuperOffice.CRM.Services.StringDictionary,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String)
  - SuperOffice.CRM.Services.IDocumentAgent.UndoCheckoutDocument(System.Int32,System.String[])
  - SuperOffice.CRM.Services.IDocumentAgent.ValidateDocumentEntity(SuperOffice.CRM.Services.DocumentEntity)
  - SuperOffice.CRM.Services.IDocumentAgent.VerifyGetDocumentStream(System.Int32)
  langs:
  - csharp
  - vb
  name: IDocumentAgent
  nameWithType: IDocumentAgent
  fullName: SuperOffice.CRM.Services.IDocumentAgent
  type: Interface
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nInterface for the Document Agent\nCollection of all services that works with Document data. This is services for the document information, not the physical document themselves. These are handled by the BLOB service methods.\n"
  example:
  - "\n<pre><code>  using SuperOffice;\n  using SuperOffice.CRM.Services;\n\n  using (SoSession mySession = SoSession.Authenticate(&quot;user&quot;, &quot;pass&quot;))\n  {\n     using (DocumentAgent agent = new DocumentAgent())\n     {\n        // call methods on agent here...\n     }\n  }</code></pre>\n"
  syntax:
    content: >-
      [Agent("Document Agent", "Interface for the Document Agent. Collection of all services that works with Document data. This is services for the document information, not the physical document themselves. These are handled by the BLOB service methods.")]

      public interface IDocumentAgent : IAgent
    content.vb: >-
      <Agent("Document Agent", "Interface for the Document Agent. Collection of all services that works with Document data. This is services for the document information, not the physical document themselves. These are handled by the BLOB service methods.")>

      Public Interface IDocumentAgent

          Inherits IAgent
  attributes:
  - type: SuperOffice.CRM.Services.Reflection.AgentAttribute
    ctor: SuperOffice.CRM.Services.Reflection.AgentAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Document Agent
    - type: System.String
      value: Interface for the Document Agent. Collection of all services that works with Document data. This is services for the document information, not the physical document themselves. These are handled by the BLOB service methods.
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.CRM.Services.IDocumentAgent.CreateDefaultDocumentEntity
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.CreateDefaultDocumentEntity
  id: CreateDefaultDocumentEntity
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultDocumentEntity()
  nameWithType: IDocumentAgent.CreateDefaultDocumentEntity()
  fullName: SuperOffice.CRM.Services.IDocumentAgent.CreateDefaultDocumentEntity()
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nLoading default values into a new DocumentEntity.\nNetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: DocumentEntity CreateDefaultDocumentEntity()
    return:
      type: SuperOffice.CRM.Services.DocumentEntity
      description: New DocumentEntity with default values
    content.vb: Function CreateDefaultDocumentEntity As DocumentEntity
  overload: SuperOffice.CRM.Services.IDocumentAgent.CreateDefaultDocumentEntity*
- uid: SuperOffice.CRM.Services.IDocumentAgent.SaveDocumentEntity(SuperOffice.CRM.Services.DocumentEntity)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.SaveDocumentEntity(SuperOffice.CRM.Services.DocumentEntity)
  id: SaveDocumentEntity(SuperOffice.CRM.Services.DocumentEntity)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: SaveDocumentEntity(DocumentEntity)
  nameWithType: IDocumentAgent.SaveDocumentEntity(DocumentEntity)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.SaveDocumentEntity(SuperOffice.CRM.Services.DocumentEntity)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nUpdates the existing DocumentEntity or creates a new DocumentEntity if the id parameter is empty\n"
  syntax:
    content: DocumentEntity SaveDocumentEntity(DocumentEntity documentEntity)
    parameters:
    - id: documentEntity
      type: SuperOffice.CRM.Services.DocumentEntity
      description: The DocumentEntity that is saved.
    return:
      type: SuperOffice.CRM.Services.DocumentEntity
      description: New or updated DocumentEntity
    content.vb: Function SaveDocumentEntity(documentEntity As DocumentEntity) As DocumentEntity
  overload: SuperOffice.CRM.Services.IDocumentAgent.SaveDocumentEntity*
- uid: SuperOffice.CRM.Services.IDocumentAgent.DeleteDocumentEntity(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.DeleteDocumentEntity(System.Int32)
  id: DeleteDocumentEntity(System.Int32)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: DeleteDocumentEntity(Int32)
  nameWithType: IDocumentAgent.DeleteDocumentEntity(Int32)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.DeleteDocumentEntity(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nDeletes the DocumentEntity\n"
  syntax:
    content: void DeleteDocumentEntity(int documentEntityId)
    parameters:
    - id: documentEntityId
      type: System.Int32
      description: The identity of the DocumentEntity
    content.vb: Sub DeleteDocumentEntity(documentEntityId As Integer)
  overload: SuperOffice.CRM.Services.IDocumentAgent.DeleteDocumentEntity*
- uid: SuperOffice.CRM.Services.IDocumentAgent.CreateDefaultDocumentPreview
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.CreateDefaultDocumentPreview
  id: CreateDefaultDocumentPreview
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultDocumentPreview()
  nameWithType: IDocumentAgent.CreateDefaultDocumentPreview()
  fullName: SuperOffice.CRM.Services.IDocumentAgent.CreateDefaultDocumentPreview()
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nLoading default values into a new DocumentPreview.\nNetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: DocumentPreview CreateDefaultDocumentPreview()
    return:
      type: SuperOffice.CRM.Services.DocumentPreview
      description: New DocumentPreview with default values
    content.vb: Function CreateDefaultDocumentPreview As DocumentPreview
  overload: SuperOffice.CRM.Services.IDocumentAgent.CreateDefaultDocumentPreview*
- uid: SuperOffice.CRM.Services.IDocumentAgent.CreateDefaultSuggestedDocumentEntity
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.CreateDefaultSuggestedDocumentEntity
  id: CreateDefaultSuggestedDocumentEntity
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultSuggestedDocumentEntity()
  nameWithType: IDocumentAgent.CreateDefaultSuggestedDocumentEntity()
  fullName: SuperOffice.CRM.Services.IDocumentAgent.CreateDefaultSuggestedDocumentEntity()
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nLoading default values into a new SuggestedDocumentEntity.\nNetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: SuggestedDocumentEntity CreateDefaultSuggestedDocumentEntity()
    return:
      type: SuperOffice.CRM.Services.SuggestedDocumentEntity
      description: New SuggestedDocumentEntity with default values
    content.vb: Function CreateDefaultSuggestedDocumentEntity As SuggestedDocumentEntity
  overload: SuperOffice.CRM.Services.IDocumentAgent.CreateDefaultSuggestedDocumentEntity*
- uid: SuperOffice.CRM.Services.IDocumentAgent.SaveSuggestedDocumentEntity(SuperOffice.CRM.Services.SuggestedDocumentEntity)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.SaveSuggestedDocumentEntity(SuperOffice.CRM.Services.SuggestedDocumentEntity)
  id: SaveSuggestedDocumentEntity(SuperOffice.CRM.Services.SuggestedDocumentEntity)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: SaveSuggestedDocumentEntity(SuggestedDocumentEntity)
  nameWithType: IDocumentAgent.SaveSuggestedDocumentEntity(SuggestedDocumentEntity)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.SaveSuggestedDocumentEntity(SuperOffice.CRM.Services.SuggestedDocumentEntity)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nUpdates the existing SuggestedDocumentEntity or creates a new SuggestedDocumentEntity if the id parameter is empty\n"
  syntax:
    content: SuggestedDocumentEntity SaveSuggestedDocumentEntity(SuggestedDocumentEntity suggestedDocumentEntity)
    parameters:
    - id: suggestedDocumentEntity
      type: SuperOffice.CRM.Services.SuggestedDocumentEntity
      description: The SuggestedDocumentEntity that is saved.
    return:
      type: SuperOffice.CRM.Services.SuggestedDocumentEntity
      description: New or updated SuggestedDocumentEntity
    content.vb: Function SaveSuggestedDocumentEntity(suggestedDocumentEntity As SuggestedDocumentEntity) As SuggestedDocumentEntity
  overload: SuperOffice.CRM.Services.IDocumentAgent.SaveSuggestedDocumentEntity*
- uid: SuperOffice.CRM.Services.IDocumentAgent.CreateDefaultTemplateVariablesParameters
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.CreateDefaultTemplateVariablesParameters
  id: CreateDefaultTemplateVariablesParameters
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultTemplateVariablesParameters()
  nameWithType: IDocumentAgent.CreateDefaultTemplateVariablesParameters()
  fullName: SuperOffice.CRM.Services.IDocumentAgent.CreateDefaultTemplateVariablesParameters()
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nLoading default values into a new TemplateVariablesParameters.\nNetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: TemplateVariablesParameters CreateDefaultTemplateVariablesParameters()
    return:
      type: SuperOffice.CRM.Services.TemplateVariablesParameters
      description: New TemplateVariablesParameters with default values
    content.vb: Function CreateDefaultTemplateVariablesParameters As TemplateVariablesParameters
  overload: SuperOffice.CRM.Services.IDocumentAgent.CreateDefaultTemplateVariablesParameters*
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetDocument(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.GetDocument(System.Int32)
  id: GetDocument(System.Int32)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: GetDocument(Int32)
  nameWithType: IDocumentAgent.GetDocument(Int32)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetDocument(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets a Document object.                        \n"
  syntax:
    content: Document GetDocument(int documentId)
    parameters:
    - id: documentId
      type: System.Int32
      description: The identifier of the Document object
    return:
      type: SuperOffice.CRM.Services.Document
      description: Document
    content.vb: Function GetDocument(documentId As Integer) As Document
  overload: SuperOffice.CRM.Services.IDocumentAgent.GetDocument*
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetDocumentEntity(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.GetDocumentEntity(System.Int32)
  id: GetDocumentEntity(System.Int32)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: GetDocumentEntity(Int32)
  nameWithType: IDocumentAgent.GetDocumentEntity(Int32)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetDocumentEntity(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets a DocumentEntity object.                        \n"
  syntax:
    content: DocumentEntity GetDocumentEntity(int documentEntityId)
    parameters:
    - id: documentEntityId
      type: System.Int32
      description: The identifier of the DocumentEntity object
    return:
      type: SuperOffice.CRM.Services.DocumentEntity
      description: DocumentEntity
    content.vb: Function GetDocumentEntity(documentEntityId As Integer) As DocumentEntity
  overload: SuperOffice.CRM.Services.IDocumentAgent.GetDocumentEntity*
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetDocumentStreamFromEntity(SuperOffice.CRM.Services.DocumentEntity)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.GetDocumentStreamFromEntity(SuperOffice.CRM.Services.DocumentEntity)
  id: GetDocumentStreamFromEntity(SuperOffice.CRM.Services.DocumentEntity)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: GetDocumentStreamFromEntity(DocumentEntity)
  nameWithType: IDocumentAgent.GetDocumentStreamFromEntity(DocumentEntity)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetDocumentStreamFromEntity(SuperOffice.CRM.Services.DocumentEntity)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet the document as a stream\n"
  syntax:
    content: Stream GetDocumentStreamFromEntity(DocumentEntity documentEntity)
    parameters:
    - id: documentEntity
      type: SuperOffice.CRM.Services.DocumentEntity
      description: The document entity object that refers to the binary data (document)
    return:
      type: System.IO.Stream
      description: The document as a Stream
    content.vb: Function GetDocumentStreamFromEntity(documentEntity As DocumentEntity) As Stream
  overload: SuperOffice.CRM.Services.IDocumentAgent.GetDocumentStreamFromEntity*
- uid: SuperOffice.CRM.Services.IDocumentAgent.SetDocumentStream(SuperOffice.CRM.Services.DocumentEntity,System.IO.Stream,System.Boolean)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.SetDocumentStream(SuperOffice.CRM.Services.DocumentEntity,System.IO.Stream,System.Boolean)
  id: SetDocumentStream(SuperOffice.CRM.Services.DocumentEntity,System.IO.Stream,System.Boolean)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: SetDocumentStream(DocumentEntity, Stream, Boolean)
  nameWithType: IDocumentAgent.SetDocumentStream(DocumentEntity, Stream, Boolean)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.SetDocumentStream(SuperOffice.CRM.Services.DocumentEntity, System.IO.Stream, System.Boolean)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nStore a document&apos;s contents from its stream. Since there is a potential for a name conflict (the file name stored by the document entity earlier may prove to be invalid), the (possibly amended) document entity is returned. The client should not assume that any earlier, cached entity information is valid.\n"
  syntax:
    content: DocumentEntity SetDocumentStream(DocumentEntity documentEntity, Stream stream, bool overwriteExistingData)
    parameters:
    - id: documentEntity
      type: SuperOffice.CRM.Services.DocumentEntity
      description: The document entity object that the binary data (document) should be stored to. Its file name may be amended by this call, see the return value
    - id: stream
      type: System.IO.Stream
      description: The document as a stream.
    - id: overwriteExistingData
      type: System.Boolean
      description: If true, the stream will overwrite existing data stored for this record in the document archive; this works only for documents that already have a physical document in existence. If false, the call will only work for a document that has no physical document in the archive, and such a physical document will be created.
    return:
      type: SuperOffice.CRM.Services.DocumentEntity
      description: Since there is a potential for a name conflict (the file name stored by the document entity earlier may prove to be invalid), the (possibly amended) document entity is returned. The client should not assume that any earlier, cached entity information is valid.
    content.vb: Function SetDocumentStream(documentEntity As DocumentEntity, stream As Stream, overwriteExistingData As Boolean) As DocumentEntity
  overload: SuperOffice.CRM.Services.IDocumentAgent.SetDocumentStream*
- uid: SuperOffice.CRM.Services.IDocumentAgent.CreateDocumentStream(SuperOffice.CRM.Services.DocumentEntity,System.Boolean)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.CreateDocumentStream(SuperOffice.CRM.Services.DocumentEntity,System.Boolean)
  id: CreateDocumentStream(SuperOffice.CRM.Services.DocumentEntity,System.Boolean)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: CreateDocumentStream(DocumentEntity, Boolean)
  nameWithType: IDocumentAgent.CreateDocumentStream(DocumentEntity, Boolean)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.CreateDocumentStream(SuperOffice.CRM.Services.DocumentEntity, System.Boolean)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCreates a new Stream that can be used to store the document in the file archive.\n"
  syntax:
    content: Stream CreateDocumentStream(DocumentEntity documentEntity, bool overwriteExistingData)
    parameters:
    - id: documentEntity
      type: SuperOffice.CRM.Services.DocumentEntity
      description: The document the stream belongs to
    - id: overwriteExistingData
      type: System.Boolean
      description: If true, the stream will overwrite existing data stored for this record in the document archive
    return:
      type: System.IO.Stream
      description: A writeable stream. When written and closed, the stream will become the new document content, subject to locking and versioning constraints.
    content.vb: Function CreateDocumentStream(documentEntity As DocumentEntity, overwriteExistingData As Boolean) As Stream
  overload: SuperOffice.CRM.Services.IDocumentAgent.CreateDocumentStream*
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetTemplateStream(System.String,System.Boolean,System.String)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.GetTemplateStream(System.String,System.Boolean,System.String)
  id: GetTemplateStream(System.String,System.Boolean,System.String)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: GetTemplateStream(String, Boolean, String)
  nameWithType: IDocumentAgent.GetTemplateStream(String, Boolean, String)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetTemplateStream(System.String, System.Boolean, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nRetrieve a stream to a mail template based on its name\n"
  syntax:
    content: Stream GetTemplateStream(string templateName, bool allowPersonal, string uiCulture)
    parameters:
    - id: templateName
      type: System.String
      description: Filename of mail template to retrieve
    - id: allowPersonal
      type: System.Boolean
      description: If true, try looking up template in personal area before looking in shared document template area
    - id: uiCulture
      type: System.String
      description: 'Language variation of template to use. (ISO code: &quot;en-US&quot; or &quot;nb-NO&quot; etc). Used to select a template of the appropriate language. Can be overridden in SO ARC by user preference &quot;PreferDocLang&quot;.'
    return:
      type: System.IO.Stream
      description: Open stream to the mail template
    content.vb: Function GetTemplateStream(templateName As String, allowPersonal As Boolean, uiCulture As String) As Stream
  overload: SuperOffice.CRM.Services.IDocumentAgent.GetTemplateStream*
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetSanitizedTemplateStream(System.String,System.Boolean,System.String)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.GetSanitizedTemplateStream(System.String,System.Boolean,System.String)
  id: GetSanitizedTemplateStream(System.String,System.Boolean,System.String)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: GetSanitizedTemplateStream(String, Boolean, String)
  nameWithType: IDocumentAgent.GetSanitizedTemplateStream(String, Boolean, String)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetSanitizedTemplateStream(System.String, System.Boolean, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nRetrieve a stream to a mail template based on its name. Sanitizes the contents if possible.\n"
  syntax:
    content: Stream GetSanitizedTemplateStream(string templateName, bool allowPersonal, string uiCulture)
    parameters:
    - id: templateName
      type: System.String
      description: Filename of mail template to retrieve
    - id: allowPersonal
      type: System.Boolean
      description: If true, try looking up template in personal area before looking in shared document template area
    - id: uiCulture
      type: System.String
      description: 'Language variation of template to use. (ISO code: &quot;en-US&quot; or &quot;nb-NO&quot; etc). Used to select a template of the appropriate language. Can be overridden in SO ARC by user preference &quot;PreferDocLang&quot;.'
    return:
      type: System.IO.Stream
      description: Open stream to the mail template
    content.vb: Function GetSanitizedTemplateStream(templateName As String, allowPersonal As Boolean, uiCulture As String) As Stream
  overload: SuperOffice.CRM.Services.IDocumentAgent.GetSanitizedTemplateStream*
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetTemplateStreamFromId(System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.GetTemplateStreamFromId(System.Int32,System.String)
  id: GetTemplateStreamFromId(System.Int32,System.String)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: GetTemplateStreamFromId(Int32, String)
  nameWithType: IDocumentAgent.GetTemplateStreamFromId(Int32, String)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetTemplateStreamFromId(System.Int32, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nRetrieve a stream to a document template based on its id\n"
  syntax:
    content: Stream GetTemplateStreamFromId(int templateId, string uiCulture)
    parameters:
    - id: templateId
      type: System.Int32
      description: Id of template to retrieve
    - id: uiCulture
      type: System.String
      description: 'Language variation of template to use. (ISO code: &quot;en-US&quot; or &quot;nb-NO&quot; etc). Used to select a template of the appropriate language. Can be overridden in SO ARC by user preference &quot;PreferDocLang&quot;.'
    return:
      type: System.IO.Stream
      description: Open stream to the template
    content.vb: Function GetTemplateStreamFromId(templateId As Integer, uiCulture As String) As Stream
  overload: SuperOffice.CRM.Services.IDocumentAgent.GetTemplateStreamFromId*
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetSanitizedTemplateStreamFromId(System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.GetSanitizedTemplateStreamFromId(System.Int32,System.String)
  id: GetSanitizedTemplateStreamFromId(System.Int32,System.String)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: GetSanitizedTemplateStreamFromId(Int32, String)
  nameWithType: IDocumentAgent.GetSanitizedTemplateStreamFromId(Int32, String)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetSanitizedTemplateStreamFromId(System.Int32, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nRetrieve a stream to a document template based on its id. Sanitizes the contents if possible.\n"
  syntax:
    content: Stream GetSanitizedTemplateStreamFromId(int templateId, string uiCulture)
    parameters:
    - id: templateId
      type: System.Int32
      description: Id of template to retrieve
    - id: uiCulture
      type: System.String
      description: 'Language variation of template to use. (ISO code: &quot;en-US&quot; or &quot;nb-NO&quot; etc). Used to select a template of the appropriate language. Can be overridden in SO ARC by user preference &quot;PreferDocLang&quot;.'
    return:
      type: System.IO.Stream
      description: Open stream to the template
    content.vb: Function GetSanitizedTemplateStreamFromId(templateId As Integer, uiCulture As String) As Stream
  overload: SuperOffice.CRM.Services.IDocumentAgent.GetSanitizedTemplateStreamFromId*
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetDocumentStream(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.GetDocumentStream(System.Int32)
  id: GetDocumentStream(System.Int32)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: GetDocumentStream(Int32)
  nameWithType: IDocumentAgent.GetDocumentStream(Int32)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetDocumentStream(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet the document content as a stream\n"
  syntax:
    content: Stream GetDocumentStream(int documentId)
    parameters:
    - id: documentId
      type: System.Int32
      description: SuperOffice document id
    return:
      type: System.IO.Stream
      description: The document as a Stream. This stream can be read once and clients should not assume it remains valid after a ReadToEnd or Close.
    content.vb: Function GetDocumentStream(documentId As Integer) As Stream
  overload: SuperOffice.CRM.Services.IDocumentAgent.GetDocumentStream*
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetSanitizedDocumentStream(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.GetSanitizedDocumentStream(System.Int32)
  id: GetSanitizedDocumentStream(System.Int32)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: GetSanitizedDocumentStream(Int32)
  nameWithType: IDocumentAgent.GetSanitizedDocumentStream(Int32)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetSanitizedDocumentStream(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet the document content as a stream. Retrieves a sanitized version if possible\n"
  syntax:
    content: Stream GetSanitizedDocumentStream(int documentId)
    parameters:
    - id: documentId
      type: System.Int32
      description: SuperOffice document id
    return:
      type: System.IO.Stream
      description: The document as a Stream. This stream can be read once and clients should not assume it remains valid after a ReadToEnd or Close.
    content.vb: Function GetSanitizedDocumentStream(documentId As Integer) As Stream
  overload: SuperOffice.CRM.Services.IDocumentAgent.GetSanitizedDocumentStream*
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetPreviewDocumentStream(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.GetPreviewDocumentStream(System.Int32)
  id: GetPreviewDocumentStream(System.Int32)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: GetPreviewDocumentStream(Int32)
  nameWithType: IDocumentAgent.GetPreviewDocumentStream(Int32)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetPreviewDocumentStream(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet the preview version of the document content as a stream. Retrieves a sanitized version if possible\n"
  syntax:
    content: DocumentPreview GetPreviewDocumentStream(int documentId)
    parameters:
    - id: documentId
      type: System.Int32
      description: SuperOffice document id
    return:
      type: SuperOffice.CRM.Services.DocumentPreview
      description: Preview version of the document
    content.vb: Function GetPreviewDocumentStream(documentId As Integer) As DocumentPreview
  overload: SuperOffice.CRM.Services.IDocumentAgent.GetPreviewDocumentStream*
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetUnsanitizedPreviewDocumentStream(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.GetUnsanitizedPreviewDocumentStream(System.Int32)
  id: GetUnsanitizedPreviewDocumentStream(System.Int32)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: GetUnsanitizedPreviewDocumentStream(Int32)
  nameWithType: IDocumentAgent.GetUnsanitizedPreviewDocumentStream(Int32)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetUnsanitizedPreviewDocumentStream(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet the preview version of the document content as a stream. Retrieves an unsanitized version. This has less CPU impact but the caller must sanitize the content before presenting it to the user.\n"
  syntax:
    content: DocumentPreview GetUnsanitizedPreviewDocumentStream(int documentId)
    parameters:
    - id: documentId
      type: System.Int32
      description: SuperOffice document id
    return:
      type: SuperOffice.CRM.Services.DocumentPreview
      description: Unsanitized preview version of the document
    content.vb: Function GetUnsanitizedPreviewDocumentStream(documentId As Integer) As DocumentPreview
  overload: SuperOffice.CRM.Services.IDocumentAgent.GetUnsanitizedPreviewDocumentStream*
- uid: SuperOffice.CRM.Services.IDocumentAgent.CreateNewPhysicalMailMergeDocumentFromTemplate(System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.CreateNewPhysicalMailMergeDocumentFromTemplate(System.Int32,System.String)
  id: CreateNewPhysicalMailMergeDocumentFromTemplate(System.Int32,System.String)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: CreateNewPhysicalMailMergeDocumentFromTemplate(Int32, String)
  nameWithType: IDocumentAgent.CreateNewPhysicalMailMergeDocumentFromTemplate(Int32, String)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.CreateNewPhysicalMailMergeDocumentFromTemplate(System.Int32, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCreate a new physical document based on the documents template. Do not replace template tags, as the document is going to be used as a mail merge source. Use GetDocumentStream to obtain the created documents. Since there is a potential for a name conflict (the file name stored by the document entity earlier may prove to be invalid), the (possibly amended) document entity is returned. The client should not assume that any earlier, cached entity information is valid.\n"
  syntax:
    content: DocumentEntity CreateNewPhysicalMailMergeDocumentFromTemplate(int documentId, string uiCulture)
    parameters:
    - id: documentId
      type: System.Int32
      description: Identifier for a document. The template to use is stored in the document entity.
    - id: uiCulture
      type: System.String
      description: 'Language variation of template to use. (ISO code: &quot;en-US&quot; or &quot;nb-NO&quot; etc). Used to select a template of the appropriate language. Can be overridden in SO ARC by user preference &quot;PreferDocLang&quot;.'
    return:
      type: SuperOffice.CRM.Services.DocumentEntity
      description: The document object with updated info after creating the document.
    content.vb: Function CreateNewPhysicalMailMergeDocumentFromTemplate(documentId As Integer, uiCulture As String) As DocumentEntity
  overload: SuperOffice.CRM.Services.IDocumentAgent.CreateNewPhysicalMailMergeDocumentFromTemplate*
- uid: SuperOffice.CRM.Services.IDocumentAgent.CreateNewPhysicalDocumentFromTemplateWithCustomTags(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String[],System.String[],System.String)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.CreateNewPhysicalDocumentFromTemplateWithCustomTags(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String[],System.String[],System.String)
  id: CreateNewPhysicalDocumentFromTemplateWithCustomTags(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String[],System.String[],System.String)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: CreateNewPhysicalDocumentFromTemplateWithCustomTags(Int32, Int32, Int32, Int32, Int32, Int32, Int32, String[], String[], String)
  nameWithType: IDocumentAgent.CreateNewPhysicalDocumentFromTemplateWithCustomTags(Int32, Int32, Int32, Int32, Int32, Int32, Int32, String[], String[], String)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.CreateNewPhysicalDocumentFromTemplateWithCustomTags(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.String[], System.String[], System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCreate a new physical document based on a document template and store it in the document archive.  Tags are substituted according to the provided id&apos;s.  Use GetDocumentStream to obtain the created document content. Since there is a potential for a name conflict (the file name stored by the document entity earlier may prove to be invalid), the (possibly amended) document entity is returned. The client should not assume that any earlier, cached entity information is valid.\n"
  syntax:
    content: DocumentEntity CreateNewPhysicalDocumentFromTemplateWithCustomTags(int contactId, int personId, int appointmentId, int documentId, int saleId, int selectionId, int projectId, string[] customTags, string[] customValues, string uiCulture)
    parameters:
    - id: contactId
      type: System.Int32
      description: Identifier for a contact. Defaults to document&apos;s contact if 0
    - id: personId
      type: System.Int32
      description: Identifier for a person. Defaults to document&apos;s person if 0
    - id: appointmentId
      type: System.Int32
      description: identifier for an appointment. Defaults to document if 0
    - id: documentId
      type: System.Int32
      description: Identifier for the document
    - id: saleId
      type: System.Int32
      description: Identifier for sale. Defaults to document&apos;s sale if 0.
    - id: selectionId
      type: System.Int32
      description: identifier for selection.
    - id: projectId
      type: System.Int32
      description: identifier for project. Defaults to document&apos;s project if 0
    - id: customTags
      type: System.String[]
      description: Array of custom tag names. Each name should have exactly four characters. There should be exactly one value for each tag, i.e., the lengths of the customTags and customValues arrays should be the same.
    - id: customValues
      type: System.String[]
      description: Array of values for custom tags. There should be exactly one value for each tag, i.e., the lengths of the customTags and customValues arrays should be the same.
    - id: uiCulture
      type: System.String
      description: Language variation of template to use when creating document. (ISO code - &quot;en-US&quot; or &quot;nb-NO&quot; etc). Used to select a template of the appropriate language. Can be overridden in SO ARC by user preference &quot;PreferDocLang&quot;.
    return:
      type: SuperOffice.CRM.Services.DocumentEntity
      description: The document object with updated info after creating the document
    content.vb: Function CreateNewPhysicalDocumentFromTemplateWithCustomTags(contactId As Integer, personId As Integer, appointmentId As Integer, documentId As Integer, saleId As Integer, selectionId As Integer, projectId As Integer, customTags As String(), customValues As String(), uiCulture As String) As DocumentEntity
  overload: SuperOffice.CRM.Services.IDocumentAgent.CreateNewPhysicalDocumentFromTemplateWithCustomTags*
  nameWithType.vb: IDocumentAgent.CreateNewPhysicalDocumentFromTemplateWithCustomTags(Int32, Int32, Int32, Int32, Int32, Int32, Int32, String(), String(), String)
  fullName.vb: SuperOffice.CRM.Services.IDocumentAgent.CreateNewPhysicalDocumentFromTemplateWithCustomTags(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.String(), System.String(), System.String)
  name.vb: CreateNewPhysicalDocumentFromTemplateWithCustomTags(Int32, Int32, Int32, Int32, Int32, Int32, Int32, String(), String(), String)
- uid: SuperOffice.CRM.Services.IDocumentAgent.CreateNewPhysicalDocumentFromTemplateWithCustomTags2(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,SuperOffice.CRM.Services.StringDictionary,System.String)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.CreateNewPhysicalDocumentFromTemplateWithCustomTags2(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,SuperOffice.CRM.Services.StringDictionary,System.String)
  id: CreateNewPhysicalDocumentFromTemplateWithCustomTags2(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,SuperOffice.CRM.Services.StringDictionary,System.String)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: CreateNewPhysicalDocumentFromTemplateWithCustomTags2(Int32, Int32, Int32, Int32, Int32, Int32, Int32, StringDictionary, String)
  nameWithType: IDocumentAgent.CreateNewPhysicalDocumentFromTemplateWithCustomTags2(Int32, Int32, Int32, Int32, Int32, Int32, Int32, StringDictionary, String)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.CreateNewPhysicalDocumentFromTemplateWithCustomTags2(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, SuperOffice.CRM.Services.StringDictionary, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCreate a new physical document based on a document template and store it in the document archive.  Tags are substituted according to the provided id&apos;s.  Use GetDocumentStream to obtain the created document content. Since there is a potential for a name conflict (the file name stored by the document entity earlier may prove to be invalid), the (possibly amended) document entity is returned. The client should not assume that any earlier, cached entity information is valid.\n"
  syntax:
    content: DocumentEntity CreateNewPhysicalDocumentFromTemplateWithCustomTags2(int contactId, int personId, int appointmentId, int documentId, int saleId, int selectionId, int projectId, StringDictionary customTags, string uiCulture)
    parameters:
    - id: contactId
      type: System.Int32
      description: Identifier for a contact. Defaults to document&apos;s contact if 0
    - id: personId
      type: System.Int32
      description: Identifier for a person. Defaults to document&apos;s person if 0
    - id: appointmentId
      type: System.Int32
      description: identifier for an appointment. Defaults to document if 0
    - id: documentId
      type: System.Int32
      description: Identifier for the document
    - id: saleId
      type: System.Int32
      description: Identifier for sale. Defaults to document&apos;s sale if 0.
    - id: selectionId
      type: System.Int32
      description: identifier for selection.
    - id: projectId
      type: System.Int32
      description: identifier for project. Defaults to document&apos;s project if 0
    - id: customTags
      type: SuperOffice.CRM.Services.StringDictionary
      description: Dictionary of custom tag names and values. Each name should have exactly four characters. There should be exactly one value for each tag.
    - id: uiCulture
      type: System.String
      description: Language variation of template to use when creating document. (ISO code - &quot;en-US&quot; or &quot;nb-NO&quot; etc). Used to select a template of the appropriate language. Can be overridden in SO ARC by user preference &quot;PreferDocLang&quot;.
    return:
      type: SuperOffice.CRM.Services.DocumentEntity
      description: The document object with updated info after creating the document
    content.vb: Function CreateNewPhysicalDocumentFromTemplateWithCustomTags2(contactId As Integer, personId As Integer, appointmentId As Integer, documentId As Integer, saleId As Integer, selectionId As Integer, projectId As Integer, customTags As StringDictionary, uiCulture As String) As DocumentEntity
  overload: SuperOffice.CRM.Services.IDocumentAgent.CreateNewPhysicalDocumentFromTemplateWithCustomTags2*
- uid: SuperOffice.CRM.Services.IDocumentAgent.SubstituteTemplateVariables(System.String,SuperOffice.Data.GeneratorEncoding,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.SubstituteTemplateVariables(System.String,SuperOffice.Data.GeneratorEncoding,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String)
  id: SubstituteTemplateVariables(System.String,SuperOffice.Data.GeneratorEncoding,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: SubstituteTemplateVariables(String, GeneratorEncoding, Int32, Int32, Int32, Int32, Int32, Int32, Int32, String)
  nameWithType: IDocumentAgent.SubstituteTemplateVariables(String, GeneratorEncoding, Int32, Int32, Int32, Int32, Int32, Int32, Int32, String)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.SubstituteTemplateVariables(System.String, SuperOffice.Data.GeneratorEncoding, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nParse the source string, and replace any template variable tags with their values, based on the ID&apos;s given in the other parameters.\n"
  syntax:
    content: string SubstituteTemplateVariables(string source, GeneratorEncoding generatorEncoding, int contactId, int personId, int appointmentId, int documentId, int saleId, int selectionId, int projectId, string cultureName)
    parameters:
    - id: source
      type: System.String
      description: Source string to parse for template variables. Such variables must have delimiters corresponding to the standard for the given generator encoding.&lt;p/>Non-text source data (such as the binary content of a .doc file) should be passed in as Base64.
    - id: generatorEncoding
      type: SuperOffice.Data.GeneratorEncoding
      description: Encoding of source string. Non-text formats such as MsWord or Excel should be Base64 encoded in the source string.
    - id: contactId
      type: System.Int32
      description: Identifier for a contact
    - id: personId
      type: System.Int32
      description: Identifier for a person
    - id: appointmentId
      type: System.Int32
      description: Identifier for an appointment
    - id: documentId
      type: System.Int32
      description: Identifier for a document
    - id: saleId
      type: System.Int32
      description: Identifier for a sale
    - id: selectionId
      type: System.Int32
      description: Identifier for a selection
    - id: projectId
      type: System.Int32
      description: Identifier for a project
    - id: cultureName
      type: System.String
      description: Name of culture to be used for culture-sensitive data, such as dates or multi-language texts. Use a blank string to accept whatever current culture is set on the server (possibly not a good choice in multinational organizations with a single server).
    return:
      type: System.String
      description: Source string with templates substituted, using the same encoding as for the source (binary data will be returned in Base64).
    content.vb: Function SubstituteTemplateVariables(source As String, generatorEncoding As GeneratorEncoding, contactId As Integer, personId As Integer, appointmentId As Integer, documentId As Integer, saleId As Integer, selectionId As Integer, projectId As Integer, cultureName As String) As String
  overload: SuperOffice.CRM.Services.IDocumentAgent.SubstituteTemplateVariables*
- uid: SuperOffice.CRM.Services.IDocumentAgent.SubstituteTemplateVariablesWithCustomTags(System.String,SuperOffice.Data.GeneratorEncoding,System.String[],System.String[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.SubstituteTemplateVariablesWithCustomTags(System.String,SuperOffice.Data.GeneratorEncoding,System.String[],System.String[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String)
  id: SubstituteTemplateVariablesWithCustomTags(System.String,SuperOffice.Data.GeneratorEncoding,System.String[],System.String[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: SubstituteTemplateVariablesWithCustomTags(String, GeneratorEncoding, String[], String[], Int32, Int32, Int32, Int32, Int32, Int32, Int32, String)
  nameWithType: IDocumentAgent.SubstituteTemplateVariablesWithCustomTags(String, GeneratorEncoding, String[], String[], Int32, Int32, Int32, Int32, Int32, Int32, Int32, String)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.SubstituteTemplateVariablesWithCustomTags(System.String, SuperOffice.Data.GeneratorEncoding, System.String[], System.String[], System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nParse the source string, and replace any template variable tags with their values, based on the ID&apos;s given in the other parameters.&lt;p/>This method also takes a pair of arrays specifying custom tags and their values; these tags will be available during substitution in addition to all the existing tags. Custom values will override values otherwise set.\n"
  syntax:
    content: string SubstituteTemplateVariablesWithCustomTags(string source, GeneratorEncoding generatorEncoding, string[] customTags, string[] customValues, int contactId, int personId, int appointmentId, int documentId, int saleId, int selectionId, int projectId, string cultureName)
    parameters:
    - id: source
      type: System.String
      description: Source string to parse for template variables. Such variables must have delimiters corresponding to the standard for the given generator encoding.&lt;p/>Non-text source data (such as the binary content of a .doc file) should be passed in as Base64.
    - id: generatorEncoding
      type: SuperOffice.Data.GeneratorEncoding
      description: Encoding of source string. Non-text formats such as MsWord or Excel should be Base64 encoded in the source string.
    - id: customTags
      type: System.String[]
      description: Array of custom tag names. Each name should have exactly four characters. There should be exactly one value for each tag, i.e., the lengths of the customTags and customValues arrays should be the same.
    - id: customValues
      type: System.String[]
      description: Array of values for custom tags. There should be exactly one value for each tag, i.e., the lengths of the customTags and customValues arrays should be the same.
    - id: contactId
      type: System.Int32
      description: Identifier for a contact
    - id: personId
      type: System.Int32
      description: Identifier for a person
    - id: appointmentId
      type: System.Int32
      description: Identifier for an appointment
    - id: documentId
      type: System.Int32
      description: Identifier for a document
    - id: saleId
      type: System.Int32
      description: Identifier for a sale
    - id: selectionId
      type: System.Int32
      description: Identifier for a selection
    - id: projectId
      type: System.Int32
      description: Identifier for a project
    - id: cultureName
      type: System.String
      description: Name of culture to be used for culture-sensitive data, such as dates or multi-language texts. Use a blank string to accept whatever current culture is set on the server (possibly not a good choice in multinational organizations with a single server).
    return:
      type: System.String
      description: Source string with templates substituted, using the same encoding as for the source (binary data will be returned in Base64).
    content.vb: Function SubstituteTemplateVariablesWithCustomTags(source As String, generatorEncoding As GeneratorEncoding, customTags As String(), customValues As String(), contactId As Integer, personId As Integer, appointmentId As Integer, documentId As Integer, saleId As Integer, selectionId As Integer, projectId As Integer, cultureName As String) As String
  overload: SuperOffice.CRM.Services.IDocumentAgent.SubstituteTemplateVariablesWithCustomTags*
  nameWithType.vb: IDocumentAgent.SubstituteTemplateVariablesWithCustomTags(String, GeneratorEncoding, String(), String(), Int32, Int32, Int32, Int32, Int32, Int32, Int32, String)
  fullName.vb: SuperOffice.CRM.Services.IDocumentAgent.SubstituteTemplateVariablesWithCustomTags(System.String, SuperOffice.Data.GeneratorEncoding, System.String(), System.String(), System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.String)
  name.vb: SubstituteTemplateVariablesWithCustomTags(String, GeneratorEncoding, String(), String(), Int32, Int32, Int32, Int32, Int32, Int32, Int32, String)
- uid: SuperOffice.CRM.Services.IDocumentAgent.SubstituteTemplateVariablesWithCustomTags2(System.String,SuperOffice.Data.GeneratorEncoding,SuperOffice.CRM.Services.StringDictionary,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.SubstituteTemplateVariablesWithCustomTags2(System.String,SuperOffice.Data.GeneratorEncoding,SuperOffice.CRM.Services.StringDictionary,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String)
  id: SubstituteTemplateVariablesWithCustomTags2(System.String,SuperOffice.Data.GeneratorEncoding,SuperOffice.CRM.Services.StringDictionary,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: SubstituteTemplateVariablesWithCustomTags2(String, GeneratorEncoding, StringDictionary, Int32, Int32, Int32, Int32, Int32, Int32, Int32, String)
  nameWithType: IDocumentAgent.SubstituteTemplateVariablesWithCustomTags2(String, GeneratorEncoding, StringDictionary, Int32, Int32, Int32, Int32, Int32, Int32, Int32, String)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.SubstituteTemplateVariablesWithCustomTags2(System.String, SuperOffice.Data.GeneratorEncoding, SuperOffice.CRM.Services.StringDictionary, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nParse the source string, and replace any template variable tags with their values, based on the ID&apos;s given in the other parameters.&lt;p/>This method also takes a pair of arrays specifying custom tags and their values; these tags will be available during substitution in addition to all the existing tags. Custom values will override values otherwise set.\n"
  syntax:
    content: string SubstituteTemplateVariablesWithCustomTags2(string source, GeneratorEncoding generatorEncoding, StringDictionary customTags, int contactId, int personId, int appointmentId, int documentId, int saleId, int selectionId, int projectId, string cultureName)
    parameters:
    - id: source
      type: System.String
      description: Source string to parse for template variables. Such variables must have delimiters corresponding to the standard for the given generator encoding.&lt;p/>Non-text source data (such as the binary content of a .doc file) should be passed in as Base64.
    - id: generatorEncoding
      type: SuperOffice.Data.GeneratorEncoding
      description: Encoding of source string. Non-text formats such as MsWord or Excel should be Base64 encoded in the source string.
    - id: customTags
      type: SuperOffice.CRM.Services.StringDictionary
      description: Dictionary of custom tag names and values. Each name should have exactly four characters. There should be exactly one value for each tag.
    - id: contactId
      type: System.Int32
      description: Identifier for a contact
    - id: personId
      type: System.Int32
      description: Identifier for a person
    - id: appointmentId
      type: System.Int32
      description: Identifier for an appointment
    - id: documentId
      type: System.Int32
      description: Identifier for a document
    - id: saleId
      type: System.Int32
      description: Identifier for a sale
    - id: selectionId
      type: System.Int32
      description: Identifier for a selection
    - id: projectId
      type: System.Int32
      description: Identifier for a project
    - id: cultureName
      type: System.String
      description: Name of culture to be used for culture-sensitive data, such as dates or multi-language texts. Use a blank string to accept whatever current culture is set on the server (possibly not a good choice in multinational organizations with a single server).
    return:
      type: System.String
      description: Source string with templates substituted, using the same encoding as for the source (binary data will be returned in Base64).
    content.vb: Function SubstituteTemplateVariablesWithCustomTags2(source As String, generatorEncoding As GeneratorEncoding, customTags As StringDictionary, contactId As Integer, personId As Integer, appointmentId As Integer, documentId As Integer, saleId As Integer, selectionId As Integer, projectId As Integer, cultureName As String) As String
  overload: SuperOffice.CRM.Services.IDocumentAgent.SubstituteTemplateVariablesWithCustomTags2*
- uid: SuperOffice.CRM.Services.IDocumentAgent.CreateTempFile(System.String,System.IO.Stream)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.CreateTempFile(System.String,System.IO.Stream)
  id: CreateTempFile(System.String,System.IO.Stream)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: CreateTempFile(String, Stream)
  nameWithType: IDocumentAgent.CreateTempFile(String, Stream)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.CreateTempFile(System.String, System.IO.Stream)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCreate a new temporary file based on the provided stream.  Specified filename may be overridden, and actual name is returned.\n"
  syntax:
    content: string CreateTempFile(string filename, Stream dataStream)
    parameters:
    - id: filename
      type: System.String
      description: Wanted name of file.
    - id: dataStream
      type: System.IO.Stream
      description: Data to be added to the file.
    return:
      type: System.String
      description: Actual used filename.
    content.vb: Function CreateTempFile(filename As String, dataStream As Stream) As String
  overload: SuperOffice.CRM.Services.IDocumentAgent.CreateTempFile*
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetTempFile(System.String)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.GetTempFile(System.String)
  id: GetTempFile(System.String)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: GetTempFile(String)
  nameWithType: IDocumentAgent.GetTempFile(String)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetTempFile(System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet data stream for temporary file created with CreateTempFile.\n"
  syntax:
    content: Stream GetTempFile(string filename)
    parameters:
    - id: filename
      type: System.String
      description: Name of temporary file to retrieve.
    return:
      type: System.IO.Stream
      description: The document as a Stream
    content.vb: Function GetTempFile(filename As String) As Stream
  overload: SuperOffice.CRM.Services.IDocumentAgent.GetTempFile*
- uid: SuperOffice.CRM.Services.IDocumentAgent.DeleteTempFile(System.String)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.DeleteTempFile(System.String)
  id: DeleteTempFile(System.String)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: DeleteTempFile(String)
  nameWithType: IDocumentAgent.DeleteTempFile(String)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.DeleteTempFile(System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nDelete a temporary file created with CreateTempFile.\n"
  syntax:
    content: void DeleteTempFile(string filename)
    parameters:
    - id: filename
      type: System.String
      description: Name of temporary file to delete.
    content.vb: Sub DeleteTempFile(filename As String)
  overload: SuperOffice.CRM.Services.IDocumentAgent.DeleteTempFile*
- uid: SuperOffice.CRM.Services.IDocumentAgent.SetTemplateStream(System.String,System.Boolean,System.IO.Stream)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.SetTemplateStream(System.String,System.Boolean,System.IO.Stream)
  id: SetTemplateStream(System.String,System.Boolean,System.IO.Stream)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: SetTemplateStream(String, Boolean, Stream)
  nameWithType: IDocumentAgent.SetTemplateStream(String, Boolean, Stream)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.SetTemplateStream(System.String, System.Boolean, System.IO.Stream)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSave a mail signature template to the document archive\n"
  syntax:
    content: void SetTemplateStream(string filename, bool personal, Stream stream)
    parameters:
    - id: filename
      type: System.String
      description: Filename of template.
    - id: personal
      type: System.Boolean
      description: If true, save the template in the user area, instead of in shared template area.
    - id: stream
      type: System.IO.Stream
      description: The signature template content as a stream.
    content.vb: Sub SetTemplateStream(filename As String, personal As Boolean, stream As Stream)
  overload: SuperOffice.CRM.Services.IDocumentAgent.SetTemplateStream*
- uid: SuperOffice.CRM.Services.IDocumentAgent.CreateNewPhysicalDocumentFromTemplate(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.CreateNewPhysicalDocumentFromTemplate(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String)
  id: CreateNewPhysicalDocumentFromTemplate(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: CreateNewPhysicalDocumentFromTemplate(Int32, Int32, Int32, Int32, Int32, Int32, Int32, String)
  nameWithType: IDocumentAgent.CreateNewPhysicalDocumentFromTemplate(Int32, Int32, Int32, Int32, Int32, Int32, Int32, String)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.CreateNewPhysicalDocumentFromTemplate(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCreate a new document content based on a document template and store it in the document archive.  Tags are substituted according to the provided id&apos;s.  Use GetDocumentStream to obtain the created document. Since there is a potential for a name conflict (the file name stored by the document entity earlier may prove to be invalid), the (possibly amended) document entity is returned. The client should not assume that any earlier, cached entity information is valid.\n"
  syntax:
    content: DocumentEntity CreateNewPhysicalDocumentFromTemplate(int contactId, int personId, int appointmentId, int documentId, int saleId, int selectionId, int projectId, string uiCulture)
    parameters:
    - id: contactId
      type: System.Int32
      description: Identifier for a contact. Defaults to document&apos;s contact if 0
    - id: personId
      type: System.Int32
      description: Identifier for a person. Defaults to document&apos;s person if 0
    - id: appointmentId
      type: System.Int32
      description: identifier for an appointment. Defaults to document if 0
    - id: documentId
      type: System.Int32
      description: Identifier for a document. The document defines the template to use.
    - id: saleId
      type: System.Int32
      description: Identifier for sale. Defaults to document&apos;s sale if 0.
    - id: selectionId
      type: System.Int32
      description: identifier for selection.
    - id: projectId
      type: System.Int32
      description: identifier for project. Defaults to document&apos;s project if 0
    - id: uiCulture
      type: System.String
      description: Language variation of template to use when creating document content. (ISO code &quot;en-US&quot; or &quot;nb-NO&quot; etc). Used to select a template of the appropriate language. Can be overridden in SO ARC by user preference &quot;PreferDocLang&quot;.
    return:
      type: SuperOffice.CRM.Services.DocumentEntity
      description: The updated document entity, after creating the document content from the template.
    content.vb: Function CreateNewPhysicalDocumentFromTemplate(contactId As Integer, personId As Integer, appointmentId As Integer, documentId As Integer, saleId As Integer, selectionId As Integer, projectId As Integer, uiCulture As String) As DocumentEntity
  overload: SuperOffice.CRM.Services.IDocumentAgent.CreateNewPhysicalDocumentFromTemplate*
- uid: SuperOffice.CRM.Services.IDocumentAgent.SubstituteMergeDocumentTemplateVariables(System.Int32,System.Int32,System.String[],System.String[])
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.SubstituteMergeDocumentTemplateVariables(System.Int32,System.Int32,System.String[],System.String[])
  id: SubstituteMergeDocumentTemplateVariables(System.Int32,System.Int32,System.String[],System.String[])
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: SubstituteMergeDocumentTemplateVariables(Int32, Int32, String[], String[])
  nameWithType: IDocumentAgent.SubstituteMergeDocumentTemplateVariables(Int32, Int32, String[], String[])
  fullName: SuperOffice.CRM.Services.IDocumentAgent.SubstituteMergeDocumentTemplateVariables(System.Int32, System.Int32, System.String[], System.String[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nParse the source document, and replace any template variable tags with their values, based on the associate Id.&lt;p/> The source document should be of type MergeDraft. This method also takes a pair of arrays specifying custom tags and their values; these tags will be available during substitution in addition to all the existing tags. Custom values will override values otherwise set.\n"
  syntax:
    content: Stream SubstituteMergeDocumentTemplateVariables(int documentId, int associateId, string[] customTags, string[] customValues)
    parameters:
    - id: documentId
      type: System.Int32
      description: The document id that refers to the binary data (document)
    - id: associateId
      type: System.Int32
      description: The associateId used to subsitute tags in the document.
    - id: customTags
      type: System.String[]
      description: Array of custom tag names. Each name should have exactly four characters. There should be exactly one value for each tag, i.e., the lengths of the customTags and customValues arrays should be the same.
    - id: customValues
      type: System.String[]
      description: Array of values for custom tags. There should be exactly one value for each tag, i.e., the lengths of the customTags and customValues arrays should be the same.
    return:
      type: System.IO.Stream
      description: The document as a Stream
    content.vb: Function SubstituteMergeDocumentTemplateVariables(documentId As Integer, associateId As Integer, customTags As String(), customValues As String()) As Stream
  overload: SuperOffice.CRM.Services.IDocumentAgent.SubstituteMergeDocumentTemplateVariables*
  nameWithType.vb: IDocumentAgent.SubstituteMergeDocumentTemplateVariables(Int32, Int32, String(), String())
  fullName.vb: SuperOffice.CRM.Services.IDocumentAgent.SubstituteMergeDocumentTemplateVariables(System.Int32, System.Int32, System.String(), System.String())
  name.vb: SubstituteMergeDocumentTemplateVariables(Int32, Int32, String(), String())
- uid: SuperOffice.CRM.Services.IDocumentAgent.SubstituteMergeDocumentTemplateVariables2(System.Int32,System.Int32,SuperOffice.CRM.Services.StringDictionary)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.SubstituteMergeDocumentTemplateVariables2(System.Int32,System.Int32,SuperOffice.CRM.Services.StringDictionary)
  id: SubstituteMergeDocumentTemplateVariables2(System.Int32,System.Int32,SuperOffice.CRM.Services.StringDictionary)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: SubstituteMergeDocumentTemplateVariables2(Int32, Int32, StringDictionary)
  nameWithType: IDocumentAgent.SubstituteMergeDocumentTemplateVariables2(Int32, Int32, StringDictionary)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.SubstituteMergeDocumentTemplateVariables2(System.Int32, System.Int32, SuperOffice.CRM.Services.StringDictionary)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nParse the source document, and replace any template variable tags with their values, based on the associate Id.&lt;p/> The source document should be of type MergeDraft. This method also takes a pair of arrays specifying custom tags and their values; these tags will be available during substitution in addition to all the existing tags. Custom values will override values otherwise set.\n"
  syntax:
    content: Stream SubstituteMergeDocumentTemplateVariables2(int documentId, int associateId, StringDictionary customTags)
    parameters:
    - id: documentId
      type: System.Int32
      description: The document id that refers to the binary data (document)
    - id: associateId
      type: System.Int32
      description: The associateId used to subsitute tags in the document.
    - id: customTags
      type: SuperOffice.CRM.Services.StringDictionary
      description: Dictionary of custom tag names and values. Each name should have exactly four characters. There should be exactly one value for each tag.
    return:
      type: System.IO.Stream
      description: The document as a Stream
    content.vb: Function SubstituteMergeDocumentTemplateVariables2(documentId As Integer, associateId As Integer, customTags As StringDictionary) As Stream
  overload: SuperOffice.CRM.Services.IDocumentAgent.SubstituteMergeDocumentTemplateVariables2*
- uid: SuperOffice.CRM.Services.IDocumentAgent.SubstituteTemplateVariablesEx(SuperOffice.CRM.Services.TemplateVariablesParameters)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.SubstituteTemplateVariablesEx(SuperOffice.CRM.Services.TemplateVariablesParameters)
  id: SubstituteTemplateVariablesEx(SuperOffice.CRM.Services.TemplateVariablesParameters)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: SubstituteTemplateVariablesEx(TemplateVariablesParameters)
  nameWithType: IDocumentAgent.SubstituteTemplateVariablesEx(TemplateVariablesParameters)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.SubstituteTemplateVariablesEx(SuperOffice.CRM.Services.TemplateVariablesParameters)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nParse the source string, and replace any template variable tags with their values, based on the identities, custom values and entities specified in the other parameters.\n"
  syntax:
    content: string SubstituteTemplateVariablesEx(TemplateVariablesParameters parameters)
    parameters:
    - id: parameters
      type: SuperOffice.CRM.Services.TemplateVariablesParameters
      description: Name of culture to be used for culture-sensitive data, such as dates or multi-language texts. Use a blank string to accept whatever current culture is set on the server (possibly not a good choice in multinational organizations with a single server).
    return:
      type: System.String
      description: Source string with templates substituted, using the same encoding as for the source (binary data will be returned in Base64).
    content.vb: Function SubstituteTemplateVariablesEx(parameters As TemplateVariablesParameters) As String
  overload: SuperOffice.CRM.Services.IDocumentAgent.SubstituteTemplateVariablesEx*
- uid: SuperOffice.CRM.Services.IDocumentAgent.VerifyGetDocumentStream(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.VerifyGetDocumentStream(System.Int32)
  id: VerifyGetDocumentStream(System.Int32)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: VerifyGetDocumentStream(Int32)
  nameWithType: IDocumentAgent.VerifyGetDocumentStream(Int32)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.VerifyGetDocumentStream(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nVerify that the requested document stream exists, and that we can access it, without actually getting the stream.\n"
  syntax:
    content: void VerifyGetDocumentStream(int documentId)
    parameters:
    - id: documentId
      type: System.Int32
      description: The document id that refers to the binary data (document)
    content.vb: Sub VerifyGetDocumentStream(documentId As Integer)
  overload: SuperOffice.CRM.Services.IDocumentAgent.VerifyGetDocumentStream*
- uid: SuperOffice.CRM.Services.IDocumentAgent.SubstituteMergeDocumentTemplateVariablesEx(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String[],System.String[])
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.SubstituteMergeDocumentTemplateVariablesEx(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String[],System.String[])
  id: SubstituteMergeDocumentTemplateVariablesEx(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String[],System.String[])
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: SubstituteMergeDocumentTemplateVariablesEx(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, String[], String[])
  nameWithType: IDocumentAgent.SubstituteMergeDocumentTemplateVariablesEx(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, String[], String[])
  fullName: SuperOffice.CRM.Services.IDocumentAgent.SubstituteMergeDocumentTemplateVariablesEx(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.String[], System.String[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nParse the source document, and replace any template variable tags with their values, based on the provided identifiers.&lt;p/> The source document should be of type MergeDraft. This method also takes a pair of arrays specifying custom tags and their values; these tags will be available during substitution in addition to all the existing tags. Custom values will override values otherwise set.\n"
  syntax:
    content: Stream SubstituteMergeDocumentTemplateVariablesEx(int mergeDocumentId, int contactId, int personId, int projectId, int selectionId, int appointmentId, int documentId, int saleId, string[] customTags, string[] customValues)
    parameters:
    - id: mergeDocumentId
      type: System.Int32
      description: The document id that refers to the binary data (document)
    - id: contactId
      type: System.Int32
      description: The contact identifier to use for template substitution
    - id: personId
      type: System.Int32
      description: The person identifier to use for template substitution
    - id: projectId
      type: System.Int32
      description: The project identifier to use for template substitution
    - id: selectionId
      type: System.Int32
      description: The selection identifier to use for template substitution
    - id: appointmentId
      type: System.Int32
      description: The appointment identifier to use for template substitution
    - id: documentId
      type: System.Int32
      description: The document identifier to use for template substitution
    - id: saleId
      type: System.Int32
      description: The sale identifier to use for template substitution
    - id: customTags
      type: System.String[]
      description: Array of custom tag names. Each name should have exactly four characters. There should be exactly one value for each tag, i.e., the lengths of the customTags and customValues arrays should be the same.
    - id: customValues
      type: System.String[]
      description: Array of values for custom tags. There should be exactly one value for each tag, i.e., the lengths of the customTags and customValues arrays should be the same.
    return:
      type: System.IO.Stream
      description: The document as a Stream
    content.vb: Function SubstituteMergeDocumentTemplateVariablesEx(mergeDocumentId As Integer, contactId As Integer, personId As Integer, projectId As Integer, selectionId As Integer, appointmentId As Integer, documentId As Integer, saleId As Integer, customTags As String(), customValues As String()) As Stream
  overload: SuperOffice.CRM.Services.IDocumentAgent.SubstituteMergeDocumentTemplateVariablesEx*
  nameWithType.vb: IDocumentAgent.SubstituteMergeDocumentTemplateVariablesEx(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, String(), String())
  fullName.vb: SuperOffice.CRM.Services.IDocumentAgent.SubstituteMergeDocumentTemplateVariablesEx(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.String(), System.String())
  name.vb: SubstituteMergeDocumentTemplateVariablesEx(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, String(), String())
- uid: SuperOffice.CRM.Services.IDocumentAgent.SubstituteMergeDocumentTemplateVariablesEx2(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,SuperOffice.CRM.Services.StringDictionary)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.SubstituteMergeDocumentTemplateVariablesEx2(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,SuperOffice.CRM.Services.StringDictionary)
  id: SubstituteMergeDocumentTemplateVariablesEx2(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,SuperOffice.CRM.Services.StringDictionary)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: SubstituteMergeDocumentTemplateVariablesEx2(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, StringDictionary)
  nameWithType: IDocumentAgent.SubstituteMergeDocumentTemplateVariablesEx2(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, StringDictionary)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.SubstituteMergeDocumentTemplateVariablesEx2(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, SuperOffice.CRM.Services.StringDictionary)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nParse the source document, and replace any template variable tags with their values, based on the provided identifiers.&lt;p/> The source document should be of type MergeDraft. This method also takes a pair of arrays specifying custom tags and their values; these tags will be available during substitution in addition to all the existing tags. Custom values will override values otherwise set.\n"
  syntax:
    content: Stream SubstituteMergeDocumentTemplateVariablesEx2(int mergeDocumentId, int contactId, int personId, int projectId, int selectionId, int appointmentId, int documentId, int saleId, StringDictionary customTags)
    parameters:
    - id: mergeDocumentId
      type: System.Int32
      description: The document id that refers to the binary data (document)
    - id: contactId
      type: System.Int32
      description: The contact identifier to use for template substitution
    - id: personId
      type: System.Int32
      description: The person identifier to use for template substitution
    - id: projectId
      type: System.Int32
      description: The project identifier to use for template substitution
    - id: selectionId
      type: System.Int32
      description: The selection identifier to use for template substitution
    - id: appointmentId
      type: System.Int32
      description: The appointment identifier to use for template substitution
    - id: documentId
      type: System.Int32
      description: The document identifier to use for template substitution
    - id: saleId
      type: System.Int32
      description: The sale identifier to use for template substitution
    - id: customTags
      type: SuperOffice.CRM.Services.StringDictionary
      description: Dictionary of custom tag names and values. Each name should have exactly four characters. There should be exactly one value for each tag
    return:
      type: System.IO.Stream
      description: The document as a Stream
    content.vb: Function SubstituteMergeDocumentTemplateVariablesEx2(mergeDocumentId As Integer, contactId As Integer, personId As Integer, projectId As Integer, selectionId As Integer, appointmentId As Integer, documentId As Integer, saleId As Integer, customTags As StringDictionary) As Stream
  overload: SuperOffice.CRM.Services.IDocumentAgent.SubstituteMergeDocumentTemplateVariablesEx2*
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetDocumentUrl(System.Int32,System.String,System.Boolean)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.GetDocumentUrl(System.Int32,System.String,System.Boolean)
  id: GetDocumentUrl(System.Int32,System.String,System.Boolean)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: GetDocumentUrl(Int32, String, Boolean)
  nameWithType: IDocumentAgent.GetDocumentUrl(Int32, String, Boolean)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetDocumentUrl(System.Int32, System.String, System.Boolean)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet a URL referring to the given document content.&lt;para/>This URL may be passed to the ultimate client (text editor of some kind?), which is then responsible for all further operations.&lt;para/>The returned string is a fully qualified URL.&lt;para/>Not all documents and document plugins support this feature.\n"
  syntax:
    content: string GetDocumentUrl(int documentId, string versionId, bool writeableUrl)
    parameters:
    - id: documentId
      type: System.Int32
      description: SuperOffice document primary key
    - id: versionId
      type: System.String
      description: Version ID if applicable/desired; a blank value implies &quot;latest&quot; version and is always acceptable.
    - id: writeableUrl
      type: System.Boolean
      description: If true, then a URL that supports saving is requested. Som edocument plugins may not support read-only URLs, so there is no guarantee that a False value will actually yield a read-only URL, and vice versa.
    return:
      type: System.String
      description: Fully resolved URL referring to the document. May be NULL or blank if plugin does not support URLs.
    content.vb: Function GetDocumentUrl(documentId As Integer, versionId As String, writeableUrl As Boolean) As String
  overload: SuperOffice.CRM.Services.IDocumentAgent.GetDocumentUrl*
- uid: SuperOffice.CRM.Services.IDocumentAgent.DeletePhysicalDocument(System.Int32,System.String[])
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.DeletePhysicalDocument(System.Int32,System.String[])
  id: DeletePhysicalDocument(System.Int32,System.String[])
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: DeletePhysicalDocument(Int32, String[])
  nameWithType: IDocumentAgent.DeletePhysicalDocument(Int32, String[])
  fullName: SuperOffice.CRM.Services.IDocumentAgent.DeletePhysicalDocument(System.Int32, System.String[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nDelete the document contents\n"
  syntax:
    content: ReturnInfo DeletePhysicalDocument(int documentId, string[] allowedReturnType)
    parameters:
    - id: documentId
      type: System.Int32
      description: document primary key
    - id: allowedReturnType
      type: System.String[]
      description: List of return types that the client is prepared to handle, in case the document plugin needs to request additional processing. Standard allowed return types include &apos;None&apos;, &apos;Message&apos;, &apos;SoProtocol&apos;, &apos;CustomGui&apos;, &apos;Other&apos;.&lt;br/>An empty array implies that the client places no restriction on possible return action requests
    return:
      type: SuperOffice.CRM.ReturnInfo
      description: Delete status - did removal succeed or not
    content.vb: Function DeletePhysicalDocument(documentId As Integer, allowedReturnType As String()) As ReturnInfo
  overload: SuperOffice.CRM.Services.IDocumentAgent.DeletePhysicalDocument*
  nameWithType.vb: IDocumentAgent.DeletePhysicalDocument(Int32, String())
  fullName.vb: SuperOffice.CRM.Services.IDocumentAgent.DeletePhysicalDocument(System.Int32, System.String())
  name.vb: DeletePhysicalDocument(Int32, String())
- uid: SuperOffice.CRM.Services.IDocumentAgent.RenameDocument(System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.RenameDocument(System.Int32,System.String)
  id: RenameDocument(System.Int32,System.String)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: RenameDocument(Int32, String)
  nameWithType: IDocumentAgent.RenameDocument(Int32, String)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.RenameDocument(System.Int32, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nRename the physical document, i.e., change the file name or equivalent concept in the document archive.\n"
  syntax:
    content: string RenameDocument(int documentId, string newFilename)
    parameters:
    - id: documentId
      type: System.Int32
      description: SuperOffice document ID
    - id: newFilename
      type: System.String
      description: Suggested new file name. The document archive may amend this to conform to uniqueness constraints, character range limitations etc.
    return:
      type: System.String
      description: The actual, new &quot;file&quot; name. This will generally be derived from the suggested name, but may be amended.
    content.vb: Function RenameDocument(documentId As Integer, newFilename As String) As String
  overload: SuperOffice.CRM.Services.IDocumentAgent.RenameDocument*
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetCheckoutState(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.GetCheckoutState(System.Int32)
  id: GetCheckoutState(System.Int32)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: GetCheckoutState(Int32)
  nameWithType: IDocumentAgent.GetCheckoutState(Int32)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetCheckoutState(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet the current checkout state for a document, relative to the user perforing the call.\n"
  syntax:
    content: CheckoutInfo GetCheckoutState(int documentId)
    parameters:
    - id: documentId
      type: System.Int32
      description: SuperOffice document ID
    return:
      type: SuperOffice.CRM.Documents.CheckoutInfo
      description: Current checkout state of the document
    content.vb: Function GetCheckoutState(documentId As Integer) As CheckoutInfo
  overload: SuperOffice.CRM.Services.IDocumentAgent.GetCheckoutState*
- uid: SuperOffice.CRM.Services.IDocumentAgent.CheckoutDocument(System.Int32,System.String[])
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.CheckoutDocument(System.Int32,System.String[])
  id: CheckoutDocument(System.Int32,System.String[])
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: CheckoutDocument(Int32, String[])
  nameWithType: IDocumentAgent.CheckoutDocument(Int32, String[])
  fullName: SuperOffice.CRM.Services.IDocumentAgent.CheckoutDocument(System.Int32, System.String[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCheck out a document for editing by the current user.\n"
  syntax:
    content: ReturnInfo CheckoutDocument(int documentId, string[] allowedReturnTypes)
    parameters:
    - id: documentId
      type: System.Int32
      description: SuperOffice document ID
    - id: allowedReturnTypes
      type: System.String[]
      description: List of return types that the client is prepared to handle, in case the document plugin needs to request additional processing.&lt;br/>Standard allowed return types include &apos;None&apos;, &apos;Message&apos;, &apos;SoProtocol&apos;, &apos;CustomGui&apos;, &apos;Other&apos;.&lt;br/>An empty array implies that the client places no restriction on possible return action requests.
    return:
      type: SuperOffice.CRM.ReturnInfo
      description: Return information, including possible requests for further processing (&quot;Return Action&quot;). Return actions are constrained by the allowedReturnTypes parameter.
    content.vb: Function CheckoutDocument(documentId As Integer, allowedReturnTypes As String()) As ReturnInfo
  overload: SuperOffice.CRM.Services.IDocumentAgent.CheckoutDocument*
  nameWithType.vb: IDocumentAgent.CheckoutDocument(Int32, String())
  fullName.vb: SuperOffice.CRM.Services.IDocumentAgent.CheckoutDocument(System.Int32, System.String())
  name.vb: CheckoutDocument(Int32, String())
- uid: SuperOffice.CRM.Services.IDocumentAgent.CheckinDocument(System.Int32,System.String[],System.String,System.String[])
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.CheckinDocument(System.Int32,System.String[],System.String,System.String[])
  id: CheckinDocument(System.Int32,System.String[],System.String,System.String[])
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: CheckinDocument(Int32, String[], String, String[])
  nameWithType: IDocumentAgent.CheckinDocument(Int32, String[], String, String[])
  fullName: SuperOffice.CRM.Services.IDocumentAgent.CheckinDocument(System.Int32, System.String[], System.String, System.String[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCheck in a currently checked-out document\n"
  syntax:
    content: ReturnInfo CheckinDocument(int documentId, string[] allowedReturnTypes, string versionDescription, string[] versionExtraFields)
    parameters:
    - id: documentId
      type: System.Int32
      description: SuperOffice document Id
    - id: allowedReturnTypes
      type: System.String[]
      description: List of return types that the client is prepared to handle, in case the document plugin needs to request additional processing.&lt;br/>Standard allowed return types include &apos;None&apos;, &apos;Message&apos;, &apos;SoProtocol&apos;, &apos;CustomGui&apos;, &apos;Other&apos;.&lt;br/>An empty array implies that the client places no restriction on possible return action requests.
    - id: versionDescription
      type: System.String
      description: Optional textual description related to this version of the document; may be blank, and is discarded if the document/plugin do not support versioning.
    - id: versionExtraFields
      type: System.String[]
      description: Optional extra metadata related to the new version (as opposed to metadata related to the document as a whole). Discarded if the document/plugin do not support versioning.
    return:
      type: SuperOffice.CRM.ReturnInfo
      description: Return information, including possible requests for further processing (&quot;Return Action&quot;). Return actions are constrained by the allowedReturnTypes parameter.
    content.vb: Function CheckinDocument(documentId As Integer, allowedReturnTypes As String(), versionDescription As String, versionExtraFields As String()) As ReturnInfo
  overload: SuperOffice.CRM.Services.IDocumentAgent.CheckinDocument*
  nameWithType.vb: IDocumentAgent.CheckinDocument(Int32, String(), String, String())
  fullName.vb: SuperOffice.CRM.Services.IDocumentAgent.CheckinDocument(System.Int32, System.String(), System.String, System.String())
  name.vb: CheckinDocument(Int32, String(), String, String())
- uid: SuperOffice.CRM.Services.IDocumentAgent.UndoCheckoutDocument(System.Int32,System.String[])
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.UndoCheckoutDocument(System.Int32,System.String[])
  id: UndoCheckoutDocument(System.Int32,System.String[])
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: UndoCheckoutDocument(Int32, String[])
  nameWithType: IDocumentAgent.UndoCheckoutDocument(Int32, String[])
  fullName: SuperOffice.CRM.Services.IDocumentAgent.UndoCheckoutDocument(System.Int32, System.String[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nUndo (abandon) a checkout\n"
  syntax:
    content: ReturnInfo UndoCheckoutDocument(int documentId, string[] allowedReturnTypes)
    parameters:
    - id: documentId
      type: System.Int32
      description: SuperOffice document ID
    - id: allowedReturnTypes
      type: System.String[]
      description: List of return types that the client is prepared to handle, in case the document plugin needs to request additional processing.&lt;br/>Standard allowed return types include &apos;None&apos;, &apos;Message&apos;, &apos;SoProtocol&apos;, &apos;CustomGui&apos;, &apos;Other&apos;.&lt;br/>An empty array implies that the client places no restriction on possible return action requests.
    return:
      type: SuperOffice.CRM.ReturnInfo
      description: Return information, including possible requests for further processing (&quot;Return Action&quot;). Return actions are constrained by the allowedReturnTypes parameter.
    content.vb: Function UndoCheckoutDocument(documentId As Integer, allowedReturnTypes As String()) As ReturnInfo
  overload: SuperOffice.CRM.Services.IDocumentAgent.UndoCheckoutDocument*
  nameWithType.vb: IDocumentAgent.UndoCheckoutDocument(Int32, String())
  fullName.vb: SuperOffice.CRM.Services.IDocumentAgent.UndoCheckoutDocument(System.Int32, System.String())
  name.vb: UndoCheckoutDocument(Int32, String())
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetVersionList(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.GetVersionList(System.Int32)
  id: GetVersionList(System.Int32)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: GetVersionList(Int32)
  nameWithType: IDocumentAgent.GetVersionList(Int32)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetVersionList(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet a list of existing, committed  versions for a given document\n"
  syntax:
    content: VersionInfo[] GetVersionList(int documentId)
    parameters:
    - id: documentId
      type: System.Int32
      description: SuperOffice document Id
    return:
      type: SuperOffice.CRM.Documents.VersionInfo[]
      description: Array of objects describing the existing, committed versions for this document
    content.vb: Function GetVersionList(documentId As Integer) As VersionInfo()
  overload: SuperOffice.CRM.Services.IDocumentAgent.GetVersionList*
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetPluginList
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.GetPluginList
  id: GetPluginList
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: GetPluginList()
  nameWithType: IDocumentAgent.GetPluginList()
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetPluginList()
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet a list of installed document plugins\n"
  syntax:
    content: StringDictionary GetPluginList()
    return:
      type: SuperOffice.CRM.Services.StringDictionary
      description: Dictionary mapping plugin id=plugin name
    content.vb: Function GetPluginList As StringDictionary
  overload: SuperOffice.CRM.Services.IDocumentAgent.GetPluginList*
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetPluginCapabilities(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.GetPluginCapabilities(System.Int32)
  id: GetPluginCapabilities(System.Int32)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: GetPluginCapabilities(Int32)
  nameWithType: IDocumentAgent.GetPluginCapabilities(Int32)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetPluginCapabilities(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet a list of plugin-dependent capabilities for a given document archive plugin.&lt;br/>A standard set of properties is defined in SuperOffice.CRM.Documents.Constants.Capabilities.\n"
  syntax:
    content: StringDictionary GetPluginCapabilities(int pluginId)
    parameters:
    - id: pluginId
      type: System.Int32
      description: Numeric document plugin id, corresponding to the document.archiveProvider id or doctmpl.autoeventid.
    return:
      type: SuperOffice.CRM.Services.StringDictionary
      description: Dictionary mapping capability names=values
    content.vb: Function GetPluginCapabilities(pluginId As Integer) As StringDictionary
  overload: SuperOffice.CRM.Services.IDocumentAgent.GetPluginCapabilities*
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetDocumentProperties(System.Int32,System.String[])
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.GetDocumentProperties(System.Int32,System.String[])
  id: GetDocumentProperties(System.Int32,System.String[])
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: GetDocumentProperties(Int32, String[])
  nameWithType: IDocumentAgent.GetDocumentProperties(Int32, String[])
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetDocumentProperties(System.Int32, System.String[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet plugin-dependent properties for the document. A number of standard properties that should be supported by all plugins are defined in SuperOffice.CRM.Documents.Constants.Properties.\n"
  syntax:
    content: StringDictionary GetDocumentProperties(int documentId, string[] requestedProperties)
    parameters:
    - id: documentId
      type: System.Int32
      description: SuperOffice document ID
    - id: requestedProperties
      type: System.String[]
      description: Array of property names whose values are being requested.
    return:
      type: SuperOffice.CRM.Services.StringDictionary
      description: Dictionary of name=value pairs, corresponding to the requested properties.
    content.vb: Function GetDocumentProperties(documentId As Integer, requestedProperties As String()) As StringDictionary
  overload: SuperOffice.CRM.Services.IDocumentAgent.GetDocumentProperties*
  nameWithType.vb: IDocumentAgent.GetDocumentProperties(Int32, String())
  fullName.vb: SuperOffice.CRM.Services.IDocumentAgent.GetDocumentProperties(System.Int32, System.String())
  name.vb: GetDocumentProperties(Int32, String())
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetDocumentCommands(System.Int32,System.String[])
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.GetDocumentCommands(System.Int32,System.String[])
  id: GetDocumentCommands(System.Int32,System.String[])
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: GetDocumentCommands(Int32, String[])
  nameWithType: IDocumentAgent.GetDocumentCommands(Int32, String[])
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetDocumentCommands(System.Int32, System.String[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet a list of custom commands valid for the specific document at this time. This information should not be cached by clients, as it may change between documents and over time.\n"
  syntax:
    content: CommandInfo[] GetDocumentCommands(int documentId, string[] allowedReturnTypes)
    parameters:
    - id: documentId
      type: System.Int32
      description: SuperOffice document ID
    - id: allowedReturnTypes
      type: System.String[]
      description: List of return types that the client is prepared to handle, in case the document plugin needs to request additional processing.&lt;br/>Standard allowed return types include &apos;None&apos;, &apos;Message&apos;, &apos;SoProtocol&apos;, &apos;CustomGui&apos;, &apos;Other&apos;.&lt;br/>An empty array implies that the client places no restriction on possible return action requests.&lt;br/>In this context the parameter is used to filter the returned command list, so that commands that require return actions not supported, will not be included by the document plugin.
    return:
      type: SuperOffice.CRM.Documents.CommandInfo[]
      description: Array of command information items. The command list is constrained by the allowedReturnTypes parameter.
    content.vb: Function GetDocumentCommands(documentId As Integer, allowedReturnTypes As String()) As CommandInfo()
  overload: SuperOffice.CRM.Services.IDocumentAgent.GetDocumentCommands*
  nameWithType.vb: IDocumentAgent.GetDocumentCommands(Int32, String())
  fullName.vb: SuperOffice.CRM.Services.IDocumentAgent.GetDocumentCommands(System.Int32, System.String())
  name.vb: GetDocumentCommands(Int32, String())
- uid: SuperOffice.CRM.Services.IDocumentAgent.ExecuteDocumentCommand(System.Int32,System.String,System.String[],System.String,System.String[])
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.ExecuteDocumentCommand(System.Int32,System.String,System.String[],System.String,System.String[])
  id: ExecuteDocumentCommand(System.Int32,System.String,System.String[],System.String,System.String[])
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: ExecuteDocumentCommand(Int32, String, String[], String, String[])
  nameWithType: IDocumentAgent.ExecuteDocumentCommand(Int32, String, String[], String, String[])
  fullName: SuperOffice.CRM.Services.IDocumentAgent.ExecuteDocumentCommand(System.Int32, System.String, System.String[], System.String, System.String[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nExecute a custom command on a particular document, optionally a particular version\n"
  syntax:
    content: ReturnInfo ExecuteDocumentCommand(int documentId, string versionId, string[] allowedReturnTypes, string command, string[] additionalData)
    parameters:
    - id: documentId
      type: System.Int32
      description: SuperOffice document ID
    - id: versionId
      type: System.String
      description: Version ID if applicable/desired; a blank value implies &quot;latest&quot; version and is always acceptable.
    - id: allowedReturnTypes
      type: System.String[]
      description: List of return types that the client is prepared to handle, in case the document plugin needs to request additional processing.&lt;br/>Standard allowed return types include &apos;None&apos;, &apos;Message&apos;, &apos;SoProtocol&apos;, &apos;CustomGui&apos;, &apos;Other&apos;.&lt;br/>An empty array implies that the client places no restriction on possible return action requests.
    - id: command
      type: System.String
      description: Command name, generally matching one of those returned from the GetDocumentCommands service. However, it is legal for document plugins to support commands that are not declared through GetDocumentCommands, for instance if a custom GUI needs to access plugin functionality.
    - id: additionalData
      type: System.String[]
      description: Any additional data that the document command needs. This parameter can be used as a tunnel between a custom-programmed GUI and its plugin.&lt;br/>It is suggested that the format is name=value, with one such pair per array item.
    return:
      type: SuperOffice.CRM.ReturnInfo
      description: Return information, including possible requests for further processing (&quot;Return Action&quot;). Return actions are constrained by the allowedReturnTypes parameter.
    content.vb: Function ExecuteDocumentCommand(documentId As Integer, versionId As String, allowedReturnTypes As String(), command As String, additionalData As String()) As ReturnInfo
  overload: SuperOffice.CRM.Services.IDocumentAgent.ExecuteDocumentCommand*
  nameWithType.vb: IDocumentAgent.ExecuteDocumentCommand(Int32, String, String(), String, String())
  fullName.vb: SuperOffice.CRM.Services.IDocumentAgent.ExecuteDocumentCommand(System.Int32, System.String, System.String(), System.String, System.String())
  name.vb: ExecuteDocumentCommand(Int32, String, String(), String, String())
- uid: SuperOffice.CRM.Services.IDocumentAgent.CreateDefaultDocumentEntityFromSuggestion(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.CreateDefaultDocumentEntityFromSuggestion(System.Int32)
  id: CreateDefaultDocumentEntityFromSuggestion(System.Int32)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultDocumentEntityFromSuggestion(Int32)
  nameWithType: IDocumentAgent.CreateDefaultDocumentEntityFromSuggestion(Int32)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.CreateDefaultDocumentEntityFromSuggestion(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\n\n"
  syntax:
    content: DocumentEntity CreateDefaultDocumentEntityFromSuggestion(int suggestedDocumentId)
    parameters:
    - id: suggestedDocumentId
      type: System.Int32
    return:
      type: SuperOffice.CRM.Services.DocumentEntity
    content.vb: Function CreateDefaultDocumentEntityFromSuggestion(suggestedDocumentId As Integer) As DocumentEntity
  overload: SuperOffice.CRM.Services.IDocumentAgent.CreateDefaultDocumentEntityFromSuggestion*
- uid: SuperOffice.CRM.Services.IDocumentAgent.SaveDocumentTemplateStream(System.Int32,System.IO.Stream,System.String,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.SaveDocumentTemplateStream(System.Int32,System.IO.Stream,System.String,System.Int32)
  id: SaveDocumentTemplateStream(System.Int32,System.IO.Stream,System.String,System.Int32)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: SaveDocumentTemplateStream(Int32, Stream, String, Int32)
  nameWithType: IDocumentAgent.SaveDocumentTemplateStream(Int32, Stream, String, Int32)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.SaveDocumentTemplateStream(System.Int32, System.IO.Stream, System.String, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSaves content in stream to document template file\n"
  syntax:
    content: TemplateInfo SaveDocumentTemplateStream(int documentTemplateId, Stream content, string languageCode, int pluginId)
    parameters:
    - id: documentTemplateId
      type: System.Int32
      description: Identifier for document template
    - id: content
      type: System.IO.Stream
      description: Stream containing content to be saved to document template file
    - id: languageCode
      type: System.String
      description: 'Language variation of template to update. (ISO code: &quot;en-US&quot; or &quot;nb-NO&quot; etc). Used to select a template of the appropriate language. Can be overridden in SO ARC by user preference &quot;PreferDocLang&quot;.'
    - id: pluginId
      type: System.Int32
      description: Plugin id. Use -1 to use the plugin specified in the template.
    return:
      type: SuperOffice.CRM.Documents.TemplateInfo
      description: Template info
    content.vb: Function SaveDocumentTemplateStream(documentTemplateId As Integer, content As Stream, languageCode As String, pluginId As Integer) As TemplateInfo
  overload: SuperOffice.CRM.Services.IDocumentAgent.SaveDocumentTemplateStream*
- uid: SuperOffice.CRM.Services.IDocumentAgent.SetDocumentStreamFromId(System.Int32,System.IO.Stream)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.SetDocumentStreamFromId(System.Int32,System.IO.Stream)
  id: SetDocumentStreamFromId(System.Int32,System.IO.Stream)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: SetDocumentStreamFromId(Int32, Stream)
  nameWithType: IDocumentAgent.SetDocumentStreamFromId(Int32, Stream)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.SetDocumentStreamFromId(System.Int32, System.IO.Stream)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nStore document content from stream. Since there is a potential for a name conflict (the file name stored by the document entity earlier may prove to be invalid), the (possibly amended) document entity is returned. The client should not assume that any earlier, cached entity information is valid.\n"
  syntax:
    content: DocumentEntity SetDocumentStreamFromId(int documentId, Stream stream)
    parameters:
    - id: documentId
      type: System.Int32
      description: The document entity object that the binary data (document) should be stored to. Its file name may be amended by this call, see the return value.
    - id: stream
      type: System.IO.Stream
      description: The document content as a stream.
    return:
      type: SuperOffice.CRM.Services.DocumentEntity
      description: Since there is a potential for a name conflict (the file name stored by the document entity earlier may prove to be invalid), the (possibly amended) document entity is returned. The client should not assume that any earlier, cached entity information is valid.
    content.vb: Function SetDocumentStreamFromId(documentId As Integer, stream As Stream) As DocumentEntity
  overload: SuperOffice.CRM.Services.IDocumentAgent.SetDocumentStreamFromId*
- uid: SuperOffice.CRM.Services.IDocumentAgent.SavePrivacyReport(System.String,System.String,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.SavePrivacyReport(System.String,System.String,System.Int32)
  id: SavePrivacyReport(System.String,System.String,System.Int32)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: SavePrivacyReport(String, String, Int32)
  nameWithType: IDocumentAgent.SavePrivacyReport(String, String, Int32)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.SavePrivacyReport(System.String, System.String, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGenerates a Pdf from HTML and makes a document\n"
  syntax:
    content: int SavePrivacyReport(string htmlReport, string title, int personId)
    parameters:
    - id: htmlReport
      type: System.String
      description: Html to convert
    - id: title
      type: System.String
      description: Title of report
    - id: personId
      type: System.Int32
      description: Person id associated with the report
    return:
      type: System.Int32
      description: Document id of saved report
    content.vb: Function SavePrivacyReport(htmlReport As String, title As String, personId As Integer) As Integer
  overload: SuperOffice.CRM.Services.IDocumentAgent.SavePrivacyReport*
- uid: SuperOffice.CRM.Services.IDocumentAgent.ValidateDocumentEntity(SuperOffice.CRM.Services.DocumentEntity)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.ValidateDocumentEntity(SuperOffice.CRM.Services.DocumentEntity)
  id: ValidateDocumentEntity(SuperOffice.CRM.Services.DocumentEntity)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: ValidateDocumentEntity(DocumentEntity)
  nameWithType: IDocumentAgent.ValidateDocumentEntity(DocumentEntity)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.ValidateDocumentEntity(SuperOffice.CRM.Services.DocumentEntity)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCheck that entity is ready for saving, return error messages by field.\n"
  syntax:
    content: StringDictionary ValidateDocumentEntity(DocumentEntity documentEntity)
    parameters:
    - id: documentEntity
      type: SuperOffice.CRM.Services.DocumentEntity
      description: Entity to be checked for errors.
    return:
      type: SuperOffice.CRM.Services.StringDictionary
      description: Error messages tagged by field.
    content.vb: Function ValidateDocumentEntity(documentEntity As DocumentEntity) As StringDictionary
  overload: SuperOffice.CRM.Services.IDocumentAgent.ValidateDocumentEntity*
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetDocumentLength(System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.GetDocumentLength(System.Int32,System.String)
  id: GetDocumentLength(System.Int32,System.String)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: GetDocumentLength(Int32, String)
  nameWithType: IDocumentAgent.GetDocumentLength(Int32, String)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetDocumentLength(System.Int32, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet length of the document content in bytes.\n"
  syntax:
    content: long GetDocumentLength(int documentId, string versionId)
    parameters:
    - id: documentId
      type: System.Int32
      description: SuperOffice document id
    - id: versionId
      type: System.String
      description: Version ID if applicable; a blank value implies &quot;latest&quot; version and is always acceptable.
    return:
      type: System.Int64
      description: The length of the document content in bytes.
    content.vb: Function GetDocumentLength(documentId As Integer, versionId As String) As Long
  overload: SuperOffice.CRM.Services.IDocumentAgent.GetDocumentLength*
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetDocumentList(System.Int32[])
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.GetDocumentList(System.Int32[])
  id: GetDocumentList(System.Int32[])
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: GetDocumentList(Int32[])
  nameWithType: IDocumentAgent.GetDocumentList(Int32[])
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetDocumentList(System.Int32[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets an array of Document objects.                        \n"
  syntax:
    content: Document[] GetDocumentList(int[] documentIds)
    parameters:
    - id: documentIds
      type: System.Int32[]
      description: The identifiers of the Document object
    return:
      type: SuperOffice.CRM.Services.Document[]
      description: Array of Document objects
    content.vb: Function GetDocumentList(documentIds As Integer()) As Document()
  overload: SuperOffice.CRM.Services.IDocumentAgent.GetDocumentList*
  nameWithType.vb: IDocumentAgent.GetDocumentList(Int32())
  fullName.vb: SuperOffice.CRM.Services.IDocumentAgent.GetDocumentList(System.Int32())
  name.vb: GetDocumentList(Int32())
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetAppointmentDocuments(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.GetAppointmentDocuments(System.Int32)
  id: GetAppointmentDocuments(System.Int32)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: GetAppointmentDocuments(Int32)
  nameWithType: IDocumentAgent.GetAppointmentDocuments(Int32)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetAppointmentDocuments(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet all documents that are linked to the appointment. I.e. the documents that are listed in the appointment dialog.\n"
  syntax:
    content: Document[] GetAppointmentDocuments(int appointmentId)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointment id.
    return:
      type: SuperOffice.CRM.Services.Document[]
      description: Array of documents
    content.vb: Function GetAppointmentDocuments(appointmentId As Integer) As Document()
  overload: SuperOffice.CRM.Services.IDocumentAgent.GetAppointmentDocuments*
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetSaleDocuments(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.GetSaleDocuments(System.Int32)
  id: GetSaleDocuments(System.Int32)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: GetSaleDocuments(Int32)
  nameWithType: IDocumentAgent.GetSaleDocuments(Int32)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetSaleDocuments(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet all documents that are linked to the sale. I.e. the documents that are listed in the sale dialog.\n"
  syntax:
    content: Document[] GetSaleDocuments(int saleId)
    parameters:
    - id: saleId
      type: System.Int32
      description: The sale id.
    return:
      type: SuperOffice.CRM.Services.Document[]
      description: Array of documents
    content.vb: Function GetSaleDocuments(saleId As Integer) As Document()
  overload: SuperOffice.CRM.Services.IDocumentAgent.GetSaleDocuments*
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetPersonDocuments(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.GetPersonDocuments(System.Int32)
  id: GetPersonDocuments(System.Int32)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: GetPersonDocuments(Int32)
  nameWithType: IDocumentAgent.GetPersonDocuments(Int32)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetPersonDocuments(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet all documents that are linked to the person. I.e. the documents that are listed in the person dialog.\n"
  syntax:
    content: Document[] GetPersonDocuments(int personId)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id.
    return:
      type: SuperOffice.CRM.Services.Document[]
      description: Array of documents
    content.vb: Function GetPersonDocuments(personId As Integer) As Document()
  overload: SuperOffice.CRM.Services.IDocumentAgent.GetPersonDocuments*
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetPublishedDocument(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.GetPublishedDocument(System.Int32)
  id: GetPublishedDocument(System.Int32)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: GetPublishedDocument(Int32)
  nameWithType: IDocumentAgent.GetPublishedDocument(Int32)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetPublishedDocument(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet the document if it&apos;s published\n"
  syntax:
    content: Document GetPublishedDocument(int documentId)
    parameters:
    - id: documentId
      type: System.Int32
      description: The document id
    return:
      type: SuperOffice.CRM.Services.Document
      description: Document
    content.vb: Function GetPublishedDocument(documentId As Integer) As Document
  overload: SuperOffice.CRM.Services.IDocumentAgent.GetPublishedDocument*
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetPublishedDocuments(System.Int32[])
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.GetPublishedDocuments(System.Int32[])
  id: GetPublishedDocuments(System.Int32[])
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: GetPublishedDocuments(Int32[])
  nameWithType: IDocumentAgent.GetPublishedDocuments(Int32[])
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetPublishedDocuments(System.Int32[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet the published documents from an array of doucment ids.\n"
  syntax:
    content: Document[] GetPublishedDocuments(int[] documentIds)
    parameters:
    - id: documentIds
      type: System.Int32[]
      description: Array of document ids.
    return:
      type: SuperOffice.CRM.Services.Document[]
      description: Array of Document
    content.vb: Function GetPublishedDocuments(documentIds As Integer()) As Document()
  overload: SuperOffice.CRM.Services.IDocumentAgent.GetPublishedDocuments*
  nameWithType.vb: IDocumentAgent.GetPublishedDocuments(Int32())
  fullName.vb: SuperOffice.CRM.Services.IDocumentAgent.GetPublishedDocuments(System.Int32())
  name.vb: GetPublishedDocuments(Int32())
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetMyPublishedDocuments
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.GetMyPublishedDocuments
  id: GetMyPublishedDocuments
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: GetMyPublishedDocuments()
  nameWithType: IDocumentAgent.GetMyPublishedDocuments()
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetMyPublishedDocuments()
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\n\n"
  syntax:
    content: Document[] GetMyPublishedDocuments()
    return:
      type: SuperOffice.CRM.Services.Document[]
      description: Array of documents
    content.vb: Function GetMyPublishedDocuments As Document()
  overload: SuperOffice.CRM.Services.IDocumentAgent.GetMyPublishedDocuments*
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetPublishedDocumentsByDate(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.GetPublishedDocumentsByDate(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32)
  id: GetPublishedDocumentsByDate(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: GetPublishedDocumentsByDate(Int32, Boolean, DateTime, DateTime, Int32)
  nameWithType: IDocumentAgent.GetPublishedDocumentsByDate(Int32, Boolean, DateTime, DateTime, Int32)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetPublishedDocumentsByDate(System.Int32, System.Boolean, System.DateTime, System.DateTime, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nMethod that returns a specified number of published document appointments within a time range. The document appointments is visible to the person specified or the document is in a project the person belongs to. \n"
  syntax:
    content: Document[] GetPublishedDocumentsByDate(int personId, bool includeProjectDocuments, DateTime startTime, DateTime endTime, int count)
    parameters:
    - id: personId
      type: System.Int32
      description: The personId
    - id: includeProjectDocuments
      type: System.Boolean
      description: Include projectDocuments to select documents in projects person is a member of.
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    return:
      type: SuperOffice.CRM.Services.Document[]
      description: Array of Appointments.
    content.vb: Function GetPublishedDocumentsByDate(personId As Integer, includeProjectDocuments As Boolean, startTime As Date, endTime As Date, count As Integer) As Document()
  overload: SuperOffice.CRM.Services.IDocumentAgent.GetPublishedDocumentsByDate*
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetContactDocumentsByTemplateTypes(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[])
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.GetContactDocumentsByTemplateTypes(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[])
  id: GetContactDocumentsByTemplateTypes(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[])
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: GetContactDocumentsByTemplateTypes(Int32, DateTime, DateTime, Int32, Int32[])
  nameWithType: IDocumentAgent.GetContactDocumentsByTemplateTypes(Int32, DateTime, DateTime, Int32, Int32[])
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetContactDocumentsByTemplateTypes(System.Int32, System.DateTime, System.DateTime, System.Int32, System.Int32[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nMethod that returns a specified number of document appointments within a time range, filtered by document template types. The document appointments belong to the contact specified. \n"
  syntax:
    content: Document[] GetContactDocumentsByTemplateTypes(int contactId, DateTime startTime, DateTime endTime, int count, int[] documentTemplateIds)
    parameters:
    - id: contactId
      type: System.Int32
      description: The contact id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: documentTemplateIds
      type: System.Int32[]
      description: Ids of the document template types to filter on.
    return:
      type: SuperOffice.CRM.Services.Document[]
      description: Array of Appointments.
    content.vb: Function GetContactDocumentsByTemplateTypes(contactId As Integer, startTime As Date, endTime As Date, count As Integer, documentTemplateIds As Integer()) As Document()
  overload: SuperOffice.CRM.Services.IDocumentAgent.GetContactDocumentsByTemplateTypes*
  nameWithType.vb: IDocumentAgent.GetContactDocumentsByTemplateTypes(Int32, DateTime, DateTime, Int32, Int32())
  fullName.vb: SuperOffice.CRM.Services.IDocumentAgent.GetContactDocumentsByTemplateTypes(System.Int32, System.DateTime, System.DateTime, System.Int32, System.Int32())
  name.vb: GetContactDocumentsByTemplateTypes(Int32, DateTime, DateTime, Int32, Int32())
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetContactDocumentsByTemplateType(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.GetContactDocumentsByTemplateType(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32)
  id: GetContactDocumentsByTemplateType(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: GetContactDocumentsByTemplateType(Int32, DateTime, DateTime, Int32, Int32)
  nameWithType: IDocumentAgent.GetContactDocumentsByTemplateType(Int32, DateTime, DateTime, Int32, Int32)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetContactDocumentsByTemplateType(System.Int32, System.DateTime, System.DateTime, System.Int32, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nMethod that returns a specified number of document appointments within a time range, filtered by document template type. The document appointments belong to the contact specified. \n"
  syntax:
    content: Document[] GetContactDocumentsByTemplateType(int contactId, DateTime startTime, DateTime endTime, int count, int documentTemplateId)
    parameters:
    - id: contactId
      type: System.Int32
      description: The contact id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: documentTemplateId
      type: System.Int32
      description: Id of the document template type to filter on.
    return:
      type: SuperOffice.CRM.Services.Document[]
      description: Array of Appointments.
    content.vb: Function GetContactDocumentsByTemplateType(contactId As Integer, startTime As Date, endTime As Date, count As Integer, documentTemplateId As Integer) As Document()
  overload: SuperOffice.CRM.Services.IDocumentAgent.GetContactDocumentsByTemplateType*
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetContactDocumentsByTemplateHeading(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.GetContactDocumentsByTemplateHeading(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32)
  id: GetContactDocumentsByTemplateHeading(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: GetContactDocumentsByTemplateHeading(Int32, DateTime, DateTime, Int32, Int32)
  nameWithType: IDocumentAgent.GetContactDocumentsByTemplateHeading(Int32, DateTime, DateTime, Int32, Int32)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetContactDocumentsByTemplateHeading(System.Int32, System.DateTime, System.DateTime, System.Int32, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nMethod that returns a specified number of document appointments within a time range, filtered by the document template heading. The document appointments belong to the contact specified. The heading represents a grouping or filtering of document templates.\n"
  syntax:
    content: Document[] GetContactDocumentsByTemplateHeading(int contactId, DateTime startTime, DateTime endTime, int count, int templateHeadingId)
    parameters:
    - id: contactId
      type: System.Int32
      description: The contact id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: templateHeadingId
      type: System.Int32
      description: The document template heading id. The heading represents a grouping or filtering of document templates.
    return:
      type: SuperOffice.CRM.Services.Document[]
      description: Array of Appointments.
    content.vb: Function GetContactDocumentsByTemplateHeading(contactId As Integer, startTime As Date, endTime As Date, count As Integer, templateHeadingId As Integer) As Document()
  overload: SuperOffice.CRM.Services.IDocumentAgent.GetContactDocumentsByTemplateHeading*
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetContactDocuments(System.Int32,System.DateTime,System.DateTime,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.GetContactDocuments(System.Int32,System.DateTime,System.DateTime,System.Int32)
  id: GetContactDocuments(System.Int32,System.DateTime,System.DateTime,System.Int32)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: GetContactDocuments(Int32, DateTime, DateTime, Int32)
  nameWithType: IDocumentAgent.GetContactDocuments(Int32, DateTime, DateTime, Int32)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetContactDocuments(System.Int32, System.DateTime, System.DateTime, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nMethod that returns a specified number of document appointments within a time range. The document appointments belong to the contact specified. \n"
  syntax:
    content: Document[] GetContactDocuments(int contactId, DateTime startTime, DateTime endTime, int count)
    parameters:
    - id: contactId
      type: System.Int32
      description: The contact id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    return:
      type: SuperOffice.CRM.Services.Document[]
      description: Array of Appointments.
    content.vb: Function GetContactDocuments(contactId As Integer, startTime As Date, endTime As Date, count As Integer) As Document()
  overload: SuperOffice.CRM.Services.IDocumentAgent.GetContactDocuments*
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetPublishedPersonDocumentsByDate(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.GetPublishedPersonDocumentsByDate(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32)
  id: GetPublishedPersonDocumentsByDate(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: GetPublishedPersonDocumentsByDate(Int32, Boolean, DateTime, DateTime, Int32)
  nameWithType: IDocumentAgent.GetPublishedPersonDocumentsByDate(Int32, Boolean, DateTime, DateTime, Int32)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetPublishedPersonDocumentsByDate(System.Int32, System.Boolean, System.DateTime, System.DateTime, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nMethod that returns a specified number of published document appointments within a time range. The document appointments belong to the person specified or the document is in a project the person belongs to. \n"
  syntax:
    content: Document[] GetPublishedPersonDocumentsByDate(int personId, bool includeProjectDocuments, DateTime startTime, DateTime endTime, int count)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id of the SuperOffice user (associate).
    - id: includeProjectDocuments
      type: System.Boolean
      description: If true, all appointments that belong to projects where the user is a project member are included as well as the appointments belonging to the person.
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    return:
      type: SuperOffice.CRM.Services.Document[]
      description: Array of Appointments.
    content.vb: Function GetPublishedPersonDocumentsByDate(personId As Integer, includeProjectDocuments As Boolean, startTime As Date, endTime As Date, count As Integer) As Document()
  overload: SuperOffice.CRM.Services.IDocumentAgent.GetPublishedPersonDocumentsByDate*
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetPublishedProjectDocuments(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.GetPublishedProjectDocuments(System.Int32)
  id: GetPublishedProjectDocuments(System.Int32)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: GetPublishedProjectDocuments(Int32)
  nameWithType: IDocumentAgent.GetPublishedProjectDocuments(Int32)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetPublishedProjectDocuments(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet published appointment documents by project id.\n"
  syntax:
    content: Document[] GetPublishedProjectDocuments(int projectId)
    parameters:
    - id: projectId
      type: System.Int32
      description: The project id
    return:
      type: SuperOffice.CRM.Services.Document[]
      description: Array of Appointment
    content.vb: Function GetPublishedProjectDocuments(projectId As Integer) As Document()
  overload: SuperOffice.CRM.Services.IDocumentAgent.GetPublishedProjectDocuments*
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetProjectMemberDocumentsByTemplateTypes(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[])
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.GetProjectMemberDocumentsByTemplateTypes(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[])
  id: GetProjectMemberDocumentsByTemplateTypes(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[])
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: GetProjectMemberDocumentsByTemplateTypes(Int32, DateTime, DateTime, Int32, Int32[])
  nameWithType: IDocumentAgent.GetProjectMemberDocumentsByTemplateTypes(Int32, DateTime, DateTime, Int32, Int32[])
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetProjectMemberDocumentsByTemplateTypes(System.Int32, System.DateTime, System.DateTime, System.Int32, System.Int32[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nMethod that returns a specified number of document appointments within a time range, filtered by document template types. The document appointments belong to the project member specified. \n"
  syntax:
    content: Document[] GetProjectMemberDocumentsByTemplateTypes(int personId, DateTime startTime, DateTime endTime, int count, int[] documentTemplateIds)
    parameters:
    - id: personId
      type: System.Int32
      description: The project member&apos;s person id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: documentTemplateIds
      type: System.Int32[]
      description: Ids of the document template types to filter on.
    return:
      type: SuperOffice.CRM.Services.Document[]
      description: Array of Appointments.
    content.vb: Function GetProjectMemberDocumentsByTemplateTypes(personId As Integer, startTime As Date, endTime As Date, count As Integer, documentTemplateIds As Integer()) As Document()
  overload: SuperOffice.CRM.Services.IDocumentAgent.GetProjectMemberDocumentsByTemplateTypes*
  nameWithType.vb: IDocumentAgent.GetProjectMemberDocumentsByTemplateTypes(Int32, DateTime, DateTime, Int32, Int32())
  fullName.vb: SuperOffice.CRM.Services.IDocumentAgent.GetProjectMemberDocumentsByTemplateTypes(System.Int32, System.DateTime, System.DateTime, System.Int32, System.Int32())
  name.vb: GetProjectMemberDocumentsByTemplateTypes(Int32, DateTime, DateTime, Int32, Int32())
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetProjectMemberDocumentsByTemplateType(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.GetProjectMemberDocumentsByTemplateType(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32)
  id: GetProjectMemberDocumentsByTemplateType(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: GetProjectMemberDocumentsByTemplateType(Int32, DateTime, DateTime, Int32, Int32)
  nameWithType: IDocumentAgent.GetProjectMemberDocumentsByTemplateType(Int32, DateTime, DateTime, Int32, Int32)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetProjectMemberDocumentsByTemplateType(System.Int32, System.DateTime, System.DateTime, System.Int32, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nMethod that returns a specified number of document appointments within a time range, filtered by document template type. The document appointments belong to the project member specified. \n"
  syntax:
    content: Document[] GetProjectMemberDocumentsByTemplateType(int personId, DateTime startTime, DateTime endTime, int count, int documentTemplateId)
    parameters:
    - id: personId
      type: System.Int32
      description: The project member&apos;s person id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: documentTemplateId
      type: System.Int32
      description: Id of the document template type to filter on.
    return:
      type: SuperOffice.CRM.Services.Document[]
      description: Array of Appointments.
    content.vb: Function GetProjectMemberDocumentsByTemplateType(personId As Integer, startTime As Date, endTime As Date, count As Integer, documentTemplateId As Integer) As Document()
  overload: SuperOffice.CRM.Services.IDocumentAgent.GetProjectMemberDocumentsByTemplateType*
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetProjectMemberDocumentsByTemplateHeading(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.GetProjectMemberDocumentsByTemplateHeading(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32)
  id: GetProjectMemberDocumentsByTemplateHeading(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: GetProjectMemberDocumentsByTemplateHeading(Int32, DateTime, DateTime, Int32, Int32)
  nameWithType: IDocumentAgent.GetProjectMemberDocumentsByTemplateHeading(Int32, DateTime, DateTime, Int32, Int32)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetProjectMemberDocumentsByTemplateHeading(System.Int32, System.DateTime, System.DateTime, System.Int32, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nMethod that returns a specified number of document appointments within a time range, filtered by document template heading. The document appointments belong to the project member specified. The heading represents a grouping or filtering of document templates.\n"
  syntax:
    content: Document[] GetProjectMemberDocumentsByTemplateHeading(int personId, DateTime startTime, DateTime endTime, int count, int templateHeadingId)
    parameters:
    - id: personId
      type: System.Int32
      description: The project member&apos;s person id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: templateHeadingId
      type: System.Int32
      description: The document template heading id. The heading represents a grouping or filtering of document templates.
    return:
      type: SuperOffice.CRM.Services.Document[]
      description: Array of Appointments.
    content.vb: Function GetProjectMemberDocumentsByTemplateHeading(personId As Integer, startTime As Date, endTime As Date, count As Integer, templateHeadingId As Integer) As Document()
  overload: SuperOffice.CRM.Services.IDocumentAgent.GetProjectMemberDocumentsByTemplateHeading*
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetProjectMemberDocuments(System.Int32,System.DateTime,System.DateTime,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.GetProjectMemberDocuments(System.Int32,System.DateTime,System.DateTime,System.Int32)
  id: GetProjectMemberDocuments(System.Int32,System.DateTime,System.DateTime,System.Int32)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: GetProjectMemberDocuments(Int32, DateTime, DateTime, Int32)
  nameWithType: IDocumentAgent.GetProjectMemberDocuments(Int32, DateTime, DateTime, Int32)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetProjectMemberDocuments(System.Int32, System.DateTime, System.DateTime, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nMethod that returns a specified number of document appointments within a time range. The document appointments belong to the project member specified. \n"
  syntax:
    content: Document[] GetProjectMemberDocuments(int personId, DateTime startTime, DateTime endTime, int count)
    parameters:
    - id: personId
      type: System.Int32
      description: The project member&apos;s person id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    return:
      type: SuperOffice.CRM.Services.Document[]
      description: Array of Appointments.
    content.vb: Function GetProjectMemberDocuments(personId As Integer, startTime As Date, endTime As Date, count As Integer) As Document()
  overload: SuperOffice.CRM.Services.IDocumentAgent.GetProjectMemberDocuments*
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetProjectDocumentsByTemplateTypes(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[])
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.GetProjectDocumentsByTemplateTypes(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[])
  id: GetProjectDocumentsByTemplateTypes(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[])
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: GetProjectDocumentsByTemplateTypes(Int32, DateTime, DateTime, Int32, Int32[])
  nameWithType: IDocumentAgent.GetProjectDocumentsByTemplateTypes(Int32, DateTime, DateTime, Int32, Int32[])
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetProjectDocumentsByTemplateTypes(System.Int32, System.DateTime, System.DateTime, System.Int32, System.Int32[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nMethod that returns a specified number of document appointments within a time range, filtered by document template types. The document appointments belong to the project specified. \n"
  syntax:
    content: Document[] GetProjectDocumentsByTemplateTypes(int projectId, DateTime startTime, DateTime endTime, int count, int[] documentTemplateIds)
    parameters:
    - id: projectId
      type: System.Int32
      description: The project id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: documentTemplateIds
      type: System.Int32[]
      description: Ids of the document template types to filter on.
    return:
      type: SuperOffice.CRM.Services.Document[]
      description: Array of Appointments.
    content.vb: Function GetProjectDocumentsByTemplateTypes(projectId As Integer, startTime As Date, endTime As Date, count As Integer, documentTemplateIds As Integer()) As Document()
  overload: SuperOffice.CRM.Services.IDocumentAgent.GetProjectDocumentsByTemplateTypes*
  nameWithType.vb: IDocumentAgent.GetProjectDocumentsByTemplateTypes(Int32, DateTime, DateTime, Int32, Int32())
  fullName.vb: SuperOffice.CRM.Services.IDocumentAgent.GetProjectDocumentsByTemplateTypes(System.Int32, System.DateTime, System.DateTime, System.Int32, System.Int32())
  name.vb: GetProjectDocumentsByTemplateTypes(Int32, DateTime, DateTime, Int32, Int32())
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetProjectDocumentsByTemplateType(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.GetProjectDocumentsByTemplateType(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32)
  id: GetProjectDocumentsByTemplateType(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: GetProjectDocumentsByTemplateType(Int32, DateTime, DateTime, Int32, Int32)
  nameWithType: IDocumentAgent.GetProjectDocumentsByTemplateType(Int32, DateTime, DateTime, Int32, Int32)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetProjectDocumentsByTemplateType(System.Int32, System.DateTime, System.DateTime, System.Int32, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nMethod that returns a specified number of document appointments within a time range, filtered by document template type. The document appointments belong to the project specified. \n"
  syntax:
    content: Document[] GetProjectDocumentsByTemplateType(int projectId, DateTime startTime, DateTime endTime, int count, int documentTemplateId)
    parameters:
    - id: projectId
      type: System.Int32
      description: The project id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: documentTemplateId
      type: System.Int32
      description: Id of the document template type to filter on.
    return:
      type: SuperOffice.CRM.Services.Document[]
      description: Array of Appointments.
    content.vb: Function GetProjectDocumentsByTemplateType(projectId As Integer, startTime As Date, endTime As Date, count As Integer, documentTemplateId As Integer) As Document()
  overload: SuperOffice.CRM.Services.IDocumentAgent.GetProjectDocumentsByTemplateType*
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetProjectDocumentsByTemplateHeading(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.GetProjectDocumentsByTemplateHeading(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32)
  id: GetProjectDocumentsByTemplateHeading(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: GetProjectDocumentsByTemplateHeading(Int32, DateTime, DateTime, Int32, Int32)
  nameWithType: IDocumentAgent.GetProjectDocumentsByTemplateHeading(Int32, DateTime, DateTime, Int32, Int32)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetProjectDocumentsByTemplateHeading(System.Int32, System.DateTime, System.DateTime, System.Int32, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nMethod that returns a specified number of document appointments within a time range, filtered by document template heading. The document appointments belong to the project specified. The heading represents a grouping or filtering of document templates.\n"
  syntax:
    content: Document[] GetProjectDocumentsByTemplateHeading(int projectId, DateTime startTime, DateTime endTime, int count, int templateHeadingId)
    parameters:
    - id: projectId
      type: System.Int32
      description: The project id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: templateHeadingId
      type: System.Int32
      description: The document template heading id. The heading represents a grouping or filtering of document templates.
    return:
      type: SuperOffice.CRM.Services.Document[]
      description: Array of Appointments.
    content.vb: Function GetProjectDocumentsByTemplateHeading(projectId As Integer, startTime As Date, endTime As Date, count As Integer, templateHeadingId As Integer) As Document()
  overload: SuperOffice.CRM.Services.IDocumentAgent.GetProjectDocumentsByTemplateHeading*
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetProjectDocuments(System.Int32,System.DateTime,System.DateTime,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.GetProjectDocuments(System.Int32,System.DateTime,System.DateTime,System.Int32)
  id: GetProjectDocuments(System.Int32,System.DateTime,System.DateTime,System.Int32)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: GetProjectDocuments(Int32, DateTime, DateTime, Int32)
  nameWithType: IDocumentAgent.GetProjectDocuments(Int32, DateTime, DateTime, Int32)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetProjectDocuments(System.Int32, System.DateTime, System.DateTime, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nMethod that returns a specified number of document appointments within a time range. The document appointments belong to the project specified. \n"
  syntax:
    content: Document[] GetProjectDocuments(int projectId, DateTime startTime, DateTime endTime, int count)
    parameters:
    - id: projectId
      type: System.Int32
      description: The project id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    return:
      type: SuperOffice.CRM.Services.Document[]
      description: Array of Appointments.
    content.vb: Function GetProjectDocuments(projectId As Integer, startTime As Date, endTime As Date, count As Integer) As Document()
  overload: SuperOffice.CRM.Services.IDocumentAgent.GetProjectDocuments*
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetPersonDocumentsByTemplateTypes(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32[])
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.GetPersonDocumentsByTemplateTypes(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32[])
  id: GetPersonDocumentsByTemplateTypes(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32[])
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: GetPersonDocumentsByTemplateTypes(Int32, Boolean, DateTime, DateTime, Int32, Int32[])
  nameWithType: IDocumentAgent.GetPersonDocumentsByTemplateTypes(Int32, Boolean, DateTime, DateTime, Int32, Int32[])
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetPersonDocumentsByTemplateTypes(System.Int32, System.Boolean, System.DateTime, System.DateTime, System.Int32, System.Int32[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nMethod that returns a specified number of document appointments within a time range, filtered by document template types. The document appointments belong to the person specified. \n"
  syntax:
    content: Document[] GetPersonDocumentsByTemplateTypes(int personId, bool includeProjectDocuments, DateTime startTime, DateTime endTime, int count, int[] documentTemplateIds)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id of the SuperOffice user (associate).
    - id: includeProjectDocuments
      type: System.Boolean
      description: If true, all appointments that belong to projects where the user is a project member are included as well as the appointments belonging to the person.
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: documentTemplateIds
      type: System.Int32[]
      description: Ids of the document template types to filter on.
    return:
      type: SuperOffice.CRM.Services.Document[]
      description: Array of Appointments.
    content.vb: Function GetPersonDocumentsByTemplateTypes(personId As Integer, includeProjectDocuments As Boolean, startTime As Date, endTime As Date, count As Integer, documentTemplateIds As Integer()) As Document()
  overload: SuperOffice.CRM.Services.IDocumentAgent.GetPersonDocumentsByTemplateTypes*
  nameWithType.vb: IDocumentAgent.GetPersonDocumentsByTemplateTypes(Int32, Boolean, DateTime, DateTime, Int32, Int32())
  fullName.vb: SuperOffice.CRM.Services.IDocumentAgent.GetPersonDocumentsByTemplateTypes(System.Int32, System.Boolean, System.DateTime, System.DateTime, System.Int32, System.Int32())
  name.vb: GetPersonDocumentsByTemplateTypes(Int32, Boolean, DateTime, DateTime, Int32, Int32())
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetPersonDocumentsByTemplateType(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.GetPersonDocumentsByTemplateType(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32)
  id: GetPersonDocumentsByTemplateType(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: GetPersonDocumentsByTemplateType(Int32, Boolean, DateTime, DateTime, Int32, Int32)
  nameWithType: IDocumentAgent.GetPersonDocumentsByTemplateType(Int32, Boolean, DateTime, DateTime, Int32, Int32)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetPersonDocumentsByTemplateType(System.Int32, System.Boolean, System.DateTime, System.DateTime, System.Int32, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nMethod that returns a specified number of document appointments within a time range, filtered by document template type. The document appointments belong to the person specified. \n"
  syntax:
    content: Document[] GetPersonDocumentsByTemplateType(int personId, bool includeProjectDocuments, DateTime startTime, DateTime endTime, int count, int documentTemplateId)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id of the SuperOffice user (associate).
    - id: includeProjectDocuments
      type: System.Boolean
      description: If true, all appointments that belong to projects where the user is a project member are included as well as the appointments belonging to the person.
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: documentTemplateId
      type: System.Int32
      description: Id of the document template type to filter on.
    return:
      type: SuperOffice.CRM.Services.Document[]
      description: Array of Appointments.
    content.vb: Function GetPersonDocumentsByTemplateType(personId As Integer, includeProjectDocuments As Boolean, startTime As Date, endTime As Date, count As Integer, documentTemplateId As Integer) As Document()
  overload: SuperOffice.CRM.Services.IDocumentAgent.GetPersonDocumentsByTemplateType*
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetPersonDocumentsByTemplateHeading(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.GetPersonDocumentsByTemplateHeading(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32)
  id: GetPersonDocumentsByTemplateHeading(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: GetPersonDocumentsByTemplateHeading(Int32, Boolean, DateTime, DateTime, Int32, Int32)
  nameWithType: IDocumentAgent.GetPersonDocumentsByTemplateHeading(Int32, Boolean, DateTime, DateTime, Int32, Int32)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetPersonDocumentsByTemplateHeading(System.Int32, System.Boolean, System.DateTime, System.DateTime, System.Int32, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nMethod that returns a specified number of document appointments within a time range, filtered by document template heading. The document appointments belong to the person specified. The heading represents a grouping or filtering of document templates.\n"
  syntax:
    content: Document[] GetPersonDocumentsByTemplateHeading(int personId, bool includeProjectDocuments, DateTime startTime, DateTime endTime, int count, int templateHeadingId)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id of the SuperOffice user (associate).
    - id: includeProjectDocuments
      type: System.Boolean
      description: If true, all appointments that belong to projects where the user is a project member are included as well as the appointments belonging to the person.
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: templateHeadingId
      type: System.Int32
      description: The document template heading id. The heading represents a grouping or filtering of document templates.
    return:
      type: SuperOffice.CRM.Services.Document[]
      description: Array of Appointments.
    content.vb: Function GetPersonDocumentsByTemplateHeading(personId As Integer, includeProjectDocuments As Boolean, startTime As Date, endTime As Date, count As Integer, templateHeadingId As Integer) As Document()
  overload: SuperOffice.CRM.Services.IDocumentAgent.GetPersonDocumentsByTemplateHeading*
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetPersonDocumentsByDate(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.GetPersonDocumentsByDate(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32)
  id: GetPersonDocumentsByDate(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: GetPersonDocumentsByDate(Int32, Boolean, DateTime, DateTime, Int32)
  nameWithType: IDocumentAgent.GetPersonDocumentsByDate(Int32, Boolean, DateTime, DateTime, Int32)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetPersonDocumentsByDate(System.Int32, System.Boolean, System.DateTime, System.DateTime, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nMethod that returns a specified number of document appointments within a time range. The document appointments belong to the person specified. \n"
  syntax:
    content: Document[] GetPersonDocumentsByDate(int personId, bool includeProjectDocuments, DateTime startTime, DateTime endTime, int count)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id of the SuperOffice user (associate).
    - id: includeProjectDocuments
      type: System.Boolean
      description: If true, all appointments that belong to projects where the user is a project member are included as well as the appointments belonging to the person.
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    return:
      type: SuperOffice.CRM.Services.Document[]
      description: Array of Appointments.
    content.vb: Function GetPersonDocumentsByDate(personId As Integer, includeProjectDocuments As Boolean, startTime As Date, endTime As Date, count As Integer) As Document()
  overload: SuperOffice.CRM.Services.IDocumentAgent.GetPersonDocumentsByDate*
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetDocumentsByTemplateHeading(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.GetDocumentsByTemplateHeading(System.Int32)
  id: GetDocumentsByTemplateHeading(System.Int32)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: GetDocumentsByTemplateHeading(Int32)
  nameWithType: IDocumentAgent.GetDocumentsByTemplateHeading(Int32)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetDocumentsByTemplateHeading(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nMethod that returns document appointments, filtered by the document template heading. The heading represents a grouping or filtering of document templates.\n"
  syntax:
    content: Document[] GetDocumentsByTemplateHeading(int templateHeadingId)
    parameters:
    - id: templateHeadingId
      type: System.Int32
      description: The document template heading id. The heading represents a grouping or filtering of document templates.
    return:
      type: SuperOffice.CRM.Services.Document[]
      description: Array of Appointments.
    content.vb: Function GetDocumentsByTemplateHeading(templateHeadingId As Integer) As Document()
  overload: SuperOffice.CRM.Services.IDocumentAgent.GetDocumentsByTemplateHeading*
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetSuggestedDocumentEntity(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IDocumentAgent.GetSuggestedDocumentEntity(System.Int32)
  id: GetSuggestedDocumentEntity(System.Int32)
  parent: SuperOffice.CRM.Services.IDocumentAgent
  langs:
  - csharp
  - vb
  name: GetSuggestedDocumentEntity(Int32)
  nameWithType: IDocumentAgent.GetSuggestedDocumentEntity(Int32)
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetSuggestedDocumentEntity(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets a SuggestedDocumentEntity object.                        \n"
  syntax:
    content: SuggestedDocumentEntity GetSuggestedDocumentEntity(int suggestedDocumentEntityId)
    parameters:
    - id: suggestedDocumentEntityId
      type: System.Int32
      description: The identifier of the SuggestedDocumentEntity object
    return:
      type: SuperOffice.CRM.Services.SuggestedDocumentEntity
      description: SuggestedDocumentEntity
    content.vb: Function GetSuggestedDocumentEntity(suggestedDocumentEntityId As Integer) As SuggestedDocumentEntity
  overload: SuperOffice.CRM.Services.IDocumentAgent.GetSuggestedDocumentEntity*
references:
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
- uid: SuperOffice.CRM.Services.IDocumentAgent.CreateDefaultDocumentEntity*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.CreateDefaultDocumentEntity
  isExternal: true
  name: CreateDefaultDocumentEntity
  nameWithType: IDocumentAgent.CreateDefaultDocumentEntity
  fullName: SuperOffice.CRM.Services.IDocumentAgent.CreateDefaultDocumentEntity
- uid: SuperOffice.CRM.Services.DocumentEntity
  commentId: T:SuperOffice.CRM.Services.DocumentEntity
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: DocumentEntity
  nameWithType: DocumentEntity
  fullName: SuperOffice.CRM.Services.DocumentEntity
- uid: SuperOffice.CRM.Services.IDocumentAgent.SaveDocumentEntity*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.SaveDocumentEntity
  isExternal: true
  name: SaveDocumentEntity
  nameWithType: IDocumentAgent.SaveDocumentEntity
  fullName: SuperOffice.CRM.Services.IDocumentAgent.SaveDocumentEntity
- uid: SuperOffice.CRM.Services.IDocumentAgent.DeleteDocumentEntity*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.DeleteDocumentEntity
  isExternal: true
  name: DeleteDocumentEntity
  nameWithType: IDocumentAgent.DeleteDocumentEntity
  fullName: SuperOffice.CRM.Services.IDocumentAgent.DeleteDocumentEntity
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Services.IDocumentAgent.CreateDefaultDocumentPreview*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.CreateDefaultDocumentPreview
  isExternal: true
  name: CreateDefaultDocumentPreview
  nameWithType: IDocumentAgent.CreateDefaultDocumentPreview
  fullName: SuperOffice.CRM.Services.IDocumentAgent.CreateDefaultDocumentPreview
- uid: SuperOffice.CRM.Services.DocumentPreview
  commentId: T:SuperOffice.CRM.Services.DocumentPreview
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: DocumentPreview
  nameWithType: DocumentPreview
  fullName: SuperOffice.CRM.Services.DocumentPreview
- uid: SuperOffice.CRM.Services.IDocumentAgent.CreateDefaultSuggestedDocumentEntity*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.CreateDefaultSuggestedDocumentEntity
  isExternal: true
  name: CreateDefaultSuggestedDocumentEntity
  nameWithType: IDocumentAgent.CreateDefaultSuggestedDocumentEntity
  fullName: SuperOffice.CRM.Services.IDocumentAgent.CreateDefaultSuggestedDocumentEntity
- uid: SuperOffice.CRM.Services.SuggestedDocumentEntity
  commentId: T:SuperOffice.CRM.Services.SuggestedDocumentEntity
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: SuggestedDocumentEntity
  nameWithType: SuggestedDocumentEntity
  fullName: SuperOffice.CRM.Services.SuggestedDocumentEntity
- uid: SuperOffice.CRM.Services.IDocumentAgent.SaveSuggestedDocumentEntity*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.SaveSuggestedDocumentEntity
  isExternal: true
  name: SaveSuggestedDocumentEntity
  nameWithType: IDocumentAgent.SaveSuggestedDocumentEntity
  fullName: SuperOffice.CRM.Services.IDocumentAgent.SaveSuggestedDocumentEntity
- uid: SuperOffice.CRM.Services.IDocumentAgent.CreateDefaultTemplateVariablesParameters*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.CreateDefaultTemplateVariablesParameters
  isExternal: true
  name: CreateDefaultTemplateVariablesParameters
  nameWithType: IDocumentAgent.CreateDefaultTemplateVariablesParameters
  fullName: SuperOffice.CRM.Services.IDocumentAgent.CreateDefaultTemplateVariablesParameters
- uid: SuperOffice.CRM.Services.TemplateVariablesParameters
  commentId: T:SuperOffice.CRM.Services.TemplateVariablesParameters
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: TemplateVariablesParameters
  nameWithType: TemplateVariablesParameters
  fullName: SuperOffice.CRM.Services.TemplateVariablesParameters
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetDocument*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.GetDocument
  isExternal: true
  name: GetDocument
  nameWithType: IDocumentAgent.GetDocument
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetDocument
- uid: SuperOffice.CRM.Services.Document
  commentId: T:SuperOffice.CRM.Services.Document
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: Document
  nameWithType: Document
  fullName: SuperOffice.CRM.Services.Document
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetDocumentEntity*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.GetDocumentEntity
  isExternal: true
  name: GetDocumentEntity
  nameWithType: IDocumentAgent.GetDocumentEntity
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetDocumentEntity
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetDocumentStreamFromEntity*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.GetDocumentStreamFromEntity
  isExternal: true
  name: GetDocumentStreamFromEntity
  nameWithType: IDocumentAgent.GetDocumentStreamFromEntity
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetDocumentStreamFromEntity
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: SuperOffice.CRM.Services.IDocumentAgent.SetDocumentStream*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.SetDocumentStream
  isExternal: true
  name: SetDocumentStream
  nameWithType: IDocumentAgent.SetDocumentStream
  fullName: SuperOffice.CRM.Services.IDocumentAgent.SetDocumentStream
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.CRM.Services.IDocumentAgent.CreateDocumentStream*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.CreateDocumentStream
  isExternal: true
  name: CreateDocumentStream
  nameWithType: IDocumentAgent.CreateDocumentStream
  fullName: SuperOffice.CRM.Services.IDocumentAgent.CreateDocumentStream
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetTemplateStream*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.GetTemplateStream
  isExternal: true
  name: GetTemplateStream
  nameWithType: IDocumentAgent.GetTemplateStream
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetTemplateStream
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetSanitizedTemplateStream*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.GetSanitizedTemplateStream
  isExternal: true
  name: GetSanitizedTemplateStream
  nameWithType: IDocumentAgent.GetSanitizedTemplateStream
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetSanitizedTemplateStream
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetTemplateStreamFromId*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.GetTemplateStreamFromId
  isExternal: true
  name: GetTemplateStreamFromId
  nameWithType: IDocumentAgent.GetTemplateStreamFromId
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetTemplateStreamFromId
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetSanitizedTemplateStreamFromId*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.GetSanitizedTemplateStreamFromId
  isExternal: true
  name: GetSanitizedTemplateStreamFromId
  nameWithType: IDocumentAgent.GetSanitizedTemplateStreamFromId
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetSanitizedTemplateStreamFromId
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetDocumentStream*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.GetDocumentStream
  isExternal: true
  name: GetDocumentStream
  nameWithType: IDocumentAgent.GetDocumentStream
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetDocumentStream
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetSanitizedDocumentStream*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.GetSanitizedDocumentStream
  isExternal: true
  name: GetSanitizedDocumentStream
  nameWithType: IDocumentAgent.GetSanitizedDocumentStream
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetSanitizedDocumentStream
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetPreviewDocumentStream*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.GetPreviewDocumentStream
  isExternal: true
  name: GetPreviewDocumentStream
  nameWithType: IDocumentAgent.GetPreviewDocumentStream
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetPreviewDocumentStream
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetUnsanitizedPreviewDocumentStream*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.GetUnsanitizedPreviewDocumentStream
  isExternal: true
  name: GetUnsanitizedPreviewDocumentStream
  nameWithType: IDocumentAgent.GetUnsanitizedPreviewDocumentStream
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetUnsanitizedPreviewDocumentStream
- uid: SuperOffice.CRM.Services.IDocumentAgent.CreateNewPhysicalMailMergeDocumentFromTemplate*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.CreateNewPhysicalMailMergeDocumentFromTemplate
  isExternal: true
  name: CreateNewPhysicalMailMergeDocumentFromTemplate
  nameWithType: IDocumentAgent.CreateNewPhysicalMailMergeDocumentFromTemplate
  fullName: SuperOffice.CRM.Services.IDocumentAgent.CreateNewPhysicalMailMergeDocumentFromTemplate
- uid: SuperOffice.CRM.Services.IDocumentAgent.CreateNewPhysicalDocumentFromTemplateWithCustomTags*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.CreateNewPhysicalDocumentFromTemplateWithCustomTags
  isExternal: true
  name: CreateNewPhysicalDocumentFromTemplateWithCustomTags
  nameWithType: IDocumentAgent.CreateNewPhysicalDocumentFromTemplateWithCustomTags
  fullName: SuperOffice.CRM.Services.IDocumentAgent.CreateNewPhysicalDocumentFromTemplateWithCustomTags
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.IDocumentAgent.CreateNewPhysicalDocumentFromTemplateWithCustomTags2*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.CreateNewPhysicalDocumentFromTemplateWithCustomTags2
  isExternal: true
  name: CreateNewPhysicalDocumentFromTemplateWithCustomTags2
  nameWithType: IDocumentAgent.CreateNewPhysicalDocumentFromTemplateWithCustomTags2
  fullName: SuperOffice.CRM.Services.IDocumentAgent.CreateNewPhysicalDocumentFromTemplateWithCustomTags2
- uid: SuperOffice.CRM.Services.StringDictionary
  isExternal: true
  name: StringDictionary
  nameWithType: StringDictionary
  fullName: SuperOffice.CRM.Services.StringDictionary
- uid: SuperOffice.CRM.Services.IDocumentAgent.SubstituteTemplateVariables*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.SubstituteTemplateVariables
  isExternal: true
  name: SubstituteTemplateVariables
  nameWithType: IDocumentAgent.SubstituteTemplateVariables
  fullName: SuperOffice.CRM.Services.IDocumentAgent.SubstituteTemplateVariables
- uid: SuperOffice.Data.GeneratorEncoding
  isExternal: true
  name: GeneratorEncoding
  nameWithType: GeneratorEncoding
  fullName: SuperOffice.Data.GeneratorEncoding
- uid: SuperOffice.CRM.Services.IDocumentAgent.SubstituteTemplateVariablesWithCustomTags*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.SubstituteTemplateVariablesWithCustomTags
  isExternal: true
  name: SubstituteTemplateVariablesWithCustomTags
  nameWithType: IDocumentAgent.SubstituteTemplateVariablesWithCustomTags
  fullName: SuperOffice.CRM.Services.IDocumentAgent.SubstituteTemplateVariablesWithCustomTags
- uid: SuperOffice.CRM.Services.IDocumentAgent.SubstituteTemplateVariablesWithCustomTags2*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.SubstituteTemplateVariablesWithCustomTags2
  isExternal: true
  name: SubstituteTemplateVariablesWithCustomTags2
  nameWithType: IDocumentAgent.SubstituteTemplateVariablesWithCustomTags2
  fullName: SuperOffice.CRM.Services.IDocumentAgent.SubstituteTemplateVariablesWithCustomTags2
- uid: SuperOffice.CRM.Services.IDocumentAgent.CreateTempFile*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.CreateTempFile
  isExternal: true
  name: CreateTempFile
  nameWithType: IDocumentAgent.CreateTempFile
  fullName: SuperOffice.CRM.Services.IDocumentAgent.CreateTempFile
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetTempFile*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.GetTempFile
  isExternal: true
  name: GetTempFile
  nameWithType: IDocumentAgent.GetTempFile
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetTempFile
- uid: SuperOffice.CRM.Services.IDocumentAgent.DeleteTempFile*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.DeleteTempFile
  isExternal: true
  name: DeleteTempFile
  nameWithType: IDocumentAgent.DeleteTempFile
  fullName: SuperOffice.CRM.Services.IDocumentAgent.DeleteTempFile
- uid: SuperOffice.CRM.Services.IDocumentAgent.SetTemplateStream*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.SetTemplateStream
  isExternal: true
  name: SetTemplateStream
  nameWithType: IDocumentAgent.SetTemplateStream
  fullName: SuperOffice.CRM.Services.IDocumentAgent.SetTemplateStream
- uid: SuperOffice.CRM.Services.IDocumentAgent.CreateNewPhysicalDocumentFromTemplate*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.CreateNewPhysicalDocumentFromTemplate
  isExternal: true
  name: CreateNewPhysicalDocumentFromTemplate
  nameWithType: IDocumentAgent.CreateNewPhysicalDocumentFromTemplate
  fullName: SuperOffice.CRM.Services.IDocumentAgent.CreateNewPhysicalDocumentFromTemplate
- uid: SuperOffice.CRM.Services.IDocumentAgent.SubstituteMergeDocumentTemplateVariables*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.SubstituteMergeDocumentTemplateVariables
  isExternal: true
  name: SubstituteMergeDocumentTemplateVariables
  nameWithType: IDocumentAgent.SubstituteMergeDocumentTemplateVariables
  fullName: SuperOffice.CRM.Services.IDocumentAgent.SubstituteMergeDocumentTemplateVariables
- uid: SuperOffice.CRM.Services.IDocumentAgent.SubstituteMergeDocumentTemplateVariables2*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.SubstituteMergeDocumentTemplateVariables2
  isExternal: true
  name: SubstituteMergeDocumentTemplateVariables2
  nameWithType: IDocumentAgent.SubstituteMergeDocumentTemplateVariables2
  fullName: SuperOffice.CRM.Services.IDocumentAgent.SubstituteMergeDocumentTemplateVariables2
- uid: SuperOffice.CRM.Services.IDocumentAgent.SubstituteTemplateVariablesEx*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.SubstituteTemplateVariablesEx
  isExternal: true
  name: SubstituteTemplateVariablesEx
  nameWithType: IDocumentAgent.SubstituteTemplateVariablesEx
  fullName: SuperOffice.CRM.Services.IDocumentAgent.SubstituteTemplateVariablesEx
- uid: SuperOffice.CRM.Services.IDocumentAgent.VerifyGetDocumentStream*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.VerifyGetDocumentStream
  isExternal: true
  name: VerifyGetDocumentStream
  nameWithType: IDocumentAgent.VerifyGetDocumentStream
  fullName: SuperOffice.CRM.Services.IDocumentAgent.VerifyGetDocumentStream
- uid: SuperOffice.CRM.Services.IDocumentAgent.SubstituteMergeDocumentTemplateVariablesEx*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.SubstituteMergeDocumentTemplateVariablesEx
  isExternal: true
  name: SubstituteMergeDocumentTemplateVariablesEx
  nameWithType: IDocumentAgent.SubstituteMergeDocumentTemplateVariablesEx
  fullName: SuperOffice.CRM.Services.IDocumentAgent.SubstituteMergeDocumentTemplateVariablesEx
- uid: SuperOffice.CRM.Services.IDocumentAgent.SubstituteMergeDocumentTemplateVariablesEx2*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.SubstituteMergeDocumentTemplateVariablesEx2
  isExternal: true
  name: SubstituteMergeDocumentTemplateVariablesEx2
  nameWithType: IDocumentAgent.SubstituteMergeDocumentTemplateVariablesEx2
  fullName: SuperOffice.CRM.Services.IDocumentAgent.SubstituteMergeDocumentTemplateVariablesEx2
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetDocumentUrl*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.GetDocumentUrl
  isExternal: true
  name: GetDocumentUrl
  nameWithType: IDocumentAgent.GetDocumentUrl
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetDocumentUrl
- uid: SuperOffice.CRM.Services.IDocumentAgent.DeletePhysicalDocument*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.DeletePhysicalDocument
  isExternal: true
  name: DeletePhysicalDocument
  nameWithType: IDocumentAgent.DeletePhysicalDocument
  fullName: SuperOffice.CRM.Services.IDocumentAgent.DeletePhysicalDocument
- uid: SuperOffice.CRM.ReturnInfo
  isExternal: true
  name: ReturnInfo
  nameWithType: ReturnInfo
  fullName: SuperOffice.CRM.ReturnInfo
- uid: SuperOffice.CRM.Services.IDocumentAgent.RenameDocument*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.RenameDocument
  isExternal: true
  name: RenameDocument
  nameWithType: IDocumentAgent.RenameDocument
  fullName: SuperOffice.CRM.Services.IDocumentAgent.RenameDocument
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetCheckoutState*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.GetCheckoutState
  isExternal: true
  name: GetCheckoutState
  nameWithType: IDocumentAgent.GetCheckoutState
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetCheckoutState
- uid: SuperOffice.CRM.Documents.CheckoutInfo
  isExternal: true
  name: CheckoutInfo
  nameWithType: CheckoutInfo
  fullName: SuperOffice.CRM.Documents.CheckoutInfo
- uid: SuperOffice.CRM.Services.IDocumentAgent.CheckoutDocument*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.CheckoutDocument
  isExternal: true
  name: CheckoutDocument
  nameWithType: IDocumentAgent.CheckoutDocument
  fullName: SuperOffice.CRM.Services.IDocumentAgent.CheckoutDocument
- uid: SuperOffice.CRM.Services.IDocumentAgent.CheckinDocument*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.CheckinDocument
  isExternal: true
  name: CheckinDocument
  nameWithType: IDocumentAgent.CheckinDocument
  fullName: SuperOffice.CRM.Services.IDocumentAgent.CheckinDocument
- uid: SuperOffice.CRM.Services.IDocumentAgent.UndoCheckoutDocument*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.UndoCheckoutDocument
  isExternal: true
  name: UndoCheckoutDocument
  nameWithType: IDocumentAgent.UndoCheckoutDocument
  fullName: SuperOffice.CRM.Services.IDocumentAgent.UndoCheckoutDocument
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetVersionList*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.GetVersionList
  isExternal: true
  name: GetVersionList
  nameWithType: IDocumentAgent.GetVersionList
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetVersionList
- uid: SuperOffice.CRM.Documents.VersionInfo[]
  isExternal: true
  name: VersionInfo[]
  nameWithType: VersionInfo[]
  fullName: SuperOffice.CRM.Documents.VersionInfo[]
  nameWithType.vb: VersionInfo()
  fullName.vb: SuperOffice.CRM.Documents.VersionInfo()
  name.vb: VersionInfo()
  spec.csharp:
  - uid: SuperOffice.CRM.Documents.VersionInfo
    name: VersionInfo
    nameWithType: VersionInfo
    fullName: SuperOffice.CRM.Documents.VersionInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.Documents.VersionInfo
    name: VersionInfo
    nameWithType: VersionInfo
    fullName: SuperOffice.CRM.Documents.VersionInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetPluginList*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.GetPluginList
  isExternal: true
  name: GetPluginList
  nameWithType: IDocumentAgent.GetPluginList
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetPluginList
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetPluginCapabilities*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.GetPluginCapabilities
  isExternal: true
  name: GetPluginCapabilities
  nameWithType: IDocumentAgent.GetPluginCapabilities
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetPluginCapabilities
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetDocumentProperties*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.GetDocumentProperties
  isExternal: true
  name: GetDocumentProperties
  nameWithType: IDocumentAgent.GetDocumentProperties
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetDocumentProperties
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetDocumentCommands*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.GetDocumentCommands
  isExternal: true
  name: GetDocumentCommands
  nameWithType: IDocumentAgent.GetDocumentCommands
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetDocumentCommands
- uid: SuperOffice.CRM.Documents.CommandInfo[]
  isExternal: true
  name: CommandInfo[]
  nameWithType: CommandInfo[]
  fullName: SuperOffice.CRM.Documents.CommandInfo[]
  nameWithType.vb: CommandInfo()
  fullName.vb: SuperOffice.CRM.Documents.CommandInfo()
  name.vb: CommandInfo()
  spec.csharp:
  - uid: SuperOffice.CRM.Documents.CommandInfo
    name: CommandInfo
    nameWithType: CommandInfo
    fullName: SuperOffice.CRM.Documents.CommandInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.Documents.CommandInfo
    name: CommandInfo
    nameWithType: CommandInfo
    fullName: SuperOffice.CRM.Documents.CommandInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.IDocumentAgent.ExecuteDocumentCommand*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.ExecuteDocumentCommand
  isExternal: true
  name: ExecuteDocumentCommand
  nameWithType: IDocumentAgent.ExecuteDocumentCommand
  fullName: SuperOffice.CRM.Services.IDocumentAgent.ExecuteDocumentCommand
- uid: SuperOffice.CRM.Services.IDocumentAgent.CreateDefaultDocumentEntityFromSuggestion*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.CreateDefaultDocumentEntityFromSuggestion
  isExternal: true
  name: CreateDefaultDocumentEntityFromSuggestion
  nameWithType: IDocumentAgent.CreateDefaultDocumentEntityFromSuggestion
  fullName: SuperOffice.CRM.Services.IDocumentAgent.CreateDefaultDocumentEntityFromSuggestion
- uid: SuperOffice.CRM.Services.IDocumentAgent.SaveDocumentTemplateStream*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.SaveDocumentTemplateStream
  isExternal: true
  name: SaveDocumentTemplateStream
  nameWithType: IDocumentAgent.SaveDocumentTemplateStream
  fullName: SuperOffice.CRM.Services.IDocumentAgent.SaveDocumentTemplateStream
- uid: SuperOffice.CRM.Documents.TemplateInfo
  isExternal: true
  name: TemplateInfo
  nameWithType: TemplateInfo
  fullName: SuperOffice.CRM.Documents.TemplateInfo
- uid: SuperOffice.CRM.Services.IDocumentAgent.SetDocumentStreamFromId*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.SetDocumentStreamFromId
  isExternal: true
  name: SetDocumentStreamFromId
  nameWithType: IDocumentAgent.SetDocumentStreamFromId
  fullName: SuperOffice.CRM.Services.IDocumentAgent.SetDocumentStreamFromId
- uid: SuperOffice.CRM.Services.IDocumentAgent.SavePrivacyReport*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.SavePrivacyReport
  isExternal: true
  name: SavePrivacyReport
  nameWithType: IDocumentAgent.SavePrivacyReport
  fullName: SuperOffice.CRM.Services.IDocumentAgent.SavePrivacyReport
- uid: SuperOffice.CRM.Services.IDocumentAgent.ValidateDocumentEntity*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.ValidateDocumentEntity
  isExternal: true
  name: ValidateDocumentEntity
  nameWithType: IDocumentAgent.ValidateDocumentEntity
  fullName: SuperOffice.CRM.Services.IDocumentAgent.ValidateDocumentEntity
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetDocumentLength*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.GetDocumentLength
  isExternal: true
  name: GetDocumentLength
  nameWithType: IDocumentAgent.GetDocumentLength
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetDocumentLength
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetDocumentList*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.GetDocumentList
  isExternal: true
  name: GetDocumentList
  nameWithType: IDocumentAgent.GetDocumentList
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetDocumentList
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.Document[]
  isExternal: true
  name: Document[]
  nameWithType: Document[]
  fullName: SuperOffice.CRM.Services.Document[]
  nameWithType.vb: Document()
  fullName.vb: SuperOffice.CRM.Services.Document()
  name.vb: Document()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.Document
    name: Document
    nameWithType: Document
    fullName: SuperOffice.CRM.Services.Document
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.Services.Document
    name: Document
    nameWithType: Document
    fullName: SuperOffice.CRM.Services.Document
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetAppointmentDocuments*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.GetAppointmentDocuments
  isExternal: true
  name: GetAppointmentDocuments
  nameWithType: IDocumentAgent.GetAppointmentDocuments
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetAppointmentDocuments
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetSaleDocuments*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.GetSaleDocuments
  isExternal: true
  name: GetSaleDocuments
  nameWithType: IDocumentAgent.GetSaleDocuments
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetSaleDocuments
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetPersonDocuments*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.GetPersonDocuments
  isExternal: true
  name: GetPersonDocuments
  nameWithType: IDocumentAgent.GetPersonDocuments
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetPersonDocuments
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetPublishedDocument*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.GetPublishedDocument
  isExternal: true
  name: GetPublishedDocument
  nameWithType: IDocumentAgent.GetPublishedDocument
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetPublishedDocument
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetPublishedDocuments*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.GetPublishedDocuments
  isExternal: true
  name: GetPublishedDocuments
  nameWithType: IDocumentAgent.GetPublishedDocuments
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetPublishedDocuments
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetMyPublishedDocuments*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.GetMyPublishedDocuments
  isExternal: true
  name: GetMyPublishedDocuments
  nameWithType: IDocumentAgent.GetMyPublishedDocuments
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetMyPublishedDocuments
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetPublishedDocumentsByDate*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.GetPublishedDocumentsByDate
  isExternal: true
  name: GetPublishedDocumentsByDate
  nameWithType: IDocumentAgent.GetPublishedDocumentsByDate
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetPublishedDocumentsByDate
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetContactDocumentsByTemplateTypes*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.GetContactDocumentsByTemplateTypes
  isExternal: true
  name: GetContactDocumentsByTemplateTypes
  nameWithType: IDocumentAgent.GetContactDocumentsByTemplateTypes
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetContactDocumentsByTemplateTypes
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetContactDocumentsByTemplateType*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.GetContactDocumentsByTemplateType
  isExternal: true
  name: GetContactDocumentsByTemplateType
  nameWithType: IDocumentAgent.GetContactDocumentsByTemplateType
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetContactDocumentsByTemplateType
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetContactDocumentsByTemplateHeading*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.GetContactDocumentsByTemplateHeading
  isExternal: true
  name: GetContactDocumentsByTemplateHeading
  nameWithType: IDocumentAgent.GetContactDocumentsByTemplateHeading
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetContactDocumentsByTemplateHeading
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetContactDocuments*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.GetContactDocuments
  isExternal: true
  name: GetContactDocuments
  nameWithType: IDocumentAgent.GetContactDocuments
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetContactDocuments
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetPublishedPersonDocumentsByDate*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.GetPublishedPersonDocumentsByDate
  isExternal: true
  name: GetPublishedPersonDocumentsByDate
  nameWithType: IDocumentAgent.GetPublishedPersonDocumentsByDate
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetPublishedPersonDocumentsByDate
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetPublishedProjectDocuments*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.GetPublishedProjectDocuments
  isExternal: true
  name: GetPublishedProjectDocuments
  nameWithType: IDocumentAgent.GetPublishedProjectDocuments
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetPublishedProjectDocuments
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetProjectMemberDocumentsByTemplateTypes*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.GetProjectMemberDocumentsByTemplateTypes
  isExternal: true
  name: GetProjectMemberDocumentsByTemplateTypes
  nameWithType: IDocumentAgent.GetProjectMemberDocumentsByTemplateTypes
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetProjectMemberDocumentsByTemplateTypes
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetProjectMemberDocumentsByTemplateType*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.GetProjectMemberDocumentsByTemplateType
  isExternal: true
  name: GetProjectMemberDocumentsByTemplateType
  nameWithType: IDocumentAgent.GetProjectMemberDocumentsByTemplateType
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetProjectMemberDocumentsByTemplateType
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetProjectMemberDocumentsByTemplateHeading*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.GetProjectMemberDocumentsByTemplateHeading
  isExternal: true
  name: GetProjectMemberDocumentsByTemplateHeading
  nameWithType: IDocumentAgent.GetProjectMemberDocumentsByTemplateHeading
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetProjectMemberDocumentsByTemplateHeading
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetProjectMemberDocuments*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.GetProjectMemberDocuments
  isExternal: true
  name: GetProjectMemberDocuments
  nameWithType: IDocumentAgent.GetProjectMemberDocuments
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetProjectMemberDocuments
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetProjectDocumentsByTemplateTypes*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.GetProjectDocumentsByTemplateTypes
  isExternal: true
  name: GetProjectDocumentsByTemplateTypes
  nameWithType: IDocumentAgent.GetProjectDocumentsByTemplateTypes
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetProjectDocumentsByTemplateTypes
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetProjectDocumentsByTemplateType*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.GetProjectDocumentsByTemplateType
  isExternal: true
  name: GetProjectDocumentsByTemplateType
  nameWithType: IDocumentAgent.GetProjectDocumentsByTemplateType
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetProjectDocumentsByTemplateType
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetProjectDocumentsByTemplateHeading*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.GetProjectDocumentsByTemplateHeading
  isExternal: true
  name: GetProjectDocumentsByTemplateHeading
  nameWithType: IDocumentAgent.GetProjectDocumentsByTemplateHeading
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetProjectDocumentsByTemplateHeading
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetProjectDocuments*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.GetProjectDocuments
  isExternal: true
  name: GetProjectDocuments
  nameWithType: IDocumentAgent.GetProjectDocuments
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetProjectDocuments
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetPersonDocumentsByTemplateTypes*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.GetPersonDocumentsByTemplateTypes
  isExternal: true
  name: GetPersonDocumentsByTemplateTypes
  nameWithType: IDocumentAgent.GetPersonDocumentsByTemplateTypes
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetPersonDocumentsByTemplateTypes
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetPersonDocumentsByTemplateType*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.GetPersonDocumentsByTemplateType
  isExternal: true
  name: GetPersonDocumentsByTemplateType
  nameWithType: IDocumentAgent.GetPersonDocumentsByTemplateType
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetPersonDocumentsByTemplateType
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetPersonDocumentsByTemplateHeading*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.GetPersonDocumentsByTemplateHeading
  isExternal: true
  name: GetPersonDocumentsByTemplateHeading
  nameWithType: IDocumentAgent.GetPersonDocumentsByTemplateHeading
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetPersonDocumentsByTemplateHeading
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetPersonDocumentsByDate*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.GetPersonDocumentsByDate
  isExternal: true
  name: GetPersonDocumentsByDate
  nameWithType: IDocumentAgent.GetPersonDocumentsByDate
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetPersonDocumentsByDate
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetDocumentsByTemplateHeading*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.GetDocumentsByTemplateHeading
  isExternal: true
  name: GetDocumentsByTemplateHeading
  nameWithType: IDocumentAgent.GetDocumentsByTemplateHeading
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetDocumentsByTemplateHeading
- uid: SuperOffice.CRM.Services.IDocumentAgent.GetSuggestedDocumentEntity*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentAgent.GetSuggestedDocumentEntity
  isExternal: true
  name: GetSuggestedDocumentEntity
  nameWithType: IDocumentAgent.GetSuggestedDocumentEntity
  fullName: SuperOffice.CRM.Services.IDocumentAgent.GetSuggestedDocumentEntity
