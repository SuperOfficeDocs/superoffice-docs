### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Services.SaintAgent
  commentId: T:SuperOffice.CRM.Services.SaintAgent
  id: SaintAgent
  parent: SuperOffice.CRM.Services
  children:
  - SuperOffice.CRM.Services.SaintAgent.#ctor(SuperOffice.CRM.Services.Implementation.BL.Contracts.ISaintConfigurationImplementation,SuperOffice.CRM.Services.Implementation.BL.Contracts.IStatusMonitorImplementation,SuperOffice.CRM.Services.Implementation.BL.Contracts.IStatusMonitorPeriodsImplementation,SuperOffice.Factory.ISoRequestItemsAccessor)
  - SuperOffice.CRM.Services.SaintAgent.#ctor(SuperOffice.CRM.Services.Implementation.BL.Contracts.ISaintConfigurationImplementation,SuperOffice.CRM.Services.Implementation.BL.Contracts.IStatusMonitorImplementation,SuperOffice.CRM.Services.Implementation.BL.Contracts.IStatusMonitorPeriodsImplementation,SuperOffice.Factory.ISoRequestItemsAccessor,SuperOffice.Data.IDebugUser,SuperOffice.Diagnostics.IServiceCallsRepository)
  - SuperOffice.CRM.Services.SaintAgent.CreateDefaultSaintConfigurationAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.SaintAgent.CreateDefaultStatusMonitorAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.SaintAgent.CreateDefaultStatusMonitorPeriodsAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.SaintAgent.GetSaintConfigurationsAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.SaintAgent.GetStatusMonitorAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.SaintAgent.GetStatusMonitorPeriodsAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.SaintAgent.GetStatusMonitorsAsync(System.Int32,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.SaintAgent.RegenerateCountersAsync(System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.SaintAgent.RegenerateStatusMonitorAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.SaintAgent.RegenerateStatusMonitorsAsync(System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.SaintAgent.SaveSaintConfigurationAsync(SuperOffice.CRM.Services.SaintConfiguration,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.SaintAgent.SaveStatusMonitorAsync(SuperOffice.CRM.Services.StatusMonitor,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.SaintAgent.SaveStatusMonitorPeriodsAsync(SuperOffice.CRM.Services.StatusMonitorPeriods,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.SaintAgent.SetRankOnStatusMonitorsAsync(System.String,System.Int32[],System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: SaintAgent
  nameWithType: SaintAgent
  fullName: SuperOffice.CRM.Services.SaintAgent
  type: Class
  assemblies:
  - SuperOffice.Services.Implementation
  namespace: SuperOffice.CRM.Services
  summary: >-
    Proxy class for the Saint Agent

    Used when communicating remote using WebServices.

    Avoid using directly. Use the AgentFactory to create the proxy instead.
  example: []
  syntax:
    content: 'public class SaintAgent : ISaintAgent, IAgent'
    content.vb: Public Class SaintAgent Implements ISaintAgent, IAgent
  inheritance:
  - System.Object
  implements:
  - SuperOffice.CRM.Services.ISaintAgent
  - SuperOffice.CRM.Services.IAgent
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: SuperOffice.CRM.Services.SaintAgent.#ctor(SuperOffice.CRM.Services.Implementation.BL.Contracts.ISaintConfigurationImplementation,SuperOffice.CRM.Services.Implementation.BL.Contracts.IStatusMonitorImplementation,SuperOffice.CRM.Services.Implementation.BL.Contracts.IStatusMonitorPeriodsImplementation,SuperOffice.Factory.ISoRequestItemsAccessor)
  commentId: M:SuperOffice.CRM.Services.SaintAgent.#ctor(SuperOffice.CRM.Services.Implementation.BL.Contracts.ISaintConfigurationImplementation,SuperOffice.CRM.Services.Implementation.BL.Contracts.IStatusMonitorImplementation,SuperOffice.CRM.Services.Implementation.BL.Contracts.IStatusMonitorPeriodsImplementation,SuperOffice.Factory.ISoRequestItemsAccessor)
  id: '#ctor(SuperOffice.CRM.Services.Implementation.BL.Contracts.ISaintConfigurationImplementation,SuperOffice.CRM.Services.Implementation.BL.Contracts.IStatusMonitorImplementation,SuperOffice.CRM.Services.Implementation.BL.Contracts.IStatusMonitorPeriodsImplementation,SuperOffice.Factory.ISoRequestItemsAccessor)'
  parent: SuperOffice.CRM.Services.SaintAgent
  langs:
  - csharp
  - vb
  name: SaintAgent(ISaintConfigurationImplementation, IStatusMonitorImplementation, IStatusMonitorPeriodsImplementation, ISoRequestItemsAccessor)
  nameWithType: SaintAgent.SaintAgent(ISaintConfigurationImplementation, IStatusMonitorImplementation, IStatusMonitorPeriodsImplementation, ISoRequestItemsAccessor)
  fullName: SuperOffice.CRM.Services.SaintAgent.SaintAgent(SuperOffice.CRM.Services.Implementation.BL.Contracts.ISaintConfigurationImplementation, SuperOffice.CRM.Services.Implementation.BL.Contracts.IStatusMonitorImplementation, SuperOffice.CRM.Services.Implementation.BL.Contracts.IStatusMonitorPeriodsImplementation, SuperOffice.Factory.ISoRequestItemsAccessor)
  type: Constructor
  assemblies:
  - SuperOffice.Services.Implementation
  namespace: SuperOffice.CRM.Services
  syntax:
    content: public SaintAgent(ISaintConfigurationImplementation saintConfigurationImplementation, IStatusMonitorImplementation statusMonitorImplementation, IStatusMonitorPeriodsImplementation statusMonitorPeriodsImplementation, ISoRequestItemsAccessor accessor)
    parameters:
    - id: saintConfigurationImplementation
      type: SuperOffice.CRM.Services.Implementation.BL.Contracts.ISaintConfigurationImplementation
    - id: statusMonitorImplementation
      type: SuperOffice.CRM.Services.Implementation.BL.Contracts.IStatusMonitorImplementation
    - id: statusMonitorPeriodsImplementation
      type: SuperOffice.CRM.Services.Implementation.BL.Contracts.IStatusMonitorPeriodsImplementation
    - id: accessor
      type: SuperOffice.Factory.ISoRequestItemsAccessor
    content.vb: Public Sub New(saintConfigurationImplementation As ISaintConfigurationImplementation, statusMonitorImplementation As IStatusMonitorImplementation, statusMonitorPeriodsImplementation As IStatusMonitorPeriodsImplementation, accessor As ISoRequestItemsAccessor)
  overload: SuperOffice.CRM.Services.SaintAgent.#ctor*
  nameWithType.vb: SaintAgent.New(ISaintConfigurationImplementation, IStatusMonitorImplementation, IStatusMonitorPeriodsImplementation, ISoRequestItemsAccessor)
  fullName.vb: SuperOffice.CRM.Services.SaintAgent.New(SuperOffice.CRM.Services.Implementation.BL.Contracts.ISaintConfigurationImplementation, SuperOffice.CRM.Services.Implementation.BL.Contracts.IStatusMonitorImplementation, SuperOffice.CRM.Services.Implementation.BL.Contracts.IStatusMonitorPeriodsImplementation, SuperOffice.Factory.ISoRequestItemsAccessor)
  name.vb: New(ISaintConfigurationImplementation, IStatusMonitorImplementation, IStatusMonitorPeriodsImplementation, ISoRequestItemsAccessor)
- uid: SuperOffice.CRM.Services.SaintAgent.#ctor(SuperOffice.CRM.Services.Implementation.BL.Contracts.ISaintConfigurationImplementation,SuperOffice.CRM.Services.Implementation.BL.Contracts.IStatusMonitorImplementation,SuperOffice.CRM.Services.Implementation.BL.Contracts.IStatusMonitorPeriodsImplementation,SuperOffice.Factory.ISoRequestItemsAccessor,SuperOffice.Data.IDebugUser,SuperOffice.Diagnostics.IServiceCallsRepository)
  commentId: M:SuperOffice.CRM.Services.SaintAgent.#ctor(SuperOffice.CRM.Services.Implementation.BL.Contracts.ISaintConfigurationImplementation,SuperOffice.CRM.Services.Implementation.BL.Contracts.IStatusMonitorImplementation,SuperOffice.CRM.Services.Implementation.BL.Contracts.IStatusMonitorPeriodsImplementation,SuperOffice.Factory.ISoRequestItemsAccessor,SuperOffice.Data.IDebugUser,SuperOffice.Diagnostics.IServiceCallsRepository)
  id: '#ctor(SuperOffice.CRM.Services.Implementation.BL.Contracts.ISaintConfigurationImplementation,SuperOffice.CRM.Services.Implementation.BL.Contracts.IStatusMonitorImplementation,SuperOffice.CRM.Services.Implementation.BL.Contracts.IStatusMonitorPeriodsImplementation,SuperOffice.Factory.ISoRequestItemsAccessor,SuperOffice.Data.IDebugUser,SuperOffice.Diagnostics.IServiceCallsRepository)'
  parent: SuperOffice.CRM.Services.SaintAgent
  langs:
  - csharp
  - vb
  name: SaintAgent(ISaintConfigurationImplementation, IStatusMonitorImplementation, IStatusMonitorPeriodsImplementation, ISoRequestItemsAccessor, IDebugUser, IServiceCallsRepository)
  nameWithType: SaintAgent.SaintAgent(ISaintConfigurationImplementation, IStatusMonitorImplementation, IStatusMonitorPeriodsImplementation, ISoRequestItemsAccessor, IDebugUser, IServiceCallsRepository)
  fullName: SuperOffice.CRM.Services.SaintAgent.SaintAgent(SuperOffice.CRM.Services.Implementation.BL.Contracts.ISaintConfigurationImplementation, SuperOffice.CRM.Services.Implementation.BL.Contracts.IStatusMonitorImplementation, SuperOffice.CRM.Services.Implementation.BL.Contracts.IStatusMonitorPeriodsImplementation, SuperOffice.Factory.ISoRequestItemsAccessor, SuperOffice.Data.IDebugUser, SuperOffice.Diagnostics.IServiceCallsRepository)
  type: Constructor
  assemblies:
  - SuperOffice.Services.Implementation
  namespace: SuperOffice.CRM.Services
  syntax:
    content: public SaintAgent(ISaintConfigurationImplementation saintConfigurationImplementation, IStatusMonitorImplementation statusMonitorImplementation, IStatusMonitorPeriodsImplementation statusMonitorPeriodsImplementation, ISoRequestItemsAccessor accessor, IDebugUser debugUser, IServiceCallsRepository serviceCallsRepository)
    parameters:
    - id: saintConfigurationImplementation
      type: SuperOffice.CRM.Services.Implementation.BL.Contracts.ISaintConfigurationImplementation
    - id: statusMonitorImplementation
      type: SuperOffice.CRM.Services.Implementation.BL.Contracts.IStatusMonitorImplementation
    - id: statusMonitorPeriodsImplementation
      type: SuperOffice.CRM.Services.Implementation.BL.Contracts.IStatusMonitorPeriodsImplementation
    - id: accessor
      type: SuperOffice.Factory.ISoRequestItemsAccessor
    - id: debugUser
      type: SuperOffice.Data.IDebugUser
    - id: serviceCallsRepository
      type: SuperOffice.Diagnostics.IServiceCallsRepository
    content.vb: Public Sub New(saintConfigurationImplementation As ISaintConfigurationImplementation, statusMonitorImplementation As IStatusMonitorImplementation, statusMonitorPeriodsImplementation As IStatusMonitorPeriodsImplementation, accessor As ISoRequestItemsAccessor, debugUser As IDebugUser, serviceCallsRepository As IServiceCallsRepository)
  overload: SuperOffice.CRM.Services.SaintAgent.#ctor*
  nameWithType.vb: SaintAgent.New(ISaintConfigurationImplementation, IStatusMonitorImplementation, IStatusMonitorPeriodsImplementation, ISoRequestItemsAccessor, IDebugUser, IServiceCallsRepository)
  fullName.vb: SuperOffice.CRM.Services.SaintAgent.New(SuperOffice.CRM.Services.Implementation.BL.Contracts.ISaintConfigurationImplementation, SuperOffice.CRM.Services.Implementation.BL.Contracts.IStatusMonitorImplementation, SuperOffice.CRM.Services.Implementation.BL.Contracts.IStatusMonitorPeriodsImplementation, SuperOffice.Factory.ISoRequestItemsAccessor, SuperOffice.Data.IDebugUser, SuperOffice.Diagnostics.IServiceCallsRepository)
  name.vb: New(ISaintConfigurationImplementation, IStatusMonitorImplementation, IStatusMonitorPeriodsImplementation, ISoRequestItemsAccessor, IDebugUser, IServiceCallsRepository)
- uid: SuperOffice.CRM.Services.SaintAgent.CreateDefaultSaintConfigurationAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.SaintAgent.CreateDefaultSaintConfigurationAsync(System.Threading.CancellationToken)
  id: CreateDefaultSaintConfigurationAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.SaintAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultSaintConfigurationAsync(CancellationToken)
  nameWithType: SaintAgent.CreateDefaultSaintConfigurationAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.SaintAgent.CreateDefaultSaintConfigurationAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services.Implementation
  namespace: SuperOffice.CRM.Services
  summary: >-
    Loading default values into a new SaintConfiguration.

    NetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance
  example: []
  syntax:
    content: public Task<SaintConfiguration> CreateDefaultSaintConfigurationAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.SaintConfiguration}
      description: New SaintConfiguration with default values
    content.vb: Public Function CreateDefaultSaintConfigurationAsync(cancellationToken As CancellationToken = Nothing) As Task(Of SaintConfiguration)
  overload: SuperOffice.CRM.Services.SaintAgent.CreateDefaultSaintConfigurationAsync*
  implements:
  - SuperOffice.CRM.Services.ISaintAgent.CreateDefaultSaintConfigurationAsync(System.Threading.CancellationToken)
- uid: SuperOffice.CRM.Services.SaintAgent.SaveSaintConfigurationAsync(SuperOffice.CRM.Services.SaintConfiguration,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.SaintAgent.SaveSaintConfigurationAsync(SuperOffice.CRM.Services.SaintConfiguration,System.Threading.CancellationToken)
  id: SaveSaintConfigurationAsync(SuperOffice.CRM.Services.SaintConfiguration,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.SaintAgent
  langs:
  - csharp
  - vb
  name: SaveSaintConfigurationAsync(SaintConfiguration, CancellationToken)
  nameWithType: SaintAgent.SaveSaintConfigurationAsync(SaintConfiguration, CancellationToken)
  fullName: SuperOffice.CRM.Services.SaintAgent.SaveSaintConfigurationAsync(SuperOffice.CRM.Services.SaintConfiguration, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services.Implementation
  namespace: SuperOffice.CRM.Services
  summary: Updates the existing SaintConfiguration or creates a new SaintConfiguration if the id parameter is empty
  example: []
  syntax:
    content: public Task<SaintConfiguration> SaveSaintConfigurationAsync(SaintConfiguration saintConfiguration, CancellationToken cancellationToken = default)
    parameters:
    - id: saintConfiguration
      type: SuperOffice.CRM.Services.SaintConfiguration
      description: The SaintConfiguration that is saved.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.SaintConfiguration}
      description: New or updated SaintConfiguration
    content.vb: Public Function SaveSaintConfigurationAsync(saintConfiguration As SaintConfiguration, cancellationToken As CancellationToken = Nothing) As Task(Of SaintConfiguration)
  overload: SuperOffice.CRM.Services.SaintAgent.SaveSaintConfigurationAsync*
  implements:
  - SuperOffice.CRM.Services.ISaintAgent.SaveSaintConfigurationAsync(SuperOffice.CRM.Services.SaintConfiguration,System.Threading.CancellationToken)
- uid: SuperOffice.CRM.Services.SaintAgent.CreateDefaultStatusMonitorAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.SaintAgent.CreateDefaultStatusMonitorAsync(System.Threading.CancellationToken)
  id: CreateDefaultStatusMonitorAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.SaintAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultStatusMonitorAsync(CancellationToken)
  nameWithType: SaintAgent.CreateDefaultStatusMonitorAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.SaintAgent.CreateDefaultStatusMonitorAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services.Implementation
  namespace: SuperOffice.CRM.Services
  summary: >-
    Loading default values into a new StatusMonitor.

    NetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance
  example: []
  syntax:
    content: public Task<StatusMonitor> CreateDefaultStatusMonitorAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.StatusMonitor}
      description: New StatusMonitor with default values
    content.vb: Public Function CreateDefaultStatusMonitorAsync(cancellationToken As CancellationToken = Nothing) As Task(Of StatusMonitor)
  overload: SuperOffice.CRM.Services.SaintAgent.CreateDefaultStatusMonitorAsync*
  implements:
  - SuperOffice.CRM.Services.ISaintAgent.CreateDefaultStatusMonitorAsync(System.Threading.CancellationToken)
- uid: SuperOffice.CRM.Services.SaintAgent.SaveStatusMonitorAsync(SuperOffice.CRM.Services.StatusMonitor,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.SaintAgent.SaveStatusMonitorAsync(SuperOffice.CRM.Services.StatusMonitor,System.Threading.CancellationToken)
  id: SaveStatusMonitorAsync(SuperOffice.CRM.Services.StatusMonitor,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.SaintAgent
  langs:
  - csharp
  - vb
  name: SaveStatusMonitorAsync(StatusMonitor, CancellationToken)
  nameWithType: SaintAgent.SaveStatusMonitorAsync(StatusMonitor, CancellationToken)
  fullName: SuperOffice.CRM.Services.SaintAgent.SaveStatusMonitorAsync(SuperOffice.CRM.Services.StatusMonitor, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services.Implementation
  namespace: SuperOffice.CRM.Services
  summary: Updates the existing StatusMonitor or creates a new StatusMonitor if the id parameter is empty
  example: []
  syntax:
    content: public Task<StatusMonitor> SaveStatusMonitorAsync(StatusMonitor statusMonitor, CancellationToken cancellationToken = default)
    parameters:
    - id: statusMonitor
      type: SuperOffice.CRM.Services.StatusMonitor
      description: The StatusMonitor that is saved.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.StatusMonitor}
      description: New or updated StatusMonitor
    content.vb: Public Function SaveStatusMonitorAsync(statusMonitor As StatusMonitor, cancellationToken As CancellationToken = Nothing) As Task(Of StatusMonitor)
  overload: SuperOffice.CRM.Services.SaintAgent.SaveStatusMonitorAsync*
  implements:
  - SuperOffice.CRM.Services.ISaintAgent.SaveStatusMonitorAsync(SuperOffice.CRM.Services.StatusMonitor,System.Threading.CancellationToken)
- uid: SuperOffice.CRM.Services.SaintAgent.CreateDefaultStatusMonitorPeriodsAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.SaintAgent.CreateDefaultStatusMonitorPeriodsAsync(System.Threading.CancellationToken)
  id: CreateDefaultStatusMonitorPeriodsAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.SaintAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultStatusMonitorPeriodsAsync(CancellationToken)
  nameWithType: SaintAgent.CreateDefaultStatusMonitorPeriodsAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.SaintAgent.CreateDefaultStatusMonitorPeriodsAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services.Implementation
  namespace: SuperOffice.CRM.Services
  summary: >-
    Loading default values into a new StatusMonitorPeriods.

    NetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance
  example: []
  syntax:
    content: public Task<StatusMonitorPeriods> CreateDefaultStatusMonitorPeriodsAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.StatusMonitorPeriods}
      description: New StatusMonitorPeriods with default values
    content.vb: Public Function CreateDefaultStatusMonitorPeriodsAsync(cancellationToken As CancellationToken = Nothing) As Task(Of StatusMonitorPeriods)
  overload: SuperOffice.CRM.Services.SaintAgent.CreateDefaultStatusMonitorPeriodsAsync*
  implements:
  - SuperOffice.CRM.Services.ISaintAgent.CreateDefaultStatusMonitorPeriodsAsync(System.Threading.CancellationToken)
- uid: SuperOffice.CRM.Services.SaintAgent.SaveStatusMonitorPeriodsAsync(SuperOffice.CRM.Services.StatusMonitorPeriods,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.SaintAgent.SaveStatusMonitorPeriodsAsync(SuperOffice.CRM.Services.StatusMonitorPeriods,System.Threading.CancellationToken)
  id: SaveStatusMonitorPeriodsAsync(SuperOffice.CRM.Services.StatusMonitorPeriods,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.SaintAgent
  langs:
  - csharp
  - vb
  name: SaveStatusMonitorPeriodsAsync(StatusMonitorPeriods, CancellationToken)
  nameWithType: SaintAgent.SaveStatusMonitorPeriodsAsync(StatusMonitorPeriods, CancellationToken)
  fullName: SuperOffice.CRM.Services.SaintAgent.SaveStatusMonitorPeriodsAsync(SuperOffice.CRM.Services.StatusMonitorPeriods, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services.Implementation
  namespace: SuperOffice.CRM.Services
  summary: Updates the existing StatusMonitorPeriods or creates a new StatusMonitorPeriods if the id parameter is empty
  example: []
  syntax:
    content: public Task<StatusMonitorPeriods> SaveStatusMonitorPeriodsAsync(StatusMonitorPeriods statusMonitorPeriods, CancellationToken cancellationToken = default)
    parameters:
    - id: statusMonitorPeriods
      type: SuperOffice.CRM.Services.StatusMonitorPeriods
      description: The StatusMonitorPeriods that is saved.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.StatusMonitorPeriods}
      description: New or updated StatusMonitorPeriods
    content.vb: Public Function SaveStatusMonitorPeriodsAsync(statusMonitorPeriods As StatusMonitorPeriods, cancellationToken As CancellationToken = Nothing) As Task(Of StatusMonitorPeriods)
  overload: SuperOffice.CRM.Services.SaintAgent.SaveStatusMonitorPeriodsAsync*
  implements:
  - SuperOffice.CRM.Services.ISaintAgent.SaveStatusMonitorPeriodsAsync(SuperOffice.CRM.Services.StatusMonitorPeriods,System.Threading.CancellationToken)
- uid: SuperOffice.CRM.Services.SaintAgent.GetSaintConfigurationsAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.SaintAgent.GetSaintConfigurationsAsync(System.Threading.CancellationToken)
  id: GetSaintConfigurationsAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.SaintAgent
  langs:
  - csharp
  - vb
  name: GetSaintConfigurationsAsync(CancellationToken)
  nameWithType: SaintAgent.GetSaintConfigurationsAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.SaintAgent.GetSaintConfigurationsAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services.Implementation
  namespace: SuperOffice.CRM.Services
  summary: Returns the StatusMonitorPeriods entity.
  example: []
  syntax:
    content: public Task<SaintConfiguration[]> GetSaintConfigurationsAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: This operation <b>cannot</b> be cancelled; the cancellationToken parameter is ignored
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.SaintConfiguration[]}
      description: The SaintConfiguration for all entities
    content.vb: Public Function GetSaintConfigurationsAsync(cancellationToken As CancellationToken = Nothing) As Task(Of SaintConfiguration())
  overload: SuperOffice.CRM.Services.SaintAgent.GetSaintConfigurationsAsync*
  implements:
  - SuperOffice.CRM.Services.ISaintAgent.GetSaintConfigurationsAsync(System.Threading.CancellationToken)
- uid: SuperOffice.CRM.Services.SaintAgent.GetStatusMonitorsAsync(System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.SaintAgent.GetStatusMonitorsAsync(System.Int32,System.String,System.Threading.CancellationToken)
  id: GetStatusMonitorsAsync(System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.SaintAgent
  langs:
  - csharp
  - vb
  name: GetStatusMonitorsAsync(int, string, CancellationToken)
  nameWithType: SaintAgent.GetStatusMonitorsAsync(int, string, CancellationToken)
  fullName: SuperOffice.CRM.Services.SaintAgent.GetStatusMonitorsAsync(int, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services.Implementation
  namespace: SuperOffice.CRM.Services
  summary: Get all active status monitors for a specified target
  example: []
  syntax:
    content: public Task<StatusMonitor[]> GetStatusMonitorsAsync(int id, string type, CancellationToken cancellationToken = default)
    parameters:
    - id: id
      type: System.Int32
      description: Identity of target type(contact identity, project identity etc.)
    - id: type
      type: System.String
      description: Type to get status monitors for("contact", "project", etc.)
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: This operation <b>cannot</b> be cancelled; the cancellationToken parameter is ignored
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.StatusMonitor[]}
      description: Active status monitors
    content.vb: Public Function GetStatusMonitorsAsync(id As Integer, type As String, cancellationToken As CancellationToken = Nothing) As Task(Of StatusMonitor())
  overload: SuperOffice.CRM.Services.SaintAgent.GetStatusMonitorsAsync*
  implements:
  - SuperOffice.CRM.Services.ISaintAgent.GetStatusMonitorsAsync(System.Int32,System.String,System.Threading.CancellationToken)
  nameWithType.vb: SaintAgent.GetStatusMonitorsAsync(Integer, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.SaintAgent.GetStatusMonitorsAsync(Integer, String, System.Threading.CancellationToken)
  name.vb: GetStatusMonitorsAsync(Integer, String, CancellationToken)
- uid: SuperOffice.CRM.Services.SaintAgent.GetStatusMonitorAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.SaintAgent.GetStatusMonitorAsync(System.Int32,System.Threading.CancellationToken)
  id: GetStatusMonitorAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.SaintAgent
  langs:
  - csharp
  - vb
  name: GetStatusMonitorAsync(int, CancellationToken)
  nameWithType: SaintAgent.GetStatusMonitorAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.SaintAgent.GetStatusMonitorAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services.Implementation
  namespace: SuperOffice.CRM.Services
  summary: Get a single status monitor based on its identity
  example: []
  syntax:
    content: public Task<StatusMonitor> GetStatusMonitorAsync(int id, CancellationToken cancellationToken = default)
    parameters:
    - id: id
      type: System.Int32
      description: Identity of status monitor
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: This operation <b>cannot</b> be cancelled; the cancellationToken parameter is ignored
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.StatusMonitor}
      description: The requested status monitor
    content.vb: Public Function GetStatusMonitorAsync(id As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of StatusMonitor)
  overload: SuperOffice.CRM.Services.SaintAgent.GetStatusMonitorAsync*
  implements:
  - SuperOffice.CRM.Services.ISaintAgent.GetStatusMonitorAsync(System.Int32,System.Threading.CancellationToken)
  nameWithType.vb: SaintAgent.GetStatusMonitorAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.SaintAgent.GetStatusMonitorAsync(Integer, System.Threading.CancellationToken)
  name.vb: GetStatusMonitorAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.SaintAgent.RegenerateStatusMonitorsAsync(System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.SaintAgent.RegenerateStatusMonitorsAsync(System.Boolean,System.Threading.CancellationToken)
  id: RegenerateStatusMonitorsAsync(System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.SaintAgent
  langs:
  - csharp
  - vb
  name: RegenerateStatusMonitorsAsync(bool, CancellationToken)
  nameWithType: SaintAgent.RegenerateStatusMonitorsAsync(bool, CancellationToken)
  fullName: SuperOffice.CRM.Services.SaintAgent.RegenerateStatusMonitorsAsync(bool, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services.Implementation
  namespace: SuperOffice.CRM.Services
  summary: Regenerate status monitors
  example: []
  syntax:
    content: public Task<BatchTaskInfo> RegenerateStatusMonitorsAsync(bool runAsBatch, CancellationToken cancellationToken = default)
    parameters:
    - id: runAsBatch
      type: System.Boolean
      description: If true, then execute the regeneration as a Batch Task; the service call will return immediately. Otherwise wait until the task completes, may cause a timeout if called as a Web Service
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: This operation <b>cannot</b> be cancelled; the cancellationToken parameter is ignored
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.BatchTaskInfo}
      description: Information about the batch task, if batch execution was requested. Otherwise null
    content.vb: Public Function RegenerateStatusMonitorsAsync(runAsBatch As Boolean, cancellationToken As CancellationToken = Nothing) As Task(Of BatchTaskInfo)
  overload: SuperOffice.CRM.Services.SaintAgent.RegenerateStatusMonitorsAsync*
  implements:
  - SuperOffice.CRM.Services.ISaintAgent.RegenerateStatusMonitorsAsync(System.Boolean,System.Threading.CancellationToken)
  nameWithType.vb: SaintAgent.RegenerateStatusMonitorsAsync(Boolean, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.SaintAgent.RegenerateStatusMonitorsAsync(Boolean, System.Threading.CancellationToken)
  name.vb: RegenerateStatusMonitorsAsync(Boolean, CancellationToken)
- uid: SuperOffice.CRM.Services.SaintAgent.SetRankOnStatusMonitorsAsync(System.String,System.Int32[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.SaintAgent.SetRankOnStatusMonitorsAsync(System.String,System.Int32[],System.Threading.CancellationToken)
  id: SetRankOnStatusMonitorsAsync(System.String,System.Int32[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.SaintAgent
  langs:
  - csharp
  - vb
  name: SetRankOnStatusMonitorsAsync(string, int[], CancellationToken)
  nameWithType: SaintAgent.SetRankOnStatusMonitorsAsync(string, int[], CancellationToken)
  fullName: SuperOffice.CRM.Services.SaintAgent.SetRankOnStatusMonitorsAsync(string, int[], System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services.Implementation
  namespace: SuperOffice.CRM.Services
  summary: Set rank order on status monitors
  example: []
  syntax:
    content: public Task SetRankOnStatusMonitorsAsync(string type, int[] itemsIds, CancellationToken cancellationToken = default)
    parameters:
    - id: type
      type: System.String
      description: Type of status monitors to reorder ("contact", "project", etc.)
    - id: itemsIds
      type: System.Int32[]
      description: The ids of the items in the order you want
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: This operation <b>cannot</b> be cancelled; the cancellationToken parameter is ignored
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Public Function SetRankOnStatusMonitorsAsync(type As String, itemsIds As Integer(), cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.SaintAgent.SetRankOnStatusMonitorsAsync*
  implements:
  - SuperOffice.CRM.Services.ISaintAgent.SetRankOnStatusMonitorsAsync(System.String,System.Int32[],System.Threading.CancellationToken)
  nameWithType.vb: SaintAgent.SetRankOnStatusMonitorsAsync(String, Integer(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.SaintAgent.SetRankOnStatusMonitorsAsync(String, Integer(), System.Threading.CancellationToken)
  name.vb: SetRankOnStatusMonitorsAsync(String, Integer(), CancellationToken)
- uid: SuperOffice.CRM.Services.SaintAgent.RegenerateStatusMonitorAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.SaintAgent.RegenerateStatusMonitorAsync(System.Int32,System.Threading.CancellationToken)
  id: RegenerateStatusMonitorAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.SaintAgent
  langs:
  - csharp
  - vb
  name: RegenerateStatusMonitorAsync(int, CancellationToken)
  nameWithType: SaintAgent.RegenerateStatusMonitorAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.SaintAgent.RegenerateStatusMonitorAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services.Implementation
  namespace: SuperOffice.CRM.Services
  summary: Regenerate the given status monitor
  example: []
  syntax:
    content: public Task RegenerateStatusMonitorAsync(int statusMonitorId, CancellationToken cancellationToken = default)
    parameters:
    - id: statusMonitorId
      type: System.Int32
      description: The id of the statusmonitor to regenerate
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: This operation <b>cannot</b> be cancelled; the cancellationToken parameter is ignored
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Public Function RegenerateStatusMonitorAsync(statusMonitorId As Integer, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.SaintAgent.RegenerateStatusMonitorAsync*
  implements:
  - SuperOffice.CRM.Services.ISaintAgent.RegenerateStatusMonitorAsync(System.Int32,System.Threading.CancellationToken)
  nameWithType.vb: SaintAgent.RegenerateStatusMonitorAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.SaintAgent.RegenerateStatusMonitorAsync(Integer, System.Threading.CancellationToken)
  name.vb: RegenerateStatusMonitorAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.SaintAgent.RegenerateCountersAsync(System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.SaintAgent.RegenerateCountersAsync(System.Boolean,System.Threading.CancellationToken)
  id: RegenerateCountersAsync(System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.SaintAgent
  langs:
  - csharp
  - vb
  name: RegenerateCountersAsync(bool, CancellationToken)
  nameWithType: SaintAgent.RegenerateCountersAsync(bool, CancellationToken)
  fullName: SuperOffice.CRM.Services.SaintAgent.RegenerateCountersAsync(bool, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services.Implementation
  namespace: SuperOffice.CRM.Services
  summary: Regenerate the Saint counters - this can take several minutes
  example: []
  syntax:
    content: public Task<BatchTaskInfo> RegenerateCountersAsync(bool runAsBatch, CancellationToken cancellationToken = default)
    parameters:
    - id: runAsBatch
      type: System.Boolean
      description: If true, then execute the regeneration as a Batch Task; the service call will return immediately. Otherwise wait until the task completes, may cause a timeout if called as a Web Service
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: This operation <b>cannot</b> be cancelled; the cancellationToken parameter is ignored
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.BatchTaskInfo}
      description: Information about the batch task, if batch execution was requested. Otherwise null
    content.vb: Public Function RegenerateCountersAsync(runAsBatch As Boolean, cancellationToken As CancellationToken = Nothing) As Task(Of BatchTaskInfo)
  overload: SuperOffice.CRM.Services.SaintAgent.RegenerateCountersAsync*
  implements:
  - SuperOffice.CRM.Services.ISaintAgent.RegenerateCountersAsync(System.Boolean,System.Threading.CancellationToken)
  nameWithType.vb: SaintAgent.RegenerateCountersAsync(Boolean, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.SaintAgent.RegenerateCountersAsync(Boolean, System.Threading.CancellationToken)
  name.vb: RegenerateCountersAsync(Boolean, CancellationToken)
- uid: SuperOffice.CRM.Services.SaintAgent.GetStatusMonitorPeriodsAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.SaintAgent.GetStatusMonitorPeriodsAsync(System.Threading.CancellationToken)
  id: GetStatusMonitorPeriodsAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.SaintAgent
  langs:
  - csharp
  - vb
  name: GetStatusMonitorPeriodsAsync(CancellationToken)
  nameWithType: SaintAgent.GetStatusMonitorPeriodsAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.SaintAgent.GetStatusMonitorPeriodsAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services.Implementation
  namespace: SuperOffice.CRM.Services
  summary: Returns the StatusMonitorPeriods entity.
  example: []
  syntax:
    content: public Task<StatusMonitorPeriods> GetStatusMonitorPeriodsAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: This operation <b>cannot</b> be cancelled; the cancellationToken parameter is ignored
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.StatusMonitorPeriods}
      description: The StatusMonitorEntity
    content.vb: Public Function GetStatusMonitorPeriodsAsync(cancellationToken As CancellationToken = Nothing) As Task(Of StatusMonitorPeriods)
  overload: SuperOffice.CRM.Services.SaintAgent.GetStatusMonitorPeriodsAsync*
  implements:
  - SuperOffice.CRM.Services.ISaintAgent.GetStatusMonitorPeriodsAsync(System.Threading.CancellationToken)
references:
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: SuperOffice.CRM.Services.ISaintAgent
  commentId: T:SuperOffice.CRM.Services.ISaintAgent
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.ISaintAgent.html
  name: ISaintAgent
  nameWithType: ISaintAgent
  fullName: SuperOffice.CRM.Services.ISaintAgent
- uid: SuperOffice.CRM.Services.IAgent
  commentId: T:SuperOffice.CRM.Services.IAgent
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.IAgent.html
  name: IAgent
  nameWithType: IAgent
  fullName: SuperOffice.CRM.Services.IAgent
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Services.SaintAgent.#ctor*
  commentId: Overload:SuperOffice.CRM.Services.SaintAgent.#ctor
  isExternal: true
  href: SuperOffice.CRM.Services.SaintAgent.html#SuperOffice_CRM_Services_SaintAgent__ctor_SuperOffice_CRM_Services_Implementation_BL_Contracts_ISaintConfigurationImplementation_SuperOffice_CRM_Services_Implementation_BL_Contracts_IStatusMonitorImplementation_SuperOffice_CRM_Services_Implementation_BL_Contracts_IStatusMonitorPeriodsImplementation_SuperOffice_Factory_ISoRequestItemsAccessor_
  name: SaintAgent
  nameWithType: SaintAgent.SaintAgent
  fullName: SuperOffice.CRM.Services.SaintAgent.SaintAgent
  nameWithType.vb: SaintAgent.New
  fullName.vb: SuperOffice.CRM.Services.SaintAgent.New
  name.vb: New
- uid: SuperOffice.CRM.Services.Implementation.BL.Contracts.ISaintConfigurationImplementation
  commentId: T:SuperOffice.CRM.Services.Implementation.BL.Contracts.ISaintConfigurationImplementation
  parent: SuperOffice.CRM.Services.Implementation.BL.Contracts
  isExternal: true
  href: SuperOffice.CRM.Services.Implementation.BL.Contracts.ISaintConfigurationImplementation.html
  name: ISaintConfigurationImplementation
  nameWithType: ISaintConfigurationImplementation
  fullName: SuperOffice.CRM.Services.Implementation.BL.Contracts.ISaintConfigurationImplementation
- uid: SuperOffice.CRM.Services.Implementation.BL.Contracts.IStatusMonitorImplementation
  commentId: T:SuperOffice.CRM.Services.Implementation.BL.Contracts.IStatusMonitorImplementation
  parent: SuperOffice.CRM.Services.Implementation.BL.Contracts
  isExternal: true
  href: SuperOffice.CRM.Services.Implementation.BL.Contracts.IStatusMonitorImplementation.html
  name: IStatusMonitorImplementation
  nameWithType: IStatusMonitorImplementation
  fullName: SuperOffice.CRM.Services.Implementation.BL.Contracts.IStatusMonitorImplementation
- uid: SuperOffice.CRM.Services.Implementation.BL.Contracts.IStatusMonitorPeriodsImplementation
  commentId: T:SuperOffice.CRM.Services.Implementation.BL.Contracts.IStatusMonitorPeriodsImplementation
  parent: SuperOffice.CRM.Services.Implementation.BL.Contracts
  isExternal: true
  href: SuperOffice.CRM.Services.Implementation.BL.Contracts.IStatusMonitorPeriodsImplementation.html
  name: IStatusMonitorPeriodsImplementation
  nameWithType: IStatusMonitorPeriodsImplementation
  fullName: SuperOffice.CRM.Services.Implementation.BL.Contracts.IStatusMonitorPeriodsImplementation
- uid: SuperOffice.Factory.ISoRequestItemsAccessor
  isExternal: true
  name: ISoRequestItemsAccessor
  nameWithType: ISoRequestItemsAccessor
  fullName: SuperOffice.Factory.ISoRequestItemsAccessor
- uid: SuperOffice.CRM.Services.Implementation.BL.Contracts
  commentId: N:SuperOffice.CRM.Services.Implementation.BL.Contracts
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Services.Implementation.BL.Contracts
  nameWithType: SuperOffice.CRM.Services.Implementation.BL.Contracts
  fullName: SuperOffice.CRM.Services.Implementation.BL.Contracts
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
  - name: .
  - uid: SuperOffice.CRM.Services.Implementation
    name: Implementation
    isExternal: true
    href: SuperOffice.CRM.Services.Implementation.html
  - name: .
  - uid: SuperOffice.CRM.Services.Implementation.BL
    name: BL
    isExternal: true
    href: SuperOffice.CRM.Services.Implementation.BL.html
  - name: .
  - uid: SuperOffice.CRM.Services.Implementation.BL.Contracts
    name: Contracts
    isExternal: true
    href: SuperOffice.CRM.Services.Implementation.BL.Contracts.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
  - name: .
  - uid: SuperOffice.CRM.Services.Implementation
    name: Implementation
    isExternal: true
    href: SuperOffice.CRM.Services.Implementation.html
  - name: .
  - uid: SuperOffice.CRM.Services.Implementation.BL
    name: BL
    isExternal: true
    href: SuperOffice.CRM.Services.Implementation.BL.html
  - name: .
  - uid: SuperOffice.CRM.Services.Implementation.BL.Contracts
    name: Contracts
    isExternal: true
    href: SuperOffice.CRM.Services.Implementation.BL.Contracts.html
- uid: SuperOffice.Data.IDebugUser
  isExternal: true
  name: IDebugUser
  nameWithType: IDebugUser
  fullName: SuperOffice.Data.IDebugUser
- uid: SuperOffice.Diagnostics.IServiceCallsRepository
  isExternal: true
  name: IServiceCallsRepository
  nameWithType: IServiceCallsRepository
  fullName: SuperOffice.Diagnostics.IServiceCallsRepository
- uid: SuperOffice.CRM.Services.SaintAgent.CreateDefaultSaintConfigurationAsync*
  commentId: Overload:SuperOffice.CRM.Services.SaintAgent.CreateDefaultSaintConfigurationAsync
  isExternal: true
  href: SuperOffice.CRM.Services.SaintAgent.html#SuperOffice_CRM_Services_SaintAgent_CreateDefaultSaintConfigurationAsync_System_Threading_CancellationToken_
  name: CreateDefaultSaintConfigurationAsync
  nameWithType: SaintAgent.CreateDefaultSaintConfigurationAsync
  fullName: SuperOffice.CRM.Services.SaintAgent.CreateDefaultSaintConfigurationAsync
- uid: SuperOffice.CRM.Services.ISaintAgent.CreateDefaultSaintConfigurationAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISaintAgent.CreateDefaultSaintConfigurationAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISaintAgent
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CreateDefaultSaintConfigurationAsync(CancellationToken)
  nameWithType: ISaintAgent.CreateDefaultSaintConfigurationAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.ISaintAgent.CreateDefaultSaintConfigurationAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ISaintAgent.CreateDefaultSaintConfigurationAsync(System.Threading.CancellationToken)
    name: CreateDefaultSaintConfigurationAsync
    isExternal: true
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ISaintAgent.CreateDefaultSaintConfigurationAsync(System.Threading.CancellationToken)
    name: CreateDefaultSaintConfigurationAsync
    isExternal: true
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.SaintConfiguration}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.SaintConfiguration}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<SaintConfiguration>
  nameWithType: Task<SaintConfiguration>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.SaintConfiguration>
  nameWithType.vb: Task(Of SaintConfiguration)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.SaintConfiguration)
  name.vb: Task(Of SaintConfiguration)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.SaintConfiguration
    name: SaintConfiguration
    isExternal: true
    href: SuperOffice.CRM.Services.SaintConfiguration.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.SaintConfiguration
    name: SaintConfiguration
    isExternal: true
    href: SuperOffice.CRM.Services.SaintConfiguration.html
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: SuperOffice.CRM.Services.SaintAgent.SaveSaintConfigurationAsync*
  commentId: Overload:SuperOffice.CRM.Services.SaintAgent.SaveSaintConfigurationAsync
  isExternal: true
  href: SuperOffice.CRM.Services.SaintAgent.html#SuperOffice_CRM_Services_SaintAgent_SaveSaintConfigurationAsync_SuperOffice_CRM_Services_SaintConfiguration_System_Threading_CancellationToken_
  name: SaveSaintConfigurationAsync
  nameWithType: SaintAgent.SaveSaintConfigurationAsync
  fullName: SuperOffice.CRM.Services.SaintAgent.SaveSaintConfigurationAsync
- uid: SuperOffice.CRM.Services.ISaintAgent.SaveSaintConfigurationAsync(SuperOffice.CRM.Services.SaintConfiguration,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISaintAgent.SaveSaintConfigurationAsync(SuperOffice.CRM.Services.SaintConfiguration,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISaintAgent
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: SaveSaintConfigurationAsync(SaintConfiguration, CancellationToken)
  nameWithType: ISaintAgent.SaveSaintConfigurationAsync(SaintConfiguration, CancellationToken)
  fullName: SuperOffice.CRM.Services.ISaintAgent.SaveSaintConfigurationAsync(SuperOffice.CRM.Services.SaintConfiguration, System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ISaintAgent.SaveSaintConfigurationAsync(SuperOffice.CRM.Services.SaintConfiguration,System.Threading.CancellationToken)
    name: SaveSaintConfigurationAsync
    isExternal: true
  - name: (
  - uid: SuperOffice.CRM.Services.SaintConfiguration
    name: SaintConfiguration
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ISaintAgent.SaveSaintConfigurationAsync(SuperOffice.CRM.Services.SaintConfiguration,System.Threading.CancellationToken)
    name: SaveSaintConfigurationAsync
    isExternal: true
  - name: (
  - uid: SuperOffice.CRM.Services.SaintConfiguration
    name: SaintConfiguration
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: SuperOffice.CRM.Services.SaintConfiguration
  commentId: T:SuperOffice.CRM.Services.SaintConfiguration
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.SaintConfiguration.html
  name: SaintConfiguration
  nameWithType: SaintConfiguration
  fullName: SuperOffice.CRM.Services.SaintConfiguration
- uid: SuperOffice.CRM.Services.SaintAgent.CreateDefaultStatusMonitorAsync*
  commentId: Overload:SuperOffice.CRM.Services.SaintAgent.CreateDefaultStatusMonitorAsync
  isExternal: true
  href: SuperOffice.CRM.Services.SaintAgent.html#SuperOffice_CRM_Services_SaintAgent_CreateDefaultStatusMonitorAsync_System_Threading_CancellationToken_
  name: CreateDefaultStatusMonitorAsync
  nameWithType: SaintAgent.CreateDefaultStatusMonitorAsync
  fullName: SuperOffice.CRM.Services.SaintAgent.CreateDefaultStatusMonitorAsync
- uid: SuperOffice.CRM.Services.ISaintAgent.CreateDefaultStatusMonitorAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISaintAgent.CreateDefaultStatusMonitorAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISaintAgent
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CreateDefaultStatusMonitorAsync(CancellationToken)
  nameWithType: ISaintAgent.CreateDefaultStatusMonitorAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.ISaintAgent.CreateDefaultStatusMonitorAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ISaintAgent.CreateDefaultStatusMonitorAsync(System.Threading.CancellationToken)
    name: CreateDefaultStatusMonitorAsync
    isExternal: true
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ISaintAgent.CreateDefaultStatusMonitorAsync(System.Threading.CancellationToken)
    name: CreateDefaultStatusMonitorAsync
    isExternal: true
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.StatusMonitor}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.StatusMonitor}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<StatusMonitor>
  nameWithType: Task<StatusMonitor>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.StatusMonitor>
  nameWithType.vb: Task(Of StatusMonitor)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.StatusMonitor)
  name.vb: Task(Of StatusMonitor)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.StatusMonitor
    name: StatusMonitor
    isExternal: true
    href: SuperOffice.CRM.Services.StatusMonitor.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.StatusMonitor
    name: StatusMonitor
    isExternal: true
    href: SuperOffice.CRM.Services.StatusMonitor.html
  - name: )
- uid: SuperOffice.CRM.Services.SaintAgent.SaveStatusMonitorAsync*
  commentId: Overload:SuperOffice.CRM.Services.SaintAgent.SaveStatusMonitorAsync
  isExternal: true
  href: SuperOffice.CRM.Services.SaintAgent.html#SuperOffice_CRM_Services_SaintAgent_SaveStatusMonitorAsync_SuperOffice_CRM_Services_StatusMonitor_System_Threading_CancellationToken_
  name: SaveStatusMonitorAsync
  nameWithType: SaintAgent.SaveStatusMonitorAsync
  fullName: SuperOffice.CRM.Services.SaintAgent.SaveStatusMonitorAsync
- uid: SuperOffice.CRM.Services.ISaintAgent.SaveStatusMonitorAsync(SuperOffice.CRM.Services.StatusMonitor,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISaintAgent.SaveStatusMonitorAsync(SuperOffice.CRM.Services.StatusMonitor,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISaintAgent
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: SaveStatusMonitorAsync(StatusMonitor, CancellationToken)
  nameWithType: ISaintAgent.SaveStatusMonitorAsync(StatusMonitor, CancellationToken)
  fullName: SuperOffice.CRM.Services.ISaintAgent.SaveStatusMonitorAsync(SuperOffice.CRM.Services.StatusMonitor, System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ISaintAgent.SaveStatusMonitorAsync(SuperOffice.CRM.Services.StatusMonitor,System.Threading.CancellationToken)
    name: SaveStatusMonitorAsync
    isExternal: true
  - name: (
  - uid: SuperOffice.CRM.Services.StatusMonitor
    name: StatusMonitor
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ISaintAgent.SaveStatusMonitorAsync(SuperOffice.CRM.Services.StatusMonitor,System.Threading.CancellationToken)
    name: SaveStatusMonitorAsync
    isExternal: true
  - name: (
  - uid: SuperOffice.CRM.Services.StatusMonitor
    name: StatusMonitor
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: SuperOffice.CRM.Services.StatusMonitor
  commentId: T:SuperOffice.CRM.Services.StatusMonitor
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.StatusMonitor.html
  name: StatusMonitor
  nameWithType: StatusMonitor
  fullName: SuperOffice.CRM.Services.StatusMonitor
- uid: SuperOffice.CRM.Services.SaintAgent.CreateDefaultStatusMonitorPeriodsAsync*
  commentId: Overload:SuperOffice.CRM.Services.SaintAgent.CreateDefaultStatusMonitorPeriodsAsync
  isExternal: true
  href: SuperOffice.CRM.Services.SaintAgent.html#SuperOffice_CRM_Services_SaintAgent_CreateDefaultStatusMonitorPeriodsAsync_System_Threading_CancellationToken_
  name: CreateDefaultStatusMonitorPeriodsAsync
  nameWithType: SaintAgent.CreateDefaultStatusMonitorPeriodsAsync
  fullName: SuperOffice.CRM.Services.SaintAgent.CreateDefaultStatusMonitorPeriodsAsync
- uid: SuperOffice.CRM.Services.ISaintAgent.CreateDefaultStatusMonitorPeriodsAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISaintAgent.CreateDefaultStatusMonitorPeriodsAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISaintAgent
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CreateDefaultStatusMonitorPeriodsAsync(CancellationToken)
  nameWithType: ISaintAgent.CreateDefaultStatusMonitorPeriodsAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.ISaintAgent.CreateDefaultStatusMonitorPeriodsAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ISaintAgent.CreateDefaultStatusMonitorPeriodsAsync(System.Threading.CancellationToken)
    name: CreateDefaultStatusMonitorPeriodsAsync
    isExternal: true
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ISaintAgent.CreateDefaultStatusMonitorPeriodsAsync(System.Threading.CancellationToken)
    name: CreateDefaultStatusMonitorPeriodsAsync
    isExternal: true
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.StatusMonitorPeriods}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.StatusMonitorPeriods}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<StatusMonitorPeriods>
  nameWithType: Task<StatusMonitorPeriods>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.StatusMonitorPeriods>
  nameWithType.vb: Task(Of StatusMonitorPeriods)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.StatusMonitorPeriods)
  name.vb: Task(Of StatusMonitorPeriods)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.StatusMonitorPeriods
    name: StatusMonitorPeriods
    isExternal: true
    href: SuperOffice.CRM.Services.StatusMonitorPeriods.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.StatusMonitorPeriods
    name: StatusMonitorPeriods
    isExternal: true
    href: SuperOffice.CRM.Services.StatusMonitorPeriods.html
  - name: )
- uid: SuperOffice.CRM.Services.SaintAgent.SaveStatusMonitorPeriodsAsync*
  commentId: Overload:SuperOffice.CRM.Services.SaintAgent.SaveStatusMonitorPeriodsAsync
  isExternal: true
  href: SuperOffice.CRM.Services.SaintAgent.html#SuperOffice_CRM_Services_SaintAgent_SaveStatusMonitorPeriodsAsync_SuperOffice_CRM_Services_StatusMonitorPeriods_System_Threading_CancellationToken_
  name: SaveStatusMonitorPeriodsAsync
  nameWithType: SaintAgent.SaveStatusMonitorPeriodsAsync
  fullName: SuperOffice.CRM.Services.SaintAgent.SaveStatusMonitorPeriodsAsync
- uid: SuperOffice.CRM.Services.ISaintAgent.SaveStatusMonitorPeriodsAsync(SuperOffice.CRM.Services.StatusMonitorPeriods,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISaintAgent.SaveStatusMonitorPeriodsAsync(SuperOffice.CRM.Services.StatusMonitorPeriods,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISaintAgent
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: SaveStatusMonitorPeriodsAsync(StatusMonitorPeriods, CancellationToken)
  nameWithType: ISaintAgent.SaveStatusMonitorPeriodsAsync(StatusMonitorPeriods, CancellationToken)
  fullName: SuperOffice.CRM.Services.ISaintAgent.SaveStatusMonitorPeriodsAsync(SuperOffice.CRM.Services.StatusMonitorPeriods, System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ISaintAgent.SaveStatusMonitorPeriodsAsync(SuperOffice.CRM.Services.StatusMonitorPeriods,System.Threading.CancellationToken)
    name: SaveStatusMonitorPeriodsAsync
    isExternal: true
  - name: (
  - uid: SuperOffice.CRM.Services.StatusMonitorPeriods
    name: StatusMonitorPeriods
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ISaintAgent.SaveStatusMonitorPeriodsAsync(SuperOffice.CRM.Services.StatusMonitorPeriods,System.Threading.CancellationToken)
    name: SaveStatusMonitorPeriodsAsync
    isExternal: true
  - name: (
  - uid: SuperOffice.CRM.Services.StatusMonitorPeriods
    name: StatusMonitorPeriods
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: SuperOffice.CRM.Services.StatusMonitorPeriods
  commentId: T:SuperOffice.CRM.Services.StatusMonitorPeriods
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.StatusMonitorPeriods.html
  name: StatusMonitorPeriods
  nameWithType: StatusMonitorPeriods
  fullName: SuperOffice.CRM.Services.StatusMonitorPeriods
- uid: SuperOffice.CRM.Services.SaintAgent.GetSaintConfigurationsAsync*
  commentId: Overload:SuperOffice.CRM.Services.SaintAgent.GetSaintConfigurationsAsync
  isExternal: true
  href: SuperOffice.CRM.Services.SaintAgent.html#SuperOffice_CRM_Services_SaintAgent_GetSaintConfigurationsAsync_System_Threading_CancellationToken_
  name: GetSaintConfigurationsAsync
  nameWithType: SaintAgent.GetSaintConfigurationsAsync
  fullName: SuperOffice.CRM.Services.SaintAgent.GetSaintConfigurationsAsync
- uid: SuperOffice.CRM.Services.ISaintAgent.GetSaintConfigurationsAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISaintAgent.GetSaintConfigurationsAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISaintAgent
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: GetSaintConfigurationsAsync(CancellationToken)
  nameWithType: ISaintAgent.GetSaintConfigurationsAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.ISaintAgent.GetSaintConfigurationsAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ISaintAgent.GetSaintConfigurationsAsync(System.Threading.CancellationToken)
    name: GetSaintConfigurationsAsync
    isExternal: true
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ISaintAgent.GetSaintConfigurationsAsync(System.Threading.CancellationToken)
    name: GetSaintConfigurationsAsync
    isExternal: true
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.SaintConfiguration[]}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.SaintConfiguration[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<SaintConfiguration[]>
  nameWithType: Task<SaintConfiguration[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.SaintConfiguration[]>
  nameWithType.vb: Task(Of SaintConfiguration())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.SaintConfiguration())
  name.vb: Task(Of SaintConfiguration())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.SaintConfiguration
    name: SaintConfiguration
    isExternal: true
    href: SuperOffice.CRM.Services.SaintConfiguration.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.SaintConfiguration
    name: SaintConfiguration
    isExternal: true
    href: SuperOffice.CRM.Services.SaintConfiguration.html
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.CRM.Services.SaintAgent.GetStatusMonitorsAsync*
  commentId: Overload:SuperOffice.CRM.Services.SaintAgent.GetStatusMonitorsAsync
  isExternal: true
  href: SuperOffice.CRM.Services.SaintAgent.html#SuperOffice_CRM_Services_SaintAgent_GetStatusMonitorsAsync_System_Int32_System_String_System_Threading_CancellationToken_
  name: GetStatusMonitorsAsync
  nameWithType: SaintAgent.GetStatusMonitorsAsync
  fullName: SuperOffice.CRM.Services.SaintAgent.GetStatusMonitorsAsync
- uid: SuperOffice.CRM.Services.ISaintAgent.GetStatusMonitorsAsync(System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISaintAgent.GetStatusMonitorsAsync(System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISaintAgent
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: GetStatusMonitorsAsync(int, string, CancellationToken)
  nameWithType: ISaintAgent.GetStatusMonitorsAsync(int, string, CancellationToken)
  fullName: SuperOffice.CRM.Services.ISaintAgent.GetStatusMonitorsAsync(int, string, System.Threading.CancellationToken)
  nameWithType.vb: ISaintAgent.GetStatusMonitorsAsync(Integer, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ISaintAgent.GetStatusMonitorsAsync(Integer, String, System.Threading.CancellationToken)
  name.vb: GetStatusMonitorsAsync(Integer, String, CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ISaintAgent.GetStatusMonitorsAsync(System.Int32,System.String,System.Threading.CancellationToken)
    name: GetStatusMonitorsAsync
    isExternal: true
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ISaintAgent.GetStatusMonitorsAsync(System.Int32,System.String,System.Threading.CancellationToken)
    name: GetStatusMonitorsAsync
    isExternal: true
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.StatusMonitor[]}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.StatusMonitor[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<StatusMonitor[]>
  nameWithType: Task<StatusMonitor[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.StatusMonitor[]>
  nameWithType.vb: Task(Of StatusMonitor())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.StatusMonitor())
  name.vb: Task(Of StatusMonitor())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.StatusMonitor
    name: StatusMonitor
    isExternal: true
    href: SuperOffice.CRM.Services.StatusMonitor.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.StatusMonitor
    name: StatusMonitor
    isExternal: true
    href: SuperOffice.CRM.Services.StatusMonitor.html
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.CRM.Services.SaintAgent.GetStatusMonitorAsync*
  commentId: Overload:SuperOffice.CRM.Services.SaintAgent.GetStatusMonitorAsync
  isExternal: true
  href: SuperOffice.CRM.Services.SaintAgent.html#SuperOffice_CRM_Services_SaintAgent_GetStatusMonitorAsync_System_Int32_System_Threading_CancellationToken_
  name: GetStatusMonitorAsync
  nameWithType: SaintAgent.GetStatusMonitorAsync
  fullName: SuperOffice.CRM.Services.SaintAgent.GetStatusMonitorAsync
- uid: SuperOffice.CRM.Services.ISaintAgent.GetStatusMonitorAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISaintAgent.GetStatusMonitorAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISaintAgent
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: GetStatusMonitorAsync(int, CancellationToken)
  nameWithType: ISaintAgent.GetStatusMonitorAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.ISaintAgent.GetStatusMonitorAsync(int, System.Threading.CancellationToken)
  nameWithType.vb: ISaintAgent.GetStatusMonitorAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ISaintAgent.GetStatusMonitorAsync(Integer, System.Threading.CancellationToken)
  name.vb: GetStatusMonitorAsync(Integer, CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ISaintAgent.GetStatusMonitorAsync(System.Int32,System.Threading.CancellationToken)
    name: GetStatusMonitorAsync
    isExternal: true
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ISaintAgent.GetStatusMonitorAsync(System.Int32,System.Threading.CancellationToken)
    name: GetStatusMonitorAsync
    isExternal: true
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: SuperOffice.CRM.Services.SaintAgent.RegenerateStatusMonitorsAsync*
  commentId: Overload:SuperOffice.CRM.Services.SaintAgent.RegenerateStatusMonitorsAsync
  isExternal: true
  href: SuperOffice.CRM.Services.SaintAgent.html#SuperOffice_CRM_Services_SaintAgent_RegenerateStatusMonitorsAsync_System_Boolean_System_Threading_CancellationToken_
  name: RegenerateStatusMonitorsAsync
  nameWithType: SaintAgent.RegenerateStatusMonitorsAsync
  fullName: SuperOffice.CRM.Services.SaintAgent.RegenerateStatusMonitorsAsync
- uid: SuperOffice.CRM.Services.ISaintAgent.RegenerateStatusMonitorsAsync(System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISaintAgent.RegenerateStatusMonitorsAsync(System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISaintAgent
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: RegenerateStatusMonitorsAsync(bool, CancellationToken)
  nameWithType: ISaintAgent.RegenerateStatusMonitorsAsync(bool, CancellationToken)
  fullName: SuperOffice.CRM.Services.ISaintAgent.RegenerateStatusMonitorsAsync(bool, System.Threading.CancellationToken)
  nameWithType.vb: ISaintAgent.RegenerateStatusMonitorsAsync(Boolean, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ISaintAgent.RegenerateStatusMonitorsAsync(Boolean, System.Threading.CancellationToken)
  name.vb: RegenerateStatusMonitorsAsync(Boolean, CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ISaintAgent.RegenerateStatusMonitorsAsync(System.Boolean,System.Threading.CancellationToken)
    name: RegenerateStatusMonitorsAsync
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ISaintAgent.RegenerateStatusMonitorsAsync(System.Boolean,System.Threading.CancellationToken)
    name: RegenerateStatusMonitorsAsync
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.BatchTaskInfo}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.BatchTaskInfo}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<BatchTaskInfo>
  nameWithType: Task<BatchTaskInfo>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.BatchTaskInfo>
  nameWithType.vb: Task(Of BatchTaskInfo)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.BatchTaskInfo)
  name.vb: Task(Of BatchTaskInfo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.BatchTaskInfo
    name: BatchTaskInfo
    isExternal: true
    href: SuperOffice.CRM.Services.BatchTaskInfo.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.BatchTaskInfo
    name: BatchTaskInfo
    isExternal: true
    href: SuperOffice.CRM.Services.BatchTaskInfo.html
  - name: )
- uid: SuperOffice.CRM.Services.SaintAgent.SetRankOnStatusMonitorsAsync*
  commentId: Overload:SuperOffice.CRM.Services.SaintAgent.SetRankOnStatusMonitorsAsync
  isExternal: true
  href: SuperOffice.CRM.Services.SaintAgent.html#SuperOffice_CRM_Services_SaintAgent_SetRankOnStatusMonitorsAsync_System_String_System_Int32___System_Threading_CancellationToken_
  name: SetRankOnStatusMonitorsAsync
  nameWithType: SaintAgent.SetRankOnStatusMonitorsAsync
  fullName: SuperOffice.CRM.Services.SaintAgent.SetRankOnStatusMonitorsAsync
- uid: SuperOffice.CRM.Services.ISaintAgent.SetRankOnStatusMonitorsAsync(System.String,System.Int32[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISaintAgent.SetRankOnStatusMonitorsAsync(System.String,System.Int32[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISaintAgent
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SetRankOnStatusMonitorsAsync(string, int[], CancellationToken)
  nameWithType: ISaintAgent.SetRankOnStatusMonitorsAsync(string, int[], CancellationToken)
  fullName: SuperOffice.CRM.Services.ISaintAgent.SetRankOnStatusMonitorsAsync(string, int[], System.Threading.CancellationToken)
  nameWithType.vb: ISaintAgent.SetRankOnStatusMonitorsAsync(String, Integer(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ISaintAgent.SetRankOnStatusMonitorsAsync(String, Integer(), System.Threading.CancellationToken)
  name.vb: SetRankOnStatusMonitorsAsync(String, Integer(), CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ISaintAgent.SetRankOnStatusMonitorsAsync(System.String,System.Int32[],System.Threading.CancellationToken)
    name: SetRankOnStatusMonitorsAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ISaintAgent.SetRankOnStatusMonitorsAsync(System.String,System.Int32[],System.Threading.CancellationToken)
    name: SetRankOnStatusMonitorsAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: SuperOffice.CRM.Services.SaintAgent.RegenerateStatusMonitorAsync*
  commentId: Overload:SuperOffice.CRM.Services.SaintAgent.RegenerateStatusMonitorAsync
  isExternal: true
  href: SuperOffice.CRM.Services.SaintAgent.html#SuperOffice_CRM_Services_SaintAgent_RegenerateStatusMonitorAsync_System_Int32_System_Threading_CancellationToken_
  name: RegenerateStatusMonitorAsync
  nameWithType: SaintAgent.RegenerateStatusMonitorAsync
  fullName: SuperOffice.CRM.Services.SaintAgent.RegenerateStatusMonitorAsync
- uid: SuperOffice.CRM.Services.ISaintAgent.RegenerateStatusMonitorAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISaintAgent.RegenerateStatusMonitorAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISaintAgent
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: RegenerateStatusMonitorAsync(int, CancellationToken)
  nameWithType: ISaintAgent.RegenerateStatusMonitorAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.ISaintAgent.RegenerateStatusMonitorAsync(int, System.Threading.CancellationToken)
  nameWithType.vb: ISaintAgent.RegenerateStatusMonitorAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ISaintAgent.RegenerateStatusMonitorAsync(Integer, System.Threading.CancellationToken)
  name.vb: RegenerateStatusMonitorAsync(Integer, CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ISaintAgent.RegenerateStatusMonitorAsync(System.Int32,System.Threading.CancellationToken)
    name: RegenerateStatusMonitorAsync
    isExternal: true
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ISaintAgent.RegenerateStatusMonitorAsync(System.Int32,System.Threading.CancellationToken)
    name: RegenerateStatusMonitorAsync
    isExternal: true
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: SuperOffice.CRM.Services.SaintAgent.RegenerateCountersAsync*
  commentId: Overload:SuperOffice.CRM.Services.SaintAgent.RegenerateCountersAsync
  isExternal: true
  href: SuperOffice.CRM.Services.SaintAgent.html#SuperOffice_CRM_Services_SaintAgent_RegenerateCountersAsync_System_Boolean_System_Threading_CancellationToken_
  name: RegenerateCountersAsync
  nameWithType: SaintAgent.RegenerateCountersAsync
  fullName: SuperOffice.CRM.Services.SaintAgent.RegenerateCountersAsync
- uid: SuperOffice.CRM.Services.ISaintAgent.RegenerateCountersAsync(System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISaintAgent.RegenerateCountersAsync(System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISaintAgent
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: RegenerateCountersAsync(bool, CancellationToken)
  nameWithType: ISaintAgent.RegenerateCountersAsync(bool, CancellationToken)
  fullName: SuperOffice.CRM.Services.ISaintAgent.RegenerateCountersAsync(bool, System.Threading.CancellationToken)
  nameWithType.vb: ISaintAgent.RegenerateCountersAsync(Boolean, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ISaintAgent.RegenerateCountersAsync(Boolean, System.Threading.CancellationToken)
  name.vb: RegenerateCountersAsync(Boolean, CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ISaintAgent.RegenerateCountersAsync(System.Boolean,System.Threading.CancellationToken)
    name: RegenerateCountersAsync
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ISaintAgent.RegenerateCountersAsync(System.Boolean,System.Threading.CancellationToken)
    name: RegenerateCountersAsync
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: SuperOffice.CRM.Services.SaintAgent.GetStatusMonitorPeriodsAsync*
  commentId: Overload:SuperOffice.CRM.Services.SaintAgent.GetStatusMonitorPeriodsAsync
  isExternal: true
  href: SuperOffice.CRM.Services.SaintAgent.html#SuperOffice_CRM_Services_SaintAgent_GetStatusMonitorPeriodsAsync_System_Threading_CancellationToken_
  name: GetStatusMonitorPeriodsAsync
  nameWithType: SaintAgent.GetStatusMonitorPeriodsAsync
  fullName: SuperOffice.CRM.Services.SaintAgent.GetStatusMonitorPeriodsAsync
- uid: SuperOffice.CRM.Services.ISaintAgent.GetStatusMonitorPeriodsAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISaintAgent.GetStatusMonitorPeriodsAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISaintAgent
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: GetStatusMonitorPeriodsAsync(CancellationToken)
  nameWithType: ISaintAgent.GetStatusMonitorPeriodsAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.ISaintAgent.GetStatusMonitorPeriodsAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ISaintAgent.GetStatusMonitorPeriodsAsync(System.Threading.CancellationToken)
    name: GetStatusMonitorPeriodsAsync
    isExternal: true
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ISaintAgent.GetStatusMonitorPeriodsAsync(System.Threading.CancellationToken)
    name: GetStatusMonitorPeriodsAsync
    isExternal: true
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
