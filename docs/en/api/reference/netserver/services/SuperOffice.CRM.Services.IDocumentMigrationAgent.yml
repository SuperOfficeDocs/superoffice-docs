### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Services.IDocumentMigrationAgent
  commentId: T:SuperOffice.CRM.Services.IDocumentMigrationAgent
  id: IDocumentMigrationAgent
  parent: SuperOffice.CRM.Services
  children:
  - SuperOffice.CRM.Services.IDocumentMigrationAgent.CreateDefaultDocumentMigrationItemListAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IDocumentMigrationAgent.CreateDefaultDocumentTemplateMigrationListAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IDocumentMigrationAgent.GetForAllDocumentsAsync(System.Int32,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IDocumentMigrationAgent.GetForDateRangeAsync(System.Int32,System.DateTime,System.DateTime,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IDocumentMigrationAgent.GetForSelectionAsync(System.Int32,System.Int32,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IDocumentMigrationAgent.GetForTemplatesAsync(System.Int32,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IDocumentMigrationAgent.GetNumberOfConfidentialDocumentsAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IDocumentMigrationAgent.HasDocumentsToMigrateAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IDocumentMigrationAgent.MigrateDocumentToNewDocPluginAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IDocumentMigrationAgent.MigrateTemplateToNewDocPluginAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IDocumentMigrationAgent
  nameWithType: IDocumentMigrationAgent
  fullName: SuperOffice.CRM.Services.IDocumentMigrationAgent
  type: Interface
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nInterface for the DocumentMigration Agent\nAgent used to support migrating documents between different document-plugins, as single documents or batches.\n<p></p>\n<strong>Online Restricted:</strong> This agent is not available in Online by default. Access must be requested specifically when app is registered. Intended for SuperOffice-internal apps.\n"
  example:
  - "\n<pre><code>  using SuperOffice;\n  using SuperOffice.CRM.Services;\n\n  using (SoSession mySession = SoSession.Authenticate(&quot;user&quot;, &quot;pass&quot;))\n  {\n     using (DocumentMigrationAgent agent = new DocumentMigrationAgent())\n     {\n        // call methods on agent here...\n     }\n  }</code></pre>\n"
  syntax:
    content: >-
      [Agent("DocumentMigration Agent", "Interface for the DocumentMigration Agent. Agent used to support migrating documents between different document-plugins, as single documents or batches.")]

      public interface IDocumentMigrationAgent : IAgent
    content.vb: >-
      <Agent("DocumentMigration Agent", "Interface for the DocumentMigration Agent. Agent used to support migrating documents between different document-plugins, as single documents or batches.")>

      Public Interface IDocumentMigrationAgent
          Inherits IAgent
  attributes:
  - type: SuperOffice.CRM.Services.Reflection.AgentAttribute
    ctor: SuperOffice.CRM.Services.Reflection.AgentAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: DocumentMigration Agent
    - type: System.String
      value: Interface for the DocumentMigration Agent. Agent used to support migrating documents between different document-plugins, as single documents or batches.
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.CRM.Services.IDocumentMigrationAgent.CreateDefaultDocumentMigrationItemListAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IDocumentMigrationAgent.CreateDefaultDocumentMigrationItemListAsync(System.Threading.CancellationToken)
  id: CreateDefaultDocumentMigrationItemListAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IDocumentMigrationAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultDocumentMigrationItemListAsync(CancellationToken)
  nameWithType: IDocumentMigrationAgent.CreateDefaultDocumentMigrationItemListAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.IDocumentMigrationAgent.CreateDefaultDocumentMigrationItemListAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nLoading default values into a new DocumentMigrationItemList.\nNetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance\n<p></p>\n<strong>Online Restricted:</strong> The DocumentMigration agent is not available in Online by default. Access must be requested specifically when app is registered. Intended for SuperOffice-internal apps.\n"
  syntax:
    content: Task<DocumentMigrationItemList> CreateDefaultDocumentMigrationItemListAsync(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.DocumentMigrationItemList}
      description: New DocumentMigrationItemList with default values
    content.vb: Function CreateDefaultDocumentMigrationItemListAsync(cancellationToken As CancellationToken = Nothing) As Task(Of DocumentMigrationItemList)
  overload: SuperOffice.CRM.Services.IDocumentMigrationAgent.CreateDefaultDocumentMigrationItemListAsync*
- uid: SuperOffice.CRM.Services.IDocumentMigrationAgent.CreateDefaultDocumentTemplateMigrationListAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IDocumentMigrationAgent.CreateDefaultDocumentTemplateMigrationListAsync(System.Threading.CancellationToken)
  id: CreateDefaultDocumentTemplateMigrationListAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IDocumentMigrationAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultDocumentTemplateMigrationListAsync(CancellationToken)
  nameWithType: IDocumentMigrationAgent.CreateDefaultDocumentTemplateMigrationListAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.IDocumentMigrationAgent.CreateDefaultDocumentTemplateMigrationListAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nLoading default values into a new DocumentTemplateMigrationList.\nNetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance\n<p></p>\n<strong>Online Restricted:</strong> The DocumentMigration agent is not available in Online by default. Access must be requested specifically when app is registered. Intended for SuperOffice-internal apps.\n"
  syntax:
    content: Task<DocumentTemplateMigrationList> CreateDefaultDocumentTemplateMigrationListAsync(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.DocumentTemplateMigrationList}
      description: New DocumentTemplateMigrationList with default values
    content.vb: Function CreateDefaultDocumentTemplateMigrationListAsync(cancellationToken As CancellationToken = Nothing) As Task(Of DocumentTemplateMigrationList)
  overload: SuperOffice.CRM.Services.IDocumentMigrationAgent.CreateDefaultDocumentTemplateMigrationListAsync*
- uid: SuperOffice.CRM.Services.IDocumentMigrationAgent.GetForAllDocumentsAsync(System.Int32,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IDocumentMigrationAgent.GetForAllDocumentsAsync(System.Int32,System.Boolean,System.Threading.CancellationToken)
  id: GetForAllDocumentsAsync(System.Int32,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IDocumentMigrationAgent
  langs:
  - csharp
  - vb
  name: GetForAllDocumentsAsync(Int32, Boolean, CancellationToken)
  nameWithType: IDocumentMigrationAgent.GetForAllDocumentsAsync(Int32, Boolean, CancellationToken)
  fullName: SuperOffice.CRM.Services.IDocumentMigrationAgent.GetForAllDocumentsAsync(System.Int32, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets a migration summary for all documents stored in CRM. Warning: Expensive!\n<p></p>\n<strong>Online Restricted:</strong> The DocumentMigration agent is not available in Online by default. Access must be requested specifically when app is registered. Intended for SuperOffice-internal apps.\n"
  syntax:
    content: Task<DocumentMigrationItemList> GetForAllDocumentsAsync(int documentPluginId, bool includeEmails, CancellationToken cancellationToken = null)
    parameters:
    - id: documentPluginId
      type: System.Int32
      description: The ID of the document-plugin to migrate to.
    - id: includeEmails
      type: System.Boolean
      description: True if documents to migrate should include emails.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.DocumentMigrationItemList}
      description: Never null.
    content.vb: Function GetForAllDocumentsAsync(documentPluginId As Integer, includeEmails As Boolean, cancellationToken As CancellationToken = Nothing) As Task(Of DocumentMigrationItemList)
  overload: SuperOffice.CRM.Services.IDocumentMigrationAgent.GetForAllDocumentsAsync*
- uid: SuperOffice.CRM.Services.IDocumentMigrationAgent.GetForDateRangeAsync(System.Int32,System.DateTime,System.DateTime,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IDocumentMigrationAgent.GetForDateRangeAsync(System.Int32,System.DateTime,System.DateTime,System.Boolean,System.Threading.CancellationToken)
  id: GetForDateRangeAsync(System.Int32,System.DateTime,System.DateTime,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IDocumentMigrationAgent
  langs:
  - csharp
  - vb
  name: GetForDateRangeAsync(Int32, DateTime, DateTime, Boolean, CancellationToken)
  nameWithType: IDocumentMigrationAgent.GetForDateRangeAsync(Int32, DateTime, DateTime, Boolean, CancellationToken)
  fullName: SuperOffice.CRM.Services.IDocumentMigrationAgent.GetForDateRangeAsync(System.Int32, System.DateTime, System.DateTime, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets a migration summary for documents in the provided date-rage\n<p></p>\n<strong>Online Restricted:</strong> The DocumentMigration agent is not available in Online by default. Access must be requested specifically when app is registered. Intended for SuperOffice-internal apps.\n"
  syntax:
    content: Task<DocumentMigrationItemList> GetForDateRangeAsync(int documentPluginId, DateTime minDate, DateTime maxDate, bool includeEmails, CancellationToken cancellationToken = null)
    parameters:
    - id: documentPluginId
      type: System.Int32
      description: The ID of the document-plugin to migrate to.
    - id: minDate
      type: System.DateTime
      description: Inclusive mininmum.
    - id: maxDate
      type: System.DateTime
      description: Inclusive maximum.
    - id: includeEmails
      type: System.Boolean
      description: True if documents to migrate should include emails.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.DocumentMigrationItemList}
      description: Never null.
    content.vb: Function GetForDateRangeAsync(documentPluginId As Integer, minDate As DateTime, maxDate As DateTime, includeEmails As Boolean, cancellationToken As CancellationToken = Nothing) As Task(Of DocumentMigrationItemList)
  overload: SuperOffice.CRM.Services.IDocumentMigrationAgent.GetForDateRangeAsync*
- uid: SuperOffice.CRM.Services.IDocumentMigrationAgent.GetForSelectionAsync(System.Int32,System.Int32,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IDocumentMigrationAgent.GetForSelectionAsync(System.Int32,System.Int32,System.Boolean,System.Threading.CancellationToken)
  id: GetForSelectionAsync(System.Int32,System.Int32,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IDocumentMigrationAgent
  langs:
  - csharp
  - vb
  name: GetForSelectionAsync(Int32, Int32, Boolean, CancellationToken)
  nameWithType: IDocumentMigrationAgent.GetForSelectionAsync(Int32, Int32, Boolean, CancellationToken)
  fullName: SuperOffice.CRM.Services.IDocumentMigrationAgent.GetForSelectionAsync(System.Int32, System.Int32, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets a migration summary for documents in the provided selection\n<p></p>\n<strong>Online Restricted:</strong> The DocumentMigration agent is not available in Online by default. Access must be requested specifically when app is registered. Intended for SuperOffice-internal apps.\n"
  syntax:
    content: Task<DocumentMigrationItemList> GetForSelectionAsync(int documentPluginId, int selectionId, bool includeEmails, CancellationToken cancellationToken = null)
    parameters:
    - id: documentPluginId
      type: System.Int32
      description: The ID of the document-plugin to migrate to.
    - id: selectionId
      type: System.Int32
      description: ID of the selection used to create the DocumentMigrationSummary instance.
    - id: includeEmails
      type: System.Boolean
      description: True if documents to migrate should include emails.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.DocumentMigrationItemList}
      description: Never null.
    content.vb: Function GetForSelectionAsync(documentPluginId As Integer, selectionId As Integer, includeEmails As Boolean, cancellationToken As CancellationToken = Nothing) As Task(Of DocumentMigrationItemList)
  overload: SuperOffice.CRM.Services.IDocumentMigrationAgent.GetForSelectionAsync*
- uid: SuperOffice.CRM.Services.IDocumentMigrationAgent.MigrateDocumentToNewDocPluginAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IDocumentMigrationAgent.MigrateDocumentToNewDocPluginAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  id: MigrateDocumentToNewDocPluginAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IDocumentMigrationAgent
  langs:
  - csharp
  - vb
  name: MigrateDocumentToNewDocPluginAsync(Int32, Int32, CancellationToken)
  nameWithType: IDocumentMigrationAgent.MigrateDocumentToNewDocPluginAsync(Int32, Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.IDocumentMigrationAgent.MigrateDocumentToNewDocPluginAsync(System.Int32, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nMigrates the document with the provided id to the specified document-plugin.\n<p></p>\n<strong>Online Restricted:</strong> The DocumentMigration agent is not available in Online by default. Access must be requested specifically when app is registered. Intended for SuperOffice-internal apps.\n"
  syntax:
    content: Task MigrateDocumentToNewDocPluginAsync(int documentId, int documentPluginId, CancellationToken cancellationToken = null)
    parameters:
    - id: documentId
      type: System.Int32
      description: The ID of the document to migrate.
    - id: documentPluginId
      type: System.Int32
      description: The ID of the document-plugin to migrate to.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Function MigrateDocumentToNewDocPluginAsync(documentId As Integer, documentPluginId As Integer, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IDocumentMigrationAgent.MigrateDocumentToNewDocPluginAsync*
- uid: SuperOffice.CRM.Services.IDocumentMigrationAgent.HasDocumentsToMigrateAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IDocumentMigrationAgent.HasDocumentsToMigrateAsync(System.Threading.CancellationToken)
  id: HasDocumentsToMigrateAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IDocumentMigrationAgent
  langs:
  - csharp
  - vb
  name: HasDocumentsToMigrateAsync(CancellationToken)
  nameWithType: IDocumentMigrationAgent.HasDocumentsToMigrateAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.IDocumentMigrationAgent.HasDocumentsToMigrateAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nChecks if there are any documents in the current database stored using a non-default document-plugin, and which can be migrated.\n<p></p>\n<strong>Online Restricted:</strong> The DocumentMigration agent is not available in Online by default. Access must be requested specifically when app is registered. Intended for SuperOffice-internal apps.\n"
  syntax:
    content: Task<bool> HasDocumentsToMigrateAsync(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if there are documents available to migrate.
    content.vb: Function HasDocumentsToMigrateAsync(cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.Services.IDocumentMigrationAgent.HasDocumentsToMigrateAsync*
- uid: SuperOffice.CRM.Services.IDocumentMigrationAgent.GetNumberOfConfidentialDocumentsAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IDocumentMigrationAgent.GetNumberOfConfidentialDocumentsAsync(System.Threading.CancellationToken)
  id: GetNumberOfConfidentialDocumentsAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IDocumentMigrationAgent
  langs:
  - csharp
  - vb
  name: GetNumberOfConfidentialDocumentsAsync(CancellationToken)
  nameWithType: IDocumentMigrationAgent.GetNumberOfConfidentialDocumentsAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.IDocumentMigrationAgent.GetNumberOfConfidentialDocumentsAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets the total number of documents that is not visible to everyone\n<p></p>\n<strong>Online Restricted:</strong> The DocumentMigration agent is not available in Online by default. Access must be requested specifically when app is registered. Intended for SuperOffice-internal apps.\n"
  syntax:
    content: Task<int> GetNumberOfConfidentialDocumentsAsync(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: Number of confidential documents.
    content.vb: Function GetNumberOfConfidentialDocumentsAsync(cancellationToken As CancellationToken = Nothing) As Task(Of Integer)
  overload: SuperOffice.CRM.Services.IDocumentMigrationAgent.GetNumberOfConfidentialDocumentsAsync*
- uid: SuperOffice.CRM.Services.IDocumentMigrationAgent.GetForTemplatesAsync(System.Int32,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IDocumentMigrationAgent.GetForTemplatesAsync(System.Int32,System.Boolean,System.Threading.CancellationToken)
  id: GetForTemplatesAsync(System.Int32,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IDocumentMigrationAgent
  langs:
  - csharp
  - vb
  name: GetForTemplatesAsync(Int32, Boolean, CancellationToken)
  nameWithType: IDocumentMigrationAgent.GetForTemplatesAsync(Int32, Boolean, CancellationToken)
  fullName: SuperOffice.CRM.Services.IDocumentMigrationAgent.GetForTemplatesAsync(System.Int32, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets a migration summary for all templates stored in CRM.\n<p></p>\n<strong>Online Restricted:</strong> The DocumentMigration agent is not available in Online by default. Access must be requested specifically when app is registered. Intended for SuperOffice-internal apps.\n"
  syntax:
    content: Task<DocumentTemplateMigrationList> GetForTemplatesAsync(int targetDocumentPluginId, bool includeEmails, CancellationToken cancellationToken = null)
    parameters:
    - id: targetDocumentPluginId
      type: System.Int32
      description: The ID of the document-plugin to migrate to.
    - id: includeEmails
      type: System.Boolean
      description: True if templates to migrate should include emails.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.DocumentTemplateMigrationList}
      description: Never null.
    content.vb: Function GetForTemplatesAsync(targetDocumentPluginId As Integer, includeEmails As Boolean, cancellationToken As CancellationToken = Nothing) As Task(Of DocumentTemplateMigrationList)
  overload: SuperOffice.CRM.Services.IDocumentMigrationAgent.GetForTemplatesAsync*
- uid: SuperOffice.CRM.Services.IDocumentMigrationAgent.MigrateTemplateToNewDocPluginAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IDocumentMigrationAgent.MigrateTemplateToNewDocPluginAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  id: MigrateTemplateToNewDocPluginAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IDocumentMigrationAgent
  langs:
  - csharp
  - vb
  name: MigrateTemplateToNewDocPluginAsync(Int32, Int32, CancellationToken)
  nameWithType: IDocumentMigrationAgent.MigrateTemplateToNewDocPluginAsync(Int32, Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.IDocumentMigrationAgent.MigrateTemplateToNewDocPluginAsync(System.Int32, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nMigrates the template with the provided id to the specified document-plugin.\n<p></p>\n<strong>Online Restricted:</strong> The DocumentMigration agent is not available in Online by default. Access must be requested specifically when app is registered. Intended for SuperOffice-internal apps.\n"
  syntax:
    content: Task MigrateTemplateToNewDocPluginAsync(int documentTemplateId, int targetDocumentPluginId, CancellationToken cancellationToken = null)
    parameters:
    - id: documentTemplateId
      type: System.Int32
      description: The ID of the document-template to migrate.
    - id: targetDocumentPluginId
      type: System.Int32
      description: The ID of the document-plugin to migrate to.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Function MigrateTemplateToNewDocPluginAsync(documentTemplateId As Integer, targetDocumentPluginId As Integer, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IDocumentMigrationAgent.MigrateTemplateToNewDocPluginAsync*
references:
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
- uid: SuperOffice.CRM.Services.IDocumentMigrationAgent.CreateDefaultDocumentMigrationItemListAsync*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentMigrationAgent.CreateDefaultDocumentMigrationItemListAsync
  isExternal: true
  name: CreateDefaultDocumentMigrationItemListAsync
  nameWithType: IDocumentMigrationAgent.CreateDefaultDocumentMigrationItemListAsync
  fullName: SuperOffice.CRM.Services.IDocumentMigrationAgent.CreateDefaultDocumentMigrationItemListAsync
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.DocumentMigrationItemList}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Services.DocumentMigrationItemList}'
  definition: System.Threading.Tasks.Task`1
  name: Task<DocumentMigrationItemList>
  nameWithType: Task<DocumentMigrationItemList>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.DocumentMigrationItemList>
  nameWithType.vb: Task(Of DocumentMigrationItemList)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.DocumentMigrationItemList)
  name.vb: Task(Of DocumentMigrationItemList)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Services.DocumentMigrationItemList
    name: DocumentMigrationItemList
    nameWithType: DocumentMigrationItemList
    fullName: SuperOffice.CRM.Services.DocumentMigrationItemList
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Services.DocumentMigrationItemList
    name: DocumentMigrationItemList
    nameWithType: DocumentMigrationItemList
    fullName: SuperOffice.CRM.Services.DocumentMigrationItemList
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.IDocumentMigrationAgent.CreateDefaultDocumentTemplateMigrationListAsync*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentMigrationAgent.CreateDefaultDocumentTemplateMigrationListAsync
  isExternal: true
  name: CreateDefaultDocumentTemplateMigrationListAsync
  nameWithType: IDocumentMigrationAgent.CreateDefaultDocumentTemplateMigrationListAsync
  fullName: SuperOffice.CRM.Services.IDocumentMigrationAgent.CreateDefaultDocumentTemplateMigrationListAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.DocumentTemplateMigrationList}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Services.DocumentTemplateMigrationList}'
  definition: System.Threading.Tasks.Task`1
  name: Task<DocumentTemplateMigrationList>
  nameWithType: Task<DocumentTemplateMigrationList>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.DocumentTemplateMigrationList>
  nameWithType.vb: Task(Of DocumentTemplateMigrationList)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.DocumentTemplateMigrationList)
  name.vb: Task(Of DocumentTemplateMigrationList)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Services.DocumentTemplateMigrationList
    name: DocumentTemplateMigrationList
    nameWithType: DocumentTemplateMigrationList
    fullName: SuperOffice.CRM.Services.DocumentTemplateMigrationList
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Services.DocumentTemplateMigrationList
    name: DocumentTemplateMigrationList
    nameWithType: DocumentTemplateMigrationList
    fullName: SuperOffice.CRM.Services.DocumentTemplateMigrationList
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.IDocumentMigrationAgent.GetForAllDocumentsAsync*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentMigrationAgent.GetForAllDocumentsAsync
  isExternal: true
  name: GetForAllDocumentsAsync
  nameWithType: IDocumentMigrationAgent.GetForAllDocumentsAsync
  fullName: SuperOffice.CRM.Services.IDocumentMigrationAgent.GetForAllDocumentsAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Services.IDocumentMigrationAgent.GetForDateRangeAsync*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentMigrationAgent.GetForDateRangeAsync
  isExternal: true
  name: GetForDateRangeAsync
  nameWithType: IDocumentMigrationAgent.GetForDateRangeAsync
  fullName: SuperOffice.CRM.Services.IDocumentMigrationAgent.GetForDateRangeAsync
- uid: System.DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: SuperOffice.CRM.Services.IDocumentMigrationAgent.GetForSelectionAsync*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentMigrationAgent.GetForSelectionAsync
  isExternal: true
  name: GetForSelectionAsync
  nameWithType: IDocumentMigrationAgent.GetForSelectionAsync
  fullName: SuperOffice.CRM.Services.IDocumentMigrationAgent.GetForSelectionAsync
- uid: SuperOffice.CRM.Services.IDocumentMigrationAgent.MigrateDocumentToNewDocPluginAsync*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentMigrationAgent.MigrateDocumentToNewDocPluginAsync
  isExternal: true
  name: MigrateDocumentToNewDocPluginAsync
  nameWithType: IDocumentMigrationAgent.MigrateDocumentToNewDocPluginAsync
  fullName: SuperOffice.CRM.Services.IDocumentMigrationAgent.MigrateDocumentToNewDocPluginAsync
- uid: System.Threading.Tasks.Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: SuperOffice.CRM.Services.IDocumentMigrationAgent.HasDocumentsToMigrateAsync*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentMigrationAgent.HasDocumentsToMigrateAsync
  isExternal: true
  name: HasDocumentsToMigrateAsync
  nameWithType: IDocumentMigrationAgent.HasDocumentsToMigrateAsync
  fullName: SuperOffice.CRM.Services.IDocumentMigrationAgent.HasDocumentsToMigrateAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: '!:System.Threading.Tasks.Task{System.Boolean}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.IDocumentMigrationAgent.GetNumberOfConfidentialDocumentsAsync*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentMigrationAgent.GetNumberOfConfidentialDocumentsAsync
  isExternal: true
  name: GetNumberOfConfidentialDocumentsAsync
  nameWithType: IDocumentMigrationAgent.GetNumberOfConfidentialDocumentsAsync
  fullName: SuperOffice.CRM.Services.IDocumentMigrationAgent.GetNumberOfConfidentialDocumentsAsync
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: '!:System.Threading.Tasks.Task{System.Int32}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  nameWithType.vb: Task(Of Int32)
  fullName.vb: System.Threading.Tasks.Task(Of System.Int32)
  name.vb: Task(Of Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.IDocumentMigrationAgent.GetForTemplatesAsync*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentMigrationAgent.GetForTemplatesAsync
  isExternal: true
  name: GetForTemplatesAsync
  nameWithType: IDocumentMigrationAgent.GetForTemplatesAsync
  fullName: SuperOffice.CRM.Services.IDocumentMigrationAgent.GetForTemplatesAsync
- uid: SuperOffice.CRM.Services.IDocumentMigrationAgent.MigrateTemplateToNewDocPluginAsync*
  commentId: Overload:SuperOffice.CRM.Services.IDocumentMigrationAgent.MigrateTemplateToNewDocPluginAsync
  isExternal: true
  name: MigrateTemplateToNewDocPluginAsync
  nameWithType: IDocumentMigrationAgent.MigrateTemplateToNewDocPluginAsync
  fullName: SuperOffice.CRM.Services.IDocumentMigrationAgent.MigrateTemplateToNewDocPluginAsync
