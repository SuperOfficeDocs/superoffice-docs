### YamlMime:ManagedReference
items:
- uid: SuperOffice.Messaging.IMessagingWithConfigPlugin
  commentId: T:SuperOffice.Messaging.IMessagingWithConfigPlugin
  id: IMessagingWithConfigPlugin
  parent: SuperOffice.Messaging
  children:
  - SuperOffice.Messaging.IMessagingWithConfigPlugin.SendMessageWithConfig(SuperOffice.CRM.Services.OutgoingMessage,System.Collections.Generic.Dictionary{System.String,System.String})
  langs:
  - csharp
  - vb
  name: IMessagingWithConfigPlugin
  nameWithType: IMessagingWithConfigPlugin
  fullName: SuperOffice.Messaging.IMessagingWithConfigPlugin
  type: Interface
  source:
    path: SuperOffice.Messaging
    isExternal: true
  assemblies:
  - SuperOffice.Messaging
  namespace: SuperOffice.Messaging
  syntax:
    content: 'public interface IMessagingWithConfigPlugin : IPlugin'
    content.vb: >-
      Public Interface IMessagingWithConfigPlugin

          Inherits IPlugin
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.Messaging.IMessagingWithConfigPlugin.SendMessageWithConfig(SuperOffice.CRM.Services.OutgoingMessage,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:SuperOffice.Messaging.IMessagingWithConfigPlugin.SendMessageWithConfig(SuperOffice.CRM.Services.OutgoingMessage,System.Collections.Generic.Dictionary{System.String,System.String})
  id: SendMessageWithConfig(SuperOffice.CRM.Services.OutgoingMessage,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: SuperOffice.Messaging.IMessagingWithConfigPlugin
  langs:
  - csharp
  - vb
  name: SendMessageWithConfig(OutgoingMessage, Dictionary<String, String>)
  nameWithType: IMessagingWithConfigPlugin.SendMessageWithConfig(OutgoingMessage, Dictionary<String, String>)
  fullName: SuperOffice.Messaging.IMessagingWithConfigPlugin.SendMessageWithConfig(SuperOffice.CRM.Services.OutgoingMessage, System.Collections.Generic.Dictionary<System.String, System.String>)
  type: Method
  source:
    path: SuperOffice.Messaging
    isExternal: true
  assemblies:
  - SuperOffice.Messaging
  namespace: SuperOffice.Messaging
  syntax:
    content: MessagingManager.MessageReplyStatus SendMessageWithConfig(OutgoingMessage message, Dictionary<string, string> config)
    parameters:
    - id: message
      type: SuperOffice.CRM.Services.OutgoingMessage
    - id: config
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    return:
      type: SuperOffice.Messaging.MessagingManager.MessageReplyStatus
    content.vb: Function SendMessageWithConfig(message As OutgoingMessage, config As Dictionary(Of String, String)) As MessagingManager.MessageReplyStatus
  overload: SuperOffice.Messaging.IMessagingWithConfigPlugin.SendMessageWithConfig*
  nameWithType.vb: IMessagingWithConfigPlugin.SendMessageWithConfig(OutgoingMessage, Dictionary(Of String, String))
  fullName.vb: SuperOffice.Messaging.IMessagingWithConfigPlugin.SendMessageWithConfig(SuperOffice.CRM.Services.OutgoingMessage, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: SendMessageWithConfig(OutgoingMessage, Dictionary(Of String, String))
references:
- uid: SuperOffice.Messaging
  commentId: N:SuperOffice.Messaging
  isExternal: true
  name: SuperOffice.Messaging
  nameWithType: SuperOffice.Messaging
  fullName: SuperOffice.Messaging
- uid: SuperOffice.Messaging.IMessagingWithConfigPlugin.SendMessageWithConfig*
  commentId: Overload:SuperOffice.Messaging.IMessagingWithConfigPlugin.SendMessageWithConfig
  isExternal: true
  name: SendMessageWithConfig
  nameWithType: IMessagingWithConfigPlugin.SendMessageWithConfig
  fullName: SuperOffice.Messaging.IMessagingWithConfigPlugin.SendMessageWithConfig
- uid: SuperOffice.CRM.Services.OutgoingMessage
  isExternal: true
  name: OutgoingMessage
  nameWithType: OutgoingMessage
  fullName: SuperOffice.CRM.Services.OutgoingMessage
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Messaging.MessagingManager.MessageReplyStatus
  commentId: T:SuperOffice.Messaging.MessagingManager.MessageReplyStatus
  parent: SuperOffice.Messaging
  isExternal: true
  name: MessagingManager.MessageReplyStatus
  nameWithType: MessagingManager.MessageReplyStatus
  fullName: SuperOffice.Messaging.MessagingManager.MessageReplyStatus
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
