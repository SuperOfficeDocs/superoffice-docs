### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Services.TicketAgent
  commentId: T:SuperOffice.CRM.Services.TicketAgent
  id: TicketAgent
  parent: SuperOffice.CRM.Services
  children:
  - SuperOffice.CRM.Services.TicketAgent.#ctor
  - SuperOffice.CRM.Services.TicketAgent.AddAttachments(System.Int32,System.Int32[])
  - SuperOffice.CRM.Services.TicketAgent.BatchForward(System.Int32[],System.String[],System.String[],System.String[],System.String,System.Boolean)
  - SuperOffice.CRM.Services.TicketAgent.BatchReply(SuperOffice.CRM.Services.TicketBatchReplyData)
  - SuperOffice.CRM.Services.TicketAgent.CalculateMessageRecipients(System.Int32,SuperOffice.Data.MessageActionType,System.Int32)
  - SuperOffice.CRM.Services.TicketAgent.ClearNotify(System.Int32[])
  - SuperOffice.CRM.Services.TicketAgent.CopyFromCRMDocument(System.Int32)
  - SuperOffice.CRM.Services.TicketAgent.CopyToTempFile(System.String,System.Int32)
  - SuperOffice.CRM.Services.TicketAgent.CreateDefaultAttachmentEntity
  - SuperOffice.CRM.Services.TicketAgent.CreateDefaultForTicketType(System.Int32)
  - SuperOffice.CRM.Services.TicketAgent.CreateDefaultTicketEntity
  - SuperOffice.CRM.Services.TicketAgent.CreateDefaultTicketMessageEntity
  - SuperOffice.CRM.Services.TicketAgent.DeleteMessageHeaders(System.Int32[])
  - SuperOffice.CRM.Services.TicketAgent.DeleteTicketEntity(System.Int32)
  - SuperOffice.CRM.Services.TicketAgent.DeleteTicketMessageEntity(System.Int32)
  - SuperOffice.CRM.Services.TicketAgent.DoEscalating(System.Int32,SuperOffice.Data.TicketPriorityEscalateAction)
  - SuperOffice.CRM.Services.TicketAgent.GetAttachmentEntity(System.Int32)
  - SuperOffice.CRM.Services.TicketAgent.GetAttachmentInfo(System.Int32)
  - SuperOffice.CRM.Services.TicketAgent.GetAttachmentInfoNonInline(System.Int32)
  - SuperOffice.CRM.Services.TicketAgent.GetAttachmentPreview(System.Int32)
  - SuperOffice.CRM.Services.TicketAgent.GetAttachmentStream(System.Int32)
  - SuperOffice.CRM.Services.TicketAgent.GetDefaultMessageContent(System.Int32,SuperOffice.Data.MessageActionType,System.Int32)
  - SuperOffice.CRM.Services.TicketAgent.GetDefaultMessageContentFull(System.Int32,SuperOffice.Data.MessageActionType,System.Int32,System.Int32)
  - SuperOffice.CRM.Services.TicketAgent.GetDefaultMessageContentWithOptions(System.Int32,SuperOffice.Data.MessageActionType,System.Int32,System.Int32,System.Boolean)
  - SuperOffice.CRM.Services.TicketAgent.GetForRmUi(System.Int32)
  - SuperOffice.CRM.Services.TicketAgent.GetNextInQueue
  - SuperOffice.CRM.Services.TicketAgent.GetPreviewAttachmentStream(System.Int32)
  - SuperOffice.CRM.Services.TicketAgent.GetRfcAttachmentStream(System.Int32,System.Int32)
  - SuperOffice.CRM.Services.TicketAgent.GetTicket(System.Int32)
  - SuperOffice.CRM.Services.TicketAgent.GetTicketAttachments(System.Int32)
  - SuperOffice.CRM.Services.TicketAgent.GetTicketEntity(System.Int32)
  - SuperOffice.CRM.Services.TicketAgent.GetTicketMessage(System.Int32)
  - SuperOffice.CRM.Services.TicketAgent.GetTicketMessageEntities(System.Int32,System.Int32[])
  - SuperOffice.CRM.Services.TicketAgent.GetTicketMessageEntity(System.Int32)
  - SuperOffice.CRM.Services.TicketAgent.GetTicketMessageWithEmbeddedData(System.Int32,SuperOffice.Data.ImageEmbedType)
  - SuperOffice.CRM.Services.TicketAgent.GetTicketMessageWithOptions(System.Int32,System.Boolean)
  - SuperOffice.CRM.Services.TicketAgent.GetTickets(System.Int32[])
  - SuperOffice.CRM.Services.TicketAgent.GetTicketSummaries(System.Int32[])
  - SuperOffice.CRM.Services.TicketAgent.Html2Text(System.String)
  - SuperOffice.CRM.Services.TicketAgent.MergeTickets(SuperOffice.CRM.Services.TicketEntity,System.Int32[])
  - SuperOffice.CRM.Services.TicketAgent.NotifyNewTicket(System.Int32)
  - SuperOffice.CRM.Services.TicketAgent.NotifyNewTicketMessage(System.Int32)
  - SuperOffice.CRM.Services.TicketAgent.ProcessTicketWhenRead(System.Int32)
  - SuperOffice.CRM.Services.TicketAgent.RemoveMessageAttachments(System.Int32,System.Int32[])
  - SuperOffice.CRM.Services.TicketAgent.ResolveTicketId(System.Int32)
  - SuperOffice.CRM.Services.TicketAgent.SanitizeMailContent(System.String)
  - SuperOffice.CRM.Services.TicketAgent.SanitizeMailContents(System.String[])
  - SuperOffice.CRM.Services.TicketAgent.SanitizeMailContentWithOptions(System.String,SuperOffice.Data.HtmlSanitizerOptions)
  - SuperOffice.CRM.Services.TicketAgent.SaveAttachmentEntity(SuperOffice.CRM.Services.AttachmentEntity)
  - SuperOffice.CRM.Services.TicketAgent.SaveTicketEntity(SuperOffice.CRM.Services.TicketEntity)
  - SuperOffice.CRM.Services.TicketAgent.SaveTicketEntityWithNotify(SuperOffice.CRM.Services.TicketEntity,System.Boolean)
  - SuperOffice.CRM.Services.TicketAgent.SaveTicketMessageEntity(SuperOffice.CRM.Services.TicketMessageEntity)
  - SuperOffice.CRM.Services.TicketAgent.SaveTicketMessageEntityWithNotify(SuperOffice.CRM.Services.TicketMessageEntity,System.Boolean)
  - SuperOffice.CRM.Services.TicketAgent.SaveTicketMessageEntityWithOptions(SuperOffice.CRM.Services.TicketMessageEntity,System.Boolean,System.Int32[],System.Boolean)
  - SuperOffice.CRM.Services.TicketAgent.SendTicketMessage(System.Int32,System.String[],System.String[],System.String[],System.String,System.Int32,System.String)
  - SuperOffice.CRM.Services.TicketAgent.SendTicketMessageSms(System.Int32,System.Int32,System.String[])
  - SuperOffice.CRM.Services.TicketAgent.SetDeletedStatusByIds(System.Int32[])
  - SuperOffice.CRM.Services.TicketAgent.SetDeletedStatusByProvider(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  - SuperOffice.CRM.Services.TicketAgent.SetTicketMessageImportant(System.Int32,System.Boolean)
  - SuperOffice.CRM.Services.TicketAgent.SetTicketReadByOwner(System.Int32,SuperOffice.Data.TicketReadStatus,System.Boolean)
  - SuperOffice.CRM.Services.TicketAgent.SplitTicket(System.Int32,System.Int32,System.DateTime,System.Int32[],SuperOffice.CRM.Services.TicketEntity)
  - SuperOffice.CRM.Services.TicketAgent.SplitTicketMessage(SuperOffice.CRM.Services.TicketMessageEntity,SuperOffice.CRM.Services.TicketEntity,SuperOffice.CRM.Services.TicketMessageEntity,System.Int32[])
  - SuperOffice.CRM.Services.TicketAgent.UndeleteByIds(System.Int32[])
  - SuperOffice.CRM.Services.TicketAgent.UpdateTicketsReadStatus(System.Int32[],SuperOffice.Data.TicketReadStatus)
  - SuperOffice.CRM.Services.TicketAgent.UpdateTicketsReadStatusByProvider(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],SuperOffice.Data.TicketReadStatus)
  - SuperOffice.CRM.Services.TicketAgent.UploadAttachment(System.Int32,System.IO.Stream)
  - SuperOffice.CRM.Services.TicketAgent.ValidateAttachments(System.Int32[])
  langs:
  - csharp
  - vb
  name: TicketAgent
  nameWithType: TicketAgent
  fullName: SuperOffice.CRM.Services.TicketAgent
  type: Class
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nFacade for the Ticket Agent\nAgent used for Ticket functions\n"
  example:
  - "\n<pre><code>  using SuperOffice;\n  using SuperOffice.CRM.Services;\n\n  using (SoSession mySession = SoSession.Authenticate(&quot;user&quot;, &quot;pass&quot;))\n  {\n     using (TicketAgent agent = new TicketAgent())\n     {\n        // call methods on agent here...\n     }\n  }</code></pre>\n"
  syntax:
    content: 'public class TicketAgent : AgentBase<ITicketAgent>, IDisposable, ITicketAgent, IAgent'
    content.vb: >-
      Public Class TicketAgent
          Inherits AgentBase(Of ITicketAgent)
          Implements IDisposable, ITicketAgent, IAgent
  inheritance:
  - System.Object
  - SuperOffice.CRM.Services.AgentBase{SuperOffice.CRM.Services.ITicketAgent}
  implements:
  - System.IDisposable
  - SuperOffice.CRM.Services.ITicketAgent
  - SuperOffice.CRM.Services.IAgent
  inheritedMembers:
  - SuperOffice.CRM.Services.AgentBase{SuperOffice.CRM.Services.ITicketAgent}.Dispose
  - SuperOffice.CRM.Services.AgentBase{SuperOffice.CRM.Services.ITicketAgent}.InnerAgent
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Services.TicketAgent.CreateDefaultAttachmentEntity
  commentId: M:SuperOffice.CRM.Services.TicketAgent.CreateDefaultAttachmentEntity
  id: CreateDefaultAttachmentEntity
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultAttachmentEntity()
  nameWithType: TicketAgent.CreateDefaultAttachmentEntity()
  fullName: SuperOffice.CRM.Services.TicketAgent.CreateDefaultAttachmentEntity()
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nLoading default values into a new AttachmentEntity.\nNetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: public AttachmentEntity CreateDefaultAttachmentEntity()
    return:
      type: SuperOffice.CRM.Services.AttachmentEntity
      description: New AttachmentEntity with default values
    content.vb: Public Function CreateDefaultAttachmentEntity As AttachmentEntity
  overload: SuperOffice.CRM.Services.TicketAgent.CreateDefaultAttachmentEntity*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.CreateDefaultAttachmentEntity
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.TicketAgent.SaveAttachmentEntity(SuperOffice.CRM.Services.AttachmentEntity)
  commentId: M:SuperOffice.CRM.Services.TicketAgent.SaveAttachmentEntity(SuperOffice.CRM.Services.AttachmentEntity)
  id: SaveAttachmentEntity(SuperOffice.CRM.Services.AttachmentEntity)
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: SaveAttachmentEntity(AttachmentEntity)
  nameWithType: TicketAgent.SaveAttachmentEntity(AttachmentEntity)
  fullName: SuperOffice.CRM.Services.TicketAgent.SaveAttachmentEntity(SuperOffice.CRM.Services.AttachmentEntity)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nUpdates the existing AttachmentEntity or creates a new AttachmentEntity if the id parameter is empty\n"
  syntax:
    content: public AttachmentEntity SaveAttachmentEntity(AttachmentEntity attachmentEntity)
    parameters:
    - id: attachmentEntity
      type: SuperOffice.CRM.Services.AttachmentEntity
      description: The AttachmentEntity that is saved.
    return:
      type: SuperOffice.CRM.Services.AttachmentEntity
      description: New or updated AttachmentEntity
    content.vb: Public Function SaveAttachmentEntity(attachmentEntity As AttachmentEntity) As AttachmentEntity
  overload: SuperOffice.CRM.Services.TicketAgent.SaveAttachmentEntity*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.SaveAttachmentEntity(SuperOffice.CRM.Services.AttachmentEntity)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.TicketAgent.CreateDefaultTicketEntity
  commentId: M:SuperOffice.CRM.Services.TicketAgent.CreateDefaultTicketEntity
  id: CreateDefaultTicketEntity
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultTicketEntity()
  nameWithType: TicketAgent.CreateDefaultTicketEntity()
  fullName: SuperOffice.CRM.Services.TicketAgent.CreateDefaultTicketEntity()
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nLoading default values into a new TicketEntity.\nNetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: public TicketEntity CreateDefaultTicketEntity()
    return:
      type: SuperOffice.CRM.Services.TicketEntity
      description: New TicketEntity with default values
    content.vb: Public Function CreateDefaultTicketEntity As TicketEntity
  overload: SuperOffice.CRM.Services.TicketAgent.CreateDefaultTicketEntity*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.CreateDefaultTicketEntity
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.TicketAgent.SaveTicketEntity(SuperOffice.CRM.Services.TicketEntity)
  commentId: M:SuperOffice.CRM.Services.TicketAgent.SaveTicketEntity(SuperOffice.CRM.Services.TicketEntity)
  id: SaveTicketEntity(SuperOffice.CRM.Services.TicketEntity)
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: SaveTicketEntity(TicketEntity)
  nameWithType: TicketAgent.SaveTicketEntity(TicketEntity)
  fullName: SuperOffice.CRM.Services.TicketAgent.SaveTicketEntity(SuperOffice.CRM.Services.TicketEntity)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nUpdates the existing TicketEntity or creates a new TicketEntity if the id parameter is empty\n"
  syntax:
    content: public TicketEntity SaveTicketEntity(TicketEntity ticketEntity)
    parameters:
    - id: ticketEntity
      type: SuperOffice.CRM.Services.TicketEntity
      description: The TicketEntity that is saved.
    return:
      type: SuperOffice.CRM.Services.TicketEntity
      description: New or updated TicketEntity
    content.vb: Public Function SaveTicketEntity(ticketEntity As TicketEntity) As TicketEntity
  overload: SuperOffice.CRM.Services.TicketAgent.SaveTicketEntity*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.SaveTicketEntity(SuperOffice.CRM.Services.TicketEntity)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.TicketAgent.CreateDefaultTicketMessageEntity
  commentId: M:SuperOffice.CRM.Services.TicketAgent.CreateDefaultTicketMessageEntity
  id: CreateDefaultTicketMessageEntity
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultTicketMessageEntity()
  nameWithType: TicketAgent.CreateDefaultTicketMessageEntity()
  fullName: SuperOffice.CRM.Services.TicketAgent.CreateDefaultTicketMessageEntity()
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nLoading default values into a new TicketMessageEntity.\nNetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: public TicketMessageEntity CreateDefaultTicketMessageEntity()
    return:
      type: SuperOffice.CRM.Services.TicketMessageEntity
      description: New TicketMessageEntity with default values
    content.vb: Public Function CreateDefaultTicketMessageEntity As TicketMessageEntity
  overload: SuperOffice.CRM.Services.TicketAgent.CreateDefaultTicketMessageEntity*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.CreateDefaultTicketMessageEntity
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.TicketAgent.SaveTicketMessageEntity(SuperOffice.CRM.Services.TicketMessageEntity)
  commentId: M:SuperOffice.CRM.Services.TicketAgent.SaveTicketMessageEntity(SuperOffice.CRM.Services.TicketMessageEntity)
  id: SaveTicketMessageEntity(SuperOffice.CRM.Services.TicketMessageEntity)
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: SaveTicketMessageEntity(TicketMessageEntity)
  nameWithType: TicketAgent.SaveTicketMessageEntity(TicketMessageEntity)
  fullName: SuperOffice.CRM.Services.TicketAgent.SaveTicketMessageEntity(SuperOffice.CRM.Services.TicketMessageEntity)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nUpdates the existing TicketMessageEntity or creates a new TicketMessageEntity if the id parameter is empty\n"
  syntax:
    content: public TicketMessageEntity SaveTicketMessageEntity(TicketMessageEntity ticketMessageEntity)
    parameters:
    - id: ticketMessageEntity
      type: SuperOffice.CRM.Services.TicketMessageEntity
      description: The TicketMessageEntity that is saved.
    return:
      type: SuperOffice.CRM.Services.TicketMessageEntity
      description: New or updated TicketMessageEntity
    content.vb: Public Function SaveTicketMessageEntity(ticketMessageEntity As TicketMessageEntity) As TicketMessageEntity
  overload: SuperOffice.CRM.Services.TicketAgent.SaveTicketMessageEntity*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.SaveTicketMessageEntity(SuperOffice.CRM.Services.TicketMessageEntity)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.TicketAgent.GetAttachmentEntity(System.Int32)
  commentId: M:SuperOffice.CRM.Services.TicketAgent.GetAttachmentEntity(System.Int32)
  id: GetAttachmentEntity(System.Int32)
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: GetAttachmentEntity(Int32)
  nameWithType: TicketAgent.GetAttachmentEntity(Int32)
  fullName: SuperOffice.CRM.Services.TicketAgent.GetAttachmentEntity(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets a AttachmentEntity object.                        \n"
  syntax:
    content: public AttachmentEntity GetAttachmentEntity(int attachmentEntityId)
    parameters:
    - id: attachmentEntityId
      type: System.Int32
      description: The identifier of the AttachmentEntity object
    return:
      type: SuperOffice.CRM.Services.AttachmentEntity
      description: AttachmentEntity
    content.vb: Public Function GetAttachmentEntity(attachmentEntityId As Integer) As AttachmentEntity
  overload: SuperOffice.CRM.Services.TicketAgent.GetAttachmentEntity*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.GetAttachmentEntity(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.TicketAgent.CopyFromCRMDocument(System.Int32)
  commentId: M:SuperOffice.CRM.Services.TicketAgent.CopyFromCRMDocument(System.Int32)
  id: CopyFromCRMDocument(System.Int32)
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: CopyFromCRMDocument(Int32)
  nameWithType: TicketAgent.CopyFromCRMDocument(Int32)
  fullName: SuperOffice.CRM.Services.TicketAgent.CopyFromCRMDocument(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCopy CRM document to an attachment\n"
  syntax:
    content: public AttachmentEntity CopyFromCRMDocument(int documentId)
    parameters:
    - id: documentId
      type: System.Int32
      description: The id of the document to copy to an attachment
    return:
      type: SuperOffice.CRM.Services.AttachmentEntity
    content.vb: Public Function CopyFromCRMDocument(documentId As Integer) As AttachmentEntity
  overload: SuperOffice.CRM.Services.TicketAgent.CopyFromCRMDocument*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.CopyFromCRMDocument(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.TicketAgent.CopyToTempFile(System.String,System.Int32)
  commentId: M:SuperOffice.CRM.Services.TicketAgent.CopyToTempFile(System.String,System.Int32)
  id: CopyToTempFile(System.String,System.Int32)
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: CopyToTempFile(String, Int32)
  nameWithType: TicketAgent.CopyToTempFile(String, Int32)
  fullName: SuperOffice.CRM.Services.TicketAgent.CopyToTempFile(System.String, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCopy ticket attachment to temporary file. Needed for existing document dialog compatibility\n"
  syntax:
    content: public string CopyToTempFile(string filename, int attachmentId)
    parameters:
    - id: filename
      type: System.String
      description: Preferred filename
    - id: attachmentId
      type: System.Int32
      description: The id of the attachment to copy
    return:
      type: System.String
      description: Temporary document filename
    content.vb: Public Function CopyToTempFile(filename As String, attachmentId As Integer) As String
  overload: SuperOffice.CRM.Services.TicketAgent.CopyToTempFile*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.CopyToTempFile(System.String,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.TicketAgent.UploadAttachment(System.Int32,System.IO.Stream)
  commentId: M:SuperOffice.CRM.Services.TicketAgent.UploadAttachment(System.Int32,System.IO.Stream)
  id: UploadAttachment(System.Int32,System.IO.Stream)
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: UploadAttachment(Int32, Stream)
  nameWithType: TicketAgent.UploadAttachment(Int32, Stream)
  fullName: SuperOffice.CRM.Services.TicketAgent.UploadAttachment(System.Int32, System.IO.Stream)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nUpload the content for an attachment\n"
  syntax:
    content: public void UploadAttachment(int attachmentId, Stream content)
    parameters:
    - id: attachmentId
      type: System.Int32
      description: The id of the attachment row, for which to attach the upload data
    - id: content
      type: System.IO.Stream
      description: A stream to the content to be uploaded
    content.vb: Public Sub UploadAttachment(attachmentId As Integer, content As Stream)
  overload: SuperOffice.CRM.Services.TicketAgent.UploadAttachment*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.UploadAttachment(System.Int32,System.IO.Stream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.TicketAgent.GetAttachmentStream(System.Int32)
  commentId: M:SuperOffice.CRM.Services.TicketAgent.GetAttachmentStream(System.Int32)
  id: GetAttachmentStream(System.Int32)
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: GetAttachmentStream(Int32)
  nameWithType: TicketAgent.GetAttachmentStream(Int32)
  fullName: SuperOffice.CRM.Services.TicketAgent.GetAttachmentStream(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet the content of an attachment\n"
  syntax:
    content: public Stream GetAttachmentStream(int attachmentId)
    parameters:
    - id: attachmentId
      type: System.Int32
      description: The id of the attachment to retrieve
    return:
      type: System.IO.Stream
      description: A stream to the attachment content
    content.vb: Public Function GetAttachmentStream(attachmentId As Integer) As Stream
  overload: SuperOffice.CRM.Services.TicketAgent.GetAttachmentStream*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.GetAttachmentStream(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.TicketAgent.GetTicket(System.Int32)
  commentId: M:SuperOffice.CRM.Services.TicketAgent.GetTicket(System.Int32)
  id: GetTicket(System.Int32)
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: GetTicket(Int32)
  nameWithType: TicketAgent.GetTicket(Int32)
  fullName: SuperOffice.CRM.Services.TicketAgent.GetTicket(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets a Ticket object.                        \n"
  syntax:
    content: public Ticket GetTicket(int ticketId)
    parameters:
    - id: ticketId
      type: System.Int32
      description: The identifier of the Ticket object
    return:
      type: SuperOffice.CRM.Services.Ticket
      description: Ticket
    content.vb: Public Function GetTicket(ticketId As Integer) As Ticket
  overload: SuperOffice.CRM.Services.TicketAgent.GetTicket*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.GetTicket(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.TicketAgent.GetTickets(System.Int32[])
  commentId: M:SuperOffice.CRM.Services.TicketAgent.GetTickets(System.Int32[])
  id: GetTickets(System.Int32[])
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: GetTickets(Int32[])
  nameWithType: TicketAgent.GetTickets(Int32[])
  fullName: SuperOffice.CRM.Services.TicketAgent.GetTickets(System.Int32[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet multiple tickets\n"
  syntax:
    content: public Ticket[] GetTickets(int[] ticketIds)
    parameters:
    - id: ticketIds
      type: System.Int32[]
      description: The ids of tickets to get
    return:
      type: SuperOffice.CRM.Services.Ticket[]
      description: Returns array of tickets in same order as input ids
    content.vb: Public Function GetTickets(ticketIds As Integer()) As Ticket()
  overload: SuperOffice.CRM.Services.TicketAgent.GetTickets*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.GetTickets(System.Int32[])
  nameWithType.vb: TicketAgent.GetTickets(Int32())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.Services.TicketAgent.GetTickets(System.Int32())
  name.vb: GetTickets(Int32())
- uid: SuperOffice.CRM.Services.TicketAgent.GetTicketEntity(System.Int32)
  commentId: M:SuperOffice.CRM.Services.TicketAgent.GetTicketEntity(System.Int32)
  id: GetTicketEntity(System.Int32)
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: GetTicketEntity(Int32)
  nameWithType: TicketAgent.GetTicketEntity(Int32)
  fullName: SuperOffice.CRM.Services.TicketAgent.GetTicketEntity(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets a TicketEntity object.                        \n"
  syntax:
    content: public TicketEntity GetTicketEntity(int ticketEntityId)
    parameters:
    - id: ticketEntityId
      type: System.Int32
      description: The identifier of the TicketEntity object
    return:
      type: SuperOffice.CRM.Services.TicketEntity
      description: TicketEntity
    content.vb: Public Function GetTicketEntity(ticketEntityId As Integer) As TicketEntity
  overload: SuperOffice.CRM.Services.TicketAgent.GetTicketEntity*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.GetTicketEntity(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.TicketAgent.GetForRmUi(System.Int32)
  commentId: M:SuperOffice.CRM.Services.TicketAgent.GetForRmUi(System.Int32)
  id: GetForRmUi(System.Int32)
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: GetForRmUi(Int32)
  nameWithType: TicketAgent.GetForRmUi(Int32)
  fullName: SuperOffice.CRM.Services.TicketAgent.GetForRmUi(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet a ticket entity, adapted to the specific needs of the Request Management UI. WARNING: This endpoint is not guaranteed to be stable/compatible between versions\n"
  syntax:
    content: public TicketEntity GetForRmUi(int ticketId)
    parameters:
    - id: ticketId
      type: System.Int32
      description: Primary key of ticket to fetch
    return:
      type: SuperOffice.CRM.Services.TicketEntity
      description: The ticket entity. Information is filtered/adapted to the current needs of the UI
    content.vb: Public Function GetForRmUi(ticketId As Integer) As TicketEntity
  overload: SuperOffice.CRM.Services.TicketAgent.GetForRmUi*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.GetForRmUi(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.TicketAgent.DeleteTicketEntity(System.Int32)
  commentId: M:SuperOffice.CRM.Services.TicketAgent.DeleteTicketEntity(System.Int32)
  id: DeleteTicketEntity(System.Int32)
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: DeleteTicketEntity(Int32)
  nameWithType: TicketAgent.DeleteTicketEntity(Int32)
  fullName: SuperOffice.CRM.Services.TicketAgent.DeleteTicketEntity(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nDelete a ticket\n"
  syntax:
    content: public void DeleteTicketEntity(int ticketEntityId)
    parameters:
    - id: ticketEntityId
      type: System.Int32
      description: The ticket to delete
    content.vb: Public Sub DeleteTicketEntity(ticketEntityId As Integer)
  overload: SuperOffice.CRM.Services.TicketAgent.DeleteTicketEntity*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.DeleteTicketEntity(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.TicketAgent.NotifyNewTicket(System.Int32)
  commentId: M:SuperOffice.CRM.Services.TicketAgent.NotifyNewTicket(System.Int32)
  id: NotifyNewTicket(System.Int32)
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: NotifyNewTicket(Int32)
  nameWithType: TicketAgent.NotifyNewTicket(Int32)
  fullName: SuperOffice.CRM.Services.TicketAgent.NotifyNewTicket(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nNotify user agents about the creation of a new ticket\n"
  syntax:
    content: public void NotifyNewTicket(int ticketEntityId)
    parameters:
    - id: ticketEntityId
      type: System.Int32
      description: The id of the ticket to notify about
    content.vb: Public Sub NotifyNewTicket(ticketEntityId As Integer)
  overload: SuperOffice.CRM.Services.TicketAgent.NotifyNewTicket*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.NotifyNewTicket(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.TicketAgent.NotifyNewTicketMessage(System.Int32)
  commentId: M:SuperOffice.CRM.Services.TicketAgent.NotifyNewTicketMessage(System.Int32)
  id: NotifyNewTicketMessage(System.Int32)
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: NotifyNewTicketMessage(Int32)
  nameWithType: TicketAgent.NotifyNewTicketMessage(Int32)
  fullName: SuperOffice.CRM.Services.TicketAgent.NotifyNewTicketMessage(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nNotify user agents about the creation of a new message on a ticket\n"
  syntax:
    content: public void NotifyNewTicketMessage(int ticketEntityId)
    parameters:
    - id: ticketEntityId
      type: System.Int32
      description: The id of the ticket to notify about
    content.vb: Public Sub NotifyNewTicketMessage(ticketEntityId As Integer)
  overload: SuperOffice.CRM.Services.TicketAgent.NotifyNewTicketMessage*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.NotifyNewTicketMessage(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.TicketAgent.GetTicketAttachments(System.Int32)
  commentId: M:SuperOffice.CRM.Services.TicketAgent.GetTicketAttachments(System.Int32)
  id: GetTicketAttachments(System.Int32)
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: GetTicketAttachments(Int32)
  nameWithType: TicketAgent.GetTicketAttachments(Int32)
  fullName: SuperOffice.CRM.Services.TicketAgent.GetTicketAttachments(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet attachment infos for all attachments connected to messages in specified ticket\n"
  syntax:
    content: public AttachmentEntity[] GetTicketAttachments(int ticketEntityId)
    parameters:
    - id: ticketEntityId
      type: System.Int32
      description: The id of the ticket to get attachment infos from
    return:
      type: SuperOffice.CRM.Services.AttachmentEntity[]
      description: An array containing attachment info objects for all the attachments
    content.vb: Public Function GetTicketAttachments(ticketEntityId As Integer) As AttachmentEntity()
  overload: SuperOffice.CRM.Services.TicketAgent.GetTicketAttachments*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.GetTicketAttachments(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.TicketAgent.ValidateAttachments(System.Int32[])
  commentId: M:SuperOffice.CRM.Services.TicketAgent.ValidateAttachments(System.Int32[])
  id: ValidateAttachments(System.Int32[])
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: ValidateAttachments(Int32[])
  nameWithType: TicketAgent.ValidateAttachments(Int32[])
  fullName: SuperOffice.CRM.Services.TicketAgent.ValidateAttachments(System.Int32[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCheck attachments, return validation result for each item\n"
  syntax:
    content: public AttachmentValidationResult[] ValidateAttachments(int[] attachmentIds)
    parameters:
    - id: attachmentIds
      type: System.Int32[]
      description: The IDs of the attachments to validate
    return:
      type: SuperOffice.CRM.Services.AttachmentValidationResult[]
      description: Validation result
    content.vb: Public Function ValidateAttachments(attachmentIds As Integer()) As AttachmentValidationResult()
  overload: SuperOffice.CRM.Services.TicketAgent.ValidateAttachments*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.ValidateAttachments(System.Int32[])
  nameWithType.vb: TicketAgent.ValidateAttachments(Int32())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.Services.TicketAgent.ValidateAttachments(System.Int32())
  name.vb: ValidateAttachments(Int32())
- uid: SuperOffice.CRM.Services.TicketAgent.SetTicketReadByOwner(System.Int32,SuperOffice.Data.TicketReadStatus,System.Boolean)
  commentId: M:SuperOffice.CRM.Services.TicketAgent.SetTicketReadByOwner(System.Int32,SuperOffice.Data.TicketReadStatus,System.Boolean)
  id: SetTicketReadByOwner(System.Int32,SuperOffice.Data.TicketReadStatus,System.Boolean)
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: SetTicketReadByOwner(Int32, TicketReadStatus, Boolean)
  nameWithType: TicketAgent.SetTicketReadByOwner(Int32, TicketReadStatus, Boolean)
  fullName: SuperOffice.CRM.Services.TicketAgent.SetTicketReadByOwner(System.Int32, SuperOffice.Data.TicketReadStatus, System.Boolean)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSet the ReadByOwner status for a ticket. It will only have an effect if the calling user is the same as the owner of the ticket\n"
  syntax:
    content: public TicketEntity SetTicketReadByOwner(int ticketEntityId, TicketReadStatus readStatus, bool checkEscalating)
    parameters:
    - id: ticketEntityId
      type: System.Int32
      description: The id of the ticket to set
    - id: readStatus
      type: SuperOffice.Data.TicketReadStatus
      description: The read status to set. See the enum for explanation of the different colors. Setting Unknown does nothing
    - id: checkEscalating
      type: System.Boolean
      description: If true, then the escalation system will be called and executed when setting the ReadByOwner
    return:
      type: SuperOffice.CRM.Services.TicketEntity
      description: The ticket entity after setting the ReadByOwner
    content.vb: Public Function SetTicketReadByOwner(ticketEntityId As Integer, readStatus As TicketReadStatus, checkEscalating As Boolean) As TicketEntity
  overload: SuperOffice.CRM.Services.TicketAgent.SetTicketReadByOwner*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.SetTicketReadByOwner(System.Int32,SuperOffice.Data.TicketReadStatus,System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.TicketAgent.SaveTicketEntityWithNotify(SuperOffice.CRM.Services.TicketEntity,System.Boolean)
  commentId: M:SuperOffice.CRM.Services.TicketAgent.SaveTicketEntityWithNotify(SuperOffice.CRM.Services.TicketEntity,System.Boolean)
  id: SaveTicketEntityWithNotify(SuperOffice.CRM.Services.TicketEntity,System.Boolean)
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: SaveTicketEntityWithNotify(TicketEntity, Boolean)
  nameWithType: TicketAgent.SaveTicketEntityWithNotify(TicketEntity, Boolean)
  fullName: SuperOffice.CRM.Services.TicketAgent.SaveTicketEntityWithNotify(SuperOffice.CRM.Services.TicketEntity, System.Boolean)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSaves a ticket and performs any user notifications\n"
  syntax:
    content: public TicketEntity SaveTicketEntityWithNotify(TicketEntity newEntity, bool notify)
    parameters:
    - id: newEntity
      type: SuperOffice.CRM.Services.TicketEntity
      description: The ticket to save
    - id: notify
      type: System.Boolean
      description: If true, then the notifications will be sent
    return:
      type: SuperOffice.CRM.Services.TicketEntity
      description: The newly saved entity
    content.vb: Public Function SaveTicketEntityWithNotify(newEntity As TicketEntity, notify As Boolean) As TicketEntity
  overload: SuperOffice.CRM.Services.TicketAgent.SaveTicketEntityWithNotify*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.SaveTicketEntityWithNotify(SuperOffice.CRM.Services.TicketEntity,System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.TicketAgent.GetNextInQueue
  commentId: M:SuperOffice.CRM.Services.TicketAgent.GetNextInQueue
  id: GetNextInQueue
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: GetNextInQueue()
  nameWithType: TicketAgent.GetNextInQueue()
  fullName: SuperOffice.CRM.Services.TicketAgent.GetNextInQueue()
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nAssign a ticket to the caller based on intelligent queue system\n"
  syntax:
    content: public TicketEntity GetNextInQueue()
    return:
      type: SuperOffice.CRM.Services.TicketEntity
      description: The ticket entity after assigning it to the caller
    content.vb: Public Function GetNextInQueue As TicketEntity
  overload: SuperOffice.CRM.Services.TicketAgent.GetNextInQueue*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.GetNextInQueue
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.TicketAgent.ProcessTicketWhenRead(System.Int32)
  commentId: M:SuperOffice.CRM.Services.TicketAgent.ProcessTicketWhenRead(System.Int32)
  id: ProcessTicketWhenRead(System.Int32)
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: ProcessTicketWhenRead(Int32)
  nameWithType: TicketAgent.ProcessTicketWhenRead(Int32)
  fullName: SuperOffice.CRM.Services.TicketAgent.ProcessTicketWhenRead(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nWhen a user view/read a ticket, a number of action should be performed: set read status, escalation handling, remove notifications, etc. Which actions will be performed depends on owner, caller and configuration\n"
  syntax:
    content: public TicketEntity ProcessTicketWhenRead(int ticketEntityId)
    parameters:
    - id: ticketEntityId
      type: System.Int32
      description: The id of the ticket to mark as read
    return:
      type: SuperOffice.CRM.Services.TicketEntity
      description: The ticket entity after marking it as read
    content.vb: Public Function ProcessTicketWhenRead(ticketEntityId As Integer) As TicketEntity
  overload: SuperOffice.CRM.Services.TicketAgent.ProcessTicketWhenRead*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.ProcessTicketWhenRead(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.TicketAgent.SplitTicket(System.Int32,System.Int32,System.DateTime,System.Int32[],SuperOffice.CRM.Services.TicketEntity)
  commentId: M:SuperOffice.CRM.Services.TicketAgent.SplitTicket(System.Int32,System.Int32,System.DateTime,System.Int32[],SuperOffice.CRM.Services.TicketEntity)
  id: SplitTicket(System.Int32,System.Int32,System.DateTime,System.Int32[],SuperOffice.CRM.Services.TicketEntity)
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: SplitTicket(Int32, Int32, DateTime, Int32[], TicketEntity)
  nameWithType: TicketAgent.SplitTicket(Int32, Int32, DateTime, Int32[], TicketEntity)
  fullName: SuperOffice.CRM.Services.TicketAgent.SplitTicket(System.Int32, System.Int32, System.DateTime, System.Int32[], SuperOffice.CRM.Services.TicketEntity)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSave new ticket and move/copy data from existing ticket in a single request. Specified messages will be moved.\n"
  syntax:
    content: public TicketEntity SplitTicket(int sourceTicketEntityId, int sourceTicketEntityStatusId, DateTime sourceTicketEntityActivate, int[] transferMessageIds, TicketEntity newTicketEntity)
    parameters:
    - id: sourceTicketEntityId
      type: System.Int32
      description: The id of the ticket to split
    - id: sourceTicketEntityStatusId
      type: System.Int32
      description: The id of the source ticket&apos;s status
    - id: sourceTicketEntityActivate
      type: System.DateTime
      description: The activate date of the source ticket
    - id: transferMessageIds
      type: System.Int32[]
      description: IDs of messages that should be transferred from the original ticket to the new one
    - id: newTicketEntity
      type: SuperOffice.CRM.Services.TicketEntity
      description: The new ticket to save. Includes new values for simple properties like title, category, status, etc., but not messages.
    return:
      type: SuperOffice.CRM.Services.TicketEntity
      description: The newly created entity
    content.vb: Public Function SplitTicket(sourceTicketEntityId As Integer, sourceTicketEntityStatusId As Integer, sourceTicketEntityActivate As DateTime, transferMessageIds As Integer(), newTicketEntity As TicketEntity) As TicketEntity
  overload: SuperOffice.CRM.Services.TicketAgent.SplitTicket*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.SplitTicket(System.Int32,System.Int32,System.DateTime,System.Int32[],SuperOffice.CRM.Services.TicketEntity)
  nameWithType.vb: TicketAgent.SplitTicket(Int32, Int32, DateTime, Int32(), TicketEntity)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.Services.TicketAgent.SplitTicket(System.Int32, System.Int32, System.DateTime, System.Int32(), SuperOffice.CRM.Services.TicketEntity)
  name.vb: SplitTicket(Int32, Int32, DateTime, Int32(), TicketEntity)
- uid: SuperOffice.CRM.Services.TicketAgent.SplitTicketMessage(SuperOffice.CRM.Services.TicketMessageEntity,SuperOffice.CRM.Services.TicketEntity,SuperOffice.CRM.Services.TicketMessageEntity,System.Int32[])
  commentId: M:SuperOffice.CRM.Services.TicketAgent.SplitTicketMessage(SuperOffice.CRM.Services.TicketMessageEntity,SuperOffice.CRM.Services.TicketEntity,SuperOffice.CRM.Services.TicketMessageEntity,System.Int32[])
  id: SplitTicketMessage(SuperOffice.CRM.Services.TicketMessageEntity,SuperOffice.CRM.Services.TicketEntity,SuperOffice.CRM.Services.TicketMessageEntity,System.Int32[])
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: SplitTicketMessage(TicketMessageEntity, TicketEntity, TicketMessageEntity, Int32[])
  nameWithType: TicketAgent.SplitTicketMessage(TicketMessageEntity, TicketEntity, TicketMessageEntity, Int32[])
  fullName: SuperOffice.CRM.Services.TicketAgent.SplitTicketMessage(SuperOffice.CRM.Services.TicketMessageEntity, SuperOffice.CRM.Services.TicketEntity, SuperOffice.CRM.Services.TicketMessageEntity, System.Int32[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCreate new ticket and move/copy data from existing ticket in addition update old message and save new message in a single request.\n"
  syntax:
    content: public TicketEntity SplitTicketMessage(TicketMessageEntity sourceTicketMessage, TicketEntity newTicketEntity, TicketMessageEntity newTicketMessage, int[] transferAttachmentsIds)
    parameters:
    - id: sourceTicketMessage
      type: SuperOffice.CRM.Services.TicketMessageEntity
      description: The message being splitted, content can be modified as part of the split.
    - id: newTicketEntity
      type: SuperOffice.CRM.Services.TicketEntity
      description: The new ticket to save. Includes new values for simple properties like title, category, status, etc., but not messages.
    - id: newTicketMessage
      type: SuperOffice.CRM.Services.TicketMessageEntity
      description: The new message to be saved
    - id: transferAttachmentsIds
      type: System.Int32[]
      description: IDs of attachments that should be transferred from the original message to the new one
    return:
      type: SuperOffice.CRM.Services.TicketEntity
      description: The newly created entity
    content.vb: Public Function SplitTicketMessage(sourceTicketMessage As TicketMessageEntity, newTicketEntity As TicketEntity, newTicketMessage As TicketMessageEntity, transferAttachmentsIds As Integer()) As TicketEntity
  overload: SuperOffice.CRM.Services.TicketAgent.SplitTicketMessage*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.SplitTicketMessage(SuperOffice.CRM.Services.TicketMessageEntity,SuperOffice.CRM.Services.TicketEntity,SuperOffice.CRM.Services.TicketMessageEntity,System.Int32[])
  nameWithType.vb: TicketAgent.SplitTicketMessage(TicketMessageEntity, TicketEntity, TicketMessageEntity, Int32())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.Services.TicketAgent.SplitTicketMessage(SuperOffice.CRM.Services.TicketMessageEntity, SuperOffice.CRM.Services.TicketEntity, SuperOffice.CRM.Services.TicketMessageEntity, System.Int32())
  name.vb: SplitTicketMessage(TicketMessageEntity, TicketEntity, TicketMessageEntity, Int32())
- uid: SuperOffice.CRM.Services.TicketAgent.UpdateTicketsReadStatus(System.Int32[],SuperOffice.Data.TicketReadStatus)
  commentId: M:SuperOffice.CRM.Services.TicketAgent.UpdateTicketsReadStatus(System.Int32[],SuperOffice.Data.TicketReadStatus)
  id: UpdateTicketsReadStatus(System.Int32[],SuperOffice.Data.TicketReadStatus)
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: UpdateTicketsReadStatus(Int32[], TicketReadStatus)
  nameWithType: TicketAgent.UpdateTicketsReadStatus(Int32[], TicketReadStatus)
  fullName: SuperOffice.CRM.Services.TicketAgent.UpdateTicketsReadStatus(System.Int32[], SuperOffice.Data.TicketReadStatus)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nThis method changes multiple tickets&apos; read status\n"
  syntax:
    content: public int[] UpdateTicketsReadStatus(int[] ticketIds, TicketReadStatus newStatus)
    parameters:
    - id: ticketIds
      type: System.Int32[]
      description: Ticket ids to be updated
    - id: newStatus
      type: SuperOffice.Data.TicketReadStatus
      description: New read status
    return:
      type: System.Int32[]
      description: Updated ticket ids
    content.vb: Public Function UpdateTicketsReadStatus(ticketIds As Integer(), newStatus As TicketReadStatus) As Integer()
  overload: SuperOffice.CRM.Services.TicketAgent.UpdateTicketsReadStatus*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.UpdateTicketsReadStatus(System.Int32[],SuperOffice.Data.TicketReadStatus)
  nameWithType.vb: TicketAgent.UpdateTicketsReadStatus(Int32(), TicketReadStatus)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.Services.TicketAgent.UpdateTicketsReadStatus(System.Int32(), SuperOffice.Data.TicketReadStatus)
  name.vb: UpdateTicketsReadStatus(Int32(), TicketReadStatus)
- uid: SuperOffice.CRM.Services.TicketAgent.UpdateTicketsReadStatusByProvider(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],SuperOffice.Data.TicketReadStatus)
  commentId: M:SuperOffice.CRM.Services.TicketAgent.UpdateTicketsReadStatusByProvider(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],SuperOffice.Data.TicketReadStatus)
  id: UpdateTicketsReadStatusByProvider(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],SuperOffice.Data.TicketReadStatus)
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: UpdateTicketsReadStatusByProvider(String, ArchiveRestrictionInfo[], TicketReadStatus)
  nameWithType: TicketAgent.UpdateTicketsReadStatusByProvider(String, ArchiveRestrictionInfo[], TicketReadStatus)
  fullName: SuperOffice.CRM.Services.TicketAgent.UpdateTicketsReadStatusByProvider(System.String, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[], SuperOffice.Data.TicketReadStatus)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nThis method changes multiple tickets&apos; read status\n"
  syntax:
    content: public int[] UpdateTicketsReadStatusByProvider(string provider, ArchiveRestrictionInfo[] restrictions, TicketReadStatus newStatus)
    parameters:
    - id: provider
      type: System.String
      description: Name of the provider that returns ticket rows.
    - id: restrictions
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
      description: Query restrictions to be added to provider. Fixed providers, such as LastTicketsProvider, FavouriteTicketsProvider etc. already have mandatory restrictions setup - in such case extra restrictions will be combined, however for general use case for fixed providers you can pass an empty array and provider will return default results. For selection providers generally you should pass selectionId as a restriction.
    - id: newStatus
      type: SuperOffice.Data.TicketReadStatus
      description: New read status
    return:
      type: System.Int32[]
      description: Updated ticket ids
    content.vb: Public Function UpdateTicketsReadStatusByProvider(provider As String, restrictions As ArchiveRestrictionInfo(), newStatus As TicketReadStatus) As Integer()
  overload: SuperOffice.CRM.Services.TicketAgent.UpdateTicketsReadStatusByProvider*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.UpdateTicketsReadStatusByProvider(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],SuperOffice.Data.TicketReadStatus)
  nameWithType.vb: TicketAgent.UpdateTicketsReadStatusByProvider(String, ArchiveRestrictionInfo(), TicketReadStatus)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.Services.TicketAgent.UpdateTicketsReadStatusByProvider(System.String, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo(), SuperOffice.Data.TicketReadStatus)
  name.vb: UpdateTicketsReadStatusByProvider(String, ArchiveRestrictionInfo(), TicketReadStatus)
- uid: SuperOffice.CRM.Services.TicketAgent.MergeTickets(SuperOffice.CRM.Services.TicketEntity,System.Int32[])
  commentId: M:SuperOffice.CRM.Services.TicketAgent.MergeTickets(SuperOffice.CRM.Services.TicketEntity,System.Int32[])
  id: MergeTickets(SuperOffice.CRM.Services.TicketEntity,System.Int32[])
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: MergeTickets(TicketEntity, Int32[])
  nameWithType: TicketAgent.MergeTickets(TicketEntity, Int32[])
  fullName: SuperOffice.CRM.Services.TicketAgent.MergeTickets(SuperOffice.CRM.Services.TicketEntity, System.Int32[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nMerge one or more tickets into one primary ticket\n"
  syntax:
    content: public TicketEntity MergeTickets(TicketEntity mergedTicketEntity, int[] secondaryTicketIds)
    parameters:
    - id: mergedTicketEntity
      type: SuperOffice.CRM.Services.TicketEntity
      description: Merged ticket entity
    - id: secondaryTicketIds
      type: System.Int32[]
      description: Ids of secondary tickets
    return:
      type: SuperOffice.CRM.Services.TicketEntity
      description: The newly merged entity
    content.vb: Public Function MergeTickets(mergedTicketEntity As TicketEntity, secondaryTicketIds As Integer()) As TicketEntity
  overload: SuperOffice.CRM.Services.TicketAgent.MergeTickets*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.MergeTickets(SuperOffice.CRM.Services.TicketEntity,System.Int32[])
  nameWithType.vb: TicketAgent.MergeTickets(TicketEntity, Int32())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.Services.TicketAgent.MergeTickets(SuperOffice.CRM.Services.TicketEntity, System.Int32())
  name.vb: MergeTickets(TicketEntity, Int32())
- uid: SuperOffice.CRM.Services.TicketAgent.SetDeletedStatusByIds(System.Int32[])
  commentId: M:SuperOffice.CRM.Services.TicketAgent.SetDeletedStatusByIds(System.Int32[])
  id: SetDeletedStatusByIds(System.Int32[])
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: SetDeletedStatusByIds(Int32[])
  nameWithType: TicketAgent.SetDeletedStatusByIds(Int32[])
  fullName: SuperOffice.CRM.Services.TicketAgent.SetDeletedStatusByIds(System.Int32[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSets tickets&apos; status to Deleted. After a grace period these tickets will be deleted by a background job.\n"
  syntax:
    content: public int[] SetDeletedStatusByIds(int[] ticketIds)
    parameters:
    - id: ticketIds
      type: System.Int32[]
      description: Ids of tickets to be set for deletion.
    return:
      type: System.Int32[]
      description: Ids of tickets set for deletion.
    content.vb: Public Function SetDeletedStatusByIds(ticketIds As Integer()) As Integer()
  overload: SuperOffice.CRM.Services.TicketAgent.SetDeletedStatusByIds*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.SetDeletedStatusByIds(System.Int32[])
  nameWithType.vb: TicketAgent.SetDeletedStatusByIds(Int32())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.Services.TicketAgent.SetDeletedStatusByIds(System.Int32())
  name.vb: SetDeletedStatusByIds(Int32())
- uid: SuperOffice.CRM.Services.TicketAgent.SetDeletedStatusByProvider(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  commentId: M:SuperOffice.CRM.Services.TicketAgent.SetDeletedStatusByProvider(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  id: SetDeletedStatusByProvider(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: SetDeletedStatusByProvider(String, ArchiveRestrictionInfo[])
  nameWithType: TicketAgent.SetDeletedStatusByProvider(String, ArchiveRestrictionInfo[])
  fullName: SuperOffice.CRM.Services.TicketAgent.SetDeletedStatusByProvider(System.String, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSets tickets&apos; status to Deleted. After a grace period these tickets will be deleted by a background job.\n"
  syntax:
    content: public int[] SetDeletedStatusByProvider(string providerName, ArchiveRestrictionInfo[] restrictions)
    parameters:
    - id: providerName
      type: System.String
      description: Name of the provider that returns ticket rows.
    - id: restrictions
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
      description: Query restrictions to be added to provider. Fixed providers, such as LastTicketsProvider, FavouriteTicketsProvider etc. already have mandatory restrictions setup - in such case extra restrictions will be combined, however for general use case for fixed providers you can pass an empty array and provider will return default results. For selection providers generally you should pass selectionId as a restriction.
    return:
      type: System.Int32[]
      description: Ids of tickets set for deletion.
    content.vb: Public Function SetDeletedStatusByProvider(providerName As String, restrictions As ArchiveRestrictionInfo()) As Integer()
  overload: SuperOffice.CRM.Services.TicketAgent.SetDeletedStatusByProvider*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.SetDeletedStatusByProvider(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  nameWithType.vb: TicketAgent.SetDeletedStatusByProvider(String, ArchiveRestrictionInfo())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.Services.TicketAgent.SetDeletedStatusByProvider(System.String, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo())
  name.vb: SetDeletedStatusByProvider(String, ArchiveRestrictionInfo())
- uid: SuperOffice.CRM.Services.TicketAgent.UndeleteByIds(System.Int32[])
  commentId: M:SuperOffice.CRM.Services.TicketAgent.UndeleteByIds(System.Int32[])
  id: UndeleteByIds(System.Int32[])
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: UndeleteByIds(Int32[])
  nameWithType: TicketAgent.UndeleteByIds(Int32[])
  fullName: SuperOffice.CRM.Services.TicketAgent.UndeleteByIds(System.Int32[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nRestores deleted tickets by their ids. Status is set to a default open status defined in Registry table\n"
  syntax:
    content: public void UndeleteByIds(int[] ticketIds)
    parameters:
    - id: ticketIds
      type: System.Int32[]
      description: Ids of tickets to be restored.
    content.vb: Public Sub UndeleteByIds(ticketIds As Integer())
  overload: SuperOffice.CRM.Services.TicketAgent.UndeleteByIds*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.UndeleteByIds(System.Int32[])
  nameWithType.vb: TicketAgent.UndeleteByIds(Int32())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.Services.TicketAgent.UndeleteByIds(System.Int32())
  name.vb: UndeleteByIds(Int32())
- uid: SuperOffice.CRM.Services.TicketAgent.ResolveTicketId(System.Int32)
  commentId: M:SuperOffice.CRM.Services.TicketAgent.ResolveTicketId(System.Int32)
  id: ResolveTicketId(System.Int32)
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: ResolveTicketId(Int32)
  nameWithType: TicketAgent.ResolveTicketId(Int32)
  fullName: SuperOffice.CRM.Services.TicketAgent.ResolveTicketId(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nTicket can be connected (merged) to another ticket. This method traverses through its connection(s) and returns proper ticketId\n"
  syntax:
    content: public int ResolveTicketId(int ticketId)
    parameters:
    - id: ticketId
      type: System.Int32
      description: Potentially correct ticketId
    return:
      type: System.Int32
      description: Correct ticketId. Returns 0 in case ticket does not exists
    content.vb: Public Function ResolveTicketId(ticketId As Integer) As Integer
  overload: SuperOffice.CRM.Services.TicketAgent.ResolveTicketId*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.ResolveTicketId(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.TicketAgent.BatchForward(System.Int32[],System.String[],System.String[],System.String[],System.String,System.Boolean)
  commentId: M:SuperOffice.CRM.Services.TicketAgent.BatchForward(System.Int32[],System.String[],System.String[],System.String[],System.String,System.Boolean)
  id: BatchForward(System.Int32[],System.String[],System.String[],System.String[],System.String,System.Boolean)
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: BatchForward(Int32[], String[], String[], String[], String, Boolean)
  nameWithType: TicketAgent.BatchForward(Int32[], String[], String[], String[], String, Boolean)
  fullName: SuperOffice.CRM.Services.TicketAgent.BatchForward(System.Int32[], System.String[], System.String[], System.String[], System.String, System.Boolean)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nForwards selected tickets to specified recipients. This method starts a batch task.\n"
  syntax:
    content: public int BatchForward(int[] ticketIds, string[] to, string[] cc, string[] bcc, string comment, bool closeTicket)
    parameters:
    - id: ticketIds
      type: System.Int32[]
      description: Ids of tickets to be forwarded.
    - id: to
      type: System.String[]
      description: The To-recipients. Each recipient must be in correct mailbox format (john@example.com or John Doe &lt;john@example.com>).
    - id: cc
      type: System.String[]
      description: The Cc-recipients. Each recipient must be in correct mailbox format (john@example.com or John Doe &lt;john@example.com>).
    - id: bcc
      type: System.String[]
      description: The Bcc-recipients. Each recipient must be in correct mailbox format (john@example.com or John Doe &lt;john@example.com>).
    - id: comment
      type: System.String
      description: Comment will be included before ticket messages. Might be empty
    - id: closeTicket
      type: System.Boolean
      description: If true, ticket will be closed after forwarding
    return:
      type: System.Int32
      description: ID of the new batch task.
    content.vb: Public Function BatchForward(ticketIds As Integer(), to As String(), cc As String(), bcc As String(), comment As String, closeTicket As Boolean) As Integer
  overload: SuperOffice.CRM.Services.TicketAgent.BatchForward*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.BatchForward(System.Int32[],System.String[],System.String[],System.String[],System.String,System.Boolean)
  nameWithType.vb: TicketAgent.BatchForward(Int32(), String(), String(), String(), String, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.Services.TicketAgent.BatchForward(System.Int32(), System.String(), System.String(), System.String(), System.String, System.Boolean)
  name.vb: BatchForward(Int32(), String(), String(), String(), String, Boolean)
- uid: SuperOffice.CRM.Services.TicketAgent.BatchReply(SuperOffice.CRM.Services.TicketBatchReplyData)
  commentId: M:SuperOffice.CRM.Services.TicketAgent.BatchReply(SuperOffice.CRM.Services.TicketBatchReplyData)
  id: BatchReply(SuperOffice.CRM.Services.TicketBatchReplyData)
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: BatchReply(TicketBatchReplyData)
  nameWithType: TicketAgent.BatchReply(TicketBatchReplyData)
  fullName: SuperOffice.CRM.Services.TicketAgent.BatchReply(SuperOffice.CRM.Services.TicketBatchReplyData)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nReplies to the specified tickets. This method starts a batch task.\n"
  syntax:
    content: public int BatchReply(TicketBatchReplyData batchReplyData)
    parameters:
    - id: batchReplyData
      type: SuperOffice.CRM.Services.TicketBatchReplyData
      description: All data needed to initiate a mass ticket reply sending.
    return:
      type: System.Int32
      description: ID of the new batch task.
    content.vb: Public Function BatchReply(batchReplyData As TicketBatchReplyData) As Integer
  overload: SuperOffice.CRM.Services.TicketAgent.BatchReply*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.BatchReply(SuperOffice.CRM.Services.TicketBatchReplyData)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.TicketAgent.ClearNotify(System.Int32[])
  commentId: M:SuperOffice.CRM.Services.TicketAgent.ClearNotify(System.Int32[])
  id: ClearNotify(System.Int32[])
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: ClearNotify(Int32[])
  nameWithType: TicketAgent.ClearNotify(Int32[])
  fullName: SuperOffice.CRM.Services.TicketAgent.ClearNotify(System.Int32[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nClear notification status for one or more tickets.\n"
  syntax:
    content: public void ClearNotify(int[] ids)
    parameters:
    - id: ids
      type: System.Int32[]
      description: List of notify IDs.
    content.vb: Public Sub ClearNotify(ids As Integer())
  overload: SuperOffice.CRM.Services.TicketAgent.ClearNotify*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.ClearNotify(System.Int32[])
  nameWithType.vb: TicketAgent.ClearNotify(Int32())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.Services.TicketAgent.ClearNotify(System.Int32())
  name.vb: ClearNotify(Int32())
- uid: SuperOffice.CRM.Services.TicketAgent.GetTicketMessageEntities(System.Int32,System.Int32[])
  commentId: M:SuperOffice.CRM.Services.TicketAgent.GetTicketMessageEntities(System.Int32,System.Int32[])
  id: GetTicketMessageEntities(System.Int32,System.Int32[])
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: GetTicketMessageEntities(Int32, Int32[])
  nameWithType: TicketAgent.GetTicketMessageEntities(Int32, Int32[])
  fullName: SuperOffice.CRM.Services.TicketAgent.GetTicketMessageEntities(System.Int32, System.Int32[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet ticket message entities with attachment info for given ticket\n"
  syntax:
    content: public TicketMessageEntity[] GetTicketMessageEntities(int ticketId, int[] messageIds)
    parameters:
    - id: ticketId
      type: System.Int32
      description: The id of the ticket to get message entities from
    - id: messageIds
      type: System.Int32[]
      description: Optional ids of message entities to get. If not provided, all ticket message entities will be returned.
    return:
      type: SuperOffice.CRM.Services.TicketMessageEntity[]
      description: An array containing ticket message entities
    content.vb: Public Function GetTicketMessageEntities(ticketId As Integer, messageIds As Integer()) As TicketMessageEntity()
  overload: SuperOffice.CRM.Services.TicketAgent.GetTicketMessageEntities*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageEntities(System.Int32,System.Int32[])
  nameWithType.vb: TicketAgent.GetTicketMessageEntities(Int32, Int32())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.Services.TicketAgent.GetTicketMessageEntities(System.Int32, System.Int32())
  name.vb: GetTicketMessageEntities(Int32, Int32())
- uid: SuperOffice.CRM.Services.TicketAgent.CreateDefaultForTicketType(System.Int32)
  commentId: M:SuperOffice.CRM.Services.TicketAgent.CreateDefaultForTicketType(System.Int32)
  id: CreateDefaultForTicketType(System.Int32)
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultForTicketType(Int32)
  nameWithType: TicketAgent.CreateDefaultForTicketType(Int32)
  fullName: SuperOffice.CRM.Services.TicketAgent.CreateDefaultForTicketType(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCreate default ticket entity for particular TicketType\n"
  syntax:
    content: public TicketEntity CreateDefaultForTicketType(int ticketTypeId)
    parameters:
    - id: ticketTypeId
      type: System.Int32
      description: ID of ticket type
    return:
      type: SuperOffice.CRM.Services.TicketEntity
      description: Default ticket entity
    content.vb: Public Function CreateDefaultForTicketType(ticketTypeId As Integer) As TicketEntity
  overload: SuperOffice.CRM.Services.TicketAgent.CreateDefaultForTicketType*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.CreateDefaultForTicketType(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.TicketAgent.DoEscalating(System.Int32,SuperOffice.Data.TicketPriorityEscalateAction)
  commentId: M:SuperOffice.CRM.Services.TicketAgent.DoEscalating(System.Int32,SuperOffice.Data.TicketPriorityEscalateAction)
  id: DoEscalating(System.Int32,SuperOffice.Data.TicketPriorityEscalateAction)
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: DoEscalating(Int32, TicketPriorityEscalateAction)
  nameWithType: TicketAgent.DoEscalating(Int32, TicketPriorityEscalateAction)
  fullName: SuperOffice.CRM.Services.TicketAgent.DoEscalating(System.Int32, SuperOffice.Data.TicketPriorityEscalateAction)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nChecks if the ticket should change its alert level based on the priority and action. If it is to change, the alert level and alert timeout for the ticket will be updated.\n"
  syntax:
    content: public void DoEscalating(int ticketId, TicketPriorityEscalateAction action)
    parameters:
    - id: ticketId
      type: System.Int32
      description: The id of ticket
    - id: action
      type: SuperOffice.Data.TicketPriorityEscalateAction
      description: The action to use when calculating the escalation
    content.vb: Public Sub DoEscalating(ticketId As Integer, action As TicketPriorityEscalateAction)
  overload: SuperOffice.CRM.Services.TicketAgent.DoEscalating*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.DoEscalating(System.Int32,SuperOffice.Data.TicketPriorityEscalateAction)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.TicketAgent.GetTicketMessage(System.Int32)
  commentId: M:SuperOffice.CRM.Services.TicketAgent.GetTicketMessage(System.Int32)
  id: GetTicketMessage(System.Int32)
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: GetTicketMessage(Int32)
  nameWithType: TicketAgent.GetTicketMessage(Int32)
  fullName: SuperOffice.CRM.Services.TicketAgent.GetTicketMessage(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets a TicketMessage object.                        \n"
  syntax:
    content: public TicketMessage GetTicketMessage(int ticketMessageId)
    parameters:
    - id: ticketMessageId
      type: System.Int32
      description: The identifier of the TicketMessage object
    return:
      type: SuperOffice.CRM.Services.TicketMessage
      description: TicketMessage
    content.vb: Public Function GetTicketMessage(ticketMessageId As Integer) As TicketMessage
  overload: SuperOffice.CRM.Services.TicketAgent.GetTicketMessage*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.GetTicketMessage(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.TicketAgent.GetTicketMessageEntity(System.Int32)
  commentId: M:SuperOffice.CRM.Services.TicketAgent.GetTicketMessageEntity(System.Int32)
  id: GetTicketMessageEntity(System.Int32)
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: GetTicketMessageEntity(Int32)
  nameWithType: TicketAgent.GetTicketMessageEntity(Int32)
  fullName: SuperOffice.CRM.Services.TicketAgent.GetTicketMessageEntity(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets a TicketMessageEntity object.                        \n"
  syntax:
    content: public TicketMessageEntity GetTicketMessageEntity(int ticketMessageEntityId)
    parameters:
    - id: ticketMessageEntityId
      type: System.Int32
      description: The identifier of the TicketMessageEntity object
    return:
      type: SuperOffice.CRM.Services.TicketMessageEntity
      description: TicketMessageEntity
    content.vb: Public Function GetTicketMessageEntity(ticketMessageEntityId As Integer) As TicketMessageEntity
  overload: SuperOffice.CRM.Services.TicketAgent.GetTicketMessageEntity*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageEntity(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.TicketAgent.DeleteTicketMessageEntity(System.Int32)
  commentId: M:SuperOffice.CRM.Services.TicketAgent.DeleteTicketMessageEntity(System.Int32)
  id: DeleteTicketMessageEntity(System.Int32)
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: DeleteTicketMessageEntity(Int32)
  nameWithType: TicketAgent.DeleteTicketMessageEntity(Int32)
  fullName: SuperOffice.CRM.Services.TicketAgent.DeleteTicketMessageEntity(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nDelete a ticket message\n"
  syntax:
    content: public void DeleteTicketMessageEntity(int ticketMessageEntityId)
    parameters:
    - id: ticketMessageEntityId
      type: System.Int32
      description: The ticket message to delete
    content.vb: Public Sub DeleteTicketMessageEntity(ticketMessageEntityId As Integer)
  overload: SuperOffice.CRM.Services.TicketAgent.DeleteTicketMessageEntity*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.DeleteTicketMessageEntity(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.TicketAgent.SanitizeMailContent(System.String)
  commentId: M:SuperOffice.CRM.Services.TicketAgent.SanitizeMailContent(System.String)
  id: SanitizeMailContent(System.String)
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: SanitizeMailContent(String)
  nameWithType: TicketAgent.SanitizeMailContent(String)
  fullName: SuperOffice.CRM.Services.TicketAgent.SanitizeMailContent(System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nRemove harmful HTML tags and attributes from an email\n"
  syntax:
    content: public string SanitizeMailContent(string content)
    parameters:
    - id: content
      type: System.String
      description: The email content to sanitize
    return:
      type: System.String
      description: The sanitized email content
    content.vb: Public Function SanitizeMailContent(content As String) As String
  overload: SuperOffice.CRM.Services.TicketAgent.SanitizeMailContent*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.SanitizeMailContent(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.TicketAgent.SanitizeMailContentWithOptions(System.String,SuperOffice.Data.HtmlSanitizerOptions)
  commentId: M:SuperOffice.CRM.Services.TicketAgent.SanitizeMailContentWithOptions(System.String,SuperOffice.Data.HtmlSanitizerOptions)
  id: SanitizeMailContentWithOptions(System.String,SuperOffice.Data.HtmlSanitizerOptions)
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: SanitizeMailContentWithOptions(String, HtmlSanitizerOptions)
  nameWithType: TicketAgent.SanitizeMailContentWithOptions(String, HtmlSanitizerOptions)
  fullName: SuperOffice.CRM.Services.TicketAgent.SanitizeMailContentWithOptions(System.String, SuperOffice.Data.HtmlSanitizerOptions)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nRemove harmful HTML tags and attributes from an email, using specified options\n"
  syntax:
    content: public string SanitizeMailContentWithOptions(string content, HtmlSanitizerOptions options)
    parameters:
    - id: content
      type: System.String
      description: The email content to sanitize
    - id: options
      type: SuperOffice.Data.HtmlSanitizerOptions
      description: The options for the sanitizer engine
    return:
      type: System.String
      description: The sanitized email content
    content.vb: Public Function SanitizeMailContentWithOptions(content As String, options As HtmlSanitizerOptions) As String
  overload: SuperOffice.CRM.Services.TicketAgent.SanitizeMailContentWithOptions*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.SanitizeMailContentWithOptions(System.String,SuperOffice.Data.HtmlSanitizerOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.TicketAgent.SanitizeMailContents(System.String[])
  commentId: M:SuperOffice.CRM.Services.TicketAgent.SanitizeMailContents(System.String[])
  id: SanitizeMailContents(System.String[])
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: SanitizeMailContents(String[])
  nameWithType: TicketAgent.SanitizeMailContents(String[])
  fullName: SuperOffice.CRM.Services.TicketAgent.SanitizeMailContents(System.String[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nRemove harmful HTML tags and attributes from an email\n"
  syntax:
    content: public string[] SanitizeMailContents(string[] contents)
    parameters:
    - id: contents
      type: System.String[]
      description: The email contents to sanitize
    return:
      type: System.String[]
      description: The sanitized email contents
    content.vb: Public Function SanitizeMailContents(contents As String()) As String()
  overload: SuperOffice.CRM.Services.TicketAgent.SanitizeMailContents*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.SanitizeMailContents(System.String[])
  nameWithType.vb: TicketAgent.SanitizeMailContents(String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.Services.TicketAgent.SanitizeMailContents(System.String())
  name.vb: SanitizeMailContents(String())
- uid: SuperOffice.CRM.Services.TicketAgent.Html2Text(System.String)
  commentId: M:SuperOffice.CRM.Services.TicketAgent.Html2Text(System.String)
  id: Html2Text(System.String)
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: Html2Text(String)
  nameWithType: TicketAgent.Html2Text(String)
  fullName: SuperOffice.CRM.Services.TicketAgent.Html2Text(System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCreate a plain text version of the html, suitable for email\n"
  syntax:
    content: public string Html2Text(string content)
    parameters:
    - id: content
      type: System.String
      description: The html version
    return:
      type: System.String
      description: The plain text version
    content.vb: Public Function Html2Text(content As String) As String
  overload: SuperOffice.CRM.Services.TicketAgent.Html2Text*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.Html2Text(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.TicketAgent.GetAttachmentInfo(System.Int32)
  commentId: M:SuperOffice.CRM.Services.TicketAgent.GetAttachmentInfo(System.Int32)
  id: GetAttachmentInfo(System.Int32)
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: GetAttachmentInfo(Int32)
  nameWithType: TicketAgent.GetAttachmentInfo(Int32)
  fullName: SuperOffice.CRM.Services.TicketAgent.GetAttachmentInfo(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet a list with meta data for all attached attachments\n"
  syntax:
    content: public AttachmentEntity[] GetAttachmentInfo(int ticketMessageEntityId)
    parameters:
    - id: ticketMessageEntityId
      type: System.Int32
      description: The id of the ticket message to get attachment infos for
    return:
      type: SuperOffice.CRM.Services.AttachmentEntity[]
      description: An array with AttachmentEntity objects, describing each attachment
    content.vb: Public Function GetAttachmentInfo(ticketMessageEntityId As Integer) As AttachmentEntity()
  overload: SuperOffice.CRM.Services.TicketAgent.GetAttachmentInfo*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.GetAttachmentInfo(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.TicketAgent.GetAttachmentInfoNonInline(System.Int32)
  commentId: M:SuperOffice.CRM.Services.TicketAgent.GetAttachmentInfoNonInline(System.Int32)
  id: GetAttachmentInfoNonInline(System.Int32)
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: GetAttachmentInfoNonInline(Int32)
  nameWithType: TicketAgent.GetAttachmentInfoNonInline(Int32)
  fullName: SuperOffice.CRM.Services.TicketAgent.GetAttachmentInfoNonInline(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet a list with meta data for all attached attachments, EXCEPT those marked as inline\n"
  syntax:
    content: public AttachmentEntity[] GetAttachmentInfoNonInline(int ticketMessageEntityId)
    parameters:
    - id: ticketMessageEntityId
      type: System.Int32
      description: The id of the ticket message to get attachment infos for
    return:
      type: SuperOffice.CRM.Services.AttachmentEntity[]
      description: An array with AttachmentEntity objects, describing each attachment; those marked as INLINE will be skipped
    content.vb: Public Function GetAttachmentInfoNonInline(ticketMessageEntityId As Integer) As AttachmentEntity()
  overload: SuperOffice.CRM.Services.TicketAgent.GetAttachmentInfoNonInline*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.GetAttachmentInfoNonInline(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.TicketAgent.AddAttachments(System.Int32,System.Int32[])
  commentId: M:SuperOffice.CRM.Services.TicketAgent.AddAttachments(System.Int32,System.Int32[])
  id: AddAttachments(System.Int32,System.Int32[])
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: AddAttachments(Int32, Int32[])
  nameWithType: TicketAgent.AddAttachments(Int32, Int32[])
  fullName: SuperOffice.CRM.Services.TicketAgent.AddAttachments(System.Int32, System.Int32[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nConnect existing attachments with this TicketMessage. Can connect multiple attachments\n"
  syntax:
    content: public void AddAttachments(int ticketMessageEntityId, int[] attachmentIds)
    parameters:
    - id: ticketMessageEntityId
      type: System.Int32
      description: The id of the ticket message to connect the attachments to
    - id: attachmentIds
      type: System.Int32[]
      description: An array of attachments to connect to this TicketMessage
    content.vb: Public Sub AddAttachments(ticketMessageEntityId As Integer, attachmentIds As Integer())
  overload: SuperOffice.CRM.Services.TicketAgent.AddAttachments*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.AddAttachments(System.Int32,System.Int32[])
  nameWithType.vb: TicketAgent.AddAttachments(Int32, Int32())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.Services.TicketAgent.AddAttachments(System.Int32, System.Int32())
  name.vb: AddAttachments(Int32, Int32())
- uid: SuperOffice.CRM.Services.TicketAgent.RemoveMessageAttachments(System.Int32,System.Int32[])
  commentId: M:SuperOffice.CRM.Services.TicketAgent.RemoveMessageAttachments(System.Int32,System.Int32[])
  id: RemoveMessageAttachments(System.Int32,System.Int32[])
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: RemoveMessageAttachments(Int32, Int32[])
  nameWithType: TicketAgent.RemoveMessageAttachments(Int32, Int32[])
  fullName: SuperOffice.CRM.Services.TicketAgent.RemoveMessageAttachments(System.Int32, System.Int32[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nRemoves attachments from the message as specified in the collection of entity ids. The ids are attachment ids (attachment primary key)\n"
  syntax:
    content: public void RemoveMessageAttachments(int ticketMessageEntityId, int[] attachmentIds)
    parameters:
    - id: ticketMessageEntityId
      type: System.Int32
      description: The id of the ticket message to remove attachments from
    - id: attachmentIds
      type: System.Int32[]
      description: Attachment primary keys
    content.vb: Public Sub RemoveMessageAttachments(ticketMessageEntityId As Integer, attachmentIds As Integer())
  overload: SuperOffice.CRM.Services.TicketAgent.RemoveMessageAttachments*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.RemoveMessageAttachments(System.Int32,System.Int32[])
  nameWithType.vb: TicketAgent.RemoveMessageAttachments(Int32, Int32())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.Services.TicketAgent.RemoveMessageAttachments(System.Int32, System.Int32())
  name.vb: RemoveMessageAttachments(Int32, Int32())
- uid: SuperOffice.CRM.Services.TicketAgent.GetAttachmentPreview(System.Int32)
  commentId: M:SuperOffice.CRM.Services.TicketAgent.GetAttachmentPreview(System.Int32)
  id: GetAttachmentPreview(System.Int32)
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: GetAttachmentPreview(Int32)
  nameWithType: TicketAgent.GetAttachmentPreview(Int32)
  fullName: SuperOffice.CRM.Services.TicketAgent.GetAttachmentPreview(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nRetrieve an attachment from ticket message. The returned data is intended to be used for a preview. The returned data is sanitized.\n"
  syntax:
    content: public AttachmentPreview GetAttachmentPreview(int attachmentId)
    parameters:
    - id: attachmentId
      type: System.Int32
      description: The id of the attachment to retrieve
    return:
      type: SuperOffice.CRM.Services.AttachmentPreview
      description: Sanitized preview version of the attachment and additional metadata, if available
    content.vb: Public Function GetAttachmentPreview(attachmentId As Integer) As AttachmentPreview
  overload: SuperOffice.CRM.Services.TicketAgent.GetAttachmentPreview*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.GetAttachmentPreview(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.TicketAgent.GetPreviewAttachmentStream(System.Int32)
  commentId: M:SuperOffice.CRM.Services.TicketAgent.GetPreviewAttachmentStream(System.Int32)
  id: GetPreviewAttachmentStream(System.Int32)
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: GetPreviewAttachmentStream(Int32)
  nameWithType: TicketAgent.GetPreviewAttachmentStream(Int32)
  fullName: SuperOffice.CRM.Services.TicketAgent.GetPreviewAttachmentStream(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nDeprecated, see GetPreviewAttachment instead. Retrieve an attachment from ticket message. The returned data is intended to be used for a preview. The returned data is sanitized.\n"
  syntax:
    content: public DocumentPreview GetPreviewAttachmentStream(int attachmentId)
    parameters:
    - id: attachmentId
      type: System.Int32
      description: The id of the attachment to retrieve
    return:
      type: SuperOffice.CRM.Services.DocumentPreview
      description: Sanitized preview version of the attachment
    content.vb: Public Function GetPreviewAttachmentStream(attachmentId As Integer) As DocumentPreview
  overload: SuperOffice.CRM.Services.TicketAgent.GetPreviewAttachmentStream*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.GetPreviewAttachmentStream(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.TicketAgent.GetRfcAttachmentStream(System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.TicketAgent.GetRfcAttachmentStream(System.Int32,System.Int32)
  id: GetRfcAttachmentStream(System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: GetRfcAttachmentStream(Int32, Int32)
  nameWithType: TicketAgent.GetRfcAttachmentStream(Int32, Int32)
  fullName: SuperOffice.CRM.Services.TicketAgent.GetRfcAttachmentStream(System.Int32, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet the content of an attachment which is part of RFC822 email attachment\n"
  syntax:
    content: public Stream GetRfcAttachmentStream(int attachmentId, int position)
    parameters:
    - id: attachmentId
      type: System.Int32
      description: The id of the root attachment
    - id: position
      type: System.Int32
      description: The position (index) of the attachment within the root attachment. Numbering starts from 0
    return:
      type: System.IO.Stream
      description: RFC822 attachment content as a Stream
    content.vb: Public Function GetRfcAttachmentStream(attachmentId As Integer, position As Integer) As Stream
  overload: SuperOffice.CRM.Services.TicketAgent.GetRfcAttachmentStream*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.GetRfcAttachmentStream(System.Int32,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.TicketAgent.SendTicketMessage(System.Int32,System.String[],System.String[],System.String[],System.String,System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.TicketAgent.SendTicketMessage(System.Int32,System.String[],System.String[],System.String[],System.String,System.Int32,System.String)
  id: SendTicketMessage(System.Int32,System.String[],System.String[],System.String[],System.String,System.Int32,System.String)
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: SendTicketMessage(Int32, String[], String[], String[], String, Int32, String)
  nameWithType: TicketAgent.SendTicketMessage(Int32, String[], String[], String[], String, Int32, String)
  fullName: SuperOffice.CRM.Services.TicketAgent.SendTicketMessage(System.Int32, System.String[], System.String[], System.String[], System.String, System.Int32, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSend a message to recipients by email\n"
  syntax:
    content: public void SendTicketMessage(int ticketMessageEntityId, string[] to, string[] cc, string[] bcc, string subject, int replyTemplateId, string gdprSource)
    parameters:
    - id: ticketMessageEntityId
      type: System.Int32
      description: The id of the ticket message to send
    - id: to
      type: System.String[]
      description: The To-recipients. Each recipient must be in correct format
    - id: cc
      type: System.String[]
      description: The Cc-recipients. Each recipient must be in correct format
    - id: bcc
      type: System.String[]
      description: The Bcc-recipients. Each recipient must be in correct format
    - id: subject
      type: System.String
      description: The subject
    - id: replyTemplateId
      type: System.Int32
      description: Optional ID of reply template to merge message with. &lt;= 0 to skip.
    - id: gdprSource
      type: System.String
      description: Obsolete
    content.vb: Public Sub SendTicketMessage(ticketMessageEntityId As Integer, to As String(), cc As String(), bcc As String(), subject As String, replyTemplateId As Integer, gdprSource As String)
  overload: SuperOffice.CRM.Services.TicketAgent.SendTicketMessage*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.SendTicketMessage(System.Int32,System.String[],System.String[],System.String[],System.String,System.Int32,System.String)
  nameWithType.vb: TicketAgent.SendTicketMessage(Int32, String(), String(), String(), String, Int32, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.Services.TicketAgent.SendTicketMessage(System.Int32, System.String(), System.String(), System.String(), System.String, System.Int32, System.String)
  name.vb: SendTicketMessage(Int32, String(), String(), String(), String, Int32, String)
- uid: SuperOffice.CRM.Services.TicketAgent.SendTicketMessageSms(System.Int32,System.Int32,System.String[])
  commentId: M:SuperOffice.CRM.Services.TicketAgent.SendTicketMessageSms(System.Int32,System.Int32,System.String[])
  id: SendTicketMessageSms(System.Int32,System.Int32,System.String[])
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: SendTicketMessageSms(Int32, Int32, String[])
  nameWithType: TicketAgent.SendTicketMessageSms(Int32, Int32, String[])
  fullName: SuperOffice.CRM.Services.TicketAgent.SendTicketMessageSms(System.Int32, System.Int32, System.String[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSend a message to recipients by sms\n"
  syntax:
    content: public void SendTicketMessageSms(int ticketMessageEntityId, int replyTemplateId, string[] sms)
    parameters:
    - id: ticketMessageEntityId
      type: System.Int32
      description: The id of the ticket message to send
    - id: replyTemplateId
      type: System.Int32
      description: Optional ID of reply template to merge message with. &lt;= 0 to skip.
    - id: sms
      type: System.String[]
      description: The Sms-recipients. Each recipient must be in correct format
    content.vb: Public Sub SendTicketMessageSms(ticketMessageEntityId As Integer, replyTemplateId As Integer, sms As String())
  overload: SuperOffice.CRM.Services.TicketAgent.SendTicketMessageSms*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.SendTicketMessageSms(System.Int32,System.Int32,System.String[])
  nameWithType.vb: TicketAgent.SendTicketMessageSms(Int32, Int32, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.Services.TicketAgent.SendTicketMessageSms(System.Int32, System.Int32, System.String())
  name.vb: SendTicketMessageSms(Int32, Int32, String())
- uid: SuperOffice.CRM.Services.TicketAgent.SetTicketMessageImportant(System.Int32,System.Boolean)
  commentId: M:SuperOffice.CRM.Services.TicketAgent.SetTicketMessageImportant(System.Int32,System.Boolean)
  id: SetTicketMessageImportant(System.Int32,System.Boolean)
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: SetTicketMessageImportant(Int32, Boolean)
  nameWithType: TicketAgent.SetTicketMessageImportant(Int32, Boolean)
  fullName: SuperOffice.CRM.Services.TicketAgent.SetTicketMessageImportant(System.Int32, System.Boolean)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSet the important flag on or off for a ticket message\n"
  syntax:
    content: public void SetTicketMessageImportant(int ticketMessageId, bool important)
    parameters:
    - id: ticketMessageId
      type: System.Int32
      description: The id of the ticket message to set the important flag on
    - id: important
      type: System.Boolean
      description: Turn on or off the important flag
    content.vb: Public Sub SetTicketMessageImportant(ticketMessageId As Integer, important As Boolean)
  overload: SuperOffice.CRM.Services.TicketAgent.SetTicketMessageImportant*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.SetTicketMessageImportant(System.Int32,System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.TicketAgent.CalculateMessageRecipients(System.Int32,SuperOffice.Data.MessageActionType,System.Int32)
  commentId: M:SuperOffice.CRM.Services.TicketAgent.CalculateMessageRecipients(System.Int32,SuperOffice.Data.MessageActionType,System.Int32)
  id: CalculateMessageRecipients(System.Int32,SuperOffice.Data.MessageActionType,System.Int32)
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: CalculateMessageRecipients(Int32, MessageActionType, Int32)
  nameWithType: TicketAgent.CalculateMessageRecipients(Int32, MessageActionType, Int32)
  fullName: SuperOffice.CRM.Services.TicketAgent.CalculateMessageRecipients(System.Int32, SuperOffice.Data.MessageActionType, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets recipients for new message\n"
  syntax:
    content: public Recipient[] CalculateMessageRecipients(int ticketId, MessageActionType actionType, int messageId)
    parameters:
    - id: ticketId
      type: System.Int32
      description: The id of the ticket
    - id: actionType
      type: SuperOffice.Data.MessageActionType
      description: Message action
    - id: messageId
      type: System.Int32
      description: Optional ID of message being replied. Value &lt;= 0 ignores parameter
    return:
      type: SuperOffice.CRM.Services.Recipient[]
      description: An array with Recipient objects
    content.vb: Public Function CalculateMessageRecipients(ticketId As Integer, actionType As MessageActionType, messageId As Integer) As Recipient()
  overload: SuperOffice.CRM.Services.TicketAgent.CalculateMessageRecipients*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.CalculateMessageRecipients(System.Int32,SuperOffice.Data.MessageActionType,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.TicketAgent.SaveTicketMessageEntityWithNotify(SuperOffice.CRM.Services.TicketMessageEntity,System.Boolean)
  commentId: M:SuperOffice.CRM.Services.TicketAgent.SaveTicketMessageEntityWithNotify(SuperOffice.CRM.Services.TicketMessageEntity,System.Boolean)
  id: SaveTicketMessageEntityWithNotify(SuperOffice.CRM.Services.TicketMessageEntity,System.Boolean)
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: SaveTicketMessageEntityWithNotify(TicketMessageEntity, Boolean)
  nameWithType: TicketAgent.SaveTicketMessageEntityWithNotify(TicketMessageEntity, Boolean)
  fullName: SuperOffice.CRM.Services.TicketAgent.SaveTicketMessageEntityWithNotify(SuperOffice.CRM.Services.TicketMessageEntity, System.Boolean)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSaves a ticket message and performs any user notifications\n"
  syntax:
    content: public TicketMessageEntity SaveTicketMessageEntityWithNotify(TicketMessageEntity newEntity, bool notify)
    parameters:
    - id: newEntity
      type: SuperOffice.CRM.Services.TicketMessageEntity
      description: The ticket message to save
    - id: notify
      type: System.Boolean
      description: If true, then the notification will be sent along with the save
    return:
      type: SuperOffice.CRM.Services.TicketMessageEntity
      description: The saved entity
    content.vb: Public Function SaveTicketMessageEntityWithNotify(newEntity As TicketMessageEntity, notify As Boolean) As TicketMessageEntity
  overload: SuperOffice.CRM.Services.TicketAgent.SaveTicketMessageEntityWithNotify*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.SaveTicketMessageEntityWithNotify(SuperOffice.CRM.Services.TicketMessageEntity,System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.TicketAgent.SaveTicketMessageEntityWithOptions(SuperOffice.CRM.Services.TicketMessageEntity,System.Boolean,System.Int32[],System.Boolean)
  commentId: M:SuperOffice.CRM.Services.TicketAgent.SaveTicketMessageEntityWithOptions(SuperOffice.CRM.Services.TicketMessageEntity,System.Boolean,System.Int32[],System.Boolean)
  id: SaveTicketMessageEntityWithOptions(SuperOffice.CRM.Services.TicketMessageEntity,System.Boolean,System.Int32[],System.Boolean)
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: SaveTicketMessageEntityWithOptions(TicketMessageEntity, Boolean, Int32[], Boolean)
  nameWithType: TicketAgent.SaveTicketMessageEntityWithOptions(TicketMessageEntity, Boolean, Int32[], Boolean)
  fullName: SuperOffice.CRM.Services.TicketAgent.SaveTicketMessageEntityWithOptions(SuperOffice.CRM.Services.TicketMessageEntity, System.Boolean, System.Int32[], System.Boolean)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSaves a ticket message and performs additional actions\n"
  syntax:
    content: public TicketMessageEntity SaveTicketMessageEntityWithOptions(TicketMessageEntity entity, bool notify, int[] attachmentIds, bool updateRepliedAt)
    parameters:
    - id: entity
      type: SuperOffice.CRM.Services.TicketMessageEntity
      description: The ticket message to save
    - id: notify
      type: System.Boolean
      description: If true, then the notification will be sent along with the save
    - id: attachmentIds
      type: System.Int32[]
      description: An array of attachments to connect to this TicketMessage
    - id: updateRepliedAt
      type: System.Boolean
      description: Updates ticket&apos;s replied_at field if needed
    return:
      type: SuperOffice.CRM.Services.TicketMessageEntity
      description: The saved entity
    content.vb: Public Function SaveTicketMessageEntityWithOptions(entity As TicketMessageEntity, notify As Boolean, attachmentIds As Integer(), updateRepliedAt As Boolean) As TicketMessageEntity
  overload: SuperOffice.CRM.Services.TicketAgent.SaveTicketMessageEntityWithOptions*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.SaveTicketMessageEntityWithOptions(SuperOffice.CRM.Services.TicketMessageEntity,System.Boolean,System.Int32[],System.Boolean)
  nameWithType.vb: TicketAgent.SaveTicketMessageEntityWithOptions(TicketMessageEntity, Boolean, Int32(), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.Services.TicketAgent.SaveTicketMessageEntityWithOptions(SuperOffice.CRM.Services.TicketMessageEntity, System.Boolean, System.Int32(), System.Boolean)
  name.vb: SaveTicketMessageEntityWithOptions(TicketMessageEntity, Boolean, Int32(), Boolean)
- uid: SuperOffice.CRM.Services.TicketAgent.GetDefaultMessageContent(System.Int32,SuperOffice.Data.MessageActionType,System.Int32)
  commentId: M:SuperOffice.CRM.Services.TicketAgent.GetDefaultMessageContent(System.Int32,SuperOffice.Data.MessageActionType,System.Int32)
  id: GetDefaultMessageContent(System.Int32,SuperOffice.Data.MessageActionType,System.Int32)
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: GetDefaultMessageContent(Int32, MessageActionType, Int32)
  nameWithType: TicketAgent.GetDefaultMessageContent(Int32, MessageActionType, Int32)
  fullName: SuperOffice.CRM.Services.TicketAgent.GetDefaultMessageContent(System.Int32, SuperOffice.Data.MessageActionType, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nObsolete, use GetDefaultMessageContentFull instead\n"
  syntax:
    content: public string GetDefaultMessageContent(int ticketId, MessageActionType messageActionType, int ticketMessageId)
    parameters:
    - id: ticketId
      type: System.Int32
      description: The id of the ticket
    - id: messageActionType
      type: SuperOffice.Data.MessageActionType
      description: 'Message action type: None/Reply/ReplyAll/Forward'
    - id: ticketMessageId
      type: System.Int32
      description: The id of the message to quote in the returned content. 0 to skip/ignore
    return:
      type: System.String
      description: Sanitized HTML content
    content.vb: Public Function GetDefaultMessageContent(ticketId As Integer, messageActionType As MessageActionType, ticketMessageId As Integer) As String
  overload: SuperOffice.CRM.Services.TicketAgent.GetDefaultMessageContent*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.GetDefaultMessageContent(System.Int32,SuperOffice.Data.MessageActionType,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.TicketAgent.GetDefaultMessageContentFull(System.Int32,SuperOffice.Data.MessageActionType,System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.TicketAgent.GetDefaultMessageContentFull(System.Int32,SuperOffice.Data.MessageActionType,System.Int32,System.Int32)
  id: GetDefaultMessageContentFull(System.Int32,SuperOffice.Data.MessageActionType,System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: GetDefaultMessageContentFull(Int32, MessageActionType, Int32, Int32)
  nameWithType: TicketAgent.GetDefaultMessageContentFull(Int32, MessageActionType, Int32, Int32)
  fullName: SuperOffice.CRM.Services.TicketAgent.GetDefaultMessageContentFull(System.Int32, SuperOffice.Data.MessageActionType, System.Int32, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGenerate a default message content: attachments and body as sanitized HTML\n"
  syntax:
    content: public TicketMessageContent GetDefaultMessageContentFull(int ticketId, MessageActionType messageActionType, int ticketMessageId, int ticketTypeId)
    parameters:
    - id: ticketId
      type: System.Int32
      description: The id of the ticket
    - id: messageActionType
      type: SuperOffice.Data.MessageActionType
      description: 'Message action type: None/Reply/ReplyAll/Forward'
    - id: ticketMessageId
      type: System.Int32
      description: The id of the message to quote in the returned content. 0 to skip/ignore
    - id: ticketTypeId
      type: System.Int32
      description: The id of the ticket type to look for reply template. 0 to use current ticket type
    return:
      type: SuperOffice.CRM.Services.TicketMessageContent
      description: Generated default message content
    content.vb: Public Function GetDefaultMessageContentFull(ticketId As Integer, messageActionType As MessageActionType, ticketMessageId As Integer, ticketTypeId As Integer) As TicketMessageContent
  overload: SuperOffice.CRM.Services.TicketAgent.GetDefaultMessageContentFull*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.GetDefaultMessageContentFull(System.Int32,SuperOffice.Data.MessageActionType,System.Int32,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.TicketAgent.GetDefaultMessageContentWithOptions(System.Int32,SuperOffice.Data.MessageActionType,System.Int32,System.Int32,System.Boolean)
  commentId: M:SuperOffice.CRM.Services.TicketAgent.GetDefaultMessageContentWithOptions(System.Int32,SuperOffice.Data.MessageActionType,System.Int32,System.Int32,System.Boolean)
  id: GetDefaultMessageContentWithOptions(System.Int32,SuperOffice.Data.MessageActionType,System.Int32,System.Int32,System.Boolean)
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: GetDefaultMessageContentWithOptions(Int32, MessageActionType, Int32, Int32, Boolean)
  nameWithType: TicketAgent.GetDefaultMessageContentWithOptions(Int32, MessageActionType, Int32, Int32, Boolean)
  fullName: SuperOffice.CRM.Services.TicketAgent.GetDefaultMessageContentWithOptions(System.Int32, SuperOffice.Data.MessageActionType, System.Int32, System.Int32, System.Boolean)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGenerate a default message content with option to exclude signature: attachments and body as sanitized HTML\n"
  syntax:
    content: public TicketMessageContent GetDefaultMessageContentWithOptions(int ticketId, MessageActionType messageActionType, int ticketMessageId, int ticketTypeId, bool excludeSignature)
    parameters:
    - id: ticketId
      type: System.Int32
      description: The id of the ticket
    - id: messageActionType
      type: SuperOffice.Data.MessageActionType
      description: 'Message action type: None/Reply/ReplyAll/Forward'
    - id: ticketMessageId
      type: System.Int32
      description: The id of the message to quote in the returned content. 0 to skip/ignore
    - id: ticketTypeId
      type: System.Int32
      description: The id of the ticket type to look for reply template. 0 to use current ticket type
    - id: excludeSignature
      type: System.Boolean
      description: Flag to exclude a signature when generating the return content
    return:
      type: SuperOffice.CRM.Services.TicketMessageContent
      description: Generated default message content
    content.vb: Public Function GetDefaultMessageContentWithOptions(ticketId As Integer, messageActionType As MessageActionType, ticketMessageId As Integer, ticketTypeId As Integer, excludeSignature As Boolean) As TicketMessageContent
  overload: SuperOffice.CRM.Services.TicketAgent.GetDefaultMessageContentWithOptions*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.GetDefaultMessageContentWithOptions(System.Int32,SuperOffice.Data.MessageActionType,System.Int32,System.Int32,System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.TicketAgent.GetTicketMessageWithEmbeddedData(System.Int32,SuperOffice.Data.ImageEmbedType)
  commentId: M:SuperOffice.CRM.Services.TicketAgent.GetTicketMessageWithEmbeddedData(System.Int32,SuperOffice.Data.ImageEmbedType)
  id: GetTicketMessageWithEmbeddedData(System.Int32,SuperOffice.Data.ImageEmbedType)
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: GetTicketMessageWithEmbeddedData(Int32, ImageEmbedType)
  nameWithType: TicketAgent.GetTicketMessageWithEmbeddedData(Int32, ImageEmbedType)
  fullName: SuperOffice.CRM.Services.TicketAgent.GetTicketMessageWithEmbeddedData(System.Int32, SuperOffice.Data.ImageEmbedType)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet a ticket message entity with posibillity to change embedded images to be represented with inline data within the HTML body. If using inline data, be sure not to save this back to the database.\n"
  syntax:
    content: public TicketMessageEntity GetTicketMessageWithEmbeddedData(int id, ImageEmbedType embedImages)
    parameters:
    - id: id
      type: System.Int32
      description: The id of the ticket message entity
    - id: embedImages
      type: SuperOffice.Data.ImageEmbedType
      description: 'If set to Inline, then use inline base64 data to represent the images in the HTML body. Default: Link will use link to the image.'
    return:
      type: SuperOffice.CRM.Services.TicketMessageEntity
      description: The entity to get
    content.vb: Public Function GetTicketMessageWithEmbeddedData(id As Integer, embedImages As ImageEmbedType) As TicketMessageEntity
  overload: SuperOffice.CRM.Services.TicketAgent.GetTicketMessageWithEmbeddedData*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageWithEmbeddedData(System.Int32,SuperOffice.Data.ImageEmbedType)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.TicketAgent.DeleteMessageHeaders(System.Int32[])
  commentId: M:SuperOffice.CRM.Services.TicketAgent.DeleteMessageHeaders(System.Int32[])
  id: DeleteMessageHeaders(System.Int32[])
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: DeleteMessageHeaders(Int32[])
  nameWithType: TicketAgent.DeleteMessageHeaders(Int32[])
  fullName: SuperOffice.CRM.Services.TicketAgent.DeleteMessageHeaders(System.Int32[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nRemoves headers from the message as specified in the collection of entity ids. The ids are message header ids (message header primary key)\n"
  syntax:
    content: public void DeleteMessageHeaders(int[] headerIds)
    parameters:
    - id: headerIds
      type: System.Int32[]
      description: Message header primary keys
    content.vb: Public Sub DeleteMessageHeaders(headerIds As Integer())
  overload: SuperOffice.CRM.Services.TicketAgent.DeleteMessageHeaders*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.DeleteMessageHeaders(System.Int32[])
  nameWithType.vb: TicketAgent.DeleteMessageHeaders(Int32())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.Services.TicketAgent.DeleteMessageHeaders(System.Int32())
  name.vb: DeleteMessageHeaders(Int32())
- uid: SuperOffice.CRM.Services.TicketAgent.GetTicketMessageWithOptions(System.Int32,System.Boolean)
  commentId: M:SuperOffice.CRM.Services.TicketAgent.GetTicketMessageWithOptions(System.Int32,System.Boolean)
  id: GetTicketMessageWithOptions(System.Int32,System.Boolean)
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: GetTicketMessageWithOptions(Int32, Boolean)
  nameWithType: TicketAgent.GetTicketMessageWithOptions(Int32, Boolean)
  fullName: SuperOffice.CRM.Services.TicketAgent.GetTicketMessageWithOptions(System.Int32, System.Boolean)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet a ticket message entity with additional options.\n"
  syntax:
    content: public TicketMessageEntity GetTicketMessageWithOptions(int ticketMessageEntityId, bool includeNonInlineAttachmentsInfo)
    parameters:
    - id: ticketMessageEntityId
      type: System.Int32
      description: The id of the ticket message entity
    - id: includeNonInlineAttachmentsInfo
      type: System.Boolean
      description: If true, then non inline attachments info will be loaded into TicketMessageEntity
    return:
      type: SuperOffice.CRM.Services.TicketMessageEntity
      description: The entity to get
    content.vb: Public Function GetTicketMessageWithOptions(ticketMessageEntityId As Integer, includeNonInlineAttachmentsInfo As Boolean) As TicketMessageEntity
  overload: SuperOffice.CRM.Services.TicketAgent.GetTicketMessageWithOptions*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageWithOptions(System.Int32,System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.TicketAgent.GetTicketSummaries(System.Int32[])
  commentId: M:SuperOffice.CRM.Services.TicketAgent.GetTicketSummaries(System.Int32[])
  id: GetTicketSummaries(System.Int32[])
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: GetTicketSummaries(Int32[])
  nameWithType: TicketAgent.GetTicketSummaries(Int32[])
  fullName: SuperOffice.CRM.Services.TicketAgent.GetTicketSummaries(System.Int32[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet an array of summaryitem for the given tickets\n"
  syntax:
    content: public TicketSummaryItem[] GetTicketSummaries(int[] ticketIds)
    parameters:
    - id: ticketIds
      type: System.Int32[]
      description: The tickets to fetch summaries for
    return:
      type: SuperOffice.CRM.Services.TicketSummaryItem[]
      description: Summary items for the given id&apos;s, in no particular order
    content.vb: Public Function GetTicketSummaries(ticketIds As Integer()) As TicketSummaryItem()
  overload: SuperOffice.CRM.Services.TicketAgent.GetTicketSummaries*
  implements:
  - SuperOffice.CRM.Services.ITicketAgent.GetTicketSummaries(System.Int32[])
  nameWithType.vb: TicketAgent.GetTicketSummaries(Int32())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.Services.TicketAgent.GetTicketSummaries(System.Int32())
  name.vb: GetTicketSummaries(Int32())
- uid: SuperOffice.CRM.Services.TicketAgent.#ctor
  commentId: M:SuperOffice.CRM.Services.TicketAgent.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.Services.TicketAgent
  langs:
  - csharp
  - vb
  name: TicketAgent()
  nameWithType: TicketAgent.TicketAgent()
  fullName: SuperOffice.CRM.Services.TicketAgent.TicketAgent()
  type: Constructor
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  syntax:
    content: public TicketAgent()
    content.vb: Public Sub New
  overload: SuperOffice.CRM.Services.TicketAgent.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
- uid: SuperOffice.CRM.Services.AgentBase{SuperOffice.CRM.Services.ITicketAgent}
  commentId: T:SuperOffice.CRM.Services.AgentBase{SuperOffice.CRM.Services.ITicketAgent}
  parent: SuperOffice.CRM.Services
  definition: SuperOffice.CRM.Services.AgentBase`1
  name: AgentBase<ITicketAgent>
  nameWithType: AgentBase<ITicketAgent>
  fullName: SuperOffice.CRM.Services.AgentBase<SuperOffice.CRM.Services.ITicketAgent>
  nameWithType.vb: AgentBase(Of ITicketAgent)
  fullName.vb: SuperOffice.CRM.Services.AgentBase(Of SuperOffice.CRM.Services.ITicketAgent)
  name.vb: AgentBase(Of ITicketAgent)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.AgentBase`1
    name: AgentBase
    nameWithType: AgentBase
    fullName: SuperOffice.CRM.Services.AgentBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Services.ITicketAgent
    name: ITicketAgent
    nameWithType: ITicketAgent
    fullName: SuperOffice.CRM.Services.ITicketAgent
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Services.AgentBase`1
    name: AgentBase
    nameWithType: AgentBase
    fullName: SuperOffice.CRM.Services.AgentBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Services.ITicketAgent
    name: ITicketAgent
    nameWithType: ITicketAgent
    fullName: SuperOffice.CRM.Services.ITicketAgent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: SuperOffice.CRM.Services.ITicketAgent
  commentId: T:SuperOffice.CRM.Services.ITicketAgent
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: ITicketAgent
  nameWithType: ITicketAgent
  fullName: SuperOffice.CRM.Services.ITicketAgent
- uid: SuperOffice.CRM.Services.IAgent
  commentId: T:SuperOffice.CRM.Services.IAgent
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: IAgent
  nameWithType: IAgent
  fullName: SuperOffice.CRM.Services.IAgent
- uid: SuperOffice.CRM.Services.AgentBase{SuperOffice.CRM.Services.ITicketAgent}.Dispose
  commentId: M:SuperOffice.CRM.Services.AgentBase{SuperOffice.CRM.Services.ITicketAgent}.Dispose
  parent: SuperOffice.CRM.Services.AgentBase{SuperOffice.CRM.Services.ITicketAgent}
  definition: SuperOffice.CRM.Services.AgentBase`1.Dispose
  name: Dispose()
  nameWithType: AgentBase<ITicketAgent>.Dispose()
  fullName: SuperOffice.CRM.Services.AgentBase<SuperOffice.CRM.Services.ITicketAgent>.Dispose()
  nameWithType.vb: AgentBase(Of ITicketAgent).Dispose()
  fullName.vb: SuperOffice.CRM.Services.AgentBase(Of SuperOffice.CRM.Services.ITicketAgent).Dispose()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.AgentBase`1.Dispose
    name: Dispose
    nameWithType: AgentBase<ITicketAgent>.Dispose
    fullName: SuperOffice.CRM.Services.AgentBase<SuperOffice.CRM.Services.ITicketAgent>.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.AgentBase`1.Dispose
    name: Dispose
    nameWithType: AgentBase(Of ITicketAgent).Dispose
    fullName: SuperOffice.CRM.Services.AgentBase(Of SuperOffice.CRM.Services.ITicketAgent).Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.AgentBase{SuperOffice.CRM.Services.ITicketAgent}.InnerAgent
  commentId: P:SuperOffice.CRM.Services.AgentBase{SuperOffice.CRM.Services.ITicketAgent}.InnerAgent
  parent: SuperOffice.CRM.Services.AgentBase{SuperOffice.CRM.Services.ITicketAgent}
  definition: SuperOffice.CRM.Services.AgentBase`1.InnerAgent
  name: InnerAgent
  nameWithType: AgentBase<ITicketAgent>.InnerAgent
  fullName: SuperOffice.CRM.Services.AgentBase<SuperOffice.CRM.Services.ITicketAgent>.InnerAgent
  nameWithType.vb: AgentBase(Of ITicketAgent).InnerAgent
  fullName.vb: SuperOffice.CRM.Services.AgentBase(Of SuperOffice.CRM.Services.ITicketAgent).InnerAgent
- uid: SuperOffice.CRM.Services.AgentBase`1
  commentId: T:SuperOffice.CRM.Services.AgentBase`1
  isExternal: true
  name: AgentBase<TAgent>
  nameWithType: AgentBase<TAgent>
  fullName: SuperOffice.CRM.Services.AgentBase<TAgent>
  nameWithType.vb: AgentBase(Of TAgent)
  fullName.vb: SuperOffice.CRM.Services.AgentBase(Of TAgent)
  name.vb: AgentBase(Of TAgent)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.AgentBase`1
    name: AgentBase
    nameWithType: AgentBase
    fullName: SuperOffice.CRM.Services.AgentBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TAgent
    nameWithType: TAgent
    fullName: TAgent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Services.AgentBase`1
    name: AgentBase
    nameWithType: AgentBase
    fullName: SuperOffice.CRM.Services.AgentBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAgent
    nameWithType: TAgent
    fullName: TAgent
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.AgentBase`1.Dispose
  commentId: M:SuperOffice.CRM.Services.AgentBase`1.Dispose
  isExternal: true
  name: Dispose()
  nameWithType: AgentBase<TAgent>.Dispose()
  fullName: SuperOffice.CRM.Services.AgentBase<TAgent>.Dispose()
  nameWithType.vb: AgentBase(Of TAgent).Dispose()
  fullName.vb: SuperOffice.CRM.Services.AgentBase(Of TAgent).Dispose()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.AgentBase`1.Dispose
    name: Dispose
    nameWithType: AgentBase<TAgent>.Dispose
    fullName: SuperOffice.CRM.Services.AgentBase<TAgent>.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.AgentBase`1.Dispose
    name: Dispose
    nameWithType: AgentBase(Of TAgent).Dispose
    fullName: SuperOffice.CRM.Services.AgentBase(Of TAgent).Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.AgentBase`1.InnerAgent
  commentId: P:SuperOffice.CRM.Services.AgentBase`1.InnerAgent
  isExternal: true
  name: InnerAgent
  nameWithType: AgentBase<TAgent>.InnerAgent
  fullName: SuperOffice.CRM.Services.AgentBase<TAgent>.InnerAgent
  nameWithType.vb: AgentBase(Of TAgent).InnerAgent
  fullName.vb: SuperOffice.CRM.Services.AgentBase(Of TAgent).InnerAgent
- uid: SuperOffice.CRM.Services.TicketAgent.CreateDefaultAttachmentEntity*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.CreateDefaultAttachmentEntity
  isExternal: true
  name: CreateDefaultAttachmentEntity
  nameWithType: TicketAgent.CreateDefaultAttachmentEntity
  fullName: SuperOffice.CRM.Services.TicketAgent.CreateDefaultAttachmentEntity
- uid: SuperOffice.CRM.Services.ITicketAgent.CreateDefaultAttachmentEntity
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.CreateDefaultAttachmentEntity
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: CreateDefaultAttachmentEntity()
  nameWithType: ITicketAgent.CreateDefaultAttachmentEntity()
  fullName: SuperOffice.CRM.Services.ITicketAgent.CreateDefaultAttachmentEntity()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.CreateDefaultAttachmentEntity
    name: CreateDefaultAttachmentEntity
    nameWithType: ITicketAgent.CreateDefaultAttachmentEntity
    fullName: SuperOffice.CRM.Services.ITicketAgent.CreateDefaultAttachmentEntity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.CreateDefaultAttachmentEntity
    name: CreateDefaultAttachmentEntity
    nameWithType: ITicketAgent.CreateDefaultAttachmentEntity
    fullName: SuperOffice.CRM.Services.ITicketAgent.CreateDefaultAttachmentEntity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.AttachmentEntity
  commentId: T:SuperOffice.CRM.Services.AttachmentEntity
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: AttachmentEntity
  nameWithType: AttachmentEntity
  fullName: SuperOffice.CRM.Services.AttachmentEntity
- uid: SuperOffice.CRM.Services.TicketAgent.SaveAttachmentEntity*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.SaveAttachmentEntity
  isExternal: true
  name: SaveAttachmentEntity
  nameWithType: TicketAgent.SaveAttachmentEntity
  fullName: SuperOffice.CRM.Services.TicketAgent.SaveAttachmentEntity
- uid: SuperOffice.CRM.Services.ITicketAgent.SaveAttachmentEntity(SuperOffice.CRM.Services.AttachmentEntity)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.SaveAttachmentEntity(SuperOffice.CRM.Services.AttachmentEntity)
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: SaveAttachmentEntity(AttachmentEntity)
  nameWithType: ITicketAgent.SaveAttachmentEntity(AttachmentEntity)
  fullName: SuperOffice.CRM.Services.ITicketAgent.SaveAttachmentEntity(SuperOffice.CRM.Services.AttachmentEntity)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.SaveAttachmentEntity(SuperOffice.CRM.Services.AttachmentEntity)
    name: SaveAttachmentEntity
    nameWithType: ITicketAgent.SaveAttachmentEntity
    fullName: SuperOffice.CRM.Services.ITicketAgent.SaveAttachmentEntity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Services.AttachmentEntity
    name: AttachmentEntity
    nameWithType: AttachmentEntity
    fullName: SuperOffice.CRM.Services.AttachmentEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.SaveAttachmentEntity(SuperOffice.CRM.Services.AttachmentEntity)
    name: SaveAttachmentEntity
    nameWithType: ITicketAgent.SaveAttachmentEntity
    fullName: SuperOffice.CRM.Services.ITicketAgent.SaveAttachmentEntity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Services.AttachmentEntity
    name: AttachmentEntity
    nameWithType: AttachmentEntity
    fullName: SuperOffice.CRM.Services.AttachmentEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.TicketAgent.CreateDefaultTicketEntity*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.CreateDefaultTicketEntity
  isExternal: true
  name: CreateDefaultTicketEntity
  nameWithType: TicketAgent.CreateDefaultTicketEntity
  fullName: SuperOffice.CRM.Services.TicketAgent.CreateDefaultTicketEntity
- uid: SuperOffice.CRM.Services.ITicketAgent.CreateDefaultTicketEntity
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.CreateDefaultTicketEntity
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: CreateDefaultTicketEntity()
  nameWithType: ITicketAgent.CreateDefaultTicketEntity()
  fullName: SuperOffice.CRM.Services.ITicketAgent.CreateDefaultTicketEntity()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.CreateDefaultTicketEntity
    name: CreateDefaultTicketEntity
    nameWithType: ITicketAgent.CreateDefaultTicketEntity
    fullName: SuperOffice.CRM.Services.ITicketAgent.CreateDefaultTicketEntity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.CreateDefaultTicketEntity
    name: CreateDefaultTicketEntity
    nameWithType: ITicketAgent.CreateDefaultTicketEntity
    fullName: SuperOffice.CRM.Services.ITicketAgent.CreateDefaultTicketEntity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.TicketEntity
  commentId: T:SuperOffice.CRM.Services.TicketEntity
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: TicketEntity
  nameWithType: TicketEntity
  fullName: SuperOffice.CRM.Services.TicketEntity
- uid: SuperOffice.CRM.Services.TicketAgent.SaveTicketEntity*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.SaveTicketEntity
  isExternal: true
  name: SaveTicketEntity
  nameWithType: TicketAgent.SaveTicketEntity
  fullName: SuperOffice.CRM.Services.TicketAgent.SaveTicketEntity
- uid: SuperOffice.CRM.Services.ITicketAgent.SaveTicketEntity(SuperOffice.CRM.Services.TicketEntity)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.SaveTicketEntity(SuperOffice.CRM.Services.TicketEntity)
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: SaveTicketEntity(TicketEntity)
  nameWithType: ITicketAgent.SaveTicketEntity(TicketEntity)
  fullName: SuperOffice.CRM.Services.ITicketAgent.SaveTicketEntity(SuperOffice.CRM.Services.TicketEntity)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.SaveTicketEntity(SuperOffice.CRM.Services.TicketEntity)
    name: SaveTicketEntity
    nameWithType: ITicketAgent.SaveTicketEntity
    fullName: SuperOffice.CRM.Services.ITicketAgent.SaveTicketEntity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Services.TicketEntity
    name: TicketEntity
    nameWithType: TicketEntity
    fullName: SuperOffice.CRM.Services.TicketEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.SaveTicketEntity(SuperOffice.CRM.Services.TicketEntity)
    name: SaveTicketEntity
    nameWithType: ITicketAgent.SaveTicketEntity
    fullName: SuperOffice.CRM.Services.ITicketAgent.SaveTicketEntity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Services.TicketEntity
    name: TicketEntity
    nameWithType: TicketEntity
    fullName: SuperOffice.CRM.Services.TicketEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.TicketAgent.CreateDefaultTicketMessageEntity*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.CreateDefaultTicketMessageEntity
  isExternal: true
  name: CreateDefaultTicketMessageEntity
  nameWithType: TicketAgent.CreateDefaultTicketMessageEntity
  fullName: SuperOffice.CRM.Services.TicketAgent.CreateDefaultTicketMessageEntity
- uid: SuperOffice.CRM.Services.ITicketAgent.CreateDefaultTicketMessageEntity
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.CreateDefaultTicketMessageEntity
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: CreateDefaultTicketMessageEntity()
  nameWithType: ITicketAgent.CreateDefaultTicketMessageEntity()
  fullName: SuperOffice.CRM.Services.ITicketAgent.CreateDefaultTicketMessageEntity()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.CreateDefaultTicketMessageEntity
    name: CreateDefaultTicketMessageEntity
    nameWithType: ITicketAgent.CreateDefaultTicketMessageEntity
    fullName: SuperOffice.CRM.Services.ITicketAgent.CreateDefaultTicketMessageEntity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.CreateDefaultTicketMessageEntity
    name: CreateDefaultTicketMessageEntity
    nameWithType: ITicketAgent.CreateDefaultTicketMessageEntity
    fullName: SuperOffice.CRM.Services.ITicketAgent.CreateDefaultTicketMessageEntity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.TicketMessageEntity
  commentId: T:SuperOffice.CRM.Services.TicketMessageEntity
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: TicketMessageEntity
  nameWithType: TicketMessageEntity
  fullName: SuperOffice.CRM.Services.TicketMessageEntity
- uid: SuperOffice.CRM.Services.TicketAgent.SaveTicketMessageEntity*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.SaveTicketMessageEntity
  isExternal: true
  name: SaveTicketMessageEntity
  nameWithType: TicketAgent.SaveTicketMessageEntity
  fullName: SuperOffice.CRM.Services.TicketAgent.SaveTicketMessageEntity
- uid: SuperOffice.CRM.Services.ITicketAgent.SaveTicketMessageEntity(SuperOffice.CRM.Services.TicketMessageEntity)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.SaveTicketMessageEntity(SuperOffice.CRM.Services.TicketMessageEntity)
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: SaveTicketMessageEntity(TicketMessageEntity)
  nameWithType: ITicketAgent.SaveTicketMessageEntity(TicketMessageEntity)
  fullName: SuperOffice.CRM.Services.ITicketAgent.SaveTicketMessageEntity(SuperOffice.CRM.Services.TicketMessageEntity)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.SaveTicketMessageEntity(SuperOffice.CRM.Services.TicketMessageEntity)
    name: SaveTicketMessageEntity
    nameWithType: ITicketAgent.SaveTicketMessageEntity
    fullName: SuperOffice.CRM.Services.ITicketAgent.SaveTicketMessageEntity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Services.TicketMessageEntity
    name: TicketMessageEntity
    nameWithType: TicketMessageEntity
    fullName: SuperOffice.CRM.Services.TicketMessageEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.SaveTicketMessageEntity(SuperOffice.CRM.Services.TicketMessageEntity)
    name: SaveTicketMessageEntity
    nameWithType: ITicketAgent.SaveTicketMessageEntity
    fullName: SuperOffice.CRM.Services.ITicketAgent.SaveTicketMessageEntity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Services.TicketMessageEntity
    name: TicketMessageEntity
    nameWithType: TicketMessageEntity
    fullName: SuperOffice.CRM.Services.TicketMessageEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.TicketAgent.GetAttachmentEntity*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.GetAttachmentEntity
  isExternal: true
  name: GetAttachmentEntity
  nameWithType: TicketAgent.GetAttachmentEntity
  fullName: SuperOffice.CRM.Services.TicketAgent.GetAttachmentEntity
- uid: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentEntity(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.GetAttachmentEntity(System.Int32)
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: GetAttachmentEntity(Int32)
  nameWithType: ITicketAgent.GetAttachmentEntity(Int32)
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentEntity(System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentEntity(System.Int32)
    name: GetAttachmentEntity
    nameWithType: ITicketAgent.GetAttachmentEntity
    fullName: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentEntity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentEntity(System.Int32)
    name: GetAttachmentEntity
    nameWithType: ITicketAgent.GetAttachmentEntity
    fullName: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentEntity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Services.TicketAgent.CopyFromCRMDocument*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.CopyFromCRMDocument
  isExternal: true
  name: CopyFromCRMDocument
  nameWithType: TicketAgent.CopyFromCRMDocument
  fullName: SuperOffice.CRM.Services.TicketAgent.CopyFromCRMDocument
- uid: SuperOffice.CRM.Services.ITicketAgent.CopyFromCRMDocument(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.CopyFromCRMDocument(System.Int32)
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: CopyFromCRMDocument(Int32)
  nameWithType: ITicketAgent.CopyFromCRMDocument(Int32)
  fullName: SuperOffice.CRM.Services.ITicketAgent.CopyFromCRMDocument(System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.CopyFromCRMDocument(System.Int32)
    name: CopyFromCRMDocument
    nameWithType: ITicketAgent.CopyFromCRMDocument
    fullName: SuperOffice.CRM.Services.ITicketAgent.CopyFromCRMDocument
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.CopyFromCRMDocument(System.Int32)
    name: CopyFromCRMDocument
    nameWithType: ITicketAgent.CopyFromCRMDocument
    fullName: SuperOffice.CRM.Services.ITicketAgent.CopyFromCRMDocument
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.TicketAgent.CopyToTempFile*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.CopyToTempFile
  isExternal: true
  name: CopyToTempFile
  nameWithType: TicketAgent.CopyToTempFile
  fullName: SuperOffice.CRM.Services.TicketAgent.CopyToTempFile
- uid: SuperOffice.CRM.Services.ITicketAgent.CopyToTempFile(System.String,System.Int32)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.CopyToTempFile(System.String,System.Int32)
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: CopyToTempFile(String, Int32)
  nameWithType: ITicketAgent.CopyToTempFile(String, Int32)
  fullName: SuperOffice.CRM.Services.ITicketAgent.CopyToTempFile(System.String, System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.CopyToTempFile(System.String,System.Int32)
    name: CopyToTempFile
    nameWithType: ITicketAgent.CopyToTempFile
    fullName: SuperOffice.CRM.Services.ITicketAgent.CopyToTempFile
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.CopyToTempFile(System.String,System.Int32)
    name: CopyToTempFile
    nameWithType: ITicketAgent.CopyToTempFile
    fullName: SuperOffice.CRM.Services.ITicketAgent.CopyToTempFile
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.Services.TicketAgent.UploadAttachment*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.UploadAttachment
  isExternal: true
  name: UploadAttachment
  nameWithType: TicketAgent.UploadAttachment
  fullName: SuperOffice.CRM.Services.TicketAgent.UploadAttachment
- uid: SuperOffice.CRM.Services.ITicketAgent.UploadAttachment(System.Int32,System.IO.Stream)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.UploadAttachment(System.Int32,System.IO.Stream)
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: UploadAttachment(Int32, Stream)
  nameWithType: ITicketAgent.UploadAttachment(Int32, Stream)
  fullName: SuperOffice.CRM.Services.ITicketAgent.UploadAttachment(System.Int32, System.IO.Stream)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.UploadAttachment(System.Int32,System.IO.Stream)
    name: UploadAttachment
    nameWithType: ITicketAgent.UploadAttachment
    fullName: SuperOffice.CRM.Services.ITicketAgent.UploadAttachment
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.UploadAttachment(System.Int32,System.IO.Stream)
    name: UploadAttachment
    nameWithType: ITicketAgent.UploadAttachment
    fullName: SuperOffice.CRM.Services.ITicketAgent.UploadAttachment
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: SuperOffice.CRM.Services.TicketAgent.GetAttachmentStream*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.GetAttachmentStream
  isExternal: true
  name: GetAttachmentStream
  nameWithType: TicketAgent.GetAttachmentStream
  fullName: SuperOffice.CRM.Services.TicketAgent.GetAttachmentStream
- uid: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentStream(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.GetAttachmentStream(System.Int32)
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: GetAttachmentStream(Int32)
  nameWithType: ITicketAgent.GetAttachmentStream(Int32)
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentStream(System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentStream(System.Int32)
    name: GetAttachmentStream
    nameWithType: ITicketAgent.GetAttachmentStream
    fullName: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentStream
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentStream(System.Int32)
    name: GetAttachmentStream
    nameWithType: ITicketAgent.GetAttachmentStream
    fullName: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentStream
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.TicketAgent.GetTicket*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.GetTicket
  isExternal: true
  name: GetTicket
  nameWithType: TicketAgent.GetTicket
  fullName: SuperOffice.CRM.Services.TicketAgent.GetTicket
- uid: SuperOffice.CRM.Services.ITicketAgent.GetTicket(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.GetTicket(System.Int32)
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: GetTicket(Int32)
  nameWithType: ITicketAgent.GetTicket(Int32)
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetTicket(System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.GetTicket(System.Int32)
    name: GetTicket
    nameWithType: ITicketAgent.GetTicket
    fullName: SuperOffice.CRM.Services.ITicketAgent.GetTicket
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.GetTicket(System.Int32)
    name: GetTicket
    nameWithType: ITicketAgent.GetTicket
    fullName: SuperOffice.CRM.Services.ITicketAgent.GetTicket
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.Ticket
  commentId: T:SuperOffice.CRM.Services.Ticket
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: Ticket
  nameWithType: Ticket
  fullName: SuperOffice.CRM.Services.Ticket
- uid: SuperOffice.CRM.Services.TicketAgent.GetTickets*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.GetTickets
  isExternal: true
  name: GetTickets
  nameWithType: TicketAgent.GetTickets
  fullName: SuperOffice.CRM.Services.TicketAgent.GetTickets
- uid: SuperOffice.CRM.Services.ITicketAgent.GetTickets(System.Int32[])
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.GetTickets(System.Int32[])
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: GetTickets(Int32[])
  nameWithType: ITicketAgent.GetTickets(Int32[])
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetTickets(System.Int32[])
  nameWithType.vb: ITicketAgent.GetTickets(Int32())
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.GetTickets(System.Int32())
  name.vb: GetTickets(Int32())
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.GetTickets(System.Int32[])
    name: GetTickets
    nameWithType: ITicketAgent.GetTickets
    fullName: SuperOffice.CRM.Services.ITicketAgent.GetTickets
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.GetTickets(System.Int32[])
    name: GetTickets
    nameWithType: ITicketAgent.GetTickets
    fullName: SuperOffice.CRM.Services.ITicketAgent.GetTickets
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.Ticket[]
  isExternal: true
  name: Ticket[]
  nameWithType: Ticket[]
  fullName: SuperOffice.CRM.Services.Ticket[]
  nameWithType.vb: Ticket()
  fullName.vb: SuperOffice.CRM.Services.Ticket()
  name.vb: Ticket()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.Ticket
    name: Ticket
    nameWithType: Ticket
    fullName: SuperOffice.CRM.Services.Ticket
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.Services.Ticket
    name: Ticket
    nameWithType: Ticket
    fullName: SuperOffice.CRM.Services.Ticket
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.TicketAgent.GetTicketEntity*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.GetTicketEntity
  isExternal: true
  name: GetTicketEntity
  nameWithType: TicketAgent.GetTicketEntity
  fullName: SuperOffice.CRM.Services.TicketAgent.GetTicketEntity
- uid: SuperOffice.CRM.Services.ITicketAgent.GetTicketEntity(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.GetTicketEntity(System.Int32)
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: GetTicketEntity(Int32)
  nameWithType: ITicketAgent.GetTicketEntity(Int32)
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetTicketEntity(System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.GetTicketEntity(System.Int32)
    name: GetTicketEntity
    nameWithType: ITicketAgent.GetTicketEntity
    fullName: SuperOffice.CRM.Services.ITicketAgent.GetTicketEntity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.GetTicketEntity(System.Int32)
    name: GetTicketEntity
    nameWithType: ITicketAgent.GetTicketEntity
    fullName: SuperOffice.CRM.Services.ITicketAgent.GetTicketEntity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.TicketAgent.GetForRmUi*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.GetForRmUi
  isExternal: true
  name: GetForRmUi
  nameWithType: TicketAgent.GetForRmUi
  fullName: SuperOffice.CRM.Services.TicketAgent.GetForRmUi
- uid: SuperOffice.CRM.Services.ITicketAgent.GetForRmUi(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.GetForRmUi(System.Int32)
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: GetForRmUi(Int32)
  nameWithType: ITicketAgent.GetForRmUi(Int32)
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetForRmUi(System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.GetForRmUi(System.Int32)
    name: GetForRmUi
    nameWithType: ITicketAgent.GetForRmUi
    fullName: SuperOffice.CRM.Services.ITicketAgent.GetForRmUi
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.GetForRmUi(System.Int32)
    name: GetForRmUi
    nameWithType: ITicketAgent.GetForRmUi
    fullName: SuperOffice.CRM.Services.ITicketAgent.GetForRmUi
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.TicketAgent.DeleteTicketEntity*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.DeleteTicketEntity
  isExternal: true
  name: DeleteTicketEntity
  nameWithType: TicketAgent.DeleteTicketEntity
  fullName: SuperOffice.CRM.Services.TicketAgent.DeleteTicketEntity
- uid: SuperOffice.CRM.Services.ITicketAgent.DeleteTicketEntity(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.DeleteTicketEntity(System.Int32)
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: DeleteTicketEntity(Int32)
  nameWithType: ITicketAgent.DeleteTicketEntity(Int32)
  fullName: SuperOffice.CRM.Services.ITicketAgent.DeleteTicketEntity(System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.DeleteTicketEntity(System.Int32)
    name: DeleteTicketEntity
    nameWithType: ITicketAgent.DeleteTicketEntity
    fullName: SuperOffice.CRM.Services.ITicketAgent.DeleteTicketEntity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.DeleteTicketEntity(System.Int32)
    name: DeleteTicketEntity
    nameWithType: ITicketAgent.DeleteTicketEntity
    fullName: SuperOffice.CRM.Services.ITicketAgent.DeleteTicketEntity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.TicketAgent.NotifyNewTicket*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.NotifyNewTicket
  isExternal: true
  name: NotifyNewTicket
  nameWithType: TicketAgent.NotifyNewTicket
  fullName: SuperOffice.CRM.Services.TicketAgent.NotifyNewTicket
- uid: SuperOffice.CRM.Services.ITicketAgent.NotifyNewTicket(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.NotifyNewTicket(System.Int32)
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: NotifyNewTicket(Int32)
  nameWithType: ITicketAgent.NotifyNewTicket(Int32)
  fullName: SuperOffice.CRM.Services.ITicketAgent.NotifyNewTicket(System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.NotifyNewTicket(System.Int32)
    name: NotifyNewTicket
    nameWithType: ITicketAgent.NotifyNewTicket
    fullName: SuperOffice.CRM.Services.ITicketAgent.NotifyNewTicket
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.NotifyNewTicket(System.Int32)
    name: NotifyNewTicket
    nameWithType: ITicketAgent.NotifyNewTicket
    fullName: SuperOffice.CRM.Services.ITicketAgent.NotifyNewTicket
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.TicketAgent.NotifyNewTicketMessage*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.NotifyNewTicketMessage
  isExternal: true
  name: NotifyNewTicketMessage
  nameWithType: TicketAgent.NotifyNewTicketMessage
  fullName: SuperOffice.CRM.Services.TicketAgent.NotifyNewTicketMessage
- uid: SuperOffice.CRM.Services.ITicketAgent.NotifyNewTicketMessage(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.NotifyNewTicketMessage(System.Int32)
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: NotifyNewTicketMessage(Int32)
  nameWithType: ITicketAgent.NotifyNewTicketMessage(Int32)
  fullName: SuperOffice.CRM.Services.ITicketAgent.NotifyNewTicketMessage(System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.NotifyNewTicketMessage(System.Int32)
    name: NotifyNewTicketMessage
    nameWithType: ITicketAgent.NotifyNewTicketMessage
    fullName: SuperOffice.CRM.Services.ITicketAgent.NotifyNewTicketMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.NotifyNewTicketMessage(System.Int32)
    name: NotifyNewTicketMessage
    nameWithType: ITicketAgent.NotifyNewTicketMessage
    fullName: SuperOffice.CRM.Services.ITicketAgent.NotifyNewTicketMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.TicketAgent.GetTicketAttachments*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.GetTicketAttachments
  isExternal: true
  name: GetTicketAttachments
  nameWithType: TicketAgent.GetTicketAttachments
  fullName: SuperOffice.CRM.Services.TicketAgent.GetTicketAttachments
- uid: SuperOffice.CRM.Services.ITicketAgent.GetTicketAttachments(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.GetTicketAttachments(System.Int32)
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: GetTicketAttachments(Int32)
  nameWithType: ITicketAgent.GetTicketAttachments(Int32)
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetTicketAttachments(System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.GetTicketAttachments(System.Int32)
    name: GetTicketAttachments
    nameWithType: ITicketAgent.GetTicketAttachments
    fullName: SuperOffice.CRM.Services.ITicketAgent.GetTicketAttachments
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.GetTicketAttachments(System.Int32)
    name: GetTicketAttachments
    nameWithType: ITicketAgent.GetTicketAttachments
    fullName: SuperOffice.CRM.Services.ITicketAgent.GetTicketAttachments
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.AttachmentEntity[]
  isExternal: true
  name: AttachmentEntity[]
  nameWithType: AttachmentEntity[]
  fullName: SuperOffice.CRM.Services.AttachmentEntity[]
  nameWithType.vb: AttachmentEntity()
  fullName.vb: SuperOffice.CRM.Services.AttachmentEntity()
  name.vb: AttachmentEntity()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.AttachmentEntity
    name: AttachmentEntity
    nameWithType: AttachmentEntity
    fullName: SuperOffice.CRM.Services.AttachmentEntity
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.Services.AttachmentEntity
    name: AttachmentEntity
    nameWithType: AttachmentEntity
    fullName: SuperOffice.CRM.Services.AttachmentEntity
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.TicketAgent.ValidateAttachments*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.ValidateAttachments
  isExternal: true
  name: ValidateAttachments
  nameWithType: TicketAgent.ValidateAttachments
  fullName: SuperOffice.CRM.Services.TicketAgent.ValidateAttachments
- uid: SuperOffice.CRM.Services.ITicketAgent.ValidateAttachments(System.Int32[])
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.ValidateAttachments(System.Int32[])
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: ValidateAttachments(Int32[])
  nameWithType: ITicketAgent.ValidateAttachments(Int32[])
  fullName: SuperOffice.CRM.Services.ITicketAgent.ValidateAttachments(System.Int32[])
  nameWithType.vb: ITicketAgent.ValidateAttachments(Int32())
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.ValidateAttachments(System.Int32())
  name.vb: ValidateAttachments(Int32())
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.ValidateAttachments(System.Int32[])
    name: ValidateAttachments
    nameWithType: ITicketAgent.ValidateAttachments
    fullName: SuperOffice.CRM.Services.ITicketAgent.ValidateAttachments
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.ValidateAttachments(System.Int32[])
    name: ValidateAttachments
    nameWithType: ITicketAgent.ValidateAttachments
    fullName: SuperOffice.CRM.Services.ITicketAgent.ValidateAttachments
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.AttachmentValidationResult[]
  isExternal: true
  name: AttachmentValidationResult[]
  nameWithType: AttachmentValidationResult[]
  fullName: SuperOffice.CRM.Services.AttachmentValidationResult[]
  nameWithType.vb: AttachmentValidationResult()
  fullName.vb: SuperOffice.CRM.Services.AttachmentValidationResult()
  name.vb: AttachmentValidationResult()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.AttachmentValidationResult
    name: AttachmentValidationResult
    nameWithType: AttachmentValidationResult
    fullName: SuperOffice.CRM.Services.AttachmentValidationResult
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.Services.AttachmentValidationResult
    name: AttachmentValidationResult
    nameWithType: AttachmentValidationResult
    fullName: SuperOffice.CRM.Services.AttachmentValidationResult
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.TicketAgent.SetTicketReadByOwner*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.SetTicketReadByOwner
  isExternal: true
  name: SetTicketReadByOwner
  nameWithType: TicketAgent.SetTicketReadByOwner
  fullName: SuperOffice.CRM.Services.TicketAgent.SetTicketReadByOwner
- uid: SuperOffice.CRM.Services.ITicketAgent.SetTicketReadByOwner(System.Int32,SuperOffice.Data.TicketReadStatus,System.Boolean)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.SetTicketReadByOwner(System.Int32,SuperOffice.Data.TicketReadStatus,System.Boolean)
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: SetTicketReadByOwner(Int32, TicketReadStatus, Boolean)
  nameWithType: ITicketAgent.SetTicketReadByOwner(Int32, TicketReadStatus, Boolean)
  fullName: SuperOffice.CRM.Services.ITicketAgent.SetTicketReadByOwner(System.Int32, SuperOffice.Data.TicketReadStatus, System.Boolean)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.SetTicketReadByOwner(System.Int32,SuperOffice.Data.TicketReadStatus,System.Boolean)
    name: SetTicketReadByOwner
    nameWithType: ITicketAgent.SetTicketReadByOwner
    fullName: SuperOffice.CRM.Services.ITicketAgent.SetTicketReadByOwner
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.TicketReadStatus
    name: TicketReadStatus
    nameWithType: TicketReadStatus
    fullName: SuperOffice.Data.TicketReadStatus
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.SetTicketReadByOwner(System.Int32,SuperOffice.Data.TicketReadStatus,System.Boolean)
    name: SetTicketReadByOwner
    nameWithType: ITicketAgent.SetTicketReadByOwner
    fullName: SuperOffice.CRM.Services.ITicketAgent.SetTicketReadByOwner
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.TicketReadStatus
    name: TicketReadStatus
    nameWithType: TicketReadStatus
    fullName: SuperOffice.Data.TicketReadStatus
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.TicketReadStatus
  isExternal: true
  name: TicketReadStatus
  nameWithType: TicketReadStatus
  fullName: SuperOffice.Data.TicketReadStatus
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.CRM.Services.TicketAgent.SaveTicketEntityWithNotify*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.SaveTicketEntityWithNotify
  isExternal: true
  name: SaveTicketEntityWithNotify
  nameWithType: TicketAgent.SaveTicketEntityWithNotify
  fullName: SuperOffice.CRM.Services.TicketAgent.SaveTicketEntityWithNotify
- uid: SuperOffice.CRM.Services.ITicketAgent.SaveTicketEntityWithNotify(SuperOffice.CRM.Services.TicketEntity,System.Boolean)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.SaveTicketEntityWithNotify(SuperOffice.CRM.Services.TicketEntity,System.Boolean)
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: SaveTicketEntityWithNotify(TicketEntity, Boolean)
  nameWithType: ITicketAgent.SaveTicketEntityWithNotify(TicketEntity, Boolean)
  fullName: SuperOffice.CRM.Services.ITicketAgent.SaveTicketEntityWithNotify(SuperOffice.CRM.Services.TicketEntity, System.Boolean)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.SaveTicketEntityWithNotify(SuperOffice.CRM.Services.TicketEntity,System.Boolean)
    name: SaveTicketEntityWithNotify
    nameWithType: ITicketAgent.SaveTicketEntityWithNotify
    fullName: SuperOffice.CRM.Services.ITicketAgent.SaveTicketEntityWithNotify
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Services.TicketEntity
    name: TicketEntity
    nameWithType: TicketEntity
    fullName: SuperOffice.CRM.Services.TicketEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.SaveTicketEntityWithNotify(SuperOffice.CRM.Services.TicketEntity,System.Boolean)
    name: SaveTicketEntityWithNotify
    nameWithType: ITicketAgent.SaveTicketEntityWithNotify
    fullName: SuperOffice.CRM.Services.ITicketAgent.SaveTicketEntityWithNotify
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Services.TicketEntity
    name: TicketEntity
    nameWithType: TicketEntity
    fullName: SuperOffice.CRM.Services.TicketEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.TicketAgent.GetNextInQueue*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.GetNextInQueue
  isExternal: true
  name: GetNextInQueue
  nameWithType: TicketAgent.GetNextInQueue
  fullName: SuperOffice.CRM.Services.TicketAgent.GetNextInQueue
- uid: SuperOffice.CRM.Services.ITicketAgent.GetNextInQueue
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.GetNextInQueue
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: GetNextInQueue()
  nameWithType: ITicketAgent.GetNextInQueue()
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetNextInQueue()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.GetNextInQueue
    name: GetNextInQueue
    nameWithType: ITicketAgent.GetNextInQueue
    fullName: SuperOffice.CRM.Services.ITicketAgent.GetNextInQueue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.GetNextInQueue
    name: GetNextInQueue
    nameWithType: ITicketAgent.GetNextInQueue
    fullName: SuperOffice.CRM.Services.ITicketAgent.GetNextInQueue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.TicketAgent.ProcessTicketWhenRead*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.ProcessTicketWhenRead
  isExternal: true
  name: ProcessTicketWhenRead
  nameWithType: TicketAgent.ProcessTicketWhenRead
  fullName: SuperOffice.CRM.Services.TicketAgent.ProcessTicketWhenRead
- uid: SuperOffice.CRM.Services.ITicketAgent.ProcessTicketWhenRead(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.ProcessTicketWhenRead(System.Int32)
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: ProcessTicketWhenRead(Int32)
  nameWithType: ITicketAgent.ProcessTicketWhenRead(Int32)
  fullName: SuperOffice.CRM.Services.ITicketAgent.ProcessTicketWhenRead(System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.ProcessTicketWhenRead(System.Int32)
    name: ProcessTicketWhenRead
    nameWithType: ITicketAgent.ProcessTicketWhenRead
    fullName: SuperOffice.CRM.Services.ITicketAgent.ProcessTicketWhenRead
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.ProcessTicketWhenRead(System.Int32)
    name: ProcessTicketWhenRead
    nameWithType: ITicketAgent.ProcessTicketWhenRead
    fullName: SuperOffice.CRM.Services.ITicketAgent.ProcessTicketWhenRead
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.TicketAgent.SplitTicket*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.SplitTicket
  isExternal: true
  name: SplitTicket
  nameWithType: TicketAgent.SplitTicket
  fullName: SuperOffice.CRM.Services.TicketAgent.SplitTicket
- uid: SuperOffice.CRM.Services.ITicketAgent.SplitTicket(System.Int32,System.Int32,System.DateTime,System.Int32[],SuperOffice.CRM.Services.TicketEntity)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.SplitTicket(System.Int32,System.Int32,System.DateTime,System.Int32[],SuperOffice.CRM.Services.TicketEntity)
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: SplitTicket(Int32, Int32, DateTime, Int32[], TicketEntity)
  nameWithType: ITicketAgent.SplitTicket(Int32, Int32, DateTime, Int32[], TicketEntity)
  fullName: SuperOffice.CRM.Services.ITicketAgent.SplitTicket(System.Int32, System.Int32, System.DateTime, System.Int32[], SuperOffice.CRM.Services.TicketEntity)
  nameWithType.vb: ITicketAgent.SplitTicket(Int32, Int32, DateTime, Int32(), TicketEntity)
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.SplitTicket(System.Int32, System.Int32, System.DateTime, System.Int32(), SuperOffice.CRM.Services.TicketEntity)
  name.vb: SplitTicket(Int32, Int32, DateTime, Int32(), TicketEntity)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.SplitTicket(System.Int32,System.Int32,System.DateTime,System.Int32[],SuperOffice.CRM.Services.TicketEntity)
    name: SplitTicket
    nameWithType: ITicketAgent.SplitTicket
    fullName: SuperOffice.CRM.Services.ITicketAgent.SplitTicket
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.Services.TicketEntity
    name: TicketEntity
    nameWithType: TicketEntity
    fullName: SuperOffice.CRM.Services.TicketEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.SplitTicket(System.Int32,System.Int32,System.DateTime,System.Int32[],SuperOffice.CRM.Services.TicketEntity)
    name: SplitTicket
    nameWithType: ITicketAgent.SplitTicket
    fullName: SuperOffice.CRM.Services.ITicketAgent.SplitTicket
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.Services.TicketEntity
    name: TicketEntity
    nameWithType: TicketEntity
    fullName: SuperOffice.CRM.Services.TicketEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: SuperOffice.CRM.Services.TicketAgent.SplitTicketMessage*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.SplitTicketMessage
  isExternal: true
  name: SplitTicketMessage
  nameWithType: TicketAgent.SplitTicketMessage
  fullName: SuperOffice.CRM.Services.TicketAgent.SplitTicketMessage
- uid: SuperOffice.CRM.Services.ITicketAgent.SplitTicketMessage(SuperOffice.CRM.Services.TicketMessageEntity,SuperOffice.CRM.Services.TicketEntity,SuperOffice.CRM.Services.TicketMessageEntity,System.Int32[])
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.SplitTicketMessage(SuperOffice.CRM.Services.TicketMessageEntity,SuperOffice.CRM.Services.TicketEntity,SuperOffice.CRM.Services.TicketMessageEntity,System.Int32[])
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: SplitTicketMessage(TicketMessageEntity, TicketEntity, TicketMessageEntity, Int32[])
  nameWithType: ITicketAgent.SplitTicketMessage(TicketMessageEntity, TicketEntity, TicketMessageEntity, Int32[])
  fullName: SuperOffice.CRM.Services.ITicketAgent.SplitTicketMessage(SuperOffice.CRM.Services.TicketMessageEntity, SuperOffice.CRM.Services.TicketEntity, SuperOffice.CRM.Services.TicketMessageEntity, System.Int32[])
  nameWithType.vb: ITicketAgent.SplitTicketMessage(TicketMessageEntity, TicketEntity, TicketMessageEntity, Int32())
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.SplitTicketMessage(SuperOffice.CRM.Services.TicketMessageEntity, SuperOffice.CRM.Services.TicketEntity, SuperOffice.CRM.Services.TicketMessageEntity, System.Int32())
  name.vb: SplitTicketMessage(TicketMessageEntity, TicketEntity, TicketMessageEntity, Int32())
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.SplitTicketMessage(SuperOffice.CRM.Services.TicketMessageEntity,SuperOffice.CRM.Services.TicketEntity,SuperOffice.CRM.Services.TicketMessageEntity,System.Int32[])
    name: SplitTicketMessage
    nameWithType: ITicketAgent.SplitTicketMessage
    fullName: SuperOffice.CRM.Services.ITicketAgent.SplitTicketMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Services.TicketMessageEntity
    name: TicketMessageEntity
    nameWithType: TicketMessageEntity
    fullName: SuperOffice.CRM.Services.TicketMessageEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.Services.TicketEntity
    name: TicketEntity
    nameWithType: TicketEntity
    fullName: SuperOffice.CRM.Services.TicketEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.Services.TicketMessageEntity
    name: TicketMessageEntity
    nameWithType: TicketMessageEntity
    fullName: SuperOffice.CRM.Services.TicketMessageEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.SplitTicketMessage(SuperOffice.CRM.Services.TicketMessageEntity,SuperOffice.CRM.Services.TicketEntity,SuperOffice.CRM.Services.TicketMessageEntity,System.Int32[])
    name: SplitTicketMessage
    nameWithType: ITicketAgent.SplitTicketMessage
    fullName: SuperOffice.CRM.Services.ITicketAgent.SplitTicketMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Services.TicketMessageEntity
    name: TicketMessageEntity
    nameWithType: TicketMessageEntity
    fullName: SuperOffice.CRM.Services.TicketMessageEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.Services.TicketEntity
    name: TicketEntity
    nameWithType: TicketEntity
    fullName: SuperOffice.CRM.Services.TicketEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.Services.TicketMessageEntity
    name: TicketMessageEntity
    nameWithType: TicketMessageEntity
    fullName: SuperOffice.CRM.Services.TicketMessageEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.TicketAgent.UpdateTicketsReadStatus*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.UpdateTicketsReadStatus
  isExternal: true
  name: UpdateTicketsReadStatus
  nameWithType: TicketAgent.UpdateTicketsReadStatus
  fullName: SuperOffice.CRM.Services.TicketAgent.UpdateTicketsReadStatus
- uid: SuperOffice.CRM.Services.ITicketAgent.UpdateTicketsReadStatus(System.Int32[],SuperOffice.Data.TicketReadStatus)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.UpdateTicketsReadStatus(System.Int32[],SuperOffice.Data.TicketReadStatus)
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: UpdateTicketsReadStatus(Int32[], TicketReadStatus)
  nameWithType: ITicketAgent.UpdateTicketsReadStatus(Int32[], TicketReadStatus)
  fullName: SuperOffice.CRM.Services.ITicketAgent.UpdateTicketsReadStatus(System.Int32[], SuperOffice.Data.TicketReadStatus)
  nameWithType.vb: ITicketAgent.UpdateTicketsReadStatus(Int32(), TicketReadStatus)
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.UpdateTicketsReadStatus(System.Int32(), SuperOffice.Data.TicketReadStatus)
  name.vb: UpdateTicketsReadStatus(Int32(), TicketReadStatus)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.UpdateTicketsReadStatus(System.Int32[],SuperOffice.Data.TicketReadStatus)
    name: UpdateTicketsReadStatus
    nameWithType: ITicketAgent.UpdateTicketsReadStatus
    fullName: SuperOffice.CRM.Services.ITicketAgent.UpdateTicketsReadStatus
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.TicketReadStatus
    name: TicketReadStatus
    nameWithType: TicketReadStatus
    fullName: SuperOffice.Data.TicketReadStatus
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.UpdateTicketsReadStatus(System.Int32[],SuperOffice.Data.TicketReadStatus)
    name: UpdateTicketsReadStatus
    nameWithType: ITicketAgent.UpdateTicketsReadStatus
    fullName: SuperOffice.CRM.Services.ITicketAgent.UpdateTicketsReadStatus
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.TicketReadStatus
    name: TicketReadStatus
    nameWithType: TicketReadStatus
    fullName: SuperOffice.Data.TicketReadStatus
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.TicketAgent.UpdateTicketsReadStatusByProvider*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.UpdateTicketsReadStatusByProvider
  isExternal: true
  name: UpdateTicketsReadStatusByProvider
  nameWithType: TicketAgent.UpdateTicketsReadStatusByProvider
  fullName: SuperOffice.CRM.Services.TicketAgent.UpdateTicketsReadStatusByProvider
- uid: SuperOffice.CRM.Services.ITicketAgent.UpdateTicketsReadStatusByProvider(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],SuperOffice.Data.TicketReadStatus)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.UpdateTicketsReadStatusByProvider(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],SuperOffice.Data.TicketReadStatus)
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: UpdateTicketsReadStatusByProvider(String, ArchiveRestrictionInfo[], TicketReadStatus)
  nameWithType: ITicketAgent.UpdateTicketsReadStatusByProvider(String, ArchiveRestrictionInfo[], TicketReadStatus)
  fullName: SuperOffice.CRM.Services.ITicketAgent.UpdateTicketsReadStatusByProvider(System.String, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[], SuperOffice.Data.TicketReadStatus)
  nameWithType.vb: ITicketAgent.UpdateTicketsReadStatusByProvider(String, ArchiveRestrictionInfo(), TicketReadStatus)
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.UpdateTicketsReadStatusByProvider(System.String, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo(), SuperOffice.Data.TicketReadStatus)
  name.vb: UpdateTicketsReadStatusByProvider(String, ArchiveRestrictionInfo(), TicketReadStatus)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.UpdateTicketsReadStatusByProvider(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],SuperOffice.Data.TicketReadStatus)
    name: UpdateTicketsReadStatusByProvider
    nameWithType: ITicketAgent.UpdateTicketsReadStatusByProvider
    fullName: SuperOffice.CRM.Services.ITicketAgent.UpdateTicketsReadStatusByProvider
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.TicketReadStatus
    name: TicketReadStatus
    nameWithType: TicketReadStatus
    fullName: SuperOffice.Data.TicketReadStatus
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.UpdateTicketsReadStatusByProvider(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],SuperOffice.Data.TicketReadStatus)
    name: UpdateTicketsReadStatusByProvider
    nameWithType: ITicketAgent.UpdateTicketsReadStatusByProvider
    fullName: SuperOffice.CRM.Services.ITicketAgent.UpdateTicketsReadStatusByProvider
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.TicketReadStatus
    name: TicketReadStatus
    nameWithType: TicketReadStatus
    fullName: SuperOffice.Data.TicketReadStatus
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
  isExternal: true
  name: ArchiveRestrictionInfo[]
  nameWithType: ArchiveRestrictionInfo[]
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
  nameWithType.vb: ArchiveRestrictionInfo()
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo()
  name.vb: ArchiveRestrictionInfo()
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.TicketAgent.MergeTickets*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.MergeTickets
  isExternal: true
  name: MergeTickets
  nameWithType: TicketAgent.MergeTickets
  fullName: SuperOffice.CRM.Services.TicketAgent.MergeTickets
- uid: SuperOffice.CRM.Services.ITicketAgent.MergeTickets(SuperOffice.CRM.Services.TicketEntity,System.Int32[])
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.MergeTickets(SuperOffice.CRM.Services.TicketEntity,System.Int32[])
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: MergeTickets(TicketEntity, Int32[])
  nameWithType: ITicketAgent.MergeTickets(TicketEntity, Int32[])
  fullName: SuperOffice.CRM.Services.ITicketAgent.MergeTickets(SuperOffice.CRM.Services.TicketEntity, System.Int32[])
  nameWithType.vb: ITicketAgent.MergeTickets(TicketEntity, Int32())
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.MergeTickets(SuperOffice.CRM.Services.TicketEntity, System.Int32())
  name.vb: MergeTickets(TicketEntity, Int32())
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.MergeTickets(SuperOffice.CRM.Services.TicketEntity,System.Int32[])
    name: MergeTickets
    nameWithType: ITicketAgent.MergeTickets
    fullName: SuperOffice.CRM.Services.ITicketAgent.MergeTickets
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Services.TicketEntity
    name: TicketEntity
    nameWithType: TicketEntity
    fullName: SuperOffice.CRM.Services.TicketEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.MergeTickets(SuperOffice.CRM.Services.TicketEntity,System.Int32[])
    name: MergeTickets
    nameWithType: ITicketAgent.MergeTickets
    fullName: SuperOffice.CRM.Services.ITicketAgent.MergeTickets
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Services.TicketEntity
    name: TicketEntity
    nameWithType: TicketEntity
    fullName: SuperOffice.CRM.Services.TicketEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.TicketAgent.SetDeletedStatusByIds*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.SetDeletedStatusByIds
  isExternal: true
  name: SetDeletedStatusByIds
  nameWithType: TicketAgent.SetDeletedStatusByIds
  fullName: SuperOffice.CRM.Services.TicketAgent.SetDeletedStatusByIds
- uid: SuperOffice.CRM.Services.ITicketAgent.SetDeletedStatusByIds(System.Int32[])
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.SetDeletedStatusByIds(System.Int32[])
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: SetDeletedStatusByIds(Int32[])
  nameWithType: ITicketAgent.SetDeletedStatusByIds(Int32[])
  fullName: SuperOffice.CRM.Services.ITicketAgent.SetDeletedStatusByIds(System.Int32[])
  nameWithType.vb: ITicketAgent.SetDeletedStatusByIds(Int32())
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.SetDeletedStatusByIds(System.Int32())
  name.vb: SetDeletedStatusByIds(Int32())
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.SetDeletedStatusByIds(System.Int32[])
    name: SetDeletedStatusByIds
    nameWithType: ITicketAgent.SetDeletedStatusByIds
    fullName: SuperOffice.CRM.Services.ITicketAgent.SetDeletedStatusByIds
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.SetDeletedStatusByIds(System.Int32[])
    name: SetDeletedStatusByIds
    nameWithType: ITicketAgent.SetDeletedStatusByIds
    fullName: SuperOffice.CRM.Services.ITicketAgent.SetDeletedStatusByIds
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.TicketAgent.SetDeletedStatusByProvider*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.SetDeletedStatusByProvider
  isExternal: true
  name: SetDeletedStatusByProvider
  nameWithType: TicketAgent.SetDeletedStatusByProvider
  fullName: SuperOffice.CRM.Services.TicketAgent.SetDeletedStatusByProvider
- uid: SuperOffice.CRM.Services.ITicketAgent.SetDeletedStatusByProvider(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.SetDeletedStatusByProvider(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: SetDeletedStatusByProvider(String, ArchiveRestrictionInfo[])
  nameWithType: ITicketAgent.SetDeletedStatusByProvider(String, ArchiveRestrictionInfo[])
  fullName: SuperOffice.CRM.Services.ITicketAgent.SetDeletedStatusByProvider(System.String, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  nameWithType.vb: ITicketAgent.SetDeletedStatusByProvider(String, ArchiveRestrictionInfo())
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.SetDeletedStatusByProvider(System.String, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo())
  name.vb: SetDeletedStatusByProvider(String, ArchiveRestrictionInfo())
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.SetDeletedStatusByProvider(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
    name: SetDeletedStatusByProvider
    nameWithType: ITicketAgent.SetDeletedStatusByProvider
    fullName: SuperOffice.CRM.Services.ITicketAgent.SetDeletedStatusByProvider
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.SetDeletedStatusByProvider(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
    name: SetDeletedStatusByProvider
    nameWithType: ITicketAgent.SetDeletedStatusByProvider
    fullName: SuperOffice.CRM.Services.ITicketAgent.SetDeletedStatusByProvider
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.TicketAgent.UndeleteByIds*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.UndeleteByIds
  isExternal: true
  name: UndeleteByIds
  nameWithType: TicketAgent.UndeleteByIds
  fullName: SuperOffice.CRM.Services.TicketAgent.UndeleteByIds
- uid: SuperOffice.CRM.Services.ITicketAgent.UndeleteByIds(System.Int32[])
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.UndeleteByIds(System.Int32[])
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: UndeleteByIds(Int32[])
  nameWithType: ITicketAgent.UndeleteByIds(Int32[])
  fullName: SuperOffice.CRM.Services.ITicketAgent.UndeleteByIds(System.Int32[])
  nameWithType.vb: ITicketAgent.UndeleteByIds(Int32())
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.UndeleteByIds(System.Int32())
  name.vb: UndeleteByIds(Int32())
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.UndeleteByIds(System.Int32[])
    name: UndeleteByIds
    nameWithType: ITicketAgent.UndeleteByIds
    fullName: SuperOffice.CRM.Services.ITicketAgent.UndeleteByIds
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.UndeleteByIds(System.Int32[])
    name: UndeleteByIds
    nameWithType: ITicketAgent.UndeleteByIds
    fullName: SuperOffice.CRM.Services.ITicketAgent.UndeleteByIds
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.TicketAgent.ResolveTicketId*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.ResolveTicketId
  isExternal: true
  name: ResolveTicketId
  nameWithType: TicketAgent.ResolveTicketId
  fullName: SuperOffice.CRM.Services.TicketAgent.ResolveTicketId
- uid: SuperOffice.CRM.Services.ITicketAgent.ResolveTicketId(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.ResolveTicketId(System.Int32)
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: ResolveTicketId(Int32)
  nameWithType: ITicketAgent.ResolveTicketId(Int32)
  fullName: SuperOffice.CRM.Services.ITicketAgent.ResolveTicketId(System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.ResolveTicketId(System.Int32)
    name: ResolveTicketId
    nameWithType: ITicketAgent.ResolveTicketId
    fullName: SuperOffice.CRM.Services.ITicketAgent.ResolveTicketId
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.ResolveTicketId(System.Int32)
    name: ResolveTicketId
    nameWithType: ITicketAgent.ResolveTicketId
    fullName: SuperOffice.CRM.Services.ITicketAgent.ResolveTicketId
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.TicketAgent.BatchForward*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.BatchForward
  isExternal: true
  name: BatchForward
  nameWithType: TicketAgent.BatchForward
  fullName: SuperOffice.CRM.Services.TicketAgent.BatchForward
- uid: SuperOffice.CRM.Services.ITicketAgent.BatchForward(System.Int32[],System.String[],System.String[],System.String[],System.String,System.Boolean)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.BatchForward(System.Int32[],System.String[],System.String[],System.String[],System.String,System.Boolean)
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: BatchForward(Int32[], String[], String[], String[], String, Boolean)
  nameWithType: ITicketAgent.BatchForward(Int32[], String[], String[], String[], String, Boolean)
  fullName: SuperOffice.CRM.Services.ITicketAgent.BatchForward(System.Int32[], System.String[], System.String[], System.String[], System.String, System.Boolean)
  nameWithType.vb: ITicketAgent.BatchForward(Int32(), String(), String(), String(), String, Boolean)
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.BatchForward(System.Int32(), System.String(), System.String(), System.String(), System.String, System.Boolean)
  name.vb: BatchForward(Int32(), String(), String(), String(), String, Boolean)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.BatchForward(System.Int32[],System.String[],System.String[],System.String[],System.String,System.Boolean)
    name: BatchForward
    nameWithType: ITicketAgent.BatchForward
    fullName: SuperOffice.CRM.Services.ITicketAgent.BatchForward
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.BatchForward(System.Int32[],System.String[],System.String[],System.String[],System.String,System.Boolean)
    name: BatchForward
    nameWithType: ITicketAgent.BatchForward
    fullName: SuperOffice.CRM.Services.ITicketAgent.BatchForward
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.TicketAgent.BatchReply*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.BatchReply
  isExternal: true
  name: BatchReply
  nameWithType: TicketAgent.BatchReply
  fullName: SuperOffice.CRM.Services.TicketAgent.BatchReply
- uid: SuperOffice.CRM.Services.ITicketAgent.BatchReply(SuperOffice.CRM.Services.TicketBatchReplyData)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.BatchReply(SuperOffice.CRM.Services.TicketBatchReplyData)
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: BatchReply(TicketBatchReplyData)
  nameWithType: ITicketAgent.BatchReply(TicketBatchReplyData)
  fullName: SuperOffice.CRM.Services.ITicketAgent.BatchReply(SuperOffice.CRM.Services.TicketBatchReplyData)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.BatchReply(SuperOffice.CRM.Services.TicketBatchReplyData)
    name: BatchReply
    nameWithType: ITicketAgent.BatchReply
    fullName: SuperOffice.CRM.Services.ITicketAgent.BatchReply
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Services.TicketBatchReplyData
    name: TicketBatchReplyData
    nameWithType: TicketBatchReplyData
    fullName: SuperOffice.CRM.Services.TicketBatchReplyData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.BatchReply(SuperOffice.CRM.Services.TicketBatchReplyData)
    name: BatchReply
    nameWithType: ITicketAgent.BatchReply
    fullName: SuperOffice.CRM.Services.ITicketAgent.BatchReply
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Services.TicketBatchReplyData
    name: TicketBatchReplyData
    nameWithType: TicketBatchReplyData
    fullName: SuperOffice.CRM.Services.TicketBatchReplyData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.TicketBatchReplyData
  commentId: T:SuperOffice.CRM.Services.TicketBatchReplyData
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: TicketBatchReplyData
  nameWithType: TicketBatchReplyData
  fullName: SuperOffice.CRM.Services.TicketBatchReplyData
- uid: SuperOffice.CRM.Services.TicketAgent.ClearNotify*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.ClearNotify
  isExternal: true
  name: ClearNotify
  nameWithType: TicketAgent.ClearNotify
  fullName: SuperOffice.CRM.Services.TicketAgent.ClearNotify
- uid: SuperOffice.CRM.Services.ITicketAgent.ClearNotify(System.Int32[])
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.ClearNotify(System.Int32[])
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: ClearNotify(Int32[])
  nameWithType: ITicketAgent.ClearNotify(Int32[])
  fullName: SuperOffice.CRM.Services.ITicketAgent.ClearNotify(System.Int32[])
  nameWithType.vb: ITicketAgent.ClearNotify(Int32())
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.ClearNotify(System.Int32())
  name.vb: ClearNotify(Int32())
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.ClearNotify(System.Int32[])
    name: ClearNotify
    nameWithType: ITicketAgent.ClearNotify
    fullName: SuperOffice.CRM.Services.ITicketAgent.ClearNotify
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.ClearNotify(System.Int32[])
    name: ClearNotify
    nameWithType: ITicketAgent.ClearNotify
    fullName: SuperOffice.CRM.Services.ITicketAgent.ClearNotify
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.TicketAgent.GetTicketMessageEntities*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.GetTicketMessageEntities
  isExternal: true
  name: GetTicketMessageEntities
  nameWithType: TicketAgent.GetTicketMessageEntities
  fullName: SuperOffice.CRM.Services.TicketAgent.GetTicketMessageEntities
- uid: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageEntities(System.Int32,System.Int32[])
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageEntities(System.Int32,System.Int32[])
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: GetTicketMessageEntities(Int32, Int32[])
  nameWithType: ITicketAgent.GetTicketMessageEntities(Int32, Int32[])
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageEntities(System.Int32, System.Int32[])
  nameWithType.vb: ITicketAgent.GetTicketMessageEntities(Int32, Int32())
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageEntities(System.Int32, System.Int32())
  name.vb: GetTicketMessageEntities(Int32, Int32())
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageEntities(System.Int32,System.Int32[])
    name: GetTicketMessageEntities
    nameWithType: ITicketAgent.GetTicketMessageEntities
    fullName: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageEntities
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageEntities(System.Int32,System.Int32[])
    name: GetTicketMessageEntities
    nameWithType: ITicketAgent.GetTicketMessageEntities
    fullName: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageEntities
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.TicketMessageEntity[]
  isExternal: true
  name: TicketMessageEntity[]
  nameWithType: TicketMessageEntity[]
  fullName: SuperOffice.CRM.Services.TicketMessageEntity[]
  nameWithType.vb: TicketMessageEntity()
  fullName.vb: SuperOffice.CRM.Services.TicketMessageEntity()
  name.vb: TicketMessageEntity()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.TicketMessageEntity
    name: TicketMessageEntity
    nameWithType: TicketMessageEntity
    fullName: SuperOffice.CRM.Services.TicketMessageEntity
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.Services.TicketMessageEntity
    name: TicketMessageEntity
    nameWithType: TicketMessageEntity
    fullName: SuperOffice.CRM.Services.TicketMessageEntity
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.TicketAgent.CreateDefaultForTicketType*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.CreateDefaultForTicketType
  isExternal: true
  name: CreateDefaultForTicketType
  nameWithType: TicketAgent.CreateDefaultForTicketType
  fullName: SuperOffice.CRM.Services.TicketAgent.CreateDefaultForTicketType
- uid: SuperOffice.CRM.Services.ITicketAgent.CreateDefaultForTicketType(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.CreateDefaultForTicketType(System.Int32)
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: CreateDefaultForTicketType(Int32)
  nameWithType: ITicketAgent.CreateDefaultForTicketType(Int32)
  fullName: SuperOffice.CRM.Services.ITicketAgent.CreateDefaultForTicketType(System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.CreateDefaultForTicketType(System.Int32)
    name: CreateDefaultForTicketType
    nameWithType: ITicketAgent.CreateDefaultForTicketType
    fullName: SuperOffice.CRM.Services.ITicketAgent.CreateDefaultForTicketType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.CreateDefaultForTicketType(System.Int32)
    name: CreateDefaultForTicketType
    nameWithType: ITicketAgent.CreateDefaultForTicketType
    fullName: SuperOffice.CRM.Services.ITicketAgent.CreateDefaultForTicketType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.TicketAgent.DoEscalating*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.DoEscalating
  isExternal: true
  name: DoEscalating
  nameWithType: TicketAgent.DoEscalating
  fullName: SuperOffice.CRM.Services.TicketAgent.DoEscalating
- uid: SuperOffice.CRM.Services.ITicketAgent.DoEscalating(System.Int32,SuperOffice.Data.TicketPriorityEscalateAction)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.DoEscalating(System.Int32,SuperOffice.Data.TicketPriorityEscalateAction)
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: DoEscalating(Int32, TicketPriorityEscalateAction)
  nameWithType: ITicketAgent.DoEscalating(Int32, TicketPriorityEscalateAction)
  fullName: SuperOffice.CRM.Services.ITicketAgent.DoEscalating(System.Int32, SuperOffice.Data.TicketPriorityEscalateAction)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.DoEscalating(System.Int32,SuperOffice.Data.TicketPriorityEscalateAction)
    name: DoEscalating
    nameWithType: ITicketAgent.DoEscalating
    fullName: SuperOffice.CRM.Services.ITicketAgent.DoEscalating
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.TicketPriorityEscalateAction
    name: TicketPriorityEscalateAction
    nameWithType: TicketPriorityEscalateAction
    fullName: SuperOffice.Data.TicketPriorityEscalateAction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.DoEscalating(System.Int32,SuperOffice.Data.TicketPriorityEscalateAction)
    name: DoEscalating
    nameWithType: ITicketAgent.DoEscalating
    fullName: SuperOffice.CRM.Services.ITicketAgent.DoEscalating
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.TicketPriorityEscalateAction
    name: TicketPriorityEscalateAction
    nameWithType: TicketPriorityEscalateAction
    fullName: SuperOffice.Data.TicketPriorityEscalateAction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.TicketPriorityEscalateAction
  isExternal: true
  name: TicketPriorityEscalateAction
  nameWithType: TicketPriorityEscalateAction
  fullName: SuperOffice.Data.TicketPriorityEscalateAction
- uid: SuperOffice.CRM.Services.TicketAgent.GetTicketMessage*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.GetTicketMessage
  isExternal: true
  name: GetTicketMessage
  nameWithType: TicketAgent.GetTicketMessage
  fullName: SuperOffice.CRM.Services.TicketAgent.GetTicketMessage
- uid: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessage(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.GetTicketMessage(System.Int32)
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: GetTicketMessage(Int32)
  nameWithType: ITicketAgent.GetTicketMessage(Int32)
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessage(System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessage(System.Int32)
    name: GetTicketMessage
    nameWithType: ITicketAgent.GetTicketMessage
    fullName: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessage(System.Int32)
    name: GetTicketMessage
    nameWithType: ITicketAgent.GetTicketMessage
    fullName: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.TicketMessage
  commentId: T:SuperOffice.CRM.Services.TicketMessage
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: TicketMessage
  nameWithType: TicketMessage
  fullName: SuperOffice.CRM.Services.TicketMessage
- uid: SuperOffice.CRM.Services.TicketAgent.GetTicketMessageEntity*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.GetTicketMessageEntity
  isExternal: true
  name: GetTicketMessageEntity
  nameWithType: TicketAgent.GetTicketMessageEntity
  fullName: SuperOffice.CRM.Services.TicketAgent.GetTicketMessageEntity
- uid: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageEntity(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageEntity(System.Int32)
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: GetTicketMessageEntity(Int32)
  nameWithType: ITicketAgent.GetTicketMessageEntity(Int32)
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageEntity(System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageEntity(System.Int32)
    name: GetTicketMessageEntity
    nameWithType: ITicketAgent.GetTicketMessageEntity
    fullName: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageEntity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageEntity(System.Int32)
    name: GetTicketMessageEntity
    nameWithType: ITicketAgent.GetTicketMessageEntity
    fullName: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageEntity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.TicketAgent.DeleteTicketMessageEntity*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.DeleteTicketMessageEntity
  isExternal: true
  name: DeleteTicketMessageEntity
  nameWithType: TicketAgent.DeleteTicketMessageEntity
  fullName: SuperOffice.CRM.Services.TicketAgent.DeleteTicketMessageEntity
- uid: SuperOffice.CRM.Services.ITicketAgent.DeleteTicketMessageEntity(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.DeleteTicketMessageEntity(System.Int32)
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: DeleteTicketMessageEntity(Int32)
  nameWithType: ITicketAgent.DeleteTicketMessageEntity(Int32)
  fullName: SuperOffice.CRM.Services.ITicketAgent.DeleteTicketMessageEntity(System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.DeleteTicketMessageEntity(System.Int32)
    name: DeleteTicketMessageEntity
    nameWithType: ITicketAgent.DeleteTicketMessageEntity
    fullName: SuperOffice.CRM.Services.ITicketAgent.DeleteTicketMessageEntity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.DeleteTicketMessageEntity(System.Int32)
    name: DeleteTicketMessageEntity
    nameWithType: ITicketAgent.DeleteTicketMessageEntity
    fullName: SuperOffice.CRM.Services.ITicketAgent.DeleteTicketMessageEntity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.TicketAgent.SanitizeMailContent*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.SanitizeMailContent
  isExternal: true
  name: SanitizeMailContent
  nameWithType: TicketAgent.SanitizeMailContent
  fullName: SuperOffice.CRM.Services.TicketAgent.SanitizeMailContent
- uid: SuperOffice.CRM.Services.ITicketAgent.SanitizeMailContent(System.String)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.SanitizeMailContent(System.String)
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: SanitizeMailContent(String)
  nameWithType: ITicketAgent.SanitizeMailContent(String)
  fullName: SuperOffice.CRM.Services.ITicketAgent.SanitizeMailContent(System.String)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.SanitizeMailContent(System.String)
    name: SanitizeMailContent
    nameWithType: ITicketAgent.SanitizeMailContent
    fullName: SuperOffice.CRM.Services.ITicketAgent.SanitizeMailContent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.SanitizeMailContent(System.String)
    name: SanitizeMailContent
    nameWithType: ITicketAgent.SanitizeMailContent
    fullName: SuperOffice.CRM.Services.ITicketAgent.SanitizeMailContent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.TicketAgent.SanitizeMailContentWithOptions*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.SanitizeMailContentWithOptions
  isExternal: true
  name: SanitizeMailContentWithOptions
  nameWithType: TicketAgent.SanitizeMailContentWithOptions
  fullName: SuperOffice.CRM.Services.TicketAgent.SanitizeMailContentWithOptions
- uid: SuperOffice.CRM.Services.ITicketAgent.SanitizeMailContentWithOptions(System.String,SuperOffice.Data.HtmlSanitizerOptions)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.SanitizeMailContentWithOptions(System.String,SuperOffice.Data.HtmlSanitizerOptions)
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: SanitizeMailContentWithOptions(String, HtmlSanitizerOptions)
  nameWithType: ITicketAgent.SanitizeMailContentWithOptions(String, HtmlSanitizerOptions)
  fullName: SuperOffice.CRM.Services.ITicketAgent.SanitizeMailContentWithOptions(System.String, SuperOffice.Data.HtmlSanitizerOptions)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.SanitizeMailContentWithOptions(System.String,SuperOffice.Data.HtmlSanitizerOptions)
    name: SanitizeMailContentWithOptions
    nameWithType: ITicketAgent.SanitizeMailContentWithOptions
    fullName: SuperOffice.CRM.Services.ITicketAgent.SanitizeMailContentWithOptions
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.HtmlSanitizerOptions
    name: HtmlSanitizerOptions
    nameWithType: HtmlSanitizerOptions
    fullName: SuperOffice.Data.HtmlSanitizerOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.SanitizeMailContentWithOptions(System.String,SuperOffice.Data.HtmlSanitizerOptions)
    name: SanitizeMailContentWithOptions
    nameWithType: ITicketAgent.SanitizeMailContentWithOptions
    fullName: SuperOffice.CRM.Services.ITicketAgent.SanitizeMailContentWithOptions
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.HtmlSanitizerOptions
    name: HtmlSanitizerOptions
    nameWithType: HtmlSanitizerOptions
    fullName: SuperOffice.Data.HtmlSanitizerOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.HtmlSanitizerOptions
  isExternal: true
  name: HtmlSanitizerOptions
  nameWithType: HtmlSanitizerOptions
  fullName: SuperOffice.Data.HtmlSanitizerOptions
- uid: SuperOffice.CRM.Services.TicketAgent.SanitizeMailContents*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.SanitizeMailContents
  isExternal: true
  name: SanitizeMailContents
  nameWithType: TicketAgent.SanitizeMailContents
  fullName: SuperOffice.CRM.Services.TicketAgent.SanitizeMailContents
- uid: SuperOffice.CRM.Services.ITicketAgent.SanitizeMailContents(System.String[])
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.SanitizeMailContents(System.String[])
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: SanitizeMailContents(String[])
  nameWithType: ITicketAgent.SanitizeMailContents(String[])
  fullName: SuperOffice.CRM.Services.ITicketAgent.SanitizeMailContents(System.String[])
  nameWithType.vb: ITicketAgent.SanitizeMailContents(String())
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.SanitizeMailContents(System.String())
  name.vb: SanitizeMailContents(String())
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.SanitizeMailContents(System.String[])
    name: SanitizeMailContents
    nameWithType: ITicketAgent.SanitizeMailContents
    fullName: SuperOffice.CRM.Services.ITicketAgent.SanitizeMailContents
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.SanitizeMailContents(System.String[])
    name: SanitizeMailContents
    nameWithType: ITicketAgent.SanitizeMailContents
    fullName: SuperOffice.CRM.Services.ITicketAgent.SanitizeMailContents
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.TicketAgent.Html2Text*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.Html2Text
  isExternal: true
  name: Html2Text
  nameWithType: TicketAgent.Html2Text
  fullName: SuperOffice.CRM.Services.TicketAgent.Html2Text
- uid: SuperOffice.CRM.Services.ITicketAgent.Html2Text(System.String)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.Html2Text(System.String)
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: Html2Text(String)
  nameWithType: ITicketAgent.Html2Text(String)
  fullName: SuperOffice.CRM.Services.ITicketAgent.Html2Text(System.String)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.Html2Text(System.String)
    name: Html2Text
    nameWithType: ITicketAgent.Html2Text
    fullName: SuperOffice.CRM.Services.ITicketAgent.Html2Text
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.Html2Text(System.String)
    name: Html2Text
    nameWithType: ITicketAgent.Html2Text
    fullName: SuperOffice.CRM.Services.ITicketAgent.Html2Text
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.TicketAgent.GetAttachmentInfo*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.GetAttachmentInfo
  isExternal: true
  name: GetAttachmentInfo
  nameWithType: TicketAgent.GetAttachmentInfo
  fullName: SuperOffice.CRM.Services.TicketAgent.GetAttachmentInfo
- uid: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentInfo(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.GetAttachmentInfo(System.Int32)
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: GetAttachmentInfo(Int32)
  nameWithType: ITicketAgent.GetAttachmentInfo(Int32)
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentInfo(System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentInfo(System.Int32)
    name: GetAttachmentInfo
    nameWithType: ITicketAgent.GetAttachmentInfo
    fullName: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentInfo(System.Int32)
    name: GetAttachmentInfo
    nameWithType: ITicketAgent.GetAttachmentInfo
    fullName: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.TicketAgent.GetAttachmentInfoNonInline*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.GetAttachmentInfoNonInline
  isExternal: true
  name: GetAttachmentInfoNonInline
  nameWithType: TicketAgent.GetAttachmentInfoNonInline
  fullName: SuperOffice.CRM.Services.TicketAgent.GetAttachmentInfoNonInline
- uid: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentInfoNonInline(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.GetAttachmentInfoNonInline(System.Int32)
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: GetAttachmentInfoNonInline(Int32)
  nameWithType: ITicketAgent.GetAttachmentInfoNonInline(Int32)
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentInfoNonInline(System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentInfoNonInline(System.Int32)
    name: GetAttachmentInfoNonInline
    nameWithType: ITicketAgent.GetAttachmentInfoNonInline
    fullName: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentInfoNonInline
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentInfoNonInline(System.Int32)
    name: GetAttachmentInfoNonInline
    nameWithType: ITicketAgent.GetAttachmentInfoNonInline
    fullName: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentInfoNonInline
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.TicketAgent.AddAttachments*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.AddAttachments
  isExternal: true
  name: AddAttachments
  nameWithType: TicketAgent.AddAttachments
  fullName: SuperOffice.CRM.Services.TicketAgent.AddAttachments
- uid: SuperOffice.CRM.Services.ITicketAgent.AddAttachments(System.Int32,System.Int32[])
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.AddAttachments(System.Int32,System.Int32[])
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: AddAttachments(Int32, Int32[])
  nameWithType: ITicketAgent.AddAttachments(Int32, Int32[])
  fullName: SuperOffice.CRM.Services.ITicketAgent.AddAttachments(System.Int32, System.Int32[])
  nameWithType.vb: ITicketAgent.AddAttachments(Int32, Int32())
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.AddAttachments(System.Int32, System.Int32())
  name.vb: AddAttachments(Int32, Int32())
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.AddAttachments(System.Int32,System.Int32[])
    name: AddAttachments
    nameWithType: ITicketAgent.AddAttachments
    fullName: SuperOffice.CRM.Services.ITicketAgent.AddAttachments
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.AddAttachments(System.Int32,System.Int32[])
    name: AddAttachments
    nameWithType: ITicketAgent.AddAttachments
    fullName: SuperOffice.CRM.Services.ITicketAgent.AddAttachments
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.TicketAgent.RemoveMessageAttachments*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.RemoveMessageAttachments
  isExternal: true
  name: RemoveMessageAttachments
  nameWithType: TicketAgent.RemoveMessageAttachments
  fullName: SuperOffice.CRM.Services.TicketAgent.RemoveMessageAttachments
- uid: SuperOffice.CRM.Services.ITicketAgent.RemoveMessageAttachments(System.Int32,System.Int32[])
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.RemoveMessageAttachments(System.Int32,System.Int32[])
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: RemoveMessageAttachments(Int32, Int32[])
  nameWithType: ITicketAgent.RemoveMessageAttachments(Int32, Int32[])
  fullName: SuperOffice.CRM.Services.ITicketAgent.RemoveMessageAttachments(System.Int32, System.Int32[])
  nameWithType.vb: ITicketAgent.RemoveMessageAttachments(Int32, Int32())
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.RemoveMessageAttachments(System.Int32, System.Int32())
  name.vb: RemoveMessageAttachments(Int32, Int32())
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.RemoveMessageAttachments(System.Int32,System.Int32[])
    name: RemoveMessageAttachments
    nameWithType: ITicketAgent.RemoveMessageAttachments
    fullName: SuperOffice.CRM.Services.ITicketAgent.RemoveMessageAttachments
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.RemoveMessageAttachments(System.Int32,System.Int32[])
    name: RemoveMessageAttachments
    nameWithType: ITicketAgent.RemoveMessageAttachments
    fullName: SuperOffice.CRM.Services.ITicketAgent.RemoveMessageAttachments
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.TicketAgent.GetAttachmentPreview*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.GetAttachmentPreview
  isExternal: true
  name: GetAttachmentPreview
  nameWithType: TicketAgent.GetAttachmentPreview
  fullName: SuperOffice.CRM.Services.TicketAgent.GetAttachmentPreview
- uid: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentPreview(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.GetAttachmentPreview(System.Int32)
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: GetAttachmentPreview(Int32)
  nameWithType: ITicketAgent.GetAttachmentPreview(Int32)
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentPreview(System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentPreview(System.Int32)
    name: GetAttachmentPreview
    nameWithType: ITicketAgent.GetAttachmentPreview
    fullName: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentPreview
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentPreview(System.Int32)
    name: GetAttachmentPreview
    nameWithType: ITicketAgent.GetAttachmentPreview
    fullName: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentPreview
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.AttachmentPreview
  commentId: T:SuperOffice.CRM.Services.AttachmentPreview
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: AttachmentPreview
  nameWithType: AttachmentPreview
  fullName: SuperOffice.CRM.Services.AttachmentPreview
- uid: SuperOffice.CRM.Services.TicketAgent.GetPreviewAttachmentStream*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.GetPreviewAttachmentStream
  isExternal: true
  name: GetPreviewAttachmentStream
  nameWithType: TicketAgent.GetPreviewAttachmentStream
  fullName: SuperOffice.CRM.Services.TicketAgent.GetPreviewAttachmentStream
- uid: SuperOffice.CRM.Services.ITicketAgent.GetPreviewAttachmentStream(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.GetPreviewAttachmentStream(System.Int32)
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: GetPreviewAttachmentStream(Int32)
  nameWithType: ITicketAgent.GetPreviewAttachmentStream(Int32)
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetPreviewAttachmentStream(System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.GetPreviewAttachmentStream(System.Int32)
    name: GetPreviewAttachmentStream
    nameWithType: ITicketAgent.GetPreviewAttachmentStream
    fullName: SuperOffice.CRM.Services.ITicketAgent.GetPreviewAttachmentStream
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.GetPreviewAttachmentStream(System.Int32)
    name: GetPreviewAttachmentStream
    nameWithType: ITicketAgent.GetPreviewAttachmentStream
    fullName: SuperOffice.CRM.Services.ITicketAgent.GetPreviewAttachmentStream
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.DocumentPreview
  commentId: T:SuperOffice.CRM.Services.DocumentPreview
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: DocumentPreview
  nameWithType: DocumentPreview
  fullName: SuperOffice.CRM.Services.DocumentPreview
- uid: SuperOffice.CRM.Services.TicketAgent.GetRfcAttachmentStream*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.GetRfcAttachmentStream
  isExternal: true
  name: GetRfcAttachmentStream
  nameWithType: TicketAgent.GetRfcAttachmentStream
  fullName: SuperOffice.CRM.Services.TicketAgent.GetRfcAttachmentStream
- uid: SuperOffice.CRM.Services.ITicketAgent.GetRfcAttachmentStream(System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.GetRfcAttachmentStream(System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: GetRfcAttachmentStream(Int32, Int32)
  nameWithType: ITicketAgent.GetRfcAttachmentStream(Int32, Int32)
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetRfcAttachmentStream(System.Int32, System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.GetRfcAttachmentStream(System.Int32,System.Int32)
    name: GetRfcAttachmentStream
    nameWithType: ITicketAgent.GetRfcAttachmentStream
    fullName: SuperOffice.CRM.Services.ITicketAgent.GetRfcAttachmentStream
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.GetRfcAttachmentStream(System.Int32,System.Int32)
    name: GetRfcAttachmentStream
    nameWithType: ITicketAgent.GetRfcAttachmentStream
    fullName: SuperOffice.CRM.Services.ITicketAgent.GetRfcAttachmentStream
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.TicketAgent.SendTicketMessage*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.SendTicketMessage
  isExternal: true
  name: SendTicketMessage
  nameWithType: TicketAgent.SendTicketMessage
  fullName: SuperOffice.CRM.Services.TicketAgent.SendTicketMessage
- uid: SuperOffice.CRM.Services.ITicketAgent.SendTicketMessage(System.Int32,System.String[],System.String[],System.String[],System.String,System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.SendTicketMessage(System.Int32,System.String[],System.String[],System.String[],System.String,System.Int32,System.String)
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: SendTicketMessage(Int32, String[], String[], String[], String, Int32, String)
  nameWithType: ITicketAgent.SendTicketMessage(Int32, String[], String[], String[], String, Int32, String)
  fullName: SuperOffice.CRM.Services.ITicketAgent.SendTicketMessage(System.Int32, System.String[], System.String[], System.String[], System.String, System.Int32, System.String)
  nameWithType.vb: ITicketAgent.SendTicketMessage(Int32, String(), String(), String(), String, Int32, String)
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.SendTicketMessage(System.Int32, System.String(), System.String(), System.String(), System.String, System.Int32, System.String)
  name.vb: SendTicketMessage(Int32, String(), String(), String(), String, Int32, String)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.SendTicketMessage(System.Int32,System.String[],System.String[],System.String[],System.String,System.Int32,System.String)
    name: SendTicketMessage
    nameWithType: ITicketAgent.SendTicketMessage
    fullName: SuperOffice.CRM.Services.ITicketAgent.SendTicketMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.SendTicketMessage(System.Int32,System.String[],System.String[],System.String[],System.String,System.Int32,System.String)
    name: SendTicketMessage
    nameWithType: ITicketAgent.SendTicketMessage
    fullName: SuperOffice.CRM.Services.ITicketAgent.SendTicketMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.TicketAgent.SendTicketMessageSms*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.SendTicketMessageSms
  isExternal: true
  name: SendTicketMessageSms
  nameWithType: TicketAgent.SendTicketMessageSms
  fullName: SuperOffice.CRM.Services.TicketAgent.SendTicketMessageSms
- uid: SuperOffice.CRM.Services.ITicketAgent.SendTicketMessageSms(System.Int32,System.Int32,System.String[])
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.SendTicketMessageSms(System.Int32,System.Int32,System.String[])
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: SendTicketMessageSms(Int32, Int32, String[])
  nameWithType: ITicketAgent.SendTicketMessageSms(Int32, Int32, String[])
  fullName: SuperOffice.CRM.Services.ITicketAgent.SendTicketMessageSms(System.Int32, System.Int32, System.String[])
  nameWithType.vb: ITicketAgent.SendTicketMessageSms(Int32, Int32, String())
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.SendTicketMessageSms(System.Int32, System.Int32, System.String())
  name.vb: SendTicketMessageSms(Int32, Int32, String())
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.SendTicketMessageSms(System.Int32,System.Int32,System.String[])
    name: SendTicketMessageSms
    nameWithType: ITicketAgent.SendTicketMessageSms
    fullName: SuperOffice.CRM.Services.ITicketAgent.SendTicketMessageSms
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.SendTicketMessageSms(System.Int32,System.Int32,System.String[])
    name: SendTicketMessageSms
    nameWithType: ITicketAgent.SendTicketMessageSms
    fullName: SuperOffice.CRM.Services.ITicketAgent.SendTicketMessageSms
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.TicketAgent.SetTicketMessageImportant*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.SetTicketMessageImportant
  isExternal: true
  name: SetTicketMessageImportant
  nameWithType: TicketAgent.SetTicketMessageImportant
  fullName: SuperOffice.CRM.Services.TicketAgent.SetTicketMessageImportant
- uid: SuperOffice.CRM.Services.ITicketAgent.SetTicketMessageImportant(System.Int32,System.Boolean)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.SetTicketMessageImportant(System.Int32,System.Boolean)
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: SetTicketMessageImportant(Int32, Boolean)
  nameWithType: ITicketAgent.SetTicketMessageImportant(Int32, Boolean)
  fullName: SuperOffice.CRM.Services.ITicketAgent.SetTicketMessageImportant(System.Int32, System.Boolean)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.SetTicketMessageImportant(System.Int32,System.Boolean)
    name: SetTicketMessageImportant
    nameWithType: ITicketAgent.SetTicketMessageImportant
    fullName: SuperOffice.CRM.Services.ITicketAgent.SetTicketMessageImportant
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.SetTicketMessageImportant(System.Int32,System.Boolean)
    name: SetTicketMessageImportant
    nameWithType: ITicketAgent.SetTicketMessageImportant
    fullName: SuperOffice.CRM.Services.ITicketAgent.SetTicketMessageImportant
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.TicketAgent.CalculateMessageRecipients*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.CalculateMessageRecipients
  isExternal: true
  name: CalculateMessageRecipients
  nameWithType: TicketAgent.CalculateMessageRecipients
  fullName: SuperOffice.CRM.Services.TicketAgent.CalculateMessageRecipients
- uid: SuperOffice.CRM.Services.ITicketAgent.CalculateMessageRecipients(System.Int32,SuperOffice.Data.MessageActionType,System.Int32)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.CalculateMessageRecipients(System.Int32,SuperOffice.Data.MessageActionType,System.Int32)
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: CalculateMessageRecipients(Int32, MessageActionType, Int32)
  nameWithType: ITicketAgent.CalculateMessageRecipients(Int32, MessageActionType, Int32)
  fullName: SuperOffice.CRM.Services.ITicketAgent.CalculateMessageRecipients(System.Int32, SuperOffice.Data.MessageActionType, System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.CalculateMessageRecipients(System.Int32,SuperOffice.Data.MessageActionType,System.Int32)
    name: CalculateMessageRecipients
    nameWithType: ITicketAgent.CalculateMessageRecipients
    fullName: SuperOffice.CRM.Services.ITicketAgent.CalculateMessageRecipients
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.MessageActionType
    name: MessageActionType
    nameWithType: MessageActionType
    fullName: SuperOffice.Data.MessageActionType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.CalculateMessageRecipients(System.Int32,SuperOffice.Data.MessageActionType,System.Int32)
    name: CalculateMessageRecipients
    nameWithType: ITicketAgent.CalculateMessageRecipients
    fullName: SuperOffice.CRM.Services.ITicketAgent.CalculateMessageRecipients
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.MessageActionType
    name: MessageActionType
    nameWithType: MessageActionType
    fullName: SuperOffice.Data.MessageActionType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.MessageActionType
  isExternal: true
  name: MessageActionType
  nameWithType: MessageActionType
  fullName: SuperOffice.Data.MessageActionType
- uid: SuperOffice.CRM.Services.Recipient[]
  isExternal: true
  name: Recipient[]
  nameWithType: Recipient[]
  fullName: SuperOffice.CRM.Services.Recipient[]
  nameWithType.vb: Recipient()
  fullName.vb: SuperOffice.CRM.Services.Recipient()
  name.vb: Recipient()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.Recipient
    name: Recipient
    nameWithType: Recipient
    fullName: SuperOffice.CRM.Services.Recipient
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.Services.Recipient
    name: Recipient
    nameWithType: Recipient
    fullName: SuperOffice.CRM.Services.Recipient
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.TicketAgent.SaveTicketMessageEntityWithNotify*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.SaveTicketMessageEntityWithNotify
  isExternal: true
  name: SaveTicketMessageEntityWithNotify
  nameWithType: TicketAgent.SaveTicketMessageEntityWithNotify
  fullName: SuperOffice.CRM.Services.TicketAgent.SaveTicketMessageEntityWithNotify
- uid: SuperOffice.CRM.Services.ITicketAgent.SaveTicketMessageEntityWithNotify(SuperOffice.CRM.Services.TicketMessageEntity,System.Boolean)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.SaveTicketMessageEntityWithNotify(SuperOffice.CRM.Services.TicketMessageEntity,System.Boolean)
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: SaveTicketMessageEntityWithNotify(TicketMessageEntity, Boolean)
  nameWithType: ITicketAgent.SaveTicketMessageEntityWithNotify(TicketMessageEntity, Boolean)
  fullName: SuperOffice.CRM.Services.ITicketAgent.SaveTicketMessageEntityWithNotify(SuperOffice.CRM.Services.TicketMessageEntity, System.Boolean)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.SaveTicketMessageEntityWithNotify(SuperOffice.CRM.Services.TicketMessageEntity,System.Boolean)
    name: SaveTicketMessageEntityWithNotify
    nameWithType: ITicketAgent.SaveTicketMessageEntityWithNotify
    fullName: SuperOffice.CRM.Services.ITicketAgent.SaveTicketMessageEntityWithNotify
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Services.TicketMessageEntity
    name: TicketMessageEntity
    nameWithType: TicketMessageEntity
    fullName: SuperOffice.CRM.Services.TicketMessageEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.SaveTicketMessageEntityWithNotify(SuperOffice.CRM.Services.TicketMessageEntity,System.Boolean)
    name: SaveTicketMessageEntityWithNotify
    nameWithType: ITicketAgent.SaveTicketMessageEntityWithNotify
    fullName: SuperOffice.CRM.Services.ITicketAgent.SaveTicketMessageEntityWithNotify
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Services.TicketMessageEntity
    name: TicketMessageEntity
    nameWithType: TicketMessageEntity
    fullName: SuperOffice.CRM.Services.TicketMessageEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.TicketAgent.SaveTicketMessageEntityWithOptions*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.SaveTicketMessageEntityWithOptions
  isExternal: true
  name: SaveTicketMessageEntityWithOptions
  nameWithType: TicketAgent.SaveTicketMessageEntityWithOptions
  fullName: SuperOffice.CRM.Services.TicketAgent.SaveTicketMessageEntityWithOptions
- uid: SuperOffice.CRM.Services.ITicketAgent.SaveTicketMessageEntityWithOptions(SuperOffice.CRM.Services.TicketMessageEntity,System.Boolean,System.Int32[],System.Boolean)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.SaveTicketMessageEntityWithOptions(SuperOffice.CRM.Services.TicketMessageEntity,System.Boolean,System.Int32[],System.Boolean)
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: SaveTicketMessageEntityWithOptions(TicketMessageEntity, Boolean, Int32[], Boolean)
  nameWithType: ITicketAgent.SaveTicketMessageEntityWithOptions(TicketMessageEntity, Boolean, Int32[], Boolean)
  fullName: SuperOffice.CRM.Services.ITicketAgent.SaveTicketMessageEntityWithOptions(SuperOffice.CRM.Services.TicketMessageEntity, System.Boolean, System.Int32[], System.Boolean)
  nameWithType.vb: ITicketAgent.SaveTicketMessageEntityWithOptions(TicketMessageEntity, Boolean, Int32(), Boolean)
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.SaveTicketMessageEntityWithOptions(SuperOffice.CRM.Services.TicketMessageEntity, System.Boolean, System.Int32(), System.Boolean)
  name.vb: SaveTicketMessageEntityWithOptions(TicketMessageEntity, Boolean, Int32(), Boolean)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.SaveTicketMessageEntityWithOptions(SuperOffice.CRM.Services.TicketMessageEntity,System.Boolean,System.Int32[],System.Boolean)
    name: SaveTicketMessageEntityWithOptions
    nameWithType: ITicketAgent.SaveTicketMessageEntityWithOptions
    fullName: SuperOffice.CRM.Services.ITicketAgent.SaveTicketMessageEntityWithOptions
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Services.TicketMessageEntity
    name: TicketMessageEntity
    nameWithType: TicketMessageEntity
    fullName: SuperOffice.CRM.Services.TicketMessageEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.SaveTicketMessageEntityWithOptions(SuperOffice.CRM.Services.TicketMessageEntity,System.Boolean,System.Int32[],System.Boolean)
    name: SaveTicketMessageEntityWithOptions
    nameWithType: ITicketAgent.SaveTicketMessageEntityWithOptions
    fullName: SuperOffice.CRM.Services.ITicketAgent.SaveTicketMessageEntityWithOptions
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Services.TicketMessageEntity
    name: TicketMessageEntity
    nameWithType: TicketMessageEntity
    fullName: SuperOffice.CRM.Services.TicketMessageEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.TicketAgent.GetDefaultMessageContent*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.GetDefaultMessageContent
  isExternal: true
  name: GetDefaultMessageContent
  nameWithType: TicketAgent.GetDefaultMessageContent
  fullName: SuperOffice.CRM.Services.TicketAgent.GetDefaultMessageContent
- uid: SuperOffice.CRM.Services.ITicketAgent.GetDefaultMessageContent(System.Int32,SuperOffice.Data.MessageActionType,System.Int32)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.GetDefaultMessageContent(System.Int32,SuperOffice.Data.MessageActionType,System.Int32)
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: GetDefaultMessageContent(Int32, MessageActionType, Int32)
  nameWithType: ITicketAgent.GetDefaultMessageContent(Int32, MessageActionType, Int32)
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetDefaultMessageContent(System.Int32, SuperOffice.Data.MessageActionType, System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.GetDefaultMessageContent(System.Int32,SuperOffice.Data.MessageActionType,System.Int32)
    name: GetDefaultMessageContent
    nameWithType: ITicketAgent.GetDefaultMessageContent
    fullName: SuperOffice.CRM.Services.ITicketAgent.GetDefaultMessageContent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.MessageActionType
    name: MessageActionType
    nameWithType: MessageActionType
    fullName: SuperOffice.Data.MessageActionType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.GetDefaultMessageContent(System.Int32,SuperOffice.Data.MessageActionType,System.Int32)
    name: GetDefaultMessageContent
    nameWithType: ITicketAgent.GetDefaultMessageContent
    fullName: SuperOffice.CRM.Services.ITicketAgent.GetDefaultMessageContent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.MessageActionType
    name: MessageActionType
    nameWithType: MessageActionType
    fullName: SuperOffice.Data.MessageActionType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.TicketAgent.GetDefaultMessageContentFull*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.GetDefaultMessageContentFull
  isExternal: true
  name: GetDefaultMessageContentFull
  nameWithType: TicketAgent.GetDefaultMessageContentFull
  fullName: SuperOffice.CRM.Services.TicketAgent.GetDefaultMessageContentFull
- uid: SuperOffice.CRM.Services.ITicketAgent.GetDefaultMessageContentFull(System.Int32,SuperOffice.Data.MessageActionType,System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.GetDefaultMessageContentFull(System.Int32,SuperOffice.Data.MessageActionType,System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: GetDefaultMessageContentFull(Int32, MessageActionType, Int32, Int32)
  nameWithType: ITicketAgent.GetDefaultMessageContentFull(Int32, MessageActionType, Int32, Int32)
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetDefaultMessageContentFull(System.Int32, SuperOffice.Data.MessageActionType, System.Int32, System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.GetDefaultMessageContentFull(System.Int32,SuperOffice.Data.MessageActionType,System.Int32,System.Int32)
    name: GetDefaultMessageContentFull
    nameWithType: ITicketAgent.GetDefaultMessageContentFull
    fullName: SuperOffice.CRM.Services.ITicketAgent.GetDefaultMessageContentFull
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.MessageActionType
    name: MessageActionType
    nameWithType: MessageActionType
    fullName: SuperOffice.Data.MessageActionType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.GetDefaultMessageContentFull(System.Int32,SuperOffice.Data.MessageActionType,System.Int32,System.Int32)
    name: GetDefaultMessageContentFull
    nameWithType: ITicketAgent.GetDefaultMessageContentFull
    fullName: SuperOffice.CRM.Services.ITicketAgent.GetDefaultMessageContentFull
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.MessageActionType
    name: MessageActionType
    nameWithType: MessageActionType
    fullName: SuperOffice.Data.MessageActionType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.TicketMessageContent
  commentId: T:SuperOffice.CRM.Services.TicketMessageContent
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: TicketMessageContent
  nameWithType: TicketMessageContent
  fullName: SuperOffice.CRM.Services.TicketMessageContent
- uid: SuperOffice.CRM.Services.TicketAgent.GetDefaultMessageContentWithOptions*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.GetDefaultMessageContentWithOptions
  isExternal: true
  name: GetDefaultMessageContentWithOptions
  nameWithType: TicketAgent.GetDefaultMessageContentWithOptions
  fullName: SuperOffice.CRM.Services.TicketAgent.GetDefaultMessageContentWithOptions
- uid: SuperOffice.CRM.Services.ITicketAgent.GetDefaultMessageContentWithOptions(System.Int32,SuperOffice.Data.MessageActionType,System.Int32,System.Int32,System.Boolean)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.GetDefaultMessageContentWithOptions(System.Int32,SuperOffice.Data.MessageActionType,System.Int32,System.Int32,System.Boolean)
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: GetDefaultMessageContentWithOptions(Int32, MessageActionType, Int32, Int32, Boolean)
  nameWithType: ITicketAgent.GetDefaultMessageContentWithOptions(Int32, MessageActionType, Int32, Int32, Boolean)
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetDefaultMessageContentWithOptions(System.Int32, SuperOffice.Data.MessageActionType, System.Int32, System.Int32, System.Boolean)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.GetDefaultMessageContentWithOptions(System.Int32,SuperOffice.Data.MessageActionType,System.Int32,System.Int32,System.Boolean)
    name: GetDefaultMessageContentWithOptions
    nameWithType: ITicketAgent.GetDefaultMessageContentWithOptions
    fullName: SuperOffice.CRM.Services.ITicketAgent.GetDefaultMessageContentWithOptions
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.MessageActionType
    name: MessageActionType
    nameWithType: MessageActionType
    fullName: SuperOffice.Data.MessageActionType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.GetDefaultMessageContentWithOptions(System.Int32,SuperOffice.Data.MessageActionType,System.Int32,System.Int32,System.Boolean)
    name: GetDefaultMessageContentWithOptions
    nameWithType: ITicketAgent.GetDefaultMessageContentWithOptions
    fullName: SuperOffice.CRM.Services.ITicketAgent.GetDefaultMessageContentWithOptions
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.MessageActionType
    name: MessageActionType
    nameWithType: MessageActionType
    fullName: SuperOffice.Data.MessageActionType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.TicketAgent.GetTicketMessageWithEmbeddedData*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.GetTicketMessageWithEmbeddedData
  isExternal: true
  name: GetTicketMessageWithEmbeddedData
  nameWithType: TicketAgent.GetTicketMessageWithEmbeddedData
  fullName: SuperOffice.CRM.Services.TicketAgent.GetTicketMessageWithEmbeddedData
- uid: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageWithEmbeddedData(System.Int32,SuperOffice.Data.ImageEmbedType)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageWithEmbeddedData(System.Int32,SuperOffice.Data.ImageEmbedType)
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: GetTicketMessageWithEmbeddedData(Int32, ImageEmbedType)
  nameWithType: ITicketAgent.GetTicketMessageWithEmbeddedData(Int32, ImageEmbedType)
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageWithEmbeddedData(System.Int32, SuperOffice.Data.ImageEmbedType)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageWithEmbeddedData(System.Int32,SuperOffice.Data.ImageEmbedType)
    name: GetTicketMessageWithEmbeddedData
    nameWithType: ITicketAgent.GetTicketMessageWithEmbeddedData
    fullName: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageWithEmbeddedData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.ImageEmbedType
    name: ImageEmbedType
    nameWithType: ImageEmbedType
    fullName: SuperOffice.Data.ImageEmbedType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageWithEmbeddedData(System.Int32,SuperOffice.Data.ImageEmbedType)
    name: GetTicketMessageWithEmbeddedData
    nameWithType: ITicketAgent.GetTicketMessageWithEmbeddedData
    fullName: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageWithEmbeddedData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.ImageEmbedType
    name: ImageEmbedType
    nameWithType: ImageEmbedType
    fullName: SuperOffice.Data.ImageEmbedType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.ImageEmbedType
  isExternal: true
  name: ImageEmbedType
  nameWithType: ImageEmbedType
  fullName: SuperOffice.Data.ImageEmbedType
- uid: SuperOffice.CRM.Services.TicketAgent.DeleteMessageHeaders*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.DeleteMessageHeaders
  isExternal: true
  name: DeleteMessageHeaders
  nameWithType: TicketAgent.DeleteMessageHeaders
  fullName: SuperOffice.CRM.Services.TicketAgent.DeleteMessageHeaders
- uid: SuperOffice.CRM.Services.ITicketAgent.DeleteMessageHeaders(System.Int32[])
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.DeleteMessageHeaders(System.Int32[])
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: DeleteMessageHeaders(Int32[])
  nameWithType: ITicketAgent.DeleteMessageHeaders(Int32[])
  fullName: SuperOffice.CRM.Services.ITicketAgent.DeleteMessageHeaders(System.Int32[])
  nameWithType.vb: ITicketAgent.DeleteMessageHeaders(Int32())
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.DeleteMessageHeaders(System.Int32())
  name.vb: DeleteMessageHeaders(Int32())
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.DeleteMessageHeaders(System.Int32[])
    name: DeleteMessageHeaders
    nameWithType: ITicketAgent.DeleteMessageHeaders
    fullName: SuperOffice.CRM.Services.ITicketAgent.DeleteMessageHeaders
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.DeleteMessageHeaders(System.Int32[])
    name: DeleteMessageHeaders
    nameWithType: ITicketAgent.DeleteMessageHeaders
    fullName: SuperOffice.CRM.Services.ITicketAgent.DeleteMessageHeaders
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.TicketAgent.GetTicketMessageWithOptions*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.GetTicketMessageWithOptions
  isExternal: true
  name: GetTicketMessageWithOptions
  nameWithType: TicketAgent.GetTicketMessageWithOptions
  fullName: SuperOffice.CRM.Services.TicketAgent.GetTicketMessageWithOptions
- uid: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageWithOptions(System.Int32,System.Boolean)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageWithOptions(System.Int32,System.Boolean)
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: GetTicketMessageWithOptions(Int32, Boolean)
  nameWithType: ITicketAgent.GetTicketMessageWithOptions(Int32, Boolean)
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageWithOptions(System.Int32, System.Boolean)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageWithOptions(System.Int32,System.Boolean)
    name: GetTicketMessageWithOptions
    nameWithType: ITicketAgent.GetTicketMessageWithOptions
    fullName: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageWithOptions
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageWithOptions(System.Int32,System.Boolean)
    name: GetTicketMessageWithOptions
    nameWithType: ITicketAgent.GetTicketMessageWithOptions
    fullName: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageWithOptions
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.TicketAgent.GetTicketSummaries*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.GetTicketSummaries
  isExternal: true
  name: GetTicketSummaries
  nameWithType: TicketAgent.GetTicketSummaries
  fullName: SuperOffice.CRM.Services.TicketAgent.GetTicketSummaries
- uid: SuperOffice.CRM.Services.ITicketAgent.GetTicketSummaries(System.Int32[])
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.GetTicketSummaries(System.Int32[])
  parent: SuperOffice.CRM.Services.ITicketAgent
  isExternal: true
  name: GetTicketSummaries(Int32[])
  nameWithType: ITicketAgent.GetTicketSummaries(Int32[])
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetTicketSummaries(System.Int32[])
  nameWithType.vb: ITicketAgent.GetTicketSummaries(Int32())
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.GetTicketSummaries(System.Int32())
  name.vb: GetTicketSummaries(Int32())
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ITicketAgent.GetTicketSummaries(System.Int32[])
    name: GetTicketSummaries
    nameWithType: ITicketAgent.GetTicketSummaries
    fullName: SuperOffice.CRM.Services.ITicketAgent.GetTicketSummaries
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ITicketAgent.GetTicketSummaries(System.Int32[])
    name: GetTicketSummaries
    nameWithType: ITicketAgent.GetTicketSummaries
    fullName: SuperOffice.CRM.Services.ITicketAgent.GetTicketSummaries
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.TicketSummaryItem[]
  isExternal: true
  name: TicketSummaryItem[]
  nameWithType: TicketSummaryItem[]
  fullName: SuperOffice.CRM.Services.TicketSummaryItem[]
  nameWithType.vb: TicketSummaryItem()
  fullName.vb: SuperOffice.CRM.Services.TicketSummaryItem()
  name.vb: TicketSummaryItem()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.TicketSummaryItem
    name: TicketSummaryItem
    nameWithType: TicketSummaryItem
    fullName: SuperOffice.CRM.Services.TicketSummaryItem
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.Services.TicketSummaryItem
    name: TicketSummaryItem
    nameWithType: TicketSummaryItem
    fullName: SuperOffice.CRM.Services.TicketSummaryItem
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.TicketAgent.#ctor*
  commentId: Overload:SuperOffice.CRM.Services.TicketAgent.#ctor
  isExternal: true
  name: TicketAgent
  nameWithType: TicketAgent.TicketAgent
  fullName: SuperOffice.CRM.Services.TicketAgent.TicketAgent
