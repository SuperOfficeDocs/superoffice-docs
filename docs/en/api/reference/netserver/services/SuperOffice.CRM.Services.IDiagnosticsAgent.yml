### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent
  commentId: T:SuperOffice.CRM.Services.IDiagnosticsAgent
  id: IDiagnosticsAgent
  parent: SuperOffice.CRM.Services
  children:
  - SuperOffice.CRM.Services.IDiagnosticsAgent.AddWebAppUsageAsync(SuperOffice.CRM.Services.WebAppUsage[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IDiagnosticsAgent.ChangeLogSettingsAsync(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IDiagnosticsAgent.CollectDataAdditionsAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IDiagnosticsAgent.CollectTableSizesAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IDiagnosticsAgent.CollectWebUsageAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IDiagnosticsAgent.CollectWinUsageAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IDiagnosticsAgent.FlushCachesAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IDiagnosticsAgent.FlushCachesByNameAsync(System.String[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IDiagnosticsAgent.GetCacheInvalidationGenerationsAsync(System.String[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IDiagnosticsAgent.GetCacheNamesAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IDiagnosticsAgent.GetCacheStateAsync(System.String[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IDiagnosticsAgent.GetEntityCountsForAllUsersAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IDiagnosticsAgent.GetEntityCountsForCurrentUserAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IDiagnosticsAgent.GetSystemMessagesAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IDiagnosticsAgent.GetWebAppUsagesForPeriodAsync(System.DateTime,System.DateTime,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IDiagnosticsAgent.LogViewStateAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IDiagnosticsAgent.PerformTasksAfterCustomObjectTableDeletedAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IDiagnosticsAgent.PerformTasksAfterUpgradeAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IDiagnosticsAgent.RemoveExpiredSystemMessagesAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IDiagnosticsAgent.RemoveSystemMessageAsync(System.Int32,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IDiagnosticsAgent.RemoveSystemMessageForAssociateAsync(System.Int32,System.String,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IDiagnosticsAgent.ResyncUsersAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IDiagnosticsAgent.SendSystemMessageAsync(System.String,System.Int32,System.String,System.DateTime,SuperOffice.Data.SystemMessageType,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IDiagnosticsAgent.WebAppUsageExistsInPeriodAsync(System.Int32,System.String,System.DateTime,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IDiagnosticsAgent
  nameWithType: IDiagnosticsAgent
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent
  type: Interface
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Interface for the Diagnostics Agent

    Diagnostics, usage data collection, caches and flushing
  example:
  - >-
    <pre><code class="lang-csharp">using SuperOffice;

    using SuperOffice.CRM.Services;


    using (SoSession mySession = SoSession.Authenticate("user", "pass"))

    {
       using (DiagnosticsAgent agent = new DiagnosticsAgent())
       {
          // call methods on agent here...
       }
    }</code></pre>
  syntax:
    content: >-
      [Agent("Diagnostics Agent", "Interface for the Diagnostics Agent. Diagnostics, usage data collection, caches and flushing")]

      public interface IDiagnosticsAgent : IAgent
    content.vb: >-
      <Agent("Diagnostics Agent", "Interface for the Diagnostics Agent. Diagnostics, usage data collection, caches and flushing")>

      Public Interface IDiagnosticsAgent Inherits IAgent
  attributes:
  - type: SuperOffice.CRM.Services.Reflection.AgentAttribute
    ctor: SuperOffice.CRM.Services.Reflection.AgentAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Diagnostics Agent
    - type: System.String
      value: Interface for the Diagnostics Agent. Diagnostics, usage data collection, caches and flushing
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.FlushCachesAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IDiagnosticsAgent.FlushCachesAsync(System.Threading.CancellationToken)
  id: FlushCachesAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IDiagnosticsAgent
  langs:
  - csharp
  - vb
  name: FlushCachesAsync(CancellationToken)
  nameWithType: IDiagnosticsAgent.FlushCachesAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.FlushCachesAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Flushes all NetServer caches
  example: []
  syntax:
    content: Task FlushCachesAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function FlushCachesAsync(cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IDiagnosticsAgent.FlushCachesAsync*
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.GetCacheNamesAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IDiagnosticsAgent.GetCacheNamesAsync(System.Threading.CancellationToken)
  id: GetCacheNamesAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IDiagnosticsAgent
  langs:
  - csharp
  - vb
  name: GetCacheNamesAsync(CancellationToken)
  nameWithType: IDiagnosticsAgent.GetCacheNamesAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.GetCacheNamesAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get the name of the caches that can be flushed
  example: []
  syntax:
    content: Task<string[]> GetCacheNamesAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String[]}
      description: Name of the caches that can be flusehd
    content.vb: Function GetCacheNamesAsync(cancellationToken As CancellationToken = Nothing) As Task(Of String())
  overload: SuperOffice.CRM.Services.IDiagnosticsAgent.GetCacheNamesAsync*
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.FlushCachesByNameAsync(System.String[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IDiagnosticsAgent.FlushCachesByNameAsync(System.String[],System.Threading.CancellationToken)
  id: FlushCachesByNameAsync(System.String[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IDiagnosticsAgent
  langs:
  - csharp
  - vb
  name: FlushCachesByNameAsync(string[], CancellationToken)
  nameWithType: IDiagnosticsAgent.FlushCachesByNameAsync(string[], CancellationToken)
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.FlushCachesByNameAsync(string[], System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Flushes all NetServer caches named
  example: []
  syntax:
    content: Task FlushCachesByNameAsync(string[] cacheNames, CancellationToken cancellationToken = default)
    parameters:
    - id: cacheNames
      type: System.String[]
      description: Name of the cachnes to flush
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Function FlushCachesByNameAsync(cacheNames As String(), cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IDiagnosticsAgent.FlushCachesByNameAsync*
  nameWithType.vb: IDiagnosticsAgent.FlushCachesByNameAsync(String(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IDiagnosticsAgent.FlushCachesByNameAsync(String(), System.Threading.CancellationToken)
  name.vb: FlushCachesByNameAsync(String(), CancellationToken)
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.GetCacheStateAsync(System.String[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IDiagnosticsAgent.GetCacheStateAsync(System.String[],System.Threading.CancellationToken)
  id: GetCacheStateAsync(System.String[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IDiagnosticsAgent
  langs:
  - csharp
  - vb
  name: GetCacheStateAsync(string[], CancellationToken)
  nameWithType: IDiagnosticsAgent.GetCacheStateAsync(string[], CancellationToken)
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.GetCacheStateAsync(string[], System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get the current generation value of the named caches. State is opaque.
  example: []
  syntax:
    content: Task<string> GetCacheStateAsync(string[] cacheNames, CancellationToken cancellationToken = default)
    parameters:
    - id: cacheNames
      type: System.String[]
      description: Names of the caches to check
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Current state of the caches named. If not the same as previous value, then it is time to flush
    content.vb: Function GetCacheStateAsync(cacheNames As String(), cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Services.IDiagnosticsAgent.GetCacheStateAsync*
  nameWithType.vb: IDiagnosticsAgent.GetCacheStateAsync(String(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IDiagnosticsAgent.GetCacheStateAsync(String(), System.Threading.CancellationToken)
  name.vb: GetCacheStateAsync(String(), CancellationToken)
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.GetCacheInvalidationGenerationsAsync(System.String[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IDiagnosticsAgent.GetCacheInvalidationGenerationsAsync(System.String[],System.Threading.CancellationToken)
  id: GetCacheInvalidationGenerationsAsync(System.String[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IDiagnosticsAgent
  langs:
  - csharp
  - vb
  name: GetCacheInvalidationGenerationsAsync(string[], CancellationToken)
  nameWithType: IDiagnosticsAgent.GetCacheInvalidationGenerationsAsync(string[], CancellationToken)
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.GetCacheInvalidationGenerationsAsync(string[], System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get generation for provided names
  example: []
  syntax:
    content: Task<CacheInvalidation[]> GetCacheInvalidationGenerationsAsync(string[] names, CancellationToken cancellationToken = default)
    parameters:
    - id: names
      type: System.String[]
      description: Name of caches
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.CacheInvalidation[]}
      description: Array of caches with generation number
    content.vb: Function GetCacheInvalidationGenerationsAsync(names As String(), cancellationToken As CancellationToken = Nothing) As Task(Of CacheInvalidation())
  overload: SuperOffice.CRM.Services.IDiagnosticsAgent.GetCacheInvalidationGenerationsAsync*
  nameWithType.vb: IDiagnosticsAgent.GetCacheInvalidationGenerationsAsync(String(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IDiagnosticsAgent.GetCacheInvalidationGenerationsAsync(String(), System.Threading.CancellationToken)
  name.vb: GetCacheInvalidationGenerationsAsync(String(), CancellationToken)
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.GetEntityCountsForCurrentUserAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IDiagnosticsAgent.GetEntityCountsForCurrentUserAsync(System.Threading.CancellationToken)
  id: GetEntityCountsForCurrentUserAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IDiagnosticsAgent
  langs:
  - csharp
  - vb
  name: GetEntityCountsForCurrentUserAsync(CancellationToken)
  nameWithType: IDiagnosticsAgent.GetEntityCountsForCurrentUserAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.GetEntityCountsForCurrentUserAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get an array of entities and number of entities created for the current associate
  example: []
  syntax:
    content: Task<EntityCounts[]> GetEntityCountsForCurrentUserAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.EntityCounts[]}
      description: Array of EntityCounts[] for the current associate
    content.vb: Function GetEntityCountsForCurrentUserAsync(cancellationToken As CancellationToken = Nothing) As Task(Of EntityCounts())
  overload: SuperOffice.CRM.Services.IDiagnosticsAgent.GetEntityCountsForCurrentUserAsync*
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.GetEntityCountsForAllUsersAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IDiagnosticsAgent.GetEntityCountsForAllUsersAsync(System.Threading.CancellationToken)
  id: GetEntityCountsForAllUsersAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IDiagnosticsAgent
  langs:
  - csharp
  - vb
  name: GetEntityCountsForAllUsersAsync(CancellationToken)
  nameWithType: IDiagnosticsAgent.GetEntityCountsForAllUsersAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.GetEntityCountsForAllUsersAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get an array of entities and number of entities created for all associates.
  example: []
  syntax:
    content: Task<EntityCounts[]> GetEntityCountsForAllUsersAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.EntityCounts[]}
      description: Array of EntityCounts[] for all the users
    content.vb: Function GetEntityCountsForAllUsersAsync(cancellationToken As CancellationToken = Nothing) As Task(Of EntityCounts())
  overload: SuperOffice.CRM.Services.IDiagnosticsAgent.GetEntityCountsForAllUsersAsync*
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.LogViewStateAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IDiagnosticsAgent.LogViewStateAsync(System.String,System.Threading.CancellationToken)
  id: LogViewStateAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IDiagnosticsAgent
  langs:
  - csharp
  - vb
  name: LogViewStateAsync(string, CancellationToken)
  nameWithType: IDiagnosticsAgent.LogViewStateAsync(string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.LogViewStateAsync(string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Log a change in view state. The granularity of the logging depends on the current configuration. This call returns asynchronously, leaving the server to finish processing later on.
  example: []
  syntax:
    content: Task LogViewStateAsync(string viewState, CancellationToken cancellationToken = default)
    parameters:
    - id: viewState
      type: System.String
      description: Current view state to be logged
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function LogViewStateAsync(viewState As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IDiagnosticsAgent.LogViewStateAsync*
  nameWithType.vb: IDiagnosticsAgent.LogViewStateAsync(String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IDiagnosticsAgent.LogViewStateAsync(String, System.Threading.CancellationToken)
  name.vb: LogViewStateAsync(String, CancellationToken)
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.ChangeLogSettingsAsync(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IDiagnosticsAgent.ChangeLogSettingsAsync(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Threading.CancellationToken)
  id: ChangeLogSettingsAsync(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IDiagnosticsAgent
  langs:
  - csharp
  - vb
  name: ChangeLogSettingsAsync(bool, bool, bool, bool, bool, bool, bool, bool, CancellationToken)
  nameWithType: IDiagnosticsAgent.ChangeLogSettingsAsync(bool, bool, bool, bool, bool, bool, bool, bool, CancellationToken)
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.ChangeLogSettingsAsync(bool, bool, bool, bool, bool, bool, bool, bool, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Change NetServer log settings.
  example: []
  syntax:
    content: Task ChangeLogSettingsAsync(bool logWarning, bool logInformation, bool logSuccessAudit, bool logFailureAudit, bool logToEventLog, bool logToSuperOffice, bool logToFile, bool logToTrace, CancellationToken cancellationToken = default)
    parameters:
    - id: logWarning
      type: System.Boolean
      description: Turn on warning log
    - id: logInformation
      type: System.Boolean
      description: Turn on information log
    - id: logSuccessAudit
      type: System.Boolean
      description: Turn on success audit log
    - id: logFailureAudit
      type: System.Boolean
      description: Turn on failure audit log
    - id: logToEventLog
      type: System.Boolean
      description: Log to event log
    - id: logToSuperOffice
      type: System.Boolean
      description: Log to SuperOffice
    - id: logToFile
      type: System.Boolean
      description: Log to file
    - id: logToTrace
      type: System.Boolean
      description: Log to trace
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function ChangeLogSettingsAsync(logWarning As Boolean, logInformation As Boolean, logSuccessAudit As Boolean, logFailureAudit As Boolean, logToEventLog As Boolean, logToSuperOffice As Boolean, logToFile As Boolean, logToTrace As Boolean, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IDiagnosticsAgent.ChangeLogSettingsAsync*
  nameWithType.vb: IDiagnosticsAgent.ChangeLogSettingsAsync(Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IDiagnosticsAgent.ChangeLogSettingsAsync(Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, System.Threading.CancellationToken)
  name.vb: ChangeLogSettingsAsync(Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, CancellationToken)
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.CollectDataAdditionsAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IDiagnosticsAgent.CollectDataAdditionsAsync(System.Threading.CancellationToken)
  id: CollectDataAdditionsAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IDiagnosticsAgent
  langs:
  - csharp
  - vb
  name: CollectDataAdditionsAsync(CancellationToken)
  nameWithType: IDiagnosticsAgent.CollectDataAdditionsAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.CollectDataAdditionsAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: 'Collect and transmit usage statistics: Database Additions. If opted-out then this call does nothing. The call returns immediately (starting a background thread), and updates CS scheduler table to set the next run time.'
  example: []
  syntax:
    content: Task CollectDataAdditionsAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Function CollectDataAdditionsAsync(cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IDiagnosticsAgent.CollectDataAdditionsAsync*
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.CollectWinUsageAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IDiagnosticsAgent.CollectWinUsageAsync(System.Threading.CancellationToken)
  id: CollectWinUsageAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IDiagnosticsAgent
  langs:
  - csharp
  - vb
  name: CollectWinUsageAsync(CancellationToken)
  nameWithType: IDiagnosticsAgent.CollectWinUsageAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.CollectWinUsageAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: 'Collect and transmit usage statistics: Windows CRM Client Usage. If opted-out then this call does nothing. The call returns immediately (starting a background thread), and updates CS scheduler table to set the next run time.'
  example: []
  syntax:
    content: Task CollectWinUsageAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Function CollectWinUsageAsync(cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IDiagnosticsAgent.CollectWinUsageAsync*
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.CollectWebUsageAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IDiagnosticsAgent.CollectWebUsageAsync(System.Threading.CancellationToken)
  id: CollectWebUsageAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IDiagnosticsAgent
  langs:
  - csharp
  - vb
  name: CollectWebUsageAsync(CancellationToken)
  nameWithType: IDiagnosticsAgent.CollectWebUsageAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.CollectWebUsageAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: 'Collect and transmit usage statistics: Web-based clients Usage. If opted-out then this call does nothing. The call returns immediately (starting a background thread), and updates CS scheduler table to set the next run time.'
  example: []
  syntax:
    content: Task CollectWebUsageAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Function CollectWebUsageAsync(cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IDiagnosticsAgent.CollectWebUsageAsync*
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.CollectTableSizesAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IDiagnosticsAgent.CollectTableSizesAsync(System.Threading.CancellationToken)
  id: CollectTableSizesAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IDiagnosticsAgent
  langs:
  - csharp
  - vb
  name: CollectTableSizesAsync(CancellationToken)
  nameWithType: IDiagnosticsAgent.CollectTableSizesAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.CollectTableSizesAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: 'Collect and transmit usage statistics: Table Sizes. If opted-out then this call does nothing. The call returns immediately (starting a background thread), and updates CS scheduler table to set the next run time.'
  example: []
  syntax:
    content: Task CollectTableSizesAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Function CollectTableSizesAsync(cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IDiagnosticsAgent.CollectTableSizesAsync*
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.ResyncUsersAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IDiagnosticsAgent.ResyncUsersAsync(System.Threading.CancellationToken)
  id: ResyncUsersAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IDiagnosticsAgent
  langs:
  - csharp
  - vb
  name: ResyncUsersAsync(CancellationToken)
  nameWithType: IDiagnosticsAgent.ResyncUsersAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.ResyncUsersAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Resynchronize user information with SuperOffice Community, if opted-out then this call does nothing. The call returns immediately (starting a background thread), and updates CS scheduler table to set the next run time.
  example: []
  syntax:
    content: Task ResyncUsersAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Function ResyncUsersAsync(cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IDiagnosticsAgent.ResyncUsersAsync*
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.SendSystemMessageAsync(System.String,System.Int32,System.String,System.DateTime,SuperOffice.Data.SystemMessageType,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IDiagnosticsAgent.SendSystemMessageAsync(System.String,System.Int32,System.String,System.DateTime,SuperOffice.Data.SystemMessageType,System.Threading.CancellationToken)
  id: SendSystemMessageAsync(System.String,System.Int32,System.String,System.DateTime,SuperOffice.Data.SystemMessageType,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IDiagnosticsAgent
  langs:
  - csharp
  - vb
  name: SendSystemMessageAsync(string, int, string, DateTime, SystemMessageType, CancellationToken)
  nameWithType: IDiagnosticsAgent.SendSystemMessageAsync(string, int, string, DateTime, SystemMessageType, CancellationToken)
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.SendSystemMessageAsync(string, int, string, System.DateTime, SuperOffice.Data.SystemMessageType, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Adds a system message for a specific associate.
  example: []
  syntax:
    content: Task SendSystemMessageAsync(string systemMessageId, int associateId, string markdownMessage, DateTime expire, SystemMessageType type, CancellationToken cancellationToken = default)
    parameters:
    - id: systemMessageId
      type: System.String
      description: The message string id
    - id: associateId
      type: System.Int32
      description: The associateId of the message target.
    - id: markdownMessage
      type: System.String
      description: Markdown message to be displayed to the user
    - id: expire
      type: System.DateTime
      description: When the message will no longer be available
    - id: type
      type: SuperOffice.Data.SystemMessageType
      description: 'Type of message, example: info, warning, error'
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function SendSystemMessageAsync(systemMessageId As String, associateId As Integer, markdownMessage As String, expire As Date, type As SystemMessageType, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IDiagnosticsAgent.SendSystemMessageAsync*
  nameWithType.vb: IDiagnosticsAgent.SendSystemMessageAsync(String, Integer, String, Date, SystemMessageType, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IDiagnosticsAgent.SendSystemMessageAsync(String, Integer, String, Date, SuperOffice.Data.SystemMessageType, System.Threading.CancellationToken)
  name.vb: SendSystemMessageAsync(String, Integer, String, Date, SystemMessageType, CancellationToken)
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.RemoveSystemMessageAsync(System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IDiagnosticsAgent.RemoveSystemMessageAsync(System.Int32,System.String,System.Threading.CancellationToken)
  id: RemoveSystemMessageAsync(System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IDiagnosticsAgent
  langs:
  - csharp
  - vb
  name: RemoveSystemMessageAsync(int, string, CancellationToken)
  nameWithType: IDiagnosticsAgent.RemoveSystemMessageAsync(int, string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.RemoveSystemMessageAsync(int, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Removes a system message for current associate
  example: []
  syntax:
    content: Task RemoveSystemMessageAsync(int onlineappId, string systemMessageId, CancellationToken cancellationToken = default)
    parameters:
    - id: onlineappId
      type: System.Int32
      description: Id of the online app that owns this message
    - id: systemMessageId
      type: System.String
      description: Message identifier, used for message  removal
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function RemoveSystemMessageAsync(onlineappId As Integer, systemMessageId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IDiagnosticsAgent.RemoveSystemMessageAsync*
  nameWithType.vb: IDiagnosticsAgent.RemoveSystemMessageAsync(Integer, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IDiagnosticsAgent.RemoveSystemMessageAsync(Integer, String, System.Threading.CancellationToken)
  name.vb: RemoveSystemMessageAsync(Integer, String, CancellationToken)
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.RemoveSystemMessageForAssociateAsync(System.Int32,System.String,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IDiagnosticsAgent.RemoveSystemMessageForAssociateAsync(System.Int32,System.String,System.Int32,System.Threading.CancellationToken)
  id: RemoveSystemMessageForAssociateAsync(System.Int32,System.String,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IDiagnosticsAgent
  langs:
  - csharp
  - vb
  name: RemoveSystemMessageForAssociateAsync(int, string, int, CancellationToken)
  nameWithType: IDiagnosticsAgent.RemoveSystemMessageForAssociateAsync(int, string, int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.RemoveSystemMessageForAssociateAsync(int, string, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Removes a system message for specific associate.
  example: []
  syntax:
    content: Task RemoveSystemMessageForAssociateAsync(int onlineappId, string systemMessageId, int associateId, CancellationToken cancellationToken = default)
    parameters:
    - id: onlineappId
      type: System.Int32
      description: Id of the online app that owns this message
    - id: systemMessageId
      type: System.String
      description: Message identifier, used for message update or removal
    - id: associateId
      type: System.Int32
      description: The associateId of the message target.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function RemoveSystemMessageForAssociateAsync(onlineappId As Integer, systemMessageId As String, associateId As Integer, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IDiagnosticsAgent.RemoveSystemMessageForAssociateAsync*
  nameWithType.vb: IDiagnosticsAgent.RemoveSystemMessageForAssociateAsync(Integer, String, Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IDiagnosticsAgent.RemoveSystemMessageForAssociateAsync(Integer, String, Integer, System.Threading.CancellationToken)
  name.vb: RemoveSystemMessageForAssociateAsync(Integer, String, Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.GetSystemMessagesAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IDiagnosticsAgent.GetSystemMessagesAsync(System.Int32,System.Threading.CancellationToken)
  id: GetSystemMessagesAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IDiagnosticsAgent
  langs:
  - csharp
  - vb
  name: GetSystemMessagesAsync(int, CancellationToken)
  nameWithType: IDiagnosticsAgent.GetSystemMessagesAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.GetSystemMessagesAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Retrieves a list of system messages for a specific associate.
  example: []
  syntax:
    content: Task<SystemMessage[]> GetSystemMessagesAsync(int associateId, CancellationToken cancellationToken = default)
    parameters:
    - id: associateId
      type: System.Int32
      description: The associateId of the message target.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.SystemMessage[]}
      description: List of SystemMessages for desired associate
    content.vb: Function GetSystemMessagesAsync(associateId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of SystemMessage())
  overload: SuperOffice.CRM.Services.IDiagnosticsAgent.GetSystemMessagesAsync*
  nameWithType.vb: IDiagnosticsAgent.GetSystemMessagesAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IDiagnosticsAgent.GetSystemMessagesAsync(Integer, System.Threading.CancellationToken)
  name.vb: GetSystemMessagesAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.RemoveExpiredSystemMessagesAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IDiagnosticsAgent.RemoveExpiredSystemMessagesAsync(System.Threading.CancellationToken)
  id: RemoveExpiredSystemMessagesAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IDiagnosticsAgent
  langs:
  - csharp
  - vb
  name: RemoveExpiredSystemMessagesAsync(CancellationToken)
  nameWithType: IDiagnosticsAgent.RemoveExpiredSystemMessagesAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.RemoveExpiredSystemMessagesAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Deletes expired system messages.
  example: []
  syntax:
    content: Task RemoveExpiredSystemMessagesAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function RemoveExpiredSystemMessagesAsync(cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IDiagnosticsAgent.RemoveExpiredSystemMessagesAsync*
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.PerformTasksAfterUpgradeAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IDiagnosticsAgent.PerformTasksAfterUpgradeAsync(System.Threading.CancellationToken)
  id: PerformTasksAfterUpgradeAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IDiagnosticsAgent
  langs:
  - csharp
  - vb
  name: PerformTasksAfterUpgradeAsync(CancellationToken)
  nameWithType: IDiagnosticsAgent.PerformTasksAfterUpgradeAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.PerformTasksAfterUpgradeAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: After upgrading to a new fileset, there may be tasks that need to be done. Examples - import new TypicalSearches, if present. Tasks performed here need to be idempotent and independent of the actual upgrade jump (what was the previous version). They should complete in a reasonable time, not more than a few minutes maximum.
  example: []
  syntax:
    content: Task<string> PerformTasksAfterUpgradeAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Message that can be shown to the user, summarizing what has been done, if anything.
    content.vb: Function PerformTasksAfterUpgradeAsync(cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Services.IDiagnosticsAgent.PerformTasksAfterUpgradeAsync*
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.PerformTasksAfterCustomObjectTableDeletedAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IDiagnosticsAgent.PerformTasksAfterCustomObjectTableDeletedAsync(System.String,System.Threading.CancellationToken)
  id: PerformTasksAfterCustomObjectTableDeletedAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IDiagnosticsAgent
  langs:
  - csharp
  - vb
  name: PerformTasksAfterCustomObjectTableDeletedAsync(string, CancellationToken)
  nameWithType: IDiagnosticsAgent.PerformTasksAfterCustomObjectTableDeletedAsync(string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.PerformTasksAfterCustomObjectTableDeletedAsync(string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: A temporary method to be used from c++ until CustomObjectsAgent.DeleteTable implemented in NetServer
  example: []
  syntax:
    content: Task PerformTasksAfterCustomObjectTableDeletedAsync(string tableName, CancellationToken cancellationToken = default)
    parameters:
    - id: tableName
      type: System.String
      description: Name of DB table of the custom object that was deleted. E.g., 'y_car'
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Function PerformTasksAfterCustomObjectTableDeletedAsync(tableName As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IDiagnosticsAgent.PerformTasksAfterCustomObjectTableDeletedAsync*
  nameWithType.vb: IDiagnosticsAgent.PerformTasksAfterCustomObjectTableDeletedAsync(String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IDiagnosticsAgent.PerformTasksAfterCustomObjectTableDeletedAsync(String, System.Threading.CancellationToken)
  name.vb: PerformTasksAfterCustomObjectTableDeletedAsync(String, CancellationToken)
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.AddWebAppUsageAsync(SuperOffice.CRM.Services.WebAppUsage[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IDiagnosticsAgent.AddWebAppUsageAsync(SuperOffice.CRM.Services.WebAppUsage[],System.Threading.CancellationToken)
  id: AddWebAppUsageAsync(SuperOffice.CRM.Services.WebAppUsage[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IDiagnosticsAgent
  langs:
  - csharp
  - vb
  name: AddWebAppUsageAsync(WebAppUsage[], CancellationToken)
  nameWithType: IDiagnosticsAgent.AddWebAppUsageAsync(WebAppUsage[], CancellationToken)
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.AddWebAppUsageAsync(SuperOffice.CRM.Services.WebAppUsage[], System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Adds WebApp usage to existing log
  example: []
  syntax:
    content: Task AddWebAppUsageAsync(WebAppUsage[] webAppUsages, CancellationToken cancellationToken = default)
    parameters:
    - id: webAppUsages
      type: SuperOffice.CRM.Services.WebAppUsage[]
      description: Web app usage.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function AddWebAppUsageAsync(webAppUsages As WebAppUsage(), cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IDiagnosticsAgent.AddWebAppUsageAsync*
  nameWithType.vb: IDiagnosticsAgent.AddWebAppUsageAsync(WebAppUsage(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IDiagnosticsAgent.AddWebAppUsageAsync(SuperOffice.CRM.Services.WebAppUsage(), System.Threading.CancellationToken)
  name.vb: AddWebAppUsageAsync(WebAppUsage(), CancellationToken)
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.WebAppUsageExistsInPeriodAsync(System.Int32,System.String,System.DateTime,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IDiagnosticsAgent.WebAppUsageExistsInPeriodAsync(System.Int32,System.String,System.DateTime,System.Threading.CancellationToken)
  id: WebAppUsageExistsInPeriodAsync(System.Int32,System.String,System.DateTime,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IDiagnosticsAgent
  langs:
  - csharp
  - vb
  name: WebAppUsageExistsInPeriodAsync(int, string, DateTime, CancellationToken)
  nameWithType: IDiagnosticsAgent.WebAppUsageExistsInPeriodAsync(int, string, DateTime, CancellationToken)
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.WebAppUsageExistsInPeriodAsync(int, string, System.DateTime, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Returns true if viewState has been clicked at least once since FromDate, if asscoiateId &lt; 0 or FromDate is DateTime.MinValue no restriction given for those parameters
  example: []
  syntax:
    content: Task<bool> WebAppUsageExistsInPeriodAsync(int associateId, string viewState, DateTime fromDate, CancellationToken cancellationToken = default)
    parameters:
    - id: associateId
      type: System.Int32
      description: The asscoiate id to look for webapp usage
    - id: viewState
      type: System.String
      description: The viewState to search for
    - id: fromDate
      type: System.DateTime
      description: The datetime to restrict webapp usage on
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: Returns true if viewState has been clicked at least once since FromDate
    content.vb: Function WebAppUsageExistsInPeriodAsync(associateId As Integer, viewState As String, fromDate As Date, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.Services.IDiagnosticsAgent.WebAppUsageExistsInPeriodAsync*
  nameWithType.vb: IDiagnosticsAgent.WebAppUsageExistsInPeriodAsync(Integer, String, Date, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IDiagnosticsAgent.WebAppUsageExistsInPeriodAsync(Integer, String, Date, System.Threading.CancellationToken)
  name.vb: WebAppUsageExistsInPeriodAsync(Integer, String, Date, CancellationToken)
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.GetWebAppUsagesForPeriodAsync(System.DateTime,System.DateTime,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IDiagnosticsAgent.GetWebAppUsagesForPeriodAsync(System.DateTime,System.DateTime,System.String,System.Threading.CancellationToken)
  id: GetWebAppUsagesForPeriodAsync(System.DateTime,System.DateTime,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IDiagnosticsAgent
  langs:
  - csharp
  - vb
  name: GetWebAppUsagesForPeriodAsync(DateTime, DateTime, string, CancellationToken)
  nameWithType: IDiagnosticsAgent.GetWebAppUsagesForPeriodAsync(DateTime, DateTime, string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.GetWebAppUsagesForPeriodAsync(System.DateTime, System.DateTime, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get all WebAppUsages for a given period, that match an optional search term
  example: []
  syntax:
    content: Task<WebAppUsage[]> GetWebAppUsagesForPeriodAsync(DateTime fromDate, DateTime toDate, string searchTerm, CancellationToken cancellationToken = default)
    parameters:
    - id: fromDate
      type: System.DateTime
      description: ''
    - id: toDate
      type: System.DateTime
      description: ''
    - id: searchTerm
      type: System.String
      description: ViewState search term. '%' is the wildcard character, for example 'Pocket%' will match all viewstates starting with 'Pocket'. If empty, all viewstates will be matched
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.WebAppUsage[]}
      description: ''
    content.vb: Function GetWebAppUsagesForPeriodAsync(fromDate As Date, toDate As Date, searchTerm As String, cancellationToken As CancellationToken = Nothing) As Task(Of WebAppUsage())
  overload: SuperOffice.CRM.Services.IDiagnosticsAgent.GetWebAppUsagesForPeriodAsync*
  nameWithType.vb: IDiagnosticsAgent.GetWebAppUsagesForPeriodAsync(Date, Date, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IDiagnosticsAgent.GetWebAppUsagesForPeriodAsync(Date, Date, String, System.Threading.CancellationToken)
  name.vb: GetWebAppUsagesForPeriodAsync(Date, Date, String, CancellationToken)
references:
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.FlushCachesAsync*
  commentId: Overload:SuperOffice.CRM.Services.IDiagnosticsAgent.FlushCachesAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IDiagnosticsAgent.html#SuperOffice_CRM_Services_IDiagnosticsAgent_FlushCachesAsync_System_Threading_CancellationToken_
  name: FlushCachesAsync
  nameWithType: IDiagnosticsAgent.FlushCachesAsync
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.FlushCachesAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.GetCacheNamesAsync*
  commentId: Overload:SuperOffice.CRM.Services.IDiagnosticsAgent.GetCacheNamesAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IDiagnosticsAgent.html#SuperOffice_CRM_Services_IDiagnosticsAgent_GetCacheNamesAsync_System_Threading_CancellationToken_
  name: GetCacheNamesAsync
  nameWithType: IDiagnosticsAgent.GetCacheNamesAsync
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.GetCacheNamesAsync
- uid: System.Threading.Tasks.Task{System.String[]}
  commentId: T:System.Threading.Tasks.Task{System.String[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<string[]>
  nameWithType: Task<string[]>
  fullName: System.Threading.Tasks.Task<string[]>
  nameWithType.vb: Task(Of String())
  fullName.vb: System.Threading.Tasks.Task(Of String())
  name.vb: Task(Of String())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.FlushCachesByNameAsync*
  commentId: Overload:SuperOffice.CRM.Services.IDiagnosticsAgent.FlushCachesByNameAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IDiagnosticsAgent.html#SuperOffice_CRM_Services_IDiagnosticsAgent_FlushCachesByNameAsync_System_String___System_Threading_CancellationToken_
  name: FlushCachesByNameAsync
  nameWithType: IDiagnosticsAgent.FlushCachesByNameAsync
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.FlushCachesByNameAsync
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.GetCacheStateAsync*
  commentId: Overload:SuperOffice.CRM.Services.IDiagnosticsAgent.GetCacheStateAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IDiagnosticsAgent.html#SuperOffice_CRM_Services_IDiagnosticsAgent_GetCacheStateAsync_System_String___System_Threading_CancellationToken_
  name: GetCacheStateAsync
  nameWithType: IDiagnosticsAgent.GetCacheStateAsync
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.GetCacheStateAsync
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<string>
  nameWithType: Task<string>
  fullName: System.Threading.Tasks.Task<string>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.GetCacheInvalidationGenerationsAsync*
  commentId: Overload:SuperOffice.CRM.Services.IDiagnosticsAgent.GetCacheInvalidationGenerationsAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IDiagnosticsAgent.html#SuperOffice_CRM_Services_IDiagnosticsAgent_GetCacheInvalidationGenerationsAsync_System_String___System_Threading_CancellationToken_
  name: GetCacheInvalidationGenerationsAsync
  nameWithType: IDiagnosticsAgent.GetCacheInvalidationGenerationsAsync
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.GetCacheInvalidationGenerationsAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.CacheInvalidation[]}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.CacheInvalidation[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<CacheInvalidation[]>
  nameWithType: Task<CacheInvalidation[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.CacheInvalidation[]>
  nameWithType.vb: Task(Of CacheInvalidation())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.CacheInvalidation())
  name.vb: Task(Of CacheInvalidation())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.CacheInvalidation
    name: CacheInvalidation
    isExternal: true
    href: SuperOffice.CRM.Services.CacheInvalidation.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.CacheInvalidation
    name: CacheInvalidation
    isExternal: true
    href: SuperOffice.CRM.Services.CacheInvalidation.html
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.GetEntityCountsForCurrentUserAsync*
  commentId: Overload:SuperOffice.CRM.Services.IDiagnosticsAgent.GetEntityCountsForCurrentUserAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IDiagnosticsAgent.html#SuperOffice_CRM_Services_IDiagnosticsAgent_GetEntityCountsForCurrentUserAsync_System_Threading_CancellationToken_
  name: GetEntityCountsForCurrentUserAsync
  nameWithType: IDiagnosticsAgent.GetEntityCountsForCurrentUserAsync
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.GetEntityCountsForCurrentUserAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.EntityCounts[]}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.EntityCounts[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<EntityCounts[]>
  nameWithType: Task<EntityCounts[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.EntityCounts[]>
  nameWithType.vb: Task(Of EntityCounts())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.EntityCounts())
  name.vb: Task(Of EntityCounts())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.EntityCounts
    name: EntityCounts
    isExternal: true
    href: SuperOffice.CRM.Services.EntityCounts.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.EntityCounts
    name: EntityCounts
    isExternal: true
    href: SuperOffice.CRM.Services.EntityCounts.html
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.GetEntityCountsForAllUsersAsync*
  commentId: Overload:SuperOffice.CRM.Services.IDiagnosticsAgent.GetEntityCountsForAllUsersAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IDiagnosticsAgent.html#SuperOffice_CRM_Services_IDiagnosticsAgent_GetEntityCountsForAllUsersAsync_System_Threading_CancellationToken_
  name: GetEntityCountsForAllUsersAsync
  nameWithType: IDiagnosticsAgent.GetEntityCountsForAllUsersAsync
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.GetEntityCountsForAllUsersAsync
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.LogViewStateAsync*
  commentId: Overload:SuperOffice.CRM.Services.IDiagnosticsAgent.LogViewStateAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IDiagnosticsAgent.html#SuperOffice_CRM_Services_IDiagnosticsAgent_LogViewStateAsync_System_String_System_Threading_CancellationToken_
  name: LogViewStateAsync
  nameWithType: IDiagnosticsAgent.LogViewStateAsync
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.LogViewStateAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.ChangeLogSettingsAsync*
  commentId: Overload:SuperOffice.CRM.Services.IDiagnosticsAgent.ChangeLogSettingsAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IDiagnosticsAgent.html#SuperOffice_CRM_Services_IDiagnosticsAgent_ChangeLogSettingsAsync_System_Boolean_System_Boolean_System_Boolean_System_Boolean_System_Boolean_System_Boolean_System_Boolean_System_Boolean_System_Threading_CancellationToken_
  name: ChangeLogSettingsAsync
  nameWithType: IDiagnosticsAgent.ChangeLogSettingsAsync
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.ChangeLogSettingsAsync
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.CollectDataAdditionsAsync*
  commentId: Overload:SuperOffice.CRM.Services.IDiagnosticsAgent.CollectDataAdditionsAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IDiagnosticsAgent.html#SuperOffice_CRM_Services_IDiagnosticsAgent_CollectDataAdditionsAsync_System_Threading_CancellationToken_
  name: CollectDataAdditionsAsync
  nameWithType: IDiagnosticsAgent.CollectDataAdditionsAsync
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.CollectDataAdditionsAsync
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.CollectWinUsageAsync*
  commentId: Overload:SuperOffice.CRM.Services.IDiagnosticsAgent.CollectWinUsageAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IDiagnosticsAgent.html#SuperOffice_CRM_Services_IDiagnosticsAgent_CollectWinUsageAsync_System_Threading_CancellationToken_
  name: CollectWinUsageAsync
  nameWithType: IDiagnosticsAgent.CollectWinUsageAsync
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.CollectWinUsageAsync
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.CollectWebUsageAsync*
  commentId: Overload:SuperOffice.CRM.Services.IDiagnosticsAgent.CollectWebUsageAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IDiagnosticsAgent.html#SuperOffice_CRM_Services_IDiagnosticsAgent_CollectWebUsageAsync_System_Threading_CancellationToken_
  name: CollectWebUsageAsync
  nameWithType: IDiagnosticsAgent.CollectWebUsageAsync
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.CollectWebUsageAsync
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.CollectTableSizesAsync*
  commentId: Overload:SuperOffice.CRM.Services.IDiagnosticsAgent.CollectTableSizesAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IDiagnosticsAgent.html#SuperOffice_CRM_Services_IDiagnosticsAgent_CollectTableSizesAsync_System_Threading_CancellationToken_
  name: CollectTableSizesAsync
  nameWithType: IDiagnosticsAgent.CollectTableSizesAsync
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.CollectTableSizesAsync
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.ResyncUsersAsync*
  commentId: Overload:SuperOffice.CRM.Services.IDiagnosticsAgent.ResyncUsersAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IDiagnosticsAgent.html#SuperOffice_CRM_Services_IDiagnosticsAgent_ResyncUsersAsync_System_Threading_CancellationToken_
  name: ResyncUsersAsync
  nameWithType: IDiagnosticsAgent.ResyncUsersAsync
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.ResyncUsersAsync
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.SendSystemMessageAsync*
  commentId: Overload:SuperOffice.CRM.Services.IDiagnosticsAgent.SendSystemMessageAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IDiagnosticsAgent.html#SuperOffice_CRM_Services_IDiagnosticsAgent_SendSystemMessageAsync_System_String_System_Int32_System_String_System_DateTime_SuperOffice_Data_SystemMessageType_System_Threading_CancellationToken_
  name: SendSystemMessageAsync
  nameWithType: IDiagnosticsAgent.SendSystemMessageAsync
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.SendSystemMessageAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: SuperOffice.Data.SystemMessageType
  isExternal: true
  name: SystemMessageType
  nameWithType: SystemMessageType
  fullName: SuperOffice.Data.SystemMessageType
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.RemoveSystemMessageAsync*
  commentId: Overload:SuperOffice.CRM.Services.IDiagnosticsAgent.RemoveSystemMessageAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IDiagnosticsAgent.html#SuperOffice_CRM_Services_IDiagnosticsAgent_RemoveSystemMessageAsync_System_Int32_System_String_System_Threading_CancellationToken_
  name: RemoveSystemMessageAsync
  nameWithType: IDiagnosticsAgent.RemoveSystemMessageAsync
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.RemoveSystemMessageAsync
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.RemoveSystemMessageForAssociateAsync*
  commentId: Overload:SuperOffice.CRM.Services.IDiagnosticsAgent.RemoveSystemMessageForAssociateAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IDiagnosticsAgent.html#SuperOffice_CRM_Services_IDiagnosticsAgent_RemoveSystemMessageForAssociateAsync_System_Int32_System_String_System_Int32_System_Threading_CancellationToken_
  name: RemoveSystemMessageForAssociateAsync
  nameWithType: IDiagnosticsAgent.RemoveSystemMessageForAssociateAsync
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.RemoveSystemMessageForAssociateAsync
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.GetSystemMessagesAsync*
  commentId: Overload:SuperOffice.CRM.Services.IDiagnosticsAgent.GetSystemMessagesAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IDiagnosticsAgent.html#SuperOffice_CRM_Services_IDiagnosticsAgent_GetSystemMessagesAsync_System_Int32_System_Threading_CancellationToken_
  name: GetSystemMessagesAsync
  nameWithType: IDiagnosticsAgent.GetSystemMessagesAsync
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.GetSystemMessagesAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.SystemMessage[]}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.SystemMessage[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<SystemMessage[]>
  nameWithType: Task<SystemMessage[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.SystemMessage[]>
  nameWithType.vb: Task(Of SystemMessage())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.SystemMessage())
  name.vb: Task(Of SystemMessage())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.SystemMessage
    name: SystemMessage
    isExternal: true
    href: SuperOffice.CRM.Services.SystemMessage.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.SystemMessage
    name: SystemMessage
    isExternal: true
    href: SuperOffice.CRM.Services.SystemMessage.html
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.RemoveExpiredSystemMessagesAsync*
  commentId: Overload:SuperOffice.CRM.Services.IDiagnosticsAgent.RemoveExpiredSystemMessagesAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IDiagnosticsAgent.html#SuperOffice_CRM_Services_IDiagnosticsAgent_RemoveExpiredSystemMessagesAsync_System_Threading_CancellationToken_
  name: RemoveExpiredSystemMessagesAsync
  nameWithType: IDiagnosticsAgent.RemoveExpiredSystemMessagesAsync
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.RemoveExpiredSystemMessagesAsync
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.PerformTasksAfterUpgradeAsync*
  commentId: Overload:SuperOffice.CRM.Services.IDiagnosticsAgent.PerformTasksAfterUpgradeAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IDiagnosticsAgent.html#SuperOffice_CRM_Services_IDiagnosticsAgent_PerformTasksAfterUpgradeAsync_System_Threading_CancellationToken_
  name: PerformTasksAfterUpgradeAsync
  nameWithType: IDiagnosticsAgent.PerformTasksAfterUpgradeAsync
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.PerformTasksAfterUpgradeAsync
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.PerformTasksAfterCustomObjectTableDeletedAsync*
  commentId: Overload:SuperOffice.CRM.Services.IDiagnosticsAgent.PerformTasksAfterCustomObjectTableDeletedAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IDiagnosticsAgent.html#SuperOffice_CRM_Services_IDiagnosticsAgent_PerformTasksAfterCustomObjectTableDeletedAsync_System_String_System_Threading_CancellationToken_
  name: PerformTasksAfterCustomObjectTableDeletedAsync
  nameWithType: IDiagnosticsAgent.PerformTasksAfterCustomObjectTableDeletedAsync
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.PerformTasksAfterCustomObjectTableDeletedAsync
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.AddWebAppUsageAsync*
  commentId: Overload:SuperOffice.CRM.Services.IDiagnosticsAgent.AddWebAppUsageAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IDiagnosticsAgent.html#SuperOffice_CRM_Services_IDiagnosticsAgent_AddWebAppUsageAsync_SuperOffice_CRM_Services_WebAppUsage___System_Threading_CancellationToken_
  name: AddWebAppUsageAsync
  nameWithType: IDiagnosticsAgent.AddWebAppUsageAsync
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.AddWebAppUsageAsync
- uid: SuperOffice.CRM.Services.WebAppUsage[]
  isExternal: true
  href: SuperOffice.CRM.Services.WebAppUsage.html
  name: WebAppUsage[]
  nameWithType: WebAppUsage[]
  fullName: SuperOffice.CRM.Services.WebAppUsage[]
  nameWithType.vb: WebAppUsage()
  fullName.vb: SuperOffice.CRM.Services.WebAppUsage()
  name.vb: WebAppUsage()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.WebAppUsage
    name: WebAppUsage
    isExternal: true
    href: SuperOffice.CRM.Services.WebAppUsage.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Services.WebAppUsage
    name: WebAppUsage
    isExternal: true
    href: SuperOffice.CRM.Services.WebAppUsage.html
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.WebAppUsageExistsInPeriodAsync*
  commentId: Overload:SuperOffice.CRM.Services.IDiagnosticsAgent.WebAppUsageExistsInPeriodAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IDiagnosticsAgent.html#SuperOffice_CRM_Services_IDiagnosticsAgent_WebAppUsageExistsInPeriodAsync_System_Int32_System_String_System_DateTime_System_Threading_CancellationToken_
  name: WebAppUsageExistsInPeriodAsync
  nameWithType: IDiagnosticsAgent.WebAppUsageExistsInPeriodAsync
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.WebAppUsageExistsInPeriodAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.GetWebAppUsagesForPeriodAsync*
  commentId: Overload:SuperOffice.CRM.Services.IDiagnosticsAgent.GetWebAppUsagesForPeriodAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IDiagnosticsAgent.html#SuperOffice_CRM_Services_IDiagnosticsAgent_GetWebAppUsagesForPeriodAsync_System_DateTime_System_DateTime_System_String_System_Threading_CancellationToken_
  name: GetWebAppUsagesForPeriodAsync
  nameWithType: IDiagnosticsAgent.GetWebAppUsagesForPeriodAsync
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.GetWebAppUsagesForPeriodAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.WebAppUsage[]}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.WebAppUsage[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<WebAppUsage[]>
  nameWithType: Task<WebAppUsage[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.WebAppUsage[]>
  nameWithType.vb: Task(Of WebAppUsage())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.WebAppUsage())
  name.vb: Task(Of WebAppUsage())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.WebAppUsage
    name: WebAppUsage
    isExternal: true
    href: SuperOffice.CRM.Services.WebAppUsage.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.WebAppUsage
    name: WebAppUsage
    isExternal: true
    href: SuperOffice.CRM.Services.WebAppUsage.html
  - name: (
  - name: )
  - name: )
