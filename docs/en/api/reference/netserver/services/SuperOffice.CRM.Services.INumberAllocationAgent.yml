### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Services.INumberAllocationAgent
  commentId: T:SuperOffice.CRM.Services.INumberAllocationAgent
  id: INumberAllocationAgent
  parent: SuperOffice.CRM.Services
  children:
  - SuperOffice.CRM.Services.INumberAllocationAgent.CreateDefaultRefCountEntityAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.INumberAllocationAgent.DeleteRefCountEntityAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.INumberAllocationAgent.GetNumberEachTemplateAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.INumberAllocationAgent.GetRefCountEntityAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.INumberAllocationAgent.SaveDefaultNumberingAsync(SuperOffice.CRM.Services.RefCountEntity,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.INumberAllocationAgent.SaveRefCountEntityAsync(SuperOffice.CRM.Services.RefCountEntity,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.INumberAllocationAgent.SetNumberEachTemplateAsync(System.Boolean,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: INumberAllocationAgent
  nameWithType: INumberAllocationAgent
  fullName: SuperOffice.CRM.Services.INumberAllocationAgent
  type: Interface
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nInterface for the NumberAllocation Agent\nThis agent can be used to manage number allocation\n"
  example:
  - "\n<pre><code>  using SuperOffice;\n  using SuperOffice.CRM.Services;\n\n  using (SoSession mySession = SoSession.Authenticate(&quot;user&quot;, &quot;pass&quot;))\n  {\n     using (NumberAllocationAgent agent = new NumberAllocationAgent())\n     {\n        // call methods on agent here...\n     }\n  }</code></pre>\n"
  syntax:
    content: >-
      [Agent("NumberAllocation Agent", "Interface for the NumberAllocation Agent. This agent can be used to manage number allocation")]

      public interface INumberAllocationAgent : IAgent
    content.vb: >-
      <Agent("NumberAllocation Agent", "Interface for the NumberAllocation Agent. This agent can be used to manage number allocation")>

      Public Interface INumberAllocationAgent
          Inherits IAgent
  attributes:
  - type: SuperOffice.CRM.Services.Reflection.AgentAttribute
    ctor: SuperOffice.CRM.Services.Reflection.AgentAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: NumberAllocation Agent
    - type: System.String
      value: Interface for the NumberAllocation Agent. This agent can be used to manage number allocation
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.CRM.Services.INumberAllocationAgent.CreateDefaultRefCountEntityAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.INumberAllocationAgent.CreateDefaultRefCountEntityAsync(System.Threading.CancellationToken)
  id: CreateDefaultRefCountEntityAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.INumberAllocationAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultRefCountEntityAsync(CancellationToken)
  nameWithType: INumberAllocationAgent.CreateDefaultRefCountEntityAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.INumberAllocationAgent.CreateDefaultRefCountEntityAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nLoading default values into a new RefCountEntity.\nNetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: Task<RefCountEntity> CreateDefaultRefCountEntityAsync(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.RefCountEntity}
      description: New RefCountEntity with default values
    content.vb: Function CreateDefaultRefCountEntityAsync(cancellationToken As CancellationToken = Nothing) As Task(Of RefCountEntity)
  overload: SuperOffice.CRM.Services.INumberAllocationAgent.CreateDefaultRefCountEntityAsync*
- uid: SuperOffice.CRM.Services.INumberAllocationAgent.SaveRefCountEntityAsync(SuperOffice.CRM.Services.RefCountEntity,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.INumberAllocationAgent.SaveRefCountEntityAsync(SuperOffice.CRM.Services.RefCountEntity,System.Threading.CancellationToken)
  id: SaveRefCountEntityAsync(SuperOffice.CRM.Services.RefCountEntity,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.INumberAllocationAgent
  langs:
  - csharp
  - vb
  name: SaveRefCountEntityAsync(RefCountEntity, CancellationToken)
  nameWithType: INumberAllocationAgent.SaveRefCountEntityAsync(RefCountEntity, CancellationToken)
  fullName: SuperOffice.CRM.Services.INumberAllocationAgent.SaveRefCountEntityAsync(SuperOffice.CRM.Services.RefCountEntity, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nUpdates the existing RefCountEntity or creates a new RefCountEntity if the id parameter is empty\n"
  syntax:
    content: Task<RefCountEntity> SaveRefCountEntityAsync(RefCountEntity refCountEntity, CancellationToken cancellationToken = null)
    parameters:
    - id: refCountEntity
      type: SuperOffice.CRM.Services.RefCountEntity
      description: The RefCountEntity that is saved.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.RefCountEntity}
      description: New or updated RefCountEntity
    content.vb: Function SaveRefCountEntityAsync(refCountEntity As RefCountEntity, cancellationToken As CancellationToken = Nothing) As Task(Of RefCountEntity)
  overload: SuperOffice.CRM.Services.INumberAllocationAgent.SaveRefCountEntityAsync*
- uid: SuperOffice.CRM.Services.INumberAllocationAgent.DeleteRefCountEntityAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.INumberAllocationAgent.DeleteRefCountEntityAsync(System.Int32,System.Threading.CancellationToken)
  id: DeleteRefCountEntityAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.INumberAllocationAgent
  langs:
  - csharp
  - vb
  name: DeleteRefCountEntityAsync(Int32, CancellationToken)
  nameWithType: INumberAllocationAgent.DeleteRefCountEntityAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.INumberAllocationAgent.DeleteRefCountEntityAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nDeletes the RefCountEntity\n"
  syntax:
    content: Task DeleteRefCountEntityAsync(int refCountEntityId, CancellationToken cancellationToken = null)
    parameters:
    - id: refCountEntityId
      type: System.Int32
      description: The identity of the RefCountEntity
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function DeleteRefCountEntityAsync(refCountEntityId As Integer, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.INumberAllocationAgent.DeleteRefCountEntityAsync*
- uid: SuperOffice.CRM.Services.INumberAllocationAgent.GetRefCountEntityAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.INumberAllocationAgent.GetRefCountEntityAsync(System.Int32,System.Threading.CancellationToken)
  id: GetRefCountEntityAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.INumberAllocationAgent
  langs:
  - csharp
  - vb
  name: GetRefCountEntityAsync(Int32, CancellationToken)
  nameWithType: INumberAllocationAgent.GetRefCountEntityAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.INumberAllocationAgent.GetRefCountEntityAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets a RefCountEntity object.                        \n"
  syntax:
    content: Task<RefCountEntity> GetRefCountEntityAsync(int refCountEntityId, CancellationToken cancellationToken = null)
    parameters:
    - id: refCountEntityId
      type: System.Int32
      description: The identifier of the RefCountEntity object
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.RefCountEntity}
      description: RefCountEntity
    content.vb: Function GetRefCountEntityAsync(refCountEntityId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of RefCountEntity)
  overload: SuperOffice.CRM.Services.INumberAllocationAgent.GetRefCountEntityAsync*
- uid: SuperOffice.CRM.Services.INumberAllocationAgent.SaveDefaultNumberingAsync(SuperOffice.CRM.Services.RefCountEntity,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.INumberAllocationAgent.SaveDefaultNumberingAsync(SuperOffice.CRM.Services.RefCountEntity,System.Threading.CancellationToken)
  id: SaveDefaultNumberingAsync(SuperOffice.CRM.Services.RefCountEntity,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.INumberAllocationAgent
  langs:
  - csharp
  - vb
  name: SaveDefaultNumberingAsync(RefCountEntity, CancellationToken)
  nameWithType: INumberAllocationAgent.SaveDefaultNumberingAsync(RefCountEntity, CancellationToken)
  fullName: SuperOffice.CRM.Services.INumberAllocationAgent.SaveDefaultNumberingAsync(SuperOffice.CRM.Services.RefCountEntity, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSaves default numbering values in preferences\n"
  syntax:
    content: Task SaveDefaultNumberingAsync(RefCountEntity refCountEntity, CancellationToken cancellationToken = null)
    parameters:
    - id: refCountEntity
      type: SuperOffice.CRM.Services.RefCountEntity
      description: The refCountEntity that holds the values that will be saved
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: void
    content.vb: Function SaveDefaultNumberingAsync(refCountEntity As RefCountEntity, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.INumberAllocationAgent.SaveDefaultNumberingAsync*
- uid: SuperOffice.CRM.Services.INumberAllocationAgent.GetNumberEachTemplateAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.INumberAllocationAgent.GetNumberEachTemplateAsync(System.Threading.CancellationToken)
  id: GetNumberEachTemplateAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.INumberAllocationAgent
  langs:
  - csharp
  - vb
  name: GetNumberEachTemplateAsync(CancellationToken)
  nameWithType: INumberAllocationAgent.GetNumberEachTemplateAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.INumberAllocationAgent.GetNumberEachTemplateAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nReturns true or false if Automatically create new counters for new document templates\n"
  syntax:
    content: Task<bool> GetNumberEachTemplateAsync(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: Is NumberEachTemplate?
    content.vb: Function GetNumberEachTemplateAsync(cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.Services.INumberAllocationAgent.GetNumberEachTemplateAsync*
- uid: SuperOffice.CRM.Services.INumberAllocationAgent.SetNumberEachTemplateAsync(System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.INumberAllocationAgent.SetNumberEachTemplateAsync(System.Boolean,System.Threading.CancellationToken)
  id: SetNumberEachTemplateAsync(System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.INumberAllocationAgent
  langs:
  - csharp
  - vb
  name: SetNumberEachTemplateAsync(Boolean, CancellationToken)
  nameWithType: INumberAllocationAgent.SetNumberEachTemplateAsync(Boolean, CancellationToken)
  fullName: SuperOffice.CRM.Services.INumberAllocationAgent.SetNumberEachTemplateAsync(System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSaves true or false if Automatically create new counters for new document templates\n"
  syntax:
    content: Task SetNumberEachTemplateAsync(bool setValue, CancellationToken cancellationToken = null)
    parameters:
    - id: setValue
      type: System.Boolean
      description: true or false if Automatically create new counters for new document templates
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: void
    content.vb: Function SetNumberEachTemplateAsync(setValue As Boolean, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.INumberAllocationAgent.SetNumberEachTemplateAsync*
references:
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
- uid: SuperOffice.CRM.Services.INumberAllocationAgent.CreateDefaultRefCountEntityAsync*
  commentId: Overload:SuperOffice.CRM.Services.INumberAllocationAgent.CreateDefaultRefCountEntityAsync
  isExternal: true
  name: CreateDefaultRefCountEntityAsync
  nameWithType: INumberAllocationAgent.CreateDefaultRefCountEntityAsync
  fullName: SuperOffice.CRM.Services.INumberAllocationAgent.CreateDefaultRefCountEntityAsync
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.RefCountEntity}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Services.RefCountEntity}'
  definition: System.Threading.Tasks.Task`1
  name: Task<RefCountEntity>
  nameWithType: Task<RefCountEntity>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.RefCountEntity>
  nameWithType.vb: Task(Of RefCountEntity)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.RefCountEntity)
  name.vb: Task(Of RefCountEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Services.RefCountEntity
    name: RefCountEntity
    nameWithType: RefCountEntity
    fullName: SuperOffice.CRM.Services.RefCountEntity
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Services.RefCountEntity
    name: RefCountEntity
    nameWithType: RefCountEntity
    fullName: SuperOffice.CRM.Services.RefCountEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.INumberAllocationAgent.SaveRefCountEntityAsync*
  commentId: Overload:SuperOffice.CRM.Services.INumberAllocationAgent.SaveRefCountEntityAsync
  isExternal: true
  name: SaveRefCountEntityAsync
  nameWithType: INumberAllocationAgent.SaveRefCountEntityAsync
  fullName: SuperOffice.CRM.Services.INumberAllocationAgent.SaveRefCountEntityAsync
- uid: SuperOffice.CRM.Services.RefCountEntity
  commentId: T:SuperOffice.CRM.Services.RefCountEntity
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: RefCountEntity
  nameWithType: RefCountEntity
  fullName: SuperOffice.CRM.Services.RefCountEntity
- uid: SuperOffice.CRM.Services.INumberAllocationAgent.DeleteRefCountEntityAsync*
  commentId: Overload:SuperOffice.CRM.Services.INumberAllocationAgent.DeleteRefCountEntityAsync
  isExternal: true
  name: DeleteRefCountEntityAsync
  nameWithType: INumberAllocationAgent.DeleteRefCountEntityAsync
  fullName: SuperOffice.CRM.Services.INumberAllocationAgent.DeleteRefCountEntityAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Services.INumberAllocationAgent.GetRefCountEntityAsync*
  commentId: Overload:SuperOffice.CRM.Services.INumberAllocationAgent.GetRefCountEntityAsync
  isExternal: true
  name: GetRefCountEntityAsync
  nameWithType: INumberAllocationAgent.GetRefCountEntityAsync
  fullName: SuperOffice.CRM.Services.INumberAllocationAgent.GetRefCountEntityAsync
- uid: SuperOffice.CRM.Services.INumberAllocationAgent.SaveDefaultNumberingAsync*
  commentId: Overload:SuperOffice.CRM.Services.INumberAllocationAgent.SaveDefaultNumberingAsync
  isExternal: true
  name: SaveDefaultNumberingAsync
  nameWithType: INumberAllocationAgent.SaveDefaultNumberingAsync
  fullName: SuperOffice.CRM.Services.INumberAllocationAgent.SaveDefaultNumberingAsync
- uid: SuperOffice.CRM.Services.INumberAllocationAgent.GetNumberEachTemplateAsync*
  commentId: Overload:SuperOffice.CRM.Services.INumberAllocationAgent.GetNumberEachTemplateAsync
  isExternal: true
  name: GetNumberEachTemplateAsync
  nameWithType: INumberAllocationAgent.GetNumberEachTemplateAsync
  fullName: SuperOffice.CRM.Services.INumberAllocationAgent.GetNumberEachTemplateAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: '!:System.Threading.Tasks.Task{System.Boolean}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.INumberAllocationAgent.SetNumberEachTemplateAsync*
  commentId: Overload:SuperOffice.CRM.Services.INumberAllocationAgent.SetNumberEachTemplateAsync
  isExternal: true
  name: SetNumberEachTemplateAsync
  nameWithType: INumberAllocationAgent.SetNumberEachTemplateAsync
  fullName: SuperOffice.CRM.Services.INumberAllocationAgent.SetNumberEachTemplateAsync
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
