### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Services.AgentBase`1
  commentId: T:SuperOffice.CRM.Services.AgentBase`1
  id: AgentBase`1
  parent: SuperOffice.CRM.Services
  children:
  - SuperOffice.CRM.Services.AgentBase`1.#ctor
  - SuperOffice.CRM.Services.AgentBase`1.Dispose
  - SuperOffice.CRM.Services.AgentBase`1.InnerAgent
  langs:
  - csharp
  - vb
  name: AgentBase<TAgent>
  nameWithType: AgentBase<TAgent>
  fullName: SuperOffice.CRM.Services.AgentBase<TAgent>
  type: Class
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nBase class for Agent Factories.\n"
  syntax:
    content: 'public abstract class AgentBase<TAgent> : Object, IDisposable where TAgent : class, IAgent'
    typeParameters:
    - id: TAgent
      description: Type of agent.
    content.vb: >-
      Public MustInherit Class AgentBase(Of TAgent As {Class, IAgent})
          Inherits Object
          Implements IDisposable
  inheritance:
  - System.Object
  derivedClasses:
  - SuperOffice.CRM.Services.AIAgent
  - SuperOffice.CRM.Services.AppointmentAgent
  - SuperOffice.CRM.Services.ArchiveAgent
  - SuperOffice.CRM.Services.AssociateAgent
  - SuperOffice.CRM.Services.AudienceAgent
  - SuperOffice.CRM.Services.BatchAgent
  - SuperOffice.CRM.Services.BLOBAgent
  - SuperOffice.CRM.Services.BulkUpdateAgent
  - SuperOffice.CRM.Services.ChatAgent
  - SuperOffice.CRM.Services.ContactAgent
  - SuperOffice.CRM.Services.CRMScriptAgent
  - SuperOffice.CRM.Services.CustomerServiceAgent
  - SuperOffice.CRM.Services.DashAgent
  - SuperOffice.CRM.Services.DashboardAgent
  - SuperOffice.CRM.Services.DatabaseAgent
  - SuperOffice.CRM.Services.DatabaseTableAgent
  - SuperOffice.CRM.Services.DiagnosticsAgent
  - SuperOffice.CRM.Services.DocumentAgent
  - SuperOffice.CRM.Services.DocumentMigrationAgent
  - SuperOffice.CRM.Services.EMailAgent
  - SuperOffice.CRM.Services.ErpSyncAgent
  - SuperOffice.CRM.Services.FavouriteAgent
  - SuperOffice.CRM.Services.FindAgent
  - SuperOffice.CRM.Services.ForeignSystemAgent
  - SuperOffice.CRM.Services.FreeTextAgent
  - SuperOffice.CRM.Services.ImportAgent
  - SuperOffice.CRM.Services.LicenseAgent
  - SuperOffice.CRM.Services.ListAgent
  - SuperOffice.CRM.Services.MarketingAgent
  - SuperOffice.CRM.Services.MDOAgent
  - SuperOffice.CRM.Services.NumberAllocationAgent
  - SuperOffice.CRM.Services.PartnerAgent
  - SuperOffice.CRM.Services.PersonAgent
  - SuperOffice.CRM.Services.PhoneListAgent
  - SuperOffice.CRM.Services.PocketAgent
  - SuperOffice.CRM.Services.PreferenceAgent
  - SuperOffice.CRM.Services.ProjectAgent
  - SuperOffice.CRM.Services.QuoteAgent
  - SuperOffice.CRM.Services.RelationAgent
  - SuperOffice.CRM.Services.ReplicationAgent
  - SuperOffice.CRM.Services.ReportAgent
  - SuperOffice.CRM.Services.ResourceAgent
  - SuperOffice.CRM.Services.SaintAgent
  - SuperOffice.CRM.Services.SaleAgent
  - SuperOffice.CRM.Services.SelectionAgent
  - SuperOffice.CRM.Services.SentryAgent
  - SuperOffice.CRM.Services.TargetsAgent
  - SuperOffice.CRM.Services.TicketAgent
  - SuperOffice.CRM.Services.TimeZoneAgent
  - SuperOffice.CRM.Services.UserAgent
  - SuperOffice.CRM.Services.UserDefinedFieldInfoAgent
  - SuperOffice.CRM.Services.ViewStateAgent
  - SuperOffice.CRM.Services.WebhookAgent
  - SuperOffice.CRM.Services.WorkflowAgent
  implements:
  - System.IDisposable
  nameWithType.vb: AgentBase(Of TAgent)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: SuperOffice.CRM.Services.AgentBase(Of TAgent)
  name.vb: AgentBase(Of TAgent)
- uid: SuperOffice.CRM.Services.AgentBase`1.Dispose
  commentId: M:SuperOffice.CRM.Services.AgentBase`1.Dispose
  id: Dispose
  parent: SuperOffice.CRM.Services.AgentBase`1
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: AgentBase<TAgent>.Dispose()
  fullName: SuperOffice.CRM.Services.AgentBase<TAgent>.Dispose()
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nDispose of the Agent.\n"
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: SuperOffice.CRM.Services.AgentBase`1.Dispose*
  nameWithType.vb: AgentBase(Of TAgent).Dispose()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.Services.AgentBase(Of TAgent).Dispose()
- uid: SuperOffice.CRM.Services.AgentBase`1.#ctor
  commentId: M:SuperOffice.CRM.Services.AgentBase`1.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.Services.AgentBase`1
  langs:
  - csharp
  - vb
  name: AgentBase()
  nameWithType: AgentBase<TAgent>.AgentBase()
  fullName: SuperOffice.CRM.Services.AgentBase<TAgent>.AgentBase()
  type: Constructor
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  syntax:
    content: protected AgentBase()
    content.vb: Protected Sub New
  overload: SuperOffice.CRM.Services.AgentBase`1.#ctor*
  nameWithType.vb: AgentBase(Of TAgent).AgentBase()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: SuperOffice.CRM.Services.AgentBase(Of TAgent).AgentBase()
- uid: SuperOffice.CRM.Services.AgentBase`1.InnerAgent
  commentId: P:SuperOffice.CRM.Services.AgentBase`1.InnerAgent
  id: InnerAgent
  parent: SuperOffice.CRM.Services.AgentBase`1
  langs:
  - csharp
  - vb
  name: InnerAgent
  nameWithType: AgentBase<TAgent>.InnerAgent
  fullName: SuperOffice.CRM.Services.AgentBase<TAgent>.InnerAgent
  type: Property
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nThe underlying implementation of agent or proxy for such.\n"
  syntax:
    content: public TAgent InnerAgent { get; }
    parameters: []
    return:
      type: '{TAgent}'
    content.vb: Public ReadOnly Property InnerAgent As TAgent
  overload: SuperOffice.CRM.Services.AgentBase`1.InnerAgent*
  nameWithType.vb: AgentBase(Of TAgent).InnerAgent
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: SuperOffice.CRM.Services.AgentBase(Of TAgent).InnerAgent
references:
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
- uid: System.IDisposable
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: SuperOffice.CRM.Services.AgentBase`1.Dispose*
  commentId: Overload:SuperOffice.CRM.Services.AgentBase`1.Dispose
  isExternal: true
  name: Dispose
  nameWithType: AgentBase<TAgent>.Dispose
  fullName: SuperOffice.CRM.Services.AgentBase<TAgent>.Dispose
  nameWithType.vb: AgentBase(Of TAgent).Dispose
  fullName.vb: SuperOffice.CRM.Services.AgentBase(Of TAgent).Dispose
- uid: SuperOffice.CRM.Services.AgentBase`1.#ctor*
  commentId: Overload:SuperOffice.CRM.Services.AgentBase`1.#ctor
  isExternal: true
  name: AgentBase
  nameWithType: AgentBase<TAgent>.AgentBase
  fullName: SuperOffice.CRM.Services.AgentBase<TAgent>.AgentBase
  nameWithType.vb: AgentBase(Of TAgent).AgentBase
  fullName.vb: SuperOffice.CRM.Services.AgentBase(Of TAgent).AgentBase
- uid: SuperOffice.CRM.Services.AgentBase`1.InnerAgent*
  commentId: Overload:SuperOffice.CRM.Services.AgentBase`1.InnerAgent
  isExternal: true
  name: InnerAgent
  nameWithType: AgentBase<TAgent>.InnerAgent
  fullName: SuperOffice.CRM.Services.AgentBase<TAgent>.InnerAgent
  nameWithType.vb: AgentBase(Of TAgent).InnerAgent
  fullName.vb: SuperOffice.CRM.Services.AgentBase(Of TAgent).InnerAgent
- uid: '{TAgent}'
  commentId: '!:TAgent'
  definition: TAgent
  name: TAgent
  nameWithType: TAgent
  fullName: TAgent
- uid: TAgent
  commentId: '!:TAgent'
  name: TAgent
  nameWithType: TAgent
  fullName: TAgent
