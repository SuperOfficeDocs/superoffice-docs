### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Services.IPocketAgent
  commentId: T:SuperOffice.CRM.Services.IPocketAgent
  id: IPocketAgent
  parent: SuperOffice.CRM.Services
  children:
  - SuperOffice.CRM.Services.IPocketAgent.GetCallerIDsFromSelectionAsync(System.Int32,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPocketAgent.GetMyCallerIDsAsync(System.String,System.DateTime,System.DateTime,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPocketAgent.GetPocketStartupDataAsync(System.String[],System.DateTime,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPocketAgent.GetPushNotificationTagsForDeviceAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPocketAgent.GetRegisteredDevicesAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPocketAgent.NotificationHandledAsync(SuperOffice.Data.NotificationEventType,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPocketAgent.NotificationsHandledAsync(SuperOffice.CRM.Services.NotificationEvent[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPocketAgent.NotifyUsersAsync(SuperOffice.Data.NotificationEventType,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPocketAgent.RegisterDeviceForPushNotificationAsync(SuperOffice.CRM.Services.PocketDeviceInfo,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPocketAgent.RunAppointmentAlarmBrokerAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPocketAgent.SendPushNotificationAsync(System.Int32[],SuperOffice.CRM.Services.PocketNotificationMessage,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPocketAgent.SetPushNotificationTagsForDeviceAsync(System.String,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IPocketAgent.SetPushNotificationTagsForUserAsync(System.Int32,System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IPocketAgent
  nameWithType: IPocketAgent
  fullName: SuperOffice.CRM.Services.IPocketAgent
  type: Interface
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Interface for the Pocket Agent

    Agent with Pocket specific functionality
  example:
  - >-
    <pre><code class="lang-csharp">using SuperOffice;

    using SuperOffice.CRM.Services;


    using (SoSession mySession = SoSession.Authenticate("user", "pass"))

    {
       using (PocketAgent agent = new PocketAgent())
       {
          // call methods on agent here...
       }
    }</code></pre>
  syntax:
    content: >-
      [Agent("Pocket Agent", "Interface for the Pocket Agent. Agent with Pocket specific functionality")]

      public interface IPocketAgent : IAgent
    content.vb: >-
      <Agent("Pocket Agent", "Interface for the Pocket Agent. Agent with Pocket specific functionality")>

      Public Interface IPocketAgent Inherits IAgent
  attributes:
  - type: SuperOffice.CRM.Services.Reflection.AgentAttribute
    ctor: SuperOffice.CRM.Services.Reflection.AgentAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Pocket Agent
    - type: System.String
      value: Interface for the Pocket Agent. Agent with Pocket specific functionality
- uid: SuperOffice.CRM.Services.IPocketAgent.GetMyCallerIDsAsync(System.String,System.DateTime,System.DateTime,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPocketAgent.GetMyCallerIDsAsync(System.String,System.DateTime,System.DateTime,System.Threading.CancellationToken)
  id: GetMyCallerIDsAsync(System.String,System.DateTime,System.DateTime,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPocketAgent
  langs:
  - csharp
  - vb
  name: GetMyCallerIDsAsync(string, DateTime, DateTime, CancellationToken)
  nameWithType: IPocketAgent.GetMyCallerIDsAsync(string, DateTime, DateTime, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPocketAgent.GetMyCallerIDsAsync(string, System.DateTime, System.DateTime, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get caller ids that the current principal might be interested in (phone numbers of related persons in sales and appointments created/owned/touched by ourselves or colleagues in our primary group
  example: []
  syntax:
    content: Task<CallerIDCollection> GetMyCallerIDsAsync(string lastHash, DateTime minDate, DateTime maxDate, CancellationToken cancellationToken = default)
    parameters:
    - id: lastHash
      type: System.String
      description: Hash for the previous call, used for checking if the same set of caller ids was sent in a previous call, and returning null in that case
    - id: minDate
      type: System.DateTime
      description: Only check activities after this date
    - id: maxDate
      type: System.DateTime
      description: Only check activities before this date
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.CallerIDCollection}
      description: Collection of caller IDs, containing the hash of the caller ids
    content.vb: Function GetMyCallerIDsAsync(lastHash As String, minDate As Date, maxDate As Date, cancellationToken As CancellationToken = Nothing) As Task(Of CallerIDCollection)
  overload: SuperOffice.CRM.Services.IPocketAgent.GetMyCallerIDsAsync*
  nameWithType.vb: IPocketAgent.GetMyCallerIDsAsync(String, Date, Date, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IPocketAgent.GetMyCallerIDsAsync(String, Date, Date, System.Threading.CancellationToken)
  name.vb: GetMyCallerIDsAsync(String, Date, Date, CancellationToken)
- uid: SuperOffice.CRM.Services.IPocketAgent.GetCallerIDsFromSelectionAsync(System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPocketAgent.GetCallerIDsFromSelectionAsync(System.Int32,System.String,System.Threading.CancellationToken)
  id: GetCallerIDsFromSelectionAsync(System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPocketAgent
  langs:
  - csharp
  - vb
  name: GetCallerIDsFromSelectionAsync(int, string, CancellationToken)
  nameWithType: IPocketAgent.GetCallerIDsFromSelectionAsync(int, string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPocketAgent.GetCallerIDsFromSelectionAsync(int, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get caller ids from a selection. Queries the shadow selection of persons and companies, so selections of any kind can be used
  example: []
  syntax:
    content: Task<CallerIDCollection> GetCallerIDsFromSelectionAsync(int selectionId, string lastHash, CancellationToken cancellationToken = default)
    parameters:
    - id: selectionId
      type: System.Int32
      description: Id of selection to get caller ids from
    - id: lastHash
      type: System.String
      description: Hash for the previous call, used for checking if the same set of caller ids was sent in an earlier call, and returning null in that case
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.CallerIDCollection}
      description: Collection of caller IDs, containing the hash of the caller ids
    content.vb: Function GetCallerIDsFromSelectionAsync(selectionId As Integer, lastHash As String, cancellationToken As CancellationToken = Nothing) As Task(Of CallerIDCollection)
  overload: SuperOffice.CRM.Services.IPocketAgent.GetCallerIDsFromSelectionAsync*
  nameWithType.vb: IPocketAgent.GetCallerIDsFromSelectionAsync(Integer, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IPocketAgent.GetCallerIDsFromSelectionAsync(Integer, String, System.Threading.CancellationToken)
  name.vb: GetCallerIDsFromSelectionAsync(Integer, String, CancellationToken)
- uid: SuperOffice.CRM.Services.IPocketAgent.GetPocketStartupDataAsync(System.String[],System.DateTime,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPocketAgent.GetPocketStartupDataAsync(System.String[],System.DateTime,System.Threading.CancellationToken)
  id: GetPocketStartupDataAsync(System.String[],System.DateTime,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPocketAgent
  langs:
  - csharp
  - vb
  name: GetPocketStartupDataAsync(string[], DateTime, CancellationToken)
  nameWithType: IPocketAgent.GetPocketStartupDataAsync(string[], DateTime, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPocketAgent.GetPocketStartupDataAsync(string[], System.DateTime, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: ''
  example: []
  syntax:
    content: Task<PocketStartupData> GetPocketStartupDataAsync(string[] tables, DateTime currentClientTime, CancellationToken cancellationToken = default)
    parameters:
    - id: tables
      type: System.String[]
      description: Tables to check for license
    - id: currentClientTime
      type: System.DateTime
      description: Current time on the client, used for overdue sale lookup having correct timezone relative to client
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.PocketStartupData}
      description: Startup data for pocket
    content.vb: Function GetPocketStartupDataAsync(tables As String(), currentClientTime As Date, cancellationToken As CancellationToken = Nothing) As Task(Of PocketStartupData)
  overload: SuperOffice.CRM.Services.IPocketAgent.GetPocketStartupDataAsync*
  nameWithType.vb: IPocketAgent.GetPocketStartupDataAsync(String(), Date, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IPocketAgent.GetPocketStartupDataAsync(String(), Date, System.Threading.CancellationToken)
  name.vb: GetPocketStartupDataAsync(String(), Date, CancellationToken)
- uid: SuperOffice.CRM.Services.IPocketAgent.RegisterDeviceForPushNotificationAsync(SuperOffice.CRM.Services.PocketDeviceInfo,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPocketAgent.RegisterDeviceForPushNotificationAsync(SuperOffice.CRM.Services.PocketDeviceInfo,System.Threading.CancellationToken)
  id: RegisterDeviceForPushNotificationAsync(SuperOffice.CRM.Services.PocketDeviceInfo,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPocketAgent
  langs:
  - csharp
  - vb
  name: RegisterDeviceForPushNotificationAsync(PocketDeviceInfo, CancellationToken)
  nameWithType: IPocketAgent.RegisterDeviceForPushNotificationAsync(PocketDeviceInfo, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPocketAgent.RegisterDeviceForPushNotificationAsync(SuperOffice.CRM.Services.PocketDeviceInfo, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Register a device that should receive push notifications when notable events occour
  example: []
  syntax:
    content: Task RegisterDeviceForPushNotificationAsync(PocketDeviceInfo deviceInfo, CancellationToken cancellationToken = default)
    parameters:
    - id: deviceInfo
      type: SuperOffice.CRM.Services.PocketDeviceInfo
      description: Properties for the device to register
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Function RegisterDeviceForPushNotificationAsync(deviceInfo As PocketDeviceInfo, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IPocketAgent.RegisterDeviceForPushNotificationAsync*
- uid: SuperOffice.CRM.Services.IPocketAgent.GetRegisteredDevicesAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPocketAgent.GetRegisteredDevicesAsync(System.Int32,System.Threading.CancellationToken)
  id: GetRegisteredDevicesAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPocketAgent
  langs:
  - csharp
  - vb
  name: GetRegisteredDevicesAsync(int, CancellationToken)
  nameWithType: IPocketAgent.GetRegisteredDevicesAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPocketAgent.GetRegisteredDevicesAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Retrieve all registered devices for an associate
  example: []
  syntax:
    content: Task<PocketDeviceInfo[]> GetRegisteredDevicesAsync(int associateId, CancellationToken cancellationToken = default)
    parameters:
    - id: associateId
      type: System.Int32
      description: The user to get devices for
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.PocketDeviceInfo[]}
      description: ''
    content.vb: Function GetRegisteredDevicesAsync(associateId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of PocketDeviceInfo())
  overload: SuperOffice.CRM.Services.IPocketAgent.GetRegisteredDevicesAsync*
  nameWithType.vb: IPocketAgent.GetRegisteredDevicesAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IPocketAgent.GetRegisteredDevicesAsync(Integer, System.Threading.CancellationToken)
  name.vb: GetRegisteredDevicesAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IPocketAgent.SetPushNotificationTagsForDeviceAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPocketAgent.SetPushNotificationTagsForDeviceAsync(System.String,System.String,System.Threading.CancellationToken)
  id: SetPushNotificationTagsForDeviceAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPocketAgent
  langs:
  - csharp
  - vb
  name: SetPushNotificationTagsForDeviceAsync(string, string, CancellationToken)
  nameWithType: IPocketAgent.SetPushNotificationTagsForDeviceAsync(string, string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPocketAgent.SetPushNotificationTagsForDeviceAsync(string, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Specify what kind of notification events a device should receive push notifications for
  example: []
  syntax:
    content: Task SetPushNotificationTagsForDeviceAsync(string deviceIdentifier, string tags, CancellationToken cancellationToken = default)
    parameters:
    - id: deviceIdentifier
      type: System.String
      description: The unique identifier for a device
    - id: tags
      type: System.String
      description: A comma separated list of events this device should receive push events for
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Function SetPushNotificationTagsForDeviceAsync(deviceIdentifier As String, tags As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IPocketAgent.SetPushNotificationTagsForDeviceAsync*
  nameWithType.vb: IPocketAgent.SetPushNotificationTagsForDeviceAsync(String, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IPocketAgent.SetPushNotificationTagsForDeviceAsync(String, String, System.Threading.CancellationToken)
  name.vb: SetPushNotificationTagsForDeviceAsync(String, String, CancellationToken)
- uid: SuperOffice.CRM.Services.IPocketAgent.SetPushNotificationTagsForUserAsync(System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPocketAgent.SetPushNotificationTagsForUserAsync(System.Int32,System.String,System.Threading.CancellationToken)
  id: SetPushNotificationTagsForUserAsync(System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPocketAgent
  langs:
  - csharp
  - vb
  name: SetPushNotificationTagsForUserAsync(int, string, CancellationToken)
  nameWithType: IPocketAgent.SetPushNotificationTagsForUserAsync(int, string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPocketAgent.SetPushNotificationTagsForUserAsync(int, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Specify what kind of notification events a user should receive push notifications for.  This will update all registerred devices for this user.
  example: []
  syntax:
    content: Task SetPushNotificationTagsForUserAsync(int associateId, string tags, CancellationToken cancellationToken = default)
    parameters:
    - id: associateId
      type: System.Int32
      description: The associate to set tags for
    - id: tags
      type: System.String
      description: A comma separated list of events the associate should receive push events for
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Function SetPushNotificationTagsForUserAsync(associateId As Integer, tags As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IPocketAgent.SetPushNotificationTagsForUserAsync*
  nameWithType.vb: IPocketAgent.SetPushNotificationTagsForUserAsync(Integer, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IPocketAgent.SetPushNotificationTagsForUserAsync(Integer, String, System.Threading.CancellationToken)
  name.vb: SetPushNotificationTagsForUserAsync(Integer, String, CancellationToken)
- uid: SuperOffice.CRM.Services.IPocketAgent.GetPushNotificationTagsForDeviceAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPocketAgent.GetPushNotificationTagsForDeviceAsync(System.String,System.Threading.CancellationToken)
  id: GetPushNotificationTagsForDeviceAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPocketAgent
  langs:
  - csharp
  - vb
  name: GetPushNotificationTagsForDeviceAsync(string, CancellationToken)
  nameWithType: IPocketAgent.GetPushNotificationTagsForDeviceAsync(string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPocketAgent.GetPushNotificationTagsForDeviceAsync(string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Retrieve current tag value for a device
  example: []
  syntax:
    content: Task<string> GetPushNotificationTagsForDeviceAsync(string deviceIdentifier, CancellationToken cancellationToken = default)
    parameters:
    - id: deviceIdentifier
      type: System.String
      description: The unique identifier of this device
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: A comma separated list of events this device should receive push events for
    content.vb: Function GetPushNotificationTagsForDeviceAsync(deviceIdentifier As String, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Services.IPocketAgent.GetPushNotificationTagsForDeviceAsync*
  nameWithType.vb: IPocketAgent.GetPushNotificationTagsForDeviceAsync(String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IPocketAgent.GetPushNotificationTagsForDeviceAsync(String, System.Threading.CancellationToken)
  name.vb: GetPushNotificationTagsForDeviceAsync(String, CancellationToken)
- uid: SuperOffice.CRM.Services.IPocketAgent.SendPushNotificationAsync(System.Int32[],SuperOffice.CRM.Services.PocketNotificationMessage,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPocketAgent.SendPushNotificationAsync(System.Int32[],SuperOffice.CRM.Services.PocketNotificationMessage,System.Threading.CancellationToken)
  id: SendPushNotificationAsync(System.Int32[],SuperOffice.CRM.Services.PocketNotificationMessage,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPocketAgent
  langs:
  - csharp
  - vb
  name: SendPushNotificationAsync(int[], PocketNotificationMessage, CancellationToken)
  nameWithType: IPocketAgent.SendPushNotificationAsync(int[], PocketNotificationMessage, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPocketAgent.SendPushNotificationAsync(int[], SuperOffice.CRM.Services.PocketNotificationMessage, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Send a push notification to one or more associates
  example: []
  syntax:
    content: Task SendPushNotificationAsync(int[] associateIds, PocketNotificationMessage message, CancellationToken cancellationToken = default)
    parameters:
    - id: associateIds
      type: System.Int32[]
      description: The associates to send the push notification message to
    - id: message
      type: SuperOffice.CRM.Services.PocketNotificationMessage
      description: The message to send
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Function SendPushNotificationAsync(associateIds As Integer(), message As PocketNotificationMessage, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IPocketAgent.SendPushNotificationAsync*
  nameWithType.vb: IPocketAgent.SendPushNotificationAsync(Integer(), PocketNotificationMessage, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IPocketAgent.SendPushNotificationAsync(Integer(), SuperOffice.CRM.Services.PocketNotificationMessage, System.Threading.CancellationToken)
  name.vb: SendPushNotificationAsync(Integer(), PocketNotificationMessage, CancellationToken)
- uid: SuperOffice.CRM.Services.IPocketAgent.RunAppointmentAlarmBrokerAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPocketAgent.RunAppointmentAlarmBrokerAsync(System.Threading.CancellationToken)
  id: RunAppointmentAlarmBrokerAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPocketAgent
  langs:
  - csharp
  - vb
  name: RunAppointmentAlarmBrokerAsync(CancellationToken)
  nameWithType: IPocketAgent.RunAppointmentAlarmBrokerAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.IPocketAgent.RunAppointmentAlarmBrokerAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Execute the AppointmentAlarmBroker once
  example: []
  syntax:
    content: Task RunAppointmentAlarmBrokerAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Function RunAppointmentAlarmBrokerAsync(cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IPocketAgent.RunAppointmentAlarmBrokerAsync*
- uid: SuperOffice.CRM.Services.IPocketAgent.NotifyUsersAsync(SuperOffice.Data.NotificationEventType,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPocketAgent.NotifyUsersAsync(SuperOffice.Data.NotificationEventType,System.Int32,System.Threading.CancellationToken)
  id: NotifyUsersAsync(SuperOffice.Data.NotificationEventType,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPocketAgent
  langs:
  - csharp
  - vb
  name: NotifyUsersAsync(NotificationEventType, int, CancellationToken)
  nameWithType: IPocketAgent.NotifyUsersAsync(NotificationEventType, int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPocketAgent.NotifyUsersAsync(SuperOffice.Data.NotificationEventType, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Notify users about a new or changed entity
  example: []
  syntax:
    content: Task NotifyUsersAsync(NotificationEventType notificationEventType, int id, CancellationToken cancellationToken = default)
    parameters:
    - id: notificationEventType
      type: SuperOffice.Data.NotificationEventType
      description: Type of notification
    - id: id
      type: System.Int32
      description: Id of entity to notify about
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Function NotifyUsersAsync(notificationEventType As NotificationEventType, id As Integer, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IPocketAgent.NotifyUsersAsync*
  nameWithType.vb: IPocketAgent.NotifyUsersAsync(NotificationEventType, Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IPocketAgent.NotifyUsersAsync(SuperOffice.Data.NotificationEventType, Integer, System.Threading.CancellationToken)
  name.vb: NotifyUsersAsync(NotificationEventType, Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IPocketAgent.NotificationHandledAsync(SuperOffice.Data.NotificationEventType,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPocketAgent.NotificationHandledAsync(SuperOffice.Data.NotificationEventType,System.Int32,System.Threading.CancellationToken)
  id: NotificationHandledAsync(SuperOffice.Data.NotificationEventType,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPocketAgent
  langs:
  - csharp
  - vb
  name: NotificationHandledAsync(NotificationEventType, int, CancellationToken)
  nameWithType: IPocketAgent.NotificationHandledAsync(NotificationEventType, int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IPocketAgent.NotificationHandledAsync(SuperOffice.Data.NotificationEventType, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Mark a notification as handled, so it can be cleaned up on other clients that have received the notification
  example: []
  syntax:
    content: Task NotificationHandledAsync(NotificationEventType notificationEventType, int id, CancellationToken cancellationToken = default)
    parameters:
    - id: notificationEventType
      type: SuperOffice.Data.NotificationEventType
      description: Type of notification
    - id: id
      type: System.Int32
      description: Id of entity to notify about
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Function NotificationHandledAsync(notificationEventType As NotificationEventType, id As Integer, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IPocketAgent.NotificationHandledAsync*
  nameWithType.vb: IPocketAgent.NotificationHandledAsync(NotificationEventType, Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IPocketAgent.NotificationHandledAsync(SuperOffice.Data.NotificationEventType, Integer, System.Threading.CancellationToken)
  name.vb: NotificationHandledAsync(NotificationEventType, Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IPocketAgent.NotificationsHandledAsync(SuperOffice.CRM.Services.NotificationEvent[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IPocketAgent.NotificationsHandledAsync(SuperOffice.CRM.Services.NotificationEvent[],System.Threading.CancellationToken)
  id: NotificationsHandledAsync(SuperOffice.CRM.Services.NotificationEvent[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IPocketAgent
  langs:
  - csharp
  - vb
  name: NotificationsHandledAsync(NotificationEvent[], CancellationToken)
  nameWithType: IPocketAgent.NotificationsHandledAsync(NotificationEvent[], CancellationToken)
  fullName: SuperOffice.CRM.Services.IPocketAgent.NotificationsHandledAsync(SuperOffice.CRM.Services.NotificationEvent[], System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Mark a set of notifications as handled, so they can be cleaned up on other clients that have received the notification
  example: []
  syntax:
    content: Task NotificationsHandledAsync(NotificationEvent[] notificationEvents, CancellationToken cancellationToken = default)
    parameters:
    - id: notificationEvents
      type: SuperOffice.CRM.Services.NotificationEvent[]
      description: List of notifications to mark as handled
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Function NotificationsHandledAsync(notificationEvents As NotificationEvent(), cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IPocketAgent.NotificationsHandledAsync*
  nameWithType.vb: IPocketAgent.NotificationsHandledAsync(NotificationEvent(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IPocketAgent.NotificationsHandledAsync(SuperOffice.CRM.Services.NotificationEvent(), System.Threading.CancellationToken)
  name.vb: NotificationsHandledAsync(NotificationEvent(), CancellationToken)
references:
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
- uid: SuperOffice.CRM.Services.IPocketAgent.GetMyCallerIDsAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPocketAgent.GetMyCallerIDsAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IPocketAgent.html#SuperOffice_CRM_Services_IPocketAgent_GetMyCallerIDsAsync_System_String_System_DateTime_System_DateTime_System_Threading_CancellationToken_
  name: GetMyCallerIDsAsync
  nameWithType: IPocketAgent.GetMyCallerIDsAsync
  fullName: SuperOffice.CRM.Services.IPocketAgent.GetMyCallerIDsAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.CallerIDCollection}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.CallerIDCollection}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<CallerIDCollection>
  nameWithType: Task<CallerIDCollection>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.CallerIDCollection>
  nameWithType.vb: Task(Of CallerIDCollection)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.CallerIDCollection)
  name.vb: Task(Of CallerIDCollection)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.CallerIDCollection
    name: CallerIDCollection
    isExternal: true
    href: SuperOffice.CRM.Services.CallerIDCollection.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.CallerIDCollection
    name: CallerIDCollection
    isExternal: true
    href: SuperOffice.CRM.Services.CallerIDCollection.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: SuperOffice.CRM.Services.IPocketAgent.GetCallerIDsFromSelectionAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPocketAgent.GetCallerIDsFromSelectionAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IPocketAgent.html#SuperOffice_CRM_Services_IPocketAgent_GetCallerIDsFromSelectionAsync_System_Int32_System_String_System_Threading_CancellationToken_
  name: GetCallerIDsFromSelectionAsync
  nameWithType: IPocketAgent.GetCallerIDsFromSelectionAsync
  fullName: SuperOffice.CRM.Services.IPocketAgent.GetCallerIDsFromSelectionAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: SuperOffice.CRM.Services.IPocketAgent.GetPocketStartupDataAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPocketAgent.GetPocketStartupDataAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IPocketAgent.html#SuperOffice_CRM_Services_IPocketAgent_GetPocketStartupDataAsync_System_String___System_DateTime_System_Threading_CancellationToken_
  name: GetPocketStartupDataAsync
  nameWithType: IPocketAgent.GetPocketStartupDataAsync
  fullName: SuperOffice.CRM.Services.IPocketAgent.GetPocketStartupDataAsync
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.PocketStartupData}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.PocketStartupData}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<PocketStartupData>
  nameWithType: Task<PocketStartupData>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.PocketStartupData>
  nameWithType.vb: Task(Of PocketStartupData)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.PocketStartupData)
  name.vb: Task(Of PocketStartupData)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.PocketStartupData
    name: PocketStartupData
    isExternal: true
    href: SuperOffice.CRM.Services.PocketStartupData.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.PocketStartupData
    name: PocketStartupData
    isExternal: true
    href: SuperOffice.CRM.Services.PocketStartupData.html
  - name: )
- uid: SuperOffice.CRM.Services.IPocketAgent.RegisterDeviceForPushNotificationAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPocketAgent.RegisterDeviceForPushNotificationAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IPocketAgent.html#SuperOffice_CRM_Services_IPocketAgent_RegisterDeviceForPushNotificationAsync_SuperOffice_CRM_Services_PocketDeviceInfo_System_Threading_CancellationToken_
  name: RegisterDeviceForPushNotificationAsync
  nameWithType: IPocketAgent.RegisterDeviceForPushNotificationAsync
  fullName: SuperOffice.CRM.Services.IPocketAgent.RegisterDeviceForPushNotificationAsync
- uid: SuperOffice.CRM.Services.PocketDeviceInfo
  commentId: T:SuperOffice.CRM.Services.PocketDeviceInfo
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.PocketDeviceInfo.html
  name: PocketDeviceInfo
  nameWithType: PocketDeviceInfo
  fullName: SuperOffice.CRM.Services.PocketDeviceInfo
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: SuperOffice.CRM.Services.IPocketAgent.GetRegisteredDevicesAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPocketAgent.GetRegisteredDevicesAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IPocketAgent.html#SuperOffice_CRM_Services_IPocketAgent_GetRegisteredDevicesAsync_System_Int32_System_Threading_CancellationToken_
  name: GetRegisteredDevicesAsync
  nameWithType: IPocketAgent.GetRegisteredDevicesAsync
  fullName: SuperOffice.CRM.Services.IPocketAgent.GetRegisteredDevicesAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.PocketDeviceInfo[]}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.PocketDeviceInfo[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<PocketDeviceInfo[]>
  nameWithType: Task<PocketDeviceInfo[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.PocketDeviceInfo[]>
  nameWithType.vb: Task(Of PocketDeviceInfo())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.PocketDeviceInfo())
  name.vb: Task(Of PocketDeviceInfo())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.PocketDeviceInfo
    name: PocketDeviceInfo
    isExternal: true
    href: SuperOffice.CRM.Services.PocketDeviceInfo.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.PocketDeviceInfo
    name: PocketDeviceInfo
    isExternal: true
    href: SuperOffice.CRM.Services.PocketDeviceInfo.html
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.CRM.Services.IPocketAgent.SetPushNotificationTagsForDeviceAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPocketAgent.SetPushNotificationTagsForDeviceAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IPocketAgent.html#SuperOffice_CRM_Services_IPocketAgent_SetPushNotificationTagsForDeviceAsync_System_String_System_String_System_Threading_CancellationToken_
  name: SetPushNotificationTagsForDeviceAsync
  nameWithType: IPocketAgent.SetPushNotificationTagsForDeviceAsync
  fullName: SuperOffice.CRM.Services.IPocketAgent.SetPushNotificationTagsForDeviceAsync
- uid: SuperOffice.CRM.Services.IPocketAgent.SetPushNotificationTagsForUserAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPocketAgent.SetPushNotificationTagsForUserAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IPocketAgent.html#SuperOffice_CRM_Services_IPocketAgent_SetPushNotificationTagsForUserAsync_System_Int32_System_String_System_Threading_CancellationToken_
  name: SetPushNotificationTagsForUserAsync
  nameWithType: IPocketAgent.SetPushNotificationTagsForUserAsync
  fullName: SuperOffice.CRM.Services.IPocketAgent.SetPushNotificationTagsForUserAsync
- uid: SuperOffice.CRM.Services.IPocketAgent.GetPushNotificationTagsForDeviceAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPocketAgent.GetPushNotificationTagsForDeviceAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IPocketAgent.html#SuperOffice_CRM_Services_IPocketAgent_GetPushNotificationTagsForDeviceAsync_System_String_System_Threading_CancellationToken_
  name: GetPushNotificationTagsForDeviceAsync
  nameWithType: IPocketAgent.GetPushNotificationTagsForDeviceAsync
  fullName: SuperOffice.CRM.Services.IPocketAgent.GetPushNotificationTagsForDeviceAsync
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<string>
  nameWithType: Task<string>
  fullName: System.Threading.Tasks.Task<string>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SuperOffice.CRM.Services.IPocketAgent.SendPushNotificationAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPocketAgent.SendPushNotificationAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IPocketAgent.html#SuperOffice_CRM_Services_IPocketAgent_SendPushNotificationAsync_System_Int32___SuperOffice_CRM_Services_PocketNotificationMessage_System_Threading_CancellationToken_
  name: SendPushNotificationAsync
  nameWithType: IPocketAgent.SendPushNotificationAsync
  fullName: SuperOffice.CRM.Services.IPocketAgent.SendPushNotificationAsync
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.PocketNotificationMessage
  commentId: T:SuperOffice.CRM.Services.PocketNotificationMessage
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.PocketNotificationMessage.html
  name: PocketNotificationMessage
  nameWithType: PocketNotificationMessage
  fullName: SuperOffice.CRM.Services.PocketNotificationMessage
- uid: SuperOffice.CRM.Services.IPocketAgent.RunAppointmentAlarmBrokerAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPocketAgent.RunAppointmentAlarmBrokerAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IPocketAgent.html#SuperOffice_CRM_Services_IPocketAgent_RunAppointmentAlarmBrokerAsync_System_Threading_CancellationToken_
  name: RunAppointmentAlarmBrokerAsync
  nameWithType: IPocketAgent.RunAppointmentAlarmBrokerAsync
  fullName: SuperOffice.CRM.Services.IPocketAgent.RunAppointmentAlarmBrokerAsync
- uid: SuperOffice.CRM.Services.IPocketAgent.NotifyUsersAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPocketAgent.NotifyUsersAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IPocketAgent.html#SuperOffice_CRM_Services_IPocketAgent_NotifyUsersAsync_SuperOffice_Data_NotificationEventType_System_Int32_System_Threading_CancellationToken_
  name: NotifyUsersAsync
  nameWithType: IPocketAgent.NotifyUsersAsync
  fullName: SuperOffice.CRM.Services.IPocketAgent.NotifyUsersAsync
- uid: SuperOffice.Data.NotificationEventType
  isExternal: true
  name: NotificationEventType
  nameWithType: NotificationEventType
  fullName: SuperOffice.Data.NotificationEventType
- uid: SuperOffice.CRM.Services.IPocketAgent.NotificationHandledAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPocketAgent.NotificationHandledAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IPocketAgent.html#SuperOffice_CRM_Services_IPocketAgent_NotificationHandledAsync_SuperOffice_Data_NotificationEventType_System_Int32_System_Threading_CancellationToken_
  name: NotificationHandledAsync
  nameWithType: IPocketAgent.NotificationHandledAsync
  fullName: SuperOffice.CRM.Services.IPocketAgent.NotificationHandledAsync
- uid: SuperOffice.CRM.Services.IPocketAgent.NotificationsHandledAsync*
  commentId: Overload:SuperOffice.CRM.Services.IPocketAgent.NotificationsHandledAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IPocketAgent.html#SuperOffice_CRM_Services_IPocketAgent_NotificationsHandledAsync_SuperOffice_CRM_Services_NotificationEvent___System_Threading_CancellationToken_
  name: NotificationsHandledAsync
  nameWithType: IPocketAgent.NotificationsHandledAsync
  fullName: SuperOffice.CRM.Services.IPocketAgent.NotificationsHandledAsync
- uid: SuperOffice.CRM.Services.NotificationEvent[]
  isExternal: true
  href: SuperOffice.CRM.Services.NotificationEvent.html
  name: NotificationEvent[]
  nameWithType: NotificationEvent[]
  fullName: SuperOffice.CRM.Services.NotificationEvent[]
  nameWithType.vb: NotificationEvent()
  fullName.vb: SuperOffice.CRM.Services.NotificationEvent()
  name.vb: NotificationEvent()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.NotificationEvent
    name: NotificationEvent
    isExternal: true
    href: SuperOffice.CRM.Services.NotificationEvent.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Services.NotificationEvent
    name: NotificationEvent
    isExternal: true
    href: SuperOffice.CRM.Services.NotificationEvent.html
  - name: (
  - name: )
