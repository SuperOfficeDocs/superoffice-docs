### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Services.DatabaseTableAgent
  commentId: T:SuperOffice.CRM.Services.DatabaseTableAgent
  id: DatabaseTableAgent
  parent: SuperOffice.CRM.Services
  children:
  - SuperOffice.CRM.Services.DatabaseTableAgent.#ctor
  - SuperOffice.CRM.Services.DatabaseTableAgent.Delete(System.String,System.Int32[])
  - SuperOffice.CRM.Services.DatabaseTableAgent.DeleteRow(System.String,System.Int32)
  - SuperOffice.CRM.Services.DatabaseTableAgent.Insert(System.String,System.String[],System.String[][])
  - SuperOffice.CRM.Services.DatabaseTableAgent.InsertRow(System.String,SuperOffice.CRM.Services.StringDictionary)
  - SuperOffice.CRM.Services.DatabaseTableAgent.ReadRow(System.String,System.Int32)
  - SuperOffice.CRM.Services.DatabaseTableAgent.Truncate(System.String)
  - SuperOffice.CRM.Services.DatabaseTableAgent.UpdateRow(System.String,System.Int32,SuperOffice.CRM.Services.StringDictionary)
  - SuperOffice.CRM.Services.DatabaseTableAgent.Upsert(System.String,System.String[],System.String[],System.String[][],SuperOffice.Data.UpsertNomatchAction,System.Boolean)
  langs:
  - csharp
  - vb
  name: DatabaseTableAgent
  nameWithType: DatabaseTableAgent
  fullName: SuperOffice.CRM.Services.DatabaseTableAgent
  type: Class
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nFacade for the DatabaseTable Agent\nAgent used for CRUD operations on database tables. Read, add, update, delete rows in tables.\n<p></p>\n<strong>Online Restricted:</strong> This agent is not available in Online by default. Access must be requested specifically when app is registered.\n"
  example:
  - "\n<pre><code>  using SuperOffice;\n  using SuperOffice.CRM.Services;\n\n  using (SoSession mySession = SoSession.Authenticate(&quot;user&quot;, &quot;pass&quot;))\n  {\n     using (DatabaseTableAgent agent = new DatabaseTableAgent())\n     {\n        // call methods on agent here...\n     }\n  }</code></pre>\n"
  syntax:
    content: 'public class DatabaseTableAgent : AgentBase<IDatabaseTableAgent>, IDisposable, IDatabaseTableAgent, IAgent'
    content.vb: >-
      Public Class DatabaseTableAgent

          Inherits AgentBase(Of IDatabaseTableAgent)

          Implements IDisposable, IDatabaseTableAgent, IAgent
  inheritance:
  - System.Object
  - SuperOffice.CRM.Services.AgentBase{SuperOffice.CRM.Services.IDatabaseTableAgent}
  implements:
  - System.IDisposable
  - SuperOffice.CRM.Services.IDatabaseTableAgent
  - SuperOffice.CRM.Services.IAgent
  inheritedMembers:
  - SuperOffice.CRM.Services.AgentBase{SuperOffice.CRM.Services.IDatabaseTableAgent}.Dispose
  - SuperOffice.CRM.Services.AgentBase{SuperOffice.CRM.Services.IDatabaseTableAgent}.InnerAgent
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Services.DatabaseTableAgent.ReadRow(System.String,System.Int32)
  commentId: M:SuperOffice.CRM.Services.DatabaseTableAgent.ReadRow(System.String,System.Int32)
  id: ReadRow(System.String,System.Int32)
  parent: SuperOffice.CRM.Services.DatabaseTableAgent
  langs:
  - csharp
  - vb
  name: ReadRow(String, Int32)
  nameWithType: DatabaseTableAgent.ReadRow(String, Int32)
  fullName: SuperOffice.CRM.Services.DatabaseTableAgent.ReadRow(System.String, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nRead a row from a table\n"
  syntax:
    content: public TableRecord ReadRow(string tableName, int id)
    parameters:
    - id: tableName
      type: System.String
      description: The name of the table to fetch; in the current release this must be an &apos;extratable&apos;. Use the database name, on the form y_aTable
    - id: id
      type: System.Int32
      description: The id of the row to fetch
    return:
      type: SuperOffice.CRM.Services.TableRecord
      description: The row from the table
    content.vb: Public Function ReadRow(tableName As String, id As Integer) As TableRecord
  overload: SuperOffice.CRM.Services.DatabaseTableAgent.ReadRow*
  implements:
  - SuperOffice.CRM.Services.IDatabaseTableAgent.ReadRow(System.String,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.DatabaseTableAgent.InsertRow(System.String,SuperOffice.CRM.Services.StringDictionary)
  commentId: M:SuperOffice.CRM.Services.DatabaseTableAgent.InsertRow(System.String,SuperOffice.CRM.Services.StringDictionary)
  id: InsertRow(System.String,SuperOffice.CRM.Services.StringDictionary)
  parent: SuperOffice.CRM.Services.DatabaseTableAgent
  langs:
  - csharp
  - vb
  name: InsertRow(String, StringDictionary)
  nameWithType: DatabaseTableAgent.InsertRow(String, StringDictionary)
  fullName: SuperOffice.CRM.Services.DatabaseTableAgent.InsertRow(System.String, SuperOffice.CRM.Services.StringDictionary)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nInsert a row into a table\n"
  syntax:
    content: public int InsertRow(string tableName, StringDictionary values)
    parameters:
    - id: tableName
      type: System.String
      description: The name of the table to insert into; in the current release this must be an &apos;extratable&apos;. Use the database name, on the form y_aTable
    - id: values
      type: SuperOffice.CRM.Services.StringDictionary
      description: A StringDictionary with the values to insert. You do not need to specify all the values in the table. The omitted ones will get default values
    return:
      type: System.Int32
      description: The id of the newly inserted row
    content.vb: Public Function InsertRow(tableName As String, values As StringDictionary) As Integer
  overload: SuperOffice.CRM.Services.DatabaseTableAgent.InsertRow*
  implements:
  - SuperOffice.CRM.Services.IDatabaseTableAgent.InsertRow(System.String,SuperOffice.CRM.Services.StringDictionary)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.DatabaseTableAgent.UpdateRow(System.String,System.Int32,SuperOffice.CRM.Services.StringDictionary)
  commentId: M:SuperOffice.CRM.Services.DatabaseTableAgent.UpdateRow(System.String,System.Int32,SuperOffice.CRM.Services.StringDictionary)
  id: UpdateRow(System.String,System.Int32,SuperOffice.CRM.Services.StringDictionary)
  parent: SuperOffice.CRM.Services.DatabaseTableAgent
  langs:
  - csharp
  - vb
  name: UpdateRow(String, Int32, StringDictionary)
  nameWithType: DatabaseTableAgent.UpdateRow(String, Int32, StringDictionary)
  fullName: SuperOffice.CRM.Services.DatabaseTableAgent.UpdateRow(System.String, System.Int32, SuperOffice.CRM.Services.StringDictionary)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nUpdate a row in a table\n"
  syntax:
    content: public void UpdateRow(string tableName, int id, StringDictionary values)
    parameters:
    - id: tableName
      type: System.String
      description: The name of the table to update; in the current release this must be an &apos;extratable&apos;. Use the database name, on the form y_aTable
    - id: id
      type: System.Int32
      description: The id of the row to update
    - id: values
      type: SuperOffice.CRM.Services.StringDictionary
      description: A StringDictionary with the values to update. You do not need to specify all the values in the table. The omitted ones will remain unchanged
    content.vb: Public Sub UpdateRow(tableName As String, id As Integer, values As StringDictionary)
  overload: SuperOffice.CRM.Services.DatabaseTableAgent.UpdateRow*
  implements:
  - SuperOffice.CRM.Services.IDatabaseTableAgent.UpdateRow(System.String,System.Int32,SuperOffice.CRM.Services.StringDictionary)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.DatabaseTableAgent.DeleteRow(System.String,System.Int32)
  commentId: M:SuperOffice.CRM.Services.DatabaseTableAgent.DeleteRow(System.String,System.Int32)
  id: DeleteRow(System.String,System.Int32)
  parent: SuperOffice.CRM.Services.DatabaseTableAgent
  langs:
  - csharp
  - vb
  name: DeleteRow(String, Int32)
  nameWithType: DatabaseTableAgent.DeleteRow(String, Int32)
  fullName: SuperOffice.CRM.Services.DatabaseTableAgent.DeleteRow(System.String, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nDelete a row from a table\n"
  syntax:
    content: public void DeleteRow(string tableName, int id)
    parameters:
    - id: tableName
      type: System.String
      description: The name of the table to delete from; in the current release this must be an &apos;extratable&apos;. Use the database name, on the form y_aTable
    - id: id
      type: System.Int32
      description: The id of the row to delete
    content.vb: Public Sub DeleteRow(tableName As String, id As Integer)
  overload: SuperOffice.CRM.Services.DatabaseTableAgent.DeleteRow*
  implements:
  - SuperOffice.CRM.Services.IDatabaseTableAgent.DeleteRow(System.String,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.DatabaseTableAgent.Insert(System.String,System.String[],System.String[][])
  commentId: M:SuperOffice.CRM.Services.DatabaseTableAgent.Insert(System.String,System.String[],System.String[][])
  id: Insert(System.String,System.String[],System.String[][])
  parent: SuperOffice.CRM.Services.DatabaseTableAgent
  langs:
  - csharp
  - vb
  name: Insert(String, String[], String[][])
  nameWithType: DatabaseTableAgent.Insert(String, String[], String[][])
  fullName: SuperOffice.CRM.Services.DatabaseTableAgent.Insert(System.String, System.String[], System.String[][])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nMass-insert rows, with or without primary keys specified. Works on physical tables with no special processing for udef etc.; traveltransactionlog and WebHooks are supported\n"
  syntax:
    content: public MassOperationResult Insert(string tableName, string[] columns, string[][] data)
    parameters:
    - id: tableName
      type: System.String
      description: The name of the table where rows should be inserted
    - id: columns
      type: System.String[]
      description: List of column names, in the same order as in the Data parameter
    - id: data
      type: System.String[][]
      description: Outer array = rows, inner = columns in specified order; use CultureDataFormatter to format values that aren&apos;t string or int
    return:
      type: SuperOffice.CRM.Services.MassOperationResult
      description: Summary of results
    content.vb: Public Function Insert(tableName As String, columns As String(), data As String()()) As MassOperationResult
  overload: SuperOffice.CRM.Services.DatabaseTableAgent.Insert*
  implements:
  - SuperOffice.CRM.Services.IDatabaseTableAgent.Insert(System.String,System.String[],System.String[][])
  nameWithType.vb: DatabaseTableAgent.Insert(String, String(), String()())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.Services.DatabaseTableAgent.Insert(System.String, System.String(), System.String()())
  name.vb: Insert(String, String(), String()())
- uid: SuperOffice.CRM.Services.DatabaseTableAgent.Truncate(System.String)
  commentId: M:SuperOffice.CRM.Services.DatabaseTableAgent.Truncate(System.String)
  id: Truncate(System.String)
  parent: SuperOffice.CRM.Services.DatabaseTableAgent
  langs:
  - csharp
  - vb
  name: Truncate(String)
  nameWithType: DatabaseTableAgent.Truncate(String)
  fullName: SuperOffice.CRM.Services.DatabaseTableAgent.Truncate(System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nDrop all rows in a table. This clearance is not individually logged in TravelTransactionlog or Webhook/script calls\n"
  syntax:
    content: public MassOperationResult Truncate(string tableName)
    parameters:
    - id: tableName
      type: System.String
      description: Name of table to be truncated
    return:
      type: SuperOffice.CRM.Services.MassOperationResult
      description: Summary of results
    content.vb: Public Function Truncate(tableName As String) As MassOperationResult
  overload: SuperOffice.CRM.Services.DatabaseTableAgent.Truncate*
  implements:
  - SuperOffice.CRM.Services.IDatabaseTableAgent.Truncate(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.DatabaseTableAgent.Upsert(System.String,System.String[],System.String[],System.String[][],SuperOffice.Data.UpsertNomatchAction,System.Boolean)
  commentId: M:SuperOffice.CRM.Services.DatabaseTableAgent.Upsert(System.String,System.String[],System.String[],System.String[][],SuperOffice.Data.UpsertNomatchAction,System.Boolean)
  id: Upsert(System.String,System.String[],System.String[],System.String[][],SuperOffice.Data.UpsertNomatchAction,System.Boolean)
  parent: SuperOffice.CRM.Services.DatabaseTableAgent
  langs:
  - csharp
  - vb
  name: Upsert(String, String[], String[], String[][], UpsertNomatchAction, Boolean)
  nameWithType: DatabaseTableAgent.Upsert(String, String[], String[], String[][], UpsertNomatchAction, Boolean)
  fullName: SuperOffice.CRM.Services.DatabaseTableAgent.Upsert(System.String, System.String[], System.String[], System.String[][], SuperOffice.Data.UpsertNomatchAction, System.Boolean)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nInsert or update rows, optionally deleting/zeroing &apos;leftover&apos; rows. Special support for UDEF, as well as optional extensive information return. Traveltransactionlog and WebHooks are supported\n"
  syntax:
    content: public MassOperationResult Upsert(string tableName, string[] columns, string[] keys, string[][] data, UpsertNomatchAction nomatchAction, bool returnRowStatus)
    parameters:
    - id: tableName
      type: System.String
      description: The name of the table where rows should be inserted or updated
    - id: columns
      type: System.String[]
      description: List of column names, in the same order as in the data
    - id: keys
      type: System.String[]
      description: List of columns that are to be used as keys, to match any existing rows
    - id: data
      type: System.String[][]
      description: Outer array = row, inner = column in specified order; use CultureDataFormatter to format values
    - id: nomatchAction
      type: SuperOffice.Data.UpsertNomatchAction
      description: Action to take on rows in the target table, that are not matched by any rows in the incoming data. Use the deletion options with care. NEVER use deletion if your Upsert is so large you need to divide it into multiple batches.
    - id: returnRowStatus
      type: System.Boolean
      description: If true, then the &apos;RowStatus&apos; member of the return carrier will be populated with a per-row status, for each incoming row
    return:
      type: SuperOffice.CRM.Services.MassOperationResult
      description: Summary of results
    content.vb: Public Function Upsert(tableName As String, columns As String(), keys As String(), data As String()(), nomatchAction As UpsertNomatchAction, returnRowStatus As Boolean) As MassOperationResult
  overload: SuperOffice.CRM.Services.DatabaseTableAgent.Upsert*
  implements:
  - SuperOffice.CRM.Services.IDatabaseTableAgent.Upsert(System.String,System.String[],System.String[],System.String[][],SuperOffice.Data.UpsertNomatchAction,System.Boolean)
  nameWithType.vb: DatabaseTableAgent.Upsert(String, String(), String(), String()(), UpsertNomatchAction, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.Services.DatabaseTableAgent.Upsert(System.String, System.String(), System.String(), System.String()(), SuperOffice.Data.UpsertNomatchAction, System.Boolean)
  name.vb: Upsert(String, String(), String(), String()(), UpsertNomatchAction, Boolean)
- uid: SuperOffice.CRM.Services.DatabaseTableAgent.Delete(System.String,System.Int32[])
  commentId: M:SuperOffice.CRM.Services.DatabaseTableAgent.Delete(System.String,System.Int32[])
  id: Delete(System.String,System.Int32[])
  parent: SuperOffice.CRM.Services.DatabaseTableAgent
  langs:
  - csharp
  - vb
  name: Delete(String, Int32[])
  nameWithType: DatabaseTableAgent.Delete(String, Int32[])
  fullName: SuperOffice.CRM.Services.DatabaseTableAgent.Delete(System.String, System.Int32[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nDelete rows, by primary key; traveltransactionlog and WebHooks are supported\n"
  syntax:
    content: public MassOperationResult Delete(string tableName, int[] iDs)
    parameters:
    - id: tableName
      type: System.String
      description: The name of the table where rows should be deleted
    - id: iDs
      type: System.Int32[]
      description: Primary keys of the rows to be deleted
    return:
      type: SuperOffice.CRM.Services.MassOperationResult
      description: Summary of results
    content.vb: Public Function Delete(tableName As String, iDs As Integer()) As MassOperationResult
  overload: SuperOffice.CRM.Services.DatabaseTableAgent.Delete*
  implements:
  - SuperOffice.CRM.Services.IDatabaseTableAgent.Delete(System.String,System.Int32[])
  nameWithType.vb: DatabaseTableAgent.Delete(String, Int32())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.Services.DatabaseTableAgent.Delete(System.String, System.Int32())
  name.vb: Delete(String, Int32())
- uid: SuperOffice.CRM.Services.DatabaseTableAgent.#ctor
  commentId: M:SuperOffice.CRM.Services.DatabaseTableAgent.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.Services.DatabaseTableAgent
  langs:
  - csharp
  - vb
  name: DatabaseTableAgent()
  nameWithType: DatabaseTableAgent.DatabaseTableAgent()
  fullName: SuperOffice.CRM.Services.DatabaseTableAgent.DatabaseTableAgent()
  type: Constructor
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  syntax:
    content: public DatabaseTableAgent()
    content.vb: Public Sub New
  overload: SuperOffice.CRM.Services.DatabaseTableAgent.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.CRM.Services.AgentBase{SuperOffice.CRM.Services.IDatabaseTableAgent}
  commentId: T:SuperOffice.CRM.Services.AgentBase{SuperOffice.CRM.Services.IDatabaseTableAgent}
  parent: SuperOffice.CRM.Services
  definition: SuperOffice.CRM.Services.AgentBase`1
  name: AgentBase<IDatabaseTableAgent>
  nameWithType: AgentBase<IDatabaseTableAgent>
  fullName: SuperOffice.CRM.Services.AgentBase<SuperOffice.CRM.Services.IDatabaseTableAgent>
  nameWithType.vb: AgentBase(Of IDatabaseTableAgent)
  fullName.vb: SuperOffice.CRM.Services.AgentBase(Of SuperOffice.CRM.Services.IDatabaseTableAgent)
  name.vb: AgentBase(Of IDatabaseTableAgent)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.AgentBase`1
    name: AgentBase
    nameWithType: AgentBase
    fullName: SuperOffice.CRM.Services.AgentBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Services.IDatabaseTableAgent
    name: IDatabaseTableAgent
    nameWithType: IDatabaseTableAgent
    fullName: SuperOffice.CRM.Services.IDatabaseTableAgent
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Services.AgentBase`1
    name: AgentBase
    nameWithType: AgentBase
    fullName: SuperOffice.CRM.Services.AgentBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Services.IDatabaseTableAgent
    name: IDatabaseTableAgent
    nameWithType: IDatabaseTableAgent
    fullName: SuperOffice.CRM.Services.IDatabaseTableAgent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: SuperOffice.CRM.Services.IDatabaseTableAgent
  commentId: T:SuperOffice.CRM.Services.IDatabaseTableAgent
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: IDatabaseTableAgent
  nameWithType: IDatabaseTableAgent
  fullName: SuperOffice.CRM.Services.IDatabaseTableAgent
- uid: SuperOffice.CRM.Services.IAgent
  commentId: T:SuperOffice.CRM.Services.IAgent
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: IAgent
  nameWithType: IAgent
  fullName: SuperOffice.CRM.Services.IAgent
- uid: SuperOffice.CRM.Services.AgentBase{SuperOffice.CRM.Services.IDatabaseTableAgent}.Dispose
  commentId: M:SuperOffice.CRM.Services.AgentBase{SuperOffice.CRM.Services.IDatabaseTableAgent}.Dispose
  parent: SuperOffice.CRM.Services.AgentBase{SuperOffice.CRM.Services.IDatabaseTableAgent}
  definition: SuperOffice.CRM.Services.AgentBase`1.Dispose
  name: Dispose()
  nameWithType: AgentBase<IDatabaseTableAgent>.Dispose()
  fullName: SuperOffice.CRM.Services.AgentBase<SuperOffice.CRM.Services.IDatabaseTableAgent>.Dispose()
  nameWithType.vb: AgentBase(Of IDatabaseTableAgent).Dispose()
  fullName.vb: SuperOffice.CRM.Services.AgentBase(Of SuperOffice.CRM.Services.IDatabaseTableAgent).Dispose()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.AgentBase`1.Dispose
    name: Dispose
    nameWithType: AgentBase<IDatabaseTableAgent>.Dispose
    fullName: SuperOffice.CRM.Services.AgentBase<SuperOffice.CRM.Services.IDatabaseTableAgent>.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.AgentBase`1.Dispose
    name: Dispose
    nameWithType: AgentBase(Of IDatabaseTableAgent).Dispose
    fullName: SuperOffice.CRM.Services.AgentBase(Of SuperOffice.CRM.Services.IDatabaseTableAgent).Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.AgentBase{SuperOffice.CRM.Services.IDatabaseTableAgent}.InnerAgent
  commentId: P:SuperOffice.CRM.Services.AgentBase{SuperOffice.CRM.Services.IDatabaseTableAgent}.InnerAgent
  parent: SuperOffice.CRM.Services.AgentBase{SuperOffice.CRM.Services.IDatabaseTableAgent}
  definition: SuperOffice.CRM.Services.AgentBase`1.InnerAgent
  name: InnerAgent
  nameWithType: AgentBase<IDatabaseTableAgent>.InnerAgent
  fullName: SuperOffice.CRM.Services.AgentBase<SuperOffice.CRM.Services.IDatabaseTableAgent>.InnerAgent
  nameWithType.vb: AgentBase(Of IDatabaseTableAgent).InnerAgent
  fullName.vb: SuperOffice.CRM.Services.AgentBase(Of SuperOffice.CRM.Services.IDatabaseTableAgent).InnerAgent
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Services.AgentBase`1
  commentId: T:SuperOffice.CRM.Services.AgentBase`1
  isExternal: true
  name: AgentBase<TAgent>
  nameWithType: AgentBase<TAgent>
  fullName: SuperOffice.CRM.Services.AgentBase<TAgent>
  nameWithType.vb: AgentBase(Of TAgent)
  fullName.vb: SuperOffice.CRM.Services.AgentBase(Of TAgent)
  name.vb: AgentBase(Of TAgent)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.AgentBase`1
    name: AgentBase
    nameWithType: AgentBase
    fullName: SuperOffice.CRM.Services.AgentBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TAgent
    nameWithType: TAgent
    fullName: TAgent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Services.AgentBase`1
    name: AgentBase
    nameWithType: AgentBase
    fullName: SuperOffice.CRM.Services.AgentBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAgent
    nameWithType: TAgent
    fullName: TAgent
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.AgentBase`1.Dispose
  commentId: M:SuperOffice.CRM.Services.AgentBase`1.Dispose
  isExternal: true
  name: Dispose()
  nameWithType: AgentBase<TAgent>.Dispose()
  fullName: SuperOffice.CRM.Services.AgentBase<TAgent>.Dispose()
  nameWithType.vb: AgentBase(Of TAgent).Dispose()
  fullName.vb: SuperOffice.CRM.Services.AgentBase(Of TAgent).Dispose()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.AgentBase`1.Dispose
    name: Dispose
    nameWithType: AgentBase<TAgent>.Dispose
    fullName: SuperOffice.CRM.Services.AgentBase<TAgent>.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.AgentBase`1.Dispose
    name: Dispose
    nameWithType: AgentBase(Of TAgent).Dispose
    fullName: SuperOffice.CRM.Services.AgentBase(Of TAgent).Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.AgentBase`1.InnerAgent
  commentId: P:SuperOffice.CRM.Services.AgentBase`1.InnerAgent
  isExternal: true
  name: InnerAgent
  nameWithType: AgentBase<TAgent>.InnerAgent
  fullName: SuperOffice.CRM.Services.AgentBase<TAgent>.InnerAgent
  nameWithType.vb: AgentBase(Of TAgent).InnerAgent
  fullName.vb: SuperOffice.CRM.Services.AgentBase(Of TAgent).InnerAgent
- uid: SuperOffice.CRM.Services.DatabaseTableAgent.ReadRow*
  commentId: Overload:SuperOffice.CRM.Services.DatabaseTableAgent.ReadRow
  isExternal: true
  name: ReadRow
  nameWithType: DatabaseTableAgent.ReadRow
  fullName: SuperOffice.CRM.Services.DatabaseTableAgent.ReadRow
- uid: SuperOffice.CRM.Services.IDatabaseTableAgent.ReadRow(System.String,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IDatabaseTableAgent.ReadRow(System.String,System.Int32)
  parent: SuperOffice.CRM.Services.IDatabaseTableAgent
  isExternal: true
  name: ReadRow(String, Int32)
  nameWithType: IDatabaseTableAgent.ReadRow(String, Int32)
  fullName: SuperOffice.CRM.Services.IDatabaseTableAgent.ReadRow(System.String, System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IDatabaseTableAgent.ReadRow(System.String,System.Int32)
    name: ReadRow
    nameWithType: IDatabaseTableAgent.ReadRow
    fullName: SuperOffice.CRM.Services.IDatabaseTableAgent.ReadRow
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IDatabaseTableAgent.ReadRow(System.String,System.Int32)
    name: ReadRow
    nameWithType: IDatabaseTableAgent.ReadRow
    fullName: SuperOffice.CRM.Services.IDatabaseTableAgent.ReadRow
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.CRM.Services.TableRecord
  commentId: T:SuperOffice.CRM.Services.TableRecord
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: TableRecord
  nameWithType: TableRecord
  fullName: SuperOffice.CRM.Services.TableRecord
- uid: SuperOffice.CRM.Services.DatabaseTableAgent.InsertRow*
  commentId: Overload:SuperOffice.CRM.Services.DatabaseTableAgent.InsertRow
  isExternal: true
  name: InsertRow
  nameWithType: DatabaseTableAgent.InsertRow
  fullName: SuperOffice.CRM.Services.DatabaseTableAgent.InsertRow
- uid: SuperOffice.CRM.Services.IDatabaseTableAgent.InsertRow(System.String,SuperOffice.CRM.Services.StringDictionary)
  commentId: M:SuperOffice.CRM.Services.IDatabaseTableAgent.InsertRow(System.String,SuperOffice.CRM.Services.StringDictionary)
  parent: SuperOffice.CRM.Services.IDatabaseTableAgent
  isExternal: true
  name: InsertRow(String, StringDictionary)
  nameWithType: IDatabaseTableAgent.InsertRow(String, StringDictionary)
  fullName: SuperOffice.CRM.Services.IDatabaseTableAgent.InsertRow(System.String, SuperOffice.CRM.Services.StringDictionary)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IDatabaseTableAgent.InsertRow(System.String,SuperOffice.CRM.Services.StringDictionary)
    name: InsertRow
    nameWithType: IDatabaseTableAgent.InsertRow
    fullName: SuperOffice.CRM.Services.IDatabaseTableAgent.InsertRow
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.Services.StringDictionary
    name: StringDictionary
    nameWithType: StringDictionary
    fullName: SuperOffice.CRM.Services.StringDictionary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IDatabaseTableAgent.InsertRow(System.String,SuperOffice.CRM.Services.StringDictionary)
    name: InsertRow
    nameWithType: IDatabaseTableAgent.InsertRow
    fullName: SuperOffice.CRM.Services.IDatabaseTableAgent.InsertRow
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.Services.StringDictionary
    name: StringDictionary
    nameWithType: StringDictionary
    fullName: SuperOffice.CRM.Services.StringDictionary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.StringDictionary
  isExternal: true
  name: StringDictionary
  nameWithType: StringDictionary
  fullName: SuperOffice.CRM.Services.StringDictionary
- uid: SuperOffice.CRM.Services.DatabaseTableAgent.UpdateRow*
  commentId: Overload:SuperOffice.CRM.Services.DatabaseTableAgent.UpdateRow
  isExternal: true
  name: UpdateRow
  nameWithType: DatabaseTableAgent.UpdateRow
  fullName: SuperOffice.CRM.Services.DatabaseTableAgent.UpdateRow
- uid: SuperOffice.CRM.Services.IDatabaseTableAgent.UpdateRow(System.String,System.Int32,SuperOffice.CRM.Services.StringDictionary)
  commentId: M:SuperOffice.CRM.Services.IDatabaseTableAgent.UpdateRow(System.String,System.Int32,SuperOffice.CRM.Services.StringDictionary)
  parent: SuperOffice.CRM.Services.IDatabaseTableAgent
  isExternal: true
  name: UpdateRow(String, Int32, StringDictionary)
  nameWithType: IDatabaseTableAgent.UpdateRow(String, Int32, StringDictionary)
  fullName: SuperOffice.CRM.Services.IDatabaseTableAgent.UpdateRow(System.String, System.Int32, SuperOffice.CRM.Services.StringDictionary)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IDatabaseTableAgent.UpdateRow(System.String,System.Int32,SuperOffice.CRM.Services.StringDictionary)
    name: UpdateRow
    nameWithType: IDatabaseTableAgent.UpdateRow
    fullName: SuperOffice.CRM.Services.IDatabaseTableAgent.UpdateRow
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.Services.StringDictionary
    name: StringDictionary
    nameWithType: StringDictionary
    fullName: SuperOffice.CRM.Services.StringDictionary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IDatabaseTableAgent.UpdateRow(System.String,System.Int32,SuperOffice.CRM.Services.StringDictionary)
    name: UpdateRow
    nameWithType: IDatabaseTableAgent.UpdateRow
    fullName: SuperOffice.CRM.Services.IDatabaseTableAgent.UpdateRow
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.Services.StringDictionary
    name: StringDictionary
    nameWithType: StringDictionary
    fullName: SuperOffice.CRM.Services.StringDictionary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.DatabaseTableAgent.DeleteRow*
  commentId: Overload:SuperOffice.CRM.Services.DatabaseTableAgent.DeleteRow
  isExternal: true
  name: DeleteRow
  nameWithType: DatabaseTableAgent.DeleteRow
  fullName: SuperOffice.CRM.Services.DatabaseTableAgent.DeleteRow
- uid: SuperOffice.CRM.Services.IDatabaseTableAgent.DeleteRow(System.String,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IDatabaseTableAgent.DeleteRow(System.String,System.Int32)
  parent: SuperOffice.CRM.Services.IDatabaseTableAgent
  isExternal: true
  name: DeleteRow(String, Int32)
  nameWithType: IDatabaseTableAgent.DeleteRow(String, Int32)
  fullName: SuperOffice.CRM.Services.IDatabaseTableAgent.DeleteRow(System.String, System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IDatabaseTableAgent.DeleteRow(System.String,System.Int32)
    name: DeleteRow
    nameWithType: IDatabaseTableAgent.DeleteRow
    fullName: SuperOffice.CRM.Services.IDatabaseTableAgent.DeleteRow
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IDatabaseTableAgent.DeleteRow(System.String,System.Int32)
    name: DeleteRow
    nameWithType: IDatabaseTableAgent.DeleteRow
    fullName: SuperOffice.CRM.Services.IDatabaseTableAgent.DeleteRow
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.DatabaseTableAgent.Insert*
  commentId: Overload:SuperOffice.CRM.Services.DatabaseTableAgent.Insert
  isExternal: true
  name: Insert
  nameWithType: DatabaseTableAgent.Insert
  fullName: SuperOffice.CRM.Services.DatabaseTableAgent.Insert
- uid: SuperOffice.CRM.Services.IDatabaseTableAgent.Insert(System.String,System.String[],System.String[][])
  commentId: M:SuperOffice.CRM.Services.IDatabaseTableAgent.Insert(System.String,System.String[],System.String[][])
  parent: SuperOffice.CRM.Services.IDatabaseTableAgent
  isExternal: true
  name: Insert(String, String[], String[][])
  nameWithType: IDatabaseTableAgent.Insert(String, String[], String[][])
  fullName: SuperOffice.CRM.Services.IDatabaseTableAgent.Insert(System.String, System.String[], System.String[][])
  nameWithType.vb: IDatabaseTableAgent.Insert(String, String(), String()())
  fullName.vb: SuperOffice.CRM.Services.IDatabaseTableAgent.Insert(System.String, System.String(), System.String()())
  name.vb: Insert(String, String(), String()())
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IDatabaseTableAgent.Insert(System.String,System.String[],System.String[][])
    name: Insert
    nameWithType: IDatabaseTableAgent.Insert
    fullName: SuperOffice.CRM.Services.IDatabaseTableAgent.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IDatabaseTableAgent.Insert(System.String,System.String[],System.String[][])
    name: Insert
    nameWithType: IDatabaseTableAgent.Insert
    fullName: SuperOffice.CRM.Services.IDatabaseTableAgent.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.String[][]
  isExternal: true
  name: String[][]
  nameWithType: String[][]
  fullName: System.String[][]
  nameWithType.vb: String()()
  fullName.vb: System.String()()
  name.vb: String()()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.MassOperationResult
  commentId: T:SuperOffice.CRM.Services.MassOperationResult
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: MassOperationResult
  nameWithType: MassOperationResult
  fullName: SuperOffice.CRM.Services.MassOperationResult
- uid: SuperOffice.CRM.Services.DatabaseTableAgent.Truncate*
  commentId: Overload:SuperOffice.CRM.Services.DatabaseTableAgent.Truncate
  isExternal: true
  name: Truncate
  nameWithType: DatabaseTableAgent.Truncate
  fullName: SuperOffice.CRM.Services.DatabaseTableAgent.Truncate
- uid: SuperOffice.CRM.Services.IDatabaseTableAgent.Truncate(System.String)
  commentId: M:SuperOffice.CRM.Services.IDatabaseTableAgent.Truncate(System.String)
  parent: SuperOffice.CRM.Services.IDatabaseTableAgent
  isExternal: true
  name: Truncate(String)
  nameWithType: IDatabaseTableAgent.Truncate(String)
  fullName: SuperOffice.CRM.Services.IDatabaseTableAgent.Truncate(System.String)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IDatabaseTableAgent.Truncate(System.String)
    name: Truncate
    nameWithType: IDatabaseTableAgent.Truncate
    fullName: SuperOffice.CRM.Services.IDatabaseTableAgent.Truncate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IDatabaseTableAgent.Truncate(System.String)
    name: Truncate
    nameWithType: IDatabaseTableAgent.Truncate
    fullName: SuperOffice.CRM.Services.IDatabaseTableAgent.Truncate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.DatabaseTableAgent.Upsert*
  commentId: Overload:SuperOffice.CRM.Services.DatabaseTableAgent.Upsert
  isExternal: true
  name: Upsert
  nameWithType: DatabaseTableAgent.Upsert
  fullName: SuperOffice.CRM.Services.DatabaseTableAgent.Upsert
- uid: SuperOffice.CRM.Services.IDatabaseTableAgent.Upsert(System.String,System.String[],System.String[],System.String[][],SuperOffice.Data.UpsertNomatchAction,System.Boolean)
  commentId: M:SuperOffice.CRM.Services.IDatabaseTableAgent.Upsert(System.String,System.String[],System.String[],System.String[][],SuperOffice.Data.UpsertNomatchAction,System.Boolean)
  parent: SuperOffice.CRM.Services.IDatabaseTableAgent
  isExternal: true
  name: Upsert(String, String[], String[], String[][], UpsertNomatchAction, Boolean)
  nameWithType: IDatabaseTableAgent.Upsert(String, String[], String[], String[][], UpsertNomatchAction, Boolean)
  fullName: SuperOffice.CRM.Services.IDatabaseTableAgent.Upsert(System.String, System.String[], System.String[], System.String[][], SuperOffice.Data.UpsertNomatchAction, System.Boolean)
  nameWithType.vb: IDatabaseTableAgent.Upsert(String, String(), String(), String()(), UpsertNomatchAction, Boolean)
  fullName.vb: SuperOffice.CRM.Services.IDatabaseTableAgent.Upsert(System.String, System.String(), System.String(), System.String()(), SuperOffice.Data.UpsertNomatchAction, System.Boolean)
  name.vb: Upsert(String, String(), String(), String()(), UpsertNomatchAction, Boolean)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IDatabaseTableAgent.Upsert(System.String,System.String[],System.String[],System.String[][],SuperOffice.Data.UpsertNomatchAction,System.Boolean)
    name: Upsert
    nameWithType: IDatabaseTableAgent.Upsert
    fullName: SuperOffice.CRM.Services.IDatabaseTableAgent.Upsert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.UpsertNomatchAction
    name: UpsertNomatchAction
    nameWithType: UpsertNomatchAction
    fullName: SuperOffice.Data.UpsertNomatchAction
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IDatabaseTableAgent.Upsert(System.String,System.String[],System.String[],System.String[][],SuperOffice.Data.UpsertNomatchAction,System.Boolean)
    name: Upsert
    nameWithType: IDatabaseTableAgent.Upsert
    fullName: SuperOffice.CRM.Services.IDatabaseTableAgent.Upsert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.UpsertNomatchAction
    name: UpsertNomatchAction
    nameWithType: UpsertNomatchAction
    fullName: SuperOffice.Data.UpsertNomatchAction
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.UpsertNomatchAction
  isExternal: true
  name: UpsertNomatchAction
  nameWithType: UpsertNomatchAction
  fullName: SuperOffice.Data.UpsertNomatchAction
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.CRM.Services.DatabaseTableAgent.Delete*
  commentId: Overload:SuperOffice.CRM.Services.DatabaseTableAgent.Delete
  isExternal: true
  name: Delete
  nameWithType: DatabaseTableAgent.Delete
  fullName: SuperOffice.CRM.Services.DatabaseTableAgent.Delete
- uid: SuperOffice.CRM.Services.IDatabaseTableAgent.Delete(System.String,System.Int32[])
  commentId: M:SuperOffice.CRM.Services.IDatabaseTableAgent.Delete(System.String,System.Int32[])
  parent: SuperOffice.CRM.Services.IDatabaseTableAgent
  isExternal: true
  name: Delete(String, Int32[])
  nameWithType: IDatabaseTableAgent.Delete(String, Int32[])
  fullName: SuperOffice.CRM.Services.IDatabaseTableAgent.Delete(System.String, System.Int32[])
  nameWithType.vb: IDatabaseTableAgent.Delete(String, Int32())
  fullName.vb: SuperOffice.CRM.Services.IDatabaseTableAgent.Delete(System.String, System.Int32())
  name.vb: Delete(String, Int32())
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IDatabaseTableAgent.Delete(System.String,System.Int32[])
    name: Delete
    nameWithType: IDatabaseTableAgent.Delete
    fullName: SuperOffice.CRM.Services.IDatabaseTableAgent.Delete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IDatabaseTableAgent.Delete(System.String,System.Int32[])
    name: Delete
    nameWithType: IDatabaseTableAgent.Delete
    fullName: SuperOffice.CRM.Services.IDatabaseTableAgent.Delete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.DatabaseTableAgent.#ctor*
  commentId: Overload:SuperOffice.CRM.Services.DatabaseTableAgent.#ctor
  isExternal: true
  name: DatabaseTableAgent
  nameWithType: DatabaseTableAgent.DatabaseTableAgent
  fullName: SuperOffice.CRM.Services.DatabaseTableAgent.DatabaseTableAgent
