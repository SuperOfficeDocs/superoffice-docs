### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Services.IUserAgent
  commentId: T:SuperOffice.CRM.Services.IUserAgent
  id: IUserAgent
  parent: SuperOffice.CRM.Services
  children:
  - SuperOffice.CRM.Services.IUserAgent.AddOwnerContactAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.CanChangePasswordAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.ChangeOwnPasswordAsync(System.String,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.ChangePasswordAsync(System.Int32,System.String,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.ChangePasswordFromNameAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.ChangeUserTypeAsync(SuperOffice.CRM.Services.User,SuperOffice.License.UserType,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.CheckAccessGatewayRegistrationAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.CreateDefaultRoleEntityAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.CreateDefaultRoleEntityFromTypeAsync(SuperOffice.Data.RoleType,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.CreateDefaultServiceAuthAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.CreateDefaultUntrustedCredentialsAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.CreateDefaultUserAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.CreateDefaultUserFromUserTypeAndCredentialAsync(SuperOffice.License.UserType,System.Int32,System.String,System.String,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.CreateDefaultUserFromUserTypeAndPersonIdAsync(SuperOffice.License.UserType,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.CreateDefaultUserFromUserTypeAsync(SuperOffice.License.UserType,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.CreateExternalUserAsync(System.Int32,System.String,System.String,System.Int32,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.CreateUserGroupAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.DecryptAndSaveExternalTokensAsync(SuperOffice.CRM.Services.TokenManagementInfo,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.DeleteCredentialAsync(System.Int32,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.DeleteExternalUserAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.DeleteRoleAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.DeleteServiceAuthAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.DeleteUserAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.DeleteUserFromNameAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.DeleteUserGroupAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.ExecuteUserCommandAsync(System.String,SuperOffice.Data.CommandActionResult,SuperOffice.CRM.Services.User,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.FindCredentialUsersAsync(System.String,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.FindCredentialsGroupsAsync(System.String,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.FindRolesWithFunctionalRightAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.FindRolesWithFunctionalRightsAsync(System.String[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.FindRolesWithoutFunctionalRightsAsync(System.String[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.GenerateNewPasswordForExternalUserAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.GetAccessGatewayInfoAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.GetAccessTokenAsync(System.String,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.GetAllFunctionalRightsAsync(SuperOffice.Data.RoleType,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.GetAllRolesAsync(SuperOffice.Data.RoleType,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.GetAllUserGroupsAsync(System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.GetCredentialTypesAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.GetCredentialTypesForUserTypeAsync(SuperOffice.License.UserType,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.GetCredentialUsersInGroupAsync(System.String,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.GetDataRightAsync(System.Int32,System.String,SuperOffice.CRM.Services.Util.RoleRelationToOwner,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.GetDataRightsAsync(System.Int32,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.GetDefaultAssociateUserNameAsync(SuperOffice.CRM.Services.User,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.GetExternalTokensAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.GetFunctionalRightsAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.GetOrRegisterAccessGatewayInfoAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.GetRoleAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.GetRoleEntityAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.GetServiceAuthAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.GetSupportedChangePasswordTypesAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.GetUntrustedCredentialsAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.GetUntrustedCredentialsForAssociateAsync(System.Int32,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.GetUserAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.GetUserCommandsAsync(SuperOffice.CRM.Services.User,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.GetUserFromEjUserIdAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.GetUserFromNameAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.GetUserFromPersonIdAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.GetUserGroupAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.GetUserGroupListAsync(System.Int32[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.GetUserInfoAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.GetUserInfoListAsync(System.Int32[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.GetUserPresenceStatusAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.GetValidUserNameAsync(System.Int32,SuperOffice.License.UserType,System.Int32,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.GetValidUserNameForNewUserAsync(SuperOffice.CRM.Services.User,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.IsNickNameUniqueAsync(System.Int32,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.IsPasswordValidAsync(System.Int32,SuperOffice.License.UserType,System.Int32,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.IsPasswordValidWithReasonAsync(System.Int32,SuperOffice.License.UserType,System.Int32,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.IsUserNameValidAsync(System.Int32,SuperOffice.License.UserType,System.Int32,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.IsUserNameValidWithReasonAsync(System.Int32,SuperOffice.License.UserType,System.Int32,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.MakeRetiredAsync(System.Int32,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.RegisterWithAccessGatewayAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.RemoveLicensesAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.RemoveOwnerContactAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.RemoveUntrustedCredentialsAsync(System.String,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.RemoveUntrustedCredentialsForAssociateAsync(System.Int32,System.String,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.ResolveUserFromInfoAsync(System.Int32,System.String,System.String[],System.String[],SuperOffice.License.UserType,SuperOffice.CRM.Services.Credential,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.SaveCredentialAsync(System.Int32,SuperOffice.CRM.Services.Credential,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.SaveExternalTokensAsync(SuperOffice.CRM.Services.TokenManagementInfo,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.SaveRoleEntityAsync(SuperOffice.CRM.Services.RoleEntity,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.SaveServiceAuthAsync(SuperOffice.CRM.Services.ServiceAuth,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.SaveUntrustedCredentialsAsync(System.String,SuperOffice.CRM.Services.UntrustedCredentials,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.SaveUntrustedCredentialsForAssociateAsync(System.Int32,System.String,SuperOffice.CRM.Services.UntrustedCredentials,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.SaveUserAsync(SuperOffice.CRM.Services.User,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.SaveUserFromNameAsync(System.String,SuperOffice.CRM.Services.User,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.SaveUserGroupAsync(SuperOffice.CRM.Services.UserGroup,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.SendChangePasswordEMailAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.SetDataRightAsync(System.Int32,System.String,SuperOffice.CRM.Services.Util.RoleRelationToOwner,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.SetExternalUserInfoAsync(System.Int32,System.String,System.String,System.Boolean,System.Int32,SuperOffice.CRM.Services.Util.ExternalUserInfoModification,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.SetFunctionalRightsAsync(System.Int32,System.Int32[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.SetGeneratedPasswordAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.SetGeneratedPasswordFromNameAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.SetPasswordAsync(System.Int32,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.SetPasswordFromNameAsync(System.String,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.SetUserPresenceStatusAsync(System.Int32,SuperOffice.CRM.Services.UserPresenceStatus,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IUserAgent.ValidateUserAsync(SuperOffice.CRM.Services.User,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IUserAgent
  nameWithType: IUserAgent
  fullName: SuperOffice.CRM.Services.IUserAgent
  type: Interface
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Interface for the User Agent

    User administration

    <p></p>

    <b>Online Restricted:</b> This agent is not available in Online by default. User management is not allowed for partner apps.
  example:
  - >-
    <pre><code class="lang-csharp">using SuperOffice;

    using SuperOffice.CRM.Services;


    using (SoSession mySession = SoSession.Authenticate("user", "pass"))

    {
       using (UserAgent agent = new UserAgent())
       {
          // call methods on agent here...
       }
    }</code></pre>
  syntax:
    content: >-
      [Agent("User Agent", "Interface for the User Agent. User administration")]

      public interface IUserAgent : IAgent
    content.vb: >-
      <Agent("User Agent", "Interface for the User Agent. User administration")>

      Public Interface IUserAgent Inherits IAgent
  attributes:
  - type: SuperOffice.CRM.Services.Reflection.AgentAttribute
    ctor: SuperOffice.CRM.Services.Reflection.AgentAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: User Agent
    - type: System.String
      value: Interface for the User Agent. User administration
- uid: SuperOffice.CRM.Services.IUserAgent.CreateDefaultRoleEntityAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.CreateDefaultRoleEntityAsync(System.Threading.CancellationToken)
  id: CreateDefaultRoleEntityAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultRoleEntityAsync(CancellationToken)
  nameWithType: IUserAgent.CreateDefaultRoleEntityAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.CreateDefaultRoleEntityAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Loading default values into a new RoleEntity.

    NetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<RoleEntity> CreateDefaultRoleEntityAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.RoleEntity}
      description: New RoleEntity with default values
    content.vb: Function CreateDefaultRoleEntityAsync(cancellationToken As CancellationToken = Nothing) As Task(Of RoleEntity)
  overload: SuperOffice.CRM.Services.IUserAgent.CreateDefaultRoleEntityAsync*
- uid: SuperOffice.CRM.Services.IUserAgent.SaveRoleEntityAsync(SuperOffice.CRM.Services.RoleEntity,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.SaveRoleEntityAsync(SuperOffice.CRM.Services.RoleEntity,System.Threading.CancellationToken)
  id: SaveRoleEntityAsync(SuperOffice.CRM.Services.RoleEntity,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: SaveRoleEntityAsync(RoleEntity, CancellationToken)
  nameWithType: IUserAgent.SaveRoleEntityAsync(RoleEntity, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.SaveRoleEntityAsync(SuperOffice.CRM.Services.RoleEntity, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Updates the existing RoleEntity or creates a new RoleEntity if the id parameter is empty

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<RoleEntity> SaveRoleEntityAsync(RoleEntity roleEntity, CancellationToken cancellationToken = default)
    parameters:
    - id: roleEntity
      type: SuperOffice.CRM.Services.RoleEntity
      description: The RoleEntity that is saved.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.RoleEntity}
      description: New or updated RoleEntity
    content.vb: Function SaveRoleEntityAsync(roleEntity As RoleEntity, cancellationToken As CancellationToken = Nothing) As Task(Of RoleEntity)
  overload: SuperOffice.CRM.Services.IUserAgent.SaveRoleEntityAsync*
- uid: SuperOffice.CRM.Services.IUserAgent.CreateDefaultServiceAuthAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.CreateDefaultServiceAuthAsync(System.Threading.CancellationToken)
  id: CreateDefaultServiceAuthAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultServiceAuthAsync(CancellationToken)
  nameWithType: IUserAgent.CreateDefaultServiceAuthAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.CreateDefaultServiceAuthAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Loading default values into a new ServiceAuth.

    NetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<ServiceAuth> CreateDefaultServiceAuthAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.ServiceAuth}
      description: New ServiceAuth with default values
    content.vb: Function CreateDefaultServiceAuthAsync(cancellationToken As CancellationToken = Nothing) As Task(Of ServiceAuth)
  overload: SuperOffice.CRM.Services.IUserAgent.CreateDefaultServiceAuthAsync*
- uid: SuperOffice.CRM.Services.IUserAgent.SaveServiceAuthAsync(SuperOffice.CRM.Services.ServiceAuth,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.SaveServiceAuthAsync(SuperOffice.CRM.Services.ServiceAuth,System.Threading.CancellationToken)
  id: SaveServiceAuthAsync(SuperOffice.CRM.Services.ServiceAuth,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: SaveServiceAuthAsync(ServiceAuth, CancellationToken)
  nameWithType: IUserAgent.SaveServiceAuthAsync(ServiceAuth, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.SaveServiceAuthAsync(SuperOffice.CRM.Services.ServiceAuth, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Updates the existing ServiceAuth or creates a new ServiceAuth if the id parameter is empty

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<ServiceAuth> SaveServiceAuthAsync(ServiceAuth serviceAuth, CancellationToken cancellationToken = default)
    parameters:
    - id: serviceAuth
      type: SuperOffice.CRM.Services.ServiceAuth
      description: The ServiceAuth that is saved.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.ServiceAuth}
      description: New or updated ServiceAuth
    content.vb: Function SaveServiceAuthAsync(serviceAuth As ServiceAuth, cancellationToken As CancellationToken = Nothing) As Task(Of ServiceAuth)
  overload: SuperOffice.CRM.Services.IUserAgent.SaveServiceAuthAsync*
- uid: SuperOffice.CRM.Services.IUserAgent.DeleteServiceAuthAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.DeleteServiceAuthAsync(System.Int32,System.Threading.CancellationToken)
  id: DeleteServiceAuthAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: DeleteServiceAuthAsync(int, CancellationToken)
  nameWithType: IUserAgent.DeleteServiceAuthAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.DeleteServiceAuthAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Deletes the ServiceAuth

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task DeleteServiceAuthAsync(int serviceAuthId, CancellationToken cancellationToken = default)
    parameters:
    - id: serviceAuthId
      type: System.Int32
      description: The identity of the ServiceAuth
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function DeleteServiceAuthAsync(serviceAuthId As Integer, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IUserAgent.DeleteServiceAuthAsync*
  nameWithType.vb: IUserAgent.DeleteServiceAuthAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.DeleteServiceAuthAsync(Integer, System.Threading.CancellationToken)
  name.vb: DeleteServiceAuthAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.CreateDefaultUntrustedCredentialsAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.CreateDefaultUntrustedCredentialsAsync(System.Threading.CancellationToken)
  id: CreateDefaultUntrustedCredentialsAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultUntrustedCredentialsAsync(CancellationToken)
  nameWithType: IUserAgent.CreateDefaultUntrustedCredentialsAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.CreateDefaultUntrustedCredentialsAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Loading default values into a new UntrustedCredentials.

    NetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<UntrustedCredentials> CreateDefaultUntrustedCredentialsAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.UntrustedCredentials}
      description: New UntrustedCredentials with default values
    content.vb: Function CreateDefaultUntrustedCredentialsAsync(cancellationToken As CancellationToken = Nothing) As Task(Of UntrustedCredentials)
  overload: SuperOffice.CRM.Services.IUserAgent.CreateDefaultUntrustedCredentialsAsync*
- uid: SuperOffice.CRM.Services.IUserAgent.CreateDefaultUserAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.CreateDefaultUserAsync(System.Threading.CancellationToken)
  id: CreateDefaultUserAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultUserAsync(CancellationToken)
  nameWithType: IUserAgent.CreateDefaultUserAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.CreateDefaultUserAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Loading default values into a new User.

    NetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<User> CreateDefaultUserAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.User}
      description: New User with default values
    content.vb: Function CreateDefaultUserAsync(cancellationToken As CancellationToken = Nothing) As Task(Of User)
  overload: SuperOffice.CRM.Services.IUserAgent.CreateDefaultUserAsync*
- uid: SuperOffice.CRM.Services.IUserAgent.SaveUserAsync(SuperOffice.CRM.Services.User,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.SaveUserAsync(SuperOffice.CRM.Services.User,System.Threading.CancellationToken)
  id: SaveUserAsync(SuperOffice.CRM.Services.User,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: SaveUserAsync(User, CancellationToken)
  nameWithType: IUserAgent.SaveUserAsync(User, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.SaveUserAsync(SuperOffice.CRM.Services.User, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Updates the existing User or creates a new User if the id parameter is empty

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<User> SaveUserAsync(User user, CancellationToken cancellationToken = default)
    parameters:
    - id: user
      type: SuperOffice.CRM.Services.User
      description: The User that is saved.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.User}
      description: New or updated User
    content.vb: Function SaveUserAsync(user As User, cancellationToken As CancellationToken = Nothing) As Task(Of User)
  overload: SuperOffice.CRM.Services.IUserAgent.SaveUserAsync*
- uid: SuperOffice.CRM.Services.IUserAgent.GetUserCommandsAsync(SuperOffice.CRM.Services.User,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.GetUserCommandsAsync(SuperOffice.CRM.Services.User,System.Threading.CancellationToken)
  id: GetUserCommandsAsync(SuperOffice.CRM.Services.User,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: GetUserCommandsAsync(User, CancellationToken)
  nameWithType: IUserAgent.GetUserCommandsAsync(User, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.GetUserCommandsAsync(SuperOffice.CRM.Services.User, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Get registered custom commands for User

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<CustomCommand[]> GetUserCommandsAsync(User user, CancellationToken cancellationToken = default)
    parameters:
    - id: user
      type: SuperOffice.CRM.Services.User
      description: The User
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.CustomCommand[]}
      description: Custom commands for the User
    content.vb: Function GetUserCommandsAsync(user As User, cancellationToken As CancellationToken = Nothing) As Task(Of CustomCommand())
  overload: SuperOffice.CRM.Services.IUserAgent.GetUserCommandsAsync*
- uid: SuperOffice.CRM.Services.IUserAgent.ExecuteUserCommandAsync(System.String,SuperOffice.Data.CommandActionResult,SuperOffice.CRM.Services.User,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.ExecuteUserCommandAsync(System.String,SuperOffice.Data.CommandActionResult,SuperOffice.CRM.Services.User,System.Threading.CancellationToken)
  id: ExecuteUserCommandAsync(System.String,SuperOffice.Data.CommandActionResult,SuperOffice.CRM.Services.User,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: ExecuteUserCommandAsync(string, CommandActionResult, User, CancellationToken)
  nameWithType: IUserAgent.ExecuteUserCommandAsync(string, CommandActionResult, User, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.ExecuteUserCommandAsync(string, SuperOffice.Data.CommandActionResult, SuperOffice.CRM.Services.User, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Executes the custom command for User

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<CommandResult> ExecuteUserCommandAsync(string commandName, CommandActionResult actionResult, User user, CancellationToken cancellationToken = default)
    parameters:
    - id: commandName
      type: System.String
      description: The name of the command to execute.
    - id: actionResult
      type: SuperOffice.Data.CommandActionResult
      description: Result of an UI operation.
    - id: user
      type: SuperOffice.CRM.Services.User
      description: The User to execute commands on.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.CommandResult}
      description: Result of the executed command
    content.vb: Function ExecuteUserCommandAsync(commandName As String, actionResult As CommandActionResult, user As User, cancellationToken As CancellationToken = Nothing) As Task(Of CommandResult)
  overload: SuperOffice.CRM.Services.IUserAgent.ExecuteUserCommandAsync*
  nameWithType.vb: IUserAgent.ExecuteUserCommandAsync(String, CommandActionResult, User, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.ExecuteUserCommandAsync(String, SuperOffice.Data.CommandActionResult, SuperOffice.CRM.Services.User, System.Threading.CancellationToken)
  name.vb: ExecuteUserCommandAsync(String, CommandActionResult, User, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.DeleteUserAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.DeleteUserAsync(System.Int32,System.Threading.CancellationToken)
  id: DeleteUserAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: DeleteUserAsync(int, CancellationToken)
  nameWithType: IUserAgent.DeleteUserAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.DeleteUserAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Deletes the User

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task DeleteUserAsync(int userId, CancellationToken cancellationToken = default)
    parameters:
    - id: userId
      type: System.Int32
      description: The identity of the User
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function DeleteUserAsync(userId As Integer, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IUserAgent.DeleteUserAsync*
  nameWithType.vb: IUserAgent.DeleteUserAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.DeleteUserAsync(Integer, System.Threading.CancellationToken)
  name.vb: DeleteUserAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.GetAccessGatewayInfoAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.GetAccessGatewayInfoAsync(System.Threading.CancellationToken)
  id: GetAccessGatewayInfoAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: GetAccessGatewayInfoAsync(CancellationToken)
  nameWithType: IUserAgent.GetAccessGatewayInfoAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.GetAccessGatewayInfoAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Returns accessgateway registration info

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<AccessGatewayInfo> GetAccessGatewayInfoAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.AccessGatewayInfo}
      description: ''
    content.vb: Function GetAccessGatewayInfoAsync(cancellationToken As CancellationToken = Nothing) As Task(Of AccessGatewayInfo)
  overload: SuperOffice.CRM.Services.IUserAgent.GetAccessGatewayInfoAsync*
- uid: SuperOffice.CRM.Services.IUserAgent.GetOrRegisterAccessGatewayInfoAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.GetOrRegisterAccessGatewayInfoAsync(System.String,System.Threading.CancellationToken)
  id: GetOrRegisterAccessGatewayInfoAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: GetOrRegisterAccessGatewayInfoAsync(string, CancellationToken)
  nameWithType: IUserAgent.GetOrRegisterAccessGatewayInfoAsync(string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.GetOrRegisterAccessGatewayInfoAsync(string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Returns accessgateway registration info and registers a new or adds the url if necessary

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<AccessGatewayInfo> GetOrRegisterAccessGatewayInfoAsync(string redirectUri, CancellationToken cancellationToken = default)
    parameters:
    - id: redirectUri
      type: System.String
      description: This is the registered redirect_uri for AccessGateway OIDC.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.AccessGatewayInfo}
      description: ''
    content.vb: Function GetOrRegisterAccessGatewayInfoAsync(redirectUri As String, cancellationToken As CancellationToken = Nothing) As Task(Of AccessGatewayInfo)
  overload: SuperOffice.CRM.Services.IUserAgent.GetOrRegisterAccessGatewayInfoAsync*
  nameWithType.vb: IUserAgent.GetOrRegisterAccessGatewayInfoAsync(String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.GetOrRegisterAccessGatewayInfoAsync(String, System.Threading.CancellationToken)
  name.vb: GetOrRegisterAccessGatewayInfoAsync(String, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.RegisterWithAccessGatewayAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.RegisterWithAccessGatewayAsync(System.String,System.Threading.CancellationToken)
  id: RegisterWithAccessGatewayAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: RegisterWithAccessGatewayAsync(string, CancellationToken)
  nameWithType: IUserAgent.RegisterWithAccessGatewayAsync(string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.RegisterWithAccessGatewayAsync(string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Registers with access gateway if not already done, otherwise will attempt to update

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<AccessGatewayInfo> RegisterWithAccessGatewayAsync(string redirectUri, CancellationToken cancellationToken = default)
    parameters:
    - id: redirectUri
      type: System.String
      description: This is the registered redirect_uri for AccessGateway OIDC.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.AccessGatewayInfo}
      description: ''
    content.vb: Function RegisterWithAccessGatewayAsync(redirectUri As String, cancellationToken As CancellationToken = Nothing) As Task(Of AccessGatewayInfo)
  overload: SuperOffice.CRM.Services.IUserAgent.RegisterWithAccessGatewayAsync*
  nameWithType.vb: IUserAgent.RegisterWithAccessGatewayAsync(String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.RegisterWithAccessGatewayAsync(String, System.Threading.CancellationToken)
  name.vb: RegisterWithAccessGatewayAsync(String, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.CheckAccessGatewayRegistrationAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.CheckAccessGatewayRegistrationAsync(System.Threading.CancellationToken)
  id: CheckAccessGatewayRegistrationAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: CheckAccessGatewayRegistrationAsync(CancellationToken)
  nameWithType: IUserAgent.CheckAccessGatewayRegistrationAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.CheckAccessGatewayRegistrationAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Checks if AccessGatewayRegistration is valid

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<bool> CheckAccessGatewayRegistrationAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the registration is usable
    content.vb: Function CheckAccessGatewayRegistrationAsync(cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.Services.IUserAgent.CheckAccessGatewayRegistrationAsync*
- uid: SuperOffice.CRM.Services.IUserAgent.SaveCredentialAsync(System.Int32,SuperOffice.CRM.Services.Credential,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.SaveCredentialAsync(System.Int32,SuperOffice.CRM.Services.Credential,System.Threading.CancellationToken)
  id: SaveCredentialAsync(System.Int32,SuperOffice.CRM.Services.Credential,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: SaveCredentialAsync(int, Credential, CancellationToken)
  nameWithType: IUserAgent.SaveCredentialAsync(int, Credential, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.SaveCredentialAsync(int, SuperOffice.CRM.Services.Credential, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Save (adds/replaces) current credential of the same type for the user.

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<bool> SaveCredentialAsync(int userId, Credential credential, CancellationToken cancellationToken = default)
    parameters:
    - id: userId
      type: System.Int32
      description: Primary key of the user (i.e. associate)
    - id: credential
      type: SuperOffice.CRM.Services.Credential
      description: Credentials supported for authentication
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the credential was successfully saved.
    content.vb: Function SaveCredentialAsync(userId As Integer, credential As Credential, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.Services.IUserAgent.SaveCredentialAsync*
  nameWithType.vb: IUserAgent.SaveCredentialAsync(Integer, Credential, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.SaveCredentialAsync(Integer, SuperOffice.CRM.Services.Credential, System.Threading.CancellationToken)
  name.vb: SaveCredentialAsync(Integer, Credential, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.DeleteCredentialAsync(System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.DeleteCredentialAsync(System.Int32,System.String,System.Threading.CancellationToken)
  id: DeleteCredentialAsync(System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: DeleteCredentialAsync(int, string, CancellationToken)
  nameWithType: IUserAgent.DeleteCredentialAsync(int, string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.DeleteCredentialAsync(int, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Remove credential of a specific type for a user

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<bool> DeleteCredentialAsync(int userId, string credentialType, CancellationToken cancellationToken = default)
    parameters:
    - id: userId
      type: System.Int32
      description: Primary key of the user (i.e. associate)
    - id: credentialType
      type: System.String
      description: Type of credentials, corresponding to name of plugin and type in the credentials table
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if credential was sucessfully removed.
    content.vb: Function DeleteCredentialAsync(userId As Integer, credentialType As String, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.Services.IUserAgent.DeleteCredentialAsync*
  nameWithType.vb: IUserAgent.DeleteCredentialAsync(Integer, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.DeleteCredentialAsync(Integer, String, System.Threading.CancellationToken)
  name.vb: DeleteCredentialAsync(Integer, String, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.FindCredentialsGroupsAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.FindCredentialsGroupsAsync(System.String,System.String,System.Threading.CancellationToken)
  id: FindCredentialsGroupsAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: FindCredentialsGroupsAsync(string, string, CancellationToken)
  nameWithType: IUserAgent.FindCredentialsGroupsAsync(string, string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.FindCredentialsGroupsAsync(string, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Get user groups holding users filtered by the searchString.  This method is only relevant if the CredentialType control is of type link.  There will allways be at least one groups even if the underlying provider does not support groups.

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<CredentialsGroup[]> FindCredentialsGroupsAsync(string type, string searchString, CancellationToken cancellationToken = default)
    parameters:
    - id: type
      type: System.String
      description: Type of credentials, corresponding to name of plugin and type in the credentials table.
    - id: searchString
      type: System.String
      description: Partly name of domain group.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.CredentialsGroup[]}
      description: ''
    content.vb: Function FindCredentialsGroupsAsync(type As String, searchString As String, cancellationToken As CancellationToken = Nothing) As Task(Of CredentialsGroup())
  overload: SuperOffice.CRM.Services.IUserAgent.FindCredentialsGroupsAsync*
  nameWithType.vb: IUserAgent.FindCredentialsGroupsAsync(String, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.FindCredentialsGroupsAsync(String, String, System.Threading.CancellationToken)
  name.vb: FindCredentialsGroupsAsync(String, String, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.FindCredentialUsersAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.FindCredentialUsersAsync(System.String,System.String,System.Threading.CancellationToken)
  id: FindCredentialUsersAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: FindCredentialUsersAsync(string, string, CancellationToken)
  nameWithType: IUserAgent.FindCredentialUsersAsync(string, string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.FindCredentialUsersAsync(string, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Find users matching the partial name.

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<CredentialsGroupUsers> FindCredentialUsersAsync(string type, string searchString, CancellationToken cancellationToken = default)
    parameters:
    - id: type
      type: System.String
      description: Type of credentials, corresponding to name of plugin and type in the credentials table.
    - id: searchString
      type: System.String
      description: Partly name of the user group
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.CredentialsGroupUsers}
      description: ''
    content.vb: Function FindCredentialUsersAsync(type As String, searchString As String, cancellationToken As CancellationToken = Nothing) As Task(Of CredentialsGroupUsers)
  overload: SuperOffice.CRM.Services.IUserAgent.FindCredentialUsersAsync*
  nameWithType.vb: IUserAgent.FindCredentialUsersAsync(String, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.FindCredentialUsersAsync(String, String, System.Threading.CancellationToken)
  name.vb: FindCredentialUsersAsync(String, String, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.GetCredentialUsersInGroupAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.GetCredentialUsersInGroupAsync(System.String,System.String,System.Threading.CancellationToken)
  id: GetCredentialUsersInGroupAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: GetCredentialUsersInGroupAsync(string, string, CancellationToken)
  nameWithType: IUserAgent.GetCredentialUsersInGroupAsync(string, string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.GetCredentialUsersInGroupAsync(string, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Get credential users within a user group

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<CredentialsGroupUsers> GetCredentialUsersInGroupAsync(string type, string groupName, CancellationToken cancellationToken = default)
    parameters:
    - id: type
      type: System.String
      description: Type of credentials, corresponding to name of plugin and type in the credentials table.
    - id: groupName
      type: System.String
      description: Name of user group needed to discover the users.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.CredentialsGroupUsers}
      description: ''
    content.vb: Function GetCredentialUsersInGroupAsync(type As String, groupName As String, cancellationToken As CancellationToken = Nothing) As Task(Of CredentialsGroupUsers)
  overload: SuperOffice.CRM.Services.IUserAgent.GetCredentialUsersInGroupAsync*
  nameWithType.vb: IUserAgent.GetCredentialUsersInGroupAsync(String, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.GetCredentialUsersInGroupAsync(String, String, System.Threading.CancellationToken)
  name.vb: GetCredentialUsersInGroupAsync(String, String, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.GetRoleAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.GetRoleAsync(System.Int32,System.Threading.CancellationToken)
  id: GetRoleAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: GetRoleAsync(int, CancellationToken)
  nameWithType: IUserAgent.GetRoleAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.GetRoleAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Gets a Role object.                        

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<Role> GetRoleAsync(int roleId, CancellationToken cancellationToken = default)
    parameters:
    - id: roleId
      type: System.Int32
      description: The identifier of the Role object
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Role}
      description: Role
    content.vb: Function GetRoleAsync(roleId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Role)
  overload: SuperOffice.CRM.Services.IUserAgent.GetRoleAsync*
  nameWithType.vb: IUserAgent.GetRoleAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.GetRoleAsync(Integer, System.Threading.CancellationToken)
  name.vb: GetRoleAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.GetRoleEntityAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.GetRoleEntityAsync(System.Int32,System.Threading.CancellationToken)
  id: GetRoleEntityAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: GetRoleEntityAsync(int, CancellationToken)
  nameWithType: IUserAgent.GetRoleEntityAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.GetRoleEntityAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Gets a RoleEntity object.                        

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<RoleEntity> GetRoleEntityAsync(int roleEntityId, CancellationToken cancellationToken = default)
    parameters:
    - id: roleEntityId
      type: System.Int32
      description: The identifier of the RoleEntity object
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.RoleEntity}
      description: RoleEntity
    content.vb: Function GetRoleEntityAsync(roleEntityId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of RoleEntity)
  overload: SuperOffice.CRM.Services.IUserAgent.GetRoleEntityAsync*
  nameWithType.vb: IUserAgent.GetRoleEntityAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.GetRoleEntityAsync(Integer, System.Threading.CancellationToken)
  name.vb: GetRoleEntityAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.DeleteRoleAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.DeleteRoleAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  id: DeleteRoleAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: DeleteRoleAsync(int, int, CancellationToken)
  nameWithType: IUserAgent.DeleteRoleAsync(int, int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.DeleteRoleAsync(int, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Delete the specified role and move all users associated with the role to the replacingRoleId

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task DeleteRoleAsync(int roleIdToDelete, int replacingRoleId, CancellationToken cancellationToken = default)
    parameters:
    - id: roleIdToDelete
      type: System.Int32
      description: The roleId to delete
    - id: replacingRoleId
      type: System.Int32
      description: The roleId which all associated users will be moved to.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function DeleteRoleAsync(roleIdToDelete As Integer, replacingRoleId As Integer, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IUserAgent.DeleteRoleAsync*
  nameWithType.vb: IUserAgent.DeleteRoleAsync(Integer, Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.DeleteRoleAsync(Integer, Integer, System.Threading.CancellationToken)
  name.vb: DeleteRoleAsync(Integer, Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.GetAllRolesAsync(SuperOffice.Data.RoleType,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.GetAllRolesAsync(SuperOffice.Data.RoleType,System.Threading.CancellationToken)
  id: GetAllRolesAsync(SuperOffice.Data.RoleType,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: GetAllRolesAsync(RoleType, CancellationToken)
  nameWithType: IUserAgent.GetAllRolesAsync(RoleType, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.GetAllRolesAsync(SuperOffice.Data.RoleType, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Get a list of all roles for the given type of role. MDO List name = 'Roles', extra='0' (roleType) 

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<SelectableMDOListItem[]> GetAllRolesAsync(RoleType roleType, CancellationToken cancellationToken = default)
    parameters:
    - id: roleType
      type: SuperOffice.Data.RoleType
      description: Type of role (Employee/External/Anonymous/System)
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.SelectableMDOListItem[]}
      description: FunctionRight items with name and description. Code name for function right is in the extra-info property.
    content.vb: Function GetAllRolesAsync(roleType As RoleType, cancellationToken As CancellationToken = Nothing) As Task(Of SelectableMDOListItem())
  overload: SuperOffice.CRM.Services.IUserAgent.GetAllRolesAsync*
- uid: SuperOffice.CRM.Services.IUserAgent.GetAllFunctionalRightsAsync(SuperOffice.Data.RoleType,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.GetAllFunctionalRightsAsync(SuperOffice.Data.RoleType,System.Threading.CancellationToken)
  id: GetAllFunctionalRightsAsync(SuperOffice.Data.RoleType,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: GetAllFunctionalRightsAsync(RoleType, CancellationToken)
  nameWithType: IUserAgent.GetAllFunctionalRightsAsync(RoleType, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.GetAllFunctionalRightsAsync(SuperOffice.Data.RoleType, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Get a list of all functional rights for the given type of role. MDO List name = 'FunctionRights', extra='roleType=0' 

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<SelectableMDOListItem[]> GetAllFunctionalRightsAsync(RoleType roleType, CancellationToken cancellationToken = default)
    parameters:
    - id: roleType
      type: SuperOffice.Data.RoleType
      description: Type of role (Employee/External/Anonymous/System)
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.SelectableMDOListItem[]}
      description: FunctionRight items with name and description. Code name for function right is in the extra-info property.
    content.vb: Function GetAllFunctionalRightsAsync(roleType As RoleType, cancellationToken As CancellationToken = Nothing) As Task(Of SelectableMDOListItem())
  overload: SuperOffice.CRM.Services.IUserAgent.GetAllFunctionalRightsAsync*
- uid: SuperOffice.CRM.Services.IUserAgent.GetFunctionalRightsAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.GetFunctionalRightsAsync(System.Int32,System.Threading.CancellationToken)
  id: GetFunctionalRightsAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: GetFunctionalRightsAsync(int, CancellationToken)
  nameWithType: IUserAgent.GetFunctionalRightsAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.GetFunctionalRightsAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Get all functional rights for the given role. Functional rights not set on the role are not included. MDO List name = 'FunctionRights', extra='role=123'

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<SelectableMDOListItem[]> GetFunctionalRightsAsync(int roleId, CancellationToken cancellationToken = default)
    parameters:
    - id: roleId
      type: System.Int32
      description: The role id to get the functional rights for.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.SelectableMDOListItem[]}
      description: FunctionRight items with name and description. Code name for function right is in the extra-info property.
    content.vb: Function GetFunctionalRightsAsync(roleId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of SelectableMDOListItem())
  overload: SuperOffice.CRM.Services.IUserAgent.GetFunctionalRightsAsync*
  nameWithType.vb: IUserAgent.GetFunctionalRightsAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.GetFunctionalRightsAsync(Integer, System.Threading.CancellationToken)
  name.vb: GetFunctionalRightsAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.SetFunctionalRightsAsync(System.Int32,System.Int32[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.SetFunctionalRightsAsync(System.Int32,System.Int32[],System.Threading.CancellationToken)
  id: SetFunctionalRightsAsync(System.Int32,System.Int32[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: SetFunctionalRightsAsync(int, int[], CancellationToken)
  nameWithType: IUserAgent.SetFunctionalRightsAsync(int, int[], CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.SetFunctionalRightsAsync(int, int[], System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Set all functional rights for the given role. Functional rights not specified here will be removed from the role. 

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task SetFunctionalRightsAsync(int roleId, int[] functionalRightIds, CancellationToken cancellationToken = default)
    parameters:
    - id: roleId
      type: System.Int32
      description: The role id to set the functional rights for
    - id: functionalRightIds
      type: System.Int32[]
      description: An array of functional rights ids to set for this role. Rights not included here are removed from the role.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function SetFunctionalRightsAsync(roleId As Integer, functionalRightIds As Integer(), cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IUserAgent.SetFunctionalRightsAsync*
  nameWithType.vb: IUserAgent.SetFunctionalRightsAsync(Integer, Integer(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.SetFunctionalRightsAsync(Integer, Integer(), System.Threading.CancellationToken)
  name.vb: SetFunctionalRightsAsync(Integer, Integer(), CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.SetDataRightAsync(System.Int32,System.String,SuperOffice.CRM.Services.Util.RoleRelationToOwner,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.SetDataRightAsync(System.Int32,System.String,SuperOffice.CRM.Services.Util.RoleRelationToOwner,System.String,System.Threading.CancellationToken)
  id: SetDataRightAsync(System.Int32,System.String,SuperOffice.CRM.Services.Util.RoleRelationToOwner,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: SetDataRightAsync(int, string, RoleRelationToOwner, string, CancellationToken)
  nameWithType: IUserAgent.SetDataRightAsync(int, string, RoleRelationToOwner, string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.SetDataRightAsync(int, string, SuperOffice.CRM.Services.Util.RoleRelationToOwner, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Set one specific data right at the given position. An exception will be thrown if non existing position is specified.

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task SetDataRightAsync(int roleId, string tableName, RoleRelationToOwner relationToOwner, string dataRightValue, CancellationToken cancellationToken = default)
    parameters:
    - id: roleId
      type: System.Int32
      description: The role id to set the data right for
    - id: tableName
      type: System.String
      description: The name of the entity/table
    - id: relationToOwner
      type: SuperOffice.CRM.Services.Util.RoleRelationToOwner
      description: The id of the relation to owner
    - id: dataRightValue
      type: System.String
      description: The data right value to set at the specified position (CRUD)
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function SetDataRightAsync(roleId As Integer, tableName As String, relationToOwner As RoleRelationToOwner, dataRightValue As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IUserAgent.SetDataRightAsync*
  nameWithType.vb: IUserAgent.SetDataRightAsync(Integer, String, RoleRelationToOwner, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.SetDataRightAsync(Integer, String, SuperOffice.CRM.Services.Util.RoleRelationToOwner, String, System.Threading.CancellationToken)
  name.vb: SetDataRightAsync(Integer, String, RoleRelationToOwner, String, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.GetDataRightAsync(System.Int32,System.String,SuperOffice.CRM.Services.Util.RoleRelationToOwner,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.GetDataRightAsync(System.Int32,System.String,SuperOffice.CRM.Services.Util.RoleRelationToOwner,System.Threading.CancellationToken)
  id: GetDataRightAsync(System.Int32,System.String,SuperOffice.CRM.Services.Util.RoleRelationToOwner,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: GetDataRightAsync(int, string, RoleRelationToOwner, CancellationToken)
  nameWithType: IUserAgent.GetDataRightAsync(int, string, RoleRelationToOwner, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.GetDataRightAsync(int, string, SuperOffice.CRM.Services.Util.RoleRelationToOwner, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Read one specific data right at the given position. An exception will be thrown if non existing position is specified.

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<string> GetDataRightAsync(int roleId, string tableName, RoleRelationToOwner relationToOwner, CancellationToken cancellationToken = default)
    parameters:
    - id: roleId
      type: System.Int32
      description: The role id to set the data right for
    - id: tableName
      type: System.String
      description: The name of the entity/table
    - id: relationToOwner
      type: SuperOffice.CRM.Services.Util.RoleRelationToOwner
      description: The id of the relation to owner
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The data right value at the specified position (C, CR, CRU, or CRUD)
    content.vb: Function GetDataRightAsync(roleId As Integer, tableName As String, relationToOwner As RoleRelationToOwner, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Services.IUserAgent.GetDataRightAsync*
  nameWithType.vb: IUserAgent.GetDataRightAsync(Integer, String, RoleRelationToOwner, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.GetDataRightAsync(Integer, String, SuperOffice.CRM.Services.Util.RoleRelationToOwner, System.Threading.CancellationToken)
  name.vb: GetDataRightAsync(Integer, String, RoleRelationToOwner, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.GetDataRightsAsync(System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.GetDataRightsAsync(System.Int32,System.String,System.Threading.CancellationToken)
  id: GetDataRightsAsync(System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: GetDataRightsAsync(int, string, CancellationToken)
  nameWithType: IUserAgent.GetDataRightsAsync(int, string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.GetDataRightsAsync(int, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Read specific a set of data rights at the given row in the rights matrix. An exception will be thrown if non existing position is specified.

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<StringDictionary> GetDataRightsAsync(int roleId, string tableName, CancellationToken cancellationToken = default)
    parameters:
    - id: roleId
      type: System.Int32
      description: The role id to set the data right for
    - id: tableName
      type: System.String
      description: The name of the entity/table
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.StringDictionary}
      description: The data right values for all the defined relationships (C, CR, CRU, or CRUD)
    content.vb: Function GetDataRightsAsync(roleId As Integer, tableName As String, cancellationToken As CancellationToken = Nothing) As Task(Of StringDictionary)
  overload: SuperOffice.CRM.Services.IUserAgent.GetDataRightsAsync*
  nameWithType.vb: IUserAgent.GetDataRightsAsync(Integer, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.GetDataRightsAsync(Integer, String, System.Threading.CancellationToken)
  name.vb: GetDataRightsAsync(Integer, String, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.CreateDefaultRoleEntityFromTypeAsync(SuperOffice.Data.RoleType,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.CreateDefaultRoleEntityFromTypeAsync(SuperOffice.Data.RoleType,System.Threading.CancellationToken)
  id: CreateDefaultRoleEntityFromTypeAsync(SuperOffice.Data.RoleType,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultRoleEntityFromTypeAsync(RoleType, CancellationToken)
  nameWithType: IUserAgent.CreateDefaultRoleEntityFromTypeAsync(RoleType, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.CreateDefaultRoleEntityFromTypeAsync(SuperOffice.Data.RoleType, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Create a new role entity of the specified role type. The role type cannot be changed after the entity is created.

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<RoleEntity> CreateDefaultRoleEntityFromTypeAsync(RoleType type, CancellationToken cancellationToken = default)
    parameters:
    - id: type
      type: SuperOffice.Data.RoleType
      description: Type of role (Employee/External/Anonymous/System)
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.RoleEntity}
      description: A blank role.
    content.vb: Function CreateDefaultRoleEntityFromTypeAsync(type As RoleType, cancellationToken As CancellationToken = Nothing) As Task(Of RoleEntity)
  overload: SuperOffice.CRM.Services.IUserAgent.CreateDefaultRoleEntityFromTypeAsync*
- uid: SuperOffice.CRM.Services.IUserAgent.FindRolesWithFunctionalRightAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.FindRolesWithFunctionalRightAsync(System.String,System.Threading.CancellationToken)
  id: FindRolesWithFunctionalRightAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: FindRolesWithFunctionalRightAsync(string, CancellationToken)
  nameWithType: IUserAgent.FindRolesWithFunctionalRightAsync(string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.FindRolesWithFunctionalRightAsync(string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Find all roles with a given functional right. The roles matched must contain the specified functional right. 

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<MDOListItem[]> FindRolesWithFunctionalRightAsync(string functionalRightName, CancellationToken cancellationToken = default)
    parameters:
    - id: functionalRightName
      type: System.String
      description: Functional right name to search for
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.MDOListItem[]}
      description: Roles that contains the given functional right
    content.vb: Function FindRolesWithFunctionalRightAsync(functionalRightName As String, cancellationToken As CancellationToken = Nothing) As Task(Of MDOListItem())
  overload: SuperOffice.CRM.Services.IUserAgent.FindRolesWithFunctionalRightAsync*
  nameWithType.vb: IUserAgent.FindRolesWithFunctionalRightAsync(String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.FindRolesWithFunctionalRightAsync(String, System.Threading.CancellationToken)
  name.vb: FindRolesWithFunctionalRightAsync(String, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.FindRolesWithFunctionalRightsAsync(System.String[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.FindRolesWithFunctionalRightsAsync(System.String[],System.Threading.CancellationToken)
  id: FindRolesWithFunctionalRightsAsync(System.String[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: FindRolesWithFunctionalRightsAsync(string[], CancellationToken)
  nameWithType: IUserAgent.FindRolesWithFunctionalRightsAsync(string[], CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.FindRolesWithFunctionalRightsAsync(string[], System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Find all roles with a given set of functional rights. The roles matched must contain one or more of the specified functional rights. 

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<int[]> FindRolesWithFunctionalRightsAsync(string[] functionalRightNames, CancellationToken cancellationToken = default)
    parameters:
    - id: functionalRightNames
      type: System.String[]
      description: An array of functional rights names to search for
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32[]}
      description: Role ids that contains your functional rights
    content.vb: Function FindRolesWithFunctionalRightsAsync(functionalRightNames As String(), cancellationToken As CancellationToken = Nothing) As Task(Of Integer())
  overload: SuperOffice.CRM.Services.IUserAgent.FindRolesWithFunctionalRightsAsync*
  nameWithType.vb: IUserAgent.FindRolesWithFunctionalRightsAsync(String(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.FindRolesWithFunctionalRightsAsync(String(), System.Threading.CancellationToken)
  name.vb: FindRolesWithFunctionalRightsAsync(String(), CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.FindRolesWithoutFunctionalRightsAsync(System.String[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.FindRolesWithoutFunctionalRightsAsync(System.String[],System.Threading.CancellationToken)
  id: FindRolesWithoutFunctionalRightsAsync(System.String[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: FindRolesWithoutFunctionalRightsAsync(string[], CancellationToken)
  nameWithType: IUserAgent.FindRolesWithoutFunctionalRightsAsync(string[], CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.FindRolesWithoutFunctionalRightsAsync(string[], System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Find all roles without a given set of functional rights. The roles matched must not contain any of the specified functional rights. 

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<int[]> FindRolesWithoutFunctionalRightsAsync(string[] functionalRightNames, CancellationToken cancellationToken = default)
    parameters:
    - id: functionalRightNames
      type: System.String[]
      description: An array of functional rights names to search for
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32[]}
      description: Role ids that without your functional rights
    content.vb: Function FindRolesWithoutFunctionalRightsAsync(functionalRightNames As String(), cancellationToken As CancellationToken = Nothing) As Task(Of Integer())
  overload: SuperOffice.CRM.Services.IUserAgent.FindRolesWithoutFunctionalRightsAsync*
  nameWithType.vb: IUserAgent.FindRolesWithoutFunctionalRightsAsync(String(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.FindRolesWithoutFunctionalRightsAsync(String(), System.Threading.CancellationToken)
  name.vb: FindRolesWithoutFunctionalRightsAsync(String(), CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.GetServiceAuthAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.GetServiceAuthAsync(System.Int32,System.Threading.CancellationToken)
  id: GetServiceAuthAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: GetServiceAuthAsync(int, CancellationToken)
  nameWithType: IUserAgent.GetServiceAuthAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.GetServiceAuthAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Gets a ServiceAuth object.                        

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<ServiceAuth> GetServiceAuthAsync(int serviceAuthId, CancellationToken cancellationToken = default)
    parameters:
    - id: serviceAuthId
      type: System.Int32
      description: The identifier of the ServiceAuth object
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.ServiceAuth}
      description: ServiceAuth
    content.vb: Function GetServiceAuthAsync(serviceAuthId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of ServiceAuth)
  overload: SuperOffice.CRM.Services.IUserAgent.GetServiceAuthAsync*
  nameWithType.vb: IUserAgent.GetServiceAuthAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.GetServiceAuthAsync(Integer, System.Threading.CancellationToken)
  name.vb: GetServiceAuthAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.SaveExternalTokensAsync(SuperOffice.CRM.Services.TokenManagementInfo,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.SaveExternalTokensAsync(SuperOffice.CRM.Services.TokenManagementInfo,System.Threading.CancellationToken)
  id: SaveExternalTokensAsync(SuperOffice.CRM.Services.TokenManagementInfo,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: SaveExternalTokensAsync(TokenManagementInfo, CancellationToken)
  nameWithType: IUserAgent.SaveExternalTokensAsync(TokenManagementInfo, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.SaveExternalTokensAsync(SuperOffice.CRM.Services.TokenManagementInfo, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Saves the external tokens to the DB and returns a key that can be used to retrieve them

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<string> SaveExternalTokensAsync(TokenManagementInfo tokenManagementInfo, CancellationToken cancellationToken = default)
    parameters:
    - id: tokenManagementInfo
      type: SuperOffice.CRM.Services.TokenManagementInfo
      description: Token information.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Key that can be used to retrieve the tokens
    content.vb: Function SaveExternalTokensAsync(tokenManagementInfo As TokenManagementInfo, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Services.IUserAgent.SaveExternalTokensAsync*
- uid: SuperOffice.CRM.Services.IUserAgent.DecryptAndSaveExternalTokensAsync(SuperOffice.CRM.Services.TokenManagementInfo,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.DecryptAndSaveExternalTokensAsync(SuperOffice.CRM.Services.TokenManagementInfo,System.Threading.CancellationToken)
  id: DecryptAndSaveExternalTokensAsync(SuperOffice.CRM.Services.TokenManagementInfo,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: DecryptAndSaveExternalTokensAsync(TokenManagementInfo, CancellationToken)
  nameWithType: IUserAgent.DecryptAndSaveExternalTokensAsync(TokenManagementInfo, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.DecryptAndSaveExternalTokensAsync(SuperOffice.CRM.Services.TokenManagementInfo, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    First asks AccessGateway to decrypt the tokens, then saves the external tokens to the DB and returns a key that can be used to retrieve them

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<string> DecryptAndSaveExternalTokensAsync(TokenManagementInfo tokenManagementInfo, CancellationToken cancellationToken = default)
    parameters:
    - id: tokenManagementInfo
      type: SuperOffice.CRM.Services.TokenManagementInfo
      description: Token information.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Key that can be used to retrieve the tokens
    content.vb: Function DecryptAndSaveExternalTokensAsync(tokenManagementInfo As TokenManagementInfo, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Services.IUserAgent.DecryptAndSaveExternalTokensAsync*
- uid: SuperOffice.CRM.Services.IUserAgent.GetExternalTokensAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.GetExternalTokensAsync(System.String,System.Threading.CancellationToken)
  id: GetExternalTokensAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: GetExternalTokensAsync(string, CancellationToken)
  nameWithType: IUserAgent.GetExternalTokensAsync(string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.GetExternalTokensAsync(string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Retrieve the tokens from the DB based on the given key

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<TokenManagementInfo> GetExternalTokensAsync(string key, CancellationToken cancellationToken = default)
    parameters:
    - id: key
      type: System.String
      description: Token retrievel key
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.TokenManagementInfo}
      description: Key to retrieve tokens
    content.vb: Function GetExternalTokensAsync(key As String, cancellationToken As CancellationToken = Nothing) As Task(Of TokenManagementInfo)
  overload: SuperOffice.CRM.Services.IUserAgent.GetExternalTokensAsync*
  nameWithType.vb: IUserAgent.GetExternalTokensAsync(String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.GetExternalTokensAsync(String, System.Threading.CancellationToken)
  name.vb: GetExternalTokensAsync(String, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.GetUserAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.GetUserAsync(System.Int32,System.Threading.CancellationToken)
  id: GetUserAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: GetUserAsync(int, CancellationToken)
  nameWithType: IUserAgent.GetUserAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.GetUserAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Gets a User object.                        

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<User> GetUserAsync(int userId, CancellationToken cancellationToken = default)
    parameters:
    - id: userId
      type: System.Int32
      description: The identifier of the User object
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.User}
      description: User
    content.vb: Function GetUserAsync(userId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of User)
  overload: SuperOffice.CRM.Services.IUserAgent.GetUserAsync*
  nameWithType.vb: IUserAgent.GetUserAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.GetUserAsync(Integer, System.Threading.CancellationToken)
  name.vb: GetUserAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.GetUserFromNameAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.GetUserFromNameAsync(System.String,System.Threading.CancellationToken)
  id: GetUserFromNameAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: GetUserFromNameAsync(string, CancellationToken)
  nameWithType: IUserAgent.GetUserFromNameAsync(string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.GetUserFromNameAsync(string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Get a user, with lookup based on user name.

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<User> GetUserFromNameAsync(string userName, CancellationToken cancellationToken = default)
    parameters:
    - id: userName
      type: System.String
      description: User name of the user to get.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.User}
      description: User retrieved by name
    content.vb: Function GetUserFromNameAsync(userName As String, cancellationToken As CancellationToken = Nothing) As Task(Of User)
  overload: SuperOffice.CRM.Services.IUserAgent.GetUserFromNameAsync*
  nameWithType.vb: IUserAgent.GetUserFromNameAsync(String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.GetUserFromNameAsync(String, System.Threading.CancellationToken)
  name.vb: GetUserFromNameAsync(String, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.SaveUserFromNameAsync(System.String,SuperOffice.CRM.Services.User,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.SaveUserFromNameAsync(System.String,SuperOffice.CRM.Services.User,System.Threading.CancellationToken)
  id: SaveUserFromNameAsync(System.String,SuperOffice.CRM.Services.User,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: SaveUserFromNameAsync(string, User, CancellationToken)
  nameWithType: IUserAgent.SaveUserFromNameAsync(string, User, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.SaveUserFromNameAsync(string, SuperOffice.CRM.Services.User, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Save a user, with lookup based on the user name.

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<User> SaveUserFromNameAsync(string userName, User user, CancellationToken cancellationToken = default)
    parameters:
    - id: userName
      type: System.String
      description: User name of the user to get.
    - id: user
      type: SuperOffice.CRM.Services.User
      description: User object to save.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.User}
      description: User retrieved by name
    content.vb: Function SaveUserFromNameAsync(userName As String, user As User, cancellationToken As CancellationToken = Nothing) As Task(Of User)
  overload: SuperOffice.CRM.Services.IUserAgent.SaveUserFromNameAsync*
  nameWithType.vb: IUserAgent.SaveUserFromNameAsync(String, User, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.SaveUserFromNameAsync(String, SuperOffice.CRM.Services.User, System.Threading.CancellationToken)
  name.vb: SaveUserFromNameAsync(String, User, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.DeleteUserFromNameAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.DeleteUserFromNameAsync(System.String,System.Threading.CancellationToken)
  id: DeleteUserFromNameAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: DeleteUserFromNameAsync(string, CancellationToken)
  nameWithType: IUserAgent.DeleteUserFromNameAsync(string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.DeleteUserFromNameAsync(string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Delete a user, with lookup based on the user name.

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task DeleteUserFromNameAsync(string userName, CancellationToken cancellationToken = default)
    parameters:
    - id: userName
      type: System.String
      description: User name of the user to delete.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Function DeleteUserFromNameAsync(userName As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IUserAgent.DeleteUserFromNameAsync*
  nameWithType.vb: IUserAgent.DeleteUserFromNameAsync(String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.DeleteUserFromNameAsync(String, System.Threading.CancellationToken)
  name.vb: DeleteUserFromNameAsync(String, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.GetCredentialTypesAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.GetCredentialTypesAsync(System.Threading.CancellationToken)
  id: GetCredentialTypesAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: GetCredentialTypesAsync(CancellationToken)
  nameWithType: IUserAgent.GetCredentialTypesAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.GetCredentialTypesAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Get available credential types that can be used for authentication

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<CredentialType[]> GetCredentialTypesAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.CredentialType[]}
      description: Credential types that can be used for authentication
    content.vb: Function GetCredentialTypesAsync(cancellationToken As CancellationToken = Nothing) As Task(Of CredentialType())
  overload: SuperOffice.CRM.Services.IUserAgent.GetCredentialTypesAsync*
- uid: SuperOffice.CRM.Services.IUserAgent.GetCredentialTypesForUserTypeAsync(SuperOffice.License.UserType,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.GetCredentialTypesForUserTypeAsync(SuperOffice.License.UserType,System.Threading.CancellationToken)
  id: GetCredentialTypesForUserTypeAsync(SuperOffice.License.UserType,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: GetCredentialTypesForUserTypeAsync(UserType, CancellationToken)
  nameWithType: IUserAgent.GetCredentialTypesForUserTypeAsync(UserType, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.GetCredentialTypesForUserTypeAsync(SuperOffice.License.UserType, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Get available credential types that can be used for the specified user type.

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<CredentialType[]> GetCredentialTypesForUserTypeAsync(UserType userType, CancellationToken cancellationToken = default)
    parameters:
    - id: userType
      type: SuperOffice.License.UserType
      description: The user type to retrieve credential types for
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.CredentialType[]}
      description: Credential types that can be used for authentication
    content.vb: Function GetCredentialTypesForUserTypeAsync(userType As UserType, cancellationToken As CancellationToken = Nothing) As Task(Of CredentialType())
  overload: SuperOffice.CRM.Services.IUserAgent.GetCredentialTypesForUserTypeAsync*
- uid: SuperOffice.CRM.Services.IUserAgent.SaveUntrustedCredentialsAsync(System.String,SuperOffice.CRM.Services.UntrustedCredentials,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.SaveUntrustedCredentialsAsync(System.String,SuperOffice.CRM.Services.UntrustedCredentials,System.Threading.CancellationToken)
  id: SaveUntrustedCredentialsAsync(System.String,SuperOffice.CRM.Services.UntrustedCredentials,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: SaveUntrustedCredentialsAsync(string, UntrustedCredentials, CancellationToken)
  nameWithType: IUserAgent.SaveUntrustedCredentialsAsync(string, UntrustedCredentials, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.SaveUntrustedCredentialsAsync(string, SuperOffice.CRM.Services.UntrustedCredentials, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Save credentials for authenticated user.

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task SaveUntrustedCredentialsAsync(string type, UntrustedCredentials credentials, CancellationToken cancellationToken = default)
    parameters:
    - id: type
      type: System.String
      description: 'Type of credential(Ex: "imap", "smtp")'
    - id: credentials
      type: SuperOffice.CRM.Services.UntrustedCredentials
      description: Credentials to save.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function SaveUntrustedCredentialsAsync(type As String, credentials As UntrustedCredentials, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IUserAgent.SaveUntrustedCredentialsAsync*
  nameWithType.vb: IUserAgent.SaveUntrustedCredentialsAsync(String, UntrustedCredentials, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.SaveUntrustedCredentialsAsync(String, SuperOffice.CRM.Services.UntrustedCredentials, System.Threading.CancellationToken)
  name.vb: SaveUntrustedCredentialsAsync(String, UntrustedCredentials, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.GetUntrustedCredentialsAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.GetUntrustedCredentialsAsync(System.String,System.Threading.CancellationToken)
  id: GetUntrustedCredentialsAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: GetUntrustedCredentialsAsync(string, CancellationToken)
  nameWithType: IUserAgent.GetUntrustedCredentialsAsync(string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.GetUntrustedCredentialsAsync(string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Get a set of credentials of a specified type for authenticated user.

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<UntrustedCredentials[]> GetUntrustedCredentialsAsync(string type, CancellationToken cancellationToken = default)
    parameters:
    - id: type
      type: System.String
      description: 'Type of credential(Ex: "imap", "smtp").'
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.UntrustedCredentials[]}
      description: Array of credentials of the specified type.
    content.vb: Function GetUntrustedCredentialsAsync(type As String, cancellationToken As CancellationToken = Nothing) As Task(Of UntrustedCredentials())
  overload: SuperOffice.CRM.Services.IUserAgent.GetUntrustedCredentialsAsync*
  nameWithType.vb: IUserAgent.GetUntrustedCredentialsAsync(String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.GetUntrustedCredentialsAsync(String, System.Threading.CancellationToken)
  name.vb: GetUntrustedCredentialsAsync(String, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.GetUntrustedCredentialsForAssociateAsync(System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.GetUntrustedCredentialsForAssociateAsync(System.Int32,System.String,System.Threading.CancellationToken)
  id: GetUntrustedCredentialsForAssociateAsync(System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: GetUntrustedCredentialsForAssociateAsync(int, string, CancellationToken)
  nameWithType: IUserAgent.GetUntrustedCredentialsForAssociateAsync(int, string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.GetUntrustedCredentialsForAssociateAsync(int, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Get a set of credentials of a specified type for a specified user. SecretValue is only populated for authenticated user, and system users.

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<UntrustedCredentials[]> GetUntrustedCredentialsForAssociateAsync(int associateId, string type, CancellationToken cancellationToken = default)
    parameters:
    - id: associateId
      type: System.Int32
      description: Id of user to retrieve credentials for.
    - id: type
      type: System.String
      description: 'Type of credential(Ex: "imap", "smtp").'
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.UntrustedCredentials[]}
      description: Array of credentials of the specified type.
    content.vb: Function GetUntrustedCredentialsForAssociateAsync(associateId As Integer, type As String, cancellationToken As CancellationToken = Nothing) As Task(Of UntrustedCredentials())
  overload: SuperOffice.CRM.Services.IUserAgent.GetUntrustedCredentialsForAssociateAsync*
  nameWithType.vb: IUserAgent.GetUntrustedCredentialsForAssociateAsync(Integer, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.GetUntrustedCredentialsForAssociateAsync(Integer, String, System.Threading.CancellationToken)
  name.vb: GetUntrustedCredentialsForAssociateAsync(Integer, String, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.SaveUntrustedCredentialsForAssociateAsync(System.Int32,System.String,SuperOffice.CRM.Services.UntrustedCredentials,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.SaveUntrustedCredentialsForAssociateAsync(System.Int32,System.String,SuperOffice.CRM.Services.UntrustedCredentials,System.Threading.CancellationToken)
  id: SaveUntrustedCredentialsForAssociateAsync(System.Int32,System.String,SuperOffice.CRM.Services.UntrustedCredentials,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: SaveUntrustedCredentialsForAssociateAsync(int, string, UntrustedCredentials, CancellationToken)
  nameWithType: IUserAgent.SaveUntrustedCredentialsForAssociateAsync(int, string, UntrustedCredentials, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.SaveUntrustedCredentialsForAssociateAsync(int, string, SuperOffice.CRM.Services.UntrustedCredentials, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Save credentials for a specified user.

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task SaveUntrustedCredentialsForAssociateAsync(int associateId, string type, UntrustedCredentials credentials, CancellationToken cancellationToken = default)
    parameters:
    - id: associateId
      type: System.Int32
      description: Id of user to save credentials for.
    - id: type
      type: System.String
      description: 'Type of credential(Ex: "imap", "smtp")'
    - id: credentials
      type: SuperOffice.CRM.Services.UntrustedCredentials
      description: Credentials to save.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function SaveUntrustedCredentialsForAssociateAsync(associateId As Integer, type As String, credentials As UntrustedCredentials, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IUserAgent.SaveUntrustedCredentialsForAssociateAsync*
  nameWithType.vb: IUserAgent.SaveUntrustedCredentialsForAssociateAsync(Integer, String, UntrustedCredentials, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.SaveUntrustedCredentialsForAssociateAsync(Integer, String, SuperOffice.CRM.Services.UntrustedCredentials, System.Threading.CancellationToken)
  name.vb: SaveUntrustedCredentialsForAssociateAsync(Integer, String, UntrustedCredentials, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.RemoveUntrustedCredentialsAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.RemoveUntrustedCredentialsAsync(System.String,System.String,System.Threading.CancellationToken)
  id: RemoveUntrustedCredentialsAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: RemoveUntrustedCredentialsAsync(string, string, CancellationToken)
  nameWithType: IUserAgent.RemoveUntrustedCredentialsAsync(string, string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.RemoveUntrustedCredentialsAsync(string, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Remove a credentials entry for authenticated user.

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task RemoveUntrustedCredentialsAsync(string type, string publicValue, CancellationToken cancellationToken = default)
    parameters:
    - id: type
      type: System.String
      description: 'Type of credential(Ex: "imap", "smtp")'
    - id: publicValue
      type: System.String
      description: PublicValue field of credentials to remove.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function RemoveUntrustedCredentialsAsync(type As String, publicValue As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IUserAgent.RemoveUntrustedCredentialsAsync*
  nameWithType.vb: IUserAgent.RemoveUntrustedCredentialsAsync(String, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.RemoveUntrustedCredentialsAsync(String, String, System.Threading.CancellationToken)
  name.vb: RemoveUntrustedCredentialsAsync(String, String, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.RemoveUntrustedCredentialsForAssociateAsync(System.Int32,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.RemoveUntrustedCredentialsForAssociateAsync(System.Int32,System.String,System.String,System.Threading.CancellationToken)
  id: RemoveUntrustedCredentialsForAssociateAsync(System.Int32,System.String,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: RemoveUntrustedCredentialsForAssociateAsync(int, string, string, CancellationToken)
  nameWithType: IUserAgent.RemoveUntrustedCredentialsForAssociateAsync(int, string, string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.RemoveUntrustedCredentialsForAssociateAsync(int, string, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Remove a credentials entry for a specified user.

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task RemoveUntrustedCredentialsForAssociateAsync(int associateId, string type, string publicValue, CancellationToken cancellationToken = default)
    parameters:
    - id: associateId
      type: System.Int32
      description: Id of user to remove credentials for.
    - id: type
      type: System.String
      description: 'Type of credential(Ex: "imap", "smtp")'
    - id: publicValue
      type: System.String
      description: PublicValue field of credentials to remove.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function RemoveUntrustedCredentialsForAssociateAsync(associateId As Integer, type As String, publicValue As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IUserAgent.RemoveUntrustedCredentialsForAssociateAsync*
  nameWithType.vb: IUserAgent.RemoveUntrustedCredentialsForAssociateAsync(Integer, String, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.RemoveUntrustedCredentialsForAssociateAsync(Integer, String, String, System.Threading.CancellationToken)
  name.vb: RemoveUntrustedCredentialsForAssociateAsync(Integer, String, String, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.CreateExternalUserAsync(System.Int32,System.String,System.String,System.Int32,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.CreateExternalUserAsync(System.Int32,System.String,System.String,System.Int32,System.Boolean,System.Threading.CancellationToken)
  id: CreateExternalUserAsync(System.Int32,System.String,System.String,System.Int32,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: CreateExternalUserAsync(int, string, string, int, bool, CancellationToken)
  nameWithType: IUserAgent.CreateExternalUserAsync(int, string, string, int, bool, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.CreateExternalUserAsync(int, string, string, int, bool, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Creates an associate of type external user.

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<int> CreateExternalUserAsync(int personId, string userName, string password, int roleId, bool isActive, CancellationToken cancellationToken = default)
    parameters:
    - id: personId
      type: System.Int32
      description: The personId to create an external user for.
    - id: userName
      type: System.String
      description: Login username.
    - id: password
      type: System.String
      description: Login password.
    - id: roleId
      type: System.Int32
      description: Id of role for the external user. The role must be a role of type external users.
    - id: isActive
      type: System.Boolean
      description: Set isActive to true to enable the external user to log in.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: Returns the created associateId.
    content.vb: Function CreateExternalUserAsync(personId As Integer, userName As String, password As String, roleId As Integer, isActive As Boolean, cancellationToken As CancellationToken = Nothing) As Task(Of Integer)
  overload: SuperOffice.CRM.Services.IUserAgent.CreateExternalUserAsync*
  nameWithType.vb: IUserAgent.CreateExternalUserAsync(Integer, String, String, Integer, Boolean, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.CreateExternalUserAsync(Integer, String, String, Integer, Boolean, System.Threading.CancellationToken)
  name.vb: CreateExternalUserAsync(Integer, String, String, Integer, Boolean, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.DeleteExternalUserAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.DeleteExternalUserAsync(System.Int32,System.Threading.CancellationToken)
  id: DeleteExternalUserAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: DeleteExternalUserAsync(int, CancellationToken)
  nameWithType: IUserAgent.DeleteExternalUserAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.DeleteExternalUserAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Deletes an associate of type external user.

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task DeleteExternalUserAsync(int associateId, CancellationToken cancellationToken = default)
    parameters:
    - id: associateId
      type: System.Int32
      description: The associateId to delete the associate entry for.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function DeleteExternalUserAsync(associateId As Integer, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IUserAgent.DeleteExternalUserAsync*
  nameWithType.vb: IUserAgent.DeleteExternalUserAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.DeleteExternalUserAsync(Integer, System.Threading.CancellationToken)
  name.vb: DeleteExternalUserAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.SetExternalUserInfoAsync(System.Int32,System.String,System.String,System.Boolean,System.Int32,SuperOffice.CRM.Services.Util.ExternalUserInfoModification,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.SetExternalUserInfoAsync(System.Int32,System.String,System.String,System.Boolean,System.Int32,SuperOffice.CRM.Services.Util.ExternalUserInfoModification,System.Threading.CancellationToken)
  id: SetExternalUserInfoAsync(System.Int32,System.String,System.String,System.Boolean,System.Int32,SuperOffice.CRM.Services.Util.ExternalUserInfoModification,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: SetExternalUserInfoAsync(int, string, string, bool, int, ExternalUserInfoModification, CancellationToken)
  nameWithType: IUserAgent.SetExternalUserInfoAsync(int, string, string, bool, int, ExternalUserInfoModification, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.SetExternalUserInfoAsync(int, string, string, bool, int, SuperOffice.CRM.Services.Util.ExternalUserInfoModification, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Modifies an external user. Changes external users information according to the flags set in  externalUserInfoModification.

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task SetExternalUserInfoAsync(int associateId, string userName, string password, bool isActive, int roleId, ExternalUserInfoModification externalUserInfoModification, CancellationToken cancellationToken = default)
    parameters:
    - id: associateId
      type: System.Int32
      description: The associateId to alter.
    - id: userName
      type: System.String
      description: Login username.
    - id: password
      type: System.String
      description: Login password.
    - id: isActive
      type: System.Boolean
      description: Set isActive to true to enable the external user to log in.
    - id: roleId
      type: System.Int32
      description: Id of role for the external user. The role must be a role of type external users.
    - id: externalUserInfoModification
      type: SuperOffice.CRM.Services.Util.ExternalUserInfoModification
      description: externalUserInfoModification is a flag describing what to change. &lt;see cref="SuperOffice.CRM.Services.Util.ExternalUserInfoModification"/&gt;.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function SetExternalUserInfoAsync(associateId As Integer, userName As String, password As String, isActive As Boolean, roleId As Integer, externalUserInfoModification As ExternalUserInfoModification, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IUserAgent.SetExternalUserInfoAsync*
  nameWithType.vb: IUserAgent.SetExternalUserInfoAsync(Integer, String, String, Boolean, Integer, ExternalUserInfoModification, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.SetExternalUserInfoAsync(Integer, String, String, Boolean, Integer, SuperOffice.CRM.Services.Util.ExternalUserInfoModification, System.Threading.CancellationToken)
  name.vb: SetExternalUserInfoAsync(Integer, String, String, Boolean, Integer, ExternalUserInfoModification, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.GenerateNewPasswordForExternalUserAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.GenerateNewPasswordForExternalUserAsync(System.String,System.Threading.CancellationToken)
  id: GenerateNewPasswordForExternalUserAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: GenerateNewPasswordForExternalUserAsync(string, CancellationToken)
  nameWithType: IUserAgent.GenerateNewPasswordForExternalUserAsync(string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.GenerateNewPasswordForExternalUserAsync(string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Generates a new password for an external user.

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<string> GenerateNewPasswordForExternalUserAsync(string associateName, CancellationToken cancellationToken = default)
    parameters:
    - id: associateName
      type: System.String
      description: The name of the associate to change the password for.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Returns the generated password.
    content.vb: Function GenerateNewPasswordForExternalUserAsync(associateName As String, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Services.IUserAgent.GenerateNewPasswordForExternalUserAsync*
  nameWithType.vb: IUserAgent.GenerateNewPasswordForExternalUserAsync(String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.GenerateNewPasswordForExternalUserAsync(String, System.Threading.CancellationToken)
  name.vb: GenerateNewPasswordForExternalUserAsync(String, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.CanChangePasswordAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.CanChangePasswordAsync(System.Int32,System.Threading.CancellationToken)
  id: CanChangePasswordAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: CanChangePasswordAsync(int, CancellationToken)
  nameWithType: IUserAgent.CanChangePasswordAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.CanChangePasswordAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Check if the current assoicate can change the password for an associate

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<bool> CanChangePasswordAsync(int associateId, CancellationToken cancellationToken = default)
    parameters:
    - id: associateId
      type: System.Int32
      description: AssociateId of the user to check if password can be changed
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the associate can change the password
    content.vb: Function CanChangePasswordAsync(associateId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.Services.IUserAgent.CanChangePasswordAsync*
  nameWithType.vb: IUserAgent.CanChangePasswordAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.CanChangePasswordAsync(Integer, System.Threading.CancellationToken)
  name.vb: CanChangePasswordAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.GetSupportedChangePasswordTypesAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.GetSupportedChangePasswordTypesAsync(System.Int32,System.Threading.CancellationToken)
  id: GetSupportedChangePasswordTypesAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: GetSupportedChangePasswordTypesAsync(int, CancellationToken)
  nameWithType: IUserAgent.GetSupportedChangePasswordTypesAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.GetSupportedChangePasswordTypesAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Get the different methods the user can use to change password

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<ChangePasswordType[]> GetSupportedChangePasswordTypesAsync(int associateId, CancellationToken cancellationToken = default)
    parameters:
    - id: associateId
      type: System.Int32
      description: AssociateId of the user to check if password can be changed
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.Data.ChangePasswordType[]}
      description: List of types - empty if the user cannot change password in any way
    content.vb: Function GetSupportedChangePasswordTypesAsync(associateId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of ChangePasswordType())
  overload: SuperOffice.CRM.Services.IUserAgent.GetSupportedChangePasswordTypesAsync*
  nameWithType.vb: IUserAgent.GetSupportedChangePasswordTypesAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.GetSupportedChangePasswordTypesAsync(Integer, System.Threading.CancellationToken)
  name.vb: GetSupportedChangePasswordTypesAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.ChangePasswordAsync(System.Int32,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.ChangePasswordAsync(System.Int32,System.String,System.String,System.Threading.CancellationToken)
  id: ChangePasswordAsync(System.Int32,System.String,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: ChangePasswordAsync(int, string, string, CancellationToken)
  nameWithType: IUserAgent.ChangePasswordAsync(int, string, string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.ChangePasswordAsync(int, string, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Change password for a user.

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<bool> ChangePasswordAsync(int associateId, string oldPassword, string newPassword, CancellationToken cancellationToken = default)
    parameters:
    - id: associateId
      type: System.Int32
      description: AssociateId of the user to change password for.
    - id: oldPassword
      type: System.String
      description: The current password of the user.  Administrators can leave this blank to force a new password upon a user.
    - id: newPassword
      type: System.String
      description: The new password for the user
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the password was successfully changed.
    content.vb: Function ChangePasswordAsync(associateId As Integer, oldPassword As String, newPassword As String, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.Services.IUserAgent.ChangePasswordAsync*
  nameWithType.vb: IUserAgent.ChangePasswordAsync(Integer, String, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.ChangePasswordAsync(Integer, String, String, System.Threading.CancellationToken)
  name.vb: ChangePasswordAsync(Integer, String, String, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.SendChangePasswordEMailAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.SendChangePasswordEMailAsync(System.Int32,System.Threading.CancellationToken)
  id: SendChangePasswordEMailAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: SendChangePasswordEMailAsync(int, CancellationToken)
  nameWithType: IUserAgent.SendChangePasswordEMailAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.SendChangePasswordEMailAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Send a change password email to this users registered address.

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<OperationResult> SendChangePasswordEMailAsync(int associateId, CancellationToken cancellationToken = default)
    parameters:
    - id: associateId
      type: System.Int32
      description: AssociateId of the user to change password for.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.OperationResult}
      description: Result - with result flag and optional error reason.
    content.vb: Function SendChangePasswordEMailAsync(associateId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of OperationResult)
  overload: SuperOffice.CRM.Services.IUserAgent.SendChangePasswordEMailAsync*
  nameWithType.vb: IUserAgent.SendChangePasswordEMailAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.SendChangePasswordEMailAsync(Integer, System.Threading.CancellationToken)
  name.vb: SendChangePasswordEMailAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.GetUserFromPersonIdAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.GetUserFromPersonIdAsync(System.Int32,System.Threading.CancellationToken)
  id: GetUserFromPersonIdAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: GetUserFromPersonIdAsync(int, CancellationToken)
  nameWithType: IUserAgent.GetUserFromPersonIdAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.GetUserFromPersonIdAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Returns the user associated with the supplied person id

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<User[]> GetUserFromPersonIdAsync(int personId, CancellationToken cancellationToken = default)
    parameters:
    - id: personId
      type: System.Int32
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.User[]}
      description: ''
    content.vb: Function GetUserFromPersonIdAsync(personId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of User())
  overload: SuperOffice.CRM.Services.IUserAgent.GetUserFromPersonIdAsync*
  nameWithType.vb: IUserAgent.GetUserFromPersonIdAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.GetUserFromPersonIdAsync(Integer, System.Threading.CancellationToken)
  name.vb: GetUserFromPersonIdAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.CreateDefaultUserFromUserTypeAndPersonIdAsync(SuperOffice.License.UserType,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.CreateDefaultUserFromUserTypeAndPersonIdAsync(SuperOffice.License.UserType,System.Int32,System.Threading.CancellationToken)
  id: CreateDefaultUserFromUserTypeAndPersonIdAsync(SuperOffice.License.UserType,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultUserFromUserTypeAndPersonIdAsync(UserType, int, CancellationToken)
  nameWithType: IUserAgent.CreateDefaultUserFromUserTypeAndPersonIdAsync(UserType, int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.CreateDefaultUserFromUserTypeAndPersonIdAsync(SuperOffice.License.UserType, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Create default User providing the associate type and person id.  System and Anonymous users can be created without an exsisting person and permits person id to be 0.

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<User> CreateDefaultUserFromUserTypeAndPersonIdAsync(UserType userType, int personId, CancellationToken cancellationToken = default)
    parameters:
    - id: userType
      type: SuperOffice.License.UserType
      description: Type of associate for the user
    - id: personId
      type: System.Int32
      description: Primary key of the person to become a user.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.User}
      description: New user object with defalt values set.
    content.vb: Function CreateDefaultUserFromUserTypeAndPersonIdAsync(userType As UserType, personId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of User)
  overload: SuperOffice.CRM.Services.IUserAgent.CreateDefaultUserFromUserTypeAndPersonIdAsync*
  nameWithType.vb: IUserAgent.CreateDefaultUserFromUserTypeAndPersonIdAsync(UserType, Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.CreateDefaultUserFromUserTypeAndPersonIdAsync(SuperOffice.License.UserType, Integer, System.Threading.CancellationToken)
  name.vb: CreateDefaultUserFromUserTypeAndPersonIdAsync(UserType, Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.CreateDefaultUserFromUserTypeAsync(SuperOffice.License.UserType,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.CreateDefaultUserFromUserTypeAsync(SuperOffice.License.UserType,System.Threading.CancellationToken)
  id: CreateDefaultUserFromUserTypeAsync(SuperOffice.License.UserType,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultUserFromUserTypeAsync(UserType, CancellationToken)
  nameWithType: IUserAgent.CreateDefaultUserFromUserTypeAsync(UserType, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.CreateDefaultUserFromUserTypeAsync(SuperOffice.License.UserType, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Create default User providing the user type.  Only System and Anonymous users can be created without an exsisting person.  Use CreateDefaultUserFromUserTypeAndPersonId to create internal (i.e. Employee) or external users.

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<User> CreateDefaultUserFromUserTypeAsync(UserType userType, CancellationToken cancellationToken = default)
    parameters:
    - id: userType
      type: SuperOffice.License.UserType
      description: Type of associate for the user.  This can only be System or Anonymous. Use CreateDefaultUserFromUserTypeAndPersonId to create internal (i.e. Employee) or external users.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.User}
      description: New user object with defalt values set.
    content.vb: Function CreateDefaultUserFromUserTypeAsync(userType As UserType, cancellationToken As CancellationToken = Nothing) As Task(Of User)
  overload: SuperOffice.CRM.Services.IUserAgent.CreateDefaultUserFromUserTypeAsync*
- uid: SuperOffice.CRM.Services.IUserAgent.GetUserFromEjUserIdAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.GetUserFromEjUserIdAsync(System.Int32,System.Threading.CancellationToken)
  id: GetUserFromEjUserIdAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: GetUserFromEjUserIdAsync(int, CancellationToken)
  nameWithType: IUserAgent.GetUserFromEjUserIdAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.GetUserFromEjUserIdAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Get user from ejUserId - used for eJournal Legacy Support.

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<User[]> GetUserFromEjUserIdAsync(int ejUserId, CancellationToken cancellationToken = default)
    parameters:
    - id: ejUserId
      type: System.Int32
      description: ejUserId -
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.User[]}
      description: ''
    content.vb: Function GetUserFromEjUserIdAsync(ejUserId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of User())
  overload: SuperOffice.CRM.Services.IUserAgent.GetUserFromEjUserIdAsync*
  nameWithType.vb: IUserAgent.GetUserFromEjUserIdAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.GetUserFromEjUserIdAsync(Integer, System.Threading.CancellationToken)
  name.vb: GetUserFromEjUserIdAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.SetPasswordFromNameAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.SetPasswordFromNameAsync(System.String,System.String,System.Threading.CancellationToken)
  id: SetPasswordFromNameAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: SetPasswordFromNameAsync(string, string, CancellationToken)
  nameWithType: IUserAgent.SetPasswordFromNameAsync(string, string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.SetPasswordFromNameAsync(string, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Change password for a user.

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<bool> SetPasswordFromNameAsync(string associateName, string password, CancellationToken cancellationToken = default)
    parameters:
    - id: associateName
      type: System.String
      description: Username to set password for
    - id: password
      type: System.String
      description: New password
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: Succeeded?
    content.vb: Function SetPasswordFromNameAsync(associateName As String, password As String, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.Services.IUserAgent.SetPasswordFromNameAsync*
  nameWithType.vb: IUserAgent.SetPasswordFromNameAsync(String, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.SetPasswordFromNameAsync(String, String, System.Threading.CancellationToken)
  name.vb: SetPasswordFromNameAsync(String, String, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.SetPasswordAsync(System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.SetPasswordAsync(System.Int32,System.String,System.Threading.CancellationToken)
  id: SetPasswordAsync(System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: SetPasswordAsync(int, string, CancellationToken)
  nameWithType: IUserAgent.SetPasswordAsync(int, string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.SetPasswordAsync(int, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Change password for a user.

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<bool> SetPasswordAsync(int associateId, string password, CancellationToken cancellationToken = default)
    parameters:
    - id: associateId
      type: System.Int32
      description: Id of User to set password for
    - id: password
      type: System.String
      description: New password
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: Succeeded?
    content.vb: Function SetPasswordAsync(associateId As Integer, password As String, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.Services.IUserAgent.SetPasswordAsync*
  nameWithType.vb: IUserAgent.SetPasswordAsync(Integer, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.SetPasswordAsync(Integer, String, System.Threading.CancellationToken)
  name.vb: SetPasswordAsync(Integer, String, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.ChangeOwnPasswordAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.ChangeOwnPasswordAsync(System.String,System.String,System.Threading.CancellationToken)
  id: ChangeOwnPasswordAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: ChangeOwnPasswordAsync(string, string, CancellationToken)
  nameWithType: IUserAgent.ChangeOwnPasswordAsync(string, string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.ChangeOwnPasswordAsync(string, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Change password for a user.

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<bool> ChangeOwnPasswordAsync(string oldPassword, string newPassword, CancellationToken cancellationToken = default)
    parameters:
    - id: oldPassword
      type: System.String
      description: The current password of the user.  Administrators can leave this blank to force a new password upon a user.
    - id: newPassword
      type: System.String
      description: The new password for the user
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the password was successfully changed.
    content.vb: Function ChangeOwnPasswordAsync(oldPassword As String, newPassword As String, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.Services.IUserAgent.ChangeOwnPasswordAsync*
  nameWithType.vb: IUserAgent.ChangeOwnPasswordAsync(String, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.ChangeOwnPasswordAsync(String, String, System.Threading.CancellationToken)
  name.vb: ChangeOwnPasswordAsync(String, String, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.ChangePasswordFromNameAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.ChangePasswordFromNameAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  id: ChangePasswordFromNameAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: ChangePasswordFromNameAsync(string, string, string, CancellationToken)
  nameWithType: IUserAgent.ChangePasswordFromNameAsync(string, string, string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.ChangePasswordFromNameAsync(string, string, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Change password for a user.

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<bool> ChangePasswordFromNameAsync(string associateName, string oldPassword, string newPassword, CancellationToken cancellationToken = default)
    parameters:
    - id: associateName
      type: System.String
      description: Username of the user to change password for.
    - id: oldPassword
      type: System.String
      description: The current password of the user.  Administrators can leave this blank to force a new password upon a user.
    - id: newPassword
      type: System.String
      description: The new password for the user
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the password was successfully changed.
    content.vb: Function ChangePasswordFromNameAsync(associateName As String, oldPassword As String, newPassword As String, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.Services.IUserAgent.ChangePasswordFromNameAsync*
  nameWithType.vb: IUserAgent.ChangePasswordFromNameAsync(String, String, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.ChangePasswordFromNameAsync(String, String, String, System.Threading.CancellationToken)
  name.vb: ChangePasswordFromNameAsync(String, String, String, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.IsUserNameValidAsync(System.Int32,SuperOffice.License.UserType,System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.IsUserNameValidAsync(System.Int32,SuperOffice.License.UserType,System.Int32,System.String,System.Threading.CancellationToken)
  id: IsUserNameValidAsync(System.Int32,SuperOffice.License.UserType,System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: IsUserNameValidAsync(int, UserType, int, string, CancellationToken)
  nameWithType: IUserAgent.IsUserNameValidAsync(int, UserType, int, string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.IsUserNameValidAsync(int, SuperOffice.License.UserType, int, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<bool> IsUserNameValidAsync(int associateId, UserType type, int personId, string userName, CancellationToken cancellationToken = default)
    parameters:
    - id: associateId
      type: System.Int32
      description: ''
    - id: type
      type: SuperOffice.License.UserType
      description: ''
    - id: personId
      type: System.Int32
      description: ''
    - id: userName
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: ''
    content.vb: Function IsUserNameValidAsync(associateId As Integer, type As UserType, personId As Integer, userName As String, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.Services.IUserAgent.IsUserNameValidAsync*
  nameWithType.vb: IUserAgent.IsUserNameValidAsync(Integer, UserType, Integer, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.IsUserNameValidAsync(Integer, SuperOffice.License.UserType, Integer, String, System.Threading.CancellationToken)
  name.vb: IsUserNameValidAsync(Integer, UserType, Integer, String, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.IsPasswordValidAsync(System.Int32,SuperOffice.License.UserType,System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.IsPasswordValidAsync(System.Int32,SuperOffice.License.UserType,System.Int32,System.String,System.Threading.CancellationToken)
  id: IsPasswordValidAsync(System.Int32,SuperOffice.License.UserType,System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: IsPasswordValidAsync(int, UserType, int, string, CancellationToken)
  nameWithType: IUserAgent.IsPasswordValidAsync(int, UserType, int, string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.IsPasswordValidAsync(int, SuperOffice.License.UserType, int, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<bool> IsPasswordValidAsync(int associateId, UserType type, int personId, string password, CancellationToken cancellationToken = default)
    parameters:
    - id: associateId
      type: System.Int32
      description: ''
    - id: type
      type: SuperOffice.License.UserType
      description: ''
    - id: personId
      type: System.Int32
      description: ''
    - id: password
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: ''
    content.vb: Function IsPasswordValidAsync(associateId As Integer, type As UserType, personId As Integer, password As String, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.Services.IUserAgent.IsPasswordValidAsync*
  nameWithType.vb: IUserAgent.IsPasswordValidAsync(Integer, UserType, Integer, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.IsPasswordValidAsync(Integer, SuperOffice.License.UserType, Integer, String, System.Threading.CancellationToken)
  name.vb: IsPasswordValidAsync(Integer, UserType, Integer, String, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.SetGeneratedPasswordAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.SetGeneratedPasswordAsync(System.Int32,System.Threading.CancellationToken)
  id: SetGeneratedPasswordAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: SetGeneratedPasswordAsync(int, CancellationToken)
  nameWithType: IUserAgent.SetGeneratedPasswordAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.SetGeneratedPasswordAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<string> SetGeneratedPasswordAsync(int associateId, CancellationToken cancellationToken = default)
    parameters:
    - id: associateId
      type: System.Int32
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: ''
    content.vb: Function SetGeneratedPasswordAsync(associateId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Services.IUserAgent.SetGeneratedPasswordAsync*
  nameWithType.vb: IUserAgent.SetGeneratedPasswordAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.SetGeneratedPasswordAsync(Integer, System.Threading.CancellationToken)
  name.vb: SetGeneratedPasswordAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.SetGeneratedPasswordFromNameAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.SetGeneratedPasswordFromNameAsync(System.String,System.Threading.CancellationToken)
  id: SetGeneratedPasswordFromNameAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: SetGeneratedPasswordFromNameAsync(string, CancellationToken)
  nameWithType: IUserAgent.SetGeneratedPasswordFromNameAsync(string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.SetGeneratedPasswordFromNameAsync(string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<string> SetGeneratedPasswordFromNameAsync(string associateName, CancellationToken cancellationToken = default)
    parameters:
    - id: associateName
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: ''
    content.vb: Function SetGeneratedPasswordFromNameAsync(associateName As String, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Services.IUserAgent.SetGeneratedPasswordFromNameAsync*
  nameWithType.vb: IUserAgent.SetGeneratedPasswordFromNameAsync(String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.SetGeneratedPasswordFromNameAsync(String, System.Threading.CancellationToken)
  name.vb: SetGeneratedPasswordFromNameAsync(String, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.IsPasswordValidWithReasonAsync(System.Int32,SuperOffice.License.UserType,System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.IsPasswordValidWithReasonAsync(System.Int32,SuperOffice.License.UserType,System.Int32,System.String,System.Threading.CancellationToken)
  id: IsPasswordValidWithReasonAsync(System.Int32,SuperOffice.License.UserType,System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: IsPasswordValidWithReasonAsync(int, UserType, int, string, CancellationToken)
  nameWithType: IUserAgent.IsPasswordValidWithReasonAsync(int, UserType, int, string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.IsPasswordValidWithReasonAsync(int, SuperOffice.License.UserType, int, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<UserValidationResult> IsPasswordValidWithReasonAsync(int associateId, UserType type, int personId, string password, CancellationToken cancellationToken = default)
    parameters:
    - id: associateId
      type: System.Int32
      description: ''
    - id: type
      type: SuperOffice.License.UserType
      description: ''
    - id: personId
      type: System.Int32
      description: ''
    - id: password
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.UserValidationResult}
      description: ''
    content.vb: Function IsPasswordValidWithReasonAsync(associateId As Integer, type As UserType, personId As Integer, password As String, cancellationToken As CancellationToken = Nothing) As Task(Of UserValidationResult)
  overload: SuperOffice.CRM.Services.IUserAgent.IsPasswordValidWithReasonAsync*
  nameWithType.vb: IUserAgent.IsPasswordValidWithReasonAsync(Integer, UserType, Integer, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.IsPasswordValidWithReasonAsync(Integer, SuperOffice.License.UserType, Integer, String, System.Threading.CancellationToken)
  name.vb: IsPasswordValidWithReasonAsync(Integer, UserType, Integer, String, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.IsUserNameValidWithReasonAsync(System.Int32,SuperOffice.License.UserType,System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.IsUserNameValidWithReasonAsync(System.Int32,SuperOffice.License.UserType,System.Int32,System.String,System.Threading.CancellationToken)
  id: IsUserNameValidWithReasonAsync(System.Int32,SuperOffice.License.UserType,System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: IsUserNameValidWithReasonAsync(int, UserType, int, string, CancellationToken)
  nameWithType: IUserAgent.IsUserNameValidWithReasonAsync(int, UserType, int, string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.IsUserNameValidWithReasonAsync(int, SuperOffice.License.UserType, int, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<UserValidationResult> IsUserNameValidWithReasonAsync(int associateId, UserType type, int personId, string userName, CancellationToken cancellationToken = default)
    parameters:
    - id: associateId
      type: System.Int32
      description: ''
    - id: type
      type: SuperOffice.License.UserType
      description: ''
    - id: personId
      type: System.Int32
      description: ''
    - id: userName
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.UserValidationResult}
      description: ''
    content.vb: Function IsUserNameValidWithReasonAsync(associateId As Integer, type As UserType, personId As Integer, userName As String, cancellationToken As CancellationToken = Nothing) As Task(Of UserValidationResult)
  overload: SuperOffice.CRM.Services.IUserAgent.IsUserNameValidWithReasonAsync*
  nameWithType.vb: IUserAgent.IsUserNameValidWithReasonAsync(Integer, UserType, Integer, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.IsUserNameValidWithReasonAsync(Integer, SuperOffice.License.UserType, Integer, String, System.Threading.CancellationToken)
  name.vb: IsUserNameValidWithReasonAsync(Integer, UserType, Integer, String, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.ChangeUserTypeAsync(SuperOffice.CRM.Services.User,SuperOffice.License.UserType,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.ChangeUserTypeAsync(SuperOffice.CRM.Services.User,SuperOffice.License.UserType,System.Threading.CancellationToken)
  id: ChangeUserTypeAsync(SuperOffice.CRM.Services.User,SuperOffice.License.UserType,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: ChangeUserTypeAsync(User, UserType, CancellationToken)
  nameWithType: IUserAgent.ChangeUserTypeAsync(User, UserType, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.ChangeUserTypeAsync(SuperOffice.CRM.Services.User, SuperOffice.License.UserType, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Get a user from the user name.

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<User> ChangeUserTypeAsync(User user, UserType userType, CancellationToken cancellationToken = default)
    parameters:
    - id: user
      type: SuperOffice.CRM.Services.User
      description: User name of the user to get.
    - id: userType
      type: SuperOffice.License.UserType
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.User}
      description: User retrieved by name
    content.vb: Function ChangeUserTypeAsync(user As User, userType As UserType, cancellationToken As CancellationToken = Nothing) As Task(Of User)
  overload: SuperOffice.CRM.Services.IUserAgent.ChangeUserTypeAsync*
- uid: SuperOffice.CRM.Services.IUserAgent.CreateDefaultUserFromUserTypeAndCredentialAsync(SuperOffice.License.UserType,System.Int32,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.CreateDefaultUserFromUserTypeAndCredentialAsync(SuperOffice.License.UserType,System.Int32,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: CreateDefaultUserFromUserTypeAndCredentialAsync(SuperOffice.License.UserType,System.Int32,System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultUserFromUserTypeAndCredentialAsync(UserType, int, string, string, string, CancellationToken)
  nameWithType: IUserAgent.CreateDefaultUserFromUserTypeAndCredentialAsync(UserType, int, string, string, string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.CreateDefaultUserFromUserTypeAndCredentialAsync(SuperOffice.License.UserType, int, string, string, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Creates a PersonEntity with default values based on the contactId and credentials.

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<User> CreateDefaultUserFromUserTypeAndCredentialAsync(UserType userType, int contactId, string credentialType, string credentialValue, string credentialDisplayValue, CancellationToken cancellationToken = default)
    parameters:
    - id: userType
      type: SuperOffice.License.UserType
      description: Type of associate for the user
    - id: contactId
      type: System.Int32
      description: Contact id of the person
    - id: credentialType
      type: System.String
      description: Type of credentials, corresponding to name of plugin and type in the credentials table.
    - id: credentialValue
      type: System.String
      description: This is the actuall value of the credentials.  This will typically be the password or teh users SID in active directory
    - id: credentialDisplayValue
      type: System.String
      description: The value displayed to the user. this will typically be the users login name in active directory.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.User}
      description: ''
    content.vb: Function CreateDefaultUserFromUserTypeAndCredentialAsync(userType As UserType, contactId As Integer, credentialType As String, credentialValue As String, credentialDisplayValue As String, cancellationToken As CancellationToken = Nothing) As Task(Of User)
  overload: SuperOffice.CRM.Services.IUserAgent.CreateDefaultUserFromUserTypeAndCredentialAsync*
  nameWithType.vb: IUserAgent.CreateDefaultUserFromUserTypeAndCredentialAsync(UserType, Integer, String, String, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.CreateDefaultUserFromUserTypeAndCredentialAsync(SuperOffice.License.UserType, Integer, String, String, String, System.Threading.CancellationToken)
  name.vb: CreateDefaultUserFromUserTypeAndCredentialAsync(UserType, Integer, String, String, String, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.GetValidUserNameAsync(System.Int32,SuperOffice.License.UserType,System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.GetValidUserNameAsync(System.Int32,SuperOffice.License.UserType,System.Int32,System.String,System.Threading.CancellationToken)
  id: GetValidUserNameAsync(System.Int32,SuperOffice.License.UserType,System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: GetValidUserNameAsync(int, UserType, int, string, CancellationToken)
  nameWithType: IUserAgent.GetValidUserNameAsync(int, UserType, int, string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.GetValidUserNameAsync(int, SuperOffice.License.UserType, int, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<string> GetValidUserNameAsync(int associateId, UserType type, int personId, string userName, CancellationToken cancellationToken = default)
    parameters:
    - id: associateId
      type: System.Int32
      description: ''
    - id: type
      type: SuperOffice.License.UserType
      description: ''
    - id: personId
      type: System.Int32
      description: ''
    - id: userName
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: ''
    content.vb: Function GetValidUserNameAsync(associateId As Integer, type As UserType, personId As Integer, userName As String, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Services.IUserAgent.GetValidUserNameAsync*
  nameWithType.vb: IUserAgent.GetValidUserNameAsync(Integer, UserType, Integer, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.GetValidUserNameAsync(Integer, SuperOffice.License.UserType, Integer, String, System.Threading.CancellationToken)
  name.vb: GetValidUserNameAsync(Integer, UserType, Integer, String, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.RemoveLicensesAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.RemoveLicensesAsync(System.Int32,System.Threading.CancellationToken)
  id: RemoveLicensesAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: RemoveLicensesAsync(int, CancellationToken)
  nameWithType: IUserAgent.RemoveLicensesAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.RemoveLicensesAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Remove all user licenses.

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task RemoveLicensesAsync(int associateId, CancellationToken cancellationToken = default)
    parameters:
    - id: associateId
      type: System.Int32
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function RemoveLicensesAsync(associateId As Integer, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IUserAgent.RemoveLicensesAsync*
  nameWithType.vb: IUserAgent.RemoveLicensesAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.RemoveLicensesAsync(Integer, System.Threading.CancellationToken)
  name.vb: RemoveLicensesAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.MakeRetiredAsync(System.Int32,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.MakeRetiredAsync(System.Int32,System.Boolean,System.Threading.CancellationToken)
  id: MakeRetiredAsync(System.Int32,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: MakeRetiredAsync(int, bool, CancellationToken)
  nameWithType: IUserAgent.MakeRetiredAsync(int, bool, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.MakeRetiredAsync(int, bool, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Retiring a user means to remove all licenses, setting person.retired=1 and associate.deleted=1. Unretiering a user means setting  person.retired=0 and associate.deleted=0

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task MakeRetiredAsync(int associateId, bool retired, CancellationToken cancellationToken = default)
    parameters:
    - id: associateId
      type: System.Int32
      description: ''
    - id: retired
      type: System.Boolean
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function MakeRetiredAsync(associateId As Integer, retired As Boolean, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IUserAgent.MakeRetiredAsync*
  nameWithType.vb: IUserAgent.MakeRetiredAsync(Integer, Boolean, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.MakeRetiredAsync(Integer, Boolean, System.Threading.CancellationToken)
  name.vb: MakeRetiredAsync(Integer, Boolean, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.AddOwnerContactAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.AddOwnerContactAsync(System.Int32,System.Threading.CancellationToken)
  id: AddOwnerContactAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: AddOwnerContactAsync(int, CancellationToken)
  nameWithType: IUserAgent.AddOwnerContactAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.AddOwnerContactAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task AddOwnerContactAsync(int contactId, CancellationToken cancellationToken = default)
    parameters:
    - id: contactId
      type: System.Int32
      description: Id of the contact to add as a owner contact
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function AddOwnerContactAsync(contactId As Integer, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IUserAgent.AddOwnerContactAsync*
  nameWithType.vb: IUserAgent.AddOwnerContactAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.AddOwnerContactAsync(Integer, System.Threading.CancellationToken)
  name.vb: AddOwnerContactAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.RemoveOwnerContactAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.RemoveOwnerContactAsync(System.Int32,System.Threading.CancellationToken)
  id: RemoveOwnerContactAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: RemoveOwnerContactAsync(int, CancellationToken)
  nameWithType: IUserAgent.RemoveOwnerContactAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.RemoveOwnerContactAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Remove a contact from the ownercontactlink table

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task RemoveOwnerContactAsync(int contactId, CancellationToken cancellationToken = default)
    parameters:
    - id: contactId
      type: System.Int32
      description: The id of the contact to remove
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function RemoveOwnerContactAsync(contactId As Integer, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IUserAgent.RemoveOwnerContactAsync*
  nameWithType.vb: IUserAgent.RemoveOwnerContactAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.RemoveOwnerContactAsync(Integer, System.Threading.CancellationToken)
  name.vb: RemoveOwnerContactAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.ResolveUserFromInfoAsync(System.Int32,System.String,System.String[],System.String[],SuperOffice.License.UserType,SuperOffice.CRM.Services.Credential,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.ResolveUserFromInfoAsync(System.Int32,System.String,System.String[],System.String[],SuperOffice.License.UserType,SuperOffice.CRM.Services.Credential,System.Threading.CancellationToken)
  id: ResolveUserFromInfoAsync(System.Int32,System.String,System.String[],System.String[],SuperOffice.License.UserType,SuperOffice.CRM.Services.Credential,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: ResolveUserFromInfoAsync(int, string, string[], string[], UserType, Credential, CancellationToken)
  nameWithType: IUserAgent.ResolveUserFromInfoAsync(int, string, string[], string[], UserType, Credential, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.ResolveUserFromInfoAsync(int, string, string[], string[], SuperOffice.License.UserType, SuperOffice.CRM.Services.Credential, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Get a user from the provided information. If the user or associated person does not exist, it will be created on demand.

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<ResolvedUser> ResolveUserFromInfoAsync(int contactId, string personName, string[] phoneNumbers, string[] emails, UserType userType, Credential credential, CancellationToken cancellationToken = default)
    parameters:
    - id: contactId
      type: System.Int32
      description: The contact Id of the contact which the person belongs to. Cannot be 0.
    - id: personName
      type: System.String
      description: The full name of the person to be resolved. Optional.
    - id: phoneNumbers
      type: System.String[]
      description: Phone numbers registered on the person. Optional.
    - id: emails
      type: System.String[]
      description: Email-addresses registered on the person. Optional.
    - id: userType
      type: SuperOffice.License.UserType
      description: The type of user to look up or create.
    - id: credential
      type: SuperOffice.CRM.Services.Credential
      description: The credentials to be used for the user. Required.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.ResolvedUser}
      description: The results of the resolve-operation.
    content.vb: Function ResolveUserFromInfoAsync(contactId As Integer, personName As String, phoneNumbers As String(), emails As String(), userType As UserType, credential As Credential, cancellationToken As CancellationToken = Nothing) As Task(Of ResolvedUser)
  overload: SuperOffice.CRM.Services.IUserAgent.ResolveUserFromInfoAsync*
  nameWithType.vb: IUserAgent.ResolveUserFromInfoAsync(Integer, String, String(), String(), UserType, Credential, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.ResolveUserFromInfoAsync(Integer, String, String(), String(), SuperOffice.License.UserType, SuperOffice.CRM.Services.Credential, System.Threading.CancellationToken)
  name.vb: ResolveUserFromInfoAsync(Integer, String, String(), String(), UserType, Credential, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.GetAccessTokenAsync(System.String,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.GetAccessTokenAsync(System.String,System.Boolean,System.Threading.CancellationToken)
  id: GetAccessTokenAsync(System.String,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: GetAccessTokenAsync(string, bool, CancellationToken)
  nameWithType: IUserAgent.GetAccessTokenAsync(string, bool, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.GetAccessTokenAsync(string, bool, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Get an access token based on the current user's session.

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<string> GetAccessTokenAsync(string app_token, bool includeCsSession, CancellationToken cancellationToken = default)
    parameters:
    - id: app_token
      type: System.String
      description: Application token to get access on behalf of. Optional.
    - id: includeCsSession
      type: System.Boolean
      description: Initialize CS session for this access token?.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: An access token. "8A:xyz123=="
    content.vb: Function GetAccessTokenAsync(app_token As String, includeCsSession As Boolean, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Services.IUserAgent.GetAccessTokenAsync*
  nameWithType.vb: IUserAgent.GetAccessTokenAsync(String, Boolean, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.GetAccessTokenAsync(String, Boolean, System.Threading.CancellationToken)
  name.vb: GetAccessTokenAsync(String, Boolean, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.GetValidUserNameForNewUserAsync(SuperOffice.CRM.Services.User,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.GetValidUserNameForNewUserAsync(SuperOffice.CRM.Services.User,System.Threading.CancellationToken)
  id: GetValidUserNameForNewUserAsync(SuperOffice.CRM.Services.User,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: GetValidUserNameForNewUserAsync(User, CancellationToken)
  nameWithType: IUserAgent.GetValidUserNameForNewUserAsync(User, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.GetValidUserNameForNewUserAsync(SuperOffice.CRM.Services.User, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Generates a valid username for an unsaved user

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<string> GetValidUserNameForNewUserAsync(User user, CancellationToken cancellationToken = default)
    parameters:
    - id: user
      type: SuperOffice.CRM.Services.User
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: ''
    content.vb: Function GetValidUserNameForNewUserAsync(user As User, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Services.IUserAgent.GetValidUserNameForNewUserAsync*
- uid: SuperOffice.CRM.Services.IUserAgent.GetDefaultAssociateUserNameAsync(SuperOffice.CRM.Services.User,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.GetDefaultAssociateUserNameAsync(SuperOffice.CRM.Services.User,System.Threading.CancellationToken)
  id: GetDefaultAssociateUserNameAsync(SuperOffice.CRM.Services.User,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: GetDefaultAssociateUserNameAsync(User, CancellationToken)
  nameWithType: IUserAgent.GetDefaultAssociateUserNameAsync(User, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.GetDefaultAssociateUserNameAsync(SuperOffice.CRM.Services.User, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Get the default username for a person

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<string> GetDefaultAssociateUserNameAsync(User user, CancellationToken cancellationToken = default)
    parameters:
    - id: user
      type: SuperOffice.CRM.Services.User
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: ''
    content.vb: Function GetDefaultAssociateUserNameAsync(user As User, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Services.IUserAgent.GetDefaultAssociateUserNameAsync*
- uid: SuperOffice.CRM.Services.IUserAgent.IsNickNameUniqueAsync(System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.IsNickNameUniqueAsync(System.Int32,System.String,System.Threading.CancellationToken)
  id: IsNickNameUniqueAsync(System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: IsNickNameUniqueAsync(int, string, CancellationToken)
  nameWithType: IUserAgent.IsNickNameUniqueAsync(int, string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.IsNickNameUniqueAsync(int, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<bool> IsNickNameUniqueAsync(int associateId, string nickName, CancellationToken cancellationToken = default)
    parameters:
    - id: associateId
      type: System.Int32
      description: ''
    - id: nickName
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: ''
    content.vb: Function IsNickNameUniqueAsync(associateId As Integer, nickName As String, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.Services.IUserAgent.IsNickNameUniqueAsync*
  nameWithType.vb: IUserAgent.IsNickNameUniqueAsync(Integer, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.IsNickNameUniqueAsync(Integer, String, System.Threading.CancellationToken)
  name.vb: IsNickNameUniqueAsync(Integer, String, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.ValidateUserAsync(SuperOffice.CRM.Services.User,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.ValidateUserAsync(SuperOffice.CRM.Services.User,System.Threading.CancellationToken)
  id: ValidateUserAsync(SuperOffice.CRM.Services.User,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: ValidateUserAsync(User, CancellationToken)
  nameWithType: IUserAgent.ValidateUserAsync(User, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.ValidateUserAsync(SuperOffice.CRM.Services.User, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Check that entity is ready for saving, return error messages by field.

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<StringDictionary> ValidateUserAsync(User user, CancellationToken cancellationToken = default)
    parameters:
    - id: user
      type: SuperOffice.CRM.Services.User
      description: Entity to be checked for errors.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.StringDictionary}
      description: Error messages tagged by field.
    content.vb: Function ValidateUserAsync(user As User, cancellationToken As CancellationToken = Nothing) As Task(Of StringDictionary)
  overload: SuperOffice.CRM.Services.IUserAgent.ValidateUserAsync*
- uid: SuperOffice.CRM.Services.IUserAgent.GetUserPresenceStatusAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.GetUserPresenceStatusAsync(System.Int32,System.Threading.CancellationToken)
  id: GetUserPresenceStatusAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: GetUserPresenceStatusAsync(int, CancellationToken)
  nameWithType: IUserAgent.GetUserPresenceStatusAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.GetUserPresenceStatusAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Get user presence status

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<UserPresenceStatus> GetUserPresenceStatusAsync(int associateId, CancellationToken cancellationToken = default)
    parameters:
    - id: associateId
      type: System.Int32
      description: AssociateId of user to retrieve status for.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.UserPresenceStatus}
      description: User presence status
    content.vb: Function GetUserPresenceStatusAsync(associateId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of UserPresenceStatus)
  overload: SuperOffice.CRM.Services.IUserAgent.GetUserPresenceStatusAsync*
  nameWithType.vb: IUserAgent.GetUserPresenceStatusAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.GetUserPresenceStatusAsync(Integer, System.Threading.CancellationToken)
  name.vb: GetUserPresenceStatusAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.SetUserPresenceStatusAsync(System.Int32,SuperOffice.CRM.Services.UserPresenceStatus,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.SetUserPresenceStatusAsync(System.Int32,SuperOffice.CRM.Services.UserPresenceStatus,System.Threading.CancellationToken)
  id: SetUserPresenceStatusAsync(System.Int32,SuperOffice.CRM.Services.UserPresenceStatus,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: SetUserPresenceStatusAsync(int, UserPresenceStatus, CancellationToken)
  nameWithType: IUserAgent.SetUserPresenceStatusAsync(int, UserPresenceStatus, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.SetUserPresenceStatusAsync(int, SuperOffice.CRM.Services.UserPresenceStatus, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Set user presence status

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<UserPresenceStatus> SetUserPresenceStatusAsync(int associateId, UserPresenceStatus userPresenceStatus, CancellationToken cancellationToken = default)
    parameters:
    - id: associateId
      type: System.Int32
      description: AssociateId of user to set status for.
    - id: userPresenceStatus
      type: SuperOffice.CRM.Services.UserPresenceStatus
      description: User presence status to set
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.UserPresenceStatus}
      description: User presence status
    content.vb: Function SetUserPresenceStatusAsync(associateId As Integer, userPresenceStatus As UserPresenceStatus, cancellationToken As CancellationToken = Nothing) As Task(Of UserPresenceStatus)
  overload: SuperOffice.CRM.Services.IUserAgent.SetUserPresenceStatusAsync*
  nameWithType.vb: IUserAgent.SetUserPresenceStatusAsync(Integer, UserPresenceStatus, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.SetUserPresenceStatusAsync(Integer, SuperOffice.CRM.Services.UserPresenceStatus, System.Threading.CancellationToken)
  name.vb: SetUserPresenceStatusAsync(Integer, UserPresenceStatus, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.GetUserGroupAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.GetUserGroupAsync(System.Int32,System.Threading.CancellationToken)
  id: GetUserGroupAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: GetUserGroupAsync(int, CancellationToken)
  nameWithType: IUserAgent.GetUserGroupAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.GetUserGroupAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Gets a UserGroup object.                        

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<UserGroup> GetUserGroupAsync(int userGroupId, CancellationToken cancellationToken = default)
    parameters:
    - id: userGroupId
      type: System.Int32
      description: The identifier of the UserGroup object
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.UserGroup}
      description: UserGroup
    content.vb: Function GetUserGroupAsync(userGroupId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of UserGroup)
  overload: SuperOffice.CRM.Services.IUserAgent.GetUserGroupAsync*
  nameWithType.vb: IUserAgent.GetUserGroupAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.GetUserGroupAsync(Integer, System.Threading.CancellationToken)
  name.vb: GetUserGroupAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.SaveUserGroupAsync(SuperOffice.CRM.Services.UserGroup,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.SaveUserGroupAsync(SuperOffice.CRM.Services.UserGroup,System.Threading.CancellationToken)
  id: SaveUserGroupAsync(SuperOffice.CRM.Services.UserGroup,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: SaveUserGroupAsync(UserGroup, CancellationToken)
  nameWithType: IUserAgent.SaveUserGroupAsync(UserGroup, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.SaveUserGroupAsync(SuperOffice.CRM.Services.UserGroup, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Save a user group.  Set UserGroup.Deleted to mark a user group as deleted and invisible in the user interface.

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<UserGroup> SaveUserGroupAsync(UserGroup userGroup, CancellationToken cancellationToken = default)
    parameters:
    - id: userGroup
      type: SuperOffice.CRM.Services.UserGroup
      description: UserGroup to save
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.UserGroup}
      description: UserGroup as saved to the database
    content.vb: Function SaveUserGroupAsync(userGroup As UserGroup, cancellationToken As CancellationToken = Nothing) As Task(Of UserGroup)
  overload: SuperOffice.CRM.Services.IUserAgent.SaveUserGroupAsync*
- uid: SuperOffice.CRM.Services.IUserAgent.GetAllUserGroupsAsync(System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.GetAllUserGroupsAsync(System.Boolean,System.Threading.CancellationToken)
  id: GetAllUserGroupsAsync(System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: GetAllUserGroupsAsync(bool, CancellationToken)
  nameWithType: IUserAgent.GetAllUserGroupsAsync(bool, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.GetAllUserGroupsAsync(bool, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Get all user groups

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<UserGroup[]> GetAllUserGroupsAsync(bool includeDeleted, CancellationToken cancellationToken = default)
    parameters:
    - id: includeDeleted
      type: System.Boolean
      description: Include user groups with Deleted set to true
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.UserGroup[]}
      description: All user groups
    content.vb: Function GetAllUserGroupsAsync(includeDeleted As Boolean, cancellationToken As CancellationToken = Nothing) As Task(Of UserGroup())
  overload: SuperOffice.CRM.Services.IUserAgent.GetAllUserGroupsAsync*
  nameWithType.vb: IUserAgent.GetAllUserGroupsAsync(Boolean, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.GetAllUserGroupsAsync(Boolean, System.Threading.CancellationToken)
  name.vb: GetAllUserGroupsAsync(Boolean, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.CreateUserGroupAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.CreateUserGroupAsync(System.Threading.CancellationToken)
  id: CreateUserGroupAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: CreateUserGroupAsync(CancellationToken)
  nameWithType: IUserAgent.CreateUserGroupAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.CreateUserGroupAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Create UserGroup (Rank is assigned to the highest rank)

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<UserGroup> CreateUserGroupAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.UserGroup}
      description: ''
    content.vb: Function CreateUserGroupAsync(cancellationToken As CancellationToken = Nothing) As Task(Of UserGroup)
  overload: SuperOffice.CRM.Services.IUserAgent.CreateUserGroupAsync*
- uid: SuperOffice.CRM.Services.IUserAgent.DeleteUserGroupAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.DeleteUserGroupAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  id: DeleteUserGroupAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: DeleteUserGroupAsync(int, int, CancellationToken)
  nameWithType: IUserAgent.DeleteUserGroupAsync(int, int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.DeleteUserGroupAsync(int, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Delete a usergroup and move its members to another usergroup

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task DeleteUserGroupAsync(int userGroupToDelete, int userGroupToMoveTo, CancellationToken cancellationToken = default)
    parameters:
    - id: userGroupToDelete
      type: System.Int32
      description: The id of the userGroup to delete
    - id: userGroupToMoveTo
      type: System.Int32
      description: The id of the userGroup to move the members to
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function DeleteUserGroupAsync(userGroupToDelete As Integer, userGroupToMoveTo As Integer, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IUserAgent.DeleteUserGroupAsync*
  nameWithType.vb: IUserAgent.DeleteUserGroupAsync(Integer, Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.DeleteUserGroupAsync(Integer, Integer, System.Threading.CancellationToken)
  name.vb: DeleteUserGroupAsync(Integer, Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.GetUserGroupListAsync(System.Int32[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.GetUserGroupListAsync(System.Int32[],System.Threading.CancellationToken)
  id: GetUserGroupListAsync(System.Int32[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: GetUserGroupListAsync(int[], CancellationToken)
  nameWithType: IUserAgent.GetUserGroupListAsync(int[], CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.GetUserGroupListAsync(int[], System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Gets an array of UserGroup objects.                        

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<UserGroup[]> GetUserGroupListAsync(int[] userGroupIds, CancellationToken cancellationToken = default)
    parameters:
    - id: userGroupIds
      type: System.Int32[]
      description: The identifiers of the UserGroup object
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.UserGroup[]}
      description: Array of UserGroup objects
    content.vb: Function GetUserGroupListAsync(userGroupIds As Integer(), cancellationToken As CancellationToken = Nothing) As Task(Of UserGroup())
  overload: SuperOffice.CRM.Services.IUserAgent.GetUserGroupListAsync*
  nameWithType.vb: IUserAgent.GetUserGroupListAsync(Integer(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.GetUserGroupListAsync(Integer(), System.Threading.CancellationToken)
  name.vb: GetUserGroupListAsync(Integer(), CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.GetUserInfoAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.GetUserInfoAsync(System.Int32,System.Threading.CancellationToken)
  id: GetUserInfoAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: GetUserInfoAsync(int, CancellationToken)
  nameWithType: IUserAgent.GetUserInfoAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.GetUserInfoAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Gets a UserInfo object.                        

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<UserInfo> GetUserInfoAsync(int userInfoId, CancellationToken cancellationToken = default)
    parameters:
    - id: userInfoId
      type: System.Int32
      description: The identifier of the UserInfo object
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.UserInfo}
      description: UserInfo
    content.vb: Function GetUserInfoAsync(userInfoId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of UserInfo)
  overload: SuperOffice.CRM.Services.IUserAgent.GetUserInfoAsync*
  nameWithType.vb: IUserAgent.GetUserInfoAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.GetUserInfoAsync(Integer, System.Threading.CancellationToken)
  name.vb: GetUserInfoAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IUserAgent.GetUserInfoListAsync(System.Int32[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IUserAgent.GetUserInfoListAsync(System.Int32[],System.Threading.CancellationToken)
  id: GetUserInfoListAsync(System.Int32[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IUserAgent
  langs:
  - csharp
  - vb
  name: GetUserInfoListAsync(int[], CancellationToken)
  nameWithType: IUserAgent.GetUserInfoListAsync(int[], CancellationToken)
  fullName: SuperOffice.CRM.Services.IUserAgent.GetUserInfoListAsync(int[], System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Gets an array of UserInfo objects.                        

    <p></p>

    <b>Online Restricted:</b> The User agent is not available in Online by default. User management is not allowed for partner apps.
  example: []
  syntax:
    content: Task<UserInfo[]> GetUserInfoListAsync(int[] userInfoIds, CancellationToken cancellationToken = default)
    parameters:
    - id: userInfoIds
      type: System.Int32[]
      description: The identifiers of the UserInfo object
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.UserInfo[]}
      description: Array of UserInfo objects
    content.vb: Function GetUserInfoListAsync(userInfoIds As Integer(), cancellationToken As CancellationToken = Nothing) As Task(Of UserInfo())
  overload: SuperOffice.CRM.Services.IUserAgent.GetUserInfoListAsync*
  nameWithType.vb: IUserAgent.GetUserInfoListAsync(Integer(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IUserAgent.GetUserInfoListAsync(Integer(), System.Threading.CancellationToken)
  name.vb: GetUserInfoListAsync(Integer(), CancellationToken)
references:
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
- uid: SuperOffice.CRM.Services.IUserAgent.CreateDefaultRoleEntityAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.CreateDefaultRoleEntityAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_CreateDefaultRoleEntityAsync_System_Threading_CancellationToken_
  name: CreateDefaultRoleEntityAsync
  nameWithType: IUserAgent.CreateDefaultRoleEntityAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.CreateDefaultRoleEntityAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.RoleEntity}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.RoleEntity}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<RoleEntity>
  nameWithType: Task<RoleEntity>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.RoleEntity>
  nameWithType.vb: Task(Of RoleEntity)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.RoleEntity)
  name.vb: Task(Of RoleEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.RoleEntity
    name: RoleEntity
    isExternal: true
    href: SuperOffice.CRM.Services.RoleEntity.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.RoleEntity
    name: RoleEntity
    isExternal: true
    href: SuperOffice.CRM.Services.RoleEntity.html
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: SuperOffice.CRM.Services.IUserAgent.SaveRoleEntityAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.SaveRoleEntityAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_SaveRoleEntityAsync_SuperOffice_CRM_Services_RoleEntity_System_Threading_CancellationToken_
  name: SaveRoleEntityAsync
  nameWithType: IUserAgent.SaveRoleEntityAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.SaveRoleEntityAsync
- uid: SuperOffice.CRM.Services.RoleEntity
  commentId: T:SuperOffice.CRM.Services.RoleEntity
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.RoleEntity.html
  name: RoleEntity
  nameWithType: RoleEntity
  fullName: SuperOffice.CRM.Services.RoleEntity
- uid: SuperOffice.CRM.Services.IUserAgent.CreateDefaultServiceAuthAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.CreateDefaultServiceAuthAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_CreateDefaultServiceAuthAsync_System_Threading_CancellationToken_
  name: CreateDefaultServiceAuthAsync
  nameWithType: IUserAgent.CreateDefaultServiceAuthAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.CreateDefaultServiceAuthAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.ServiceAuth}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.ServiceAuth}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ServiceAuth>
  nameWithType: Task<ServiceAuth>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.ServiceAuth>
  nameWithType.vb: Task(Of ServiceAuth)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.ServiceAuth)
  name.vb: Task(Of ServiceAuth)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.ServiceAuth
    name: ServiceAuth
    isExternal: true
    href: SuperOffice.CRM.Services.ServiceAuth.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.ServiceAuth
    name: ServiceAuth
    isExternal: true
    href: SuperOffice.CRM.Services.ServiceAuth.html
  - name: )
- uid: SuperOffice.CRM.Services.IUserAgent.SaveServiceAuthAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.SaveServiceAuthAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_SaveServiceAuthAsync_SuperOffice_CRM_Services_ServiceAuth_System_Threading_CancellationToken_
  name: SaveServiceAuthAsync
  nameWithType: IUserAgent.SaveServiceAuthAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.SaveServiceAuthAsync
- uid: SuperOffice.CRM.Services.ServiceAuth
  commentId: T:SuperOffice.CRM.Services.ServiceAuth
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.ServiceAuth.html
  name: ServiceAuth
  nameWithType: ServiceAuth
  fullName: SuperOffice.CRM.Services.ServiceAuth
- uid: SuperOffice.CRM.Services.IUserAgent.DeleteServiceAuthAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.DeleteServiceAuthAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_DeleteServiceAuthAsync_System_Int32_System_Threading_CancellationToken_
  name: DeleteServiceAuthAsync
  nameWithType: IUserAgent.DeleteServiceAuthAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.DeleteServiceAuthAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Services.IUserAgent.CreateDefaultUntrustedCredentialsAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.CreateDefaultUntrustedCredentialsAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_CreateDefaultUntrustedCredentialsAsync_System_Threading_CancellationToken_
  name: CreateDefaultUntrustedCredentialsAsync
  nameWithType: IUserAgent.CreateDefaultUntrustedCredentialsAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.CreateDefaultUntrustedCredentialsAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.UntrustedCredentials}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.UntrustedCredentials}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<UntrustedCredentials>
  nameWithType: Task<UntrustedCredentials>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.UntrustedCredentials>
  nameWithType.vb: Task(Of UntrustedCredentials)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.UntrustedCredentials)
  name.vb: Task(Of UntrustedCredentials)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.UntrustedCredentials
    name: UntrustedCredentials
    isExternal: true
    href: SuperOffice.CRM.Services.UntrustedCredentials.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.UntrustedCredentials
    name: UntrustedCredentials
    isExternal: true
    href: SuperOffice.CRM.Services.UntrustedCredentials.html
  - name: )
- uid: SuperOffice.CRM.Services.IUserAgent.CreateDefaultUserAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.CreateDefaultUserAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_CreateDefaultUserAsync_System_Threading_CancellationToken_
  name: CreateDefaultUserAsync
  nameWithType: IUserAgent.CreateDefaultUserAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.CreateDefaultUserAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.User}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.User}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<User>
  nameWithType: Task<User>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.User>
  nameWithType.vb: Task(Of User)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.User)
  name.vb: Task(Of User)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.User
    name: User
    isExternal: true
    href: SuperOffice.CRM.Services.User.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.User
    name: User
    isExternal: true
    href: SuperOffice.CRM.Services.User.html
  - name: )
- uid: SuperOffice.CRM.Services.IUserAgent.SaveUserAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.SaveUserAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_SaveUserAsync_SuperOffice_CRM_Services_User_System_Threading_CancellationToken_
  name: SaveUserAsync
  nameWithType: IUserAgent.SaveUserAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.SaveUserAsync
- uid: SuperOffice.CRM.Services.User
  commentId: T:SuperOffice.CRM.Services.User
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.User.html
  name: User
  nameWithType: User
  fullName: SuperOffice.CRM.Services.User
- uid: SuperOffice.CRM.Services.IUserAgent.GetUserCommandsAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.GetUserCommandsAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_GetUserCommandsAsync_SuperOffice_CRM_Services_User_System_Threading_CancellationToken_
  name: GetUserCommandsAsync
  nameWithType: IUserAgent.GetUserCommandsAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.GetUserCommandsAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.CustomCommand[]}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.CustomCommand[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<CustomCommand[]>
  nameWithType: Task<CustomCommand[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.CustomCommand[]>
  nameWithType.vb: Task(Of CustomCommand())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.CustomCommand())
  name.vb: Task(Of CustomCommand())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.CustomCommand
    name: CustomCommand
    isExternal: true
    href: SuperOffice.CRM.Services.CustomCommand.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.CustomCommand
    name: CustomCommand
    isExternal: true
    href: SuperOffice.CRM.Services.CustomCommand.html
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.CRM.Services.IUserAgent.ExecuteUserCommandAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.ExecuteUserCommandAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_ExecuteUserCommandAsync_System_String_SuperOffice_Data_CommandActionResult_SuperOffice_CRM_Services_User_System_Threading_CancellationToken_
  name: ExecuteUserCommandAsync
  nameWithType: IUserAgent.ExecuteUserCommandAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.ExecuteUserCommandAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SuperOffice.Data.CommandActionResult
  isExternal: true
  name: CommandActionResult
  nameWithType: CommandActionResult
  fullName: SuperOffice.Data.CommandActionResult
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.CommandResult}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.CommandResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<CommandResult>
  nameWithType: Task<CommandResult>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.CommandResult>
  nameWithType.vb: Task(Of CommandResult)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.CommandResult)
  name.vb: Task(Of CommandResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.CommandResult
    name: CommandResult
    isExternal: true
    href: SuperOffice.CRM.Services.CommandResult.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.CommandResult
    name: CommandResult
    isExternal: true
    href: SuperOffice.CRM.Services.CommandResult.html
  - name: )
- uid: SuperOffice.CRM.Services.IUserAgent.DeleteUserAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.DeleteUserAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_DeleteUserAsync_System_Int32_System_Threading_CancellationToken_
  name: DeleteUserAsync
  nameWithType: IUserAgent.DeleteUserAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.DeleteUserAsync
- uid: SuperOffice.CRM.Services.IUserAgent.GetAccessGatewayInfoAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.GetAccessGatewayInfoAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_GetAccessGatewayInfoAsync_System_Threading_CancellationToken_
  name: GetAccessGatewayInfoAsync
  nameWithType: IUserAgent.GetAccessGatewayInfoAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.GetAccessGatewayInfoAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.AccessGatewayInfo}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.AccessGatewayInfo}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<AccessGatewayInfo>
  nameWithType: Task<AccessGatewayInfo>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.AccessGatewayInfo>
  nameWithType.vb: Task(Of AccessGatewayInfo)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.AccessGatewayInfo)
  name.vb: Task(Of AccessGatewayInfo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.AccessGatewayInfo
    name: AccessGatewayInfo
    isExternal: true
    href: SuperOffice.CRM.Services.AccessGatewayInfo.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.AccessGatewayInfo
    name: AccessGatewayInfo
    isExternal: true
    href: SuperOffice.CRM.Services.AccessGatewayInfo.html
  - name: )
- uid: SuperOffice.CRM.Services.IUserAgent.GetOrRegisterAccessGatewayInfoAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.GetOrRegisterAccessGatewayInfoAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_GetOrRegisterAccessGatewayInfoAsync_System_String_System_Threading_CancellationToken_
  name: GetOrRegisterAccessGatewayInfoAsync
  nameWithType: IUserAgent.GetOrRegisterAccessGatewayInfoAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.GetOrRegisterAccessGatewayInfoAsync
- uid: SuperOffice.CRM.Services.IUserAgent.RegisterWithAccessGatewayAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.RegisterWithAccessGatewayAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_RegisterWithAccessGatewayAsync_System_String_System_Threading_CancellationToken_
  name: RegisterWithAccessGatewayAsync
  nameWithType: IUserAgent.RegisterWithAccessGatewayAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.RegisterWithAccessGatewayAsync
- uid: SuperOffice.CRM.Services.IUserAgent.CheckAccessGatewayRegistrationAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.CheckAccessGatewayRegistrationAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_CheckAccessGatewayRegistrationAsync_System_Threading_CancellationToken_
  name: CheckAccessGatewayRegistrationAsync
  nameWithType: IUserAgent.CheckAccessGatewayRegistrationAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.CheckAccessGatewayRegistrationAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: SuperOffice.CRM.Services.IUserAgent.SaveCredentialAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.SaveCredentialAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_SaveCredentialAsync_System_Int32_SuperOffice_CRM_Services_Credential_System_Threading_CancellationToken_
  name: SaveCredentialAsync
  nameWithType: IUserAgent.SaveCredentialAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.SaveCredentialAsync
- uid: SuperOffice.CRM.Services.Credential
  commentId: T:SuperOffice.CRM.Services.Credential
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.Credential.html
  name: Credential
  nameWithType: Credential
  fullName: SuperOffice.CRM.Services.Credential
- uid: SuperOffice.CRM.Services.IUserAgent.DeleteCredentialAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.DeleteCredentialAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_DeleteCredentialAsync_System_Int32_System_String_System_Threading_CancellationToken_
  name: DeleteCredentialAsync
  nameWithType: IUserAgent.DeleteCredentialAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.DeleteCredentialAsync
- uid: SuperOffice.CRM.Services.IUserAgent.FindCredentialsGroupsAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.FindCredentialsGroupsAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_FindCredentialsGroupsAsync_System_String_System_String_System_Threading_CancellationToken_
  name: FindCredentialsGroupsAsync
  nameWithType: IUserAgent.FindCredentialsGroupsAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.FindCredentialsGroupsAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.CredentialsGroup[]}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.CredentialsGroup[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<CredentialsGroup[]>
  nameWithType: Task<CredentialsGroup[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.CredentialsGroup[]>
  nameWithType.vb: Task(Of CredentialsGroup())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.CredentialsGroup())
  name.vb: Task(Of CredentialsGroup())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.CredentialsGroup
    name: CredentialsGroup
    isExternal: true
    href: SuperOffice.CRM.Services.CredentialsGroup.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.CredentialsGroup
    name: CredentialsGroup
    isExternal: true
    href: SuperOffice.CRM.Services.CredentialsGroup.html
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.CRM.Services.IUserAgent.FindCredentialUsersAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.FindCredentialUsersAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_FindCredentialUsersAsync_System_String_System_String_System_Threading_CancellationToken_
  name: FindCredentialUsersAsync
  nameWithType: IUserAgent.FindCredentialUsersAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.FindCredentialUsersAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.CredentialsGroupUsers}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.CredentialsGroupUsers}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<CredentialsGroupUsers>
  nameWithType: Task<CredentialsGroupUsers>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.CredentialsGroupUsers>
  nameWithType.vb: Task(Of CredentialsGroupUsers)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.CredentialsGroupUsers)
  name.vb: Task(Of CredentialsGroupUsers)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.CredentialsGroupUsers
    name: CredentialsGroupUsers
    isExternal: true
    href: SuperOffice.CRM.Services.CredentialsGroupUsers.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.CredentialsGroupUsers
    name: CredentialsGroupUsers
    isExternal: true
    href: SuperOffice.CRM.Services.CredentialsGroupUsers.html
  - name: )
- uid: SuperOffice.CRM.Services.IUserAgent.GetCredentialUsersInGroupAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.GetCredentialUsersInGroupAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_GetCredentialUsersInGroupAsync_System_String_System_String_System_Threading_CancellationToken_
  name: GetCredentialUsersInGroupAsync
  nameWithType: IUserAgent.GetCredentialUsersInGroupAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.GetCredentialUsersInGroupAsync
- uid: SuperOffice.CRM.Services.IUserAgent.GetRoleAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.GetRoleAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_GetRoleAsync_System_Int32_System_Threading_CancellationToken_
  name: GetRoleAsync
  nameWithType: IUserAgent.GetRoleAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.GetRoleAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Role}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.Role}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Role>
  nameWithType: Task<Role>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.Role>
  nameWithType.vb: Task(Of Role)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.Role)
  name.vb: Task(Of Role)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.Role
    name: Role
    isExternal: true
    href: SuperOffice.CRM.Services.Role.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.Role
    name: Role
    isExternal: true
    href: SuperOffice.CRM.Services.Role.html
  - name: )
- uid: SuperOffice.CRM.Services.IUserAgent.GetRoleEntityAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.GetRoleEntityAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_GetRoleEntityAsync_System_Int32_System_Threading_CancellationToken_
  name: GetRoleEntityAsync
  nameWithType: IUserAgent.GetRoleEntityAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.GetRoleEntityAsync
- uid: SuperOffice.CRM.Services.IUserAgent.DeleteRoleAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.DeleteRoleAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_DeleteRoleAsync_System_Int32_System_Int32_System_Threading_CancellationToken_
  name: DeleteRoleAsync
  nameWithType: IUserAgent.DeleteRoleAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.DeleteRoleAsync
- uid: SuperOffice.CRM.Services.IUserAgent.GetAllRolesAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.GetAllRolesAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_GetAllRolesAsync_SuperOffice_Data_RoleType_System_Threading_CancellationToken_
  name: GetAllRolesAsync
  nameWithType: IUserAgent.GetAllRolesAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.GetAllRolesAsync
- uid: SuperOffice.Data.RoleType
  isExternal: true
  name: RoleType
  nameWithType: RoleType
  fullName: SuperOffice.Data.RoleType
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.SelectableMDOListItem[]}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.SelectableMDOListItem[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<SelectableMDOListItem[]>
  nameWithType: Task<SelectableMDOListItem[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.SelectableMDOListItem[]>
  nameWithType.vb: Task(Of SelectableMDOListItem())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.SelectableMDOListItem())
  name.vb: Task(Of SelectableMDOListItem())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.SelectableMDOListItem
    name: SelectableMDOListItem
    isExternal: true
    href: SuperOffice.CRM.Services.SelectableMDOListItem.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.SelectableMDOListItem
    name: SelectableMDOListItem
    isExternal: true
    href: SuperOffice.CRM.Services.SelectableMDOListItem.html
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.CRM.Services.IUserAgent.GetAllFunctionalRightsAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.GetAllFunctionalRightsAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_GetAllFunctionalRightsAsync_SuperOffice_Data_RoleType_System_Threading_CancellationToken_
  name: GetAllFunctionalRightsAsync
  nameWithType: IUserAgent.GetAllFunctionalRightsAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.GetAllFunctionalRightsAsync
- uid: SuperOffice.CRM.Services.IUserAgent.GetFunctionalRightsAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.GetFunctionalRightsAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_GetFunctionalRightsAsync_System_Int32_System_Threading_CancellationToken_
  name: GetFunctionalRightsAsync
  nameWithType: IUserAgent.GetFunctionalRightsAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.GetFunctionalRightsAsync
- uid: SuperOffice.CRM.Services.IUserAgent.SetFunctionalRightsAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.SetFunctionalRightsAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_SetFunctionalRightsAsync_System_Int32_System_Int32___System_Threading_CancellationToken_
  name: SetFunctionalRightsAsync
  nameWithType: IUserAgent.SetFunctionalRightsAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.SetFunctionalRightsAsync
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.IUserAgent.SetDataRightAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.SetDataRightAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_SetDataRightAsync_System_Int32_System_String_SuperOffice_CRM_Services_Util_RoleRelationToOwner_System_String_System_Threading_CancellationToken_
  name: SetDataRightAsync
  nameWithType: IUserAgent.SetDataRightAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.SetDataRightAsync
- uid: SuperOffice.CRM.Services.Util.RoleRelationToOwner
  commentId: T:SuperOffice.CRM.Services.Util.RoleRelationToOwner
  parent: SuperOffice.CRM.Services.Util
  isExternal: true
  href: SuperOffice.CRM.Services.Util.RoleRelationToOwner.html
  name: RoleRelationToOwner
  nameWithType: RoleRelationToOwner
  fullName: SuperOffice.CRM.Services.Util.RoleRelationToOwner
- uid: SuperOffice.CRM.Services.Util
  commentId: N:SuperOffice.CRM.Services.Util
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Services.Util
  nameWithType: SuperOffice.CRM.Services.Util
  fullName: SuperOffice.CRM.Services.Util
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
  - name: .
  - uid: SuperOffice.CRM.Services.Util
    name: Util
    isExternal: true
    href: SuperOffice.CRM.Services.Util.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
  - name: .
  - uid: SuperOffice.CRM.Services.Util
    name: Util
    isExternal: true
    href: SuperOffice.CRM.Services.Util.html
- uid: SuperOffice.CRM.Services.IUserAgent.GetDataRightAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.GetDataRightAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_GetDataRightAsync_System_Int32_System_String_SuperOffice_CRM_Services_Util_RoleRelationToOwner_System_Threading_CancellationToken_
  name: GetDataRightAsync
  nameWithType: IUserAgent.GetDataRightAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.GetDataRightAsync
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<string>
  nameWithType: Task<string>
  fullName: System.Threading.Tasks.Task<string>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SuperOffice.CRM.Services.IUserAgent.GetDataRightsAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.GetDataRightsAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_GetDataRightsAsync_System_Int32_System_String_System_Threading_CancellationToken_
  name: GetDataRightsAsync
  nameWithType: IUserAgent.GetDataRightsAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.GetDataRightsAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.StringDictionary}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.StringDictionary}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<StringDictionary>
  nameWithType: Task<StringDictionary>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.StringDictionary>
  nameWithType.vb: Task(Of StringDictionary)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.StringDictionary)
  name.vb: Task(Of StringDictionary)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.StringDictionary
    name: StringDictionary
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.StringDictionary
    name: StringDictionary
    isExternal: true
  - name: )
- uid: SuperOffice.CRM.Services.IUserAgent.CreateDefaultRoleEntityFromTypeAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.CreateDefaultRoleEntityFromTypeAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_CreateDefaultRoleEntityFromTypeAsync_SuperOffice_Data_RoleType_System_Threading_CancellationToken_
  name: CreateDefaultRoleEntityFromTypeAsync
  nameWithType: IUserAgent.CreateDefaultRoleEntityFromTypeAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.CreateDefaultRoleEntityFromTypeAsync
- uid: SuperOffice.CRM.Services.IUserAgent.FindRolesWithFunctionalRightAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.FindRolesWithFunctionalRightAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_FindRolesWithFunctionalRightAsync_System_String_System_Threading_CancellationToken_
  name: FindRolesWithFunctionalRightAsync
  nameWithType: IUserAgent.FindRolesWithFunctionalRightAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.FindRolesWithFunctionalRightAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.MDOListItem[]}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.MDOListItem[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<MDOListItem[]>
  nameWithType: Task<MDOListItem[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.MDOListItem[]>
  nameWithType.vb: Task(Of MDOListItem())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.MDOListItem())
  name.vb: Task(Of MDOListItem())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.MDOListItem
    name: MDOListItem
    isExternal: true
    href: SuperOffice.CRM.Services.MDOListItem.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.MDOListItem
    name: MDOListItem
    isExternal: true
    href: SuperOffice.CRM.Services.MDOListItem.html
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.CRM.Services.IUserAgent.FindRolesWithFunctionalRightsAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.FindRolesWithFunctionalRightsAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_FindRolesWithFunctionalRightsAsync_System_String___System_Threading_CancellationToken_
  name: FindRolesWithFunctionalRightsAsync
  nameWithType: IUserAgent.FindRolesWithFunctionalRightsAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.FindRolesWithFunctionalRightsAsync
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task{System.Int32[]}
  commentId: T:System.Threading.Tasks.Task{System.Int32[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<int[]>
  nameWithType: Task<int[]>
  fullName: System.Threading.Tasks.Task<int[]>
  nameWithType.vb: Task(Of Integer())
  fullName.vb: System.Threading.Tasks.Task(Of Integer())
  name.vb: Task(Of Integer())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.CRM.Services.IUserAgent.FindRolesWithoutFunctionalRightsAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.FindRolesWithoutFunctionalRightsAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_FindRolesWithoutFunctionalRightsAsync_System_String___System_Threading_CancellationToken_
  name: FindRolesWithoutFunctionalRightsAsync
  nameWithType: IUserAgent.FindRolesWithoutFunctionalRightsAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.FindRolesWithoutFunctionalRightsAsync
- uid: SuperOffice.CRM.Services.IUserAgent.GetServiceAuthAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.GetServiceAuthAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_GetServiceAuthAsync_System_Int32_System_Threading_CancellationToken_
  name: GetServiceAuthAsync
  nameWithType: IUserAgent.GetServiceAuthAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.GetServiceAuthAsync
- uid: SuperOffice.CRM.Services.IUserAgent.SaveExternalTokensAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.SaveExternalTokensAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_SaveExternalTokensAsync_SuperOffice_CRM_Services_TokenManagementInfo_System_Threading_CancellationToken_
  name: SaveExternalTokensAsync
  nameWithType: IUserAgent.SaveExternalTokensAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.SaveExternalTokensAsync
- uid: SuperOffice.CRM.Services.TokenManagementInfo
  commentId: T:SuperOffice.CRM.Services.TokenManagementInfo
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.TokenManagementInfo.html
  name: TokenManagementInfo
  nameWithType: TokenManagementInfo
  fullName: SuperOffice.CRM.Services.TokenManagementInfo
- uid: SuperOffice.CRM.Services.IUserAgent.DecryptAndSaveExternalTokensAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.DecryptAndSaveExternalTokensAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_DecryptAndSaveExternalTokensAsync_SuperOffice_CRM_Services_TokenManagementInfo_System_Threading_CancellationToken_
  name: DecryptAndSaveExternalTokensAsync
  nameWithType: IUserAgent.DecryptAndSaveExternalTokensAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.DecryptAndSaveExternalTokensAsync
- uid: SuperOffice.CRM.Services.IUserAgent.GetExternalTokensAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.GetExternalTokensAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_GetExternalTokensAsync_System_String_System_Threading_CancellationToken_
  name: GetExternalTokensAsync
  nameWithType: IUserAgent.GetExternalTokensAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.GetExternalTokensAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.TokenManagementInfo}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.TokenManagementInfo}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TokenManagementInfo>
  nameWithType: Task<TokenManagementInfo>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.TokenManagementInfo>
  nameWithType.vb: Task(Of TokenManagementInfo)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.TokenManagementInfo)
  name.vb: Task(Of TokenManagementInfo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.TokenManagementInfo
    name: TokenManagementInfo
    isExternal: true
    href: SuperOffice.CRM.Services.TokenManagementInfo.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.TokenManagementInfo
    name: TokenManagementInfo
    isExternal: true
    href: SuperOffice.CRM.Services.TokenManagementInfo.html
  - name: )
- uid: SuperOffice.CRM.Services.IUserAgent.GetUserAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.GetUserAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_GetUserAsync_System_Int32_System_Threading_CancellationToken_
  name: GetUserAsync
  nameWithType: IUserAgent.GetUserAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.GetUserAsync
- uid: SuperOffice.CRM.Services.IUserAgent.GetUserFromNameAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.GetUserFromNameAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_GetUserFromNameAsync_System_String_System_Threading_CancellationToken_
  name: GetUserFromNameAsync
  nameWithType: IUserAgent.GetUserFromNameAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.GetUserFromNameAsync
- uid: SuperOffice.CRM.Services.IUserAgent.SaveUserFromNameAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.SaveUserFromNameAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_SaveUserFromNameAsync_System_String_SuperOffice_CRM_Services_User_System_Threading_CancellationToken_
  name: SaveUserFromNameAsync
  nameWithType: IUserAgent.SaveUserFromNameAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.SaveUserFromNameAsync
- uid: SuperOffice.CRM.Services.IUserAgent.DeleteUserFromNameAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.DeleteUserFromNameAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_DeleteUserFromNameAsync_System_String_System_Threading_CancellationToken_
  name: DeleteUserFromNameAsync
  nameWithType: IUserAgent.DeleteUserFromNameAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.DeleteUserFromNameAsync
- uid: SuperOffice.CRM.Services.IUserAgent.GetCredentialTypesAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.GetCredentialTypesAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_GetCredentialTypesAsync_System_Threading_CancellationToken_
  name: GetCredentialTypesAsync
  nameWithType: IUserAgent.GetCredentialTypesAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.GetCredentialTypesAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.CredentialType[]}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.CredentialType[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<CredentialType[]>
  nameWithType: Task<CredentialType[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.CredentialType[]>
  nameWithType.vb: Task(Of CredentialType())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.CredentialType())
  name.vb: Task(Of CredentialType())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.CredentialType
    name: CredentialType
    isExternal: true
    href: SuperOffice.CRM.Services.CredentialType.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.CredentialType
    name: CredentialType
    isExternal: true
    href: SuperOffice.CRM.Services.CredentialType.html
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.CRM.Services.IUserAgent.GetCredentialTypesForUserTypeAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.GetCredentialTypesForUserTypeAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_GetCredentialTypesForUserTypeAsync_SuperOffice_License_UserType_System_Threading_CancellationToken_
  name: GetCredentialTypesForUserTypeAsync
  nameWithType: IUserAgent.GetCredentialTypesForUserTypeAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.GetCredentialTypesForUserTypeAsync
- uid: SuperOffice.License.UserType
  isExternal: true
  name: UserType
  nameWithType: UserType
  fullName: SuperOffice.License.UserType
- uid: SuperOffice.CRM.Services.IUserAgent.SaveUntrustedCredentialsAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.SaveUntrustedCredentialsAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_SaveUntrustedCredentialsAsync_System_String_SuperOffice_CRM_Services_UntrustedCredentials_System_Threading_CancellationToken_
  name: SaveUntrustedCredentialsAsync
  nameWithType: IUserAgent.SaveUntrustedCredentialsAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.SaveUntrustedCredentialsAsync
- uid: SuperOffice.CRM.Services.UntrustedCredentials
  commentId: T:SuperOffice.CRM.Services.UntrustedCredentials
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.UntrustedCredentials.html
  name: UntrustedCredentials
  nameWithType: UntrustedCredentials
  fullName: SuperOffice.CRM.Services.UntrustedCredentials
- uid: SuperOffice.CRM.Services.IUserAgent.GetUntrustedCredentialsAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.GetUntrustedCredentialsAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_GetUntrustedCredentialsAsync_System_String_System_Threading_CancellationToken_
  name: GetUntrustedCredentialsAsync
  nameWithType: IUserAgent.GetUntrustedCredentialsAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.GetUntrustedCredentialsAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.UntrustedCredentials[]}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.UntrustedCredentials[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<UntrustedCredentials[]>
  nameWithType: Task<UntrustedCredentials[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.UntrustedCredentials[]>
  nameWithType.vb: Task(Of UntrustedCredentials())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.UntrustedCredentials())
  name.vb: Task(Of UntrustedCredentials())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.UntrustedCredentials
    name: UntrustedCredentials
    isExternal: true
    href: SuperOffice.CRM.Services.UntrustedCredentials.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.UntrustedCredentials
    name: UntrustedCredentials
    isExternal: true
    href: SuperOffice.CRM.Services.UntrustedCredentials.html
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.CRM.Services.IUserAgent.GetUntrustedCredentialsForAssociateAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.GetUntrustedCredentialsForAssociateAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_GetUntrustedCredentialsForAssociateAsync_System_Int32_System_String_System_Threading_CancellationToken_
  name: GetUntrustedCredentialsForAssociateAsync
  nameWithType: IUserAgent.GetUntrustedCredentialsForAssociateAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.GetUntrustedCredentialsForAssociateAsync
- uid: SuperOffice.CRM.Services.IUserAgent.SaveUntrustedCredentialsForAssociateAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.SaveUntrustedCredentialsForAssociateAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_SaveUntrustedCredentialsForAssociateAsync_System_Int32_System_String_SuperOffice_CRM_Services_UntrustedCredentials_System_Threading_CancellationToken_
  name: SaveUntrustedCredentialsForAssociateAsync
  nameWithType: IUserAgent.SaveUntrustedCredentialsForAssociateAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.SaveUntrustedCredentialsForAssociateAsync
- uid: SuperOffice.CRM.Services.IUserAgent.RemoveUntrustedCredentialsAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.RemoveUntrustedCredentialsAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_RemoveUntrustedCredentialsAsync_System_String_System_String_System_Threading_CancellationToken_
  name: RemoveUntrustedCredentialsAsync
  nameWithType: IUserAgent.RemoveUntrustedCredentialsAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.RemoveUntrustedCredentialsAsync
- uid: SuperOffice.CRM.Services.IUserAgent.RemoveUntrustedCredentialsForAssociateAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.RemoveUntrustedCredentialsForAssociateAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_RemoveUntrustedCredentialsForAssociateAsync_System_Int32_System_String_System_String_System_Threading_CancellationToken_
  name: RemoveUntrustedCredentialsForAssociateAsync
  nameWithType: IUserAgent.RemoveUntrustedCredentialsForAssociateAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.RemoveUntrustedCredentialsForAssociateAsync
- uid: SuperOffice.CRM.Services.IUserAgent.CreateExternalUserAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.CreateExternalUserAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_CreateExternalUserAsync_System_Int32_System_String_System_String_System_Int32_System_Boolean_System_Threading_CancellationToken_
  name: CreateExternalUserAsync
  nameWithType: IUserAgent.CreateExternalUserAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.CreateExternalUserAsync
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: T:System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<int>
  nameWithType: Task<int>
  fullName: System.Threading.Tasks.Task<int>
  nameWithType.vb: Task(Of Integer)
  fullName.vb: System.Threading.Tasks.Task(Of Integer)
  name.vb: Task(Of Integer)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SuperOffice.CRM.Services.IUserAgent.DeleteExternalUserAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.DeleteExternalUserAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_DeleteExternalUserAsync_System_Int32_System_Threading_CancellationToken_
  name: DeleteExternalUserAsync
  nameWithType: IUserAgent.DeleteExternalUserAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.DeleteExternalUserAsync
- uid: SuperOffice.CRM.Services.IUserAgent.SetExternalUserInfoAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.SetExternalUserInfoAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_SetExternalUserInfoAsync_System_Int32_System_String_System_String_System_Boolean_System_Int32_SuperOffice_CRM_Services_Util_ExternalUserInfoModification_System_Threading_CancellationToken_
  name: SetExternalUserInfoAsync
  nameWithType: IUserAgent.SetExternalUserInfoAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.SetExternalUserInfoAsync
- uid: SuperOffice.CRM.Services.Util.ExternalUserInfoModification
  commentId: T:SuperOffice.CRM.Services.Util.ExternalUserInfoModification
  parent: SuperOffice.CRM.Services.Util
  isExternal: true
  href: SuperOffice.CRM.Services.Util.ExternalUserInfoModification.html
  name: ExternalUserInfoModification
  nameWithType: ExternalUserInfoModification
  fullName: SuperOffice.CRM.Services.Util.ExternalUserInfoModification
- uid: SuperOffice.CRM.Services.IUserAgent.GenerateNewPasswordForExternalUserAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.GenerateNewPasswordForExternalUserAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_GenerateNewPasswordForExternalUserAsync_System_String_System_Threading_CancellationToken_
  name: GenerateNewPasswordForExternalUserAsync
  nameWithType: IUserAgent.GenerateNewPasswordForExternalUserAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.GenerateNewPasswordForExternalUserAsync
- uid: SuperOffice.CRM.Services.IUserAgent.CanChangePasswordAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.CanChangePasswordAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_CanChangePasswordAsync_System_Int32_System_Threading_CancellationToken_
  name: CanChangePasswordAsync
  nameWithType: IUserAgent.CanChangePasswordAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.CanChangePasswordAsync
- uid: SuperOffice.CRM.Services.IUserAgent.GetSupportedChangePasswordTypesAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.GetSupportedChangePasswordTypesAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_GetSupportedChangePasswordTypesAsync_System_Int32_System_Threading_CancellationToken_
  name: GetSupportedChangePasswordTypesAsync
  nameWithType: IUserAgent.GetSupportedChangePasswordTypesAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.GetSupportedChangePasswordTypesAsync
- uid: System.Threading.Tasks.Task{SuperOffice.Data.ChangePasswordType[]}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.Data.ChangePasswordType[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ChangePasswordType[]>
  nameWithType: Task<ChangePasswordType[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.Data.ChangePasswordType[]>
  nameWithType.vb: Task(Of ChangePasswordType())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.Data.ChangePasswordType())
  name.vb: Task(Of ChangePasswordType())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.Data.ChangePasswordType
    name: ChangePasswordType
    isExternal: true
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Data.ChangePasswordType
    name: ChangePasswordType
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.CRM.Services.IUserAgent.ChangePasswordAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.ChangePasswordAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_ChangePasswordAsync_System_Int32_System_String_System_String_System_Threading_CancellationToken_
  name: ChangePasswordAsync
  nameWithType: IUserAgent.ChangePasswordAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.ChangePasswordAsync
- uid: SuperOffice.CRM.Services.IUserAgent.SendChangePasswordEMailAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.SendChangePasswordEMailAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_SendChangePasswordEMailAsync_System_Int32_System_Threading_CancellationToken_
  name: SendChangePasswordEMailAsync
  nameWithType: IUserAgent.SendChangePasswordEMailAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.SendChangePasswordEMailAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.OperationResult}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.OperationResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<OperationResult>
  nameWithType: Task<OperationResult>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.OperationResult>
  nameWithType.vb: Task(Of OperationResult)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.OperationResult)
  name.vb: Task(Of OperationResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.OperationResult
    name: OperationResult
    isExternal: true
    href: SuperOffice.CRM.Services.OperationResult.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.OperationResult
    name: OperationResult
    isExternal: true
    href: SuperOffice.CRM.Services.OperationResult.html
  - name: )
- uid: SuperOffice.CRM.Services.IUserAgent.GetUserFromPersonIdAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.GetUserFromPersonIdAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_GetUserFromPersonIdAsync_System_Int32_System_Threading_CancellationToken_
  name: GetUserFromPersonIdAsync
  nameWithType: IUserAgent.GetUserFromPersonIdAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.GetUserFromPersonIdAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.User[]}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.User[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<User[]>
  nameWithType: Task<User[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.User[]>
  nameWithType.vb: Task(Of User())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.User())
  name.vb: Task(Of User())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.User
    name: User
    isExternal: true
    href: SuperOffice.CRM.Services.User.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.User
    name: User
    isExternal: true
    href: SuperOffice.CRM.Services.User.html
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.CRM.Services.IUserAgent.CreateDefaultUserFromUserTypeAndPersonIdAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.CreateDefaultUserFromUserTypeAndPersonIdAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_CreateDefaultUserFromUserTypeAndPersonIdAsync_SuperOffice_License_UserType_System_Int32_System_Threading_CancellationToken_
  name: CreateDefaultUserFromUserTypeAndPersonIdAsync
  nameWithType: IUserAgent.CreateDefaultUserFromUserTypeAndPersonIdAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.CreateDefaultUserFromUserTypeAndPersonIdAsync
- uid: SuperOffice.CRM.Services.IUserAgent.CreateDefaultUserFromUserTypeAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.CreateDefaultUserFromUserTypeAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_CreateDefaultUserFromUserTypeAsync_SuperOffice_License_UserType_System_Threading_CancellationToken_
  name: CreateDefaultUserFromUserTypeAsync
  nameWithType: IUserAgent.CreateDefaultUserFromUserTypeAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.CreateDefaultUserFromUserTypeAsync
- uid: SuperOffice.CRM.Services.IUserAgent.GetUserFromEjUserIdAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.GetUserFromEjUserIdAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_GetUserFromEjUserIdAsync_System_Int32_System_Threading_CancellationToken_
  name: GetUserFromEjUserIdAsync
  nameWithType: IUserAgent.GetUserFromEjUserIdAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.GetUserFromEjUserIdAsync
- uid: SuperOffice.CRM.Services.IUserAgent.SetPasswordFromNameAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.SetPasswordFromNameAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_SetPasswordFromNameAsync_System_String_System_String_System_Threading_CancellationToken_
  name: SetPasswordFromNameAsync
  nameWithType: IUserAgent.SetPasswordFromNameAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.SetPasswordFromNameAsync
- uid: SuperOffice.CRM.Services.IUserAgent.SetPasswordAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.SetPasswordAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_SetPasswordAsync_System_Int32_System_String_System_Threading_CancellationToken_
  name: SetPasswordAsync
  nameWithType: IUserAgent.SetPasswordAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.SetPasswordAsync
- uid: SuperOffice.CRM.Services.IUserAgent.ChangeOwnPasswordAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.ChangeOwnPasswordAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_ChangeOwnPasswordAsync_System_String_System_String_System_Threading_CancellationToken_
  name: ChangeOwnPasswordAsync
  nameWithType: IUserAgent.ChangeOwnPasswordAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.ChangeOwnPasswordAsync
- uid: SuperOffice.CRM.Services.IUserAgent.ChangePasswordFromNameAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.ChangePasswordFromNameAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_ChangePasswordFromNameAsync_System_String_System_String_System_String_System_Threading_CancellationToken_
  name: ChangePasswordFromNameAsync
  nameWithType: IUserAgent.ChangePasswordFromNameAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.ChangePasswordFromNameAsync
- uid: SuperOffice.CRM.Services.IUserAgent.IsUserNameValidAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.IsUserNameValidAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_IsUserNameValidAsync_System_Int32_SuperOffice_License_UserType_System_Int32_System_String_System_Threading_CancellationToken_
  name: IsUserNameValidAsync
  nameWithType: IUserAgent.IsUserNameValidAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.IsUserNameValidAsync
- uid: SuperOffice.CRM.Services.IUserAgent.IsPasswordValidAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.IsPasswordValidAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_IsPasswordValidAsync_System_Int32_SuperOffice_License_UserType_System_Int32_System_String_System_Threading_CancellationToken_
  name: IsPasswordValidAsync
  nameWithType: IUserAgent.IsPasswordValidAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.IsPasswordValidAsync
- uid: SuperOffice.CRM.Services.IUserAgent.SetGeneratedPasswordAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.SetGeneratedPasswordAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_SetGeneratedPasswordAsync_System_Int32_System_Threading_CancellationToken_
  name: SetGeneratedPasswordAsync
  nameWithType: IUserAgent.SetGeneratedPasswordAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.SetGeneratedPasswordAsync
- uid: SuperOffice.CRM.Services.IUserAgent.SetGeneratedPasswordFromNameAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.SetGeneratedPasswordFromNameAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_SetGeneratedPasswordFromNameAsync_System_String_System_Threading_CancellationToken_
  name: SetGeneratedPasswordFromNameAsync
  nameWithType: IUserAgent.SetGeneratedPasswordFromNameAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.SetGeneratedPasswordFromNameAsync
- uid: SuperOffice.CRM.Services.IUserAgent.IsPasswordValidWithReasonAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.IsPasswordValidWithReasonAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_IsPasswordValidWithReasonAsync_System_Int32_SuperOffice_License_UserType_System_Int32_System_String_System_Threading_CancellationToken_
  name: IsPasswordValidWithReasonAsync
  nameWithType: IUserAgent.IsPasswordValidWithReasonAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.IsPasswordValidWithReasonAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.UserValidationResult}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.UserValidationResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<UserValidationResult>
  nameWithType: Task<UserValidationResult>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.UserValidationResult>
  nameWithType.vb: Task(Of UserValidationResult)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.UserValidationResult)
  name.vb: Task(Of UserValidationResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.UserValidationResult
    name: UserValidationResult
    isExternal: true
    href: SuperOffice.CRM.Services.UserValidationResult.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.UserValidationResult
    name: UserValidationResult
    isExternal: true
    href: SuperOffice.CRM.Services.UserValidationResult.html
  - name: )
- uid: SuperOffice.CRM.Services.IUserAgent.IsUserNameValidWithReasonAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.IsUserNameValidWithReasonAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_IsUserNameValidWithReasonAsync_System_Int32_SuperOffice_License_UserType_System_Int32_System_String_System_Threading_CancellationToken_
  name: IsUserNameValidWithReasonAsync
  nameWithType: IUserAgent.IsUserNameValidWithReasonAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.IsUserNameValidWithReasonAsync
- uid: SuperOffice.CRM.Services.IUserAgent.ChangeUserTypeAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.ChangeUserTypeAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_ChangeUserTypeAsync_SuperOffice_CRM_Services_User_SuperOffice_License_UserType_System_Threading_CancellationToken_
  name: ChangeUserTypeAsync
  nameWithType: IUserAgent.ChangeUserTypeAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.ChangeUserTypeAsync
- uid: SuperOffice.CRM.Services.IUserAgent.CreateDefaultUserFromUserTypeAndCredentialAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.CreateDefaultUserFromUserTypeAndCredentialAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_CreateDefaultUserFromUserTypeAndCredentialAsync_SuperOffice_License_UserType_System_Int32_System_String_System_String_System_String_System_Threading_CancellationToken_
  name: CreateDefaultUserFromUserTypeAndCredentialAsync
  nameWithType: IUserAgent.CreateDefaultUserFromUserTypeAndCredentialAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.CreateDefaultUserFromUserTypeAndCredentialAsync
- uid: SuperOffice.CRM.Services.IUserAgent.GetValidUserNameAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.GetValidUserNameAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_GetValidUserNameAsync_System_Int32_SuperOffice_License_UserType_System_Int32_System_String_System_Threading_CancellationToken_
  name: GetValidUserNameAsync
  nameWithType: IUserAgent.GetValidUserNameAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.GetValidUserNameAsync
- uid: SuperOffice.CRM.Services.IUserAgent.RemoveLicensesAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.RemoveLicensesAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_RemoveLicensesAsync_System_Int32_System_Threading_CancellationToken_
  name: RemoveLicensesAsync
  nameWithType: IUserAgent.RemoveLicensesAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.RemoveLicensesAsync
- uid: SuperOffice.CRM.Services.IUserAgent.MakeRetiredAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.MakeRetiredAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_MakeRetiredAsync_System_Int32_System_Boolean_System_Threading_CancellationToken_
  name: MakeRetiredAsync
  nameWithType: IUserAgent.MakeRetiredAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.MakeRetiredAsync
- uid: SuperOffice.CRM.Services.IUserAgent.AddOwnerContactAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.AddOwnerContactAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_AddOwnerContactAsync_System_Int32_System_Threading_CancellationToken_
  name: AddOwnerContactAsync
  nameWithType: IUserAgent.AddOwnerContactAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.AddOwnerContactAsync
- uid: SuperOffice.CRM.Services.IUserAgent.RemoveOwnerContactAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.RemoveOwnerContactAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_RemoveOwnerContactAsync_System_Int32_System_Threading_CancellationToken_
  name: RemoveOwnerContactAsync
  nameWithType: IUserAgent.RemoveOwnerContactAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.RemoveOwnerContactAsync
- uid: SuperOffice.CRM.Services.IUserAgent.ResolveUserFromInfoAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.ResolveUserFromInfoAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_ResolveUserFromInfoAsync_System_Int32_System_String_System_String___System_String___SuperOffice_License_UserType_SuperOffice_CRM_Services_Credential_System_Threading_CancellationToken_
  name: ResolveUserFromInfoAsync
  nameWithType: IUserAgent.ResolveUserFromInfoAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.ResolveUserFromInfoAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.ResolvedUser}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.ResolvedUser}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ResolvedUser>
  nameWithType: Task<ResolvedUser>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.ResolvedUser>
  nameWithType.vb: Task(Of ResolvedUser)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.ResolvedUser)
  name.vb: Task(Of ResolvedUser)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.ResolvedUser
    name: ResolvedUser
    isExternal: true
    href: SuperOffice.CRM.Services.ResolvedUser.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.ResolvedUser
    name: ResolvedUser
    isExternal: true
    href: SuperOffice.CRM.Services.ResolvedUser.html
  - name: )
- uid: SuperOffice.CRM.Services.IUserAgent.GetAccessTokenAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.GetAccessTokenAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_GetAccessTokenAsync_System_String_System_Boolean_System_Threading_CancellationToken_
  name: GetAccessTokenAsync
  nameWithType: IUserAgent.GetAccessTokenAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.GetAccessTokenAsync
- uid: SuperOffice.CRM.Services.IUserAgent.GetValidUserNameForNewUserAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.GetValidUserNameForNewUserAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_GetValidUserNameForNewUserAsync_SuperOffice_CRM_Services_User_System_Threading_CancellationToken_
  name: GetValidUserNameForNewUserAsync
  nameWithType: IUserAgent.GetValidUserNameForNewUserAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.GetValidUserNameForNewUserAsync
- uid: SuperOffice.CRM.Services.IUserAgent.GetDefaultAssociateUserNameAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.GetDefaultAssociateUserNameAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_GetDefaultAssociateUserNameAsync_SuperOffice_CRM_Services_User_System_Threading_CancellationToken_
  name: GetDefaultAssociateUserNameAsync
  nameWithType: IUserAgent.GetDefaultAssociateUserNameAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.GetDefaultAssociateUserNameAsync
- uid: SuperOffice.CRM.Services.IUserAgent.IsNickNameUniqueAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.IsNickNameUniqueAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_IsNickNameUniqueAsync_System_Int32_System_String_System_Threading_CancellationToken_
  name: IsNickNameUniqueAsync
  nameWithType: IUserAgent.IsNickNameUniqueAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.IsNickNameUniqueAsync
- uid: SuperOffice.CRM.Services.IUserAgent.ValidateUserAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.ValidateUserAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_ValidateUserAsync_SuperOffice_CRM_Services_User_System_Threading_CancellationToken_
  name: ValidateUserAsync
  nameWithType: IUserAgent.ValidateUserAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.ValidateUserAsync
- uid: SuperOffice.CRM.Services.IUserAgent.GetUserPresenceStatusAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.GetUserPresenceStatusAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_GetUserPresenceStatusAsync_System_Int32_System_Threading_CancellationToken_
  name: GetUserPresenceStatusAsync
  nameWithType: IUserAgent.GetUserPresenceStatusAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.GetUserPresenceStatusAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.UserPresenceStatus}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.UserPresenceStatus}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<UserPresenceStatus>
  nameWithType: Task<UserPresenceStatus>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.UserPresenceStatus>
  nameWithType.vb: Task(Of UserPresenceStatus)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.UserPresenceStatus)
  name.vb: Task(Of UserPresenceStatus)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.UserPresenceStatus
    name: UserPresenceStatus
    isExternal: true
    href: SuperOffice.CRM.Services.UserPresenceStatus.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.UserPresenceStatus
    name: UserPresenceStatus
    isExternal: true
    href: SuperOffice.CRM.Services.UserPresenceStatus.html
  - name: )
- uid: SuperOffice.CRM.Services.IUserAgent.SetUserPresenceStatusAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.SetUserPresenceStatusAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_SetUserPresenceStatusAsync_System_Int32_SuperOffice_CRM_Services_UserPresenceStatus_System_Threading_CancellationToken_
  name: SetUserPresenceStatusAsync
  nameWithType: IUserAgent.SetUserPresenceStatusAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.SetUserPresenceStatusAsync
- uid: SuperOffice.CRM.Services.UserPresenceStatus
  commentId: T:SuperOffice.CRM.Services.UserPresenceStatus
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.UserPresenceStatus.html
  name: UserPresenceStatus
  nameWithType: UserPresenceStatus
  fullName: SuperOffice.CRM.Services.UserPresenceStatus
- uid: SuperOffice.CRM.Services.IUserAgent.GetUserGroupAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.GetUserGroupAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_GetUserGroupAsync_System_Int32_System_Threading_CancellationToken_
  name: GetUserGroupAsync
  nameWithType: IUserAgent.GetUserGroupAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.GetUserGroupAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.UserGroup}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.UserGroup}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<UserGroup>
  nameWithType: Task<UserGroup>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.UserGroup>
  nameWithType.vb: Task(Of UserGroup)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.UserGroup)
  name.vb: Task(Of UserGroup)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.UserGroup
    name: UserGroup
    isExternal: true
    href: SuperOffice.CRM.Services.UserGroup.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.UserGroup
    name: UserGroup
    isExternal: true
    href: SuperOffice.CRM.Services.UserGroup.html
  - name: )
- uid: SuperOffice.CRM.Services.IUserAgent.SaveUserGroupAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.SaveUserGroupAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_SaveUserGroupAsync_SuperOffice_CRM_Services_UserGroup_System_Threading_CancellationToken_
  name: SaveUserGroupAsync
  nameWithType: IUserAgent.SaveUserGroupAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.SaveUserGroupAsync
- uid: SuperOffice.CRM.Services.UserGroup
  commentId: T:SuperOffice.CRM.Services.UserGroup
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.UserGroup.html
  name: UserGroup
  nameWithType: UserGroup
  fullName: SuperOffice.CRM.Services.UserGroup
- uid: SuperOffice.CRM.Services.IUserAgent.GetAllUserGroupsAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.GetAllUserGroupsAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_GetAllUserGroupsAsync_System_Boolean_System_Threading_CancellationToken_
  name: GetAllUserGroupsAsync
  nameWithType: IUserAgent.GetAllUserGroupsAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.GetAllUserGroupsAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.UserGroup[]}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.UserGroup[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<UserGroup[]>
  nameWithType: Task<UserGroup[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.UserGroup[]>
  nameWithType.vb: Task(Of UserGroup())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.UserGroup())
  name.vb: Task(Of UserGroup())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.UserGroup
    name: UserGroup
    isExternal: true
    href: SuperOffice.CRM.Services.UserGroup.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.UserGroup
    name: UserGroup
    isExternal: true
    href: SuperOffice.CRM.Services.UserGroup.html
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.CRM.Services.IUserAgent.CreateUserGroupAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.CreateUserGroupAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_CreateUserGroupAsync_System_Threading_CancellationToken_
  name: CreateUserGroupAsync
  nameWithType: IUserAgent.CreateUserGroupAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.CreateUserGroupAsync
- uid: SuperOffice.CRM.Services.IUserAgent.DeleteUserGroupAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.DeleteUserGroupAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_DeleteUserGroupAsync_System_Int32_System_Int32_System_Threading_CancellationToken_
  name: DeleteUserGroupAsync
  nameWithType: IUserAgent.DeleteUserGroupAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.DeleteUserGroupAsync
- uid: SuperOffice.CRM.Services.IUserAgent.GetUserGroupListAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.GetUserGroupListAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_GetUserGroupListAsync_System_Int32___System_Threading_CancellationToken_
  name: GetUserGroupListAsync
  nameWithType: IUserAgent.GetUserGroupListAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.GetUserGroupListAsync
- uid: SuperOffice.CRM.Services.IUserAgent.GetUserInfoAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.GetUserInfoAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_GetUserInfoAsync_System_Int32_System_Threading_CancellationToken_
  name: GetUserInfoAsync
  nameWithType: IUserAgent.GetUserInfoAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.GetUserInfoAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.UserInfo}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.UserInfo}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<UserInfo>
  nameWithType: Task<UserInfo>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.UserInfo>
  nameWithType.vb: Task(Of UserInfo)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.UserInfo)
  name.vb: Task(Of UserInfo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.UserInfo
    name: UserInfo
    isExternal: true
    href: SuperOffice.CRM.Services.UserInfo.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.UserInfo
    name: UserInfo
    isExternal: true
    href: SuperOffice.CRM.Services.UserInfo.html
  - name: )
- uid: SuperOffice.CRM.Services.IUserAgent.GetUserInfoListAsync*
  commentId: Overload:SuperOffice.CRM.Services.IUserAgent.GetUserInfoListAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IUserAgent.html#SuperOffice_CRM_Services_IUserAgent_GetUserInfoListAsync_System_Int32___System_Threading_CancellationToken_
  name: GetUserInfoListAsync
  nameWithType: IUserAgent.GetUserInfoListAsync
  fullName: SuperOffice.CRM.Services.IUserAgent.GetUserInfoListAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.UserInfo[]}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.UserInfo[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<UserInfo[]>
  nameWithType: Task<UserInfo[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.UserInfo[]>
  nameWithType.vb: Task(Of UserInfo())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.UserInfo())
  name.vb: Task(Of UserInfo())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.UserInfo
    name: UserInfo
    isExternal: true
    href: SuperOffice.CRM.Services.UserInfo.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.UserInfo
    name: UserInfo
    isExternal: true
    href: SuperOffice.CRM.Services.UserInfo.html
  - name: (
  - name: )
  - name: )
