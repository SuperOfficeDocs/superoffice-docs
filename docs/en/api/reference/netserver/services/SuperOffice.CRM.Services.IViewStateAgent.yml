### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Services.IViewStateAgent
  commentId: T:SuperOffice.CRM.Services.IViewStateAgent
  id: IViewStateAgent
  parent: SuperOffice.CRM.Services
  children:
  - SuperOffice.CRM.Services.IViewStateAgent.DeleteHistory(System.String,System.Int32)
  - SuperOffice.CRM.Services.IViewStateAgent.GetCurrent(System.String)
  - SuperOffice.CRM.Services.IViewStateAgent.GetHistories
  - SuperOffice.CRM.Services.IViewStateAgent.GetHistoriesByName(System.String)
  - SuperOffice.CRM.Services.IViewStateAgent.GetHistoriesByNames(System.String[])
  - SuperOffice.CRM.Services.IViewStateAgent.GetHistoriesByNamesAndIds(SuperOffice.CRM.Services.HistoryRequest[])
  - SuperOffice.CRM.Services.IViewStateAgent.GetHistory(System.Int32)
  - SuperOffice.CRM.Services.IViewStateAgent.GetHistoryLengthPrefValue
  - SuperOffice.CRM.Services.IViewStateAgent.GetNextCurrent(System.String,System.Int32)
  - SuperOffice.CRM.Services.IViewStateAgent.GetPreviousCurrent(System.String,System.Int32)
  - SuperOffice.CRM.Services.IViewStateAgent.SaveCurrent(SuperOffice.CRM.Services.History)
  - SuperOffice.CRM.Services.IViewStateAgent.SaveCurrents(SuperOffice.CRM.Services.History[])
  - SuperOffice.CRM.Services.IViewStateAgent.SaveHistories(System.String,SuperOffice.CRM.Services.History[])
  - SuperOffice.CRM.Services.IViewStateAgent.SetHistoryLengthPrefValue(System.Int32)
  langs:
  - csharp
  - vb
  name: IViewStateAgent
  nameWithType: IViewStateAgent
  fullName: SuperOffice.CRM.Services.IViewStateAgent
  type: Interface
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nInterface for the ViewState Agent\nUser interface view state, history, currentXXX values\n"
  example:
  - "\n<pre><code>  using SuperOffice;\n  using SuperOffice.CRM.Services;\n\n  using (SoSession mySession = SoSession.Authenticate(&quot;user&quot;, &quot;pass&quot;))\n  {\n     using (ViewStateAgent agent = new ViewStateAgent())\n     {\n        // call methods on agent here...\n     }\n  }</code></pre>\n"
  syntax:
    content: >-
      [Agent("ViewState Agent", "Interface for the ViewState Agent. User interface view state, history, currentXXX values")]

      public interface IViewStateAgent : IAgent
    content.vb: >-
      <Agent("ViewState Agent", "Interface for the ViewState Agent. User interface view state, history, currentXXX values")>

      Public Interface IViewStateAgent

          Inherits IAgent
  attributes:
  - type: SuperOffice.CRM.Services.Reflection.AgentAttribute
    ctor: SuperOffice.CRM.Services.Reflection.AgentAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: ViewState Agent
    - type: System.String
      value: Interface for the ViewState Agent. User interface view state, history, currentXXX values
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.CRM.Services.IViewStateAgent.GetHistory(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IViewStateAgent.GetHistory(System.Int32)
  id: GetHistory(System.Int32)
  parent: SuperOffice.CRM.Services.IViewStateAgent
  langs:
  - csharp
  - vb
  name: GetHistory(Int32)
  nameWithType: IViewStateAgent.GetHistory(Int32)
  fullName: SuperOffice.CRM.Services.IViewStateAgent.GetHistory(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets a History object.                        \n"
  syntax:
    content: History GetHistory(int historyId)
    parameters:
    - id: historyId
      type: System.Int32
      description: The identifier of the History object
    return:
      type: SuperOffice.CRM.Services.History
      description: History
    content.vb: Function GetHistory(historyId As Integer) As History
  overload: SuperOffice.CRM.Services.IViewStateAgent.GetHistory*
- uid: SuperOffice.CRM.Services.IViewStateAgent.GetCurrent(System.String)
  commentId: M:SuperOffice.CRM.Services.IViewStateAgent.GetCurrent(System.String)
  id: GetCurrent(System.String)
  parent: SuperOffice.CRM.Services.IViewStateAgent
  langs:
  - csharp
  - vb
  name: GetCurrent(String)
  nameWithType: IViewStateAgent.GetCurrent(String)
  fullName: SuperOffice.CRM.Services.IViewStateAgent.GetCurrent(System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet the current (most recent) value of the history list. This is the item with rank = 1. If no item exists a default value is returned. This is usually the first item in the table representing the history list.\n"
  syntax:
    content: History GetCurrent(string historyName)
    parameters:
    - id: historyName
      type: System.String
      description: Name of the history list, e.g. contact, project
    return:
      type: SuperOffice.CRM.Services.History
      description: The current (most recent) history item
    content.vb: Function GetCurrent(historyName As String) As History
  overload: SuperOffice.CRM.Services.IViewStateAgent.GetCurrent*
- uid: SuperOffice.CRM.Services.IViewStateAgent.SaveCurrent(SuperOffice.CRM.Services.History)
  commentId: M:SuperOffice.CRM.Services.IViewStateAgent.SaveCurrent(SuperOffice.CRM.Services.History)
  id: SaveCurrent(SuperOffice.CRM.Services.History)
  parent: SuperOffice.CRM.Services.IViewStateAgent
  langs:
  - csharp
  - vb
  name: SaveCurrent(History)
  nameWithType: IViewStateAgent.SaveCurrent(History)
  fullName: SuperOffice.CRM.Services.IViewStateAgent.SaveCurrent(SuperOffice.CRM.Services.History)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSaving the current history item. This history item is saved with Rank = 1, and all the remaining elements rank values are shifted one down. The list is maintained with the max lenght of the History list length preference.\n"
  syntax:
    content: History SaveCurrent(History current)
    parameters:
    - id: current
      type: SuperOffice.CRM.Services.History
      description: The new current history element.
    return:
      type: SuperOffice.CRM.Services.History
      description: The current (most recent) history item
    content.vb: Function SaveCurrent(current As History) As History
  overload: SuperOffice.CRM.Services.IViewStateAgent.SaveCurrent*
- uid: SuperOffice.CRM.Services.IViewStateAgent.GetNextCurrent(System.String,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IViewStateAgent.GetNextCurrent(System.String,System.Int32)
  id: GetNextCurrent(System.String,System.Int32)
  parent: SuperOffice.CRM.Services.IViewStateAgent
  langs:
  - csharp
  - vb
  name: GetNextCurrent(String, Int32)
  nameWithType: IViewStateAgent.GetNextCurrent(String, Int32)
  fullName: SuperOffice.CRM.Services.IViewStateAgent.GetNextCurrent(System.String, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nReturns the next current item. If no item exists a default value is returned. This is usually the first item in the table representing the history list.\n"
  syntax:
    content: History GetNextCurrent(string historyName, int id)
    parameters:
    - id: historyName
      type: System.String
      description: Name of the history list, e.g. contact, project
    - id: id
      type: System.Int32
      description: Id of the history element, e.g. Contact id
    return:
      type: SuperOffice.CRM.Services.History
      description: The current value.
    content.vb: Function GetNextCurrent(historyName As String, id As Integer) As History
  overload: SuperOffice.CRM.Services.IViewStateAgent.GetNextCurrent*
- uid: SuperOffice.CRM.Services.IViewStateAgent.GetPreviousCurrent(System.String,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IViewStateAgent.GetPreviousCurrent(System.String,System.Int32)
  id: GetPreviousCurrent(System.String,System.Int32)
  parent: SuperOffice.CRM.Services.IViewStateAgent
  langs:
  - csharp
  - vb
  name: GetPreviousCurrent(String, Int32)
  nameWithType: IViewStateAgent.GetPreviousCurrent(String, Int32)
  fullName: SuperOffice.CRM.Services.IViewStateAgent.GetPreviousCurrent(System.String, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nReturns the previous current item. If no item exists a default value is returned. This is usually the first item in the table representing the history list.\n"
  syntax:
    content: History GetPreviousCurrent(string historyName, int id)
    parameters:
    - id: historyName
      type: System.String
      description: Name of the history list, e.g. contact, project
    - id: id
      type: System.Int32
      description: Id of the history element, e.g. Contact id
    return:
      type: SuperOffice.CRM.Services.History
      description: The current value.
    content.vb: Function GetPreviousCurrent(historyName As String, id As Integer) As History
  overload: SuperOffice.CRM.Services.IViewStateAgent.GetPreviousCurrent*
- uid: SuperOffice.CRM.Services.IViewStateAgent.DeleteHistory(System.String,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IViewStateAgent.DeleteHistory(System.String,System.Int32)
  id: DeleteHistory(System.String,System.Int32)
  parent: SuperOffice.CRM.Services.IViewStateAgent
  langs:
  - csharp
  - vb
  name: DeleteHistory(String, Int32)
  nameWithType: IViewStateAgent.DeleteHistory(String, Int32)
  fullName: SuperOffice.CRM.Services.IViewStateAgent.DeleteHistory(System.String, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nDeletes the history element\n"
  syntax:
    content: void DeleteHistory(string historyName, int id)
    parameters:
    - id: historyName
      type: System.String
      description: Name of the history list, e.g. contact, project
    - id: id
      type: System.Int32
      description: Id of the history element, e.g. Contact id
    content.vb: Sub DeleteHistory(historyName As String, id As Integer)
  overload: SuperOffice.CRM.Services.IViewStateAgent.DeleteHistory*
- uid: SuperOffice.CRM.Services.IViewStateAgent.GetHistories
  commentId: M:SuperOffice.CRM.Services.IViewStateAgent.GetHistories
  id: GetHistories
  parent: SuperOffice.CRM.Services.IViewStateAgent
  langs:
  - csharp
  - vb
  name: GetHistories()
  nameWithType: IViewStateAgent.GetHistories()
  fullName: SuperOffice.CRM.Services.IViewStateAgent.GetHistories()
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nReturns all history items that belong to the currently logged in user\n"
  syntax:
    content: History[] GetHistories()
    return:
      type: SuperOffice.CRM.Services.History[]
      description: Array of History items
    content.vb: Function GetHistories As History()
  overload: SuperOffice.CRM.Services.IViewStateAgent.GetHistories*
- uid: SuperOffice.CRM.Services.IViewStateAgent.GetHistoriesByName(System.String)
  commentId: M:SuperOffice.CRM.Services.IViewStateAgent.GetHistoriesByName(System.String)
  id: GetHistoriesByName(System.String)
  parent: SuperOffice.CRM.Services.IViewStateAgent
  langs:
  - csharp
  - vb
  name: GetHistoriesByName(String)
  nameWithType: IViewStateAgent.GetHistoriesByName(String)
  fullName: SuperOffice.CRM.Services.IViewStateAgent.GetHistoriesByName(System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nReturns the named history list that belong to the currently logged in user\n"
  syntax:
    content: History[] GetHistoriesByName(string historyName)
    parameters:
    - id: historyName
      type: System.String
      description: Name of the history list
    return:
      type: SuperOffice.CRM.Services.History[]
      description: Array of History items
    content.vb: Function GetHistoriesByName(historyName As String) As History()
  overload: SuperOffice.CRM.Services.IViewStateAgent.GetHistoriesByName*
- uid: SuperOffice.CRM.Services.IViewStateAgent.GetHistoriesByNames(System.String[])
  commentId: M:SuperOffice.CRM.Services.IViewStateAgent.GetHistoriesByNames(System.String[])
  id: GetHistoriesByNames(System.String[])
  parent: SuperOffice.CRM.Services.IViewStateAgent
  langs:
  - csharp
  - vb
  name: GetHistoriesByNames(String[])
  nameWithType: IViewStateAgent.GetHistoriesByNames(String[])
  fullName: SuperOffice.CRM.Services.IViewStateAgent.GetHistoriesByNames(System.String[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nReturns the named history lists that belong to the currently logged in user\n"
  syntax:
    content: History[] GetHistoriesByNames(string[] historyNames)
    parameters:
    - id: historyNames
      type: System.String[]
      description: String array of list names
    return:
      type: SuperOffice.CRM.Services.History[]
      description: Array of History items
    content.vb: Function GetHistoriesByNames(historyNames As String()) As History()
  overload: SuperOffice.CRM.Services.IViewStateAgent.GetHistoriesByNames*
  nameWithType.vb: IViewStateAgent.GetHistoriesByNames(String())
  fullName.vb: SuperOffice.CRM.Services.IViewStateAgent.GetHistoriesByNames(System.String())
  name.vb: GetHistoriesByNames(String())
- uid: SuperOffice.CRM.Services.IViewStateAgent.SaveHistories(System.String,SuperOffice.CRM.Services.History[])
  commentId: M:SuperOffice.CRM.Services.IViewStateAgent.SaveHistories(System.String,SuperOffice.CRM.Services.History[])
  id: SaveHistories(System.String,SuperOffice.CRM.Services.History[])
  parent: SuperOffice.CRM.Services.IViewStateAgent
  langs:
  - csharp
  - vb
  name: SaveHistories(String, History[])
  nameWithType: IViewStateAgent.SaveHistories(String, History[])
  fullName: SuperOffice.CRM.Services.IViewStateAgent.SaveHistories(System.String, SuperOffice.CRM.Services.History[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nReplaces the existing history-list for the currently logged in user. All elements must belong to the same history list. If not they are ignored.\n"
  syntax:
    content: History[] SaveHistories(string historyName, History[] history)
    parameters:
    - id: historyName
      type: System.String
    - id: history
      type: SuperOffice.CRM.Services.History[]
      description: Array of new history items to save.
    return:
      type: SuperOffice.CRM.Services.History[]
      description: Array of the saved History items
    content.vb: Function SaveHistories(historyName As String, history As History()) As History()
  overload: SuperOffice.CRM.Services.IViewStateAgent.SaveHistories*
  nameWithType.vb: IViewStateAgent.SaveHistories(String, History())
  fullName.vb: SuperOffice.CRM.Services.IViewStateAgent.SaveHistories(System.String, SuperOffice.CRM.Services.History())
  name.vb: SaveHistories(String, History())
- uid: SuperOffice.CRM.Services.IViewStateAgent.GetHistoryLengthPrefValue
  commentId: M:SuperOffice.CRM.Services.IViewStateAgent.GetHistoryLengthPrefValue
  id: GetHistoryLengthPrefValue
  parent: SuperOffice.CRM.Services.IViewStateAgent
  langs:
  - csharp
  - vb
  name: GetHistoryLengthPrefValue()
  nameWithType: IViewStateAgent.GetHistoryLengthPrefValue()
  fullName: SuperOffice.CRM.Services.IViewStateAgent.GetHistoryLengthPrefValue()
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet the logged on user&apos;s preferred history list length. Will return the system preference if no user preferences are available.\n"
  syntax:
    content: int GetHistoryLengthPrefValue()
    return:
      type: System.Int32
      description: The history list lenght
    content.vb: Function GetHistoryLengthPrefValue As Integer
  overload: SuperOffice.CRM.Services.IViewStateAgent.GetHistoryLengthPrefValue*
- uid: SuperOffice.CRM.Services.IViewStateAgent.SetHistoryLengthPrefValue(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IViewStateAgent.SetHistoryLengthPrefValue(System.Int32)
  id: SetHistoryLengthPrefValue(System.Int32)
  parent: SuperOffice.CRM.Services.IViewStateAgent
  langs:
  - csharp
  - vb
  name: SetHistoryLengthPrefValue(Int32)
  nameWithType: IViewStateAgent.SetHistoryLengthPrefValue(Int32)
  fullName: SuperOffice.CRM.Services.IViewStateAgent.SetHistoryLengthPrefValue(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSet the logged on user&apos;s preferred history list length.\n"
  syntax:
    content: void SetHistoryLengthPrefValue(int length)
    parameters:
    - id: length
      type: System.Int32
      description: The new history list lenght
    content.vb: Sub SetHistoryLengthPrefValue(length As Integer)
  overload: SuperOffice.CRM.Services.IViewStateAgent.SetHistoryLengthPrefValue*
- uid: SuperOffice.CRM.Services.IViewStateAgent.SaveCurrents(SuperOffice.CRM.Services.History[])
  commentId: M:SuperOffice.CRM.Services.IViewStateAgent.SaveCurrents(SuperOffice.CRM.Services.History[])
  id: SaveCurrents(SuperOffice.CRM.Services.History[])
  parent: SuperOffice.CRM.Services.IViewStateAgent
  langs:
  - csharp
  - vb
  name: SaveCurrents(History[])
  nameWithType: IViewStateAgent.SaveCurrents(History[])
  fullName: SuperOffice.CRM.Services.IViewStateAgent.SaveCurrents(SuperOffice.CRM.Services.History[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSaves the history elements as the current value for their respective lists. If more than one item is submitted for the same list, they are added sequently, meaning that the last one is the most current.\n"
  syntax:
    content: History[] SaveCurrents(History[] currents)
    parameters:
    - id: currents
      type: SuperOffice.CRM.Services.History[]
      description: Array of new history items to save.
    return:
      type: SuperOffice.CRM.Services.History[]
      description: Array of the saved History items
    content.vb: Function SaveCurrents(currents As History()) As History()
  overload: SuperOffice.CRM.Services.IViewStateAgent.SaveCurrents*
  nameWithType.vb: IViewStateAgent.SaveCurrents(History())
  fullName.vb: SuperOffice.CRM.Services.IViewStateAgent.SaveCurrents(SuperOffice.CRM.Services.History())
  name.vb: SaveCurrents(History())
- uid: SuperOffice.CRM.Services.IViewStateAgent.GetHistoriesByNamesAndIds(SuperOffice.CRM.Services.HistoryRequest[])
  commentId: M:SuperOffice.CRM.Services.IViewStateAgent.GetHistoriesByNamesAndIds(SuperOffice.CRM.Services.HistoryRequest[])
  id: GetHistoriesByNamesAndIds(SuperOffice.CRM.Services.HistoryRequest[])
  parent: SuperOffice.CRM.Services.IViewStateAgent
  langs:
  - csharp
  - vb
  name: GetHistoriesByNamesAndIds(HistoryRequest[])
  nameWithType: IViewStateAgent.GetHistoriesByNamesAndIds(HistoryRequest[])
  fullName: SuperOffice.CRM.Services.IViewStateAgent.GetHistoriesByNamesAndIds(SuperOffice.CRM.Services.HistoryRequest[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nReturns history data for the named entities and the given ids - which may not directly correspond to the current history records in the database.&lt;para/>Use this method if you know exactly which items you need, regardless of whether they are in the current history or not.&lt;para/>The history in the database is not changed or even looked at by this method.\n"
  syntax:
    content: History[] GetHistoriesByNamesAndIds(HistoryRequest[] requests)
    parameters:
    - id: requests
      type: SuperOffice.CRM.Services.HistoryRequest[]
      description: Array of request objects that define what entities we are requesting history information for
    return:
      type: SuperOffice.CRM.Services.History[]
      description: On history item for each history name/id pair specified, in exactly the same order as specified.&lt;para/>If a specified item cannot be found in the database, its Id will be 0 and its name will be blank in the return array.
    content.vb: Function GetHistoriesByNamesAndIds(requests As HistoryRequest()) As History()
  overload: SuperOffice.CRM.Services.IViewStateAgent.GetHistoriesByNamesAndIds*
  nameWithType.vb: IViewStateAgent.GetHistoriesByNamesAndIds(HistoryRequest())
  fullName.vb: SuperOffice.CRM.Services.IViewStateAgent.GetHistoriesByNamesAndIds(SuperOffice.CRM.Services.HistoryRequest())
  name.vb: GetHistoriesByNamesAndIds(HistoryRequest())
references:
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
- uid: SuperOffice.CRM.Services.IViewStateAgent.GetHistory*
  commentId: Overload:SuperOffice.CRM.Services.IViewStateAgent.GetHistory
  isExternal: true
  name: GetHistory
  nameWithType: IViewStateAgent.GetHistory
  fullName: SuperOffice.CRM.Services.IViewStateAgent.GetHistory
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.CRM.Services.History
  commentId: T:SuperOffice.CRM.Services.History
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: History
  nameWithType: History
  fullName: SuperOffice.CRM.Services.History
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Services.IViewStateAgent.GetCurrent*
  commentId: Overload:SuperOffice.CRM.Services.IViewStateAgent.GetCurrent
  isExternal: true
  name: GetCurrent
  nameWithType: IViewStateAgent.GetCurrent
  fullName: SuperOffice.CRM.Services.IViewStateAgent.GetCurrent
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.Services.IViewStateAgent.SaveCurrent*
  commentId: Overload:SuperOffice.CRM.Services.IViewStateAgent.SaveCurrent
  isExternal: true
  name: SaveCurrent
  nameWithType: IViewStateAgent.SaveCurrent
  fullName: SuperOffice.CRM.Services.IViewStateAgent.SaveCurrent
- uid: SuperOffice.CRM.Services.IViewStateAgent.GetNextCurrent*
  commentId: Overload:SuperOffice.CRM.Services.IViewStateAgent.GetNextCurrent
  isExternal: true
  name: GetNextCurrent
  nameWithType: IViewStateAgent.GetNextCurrent
  fullName: SuperOffice.CRM.Services.IViewStateAgent.GetNextCurrent
- uid: SuperOffice.CRM.Services.IViewStateAgent.GetPreviousCurrent*
  commentId: Overload:SuperOffice.CRM.Services.IViewStateAgent.GetPreviousCurrent
  isExternal: true
  name: GetPreviousCurrent
  nameWithType: IViewStateAgent.GetPreviousCurrent
  fullName: SuperOffice.CRM.Services.IViewStateAgent.GetPreviousCurrent
- uid: SuperOffice.CRM.Services.IViewStateAgent.DeleteHistory*
  commentId: Overload:SuperOffice.CRM.Services.IViewStateAgent.DeleteHistory
  isExternal: true
  name: DeleteHistory
  nameWithType: IViewStateAgent.DeleteHistory
  fullName: SuperOffice.CRM.Services.IViewStateAgent.DeleteHistory
- uid: SuperOffice.CRM.Services.IViewStateAgent.GetHistories*
  commentId: Overload:SuperOffice.CRM.Services.IViewStateAgent.GetHistories
  isExternal: true
  name: GetHistories
  nameWithType: IViewStateAgent.GetHistories
  fullName: SuperOffice.CRM.Services.IViewStateAgent.GetHistories
- uid: SuperOffice.CRM.Services.History[]
  isExternal: true
  name: History[]
  nameWithType: History[]
  fullName: SuperOffice.CRM.Services.History[]
  nameWithType.vb: History()
  fullName.vb: SuperOffice.CRM.Services.History()
  name.vb: History()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.History
    name: History
    nameWithType: History
    fullName: SuperOffice.CRM.Services.History
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.Services.History
    name: History
    nameWithType: History
    fullName: SuperOffice.CRM.Services.History
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.IViewStateAgent.GetHistoriesByName*
  commentId: Overload:SuperOffice.CRM.Services.IViewStateAgent.GetHistoriesByName
  isExternal: true
  name: GetHistoriesByName
  nameWithType: IViewStateAgent.GetHistoriesByName
  fullName: SuperOffice.CRM.Services.IViewStateAgent.GetHistoriesByName
- uid: SuperOffice.CRM.Services.IViewStateAgent.GetHistoriesByNames*
  commentId: Overload:SuperOffice.CRM.Services.IViewStateAgent.GetHistoriesByNames
  isExternal: true
  name: GetHistoriesByNames
  nameWithType: IViewStateAgent.GetHistoriesByNames
  fullName: SuperOffice.CRM.Services.IViewStateAgent.GetHistoriesByNames
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.IViewStateAgent.SaveHistories*
  commentId: Overload:SuperOffice.CRM.Services.IViewStateAgent.SaveHistories
  isExternal: true
  name: SaveHistories
  nameWithType: IViewStateAgent.SaveHistories
  fullName: SuperOffice.CRM.Services.IViewStateAgent.SaveHistories
- uid: SuperOffice.CRM.Services.IViewStateAgent.GetHistoryLengthPrefValue*
  commentId: Overload:SuperOffice.CRM.Services.IViewStateAgent.GetHistoryLengthPrefValue
  isExternal: true
  name: GetHistoryLengthPrefValue
  nameWithType: IViewStateAgent.GetHistoryLengthPrefValue
  fullName: SuperOffice.CRM.Services.IViewStateAgent.GetHistoryLengthPrefValue
- uid: SuperOffice.CRM.Services.IViewStateAgent.SetHistoryLengthPrefValue*
  commentId: Overload:SuperOffice.CRM.Services.IViewStateAgent.SetHistoryLengthPrefValue
  isExternal: true
  name: SetHistoryLengthPrefValue
  nameWithType: IViewStateAgent.SetHistoryLengthPrefValue
  fullName: SuperOffice.CRM.Services.IViewStateAgent.SetHistoryLengthPrefValue
- uid: SuperOffice.CRM.Services.IViewStateAgent.SaveCurrents*
  commentId: Overload:SuperOffice.CRM.Services.IViewStateAgent.SaveCurrents
  isExternal: true
  name: SaveCurrents
  nameWithType: IViewStateAgent.SaveCurrents
  fullName: SuperOffice.CRM.Services.IViewStateAgent.SaveCurrents
- uid: SuperOffice.CRM.Services.IViewStateAgent.GetHistoriesByNamesAndIds*
  commentId: Overload:SuperOffice.CRM.Services.IViewStateAgent.GetHistoriesByNamesAndIds
  isExternal: true
  name: GetHistoriesByNamesAndIds
  nameWithType: IViewStateAgent.GetHistoriesByNamesAndIds
  fullName: SuperOffice.CRM.Services.IViewStateAgent.GetHistoriesByNamesAndIds
- uid: SuperOffice.CRM.Services.HistoryRequest[]
  isExternal: true
  name: HistoryRequest[]
  nameWithType: HistoryRequest[]
  fullName: SuperOffice.CRM.Services.HistoryRequest[]
  nameWithType.vb: HistoryRequest()
  fullName.vb: SuperOffice.CRM.Services.HistoryRequest()
  name.vb: HistoryRequest()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.HistoryRequest
    name: HistoryRequest
    nameWithType: HistoryRequest
    fullName: SuperOffice.CRM.Services.HistoryRequest
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.Services.HistoryRequest
    name: HistoryRequest
    nameWithType: HistoryRequest
    fullName: SuperOffice.CRM.Services.HistoryRequest
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
