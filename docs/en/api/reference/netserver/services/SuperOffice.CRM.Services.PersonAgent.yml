### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Services.PersonAgent
  commentId: T:SuperOffice.CRM.Services.PersonAgent
  id: PersonAgent
  parent: SuperOffice.CRM.Services
  children:
  - SuperOffice.CRM.Services.PersonAgent.#ctor
  - SuperOffice.CRM.Services.PersonAgent.AddBounce(System.String)
  - SuperOffice.CRM.Services.PersonAgent.AddBounceWithCount(System.String,System.Int32)
  - SuperOffice.CRM.Services.PersonAgent.AddBounceWithDetails(System.String,System.Int32,System.Int32,System.String)
  - SuperOffice.CRM.Services.PersonAgent.AddEmailAddressToPerson(System.Int32,System.String,System.Boolean)
  - SuperOffice.CRM.Services.PersonAgent.ChangeCountry(SuperOffice.CRM.Services.PersonEntity,System.Int32)
  - SuperOffice.CRM.Services.PersonAgent.ChangePersonRank(System.Int32,System.Boolean)
  - SuperOffice.CRM.Services.PersonAgent.CheckTemporaryKey(System.String)
  - SuperOffice.CRM.Services.PersonAgent.CreateDefaultByContactId(System.Int32)
  - SuperOffice.CRM.Services.PersonAgent.CreateDefaultConsentPerson
  - SuperOffice.CRM.Services.PersonAgent.CreateDefaultFromCredential(System.Int32,System.String,System.String,System.String)
  - SuperOffice.CRM.Services.PersonAgent.CreateDefaultPersonEntity
  - SuperOffice.CRM.Services.PersonAgent.CreateTemporaryKey(SuperOffice.Data.TemporaryKeyDomain,System.Int32,System.Int32,System.DateTime)
  - SuperOffice.CRM.Services.PersonAgent.DeleteConsentPerson(System.Int32)
  - SuperOffice.CRM.Services.PersonAgent.DeleteExpired
  - SuperOffice.CRM.Services.PersonAgent.DeletePersonEntity(System.Int32)
  - SuperOffice.CRM.Services.PersonAgent.DeleteTemporaryKeysOfDomain(SuperOffice.Data.TemporaryKeyDomain,System.Int32)
  - SuperOffice.CRM.Services.PersonAgent.GetAddress(System.Int32)
  - SuperOffice.CRM.Services.PersonAgent.GetAddressByCountry(System.Int32,System.Int32)
  - SuperOffice.CRM.Services.PersonAgent.GetBestSoLanguageForTemplate(System.Int32,System.Int32)
  - SuperOffice.CRM.Services.PersonAgent.GetColleagues
  - SuperOffice.CRM.Services.PersonAgent.GetColleaguesByDepartment(System.Int32)
  - SuperOffice.CRM.Services.PersonAgent.GetColleaguesBySource(SuperOffice.CRM.Services.Util.AssociateSourceType,System.Int32)
  - SuperOffice.CRM.Services.PersonAgent.GetConsentInfos(System.Int32)
  - SuperOffice.CRM.Services.PersonAgent.GetConsentPerson(System.Int32)
  - SuperOffice.CRM.Services.PersonAgent.GetMyOwner
  - SuperOffice.CRM.Services.PersonAgent.GetMyPerson
  - SuperOffice.CRM.Services.PersonAgent.GetOwnerOnPersonId(System.Int32)
  - SuperOffice.CRM.Services.PersonAgent.GetPerson(System.Int32)
  - SuperOffice.CRM.Services.PersonAgent.GetPersonEntity(System.Int32)
  - SuperOffice.CRM.Services.PersonAgent.GetPersonImage(System.Int32)
  - SuperOffice.CRM.Services.PersonAgent.GetPersonList(System.Int32[])
  - SuperOffice.CRM.Services.PersonAgent.GetPersonsFromContact(System.Int32)
  - SuperOffice.CRM.Services.PersonAgent.GetPersonsFromProject(System.Int32)
  - SuperOffice.CRM.Services.PersonAgent.GetPersonSummary(System.Int32,System.Int32)
  - SuperOffice.CRM.Services.PersonAgent.GetPhones(System.Int32)
  - SuperOffice.CRM.Services.PersonAgent.GetSalesRep(System.String,System.String,System.String,System.String,System.String)
  - SuperOffice.CRM.Services.PersonAgent.HasConsent(System.Int32,System.String)
  - SuperOffice.CRM.Services.PersonAgent.IsNumberValid(System.Int32,System.String)
  - SuperOffice.CRM.Services.PersonAgent.Merge(System.Int32,System.Int32,System.DateTime,System.Boolean,System.Boolean)
  - SuperOffice.CRM.Services.PersonAgent.Move(System.Int32,System.Int32,System.DateTime)
  - SuperOffice.CRM.Services.PersonAgent.NormalizeRanks(System.Int32)
  - SuperOffice.CRM.Services.PersonAgent.RemoveConsent(System.Int32,System.String)
  - SuperOffice.CRM.Services.PersonAgent.ResolvePersonFromInfo(System.Int32,System.String,System.String[],System.String[])
  - SuperOffice.CRM.Services.PersonAgent.SaveConsentPerson(SuperOffice.CRM.Services.ConsentPerson)
  - SuperOffice.CRM.Services.PersonAgent.SavePersonEntity(SuperOffice.CRM.Services.PersonEntity)
  - SuperOffice.CRM.Services.PersonAgent.SendConsentConfirmationEmail(System.Int32,System.String,System.Int32,System.Int32,System.String)
  - SuperOffice.CRM.Services.PersonAgent.SetConsent(System.Int32,System.String,System.String,System.String,System.String)
  - SuperOffice.CRM.Services.PersonAgent.SetPersonImage(System.Int32,System.Drawing.Image)
  - SuperOffice.CRM.Services.PersonAgent.SetPersonRank(System.Int32,System.Int16)
  - SuperOffice.CRM.Services.PersonAgent.Undelete(System.Int32)
  - SuperOffice.CRM.Services.PersonAgent.ValidatePersonEntity(SuperOffice.CRM.Services.PersonEntity)
  langs:
  - csharp
  - vb
  name: PersonAgent
  nameWithType: PersonAgent
  fullName: SuperOffice.CRM.Services.PersonAgent
  type: Class
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nFacade for the Person Agent\nPerson data services.\n"
  example:
  - "\n<pre><code>  using SuperOffice;\n  using SuperOffice.CRM.Services;\n\n  using (SoSession mySession = SoSession.Authenticate(&quot;user&quot;, &quot;pass&quot;))\n  {\n     using (PersonAgent agent = new PersonAgent())\n     {\n        // call methods on agent here...\n     }\n  }</code></pre>\n"
  syntax:
    content: 'public class PersonAgent : AgentBase<IPersonAgent>, IDisposable, IPersonAgent, IAgent'
    content.vb: >-
      Public Class PersonAgent

          Inherits AgentBase(Of IPersonAgent)

          Implements IDisposable, IPersonAgent, IAgent
  inheritance:
  - System.Object
  - SuperOffice.CRM.Services.AgentBase{SuperOffice.CRM.Services.IPersonAgent}
  implements:
  - System.IDisposable
  - SuperOffice.CRM.Services.IPersonAgent
  - SuperOffice.CRM.Services.IAgent
  inheritedMembers:
  - SuperOffice.CRM.Services.AgentBase{SuperOffice.CRM.Services.IPersonAgent}.Dispose
  - SuperOffice.CRM.Services.AgentBase{SuperOffice.CRM.Services.IPersonAgent}.InnerAgent
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Services.PersonAgent.CreateDefaultPersonEntity
  commentId: M:SuperOffice.CRM.Services.PersonAgent.CreateDefaultPersonEntity
  id: CreateDefaultPersonEntity
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultPersonEntity()
  nameWithType: PersonAgent.CreateDefaultPersonEntity()
  fullName: SuperOffice.CRM.Services.PersonAgent.CreateDefaultPersonEntity()
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nLoading default values into a new PersonEntity.\nNetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: public PersonEntity CreateDefaultPersonEntity()
    return:
      type: SuperOffice.CRM.Services.PersonEntity
      description: New PersonEntity with default values
    content.vb: Public Function CreateDefaultPersonEntity As PersonEntity
  overload: SuperOffice.CRM.Services.PersonAgent.CreateDefaultPersonEntity*
  implements:
  - SuperOffice.CRM.Services.IPersonAgent.CreateDefaultPersonEntity
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.PersonAgent.SavePersonEntity(SuperOffice.CRM.Services.PersonEntity)
  commentId: M:SuperOffice.CRM.Services.PersonAgent.SavePersonEntity(SuperOffice.CRM.Services.PersonEntity)
  id: SavePersonEntity(SuperOffice.CRM.Services.PersonEntity)
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: SavePersonEntity(PersonEntity)
  nameWithType: PersonAgent.SavePersonEntity(PersonEntity)
  fullName: SuperOffice.CRM.Services.PersonAgent.SavePersonEntity(SuperOffice.CRM.Services.PersonEntity)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nUpdates the existing PersonEntity or creates a new PersonEntity if the id parameter is empty\n"
  syntax:
    content: public PersonEntity SavePersonEntity(PersonEntity personEntity)
    parameters:
    - id: personEntity
      type: SuperOffice.CRM.Services.PersonEntity
      description: The PersonEntity that is saved.
    return:
      type: SuperOffice.CRM.Services.PersonEntity
      description: New or updated PersonEntity
    content.vb: Public Function SavePersonEntity(personEntity As PersonEntity) As PersonEntity
  overload: SuperOffice.CRM.Services.PersonAgent.SavePersonEntity*
  implements:
  - SuperOffice.CRM.Services.IPersonAgent.SavePersonEntity(SuperOffice.CRM.Services.PersonEntity)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.PersonAgent.DeletePersonEntity(System.Int32)
  commentId: M:SuperOffice.CRM.Services.PersonAgent.DeletePersonEntity(System.Int32)
  id: DeletePersonEntity(System.Int32)
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: DeletePersonEntity(Int32)
  nameWithType: PersonAgent.DeletePersonEntity(Int32)
  fullName: SuperOffice.CRM.Services.PersonAgent.DeletePersonEntity(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nDeletes the PersonEntity\n"
  syntax:
    content: public void DeletePersonEntity(int personEntityId)
    parameters:
    - id: personEntityId
      type: System.Int32
      description: The identity of the PersonEntity
    content.vb: Public Sub DeletePersonEntity(personEntityId As Integer)
  overload: SuperOffice.CRM.Services.PersonAgent.DeletePersonEntity*
  implements:
  - SuperOffice.CRM.Services.IPersonAgent.DeletePersonEntity(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.PersonAgent.CreateDefaultConsentPerson
  commentId: M:SuperOffice.CRM.Services.PersonAgent.CreateDefaultConsentPerson
  id: CreateDefaultConsentPerson
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultConsentPerson()
  nameWithType: PersonAgent.CreateDefaultConsentPerson()
  fullName: SuperOffice.CRM.Services.PersonAgent.CreateDefaultConsentPerson()
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nLoading default values into a new ConsentPerson.\nNetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: public ConsentPerson CreateDefaultConsentPerson()
    return:
      type: SuperOffice.CRM.Services.ConsentPerson
      description: New ConsentPerson with default values
    content.vb: Public Function CreateDefaultConsentPerson As ConsentPerson
  overload: SuperOffice.CRM.Services.PersonAgent.CreateDefaultConsentPerson*
  implements:
  - SuperOffice.CRM.Services.IPersonAgent.CreateDefaultConsentPerson
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.PersonAgent.SaveConsentPerson(SuperOffice.CRM.Services.ConsentPerson)
  commentId: M:SuperOffice.CRM.Services.PersonAgent.SaveConsentPerson(SuperOffice.CRM.Services.ConsentPerson)
  id: SaveConsentPerson(SuperOffice.CRM.Services.ConsentPerson)
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: SaveConsentPerson(ConsentPerson)
  nameWithType: PersonAgent.SaveConsentPerson(ConsentPerson)
  fullName: SuperOffice.CRM.Services.PersonAgent.SaveConsentPerson(SuperOffice.CRM.Services.ConsentPerson)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nUpdates the existing ConsentPerson or creates a new ConsentPerson if the id parameter is empty\n"
  syntax:
    content: public ConsentPerson SaveConsentPerson(ConsentPerson consentPerson)
    parameters:
    - id: consentPerson
      type: SuperOffice.CRM.Services.ConsentPerson
      description: The ConsentPerson that is saved.
    return:
      type: SuperOffice.CRM.Services.ConsentPerson
      description: New or updated ConsentPerson
    content.vb: Public Function SaveConsentPerson(consentPerson As ConsentPerson) As ConsentPerson
  overload: SuperOffice.CRM.Services.PersonAgent.SaveConsentPerson*
  implements:
  - SuperOffice.CRM.Services.IPersonAgent.SaveConsentPerson(SuperOffice.CRM.Services.ConsentPerson)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.PersonAgent.DeleteConsentPerson(System.Int32)
  commentId: M:SuperOffice.CRM.Services.PersonAgent.DeleteConsentPerson(System.Int32)
  id: DeleteConsentPerson(System.Int32)
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: DeleteConsentPerson(Int32)
  nameWithType: PersonAgent.DeleteConsentPerson(Int32)
  fullName: SuperOffice.CRM.Services.PersonAgent.DeleteConsentPerson(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nDeletes the ConsentPerson\n"
  syntax:
    content: public void DeleteConsentPerson(int consentPersonId)
    parameters:
    - id: consentPersonId
      type: System.Int32
      description: The identity of the ConsentPerson
    content.vb: Public Sub DeleteConsentPerson(consentPersonId As Integer)
  overload: SuperOffice.CRM.Services.PersonAgent.DeleteConsentPerson*
  implements:
  - SuperOffice.CRM.Services.IPersonAgent.DeleteConsentPerson(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.PersonAgent.GetPerson(System.Int32)
  commentId: M:SuperOffice.CRM.Services.PersonAgent.GetPerson(System.Int32)
  id: GetPerson(System.Int32)
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: GetPerson(Int32)
  nameWithType: PersonAgent.GetPerson(Int32)
  fullName: SuperOffice.CRM.Services.PersonAgent.GetPerson(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets a Person object.                        \n"
  syntax:
    content: public Person GetPerson(int personId)
    parameters:
    - id: personId
      type: System.Int32
      description: The identifier of the Person object
    return:
      type: SuperOffice.CRM.Services.Person
      description: Person
    content.vb: Public Function GetPerson(personId As Integer) As Person
  overload: SuperOffice.CRM.Services.PersonAgent.GetPerson*
  implements:
  - SuperOffice.CRM.Services.IPersonAgent.GetPerson(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.PersonAgent.GetPersonEntity(System.Int32)
  commentId: M:SuperOffice.CRM.Services.PersonAgent.GetPersonEntity(System.Int32)
  id: GetPersonEntity(System.Int32)
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: GetPersonEntity(Int32)
  nameWithType: PersonAgent.GetPersonEntity(Int32)
  fullName: SuperOffice.CRM.Services.PersonAgent.GetPersonEntity(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets a PersonEntity object.                        \n"
  syntax:
    content: public PersonEntity GetPersonEntity(int personEntityId)
    parameters:
    - id: personEntityId
      type: System.Int32
      description: The identifier of the PersonEntity object
    return:
      type: SuperOffice.CRM.Services.PersonEntity
      description: PersonEntity
    content.vb: Public Function GetPersonEntity(personEntityId As Integer) As PersonEntity
  overload: SuperOffice.CRM.Services.PersonAgent.GetPersonEntity*
  implements:
  - SuperOffice.CRM.Services.IPersonAgent.GetPersonEntity(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.PersonAgent.Undelete(System.Int32)
  commentId: M:SuperOffice.CRM.Services.PersonAgent.Undelete(System.Int32)
  id: Undelete(System.Int32)
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: Undelete(Int32)
  nameWithType: PersonAgent.Undelete(Int32)
  fullName: SuperOffice.CRM.Services.PersonAgent.Undelete(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nThis entity supports Soft Delete. Call this method to Undelete a previously soft-deleted record\n"
  syntax:
    content: public void Undelete(int id)
    parameters:
    - id: id
      type: System.Int32
      description: The primary key of the entity to undelete
    content.vb: Public Sub Undelete(id As Integer)
  overload: SuperOffice.CRM.Services.PersonAgent.Undelete*
  implements:
  - SuperOffice.CRM.Services.IPersonAgent.Undelete(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.PersonAgent.GetMyPerson
  commentId: M:SuperOffice.CRM.Services.PersonAgent.GetMyPerson
  id: GetMyPerson
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: GetMyPerson()
  nameWithType: PersonAgent.GetMyPerson()
  fullName: SuperOffice.CRM.Services.PersonAgent.GetMyPerson()
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets the person info belonging to the currently logged on user.\n"
  syntax:
    content: public PersonEntity GetMyPerson()
    return:
      type: SuperOffice.CRM.Services.PersonEntity
      description: The PersonEntity
    content.vb: Public Function GetMyPerson As PersonEntity
  overload: SuperOffice.CRM.Services.PersonAgent.GetMyPerson*
  implements:
  - SuperOffice.CRM.Services.IPersonAgent.GetMyPerson
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.PersonAgent.GetSalesRep(System.String,System.String,System.String,System.String,System.String)
  commentId: M:SuperOffice.CRM.Services.PersonAgent.GetSalesRep(System.String,System.String,System.String,System.String,System.String)
  id: GetSalesRep(System.String,System.String,System.String,System.String,System.String)
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: GetSalesRep(String, String, String, String, String)
  nameWithType: PersonAgent.GetSalesRep(String, String, String, String, String)
  fullName: SuperOffice.CRM.Services.PersonAgent.GetSalesRep(System.String, System.String, System.String, System.String, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nReturns the sales representative for an external user. If this method is accessed with anonymous authentication the external user is recognized by contact and name, or by email, or phone number. If the external user is recognized as an CRM5 user (internal or external) the input fields can be left blank.\n"
  syntax:
    content: public PersonEntity GetSalesRep(string contactName, string personFirstname, string personLastname, string emailAddress, string phoneNumber)
    parameters:
    - id: contactName
      type: System.String
      description: The company name of the person requesting his sales representative. May be empty if email or phone is provided.
    - id: personFirstname
      type: System.String
      description: The firstname of the person requesting his sales representative. May be empty if email or phone is provided.
    - id: personLastname
      type: System.String
      description: The lastname of the person requesting his sales representative. May be empty if email or phone is provided.
    - id: emailAddress
      type: System.String
      description: The email address of the person requesting his sales representative. May be empty if phone, or contact and person name is provided.
    - id: phoneNumber
      type: System.String
      description: The phone number of the person requesting his sales representative. May be empty if email, or contact and person name is provided.
    return:
      type: SuperOffice.CRM.Services.PersonEntity
      description: The PersonEntity of the sales rep.
    content.vb: Public Function GetSalesRep(contactName As String, personFirstname As String, personLastname As String, emailAddress As String, phoneNumber As String) As PersonEntity
  overload: SuperOffice.CRM.Services.PersonAgent.GetSalesRep*
  implements:
  - SuperOffice.CRM.Services.IPersonAgent.GetSalesRep(System.String,System.String,System.String,System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.PersonAgent.GetPhones(System.Int32)
  commentId: M:SuperOffice.CRM.Services.PersonAgent.GetPhones(System.Int32)
  id: GetPhones(System.Int32)
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: GetPhones(Int32)
  nameWithType: PersonAgent.GetPhones(Int32)
  fullName: SuperOffice.CRM.Services.PersonAgent.GetPhones(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nReturning all phones that belong to a person, ordered by the phone type.\n"
  syntax:
    content: public EntityElement[] GetPhones(int personId)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id
    return:
      type: SuperOffice.CRM.Services.EntityElement[]
      description: An array of Phones
    content.vb: Public Function GetPhones(personId As Integer) As EntityElement()
  overload: SuperOffice.CRM.Services.PersonAgent.GetPhones*
  implements:
  - SuperOffice.CRM.Services.IPersonAgent.GetPhones(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.PersonAgent.ChangeCountry(SuperOffice.CRM.Services.PersonEntity,System.Int32)
  commentId: M:SuperOffice.CRM.Services.PersonAgent.ChangeCountry(SuperOffice.CRM.Services.PersonEntity,System.Int32)
  id: ChangeCountry(SuperOffice.CRM.Services.PersonEntity,System.Int32)
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: ChangeCountry(PersonEntity, Int32)
  nameWithType: PersonAgent.ChangeCountry(PersonEntity, Int32)
  fullName: SuperOffice.CRM.Services.PersonAgent.ChangeCountry(SuperOffice.CRM.Services.PersonEntity, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nChange country regenerates the default values and localized information such as phone number and address format for this entity.\n"
  syntax:
    content: public PersonEntity ChangeCountry(PersonEntity personEntity, int toCountryId)
    parameters:
    - id: personEntity
      type: SuperOffice.CRM.Services.PersonEntity
      description: The PersonEntity to change country on
    - id: toCountryId
      type: System.Int32
      description: The country to switch to
    return:
      type: SuperOffice.CRM.Services.PersonEntity
      description: The PersonEntity
    content.vb: Public Function ChangeCountry(personEntity As PersonEntity, toCountryId As Integer) As PersonEntity
  overload: SuperOffice.CRM.Services.PersonAgent.ChangeCountry*
  implements:
  - SuperOffice.CRM.Services.IPersonAgent.ChangeCountry(SuperOffice.CRM.Services.PersonEntity,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.PersonAgent.GetAddress(System.Int32)
  commentId: M:SuperOffice.CRM.Services.PersonAgent.GetAddress(System.Int32)
  id: GetAddress(System.Int32)
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: GetAddress(Int32)
  nameWithType: PersonAgent.GetAddress(Int32)
  fullName: SuperOffice.CRM.Services.PersonAgent.GetAddress(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets the person&apos;s localized address.\n"
  syntax:
    content: public Address GetAddress(int personId)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id
    return:
      type: SuperOffice.CRM.Services.Address
      description: The address as LocalizedField[][].
    content.vb: Public Function GetAddress(personId As Integer) As Address
  overload: SuperOffice.CRM.Services.PersonAgent.GetAddress*
  implements:
  - SuperOffice.CRM.Services.IPersonAgent.GetAddress(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.PersonAgent.GetAddressByCountry(System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.PersonAgent.GetAddressByCountry(System.Int32,System.Int32)
  id: GetAddressByCountry(System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: GetAddressByCountry(Int32, Int32)
  nameWithType: PersonAgent.GetAddressByCountry(Int32, Int32)
  fullName: SuperOffice.CRM.Services.PersonAgent.GetAddressByCountry(System.Int32, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets the person&apos;s localized address.\n"
  syntax:
    content: public Address GetAddressByCountry(int personId, int countryId)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id
    - id: countryId
      type: System.Int32
    return:
      type: SuperOffice.CRM.Services.Address
      description: The address as LocalizedField[][].
    content.vb: Public Function GetAddressByCountry(personId As Integer, countryId As Integer) As Address
  overload: SuperOffice.CRM.Services.PersonAgent.GetAddressByCountry*
  implements:
  - SuperOffice.CRM.Services.IPersonAgent.GetAddressByCountry(System.Int32,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.PersonAgent.GetPersonImage(System.Int32)
  commentId: M:SuperOffice.CRM.Services.PersonAgent.GetPersonImage(System.Int32)
  id: GetPersonImage(System.Int32)
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: GetPersonImage(Int32)
  nameWithType: PersonAgent.GetPersonImage(Int32)
  fullName: SuperOffice.CRM.Services.PersonAgent.GetPersonImage(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nReturns the person image that is displayed in the CRM application.\n"
  syntax:
    content: public Image GetPersonImage(int personId)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id of the person the image belongs to.
    return:
      type: System.Drawing.Image
      description: The image as a System.Drawing.Image. (If the the image is returned over webservices, the stream is returned as a Base64 encoded string.)
    content.vb: Public Function GetPersonImage(personId As Integer) As Image
  overload: SuperOffice.CRM.Services.PersonAgent.GetPersonImage*
  implements:
  - SuperOffice.CRM.Services.IPersonAgent.GetPersonImage(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.PersonAgent.SetPersonImage(System.Int32,System.Drawing.Image)
  commentId: M:SuperOffice.CRM.Services.PersonAgent.SetPersonImage(System.Int32,System.Drawing.Image)
  id: SetPersonImage(System.Int32,System.Drawing.Image)
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: SetPersonImage(Int32, Image)
  nameWithType: PersonAgent.SetPersonImage(Int32, Image)
  fullName: SuperOffice.CRM.Services.PersonAgent.SetPersonImage(System.Int32, System.Drawing.Image)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nStores the person image that is displayed in the CRM application.\n"
  syntax:
    content: public void SetPersonImage(int personId, Image image)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id of the person the image belongs to.
    - id: image
      type: System.Drawing.Image
      description: The image that is stored on the person (System.Drawing.Image)
    content.vb: Public Sub SetPersonImage(personId As Integer, image As Image)
  overload: SuperOffice.CRM.Services.PersonAgent.SetPersonImage*
  implements:
  - SuperOffice.CRM.Services.IPersonAgent.SetPersonImage(System.Int32,System.Drawing.Image)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.PersonAgent.CreateDefaultByContactId(System.Int32)
  commentId: M:SuperOffice.CRM.Services.PersonAgent.CreateDefaultByContactId(System.Int32)
  id: CreateDefaultByContactId(System.Int32)
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultByContactId(Int32)
  nameWithType: PersonAgent.CreateDefaultByContactId(Int32)
  fullName: SuperOffice.CRM.Services.PersonAgent.CreateDefaultByContactId(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCreates a PersonEntity with default values based on the contactId.\n"
  syntax:
    content: public PersonEntity CreateDefaultByContactId(int contactId)
    parameters:
    - id: contactId
      type: System.Int32
      description: Contact id of the person
    return:
      type: SuperOffice.CRM.Services.PersonEntity
    content.vb: Public Function CreateDefaultByContactId(contactId As Integer) As PersonEntity
  overload: SuperOffice.CRM.Services.PersonAgent.CreateDefaultByContactId*
  implements:
  - SuperOffice.CRM.Services.IPersonAgent.CreateDefaultByContactId(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.PersonAgent.Move(System.Int32,System.Int32,System.DateTime)
  commentId: M:SuperOffice.CRM.Services.PersonAgent.Move(System.Int32,System.Int32,System.DateTime)
  id: Move(System.Int32,System.Int32,System.DateTime)
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: Move(Int32, Int32, DateTime)
  nameWithType: PersonAgent.Move(Int32, Int32, DateTime)
  fullName: SuperOffice.CRM.Services.PersonAgent.Move(System.Int32, System.Int32, System.DateTime)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nMove a person to a specified contact. You must specify the date after which activities will be moved along with the person.\n"
  syntax:
    content: public void Move(int personId, int destinationContactId, DateTime moveAfterDate)
    parameters:
    - id: personId
      type: System.Int32
      description: The identifier for the person
    - id: destinationContactId
      type: System.Int32
      description: The identifier for the contact which the person will be moved to
    - id: moveAfterDate
      type: System.DateTime
      description: Move activites after this date. Activities before this date are left alone.
    content.vb: Public Sub Move(personId As Integer, destinationContactId As Integer, moveAfterDate As Date)
  overload: SuperOffice.CRM.Services.PersonAgent.Move*
  implements:
  - SuperOffice.CRM.Services.IPersonAgent.Move(System.Int32,System.Int32,System.DateTime)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.PersonAgent.Merge(System.Int32,System.Int32,System.DateTime,System.Boolean,System.Boolean)
  commentId: M:SuperOffice.CRM.Services.PersonAgent.Merge(System.Int32,System.Int32,System.DateTime,System.Boolean,System.Boolean)
  id: Merge(System.Int32,System.Int32,System.DateTime,System.Boolean,System.Boolean)
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: Merge(Int32, Int32, DateTime, Boolean, Boolean)
  nameWithType: PersonAgent.Merge(Int32, Int32, DateTime, Boolean, Boolean)
  fullName: SuperOffice.CRM.Services.PersonAgent.Merge(System.Int32, System.Int32, System.DateTime, System.Boolean, System.Boolean)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nMerge two persons. The destination person will remain. You must specify the date after which activities will be moved along with the person.\n"
  syntax:
    content: public void Merge(int sourcePersonId, int destinationPersonId, DateTime moveAfterDate, bool deleteSource, bool replaceEmptyFieldsOnDestination)
    parameters:
    - id: sourcePersonId
      type: System.Int32
      description: The identifier for the person which will be merged into the destination person. The source person is deleted/marked retired after the merge.
    - id: destinationPersonId
      type: System.Int32
      description: The identifier for the person which will remain after the merge. The target person is updated.
    - id: moveAfterDate
      type: System.DateTime
      description: Merge activites after this date. Activities before this date are left alone.
    - id: deleteSource
      type: System.Boolean
      description: If true, the source person will be deleted after the merge. If false, it will have its retired flag set
    - id: replaceEmptyFieldsOnDestination
      type: System.Boolean
      description: If true, empty fields on destination will be replaced by values from source.
    content.vb: Public Sub Merge(sourcePersonId As Integer, destinationPersonId As Integer, moveAfterDate As Date, deleteSource As Boolean, replaceEmptyFieldsOnDestination As Boolean)
  overload: SuperOffice.CRM.Services.PersonAgent.Merge*
  implements:
  - SuperOffice.CRM.Services.IPersonAgent.Merge(System.Int32,System.Int32,System.DateTime,System.Boolean,System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.PersonAgent.CreateDefaultFromCredential(System.Int32,System.String,System.String,System.String)
  commentId: M:SuperOffice.CRM.Services.PersonAgent.CreateDefaultFromCredential(System.Int32,System.String,System.String,System.String)
  id: CreateDefaultFromCredential(System.Int32,System.String,System.String,System.String)
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultFromCredential(Int32, String, String, String)
  nameWithType: PersonAgent.CreateDefaultFromCredential(Int32, String, String, String)
  fullName: SuperOffice.CRM.Services.PersonAgent.CreateDefaultFromCredential(System.Int32, System.String, System.String, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCreates a PersonEntity with default values based on the contactId and credentials.\n"
  syntax:
    content: public PersonEntity CreateDefaultFromCredential(int contactId, string credentialType, string credentialValue, string credentialDisplayValue)
    parameters:
    - id: contactId
      type: System.Int32
      description: Contact id of the person
    - id: credentialType
      type: System.String
      description: Type of credentials, corresponding to name of plugin and type in the credentials table.
    - id: credentialValue
      type: System.String
      description: This is the actuall value of the credentials.  This will typically be the password or teh users SID in active directory
    - id: credentialDisplayValue
      type: System.String
      description: The value displayed to the user. this will typically be the users login name in active directory.
    return:
      type: SuperOffice.CRM.Services.PersonEntity
    content.vb: Public Function CreateDefaultFromCredential(contactId As Integer, credentialType As String, credentialValue As String, credentialDisplayValue As String) As PersonEntity
  overload: SuperOffice.CRM.Services.PersonAgent.CreateDefaultFromCredential*
  implements:
  - SuperOffice.CRM.Services.IPersonAgent.CreateDefaultFromCredential(System.Int32,System.String,System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.PersonAgent.IsNumberValid(System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.PersonAgent.IsNumberValid(System.Int32,System.String)
  id: IsNumberValid(System.Int32,System.String)
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: IsNumberValid(Int32, String)
  nameWithType: PersonAgent.IsNumberValid(Int32, String)
  fullName: SuperOffice.CRM.Services.PersonAgent.IsNumberValid(System.Int32, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nChecks if the number is unique or required.  The setting is configured from admin under system options.\n"
  syntax:
    content: public bool IsNumberValid(int contactId, string number)
    parameters:
    - id: contactId
      type: System.Int32
    - id: number
      type: System.String
      description: Number to check.
    return:
      type: System.Boolean
      description: True if number is ok (passes uniqueness/required checks)
    content.vb: Public Function IsNumberValid(contactId As Integer, number As String) As Boolean
  overload: SuperOffice.CRM.Services.PersonAgent.IsNumberValid*
  implements:
  - SuperOffice.CRM.Services.IPersonAgent.IsNumberValid(System.Int32,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.PersonAgent.SetConsent(System.Int32,System.String,System.String,System.String,System.String)
  commentId: M:SuperOffice.CRM.Services.PersonAgent.SetConsent(System.Int32,System.String,System.String,System.String,System.String)
  id: SetConsent(System.Int32,System.String,System.String,System.String,System.String)
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: SetConsent(Int32, String, String, String, String)
  nameWithType: PersonAgent.SetConsent(Int32, String, String, String, String)
  fullName: SuperOffice.CRM.Services.PersonAgent.SetConsent(System.Int32, System.String, System.String, System.String, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSet a specified type of consent on the person.\n"
  syntax:
    content: public void SetConsent(int personId, string purpose, string source, string legalBase, string comment)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id
    - id: purpose
      type: System.String
      description: The Key of the purpose this affects. e.g. &apos;STORE&apos; or &apos;EMARKETING&apos;.
    - id: source
      type: System.String
      description: The Key of the source of this consent. e.g. &apos;USER&apos;, &apos;WEBFORM&apos; or &apos;API&apos;.
    - id: legalBase
      type: System.String
      description: The Key of the legal base for this consent. e.g. &apos;61A&apos;, &apos;61B&apos;, &apos;61F&apos;
    - id: comment
      type: System.String
      description: A comment regarding this consent. May be null or empty.
    content.vb: Public Sub SetConsent(personId As Integer, purpose As String, source As String, legalBase As String, comment As String)
  overload: SuperOffice.CRM.Services.PersonAgent.SetConsent*
  implements:
  - SuperOffice.CRM.Services.IPersonAgent.SetConsent(System.Int32,System.String,System.String,System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.PersonAgent.RemoveConsent(System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.PersonAgent.RemoveConsent(System.Int32,System.String)
  id: RemoveConsent(System.Int32,System.String)
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: RemoveConsent(Int32, String)
  nameWithType: PersonAgent.RemoveConsent(Int32, String)
  fullName: SuperOffice.CRM.Services.PersonAgent.RemoveConsent(System.Int32, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nTurn off consent for a specified person and purpose.\n"
  syntax:
    content: public void RemoveConsent(int personId, string purpose)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id
    - id: purpose
      type: System.String
      description: The key of the purpose to remove. (e.g. &apos;STORE&apos; or &apos;EMARKETING&apos;)
    content.vb: Public Sub RemoveConsent(personId As Integer, purpose As String)
  overload: SuperOffice.CRM.Services.PersonAgent.RemoveConsent*
  implements:
  - SuperOffice.CRM.Services.IPersonAgent.RemoveConsent(System.Int32,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.PersonAgent.HasConsent(System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.PersonAgent.HasConsent(System.Int32,System.String)
  id: HasConsent(System.Int32,System.String)
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: HasConsent(Int32, String)
  nameWithType: PersonAgent.HasConsent(Int32, String)
  fullName: SuperOffice.CRM.Services.PersonAgent.HasConsent(System.Int32, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCheck if consent has been given by a specified person, for a specific purpose. Withdraw consents return FALSE.\n"
  syntax:
    content: public bool HasConsent(int personId, string purpose)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id
    - id: purpose
      type: System.String
      description: The key of the purpose to check. (e.g. &apos;STORE&apos; or &apos;EMARKETING&apos;)
    return:
      type: System.Boolean
      description: True if the person has consented to the given purpose.
    content.vb: Public Function HasConsent(personId As Integer, purpose As String) As Boolean
  overload: SuperOffice.CRM.Services.PersonAgent.HasConsent*
  implements:
  - SuperOffice.CRM.Services.IPersonAgent.HasConsent(System.Int32,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.PersonAgent.GetConsentInfos(System.Int32)
  commentId: M:SuperOffice.CRM.Services.PersonAgent.GetConsentInfos(System.Int32)
  id: GetConsentInfos(System.Int32)
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: GetConsentInfos(Int32)
  nameWithType: PersonAgent.GetConsentInfos(Int32)
  fullName: SuperOffice.CRM.Services.PersonAgent.GetConsentInfos(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet all consent information for a given person. May include withdrawn consents (check \n"
  syntax:
    content: public ConsentInfo[] GetConsentInfos(int personId)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id to get consents for
    return:
      type: SuperOffice.CRM.Services.ConsentInfo[]
      description: List of consents recorded on this person
    content.vb: Public Function GetConsentInfos(personId As Integer) As ConsentInfo()
  overload: SuperOffice.CRM.Services.PersonAgent.GetConsentInfos*
  implements:
  - SuperOffice.CRM.Services.IPersonAgent.GetConsentInfos(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.PersonAgent.SendConsentConfirmationEmail(System.Int32,System.String,System.Int32,System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.PersonAgent.SendConsentConfirmationEmail(System.Int32,System.String,System.Int32,System.Int32,System.String)
  id: SendConsentConfirmationEmail(System.Int32,System.String,System.Int32,System.Int32,System.String)
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: SendConsentConfirmationEmail(Int32, String, Int32, Int32, String)
  nameWithType: PersonAgent.SendConsentConfirmationEmail(Int32, String, Int32, Int32, String)
  fullName: SuperOffice.CRM.Services.PersonAgent.SendConsentConfirmationEmail(System.Int32, System.String, System.Int32, System.Int32, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSend confirmation email to the provided person, email address (id), using the document template\n"
  syntax:
    content: public void SendConsentConfirmationEmail(int personId, string emailAddress, int emailTemplateId, int cultureLcidId, string subject)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id
    - id: emailAddress
      type: System.String
      description: The email address to send to.
    - id: emailTemplateId
      type: System.Int32
      description: The id of the email template (doctmpl_id)
    - id: cultureLcidId
      type: System.Int32
      description: The id of the culture (LCID)
    - id: subject
      type: System.String
      description: Optional email subject
    content.vb: Public Sub SendConsentConfirmationEmail(personId As Integer, emailAddress As String, emailTemplateId As Integer, cultureLcidId As Integer, subject As String)
  overload: SuperOffice.CRM.Services.PersonAgent.SendConsentConfirmationEmail*
  implements:
  - SuperOffice.CRM.Services.IPersonAgent.SendConsentConfirmationEmail(System.Int32,System.String,System.Int32,System.Int32,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.PersonAgent.ResolvePersonFromInfo(System.Int32,System.String,System.String[],System.String[])
  commentId: M:SuperOffice.CRM.Services.PersonAgent.ResolvePersonFromInfo(System.Int32,System.String,System.String[],System.String[])
  id: ResolvePersonFromInfo(System.Int32,System.String,System.String[],System.String[])
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: ResolvePersonFromInfo(Int32, String, String[], String[])
  nameWithType: PersonAgent.ResolvePersonFromInfo(Int32, String, String[], String[])
  fullName: SuperOffice.CRM.Services.PersonAgent.ResolvePersonFromInfo(System.Int32, System.String, System.String[], System.String[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet a person from the provided information. If the person does not exist, it will be created on demand.\n"
  syntax:
    content: public ResolvedPerson ResolvePersonFromInfo(int contactId, string personName, string[] phoneNumbers, string[] emails)
    parameters:
    - id: contactId
      type: System.Int32
      description: The contact Id of the contact which the person belongs to. Cannot be 0.
    - id: personName
      type: System.String
      description: The full name of the person to be resolved. Optional.
    - id: phoneNumbers
      type: System.String[]
      description: Phone numbers registered on the person. Optional.
    - id: emails
      type: System.String[]
      description: Email-addresses registered on the person. Optional.
    return:
      type: SuperOffice.CRM.Services.ResolvedPerson
      description: The results of the resolve-operation.
    content.vb: Public Function ResolvePersonFromInfo(contactId As Integer, personName As String, phoneNumbers As String(), emails As String()) As ResolvedPerson
  overload: SuperOffice.CRM.Services.PersonAgent.ResolvePersonFromInfo*
  implements:
  - SuperOffice.CRM.Services.IPersonAgent.ResolvePersonFromInfo(System.Int32,System.String,System.String[],System.String[])
  nameWithType.vb: PersonAgent.ResolvePersonFromInfo(Int32, String, String(), String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.Services.PersonAgent.ResolvePersonFromInfo(System.Int32, System.String, System.String(), System.String())
  name.vb: ResolvePersonFromInfo(Int32, String, String(), String())
- uid: SuperOffice.CRM.Services.PersonAgent.AddEmailAddressToPerson(System.Int32,System.String,System.Boolean)
  commentId: M:SuperOffice.CRM.Services.PersonAgent.AddEmailAddressToPerson(System.Int32,System.String,System.Boolean)
  id: AddEmailAddressToPerson(System.Int32,System.String,System.Boolean)
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: AddEmailAddressToPerson(Int32, String, Boolean)
  nameWithType: PersonAgent.AddEmailAddressToPerson(Int32, String, Boolean)
  fullName: SuperOffice.CRM.Services.PersonAgent.AddEmailAddressToPerson(System.Int32, System.String, System.Boolean)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSets the primary email address on person, possibly re-ranking email addresses accordingly.\n"
  syntax:
    content: public void AddEmailAddressToPerson(int personId, string emailAddress, bool setAsPrimaryEmail)
    parameters:
    - id: personId
      type: System.Int32
      description: Person id of the person
    - id: emailAddress
      type: System.String
      description: The email address to set as primary email address
    - id: setAsPrimaryEmail
      type: System.Boolean
      description: True if the address shall be primary email address (have rank == 1)
    content.vb: Public Sub AddEmailAddressToPerson(personId As Integer, emailAddress As String, setAsPrimaryEmail As Boolean)
  overload: SuperOffice.CRM.Services.PersonAgent.AddEmailAddressToPerson*
  implements:
  - SuperOffice.CRM.Services.IPersonAgent.AddEmailAddressToPerson(System.Int32,System.String,System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.PersonAgent.CreateTemporaryKey(SuperOffice.Data.TemporaryKeyDomain,System.Int32,System.Int32,System.DateTime)
  commentId: M:SuperOffice.CRM.Services.PersonAgent.CreateTemporaryKey(SuperOffice.Data.TemporaryKeyDomain,System.Int32,System.Int32,System.DateTime)
  id: CreateTemporaryKey(SuperOffice.Data.TemporaryKeyDomain,System.Int32,System.Int32,System.DateTime)
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: CreateTemporaryKey(TemporaryKeyDomain, Int32, Int32, DateTime)
  nameWithType: PersonAgent.CreateTemporaryKey(TemporaryKeyDomain, Int32, Int32, DateTime)
  fullName: SuperOffice.CRM.Services.PersonAgent.CreateTemporaryKey(SuperOffice.Data.TemporaryKeyDomain, System.Int32, System.Int32, System.DateTime)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCreate a temporary key in the database from the given parameters and return the key string. Used for temporary keys for accessing customer centric functionality, such as UpdateSubscriptions.\n"
  syntax:
    content: public string CreateTemporaryKey(TemporaryKeyDomain domain, int targetId, int personId, DateTime expires)
    parameters:
    - id: domain
      type: SuperOffice.Data.TemporaryKeyDomain
      description: The domain this key is for
    - id: targetId
      type: System.Int32
      description: The primary key of the entity this is for. Depends on domain.
    - id: personId
      type: System.Int32
      description: The person this key is for. May be null.
    - id: expires
      type: System.DateTime
      description: When the key will expire (servers local time)
    return:
      type: System.String
      description: The key as base64, ready to be used e.g. in a URL
    content.vb: Public Function CreateTemporaryKey(domain As TemporaryKeyDomain, targetId As Integer, personId As Integer, expires As Date) As String
  overload: SuperOffice.CRM.Services.PersonAgent.CreateTemporaryKey*
  implements:
  - SuperOffice.CRM.Services.IPersonAgent.CreateTemporaryKey(SuperOffice.Data.TemporaryKeyDomain,System.Int32,System.Int32,System.DateTime)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.PersonAgent.CheckTemporaryKey(System.String)
  commentId: M:SuperOffice.CRM.Services.PersonAgent.CheckTemporaryKey(System.String)
  id: CheckTemporaryKey(System.String)
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: CheckTemporaryKey(String)
  nameWithType: PersonAgent.CheckTemporaryKey(String)
  fullName: SuperOffice.CRM.Services.PersonAgent.CheckTemporaryKey(System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCheck a temporary key for validity, and in case it is valid, return its domain, targetId and personId\n"
  syntax:
    content: public TemporaryKeyInfo CheckTemporaryKey(string temporaryKey)
    parameters:
    - id: temporaryKey
      type: System.String
      description: The base64 encoded key value, as returned by CreateTemporaryKey
    return:
      type: SuperOffice.CRM.Services.TemporaryKeyInfo
      description: The info about the temporary key. Domain will be Unknown if key is not valid.
    content.vb: Public Function CheckTemporaryKey(temporaryKey As String) As TemporaryKeyInfo
  overload: SuperOffice.CRM.Services.PersonAgent.CheckTemporaryKey*
  implements:
  - SuperOffice.CRM.Services.IPersonAgent.CheckTemporaryKey(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.PersonAgent.DeleteTemporaryKeysOfDomain(SuperOffice.Data.TemporaryKeyDomain,System.Int32)
  commentId: M:SuperOffice.CRM.Services.PersonAgent.DeleteTemporaryKeysOfDomain(SuperOffice.Data.TemporaryKeyDomain,System.Int32)
  id: DeleteTemporaryKeysOfDomain(SuperOffice.Data.TemporaryKeyDomain,System.Int32)
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: DeleteTemporaryKeysOfDomain(TemporaryKeyDomain, Int32)
  nameWithType: PersonAgent.DeleteTemporaryKeysOfDomain(TemporaryKeyDomain, Int32)
  fullName: SuperOffice.CRM.Services.PersonAgent.DeleteTemporaryKeysOfDomain(SuperOffice.Data.TemporaryKeyDomain, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nDelete all temporary keys for a given domain and person\n"
  syntax:
    content: public void DeleteTemporaryKeysOfDomain(TemporaryKeyDomain domain, int personId)
    parameters:
    - id: domain
      type: SuperOffice.Data.TemporaryKeyDomain
      description: The domain type to delete
    - id: personId
      type: System.Int32
      description: The person for which to delete the keys
    content.vb: Public Sub DeleteTemporaryKeysOfDomain(domain As TemporaryKeyDomain, personId As Integer)
  overload: SuperOffice.CRM.Services.PersonAgent.DeleteTemporaryKeysOfDomain*
  implements:
  - SuperOffice.CRM.Services.IPersonAgent.DeleteTemporaryKeysOfDomain(SuperOffice.Data.TemporaryKeyDomain,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.PersonAgent.DeleteExpired
  commentId: M:SuperOffice.CRM.Services.PersonAgent.DeleteExpired
  id: DeleteExpired
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: DeleteExpired()
  nameWithType: PersonAgent.DeleteExpired()
  fullName: SuperOffice.CRM.Services.PersonAgent.DeleteExpired()
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nTrigger deletion of persons that has been (soft) deleted and have timed out the expiry period (the SoftDeleteRetention preference).\n"
  syntax:
    content: public void DeleteExpired()
    content.vb: Public Sub DeleteExpired
  overload: SuperOffice.CRM.Services.PersonAgent.DeleteExpired*
  implements:
  - SuperOffice.CRM.Services.IPersonAgent.DeleteExpired
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.PersonAgent.GetPersonSummary(System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.PersonAgent.GetPersonSummary(System.Int32,System.Int32)
  id: GetPersonSummary(System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: GetPersonSummary(Int32, Int32)
  nameWithType: PersonAgent.GetPersonSummary(Int32, Int32)
  fullName: SuperOffice.CRM.Services.PersonAgent.GetPersonSummary(System.Int32, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet summary of person and recent activity.\n"
  syntax:
    content: public PersonSummary GetPersonSummary(int personId, int limit)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id to summarize.
    - id: limit
      type: System.Int32
      description: Max number of items to include in summary lists.
    return:
      type: SuperOffice.CRM.Services.PersonSummary
      description: Summary of person, with recent requests, sales, follow-ups, chats.
    content.vb: Public Function GetPersonSummary(personId As Integer, limit As Integer) As PersonSummary
  overload: SuperOffice.CRM.Services.PersonAgent.GetPersonSummary*
  implements:
  - SuperOffice.CRM.Services.IPersonAgent.GetPersonSummary(System.Int32,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.PersonAgent.AddBounce(System.String)
  commentId: M:SuperOffice.CRM.Services.PersonAgent.AddBounce(System.String)
  id: AddBounce(System.String)
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: AddBounce(String)
  nameWithType: PersonAgent.AddBounce(String)
  fullName: SuperOffice.CRM.Services.PersonAgent.AddBounce(System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nAdd a bounce count on the email address if it exists\n"
  syntax:
    content: public void AddBounce(string emailAddress)
    parameters:
    - id: emailAddress
      type: System.String
      description: The email address which we want to add a bounce count to
    content.vb: Public Sub AddBounce(emailAddress As String)
  overload: SuperOffice.CRM.Services.PersonAgent.AddBounce*
  implements:
  - SuperOffice.CRM.Services.IPersonAgent.AddBounce(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.PersonAgent.ValidatePersonEntity(SuperOffice.CRM.Services.PersonEntity)
  commentId: M:SuperOffice.CRM.Services.PersonAgent.ValidatePersonEntity(SuperOffice.CRM.Services.PersonEntity)
  id: ValidatePersonEntity(SuperOffice.CRM.Services.PersonEntity)
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: ValidatePersonEntity(PersonEntity)
  nameWithType: PersonAgent.ValidatePersonEntity(PersonEntity)
  fullName: SuperOffice.CRM.Services.PersonAgent.ValidatePersonEntity(SuperOffice.CRM.Services.PersonEntity)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCheck that entity is ready for saving, return error messages by field.\n"
  syntax:
    content: public StringDictionary ValidatePersonEntity(PersonEntity personEntity)
    parameters:
    - id: personEntity
      type: SuperOffice.CRM.Services.PersonEntity
      description: Entity to be checked for errors.
    return:
      type: SuperOffice.CRM.Services.StringDictionary
      description: Error messages tagged by field.
    content.vb: Public Function ValidatePersonEntity(personEntity As PersonEntity) As StringDictionary
  overload: SuperOffice.CRM.Services.PersonAgent.ValidatePersonEntity*
  implements:
  - SuperOffice.CRM.Services.IPersonAgent.ValidatePersonEntity(SuperOffice.CRM.Services.PersonEntity)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.PersonAgent.AddBounceWithCount(System.String,System.Int32)
  commentId: M:SuperOffice.CRM.Services.PersonAgent.AddBounceWithCount(System.String,System.Int32)
  id: AddBounceWithCount(System.String,System.Int32)
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: AddBounceWithCount(String, Int32)
  nameWithType: PersonAgent.AddBounceWithCount(String, Int32)
  fullName: SuperOffice.CRM.Services.PersonAgent.AddBounceWithCount(System.String, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nAdd a number of bounce counts on the email address if it exists\n"
  syntax:
    content: public void AddBounceWithCount(string emailAddress, int counts)
    parameters:
    - id: emailAddress
      type: System.String
      description: The email address which we want to add bounce counts to
    - id: counts
      type: System.Int32
      description: The number of bounce counts to add
    content.vb: Public Sub AddBounceWithCount(emailAddress As String, counts As Integer)
  overload: SuperOffice.CRM.Services.PersonAgent.AddBounceWithCount*
  implements:
  - SuperOffice.CRM.Services.IPersonAgent.AddBounceWithCount(System.String,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.PersonAgent.GetBestSoLanguageForTemplate(System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.PersonAgent.GetBestSoLanguageForTemplate(System.Int32,System.Int32)
  id: GetBestSoLanguageForTemplate(System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: GetBestSoLanguageForTemplate(Int32, Int32)
  nameWithType: PersonAgent.GetBestSoLanguageForTemplate(Int32, Int32)
  fullName: SuperOffice.CRM.Services.PersonAgent.GetBestSoLanguageForTemplate(System.Int32, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet the best language for this person on this template\n"
  syntax:
    content: public string GetBestSoLanguageForTemplate(int personId, int templateId)
    parameters:
    - id: personId
      type: System.Int32
      description: The id of the person
    - id: templateId
      type: System.Int32
      description: The id of the template to find languages on
    return:
      type: System.String
      description: The solang code for best language, empty string if no best language found
    content.vb: Public Function GetBestSoLanguageForTemplate(personId As Integer, templateId As Integer) As String
  overload: SuperOffice.CRM.Services.PersonAgent.GetBestSoLanguageForTemplate*
  implements:
  - SuperOffice.CRM.Services.IPersonAgent.GetBestSoLanguageForTemplate(System.Int32,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.PersonAgent.AddBounceWithDetails(System.String,System.Int32,System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.PersonAgent.AddBounceWithDetails(System.String,System.Int32,System.Int32,System.String)
  id: AddBounceWithDetails(System.String,System.Int32,System.Int32,System.String)
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: AddBounceWithDetails(String, Int32, Int32, String)
  nameWithType: PersonAgent.AddBounceWithDetails(String, Int32, Int32, String)
  fullName: SuperOffice.CRM.Services.PersonAgent.AddBounceWithDetails(System.String, System.Int32, System.Int32, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nAdd a number of bounce counts on the email address if it exists, and with possible bounce code and reason\n"
  syntax:
    content: public void AddBounceWithDetails(string emailAddress, int counts, int code, string reason)
    parameters:
    - id: emailAddress
      type: System.String
      description: The email address which we want to add bounce counts to
    - id: counts
      type: System.Int32
      description: The number of bounce counts to add
    - id: code
      type: System.Int32
      description: A numeric code representing the bounce reason
    - id: reason
      type: System.String
      description: A textual tag representing the bounce reason
    content.vb: Public Sub AddBounceWithDetails(emailAddress As String, counts As Integer, code As Integer, reason As String)
  overload: SuperOffice.CRM.Services.PersonAgent.AddBounceWithDetails*
  implements:
  - SuperOffice.CRM.Services.IPersonAgent.AddBounceWithDetails(System.String,System.Int32,System.Int32,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.PersonAgent.GetPersonList(System.Int32[])
  commentId: M:SuperOffice.CRM.Services.PersonAgent.GetPersonList(System.Int32[])
  id: GetPersonList(System.Int32[])
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: GetPersonList(Int32[])
  nameWithType: PersonAgent.GetPersonList(Int32[])
  fullName: SuperOffice.CRM.Services.PersonAgent.GetPersonList(System.Int32[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets an array of Person objects.                        \n"
  syntax:
    content: public Person[] GetPersonList(int[] personIds)
    parameters:
    - id: personIds
      type: System.Int32[]
      description: The identifiers of the Person object
    return:
      type: SuperOffice.CRM.Services.Person[]
      description: Array of Person objects
    content.vb: Public Function GetPersonList(personIds As Integer()) As Person()
  overload: SuperOffice.CRM.Services.PersonAgent.GetPersonList*
  implements:
  - SuperOffice.CRM.Services.IPersonAgent.GetPersonList(System.Int32[])
  nameWithType.vb: PersonAgent.GetPersonList(Int32())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.Services.PersonAgent.GetPersonList(System.Int32())
  name.vb: GetPersonList(Int32())
- uid: SuperOffice.CRM.Services.PersonAgent.GetPersonsFromContact(System.Int32)
  commentId: M:SuperOffice.CRM.Services.PersonAgent.GetPersonsFromContact(System.Int32)
  id: GetPersonsFromContact(System.Int32)
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: GetPersonsFromContact(Int32)
  nameWithType: PersonAgent.GetPersonsFromContact(Int32)
  fullName: SuperOffice.CRM.Services.PersonAgent.GetPersonsFromContact(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nReturns all the persons belonging to a contact.\n"
  syntax:
    content: public Person[] GetPersonsFromContact(int contactId)
    parameters:
    - id: contactId
      type: System.Int32
      description: The project id
    return:
      type: SuperOffice.CRM.Services.Person[]
      description: The persons belonging to a contact.
    content.vb: Public Function GetPersonsFromContact(contactId As Integer) As Person()
  overload: SuperOffice.CRM.Services.PersonAgent.GetPersonsFromContact*
  implements:
  - SuperOffice.CRM.Services.IPersonAgent.GetPersonsFromContact(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.PersonAgent.GetPersonsFromProject(System.Int32)
  commentId: M:SuperOffice.CRM.Services.PersonAgent.GetPersonsFromProject(System.Int32)
  id: GetPersonsFromProject(System.Int32)
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: GetPersonsFromProject(Int32)
  nameWithType: PersonAgent.GetPersonsFromProject(Int32)
  fullName: SuperOffice.CRM.Services.PersonAgent.GetPersonsFromProject(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nReturns all the persons belonging to a project.\n"
  syntax:
    content: public Person[] GetPersonsFromProject(int projectId)
    parameters:
    - id: projectId
      type: System.Int32
      description: The project id
    return:
      type: SuperOffice.CRM.Services.Person[]
      description: The persons belonging to a project.
    content.vb: Public Function GetPersonsFromProject(projectId As Integer) As Person()
  overload: SuperOffice.CRM.Services.PersonAgent.GetPersonsFromProject*
  implements:
  - SuperOffice.CRM.Services.IPersonAgent.GetPersonsFromProject(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.PersonAgent.GetColleagues
  commentId: M:SuperOffice.CRM.Services.PersonAgent.GetColleagues
  id: GetColleagues
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: GetColleagues()
  nameWithType: PersonAgent.GetColleagues()
  fullName: SuperOffice.CRM.Services.PersonAgent.GetColleagues()
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets the persons working in the same company as the logged on user.\n"
  syntax:
    content: public Person[] GetColleagues()
    return:
      type: SuperOffice.CRM.Services.Person[]
      description: Colleagues.
    content.vb: Public Function GetColleagues As Person()
  overload: SuperOffice.CRM.Services.PersonAgent.GetColleagues*
  implements:
  - SuperOffice.CRM.Services.IPersonAgent.GetColleagues
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.PersonAgent.GetColleaguesByDepartment(System.Int32)
  commentId: M:SuperOffice.CRM.Services.PersonAgent.GetColleaguesByDepartment(System.Int32)
  id: GetColleaguesByDepartment(System.Int32)
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: GetColleaguesByDepartment(Int32)
  nameWithType: PersonAgent.GetColleaguesByDepartment(Int32)
  fullName: SuperOffice.CRM.Services.PersonAgent.GetColleaguesByDepartment(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets the persons working in a specific department in the same company as the logged on user. Departments can be retrieved with the PhoneList.DepartmentList service.\n"
  syntax:
    content: public Person[] GetColleaguesByDepartment(int departmentId)
    parameters:
    - id: departmentId
      type: System.Int32
      description: The department id.
    return:
      type: SuperOffice.CRM.Services.Person[]
      description: PersonList with colleagues.
    content.vb: Public Function GetColleaguesByDepartment(departmentId As Integer) As Person()
  overload: SuperOffice.CRM.Services.PersonAgent.GetColleaguesByDepartment*
  implements:
  - SuperOffice.CRM.Services.IPersonAgent.GetColleaguesByDepartment(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.PersonAgent.GetColleaguesBySource(SuperOffice.CRM.Services.Util.AssociateSourceType,System.Int32)
  commentId: M:SuperOffice.CRM.Services.PersonAgent.GetColleaguesBySource(SuperOffice.CRM.Services.Util.AssociateSourceType,System.Int32)
  id: GetColleaguesBySource(SuperOffice.CRM.Services.Util.AssociateSourceType,System.Int32)
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: GetColleaguesBySource(AssociateSourceType, Int32)
  nameWithType: PersonAgent.GetColleaguesBySource(AssociateSourceType, Int32)
  fullName: SuperOffice.CRM.Services.PersonAgent.GetColleaguesBySource(SuperOffice.CRM.Services.Util.AssociateSourceType, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets the persons working in the same company as the logged on user. The list of person could be retrieved from the history list, the diary view list, or from all sources.\n"
  syntax:
    content: public Person[] GetColleaguesBySource(AssociateSourceType sourceType, int count)
    parameters:
    - id: sourceType
      type: SuperOffice.CRM.Services.Util.AssociateSourceType
      description: The “source” the colleagues should be retrieved from. &lt;see cref=&quot;AssociateSourceType&quot;/> for more information.
    - id: count
      type: System.Int32
    return:
      type: SuperOffice.CRM.Services.Person[]
      description: Colleagues.
    content.vb: Public Function GetColleaguesBySource(sourceType As AssociateSourceType, count As Integer) As Person()
  overload: SuperOffice.CRM.Services.PersonAgent.GetColleaguesBySource*
  implements:
  - SuperOffice.CRM.Services.IPersonAgent.GetColleaguesBySource(SuperOffice.CRM.Services.Util.AssociateSourceType,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.PersonAgent.GetMyOwner
  commentId: M:SuperOffice.CRM.Services.PersonAgent.GetMyOwner
  id: GetMyOwner
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: GetMyOwner()
  nameWithType: PersonAgent.GetMyOwner()
  fullName: SuperOffice.CRM.Services.PersonAgent.GetMyOwner()
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet the owner of the logged in person.\n"
  syntax:
    content: public Person GetMyOwner()
    return:
      type: SuperOffice.CRM.Services.Person
      description: Person
    content.vb: Public Function GetMyOwner As Person
  overload: SuperOffice.CRM.Services.PersonAgent.GetMyOwner*
  implements:
  - SuperOffice.CRM.Services.IPersonAgent.GetMyOwner
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.PersonAgent.GetOwnerOnPersonId(System.Int32)
  commentId: M:SuperOffice.CRM.Services.PersonAgent.GetOwnerOnPersonId(System.Int32)
  id: GetOwnerOnPersonId(System.Int32)
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: GetOwnerOnPersonId(Int32)
  nameWithType: PersonAgent.GetOwnerOnPersonId(Int32)
  fullName: SuperOffice.CRM.Services.PersonAgent.GetOwnerOnPersonId(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet the owner of the person by id.\n"
  syntax:
    content: public Person GetOwnerOnPersonId(int personId)
    parameters:
    - id: personId
      type: System.Int32
    return:
      type: SuperOffice.CRM.Services.Person
      description: Person
    content.vb: Public Function GetOwnerOnPersonId(personId As Integer) As Person
  overload: SuperOffice.CRM.Services.PersonAgent.GetOwnerOnPersonId*
  implements:
  - SuperOffice.CRM.Services.IPersonAgent.GetOwnerOnPersonId(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.PersonAgent.ChangePersonRank(System.Int32,System.Boolean)
  commentId: M:SuperOffice.CRM.Services.PersonAgent.ChangePersonRank(System.Int32,System.Boolean)
  id: ChangePersonRank(System.Int32,System.Boolean)
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: ChangePersonRank(Int32, Boolean)
  nameWithType: PersonAgent.ChangePersonRank(Int32, Boolean)
  fullName: SuperOffice.CRM.Services.PersonAgent.ChangePersonRank(System.Int32, System.Boolean)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nMove one person up or down in the ranking in the Person Archive, if possible.&lt;para/>The person record that has rank = 1 is the primary contact for a company, and is the one used in situations where no person has been explicitly chosen (such as in selections).&lt;para/>This method corresponds to the move up/move down functions in the person archive in the contact panel.&lt;para/>This method always affects two records.\n"
  syntax:
    content: public int ChangePersonRank(int personId, bool moveUp)
    parameters:
    - id: personId
      type: System.Int32
      description: Primary key of person record to move up or down. You must have write access both to this record AND to whatever record is adjacent in the direction you want to move.
    - id: moveUp
      type: System.Boolean
      description: If true, the given person is moved to an earlier rank (lower numeric rank value, down to a limit of 1; up in the GUI if sorted by ascending rank). If false, movement is to later priority (higher numeric rank value).
    return:
      type: System.Int32
      description: If movement occurred, the return value will be the ID of the OTHER person that got moved. A GUI should switch the positions of the original person ID and this return value.&lt;para/>If no movement occurred, for any reason,  0 is returned.
    content.vb: Public Function ChangePersonRank(personId As Integer, moveUp As Boolean) As Integer
  overload: SuperOffice.CRM.Services.PersonAgent.ChangePersonRank*
  implements:
  - SuperOffice.CRM.Services.IPersonAgent.ChangePersonRank(System.Int32,System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.PersonAgent.SetPersonRank(System.Int32,System.Int16)
  commentId: M:SuperOffice.CRM.Services.PersonAgent.SetPersonRank(System.Int32,System.Int16)
  id: SetPersonRank(System.Int32,System.Int16)
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: SetPersonRank(Int32, Int16)
  nameWithType: PersonAgent.SetPersonRank(Int32, Int16)
  fullName: SuperOffice.CRM.Services.PersonAgent.SetPersonRank(System.Int32, System.Int16)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nDirectly set the rank field of a person record, adjusting all other person records under the same contact as needed.&lt;para/>This call may affect multiple records, potentially all person records belonging to one contact.&lt;para/>You must have write access for to affected records for this method to succeed.\n"
  syntax:
    content: public bool SetPersonRank(int personId, short desiredRank)
    parameters:
    - id: personId
      type: System.Int32
      description: Id of person to change
    - id: desiredRank
      type: System.Int16
      description: Desired rank to set, legal values are from 1 to the number of person records on this contact. Out of range values will be moved to the closest valid value and processed.
    return:
      type: System.Boolean
      description: 'If movement occurred, or the person already had exactly the desired rank value, then the return value will be true. If movement did not occur, for any other reason, the return value is false. '
    content.vb: Public Function SetPersonRank(personId As Integer, desiredRank As Short) As Boolean
  overload: SuperOffice.CRM.Services.PersonAgent.SetPersonRank*
  implements:
  - SuperOffice.CRM.Services.IPersonAgent.SetPersonRank(System.Int32,System.Int16)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.PersonAgent.NormalizeRanks(System.Int32)
  commentId: M:SuperOffice.CRM.Services.PersonAgent.NormalizeRanks(System.Int32)
  id: NormalizeRanks(System.Int32)
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: NormalizeRanks(Int32)
  nameWithType: PersonAgent.NormalizeRanks(Int32)
  fullName: SuperOffice.CRM.Services.PersonAgent.NormalizeRanks(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nNomralize the ranks for all persons that belong to a contact. This means that the persons will be sorted according to their current rank values, and the ranks will be made monotonically increasing from 1.\n"
  syntax:
    content: public bool NormalizeRanks(int contactId)
    parameters:
    - id: contactId
      type: System.Int32
      description: Id of contact whose persons are to be rank normalized
    return:
      type: System.Boolean
      description: The reutrn value is true if the operation suceeded, either because all persons were already normalized, or because normalization was done. It is false if Sentry blocks any required changes.
    content.vb: Public Function NormalizeRanks(contactId As Integer) As Boolean
  overload: SuperOffice.CRM.Services.PersonAgent.NormalizeRanks*
  implements:
  - SuperOffice.CRM.Services.IPersonAgent.NormalizeRanks(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.PersonAgent.GetConsentPerson(System.Int32)
  commentId: M:SuperOffice.CRM.Services.PersonAgent.GetConsentPerson(System.Int32)
  id: GetConsentPerson(System.Int32)
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: GetConsentPerson(Int32)
  nameWithType: PersonAgent.GetConsentPerson(Int32)
  fullName: SuperOffice.CRM.Services.PersonAgent.GetConsentPerson(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets a ConsentPerson object.                        \n"
  syntax:
    content: public ConsentPerson GetConsentPerson(int consentPersonId)
    parameters:
    - id: consentPersonId
      type: System.Int32
      description: The identifier of the ConsentPerson object
    return:
      type: SuperOffice.CRM.Services.ConsentPerson
      description: ConsentPerson
    content.vb: Public Function GetConsentPerson(consentPersonId As Integer) As ConsentPerson
  overload: SuperOffice.CRM.Services.PersonAgent.GetConsentPerson*
  implements:
  - SuperOffice.CRM.Services.IPersonAgent.GetConsentPerson(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.PersonAgent.#ctor
  commentId: M:SuperOffice.CRM.Services.PersonAgent.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.Services.PersonAgent
  langs:
  - csharp
  - vb
  name: PersonAgent()
  nameWithType: PersonAgent.PersonAgent()
  fullName: SuperOffice.CRM.Services.PersonAgent.PersonAgent()
  type: Constructor
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  syntax:
    content: public PersonAgent()
    content.vb: Public Sub New
  overload: SuperOffice.CRM.Services.PersonAgent.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.CRM.Services.AgentBase{SuperOffice.CRM.Services.IPersonAgent}
  commentId: T:SuperOffice.CRM.Services.AgentBase{SuperOffice.CRM.Services.IPersonAgent}
  parent: SuperOffice.CRM.Services
  definition: SuperOffice.CRM.Services.AgentBase`1
  name: AgentBase<IPersonAgent>
  nameWithType: AgentBase<IPersonAgent>
  fullName: SuperOffice.CRM.Services.AgentBase<SuperOffice.CRM.Services.IPersonAgent>
  nameWithType.vb: AgentBase(Of IPersonAgent)
  fullName.vb: SuperOffice.CRM.Services.AgentBase(Of SuperOffice.CRM.Services.IPersonAgent)
  name.vb: AgentBase(Of IPersonAgent)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.AgentBase`1
    name: AgentBase
    nameWithType: AgentBase
    fullName: SuperOffice.CRM.Services.AgentBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Services.IPersonAgent
    name: IPersonAgent
    nameWithType: IPersonAgent
    fullName: SuperOffice.CRM.Services.IPersonAgent
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Services.AgentBase`1
    name: AgentBase
    nameWithType: AgentBase
    fullName: SuperOffice.CRM.Services.AgentBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Services.IPersonAgent
    name: IPersonAgent
    nameWithType: IPersonAgent
    fullName: SuperOffice.CRM.Services.IPersonAgent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: SuperOffice.CRM.Services.IPersonAgent
  commentId: T:SuperOffice.CRM.Services.IPersonAgent
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: IPersonAgent
  nameWithType: IPersonAgent
  fullName: SuperOffice.CRM.Services.IPersonAgent
- uid: SuperOffice.CRM.Services.IAgent
  commentId: T:SuperOffice.CRM.Services.IAgent
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: IAgent
  nameWithType: IAgent
  fullName: SuperOffice.CRM.Services.IAgent
- uid: SuperOffice.CRM.Services.AgentBase{SuperOffice.CRM.Services.IPersonAgent}.Dispose
  commentId: M:SuperOffice.CRM.Services.AgentBase{SuperOffice.CRM.Services.IPersonAgent}.Dispose
  parent: SuperOffice.CRM.Services.AgentBase{SuperOffice.CRM.Services.IPersonAgent}
  definition: SuperOffice.CRM.Services.AgentBase`1.Dispose
  name: Dispose()
  nameWithType: AgentBase<IPersonAgent>.Dispose()
  fullName: SuperOffice.CRM.Services.AgentBase<SuperOffice.CRM.Services.IPersonAgent>.Dispose()
  nameWithType.vb: AgentBase(Of IPersonAgent).Dispose()
  fullName.vb: SuperOffice.CRM.Services.AgentBase(Of SuperOffice.CRM.Services.IPersonAgent).Dispose()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.AgentBase`1.Dispose
    name: Dispose
    nameWithType: AgentBase<IPersonAgent>.Dispose
    fullName: SuperOffice.CRM.Services.AgentBase<SuperOffice.CRM.Services.IPersonAgent>.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.AgentBase`1.Dispose
    name: Dispose
    nameWithType: AgentBase(Of IPersonAgent).Dispose
    fullName: SuperOffice.CRM.Services.AgentBase(Of SuperOffice.CRM.Services.IPersonAgent).Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.AgentBase{SuperOffice.CRM.Services.IPersonAgent}.InnerAgent
  commentId: P:SuperOffice.CRM.Services.AgentBase{SuperOffice.CRM.Services.IPersonAgent}.InnerAgent
  parent: SuperOffice.CRM.Services.AgentBase{SuperOffice.CRM.Services.IPersonAgent}
  definition: SuperOffice.CRM.Services.AgentBase`1.InnerAgent
  name: InnerAgent
  nameWithType: AgentBase<IPersonAgent>.InnerAgent
  fullName: SuperOffice.CRM.Services.AgentBase<SuperOffice.CRM.Services.IPersonAgent>.InnerAgent
  nameWithType.vb: AgentBase(Of IPersonAgent).InnerAgent
  fullName.vb: SuperOffice.CRM.Services.AgentBase(Of SuperOffice.CRM.Services.IPersonAgent).InnerAgent
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Services.AgentBase`1
  commentId: T:SuperOffice.CRM.Services.AgentBase`1
  isExternal: true
  name: AgentBase<TAgent>
  nameWithType: AgentBase<TAgent>
  fullName: SuperOffice.CRM.Services.AgentBase<TAgent>
  nameWithType.vb: AgentBase(Of TAgent)
  fullName.vb: SuperOffice.CRM.Services.AgentBase(Of TAgent)
  name.vb: AgentBase(Of TAgent)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.AgentBase`1
    name: AgentBase
    nameWithType: AgentBase
    fullName: SuperOffice.CRM.Services.AgentBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TAgent
    nameWithType: TAgent
    fullName: TAgent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Services.AgentBase`1
    name: AgentBase
    nameWithType: AgentBase
    fullName: SuperOffice.CRM.Services.AgentBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAgent
    nameWithType: TAgent
    fullName: TAgent
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.AgentBase`1.Dispose
  commentId: M:SuperOffice.CRM.Services.AgentBase`1.Dispose
  isExternal: true
  name: Dispose()
  nameWithType: AgentBase<TAgent>.Dispose()
  fullName: SuperOffice.CRM.Services.AgentBase<TAgent>.Dispose()
  nameWithType.vb: AgentBase(Of TAgent).Dispose()
  fullName.vb: SuperOffice.CRM.Services.AgentBase(Of TAgent).Dispose()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.AgentBase`1.Dispose
    name: Dispose
    nameWithType: AgentBase<TAgent>.Dispose
    fullName: SuperOffice.CRM.Services.AgentBase<TAgent>.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.AgentBase`1.Dispose
    name: Dispose
    nameWithType: AgentBase(Of TAgent).Dispose
    fullName: SuperOffice.CRM.Services.AgentBase(Of TAgent).Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.AgentBase`1.InnerAgent
  commentId: P:SuperOffice.CRM.Services.AgentBase`1.InnerAgent
  isExternal: true
  name: InnerAgent
  nameWithType: AgentBase<TAgent>.InnerAgent
  fullName: SuperOffice.CRM.Services.AgentBase<TAgent>.InnerAgent
  nameWithType.vb: AgentBase(Of TAgent).InnerAgent
  fullName.vb: SuperOffice.CRM.Services.AgentBase(Of TAgent).InnerAgent
- uid: SuperOffice.CRM.Services.PersonAgent.CreateDefaultPersonEntity*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.CreateDefaultPersonEntity
  isExternal: true
  name: CreateDefaultPersonEntity
  nameWithType: PersonAgent.CreateDefaultPersonEntity
  fullName: SuperOffice.CRM.Services.PersonAgent.CreateDefaultPersonEntity
- uid: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultPersonEntity
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.CreateDefaultPersonEntity
  parent: SuperOffice.CRM.Services.IPersonAgent
  isExternal: true
  name: CreateDefaultPersonEntity()
  nameWithType: IPersonAgent.CreateDefaultPersonEntity()
  fullName: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultPersonEntity()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultPersonEntity
    name: CreateDefaultPersonEntity
    nameWithType: IPersonAgent.CreateDefaultPersonEntity
    fullName: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultPersonEntity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultPersonEntity
    name: CreateDefaultPersonEntity
    nameWithType: IPersonAgent.CreateDefaultPersonEntity
    fullName: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultPersonEntity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.PersonEntity
  commentId: T:SuperOffice.CRM.Services.PersonEntity
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: PersonEntity
  nameWithType: PersonEntity
  fullName: SuperOffice.CRM.Services.PersonEntity
- uid: SuperOffice.CRM.Services.PersonAgent.SavePersonEntity*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.SavePersonEntity
  isExternal: true
  name: SavePersonEntity
  nameWithType: PersonAgent.SavePersonEntity
  fullName: SuperOffice.CRM.Services.PersonAgent.SavePersonEntity
- uid: SuperOffice.CRM.Services.IPersonAgent.SavePersonEntity(SuperOffice.CRM.Services.PersonEntity)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.SavePersonEntity(SuperOffice.CRM.Services.PersonEntity)
  parent: SuperOffice.CRM.Services.IPersonAgent
  isExternal: true
  name: SavePersonEntity(PersonEntity)
  nameWithType: IPersonAgent.SavePersonEntity(PersonEntity)
  fullName: SuperOffice.CRM.Services.IPersonAgent.SavePersonEntity(SuperOffice.CRM.Services.PersonEntity)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IPersonAgent.SavePersonEntity(SuperOffice.CRM.Services.PersonEntity)
    name: SavePersonEntity
    nameWithType: IPersonAgent.SavePersonEntity
    fullName: SuperOffice.CRM.Services.IPersonAgent.SavePersonEntity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Services.PersonEntity
    name: PersonEntity
    nameWithType: PersonEntity
    fullName: SuperOffice.CRM.Services.PersonEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IPersonAgent.SavePersonEntity(SuperOffice.CRM.Services.PersonEntity)
    name: SavePersonEntity
    nameWithType: IPersonAgent.SavePersonEntity
    fullName: SuperOffice.CRM.Services.IPersonAgent.SavePersonEntity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Services.PersonEntity
    name: PersonEntity
    nameWithType: PersonEntity
    fullName: SuperOffice.CRM.Services.PersonEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.PersonAgent.DeletePersonEntity*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.DeletePersonEntity
  isExternal: true
  name: DeletePersonEntity
  nameWithType: PersonAgent.DeletePersonEntity
  fullName: SuperOffice.CRM.Services.PersonAgent.DeletePersonEntity
- uid: SuperOffice.CRM.Services.IPersonAgent.DeletePersonEntity(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.DeletePersonEntity(System.Int32)
  parent: SuperOffice.CRM.Services.IPersonAgent
  isExternal: true
  name: DeletePersonEntity(Int32)
  nameWithType: IPersonAgent.DeletePersonEntity(Int32)
  fullName: SuperOffice.CRM.Services.IPersonAgent.DeletePersonEntity(System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IPersonAgent.DeletePersonEntity(System.Int32)
    name: DeletePersonEntity
    nameWithType: IPersonAgent.DeletePersonEntity
    fullName: SuperOffice.CRM.Services.IPersonAgent.DeletePersonEntity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IPersonAgent.DeletePersonEntity(System.Int32)
    name: DeletePersonEntity
    nameWithType: IPersonAgent.DeletePersonEntity
    fullName: SuperOffice.CRM.Services.IPersonAgent.DeletePersonEntity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.CRM.Services.PersonAgent.CreateDefaultConsentPerson*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.CreateDefaultConsentPerson
  isExternal: true
  name: CreateDefaultConsentPerson
  nameWithType: PersonAgent.CreateDefaultConsentPerson
  fullName: SuperOffice.CRM.Services.PersonAgent.CreateDefaultConsentPerson
- uid: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultConsentPerson
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.CreateDefaultConsentPerson
  parent: SuperOffice.CRM.Services.IPersonAgent
  isExternal: true
  name: CreateDefaultConsentPerson()
  nameWithType: IPersonAgent.CreateDefaultConsentPerson()
  fullName: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultConsentPerson()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultConsentPerson
    name: CreateDefaultConsentPerson
    nameWithType: IPersonAgent.CreateDefaultConsentPerson
    fullName: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultConsentPerson
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultConsentPerson
    name: CreateDefaultConsentPerson
    nameWithType: IPersonAgent.CreateDefaultConsentPerson
    fullName: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultConsentPerson
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.ConsentPerson
  commentId: T:SuperOffice.CRM.Services.ConsentPerson
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: ConsentPerson
  nameWithType: ConsentPerson
  fullName: SuperOffice.CRM.Services.ConsentPerson
- uid: SuperOffice.CRM.Services.PersonAgent.SaveConsentPerson*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.SaveConsentPerson
  isExternal: true
  name: SaveConsentPerson
  nameWithType: PersonAgent.SaveConsentPerson
  fullName: SuperOffice.CRM.Services.PersonAgent.SaveConsentPerson
- uid: SuperOffice.CRM.Services.IPersonAgent.SaveConsentPerson(SuperOffice.CRM.Services.ConsentPerson)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.SaveConsentPerson(SuperOffice.CRM.Services.ConsentPerson)
  parent: SuperOffice.CRM.Services.IPersonAgent
  isExternal: true
  name: SaveConsentPerson(ConsentPerson)
  nameWithType: IPersonAgent.SaveConsentPerson(ConsentPerson)
  fullName: SuperOffice.CRM.Services.IPersonAgent.SaveConsentPerson(SuperOffice.CRM.Services.ConsentPerson)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IPersonAgent.SaveConsentPerson(SuperOffice.CRM.Services.ConsentPerson)
    name: SaveConsentPerson
    nameWithType: IPersonAgent.SaveConsentPerson
    fullName: SuperOffice.CRM.Services.IPersonAgent.SaveConsentPerson
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Services.ConsentPerson
    name: ConsentPerson
    nameWithType: ConsentPerson
    fullName: SuperOffice.CRM.Services.ConsentPerson
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IPersonAgent.SaveConsentPerson(SuperOffice.CRM.Services.ConsentPerson)
    name: SaveConsentPerson
    nameWithType: IPersonAgent.SaveConsentPerson
    fullName: SuperOffice.CRM.Services.IPersonAgent.SaveConsentPerson
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Services.ConsentPerson
    name: ConsentPerson
    nameWithType: ConsentPerson
    fullName: SuperOffice.CRM.Services.ConsentPerson
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.PersonAgent.DeleteConsentPerson*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.DeleteConsentPerson
  isExternal: true
  name: DeleteConsentPerson
  nameWithType: PersonAgent.DeleteConsentPerson
  fullName: SuperOffice.CRM.Services.PersonAgent.DeleteConsentPerson
- uid: SuperOffice.CRM.Services.IPersonAgent.DeleteConsentPerson(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.DeleteConsentPerson(System.Int32)
  parent: SuperOffice.CRM.Services.IPersonAgent
  isExternal: true
  name: DeleteConsentPerson(Int32)
  nameWithType: IPersonAgent.DeleteConsentPerson(Int32)
  fullName: SuperOffice.CRM.Services.IPersonAgent.DeleteConsentPerson(System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IPersonAgent.DeleteConsentPerson(System.Int32)
    name: DeleteConsentPerson
    nameWithType: IPersonAgent.DeleteConsentPerson
    fullName: SuperOffice.CRM.Services.IPersonAgent.DeleteConsentPerson
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IPersonAgent.DeleteConsentPerson(System.Int32)
    name: DeleteConsentPerson
    nameWithType: IPersonAgent.DeleteConsentPerson
    fullName: SuperOffice.CRM.Services.IPersonAgent.DeleteConsentPerson
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.PersonAgent.GetPerson*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.GetPerson
  isExternal: true
  name: GetPerson
  nameWithType: PersonAgent.GetPerson
  fullName: SuperOffice.CRM.Services.PersonAgent.GetPerson
- uid: SuperOffice.CRM.Services.IPersonAgent.GetPerson(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetPerson(System.Int32)
  parent: SuperOffice.CRM.Services.IPersonAgent
  isExternal: true
  name: GetPerson(Int32)
  nameWithType: IPersonAgent.GetPerson(Int32)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetPerson(System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IPersonAgent.GetPerson(System.Int32)
    name: GetPerson
    nameWithType: IPersonAgent.GetPerson
    fullName: SuperOffice.CRM.Services.IPersonAgent.GetPerson
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IPersonAgent.GetPerson(System.Int32)
    name: GetPerson
    nameWithType: IPersonAgent.GetPerson
    fullName: SuperOffice.CRM.Services.IPersonAgent.GetPerson
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.Person
  commentId: T:SuperOffice.CRM.Services.Person
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: Person
  nameWithType: Person
  fullName: SuperOffice.CRM.Services.Person
- uid: SuperOffice.CRM.Services.PersonAgent.GetPersonEntity*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.GetPersonEntity
  isExternal: true
  name: GetPersonEntity
  nameWithType: PersonAgent.GetPersonEntity
  fullName: SuperOffice.CRM.Services.PersonAgent.GetPersonEntity
- uid: SuperOffice.CRM.Services.IPersonAgent.GetPersonEntity(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetPersonEntity(System.Int32)
  parent: SuperOffice.CRM.Services.IPersonAgent
  isExternal: true
  name: GetPersonEntity(Int32)
  nameWithType: IPersonAgent.GetPersonEntity(Int32)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetPersonEntity(System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IPersonAgent.GetPersonEntity(System.Int32)
    name: GetPersonEntity
    nameWithType: IPersonAgent.GetPersonEntity
    fullName: SuperOffice.CRM.Services.IPersonAgent.GetPersonEntity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IPersonAgent.GetPersonEntity(System.Int32)
    name: GetPersonEntity
    nameWithType: IPersonAgent.GetPersonEntity
    fullName: SuperOffice.CRM.Services.IPersonAgent.GetPersonEntity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.PersonAgent.Undelete*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.Undelete
  isExternal: true
  name: Undelete
  nameWithType: PersonAgent.Undelete
  fullName: SuperOffice.CRM.Services.PersonAgent.Undelete
- uid: SuperOffice.CRM.Services.IPersonAgent.Undelete(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.Undelete(System.Int32)
  parent: SuperOffice.CRM.Services.IPersonAgent
  isExternal: true
  name: Undelete(Int32)
  nameWithType: IPersonAgent.Undelete(Int32)
  fullName: SuperOffice.CRM.Services.IPersonAgent.Undelete(System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IPersonAgent.Undelete(System.Int32)
    name: Undelete
    nameWithType: IPersonAgent.Undelete
    fullName: SuperOffice.CRM.Services.IPersonAgent.Undelete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IPersonAgent.Undelete(System.Int32)
    name: Undelete
    nameWithType: IPersonAgent.Undelete
    fullName: SuperOffice.CRM.Services.IPersonAgent.Undelete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.PersonAgent.GetMyPerson*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.GetMyPerson
  isExternal: true
  name: GetMyPerson
  nameWithType: PersonAgent.GetMyPerson
  fullName: SuperOffice.CRM.Services.PersonAgent.GetMyPerson
- uid: SuperOffice.CRM.Services.IPersonAgent.GetMyPerson
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetMyPerson
  parent: SuperOffice.CRM.Services.IPersonAgent
  isExternal: true
  name: GetMyPerson()
  nameWithType: IPersonAgent.GetMyPerson()
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetMyPerson()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IPersonAgent.GetMyPerson
    name: GetMyPerson
    nameWithType: IPersonAgent.GetMyPerson
    fullName: SuperOffice.CRM.Services.IPersonAgent.GetMyPerson
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IPersonAgent.GetMyPerson
    name: GetMyPerson
    nameWithType: IPersonAgent.GetMyPerson
    fullName: SuperOffice.CRM.Services.IPersonAgent.GetMyPerson
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.PersonAgent.GetSalesRep*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.GetSalesRep
  isExternal: true
  name: GetSalesRep
  nameWithType: PersonAgent.GetSalesRep
  fullName: SuperOffice.CRM.Services.PersonAgent.GetSalesRep
- uid: SuperOffice.CRM.Services.IPersonAgent.GetSalesRep(System.String,System.String,System.String,System.String,System.String)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetSalesRep(System.String,System.String,System.String,System.String,System.String)
  parent: SuperOffice.CRM.Services.IPersonAgent
  isExternal: true
  name: GetSalesRep(String, String, String, String, String)
  nameWithType: IPersonAgent.GetSalesRep(String, String, String, String, String)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetSalesRep(System.String, System.String, System.String, System.String, System.String)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IPersonAgent.GetSalesRep(System.String,System.String,System.String,System.String,System.String)
    name: GetSalesRep
    nameWithType: IPersonAgent.GetSalesRep
    fullName: SuperOffice.CRM.Services.IPersonAgent.GetSalesRep
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IPersonAgent.GetSalesRep(System.String,System.String,System.String,System.String,System.String)
    name: GetSalesRep
    nameWithType: IPersonAgent.GetSalesRep
    fullName: SuperOffice.CRM.Services.IPersonAgent.GetSalesRep
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.Services.PersonAgent.GetPhones*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.GetPhones
  isExternal: true
  name: GetPhones
  nameWithType: PersonAgent.GetPhones
  fullName: SuperOffice.CRM.Services.PersonAgent.GetPhones
- uid: SuperOffice.CRM.Services.IPersonAgent.GetPhones(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetPhones(System.Int32)
  parent: SuperOffice.CRM.Services.IPersonAgent
  isExternal: true
  name: GetPhones(Int32)
  nameWithType: IPersonAgent.GetPhones(Int32)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetPhones(System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IPersonAgent.GetPhones(System.Int32)
    name: GetPhones
    nameWithType: IPersonAgent.GetPhones
    fullName: SuperOffice.CRM.Services.IPersonAgent.GetPhones
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IPersonAgent.GetPhones(System.Int32)
    name: GetPhones
    nameWithType: IPersonAgent.GetPhones
    fullName: SuperOffice.CRM.Services.IPersonAgent.GetPhones
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.EntityElement[]
  isExternal: true
  name: EntityElement[]
  nameWithType: EntityElement[]
  fullName: SuperOffice.CRM.Services.EntityElement[]
  nameWithType.vb: EntityElement()
  fullName.vb: SuperOffice.CRM.Services.EntityElement()
  name.vb: EntityElement()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.EntityElement
    name: EntityElement
    nameWithType: EntityElement
    fullName: SuperOffice.CRM.Services.EntityElement
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.Services.EntityElement
    name: EntityElement
    nameWithType: EntityElement
    fullName: SuperOffice.CRM.Services.EntityElement
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.PersonAgent.ChangeCountry*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.ChangeCountry
  isExternal: true
  name: ChangeCountry
  nameWithType: PersonAgent.ChangeCountry
  fullName: SuperOffice.CRM.Services.PersonAgent.ChangeCountry
- uid: SuperOffice.CRM.Services.IPersonAgent.ChangeCountry(SuperOffice.CRM.Services.PersonEntity,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.ChangeCountry(SuperOffice.CRM.Services.PersonEntity,System.Int32)
  parent: SuperOffice.CRM.Services.IPersonAgent
  isExternal: true
  name: ChangeCountry(PersonEntity, Int32)
  nameWithType: IPersonAgent.ChangeCountry(PersonEntity, Int32)
  fullName: SuperOffice.CRM.Services.IPersonAgent.ChangeCountry(SuperOffice.CRM.Services.PersonEntity, System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IPersonAgent.ChangeCountry(SuperOffice.CRM.Services.PersonEntity,System.Int32)
    name: ChangeCountry
    nameWithType: IPersonAgent.ChangeCountry
    fullName: SuperOffice.CRM.Services.IPersonAgent.ChangeCountry
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Services.PersonEntity
    name: PersonEntity
    nameWithType: PersonEntity
    fullName: SuperOffice.CRM.Services.PersonEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IPersonAgent.ChangeCountry(SuperOffice.CRM.Services.PersonEntity,System.Int32)
    name: ChangeCountry
    nameWithType: IPersonAgent.ChangeCountry
    fullName: SuperOffice.CRM.Services.IPersonAgent.ChangeCountry
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Services.PersonEntity
    name: PersonEntity
    nameWithType: PersonEntity
    fullName: SuperOffice.CRM.Services.PersonEntity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.PersonAgent.GetAddress*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.GetAddress
  isExternal: true
  name: GetAddress
  nameWithType: PersonAgent.GetAddress
  fullName: SuperOffice.CRM.Services.PersonAgent.GetAddress
- uid: SuperOffice.CRM.Services.IPersonAgent.GetAddress(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetAddress(System.Int32)
  parent: SuperOffice.CRM.Services.IPersonAgent
  isExternal: true
  name: GetAddress(Int32)
  nameWithType: IPersonAgent.GetAddress(Int32)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetAddress(System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IPersonAgent.GetAddress(System.Int32)
    name: GetAddress
    nameWithType: IPersonAgent.GetAddress
    fullName: SuperOffice.CRM.Services.IPersonAgent.GetAddress
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IPersonAgent.GetAddress(System.Int32)
    name: GetAddress
    nameWithType: IPersonAgent.GetAddress
    fullName: SuperOffice.CRM.Services.IPersonAgent.GetAddress
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.Address
  commentId: T:SuperOffice.CRM.Services.Address
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: Address
  nameWithType: Address
  fullName: SuperOffice.CRM.Services.Address
- uid: SuperOffice.CRM.Services.PersonAgent.GetAddressByCountry*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.GetAddressByCountry
  isExternal: true
  name: GetAddressByCountry
  nameWithType: PersonAgent.GetAddressByCountry
  fullName: SuperOffice.CRM.Services.PersonAgent.GetAddressByCountry
- uid: SuperOffice.CRM.Services.IPersonAgent.GetAddressByCountry(System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetAddressByCountry(System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.IPersonAgent
  isExternal: true
  name: GetAddressByCountry(Int32, Int32)
  nameWithType: IPersonAgent.GetAddressByCountry(Int32, Int32)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetAddressByCountry(System.Int32, System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IPersonAgent.GetAddressByCountry(System.Int32,System.Int32)
    name: GetAddressByCountry
    nameWithType: IPersonAgent.GetAddressByCountry
    fullName: SuperOffice.CRM.Services.IPersonAgent.GetAddressByCountry
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IPersonAgent.GetAddressByCountry(System.Int32,System.Int32)
    name: GetAddressByCountry
    nameWithType: IPersonAgent.GetAddressByCountry
    fullName: SuperOffice.CRM.Services.IPersonAgent.GetAddressByCountry
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.PersonAgent.GetPersonImage*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.GetPersonImage
  isExternal: true
  name: GetPersonImage
  nameWithType: PersonAgent.GetPersonImage
  fullName: SuperOffice.CRM.Services.PersonAgent.GetPersonImage
- uid: SuperOffice.CRM.Services.IPersonAgent.GetPersonImage(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetPersonImage(System.Int32)
  parent: SuperOffice.CRM.Services.IPersonAgent
  isExternal: true
  name: GetPersonImage(Int32)
  nameWithType: IPersonAgent.GetPersonImage(Int32)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetPersonImage(System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IPersonAgent.GetPersonImage(System.Int32)
    name: GetPersonImage
    nameWithType: IPersonAgent.GetPersonImage
    fullName: SuperOffice.CRM.Services.IPersonAgent.GetPersonImage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IPersonAgent.GetPersonImage(System.Int32)
    name: GetPersonImage
    nameWithType: IPersonAgent.GetPersonImage
    fullName: SuperOffice.CRM.Services.IPersonAgent.GetPersonImage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Drawing.Image
  isExternal: true
  name: Image
  nameWithType: Image
  fullName: System.Drawing.Image
- uid: SuperOffice.CRM.Services.PersonAgent.SetPersonImage*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.SetPersonImage
  isExternal: true
  name: SetPersonImage
  nameWithType: PersonAgent.SetPersonImage
  fullName: SuperOffice.CRM.Services.PersonAgent.SetPersonImage
- uid: SuperOffice.CRM.Services.IPersonAgent.SetPersonImage(System.Int32,System.Drawing.Image)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.SetPersonImage(System.Int32,System.Drawing.Image)
  parent: SuperOffice.CRM.Services.IPersonAgent
  isExternal: true
  name: SetPersonImage(Int32, Image)
  nameWithType: IPersonAgent.SetPersonImage(Int32, Image)
  fullName: SuperOffice.CRM.Services.IPersonAgent.SetPersonImage(System.Int32, System.Drawing.Image)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IPersonAgent.SetPersonImage(System.Int32,System.Drawing.Image)
    name: SetPersonImage
    nameWithType: IPersonAgent.SetPersonImage
    fullName: SuperOffice.CRM.Services.IPersonAgent.SetPersonImage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Drawing.Image
    name: Image
    nameWithType: Image
    fullName: System.Drawing.Image
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IPersonAgent.SetPersonImage(System.Int32,System.Drawing.Image)
    name: SetPersonImage
    nameWithType: IPersonAgent.SetPersonImage
    fullName: SuperOffice.CRM.Services.IPersonAgent.SetPersonImage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Drawing.Image
    name: Image
    nameWithType: Image
    fullName: System.Drawing.Image
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.PersonAgent.CreateDefaultByContactId*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.CreateDefaultByContactId
  isExternal: true
  name: CreateDefaultByContactId
  nameWithType: PersonAgent.CreateDefaultByContactId
  fullName: SuperOffice.CRM.Services.PersonAgent.CreateDefaultByContactId
- uid: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultByContactId(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.CreateDefaultByContactId(System.Int32)
  parent: SuperOffice.CRM.Services.IPersonAgent
  isExternal: true
  name: CreateDefaultByContactId(Int32)
  nameWithType: IPersonAgent.CreateDefaultByContactId(Int32)
  fullName: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultByContactId(System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultByContactId(System.Int32)
    name: CreateDefaultByContactId
    nameWithType: IPersonAgent.CreateDefaultByContactId
    fullName: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultByContactId
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultByContactId(System.Int32)
    name: CreateDefaultByContactId
    nameWithType: IPersonAgent.CreateDefaultByContactId
    fullName: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultByContactId
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.PersonAgent.Move*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.Move
  isExternal: true
  name: Move
  nameWithType: PersonAgent.Move
  fullName: SuperOffice.CRM.Services.PersonAgent.Move
- uid: SuperOffice.CRM.Services.IPersonAgent.Move(System.Int32,System.Int32,System.DateTime)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.Move(System.Int32,System.Int32,System.DateTime)
  parent: SuperOffice.CRM.Services.IPersonAgent
  isExternal: true
  name: Move(Int32, Int32, DateTime)
  nameWithType: IPersonAgent.Move(Int32, Int32, DateTime)
  fullName: SuperOffice.CRM.Services.IPersonAgent.Move(System.Int32, System.Int32, System.DateTime)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IPersonAgent.Move(System.Int32,System.Int32,System.DateTime)
    name: Move
    nameWithType: IPersonAgent.Move
    fullName: SuperOffice.CRM.Services.IPersonAgent.Move
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IPersonAgent.Move(System.Int32,System.Int32,System.DateTime)
    name: Move
    nameWithType: IPersonAgent.Move
    fullName: SuperOffice.CRM.Services.IPersonAgent.Move
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: SuperOffice.CRM.Services.PersonAgent.Merge*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.Merge
  isExternal: true
  name: Merge
  nameWithType: PersonAgent.Merge
  fullName: SuperOffice.CRM.Services.PersonAgent.Merge
- uid: SuperOffice.CRM.Services.IPersonAgent.Merge(System.Int32,System.Int32,System.DateTime,System.Boolean,System.Boolean)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.Merge(System.Int32,System.Int32,System.DateTime,System.Boolean,System.Boolean)
  parent: SuperOffice.CRM.Services.IPersonAgent
  isExternal: true
  name: Merge(Int32, Int32, DateTime, Boolean, Boolean)
  nameWithType: IPersonAgent.Merge(Int32, Int32, DateTime, Boolean, Boolean)
  fullName: SuperOffice.CRM.Services.IPersonAgent.Merge(System.Int32, System.Int32, System.DateTime, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IPersonAgent.Merge(System.Int32,System.Int32,System.DateTime,System.Boolean,System.Boolean)
    name: Merge
    nameWithType: IPersonAgent.Merge
    fullName: SuperOffice.CRM.Services.IPersonAgent.Merge
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IPersonAgent.Merge(System.Int32,System.Int32,System.DateTime,System.Boolean,System.Boolean)
    name: Merge
    nameWithType: IPersonAgent.Merge
    fullName: SuperOffice.CRM.Services.IPersonAgent.Merge
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.CRM.Services.PersonAgent.CreateDefaultFromCredential*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.CreateDefaultFromCredential
  isExternal: true
  name: CreateDefaultFromCredential
  nameWithType: PersonAgent.CreateDefaultFromCredential
  fullName: SuperOffice.CRM.Services.PersonAgent.CreateDefaultFromCredential
- uid: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultFromCredential(System.Int32,System.String,System.String,System.String)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.CreateDefaultFromCredential(System.Int32,System.String,System.String,System.String)
  parent: SuperOffice.CRM.Services.IPersonAgent
  isExternal: true
  name: CreateDefaultFromCredential(Int32, String, String, String)
  nameWithType: IPersonAgent.CreateDefaultFromCredential(Int32, String, String, String)
  fullName: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultFromCredential(System.Int32, System.String, System.String, System.String)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultFromCredential(System.Int32,System.String,System.String,System.String)
    name: CreateDefaultFromCredential
    nameWithType: IPersonAgent.CreateDefaultFromCredential
    fullName: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultFromCredential
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultFromCredential(System.Int32,System.String,System.String,System.String)
    name: CreateDefaultFromCredential
    nameWithType: IPersonAgent.CreateDefaultFromCredential
    fullName: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultFromCredential
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.PersonAgent.IsNumberValid*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.IsNumberValid
  isExternal: true
  name: IsNumberValid
  nameWithType: PersonAgent.IsNumberValid
  fullName: SuperOffice.CRM.Services.PersonAgent.IsNumberValid
- uid: SuperOffice.CRM.Services.IPersonAgent.IsNumberValid(System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.IsNumberValid(System.Int32,System.String)
  parent: SuperOffice.CRM.Services.IPersonAgent
  isExternal: true
  name: IsNumberValid(Int32, String)
  nameWithType: IPersonAgent.IsNumberValid(Int32, String)
  fullName: SuperOffice.CRM.Services.IPersonAgent.IsNumberValid(System.Int32, System.String)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IPersonAgent.IsNumberValid(System.Int32,System.String)
    name: IsNumberValid
    nameWithType: IPersonAgent.IsNumberValid
    fullName: SuperOffice.CRM.Services.IPersonAgent.IsNumberValid
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IPersonAgent.IsNumberValid(System.Int32,System.String)
    name: IsNumberValid
    nameWithType: IPersonAgent.IsNumberValid
    fullName: SuperOffice.CRM.Services.IPersonAgent.IsNumberValid
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.PersonAgent.SetConsent*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.SetConsent
  isExternal: true
  name: SetConsent
  nameWithType: PersonAgent.SetConsent
  fullName: SuperOffice.CRM.Services.PersonAgent.SetConsent
- uid: SuperOffice.CRM.Services.IPersonAgent.SetConsent(System.Int32,System.String,System.String,System.String,System.String)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.SetConsent(System.Int32,System.String,System.String,System.String,System.String)
  parent: SuperOffice.CRM.Services.IPersonAgent
  isExternal: true
  name: SetConsent(Int32, String, String, String, String)
  nameWithType: IPersonAgent.SetConsent(Int32, String, String, String, String)
  fullName: SuperOffice.CRM.Services.IPersonAgent.SetConsent(System.Int32, System.String, System.String, System.String, System.String)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IPersonAgent.SetConsent(System.Int32,System.String,System.String,System.String,System.String)
    name: SetConsent
    nameWithType: IPersonAgent.SetConsent
    fullName: SuperOffice.CRM.Services.IPersonAgent.SetConsent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IPersonAgent.SetConsent(System.Int32,System.String,System.String,System.String,System.String)
    name: SetConsent
    nameWithType: IPersonAgent.SetConsent
    fullName: SuperOffice.CRM.Services.IPersonAgent.SetConsent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.PersonAgent.RemoveConsent*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.RemoveConsent
  isExternal: true
  name: RemoveConsent
  nameWithType: PersonAgent.RemoveConsent
  fullName: SuperOffice.CRM.Services.PersonAgent.RemoveConsent
- uid: SuperOffice.CRM.Services.IPersonAgent.RemoveConsent(System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.RemoveConsent(System.Int32,System.String)
  parent: SuperOffice.CRM.Services.IPersonAgent
  isExternal: true
  name: RemoveConsent(Int32, String)
  nameWithType: IPersonAgent.RemoveConsent(Int32, String)
  fullName: SuperOffice.CRM.Services.IPersonAgent.RemoveConsent(System.Int32, System.String)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IPersonAgent.RemoveConsent(System.Int32,System.String)
    name: RemoveConsent
    nameWithType: IPersonAgent.RemoveConsent
    fullName: SuperOffice.CRM.Services.IPersonAgent.RemoveConsent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IPersonAgent.RemoveConsent(System.Int32,System.String)
    name: RemoveConsent
    nameWithType: IPersonAgent.RemoveConsent
    fullName: SuperOffice.CRM.Services.IPersonAgent.RemoveConsent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.PersonAgent.HasConsent*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.HasConsent
  isExternal: true
  name: HasConsent
  nameWithType: PersonAgent.HasConsent
  fullName: SuperOffice.CRM.Services.PersonAgent.HasConsent
- uid: SuperOffice.CRM.Services.IPersonAgent.HasConsent(System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.HasConsent(System.Int32,System.String)
  parent: SuperOffice.CRM.Services.IPersonAgent
  isExternal: true
  name: HasConsent(Int32, String)
  nameWithType: IPersonAgent.HasConsent(Int32, String)
  fullName: SuperOffice.CRM.Services.IPersonAgent.HasConsent(System.Int32, System.String)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IPersonAgent.HasConsent(System.Int32,System.String)
    name: HasConsent
    nameWithType: IPersonAgent.HasConsent
    fullName: SuperOffice.CRM.Services.IPersonAgent.HasConsent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IPersonAgent.HasConsent(System.Int32,System.String)
    name: HasConsent
    nameWithType: IPersonAgent.HasConsent
    fullName: SuperOffice.CRM.Services.IPersonAgent.HasConsent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.PersonAgent.GetConsentInfos*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.GetConsentInfos
  isExternal: true
  name: GetConsentInfos
  nameWithType: PersonAgent.GetConsentInfos
  fullName: SuperOffice.CRM.Services.PersonAgent.GetConsentInfos
- uid: SuperOffice.CRM.Services.IPersonAgent.GetConsentInfos(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetConsentInfos(System.Int32)
  parent: SuperOffice.CRM.Services.IPersonAgent
  isExternal: true
  name: GetConsentInfos(Int32)
  nameWithType: IPersonAgent.GetConsentInfos(Int32)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetConsentInfos(System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IPersonAgent.GetConsentInfos(System.Int32)
    name: GetConsentInfos
    nameWithType: IPersonAgent.GetConsentInfos
    fullName: SuperOffice.CRM.Services.IPersonAgent.GetConsentInfos
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IPersonAgent.GetConsentInfos(System.Int32)
    name: GetConsentInfos
    nameWithType: IPersonAgent.GetConsentInfos
    fullName: SuperOffice.CRM.Services.IPersonAgent.GetConsentInfos
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.ConsentInfo[]
  isExternal: true
  name: ConsentInfo[]
  nameWithType: ConsentInfo[]
  fullName: SuperOffice.CRM.Services.ConsentInfo[]
  nameWithType.vb: ConsentInfo()
  fullName.vb: SuperOffice.CRM.Services.ConsentInfo()
  name.vb: ConsentInfo()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ConsentInfo
    name: ConsentInfo
    nameWithType: ConsentInfo
    fullName: SuperOffice.CRM.Services.ConsentInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.Services.ConsentInfo
    name: ConsentInfo
    nameWithType: ConsentInfo
    fullName: SuperOffice.CRM.Services.ConsentInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.PersonAgent.SendConsentConfirmationEmail*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.SendConsentConfirmationEmail
  isExternal: true
  name: SendConsentConfirmationEmail
  nameWithType: PersonAgent.SendConsentConfirmationEmail
  fullName: SuperOffice.CRM.Services.PersonAgent.SendConsentConfirmationEmail
- uid: SuperOffice.CRM.Services.IPersonAgent.SendConsentConfirmationEmail(System.Int32,System.String,System.Int32,System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.SendConsentConfirmationEmail(System.Int32,System.String,System.Int32,System.Int32,System.String)
  parent: SuperOffice.CRM.Services.IPersonAgent
  isExternal: true
  name: SendConsentConfirmationEmail(Int32, String, Int32, Int32, String)
  nameWithType: IPersonAgent.SendConsentConfirmationEmail(Int32, String, Int32, Int32, String)
  fullName: SuperOffice.CRM.Services.IPersonAgent.SendConsentConfirmationEmail(System.Int32, System.String, System.Int32, System.Int32, System.String)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IPersonAgent.SendConsentConfirmationEmail(System.Int32,System.String,System.Int32,System.Int32,System.String)
    name: SendConsentConfirmationEmail
    nameWithType: IPersonAgent.SendConsentConfirmationEmail
    fullName: SuperOffice.CRM.Services.IPersonAgent.SendConsentConfirmationEmail
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IPersonAgent.SendConsentConfirmationEmail(System.Int32,System.String,System.Int32,System.Int32,System.String)
    name: SendConsentConfirmationEmail
    nameWithType: IPersonAgent.SendConsentConfirmationEmail
    fullName: SuperOffice.CRM.Services.IPersonAgent.SendConsentConfirmationEmail
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.PersonAgent.ResolvePersonFromInfo*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.ResolvePersonFromInfo
  isExternal: true
  name: ResolvePersonFromInfo
  nameWithType: PersonAgent.ResolvePersonFromInfo
  fullName: SuperOffice.CRM.Services.PersonAgent.ResolvePersonFromInfo
- uid: SuperOffice.CRM.Services.IPersonAgent.ResolvePersonFromInfo(System.Int32,System.String,System.String[],System.String[])
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.ResolvePersonFromInfo(System.Int32,System.String,System.String[],System.String[])
  parent: SuperOffice.CRM.Services.IPersonAgent
  isExternal: true
  name: ResolvePersonFromInfo(Int32, String, String[], String[])
  nameWithType: IPersonAgent.ResolvePersonFromInfo(Int32, String, String[], String[])
  fullName: SuperOffice.CRM.Services.IPersonAgent.ResolvePersonFromInfo(System.Int32, System.String, System.String[], System.String[])
  nameWithType.vb: IPersonAgent.ResolvePersonFromInfo(Int32, String, String(), String())
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.ResolvePersonFromInfo(System.Int32, System.String, System.String(), System.String())
  name.vb: ResolvePersonFromInfo(Int32, String, String(), String())
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IPersonAgent.ResolvePersonFromInfo(System.Int32,System.String,System.String[],System.String[])
    name: ResolvePersonFromInfo
    nameWithType: IPersonAgent.ResolvePersonFromInfo
    fullName: SuperOffice.CRM.Services.IPersonAgent.ResolvePersonFromInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IPersonAgent.ResolvePersonFromInfo(System.Int32,System.String,System.String[],System.String[])
    name: ResolvePersonFromInfo
    nameWithType: IPersonAgent.ResolvePersonFromInfo
    fullName: SuperOffice.CRM.Services.IPersonAgent.ResolvePersonFromInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.ResolvedPerson
  commentId: T:SuperOffice.CRM.Services.ResolvedPerson
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: ResolvedPerson
  nameWithType: ResolvedPerson
  fullName: SuperOffice.CRM.Services.ResolvedPerson
- uid: SuperOffice.CRM.Services.PersonAgent.AddEmailAddressToPerson*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.AddEmailAddressToPerson
  isExternal: true
  name: AddEmailAddressToPerson
  nameWithType: PersonAgent.AddEmailAddressToPerson
  fullName: SuperOffice.CRM.Services.PersonAgent.AddEmailAddressToPerson
- uid: SuperOffice.CRM.Services.IPersonAgent.AddEmailAddressToPerson(System.Int32,System.String,System.Boolean)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.AddEmailAddressToPerson(System.Int32,System.String,System.Boolean)
  parent: SuperOffice.CRM.Services.IPersonAgent
  isExternal: true
  name: AddEmailAddressToPerson(Int32, String, Boolean)
  nameWithType: IPersonAgent.AddEmailAddressToPerson(Int32, String, Boolean)
  fullName: SuperOffice.CRM.Services.IPersonAgent.AddEmailAddressToPerson(System.Int32, System.String, System.Boolean)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IPersonAgent.AddEmailAddressToPerson(System.Int32,System.String,System.Boolean)
    name: AddEmailAddressToPerson
    nameWithType: IPersonAgent.AddEmailAddressToPerson
    fullName: SuperOffice.CRM.Services.IPersonAgent.AddEmailAddressToPerson
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IPersonAgent.AddEmailAddressToPerson(System.Int32,System.String,System.Boolean)
    name: AddEmailAddressToPerson
    nameWithType: IPersonAgent.AddEmailAddressToPerson
    fullName: SuperOffice.CRM.Services.IPersonAgent.AddEmailAddressToPerson
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.PersonAgent.CreateTemporaryKey*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.CreateTemporaryKey
  isExternal: true
  name: CreateTemporaryKey
  nameWithType: PersonAgent.CreateTemporaryKey
  fullName: SuperOffice.CRM.Services.PersonAgent.CreateTemporaryKey
- uid: SuperOffice.CRM.Services.IPersonAgent.CreateTemporaryKey(SuperOffice.Data.TemporaryKeyDomain,System.Int32,System.Int32,System.DateTime)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.CreateTemporaryKey(SuperOffice.Data.TemporaryKeyDomain,System.Int32,System.Int32,System.DateTime)
  parent: SuperOffice.CRM.Services.IPersonAgent
  isExternal: true
  name: CreateTemporaryKey(TemporaryKeyDomain, Int32, Int32, DateTime)
  nameWithType: IPersonAgent.CreateTemporaryKey(TemporaryKeyDomain, Int32, Int32, DateTime)
  fullName: SuperOffice.CRM.Services.IPersonAgent.CreateTemporaryKey(SuperOffice.Data.TemporaryKeyDomain, System.Int32, System.Int32, System.DateTime)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IPersonAgent.CreateTemporaryKey(SuperOffice.Data.TemporaryKeyDomain,System.Int32,System.Int32,System.DateTime)
    name: CreateTemporaryKey
    nameWithType: IPersonAgent.CreateTemporaryKey
    fullName: SuperOffice.CRM.Services.IPersonAgent.CreateTemporaryKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.TemporaryKeyDomain
    name: TemporaryKeyDomain
    nameWithType: TemporaryKeyDomain
    fullName: SuperOffice.Data.TemporaryKeyDomain
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IPersonAgent.CreateTemporaryKey(SuperOffice.Data.TemporaryKeyDomain,System.Int32,System.Int32,System.DateTime)
    name: CreateTemporaryKey
    nameWithType: IPersonAgent.CreateTemporaryKey
    fullName: SuperOffice.CRM.Services.IPersonAgent.CreateTemporaryKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.TemporaryKeyDomain
    name: TemporaryKeyDomain
    nameWithType: TemporaryKeyDomain
    fullName: SuperOffice.Data.TemporaryKeyDomain
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.TemporaryKeyDomain
  isExternal: true
  name: TemporaryKeyDomain
  nameWithType: TemporaryKeyDomain
  fullName: SuperOffice.Data.TemporaryKeyDomain
- uid: SuperOffice.CRM.Services.PersonAgent.CheckTemporaryKey*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.CheckTemporaryKey
  isExternal: true
  name: CheckTemporaryKey
  nameWithType: PersonAgent.CheckTemporaryKey
  fullName: SuperOffice.CRM.Services.PersonAgent.CheckTemporaryKey
- uid: SuperOffice.CRM.Services.IPersonAgent.CheckTemporaryKey(System.String)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.CheckTemporaryKey(System.String)
  parent: SuperOffice.CRM.Services.IPersonAgent
  isExternal: true
  name: CheckTemporaryKey(String)
  nameWithType: IPersonAgent.CheckTemporaryKey(String)
  fullName: SuperOffice.CRM.Services.IPersonAgent.CheckTemporaryKey(System.String)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IPersonAgent.CheckTemporaryKey(System.String)
    name: CheckTemporaryKey
    nameWithType: IPersonAgent.CheckTemporaryKey
    fullName: SuperOffice.CRM.Services.IPersonAgent.CheckTemporaryKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IPersonAgent.CheckTemporaryKey(System.String)
    name: CheckTemporaryKey
    nameWithType: IPersonAgent.CheckTemporaryKey
    fullName: SuperOffice.CRM.Services.IPersonAgent.CheckTemporaryKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.TemporaryKeyInfo
  commentId: T:SuperOffice.CRM.Services.TemporaryKeyInfo
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: TemporaryKeyInfo
  nameWithType: TemporaryKeyInfo
  fullName: SuperOffice.CRM.Services.TemporaryKeyInfo
- uid: SuperOffice.CRM.Services.PersonAgent.DeleteTemporaryKeysOfDomain*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.DeleteTemporaryKeysOfDomain
  isExternal: true
  name: DeleteTemporaryKeysOfDomain
  nameWithType: PersonAgent.DeleteTemporaryKeysOfDomain
  fullName: SuperOffice.CRM.Services.PersonAgent.DeleteTemporaryKeysOfDomain
- uid: SuperOffice.CRM.Services.IPersonAgent.DeleteTemporaryKeysOfDomain(SuperOffice.Data.TemporaryKeyDomain,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.DeleteTemporaryKeysOfDomain(SuperOffice.Data.TemporaryKeyDomain,System.Int32)
  parent: SuperOffice.CRM.Services.IPersonAgent
  isExternal: true
  name: DeleteTemporaryKeysOfDomain(TemporaryKeyDomain, Int32)
  nameWithType: IPersonAgent.DeleteTemporaryKeysOfDomain(TemporaryKeyDomain, Int32)
  fullName: SuperOffice.CRM.Services.IPersonAgent.DeleteTemporaryKeysOfDomain(SuperOffice.Data.TemporaryKeyDomain, System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IPersonAgent.DeleteTemporaryKeysOfDomain(SuperOffice.Data.TemporaryKeyDomain,System.Int32)
    name: DeleteTemporaryKeysOfDomain
    nameWithType: IPersonAgent.DeleteTemporaryKeysOfDomain
    fullName: SuperOffice.CRM.Services.IPersonAgent.DeleteTemporaryKeysOfDomain
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.TemporaryKeyDomain
    name: TemporaryKeyDomain
    nameWithType: TemporaryKeyDomain
    fullName: SuperOffice.Data.TemporaryKeyDomain
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IPersonAgent.DeleteTemporaryKeysOfDomain(SuperOffice.Data.TemporaryKeyDomain,System.Int32)
    name: DeleteTemporaryKeysOfDomain
    nameWithType: IPersonAgent.DeleteTemporaryKeysOfDomain
    fullName: SuperOffice.CRM.Services.IPersonAgent.DeleteTemporaryKeysOfDomain
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.TemporaryKeyDomain
    name: TemporaryKeyDomain
    nameWithType: TemporaryKeyDomain
    fullName: SuperOffice.Data.TemporaryKeyDomain
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.PersonAgent.DeleteExpired*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.DeleteExpired
  isExternal: true
  name: DeleteExpired
  nameWithType: PersonAgent.DeleteExpired
  fullName: SuperOffice.CRM.Services.PersonAgent.DeleteExpired
- uid: SuperOffice.CRM.Services.IPersonAgent.DeleteExpired
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.DeleteExpired
  parent: SuperOffice.CRM.Services.IPersonAgent
  isExternal: true
  name: DeleteExpired()
  nameWithType: IPersonAgent.DeleteExpired()
  fullName: SuperOffice.CRM.Services.IPersonAgent.DeleteExpired()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IPersonAgent.DeleteExpired
    name: DeleteExpired
    nameWithType: IPersonAgent.DeleteExpired
    fullName: SuperOffice.CRM.Services.IPersonAgent.DeleteExpired
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IPersonAgent.DeleteExpired
    name: DeleteExpired
    nameWithType: IPersonAgent.DeleteExpired
    fullName: SuperOffice.CRM.Services.IPersonAgent.DeleteExpired
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.PersonAgent.GetPersonSummary*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.GetPersonSummary
  isExternal: true
  name: GetPersonSummary
  nameWithType: PersonAgent.GetPersonSummary
  fullName: SuperOffice.CRM.Services.PersonAgent.GetPersonSummary
- uid: SuperOffice.CRM.Services.IPersonAgent.GetPersonSummary(System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetPersonSummary(System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.IPersonAgent
  isExternal: true
  name: GetPersonSummary(Int32, Int32)
  nameWithType: IPersonAgent.GetPersonSummary(Int32, Int32)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetPersonSummary(System.Int32, System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IPersonAgent.GetPersonSummary(System.Int32,System.Int32)
    name: GetPersonSummary
    nameWithType: IPersonAgent.GetPersonSummary
    fullName: SuperOffice.CRM.Services.IPersonAgent.GetPersonSummary
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IPersonAgent.GetPersonSummary(System.Int32,System.Int32)
    name: GetPersonSummary
    nameWithType: IPersonAgent.GetPersonSummary
    fullName: SuperOffice.CRM.Services.IPersonAgent.GetPersonSummary
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.PersonSummary
  commentId: T:SuperOffice.CRM.Services.PersonSummary
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: PersonSummary
  nameWithType: PersonSummary
  fullName: SuperOffice.CRM.Services.PersonSummary
- uid: SuperOffice.CRM.Services.PersonAgent.AddBounce*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.AddBounce
  isExternal: true
  name: AddBounce
  nameWithType: PersonAgent.AddBounce
  fullName: SuperOffice.CRM.Services.PersonAgent.AddBounce
- uid: SuperOffice.CRM.Services.IPersonAgent.AddBounce(System.String)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.AddBounce(System.String)
  parent: SuperOffice.CRM.Services.IPersonAgent
  isExternal: true
  name: AddBounce(String)
  nameWithType: IPersonAgent.AddBounce(String)
  fullName: SuperOffice.CRM.Services.IPersonAgent.AddBounce(System.String)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IPersonAgent.AddBounce(System.String)
    name: AddBounce
    nameWithType: IPersonAgent.AddBounce
    fullName: SuperOffice.CRM.Services.IPersonAgent.AddBounce
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IPersonAgent.AddBounce(System.String)
    name: AddBounce
    nameWithType: IPersonAgent.AddBounce
    fullName: SuperOffice.CRM.Services.IPersonAgent.AddBounce
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.PersonAgent.ValidatePersonEntity*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.ValidatePersonEntity
  isExternal: true
  name: ValidatePersonEntity
  nameWithType: PersonAgent.ValidatePersonEntity
  fullName: SuperOffice.CRM.Services.PersonAgent.ValidatePersonEntity
- uid: SuperOffice.CRM.Services.IPersonAgent.ValidatePersonEntity(SuperOffice.CRM.Services.PersonEntity)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.ValidatePersonEntity(SuperOffice.CRM.Services.PersonEntity)
  parent: SuperOffice.CRM.Services.IPersonAgent
  isExternal: true
  name: ValidatePersonEntity(PersonEntity)
  nameWithType: IPersonAgent.ValidatePersonEntity(PersonEntity)
  fullName: SuperOffice.CRM.Services.IPersonAgent.ValidatePersonEntity(SuperOffice.CRM.Services.PersonEntity)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IPersonAgent.ValidatePersonEntity(SuperOffice.CRM.Services.PersonEntity)
    name: ValidatePersonEntity
    nameWithType: IPersonAgent.ValidatePersonEntity
    fullName: SuperOffice.CRM.Services.IPersonAgent.ValidatePersonEntity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Services.PersonEntity
    name: PersonEntity
    nameWithType: PersonEntity
    fullName: SuperOffice.CRM.Services.PersonEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IPersonAgent.ValidatePersonEntity(SuperOffice.CRM.Services.PersonEntity)
    name: ValidatePersonEntity
    nameWithType: IPersonAgent.ValidatePersonEntity
    fullName: SuperOffice.CRM.Services.IPersonAgent.ValidatePersonEntity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Services.PersonEntity
    name: PersonEntity
    nameWithType: PersonEntity
    fullName: SuperOffice.CRM.Services.PersonEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.StringDictionary
  isExternal: true
  name: StringDictionary
  nameWithType: StringDictionary
  fullName: SuperOffice.CRM.Services.StringDictionary
- uid: SuperOffice.CRM.Services.PersonAgent.AddBounceWithCount*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.AddBounceWithCount
  isExternal: true
  name: AddBounceWithCount
  nameWithType: PersonAgent.AddBounceWithCount
  fullName: SuperOffice.CRM.Services.PersonAgent.AddBounceWithCount
- uid: SuperOffice.CRM.Services.IPersonAgent.AddBounceWithCount(System.String,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.AddBounceWithCount(System.String,System.Int32)
  parent: SuperOffice.CRM.Services.IPersonAgent
  isExternal: true
  name: AddBounceWithCount(String, Int32)
  nameWithType: IPersonAgent.AddBounceWithCount(String, Int32)
  fullName: SuperOffice.CRM.Services.IPersonAgent.AddBounceWithCount(System.String, System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IPersonAgent.AddBounceWithCount(System.String,System.Int32)
    name: AddBounceWithCount
    nameWithType: IPersonAgent.AddBounceWithCount
    fullName: SuperOffice.CRM.Services.IPersonAgent.AddBounceWithCount
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IPersonAgent.AddBounceWithCount(System.String,System.Int32)
    name: AddBounceWithCount
    nameWithType: IPersonAgent.AddBounceWithCount
    fullName: SuperOffice.CRM.Services.IPersonAgent.AddBounceWithCount
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.PersonAgent.GetBestSoLanguageForTemplate*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.GetBestSoLanguageForTemplate
  isExternal: true
  name: GetBestSoLanguageForTemplate
  nameWithType: PersonAgent.GetBestSoLanguageForTemplate
  fullName: SuperOffice.CRM.Services.PersonAgent.GetBestSoLanguageForTemplate
- uid: SuperOffice.CRM.Services.IPersonAgent.GetBestSoLanguageForTemplate(System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetBestSoLanguageForTemplate(System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.IPersonAgent
  isExternal: true
  name: GetBestSoLanguageForTemplate(Int32, Int32)
  nameWithType: IPersonAgent.GetBestSoLanguageForTemplate(Int32, Int32)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetBestSoLanguageForTemplate(System.Int32, System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IPersonAgent.GetBestSoLanguageForTemplate(System.Int32,System.Int32)
    name: GetBestSoLanguageForTemplate
    nameWithType: IPersonAgent.GetBestSoLanguageForTemplate
    fullName: SuperOffice.CRM.Services.IPersonAgent.GetBestSoLanguageForTemplate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IPersonAgent.GetBestSoLanguageForTemplate(System.Int32,System.Int32)
    name: GetBestSoLanguageForTemplate
    nameWithType: IPersonAgent.GetBestSoLanguageForTemplate
    fullName: SuperOffice.CRM.Services.IPersonAgent.GetBestSoLanguageForTemplate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.PersonAgent.AddBounceWithDetails*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.AddBounceWithDetails
  isExternal: true
  name: AddBounceWithDetails
  nameWithType: PersonAgent.AddBounceWithDetails
  fullName: SuperOffice.CRM.Services.PersonAgent.AddBounceWithDetails
- uid: SuperOffice.CRM.Services.IPersonAgent.AddBounceWithDetails(System.String,System.Int32,System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.AddBounceWithDetails(System.String,System.Int32,System.Int32,System.String)
  parent: SuperOffice.CRM.Services.IPersonAgent
  isExternal: true
  name: AddBounceWithDetails(String, Int32, Int32, String)
  nameWithType: IPersonAgent.AddBounceWithDetails(String, Int32, Int32, String)
  fullName: SuperOffice.CRM.Services.IPersonAgent.AddBounceWithDetails(System.String, System.Int32, System.Int32, System.String)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IPersonAgent.AddBounceWithDetails(System.String,System.Int32,System.Int32,System.String)
    name: AddBounceWithDetails
    nameWithType: IPersonAgent.AddBounceWithDetails
    fullName: SuperOffice.CRM.Services.IPersonAgent.AddBounceWithDetails
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IPersonAgent.AddBounceWithDetails(System.String,System.Int32,System.Int32,System.String)
    name: AddBounceWithDetails
    nameWithType: IPersonAgent.AddBounceWithDetails
    fullName: SuperOffice.CRM.Services.IPersonAgent.AddBounceWithDetails
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.PersonAgent.GetPersonList*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.GetPersonList
  isExternal: true
  name: GetPersonList
  nameWithType: PersonAgent.GetPersonList
  fullName: SuperOffice.CRM.Services.PersonAgent.GetPersonList
- uid: SuperOffice.CRM.Services.IPersonAgent.GetPersonList(System.Int32[])
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetPersonList(System.Int32[])
  parent: SuperOffice.CRM.Services.IPersonAgent
  isExternal: true
  name: GetPersonList(Int32[])
  nameWithType: IPersonAgent.GetPersonList(Int32[])
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetPersonList(System.Int32[])
  nameWithType.vb: IPersonAgent.GetPersonList(Int32())
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.GetPersonList(System.Int32())
  name.vb: GetPersonList(Int32())
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IPersonAgent.GetPersonList(System.Int32[])
    name: GetPersonList
    nameWithType: IPersonAgent.GetPersonList
    fullName: SuperOffice.CRM.Services.IPersonAgent.GetPersonList
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IPersonAgent.GetPersonList(System.Int32[])
    name: GetPersonList
    nameWithType: IPersonAgent.GetPersonList
    fullName: SuperOffice.CRM.Services.IPersonAgent.GetPersonList
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.Person[]
  isExternal: true
  name: Person[]
  nameWithType: Person[]
  fullName: SuperOffice.CRM.Services.Person[]
  nameWithType.vb: Person()
  fullName.vb: SuperOffice.CRM.Services.Person()
  name.vb: Person()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.Person
    name: Person
    nameWithType: Person
    fullName: SuperOffice.CRM.Services.Person
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.Services.Person
    name: Person
    nameWithType: Person
    fullName: SuperOffice.CRM.Services.Person
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.PersonAgent.GetPersonsFromContact*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.GetPersonsFromContact
  isExternal: true
  name: GetPersonsFromContact
  nameWithType: PersonAgent.GetPersonsFromContact
  fullName: SuperOffice.CRM.Services.PersonAgent.GetPersonsFromContact
- uid: SuperOffice.CRM.Services.IPersonAgent.GetPersonsFromContact(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetPersonsFromContact(System.Int32)
  parent: SuperOffice.CRM.Services.IPersonAgent
  isExternal: true
  name: GetPersonsFromContact(Int32)
  nameWithType: IPersonAgent.GetPersonsFromContact(Int32)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetPersonsFromContact(System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IPersonAgent.GetPersonsFromContact(System.Int32)
    name: GetPersonsFromContact
    nameWithType: IPersonAgent.GetPersonsFromContact
    fullName: SuperOffice.CRM.Services.IPersonAgent.GetPersonsFromContact
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IPersonAgent.GetPersonsFromContact(System.Int32)
    name: GetPersonsFromContact
    nameWithType: IPersonAgent.GetPersonsFromContact
    fullName: SuperOffice.CRM.Services.IPersonAgent.GetPersonsFromContact
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.PersonAgent.GetPersonsFromProject*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.GetPersonsFromProject
  isExternal: true
  name: GetPersonsFromProject
  nameWithType: PersonAgent.GetPersonsFromProject
  fullName: SuperOffice.CRM.Services.PersonAgent.GetPersonsFromProject
- uid: SuperOffice.CRM.Services.IPersonAgent.GetPersonsFromProject(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetPersonsFromProject(System.Int32)
  parent: SuperOffice.CRM.Services.IPersonAgent
  isExternal: true
  name: GetPersonsFromProject(Int32)
  nameWithType: IPersonAgent.GetPersonsFromProject(Int32)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetPersonsFromProject(System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IPersonAgent.GetPersonsFromProject(System.Int32)
    name: GetPersonsFromProject
    nameWithType: IPersonAgent.GetPersonsFromProject
    fullName: SuperOffice.CRM.Services.IPersonAgent.GetPersonsFromProject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IPersonAgent.GetPersonsFromProject(System.Int32)
    name: GetPersonsFromProject
    nameWithType: IPersonAgent.GetPersonsFromProject
    fullName: SuperOffice.CRM.Services.IPersonAgent.GetPersonsFromProject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.PersonAgent.GetColleagues*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.GetColleagues
  isExternal: true
  name: GetColleagues
  nameWithType: PersonAgent.GetColleagues
  fullName: SuperOffice.CRM.Services.PersonAgent.GetColleagues
- uid: SuperOffice.CRM.Services.IPersonAgent.GetColleagues
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetColleagues
  parent: SuperOffice.CRM.Services.IPersonAgent
  isExternal: true
  name: GetColleagues()
  nameWithType: IPersonAgent.GetColleagues()
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetColleagues()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IPersonAgent.GetColleagues
    name: GetColleagues
    nameWithType: IPersonAgent.GetColleagues
    fullName: SuperOffice.CRM.Services.IPersonAgent.GetColleagues
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IPersonAgent.GetColleagues
    name: GetColleagues
    nameWithType: IPersonAgent.GetColleagues
    fullName: SuperOffice.CRM.Services.IPersonAgent.GetColleagues
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.PersonAgent.GetColleaguesByDepartment*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.GetColleaguesByDepartment
  isExternal: true
  name: GetColleaguesByDepartment
  nameWithType: PersonAgent.GetColleaguesByDepartment
  fullName: SuperOffice.CRM.Services.PersonAgent.GetColleaguesByDepartment
- uid: SuperOffice.CRM.Services.IPersonAgent.GetColleaguesByDepartment(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetColleaguesByDepartment(System.Int32)
  parent: SuperOffice.CRM.Services.IPersonAgent
  isExternal: true
  name: GetColleaguesByDepartment(Int32)
  nameWithType: IPersonAgent.GetColleaguesByDepartment(Int32)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetColleaguesByDepartment(System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IPersonAgent.GetColleaguesByDepartment(System.Int32)
    name: GetColleaguesByDepartment
    nameWithType: IPersonAgent.GetColleaguesByDepartment
    fullName: SuperOffice.CRM.Services.IPersonAgent.GetColleaguesByDepartment
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IPersonAgent.GetColleaguesByDepartment(System.Int32)
    name: GetColleaguesByDepartment
    nameWithType: IPersonAgent.GetColleaguesByDepartment
    fullName: SuperOffice.CRM.Services.IPersonAgent.GetColleaguesByDepartment
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.PersonAgent.GetColleaguesBySource*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.GetColleaguesBySource
  isExternal: true
  name: GetColleaguesBySource
  nameWithType: PersonAgent.GetColleaguesBySource
  fullName: SuperOffice.CRM.Services.PersonAgent.GetColleaguesBySource
- uid: SuperOffice.CRM.Services.IPersonAgent.GetColleaguesBySource(SuperOffice.CRM.Services.Util.AssociateSourceType,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetColleaguesBySource(SuperOffice.CRM.Services.Util.AssociateSourceType,System.Int32)
  parent: SuperOffice.CRM.Services.IPersonAgent
  isExternal: true
  name: GetColleaguesBySource(AssociateSourceType, Int32)
  nameWithType: IPersonAgent.GetColleaguesBySource(AssociateSourceType, Int32)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetColleaguesBySource(SuperOffice.CRM.Services.Util.AssociateSourceType, System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IPersonAgent.GetColleaguesBySource(SuperOffice.CRM.Services.Util.AssociateSourceType,System.Int32)
    name: GetColleaguesBySource
    nameWithType: IPersonAgent.GetColleaguesBySource
    fullName: SuperOffice.CRM.Services.IPersonAgent.GetColleaguesBySource
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Services.Util.AssociateSourceType
    name: AssociateSourceType
    nameWithType: AssociateSourceType
    fullName: SuperOffice.CRM.Services.Util.AssociateSourceType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IPersonAgent.GetColleaguesBySource(SuperOffice.CRM.Services.Util.AssociateSourceType,System.Int32)
    name: GetColleaguesBySource
    nameWithType: IPersonAgent.GetColleaguesBySource
    fullName: SuperOffice.CRM.Services.IPersonAgent.GetColleaguesBySource
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Services.Util.AssociateSourceType
    name: AssociateSourceType
    nameWithType: AssociateSourceType
    fullName: SuperOffice.CRM.Services.Util.AssociateSourceType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.Util.AssociateSourceType
  commentId: T:SuperOffice.CRM.Services.Util.AssociateSourceType
  parent: SuperOffice.CRM.Services.Util
  isExternal: true
  name: AssociateSourceType
  nameWithType: AssociateSourceType
  fullName: SuperOffice.CRM.Services.Util.AssociateSourceType
- uid: SuperOffice.CRM.Services.Util
  commentId: N:SuperOffice.CRM.Services.Util
  isExternal: true
  name: SuperOffice.CRM.Services.Util
  nameWithType: SuperOffice.CRM.Services.Util
  fullName: SuperOffice.CRM.Services.Util
- uid: SuperOffice.CRM.Services.PersonAgent.GetMyOwner*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.GetMyOwner
  isExternal: true
  name: GetMyOwner
  nameWithType: PersonAgent.GetMyOwner
  fullName: SuperOffice.CRM.Services.PersonAgent.GetMyOwner
- uid: SuperOffice.CRM.Services.IPersonAgent.GetMyOwner
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetMyOwner
  parent: SuperOffice.CRM.Services.IPersonAgent
  isExternal: true
  name: GetMyOwner()
  nameWithType: IPersonAgent.GetMyOwner()
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetMyOwner()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IPersonAgent.GetMyOwner
    name: GetMyOwner
    nameWithType: IPersonAgent.GetMyOwner
    fullName: SuperOffice.CRM.Services.IPersonAgent.GetMyOwner
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IPersonAgent.GetMyOwner
    name: GetMyOwner
    nameWithType: IPersonAgent.GetMyOwner
    fullName: SuperOffice.CRM.Services.IPersonAgent.GetMyOwner
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.PersonAgent.GetOwnerOnPersonId*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.GetOwnerOnPersonId
  isExternal: true
  name: GetOwnerOnPersonId
  nameWithType: PersonAgent.GetOwnerOnPersonId
  fullName: SuperOffice.CRM.Services.PersonAgent.GetOwnerOnPersonId
- uid: SuperOffice.CRM.Services.IPersonAgent.GetOwnerOnPersonId(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetOwnerOnPersonId(System.Int32)
  parent: SuperOffice.CRM.Services.IPersonAgent
  isExternal: true
  name: GetOwnerOnPersonId(Int32)
  nameWithType: IPersonAgent.GetOwnerOnPersonId(Int32)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetOwnerOnPersonId(System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IPersonAgent.GetOwnerOnPersonId(System.Int32)
    name: GetOwnerOnPersonId
    nameWithType: IPersonAgent.GetOwnerOnPersonId
    fullName: SuperOffice.CRM.Services.IPersonAgent.GetOwnerOnPersonId
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IPersonAgent.GetOwnerOnPersonId(System.Int32)
    name: GetOwnerOnPersonId
    nameWithType: IPersonAgent.GetOwnerOnPersonId
    fullName: SuperOffice.CRM.Services.IPersonAgent.GetOwnerOnPersonId
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.PersonAgent.ChangePersonRank*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.ChangePersonRank
  isExternal: true
  name: ChangePersonRank
  nameWithType: PersonAgent.ChangePersonRank
  fullName: SuperOffice.CRM.Services.PersonAgent.ChangePersonRank
- uid: SuperOffice.CRM.Services.IPersonAgent.ChangePersonRank(System.Int32,System.Boolean)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.ChangePersonRank(System.Int32,System.Boolean)
  parent: SuperOffice.CRM.Services.IPersonAgent
  isExternal: true
  name: ChangePersonRank(Int32, Boolean)
  nameWithType: IPersonAgent.ChangePersonRank(Int32, Boolean)
  fullName: SuperOffice.CRM.Services.IPersonAgent.ChangePersonRank(System.Int32, System.Boolean)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IPersonAgent.ChangePersonRank(System.Int32,System.Boolean)
    name: ChangePersonRank
    nameWithType: IPersonAgent.ChangePersonRank
    fullName: SuperOffice.CRM.Services.IPersonAgent.ChangePersonRank
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IPersonAgent.ChangePersonRank(System.Int32,System.Boolean)
    name: ChangePersonRank
    nameWithType: IPersonAgent.ChangePersonRank
    fullName: SuperOffice.CRM.Services.IPersonAgent.ChangePersonRank
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.PersonAgent.SetPersonRank*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.SetPersonRank
  isExternal: true
  name: SetPersonRank
  nameWithType: PersonAgent.SetPersonRank
  fullName: SuperOffice.CRM.Services.PersonAgent.SetPersonRank
- uid: SuperOffice.CRM.Services.IPersonAgent.SetPersonRank(System.Int32,System.Int16)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.SetPersonRank(System.Int32,System.Int16)
  parent: SuperOffice.CRM.Services.IPersonAgent
  isExternal: true
  name: SetPersonRank(Int32, Int16)
  nameWithType: IPersonAgent.SetPersonRank(Int32, Int16)
  fullName: SuperOffice.CRM.Services.IPersonAgent.SetPersonRank(System.Int32, System.Int16)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IPersonAgent.SetPersonRank(System.Int32,System.Int16)
    name: SetPersonRank
    nameWithType: IPersonAgent.SetPersonRank
    fullName: SuperOffice.CRM.Services.IPersonAgent.SetPersonRank
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int16
    name: Int16
    nameWithType: Int16
    fullName: System.Int16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IPersonAgent.SetPersonRank(System.Int32,System.Int16)
    name: SetPersonRank
    nameWithType: IPersonAgent.SetPersonRank
    fullName: SuperOffice.CRM.Services.IPersonAgent.SetPersonRank
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int16
    name: Int16
    nameWithType: Int16
    fullName: System.Int16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: SuperOffice.CRM.Services.PersonAgent.NormalizeRanks*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.NormalizeRanks
  isExternal: true
  name: NormalizeRanks
  nameWithType: PersonAgent.NormalizeRanks
  fullName: SuperOffice.CRM.Services.PersonAgent.NormalizeRanks
- uid: SuperOffice.CRM.Services.IPersonAgent.NormalizeRanks(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.NormalizeRanks(System.Int32)
  parent: SuperOffice.CRM.Services.IPersonAgent
  isExternal: true
  name: NormalizeRanks(Int32)
  nameWithType: IPersonAgent.NormalizeRanks(Int32)
  fullName: SuperOffice.CRM.Services.IPersonAgent.NormalizeRanks(System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IPersonAgent.NormalizeRanks(System.Int32)
    name: NormalizeRanks
    nameWithType: IPersonAgent.NormalizeRanks
    fullName: SuperOffice.CRM.Services.IPersonAgent.NormalizeRanks
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IPersonAgent.NormalizeRanks(System.Int32)
    name: NormalizeRanks
    nameWithType: IPersonAgent.NormalizeRanks
    fullName: SuperOffice.CRM.Services.IPersonAgent.NormalizeRanks
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.PersonAgent.GetConsentPerson*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.GetConsentPerson
  isExternal: true
  name: GetConsentPerson
  nameWithType: PersonAgent.GetConsentPerson
  fullName: SuperOffice.CRM.Services.PersonAgent.GetConsentPerson
- uid: SuperOffice.CRM.Services.IPersonAgent.GetConsentPerson(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetConsentPerson(System.Int32)
  parent: SuperOffice.CRM.Services.IPersonAgent
  isExternal: true
  name: GetConsentPerson(Int32)
  nameWithType: IPersonAgent.GetConsentPerson(Int32)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetConsentPerson(System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IPersonAgent.GetConsentPerson(System.Int32)
    name: GetConsentPerson
    nameWithType: IPersonAgent.GetConsentPerson
    fullName: SuperOffice.CRM.Services.IPersonAgent.GetConsentPerson
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IPersonAgent.GetConsentPerson(System.Int32)
    name: GetConsentPerson
    nameWithType: IPersonAgent.GetConsentPerson
    fullName: SuperOffice.CRM.Services.IPersonAgent.GetConsentPerson
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.PersonAgent.#ctor*
  commentId: Overload:SuperOffice.CRM.Services.PersonAgent.#ctor
  isExternal: true
  name: PersonAgent
  nameWithType: PersonAgent.PersonAgent
  fullName: SuperOffice.CRM.Services.PersonAgent.PersonAgent
