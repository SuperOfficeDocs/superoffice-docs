### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Services.IBulkUpdateAgent
  commentId: T:SuperOffice.CRM.Services.IBulkUpdateAgent
  id: IBulkUpdateAgent
  parent: SuperOffice.CRM.Services
  children:
  - SuperOffice.CRM.Services.IBulkUpdateAgent.ExecuteByEntityIdsAsync(SuperOffice.CRM.Services.FieldValueInfo[],System.String,System.String,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IBulkUpdateAgent.ExecuteBySelectionIdAsync(SuperOffice.CRM.Services.FieldValueInfo[],System.String,System.String,System.Int32,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IBulkUpdateAgent.GetAvailableFieldsAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IBulkUpdateAgent.GetJobResultAsJsonFromBinaryObjectIdAsync(System.String,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IBulkUpdateAgent.GetJobResultsFromStorageAsJsonAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IBulkUpdateAgent.GetStoredFieldsAsync(System.String,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IBulkUpdateAgent.RemoveStoredFieldsAndGetDefaultFieldsAsync(System.String,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IBulkUpdateAgent.RemoveStoredFieldsAsync(System.String,System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IBulkUpdateAgent
  nameWithType: IBulkUpdateAgent
  fullName: SuperOffice.CRM.Services.IBulkUpdateAgent
  type: Interface
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nInterface for the BulkUpdate Agent\nAgent used for bulk update methods\n"
  example:
  - "\n<pre><code>  using SuperOffice;\n  using SuperOffice.CRM.Services;\n\n  using (SoSession mySession = SoSession.Authenticate(&quot;user&quot;, &quot;pass&quot;))\n  {\n     using (BulkUpdateAgent agent = new BulkUpdateAgent())\n     {\n        // call methods on agent here...\n     }\n  }</code></pre>\n"
  syntax:
    content: >-
      [Agent("BulkUpdate Agent", "Interface for the BulkUpdate Agent. Agent used for bulk update methods")]

      public interface IBulkUpdateAgent : IAgent
    content.vb: >-
      <Agent("BulkUpdate Agent", "Interface for the BulkUpdate Agent. Agent used for bulk update methods")>

      Public Interface IBulkUpdateAgent
          Inherits IAgent
  attributes:
  - type: SuperOffice.CRM.Services.Reflection.AgentAttribute
    ctor: SuperOffice.CRM.Services.Reflection.AgentAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: BulkUpdate Agent
    - type: System.String
      value: Interface for the BulkUpdate Agent. Agent used for bulk update methods
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.CRM.Services.IBulkUpdateAgent.GetAvailableFieldsAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IBulkUpdateAgent.GetAvailableFieldsAsync(System.String,System.Threading.CancellationToken)
  id: GetAvailableFieldsAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IBulkUpdateAgent
  langs:
  - csharp
  - vb
  name: GetAvailableFieldsAsync(String, CancellationToken)
  nameWithType: IBulkUpdateAgent.GetAvailableFieldsAsync(String, CancellationToken)
  fullName: SuperOffice.CRM.Services.IBulkUpdateAgent.GetAvailableFieldsAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet all available fields for a given tablename/entity\n"
  syntax:
    content: Task<FieldValueInfo[]> GetAvailableFieldsAsync(string tablename, CancellationToken cancellationToken = null)
    parameters:
    - id: tablename
      type: System.String
      description: The name of the wanted tablename
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.FieldValueInfo[]}
      description: Returns array of the available fields for the given entity
    content.vb: Function GetAvailableFieldsAsync(tablename As String, cancellationToken As CancellationToken = Nothing) As Task(Of FieldValueInfo())
  overload: SuperOffice.CRM.Services.IBulkUpdateAgent.GetAvailableFieldsAsync*
- uid: SuperOffice.CRM.Services.IBulkUpdateAgent.GetStoredFieldsAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IBulkUpdateAgent.GetStoredFieldsAsync(System.String,System.String,System.Threading.CancellationToken)
  id: GetStoredFieldsAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IBulkUpdateAgent
  langs:
  - csharp
  - vb
  name: GetStoredFieldsAsync(String, String, CancellationToken)
  nameWithType: IBulkUpdateAgent.GetStoredFieldsAsync(String, String, CancellationToken)
  fullName: SuperOffice.CRM.Services.IBulkUpdateAgent.GetStoredFieldsAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet all stored fields for a given tablename/entity and context\n"
  syntax:
    content: Task<FieldValueInfo[]> GetStoredFieldsAsync(string tablename, string context, CancellationToken cancellationToken = null)
    parameters:
    - id: tablename
      type: System.String
      description: The name of the wanted tablename
    - id: context
      type: System.String
      description: Where is the function called for
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.FieldValueInfo[]}
      description: Returns array of the stored or default fields for the given entity
    content.vb: Function GetStoredFieldsAsync(tablename As String, context As String, cancellationToken As CancellationToken = Nothing) As Task(Of FieldValueInfo())
  overload: SuperOffice.CRM.Services.IBulkUpdateAgent.GetStoredFieldsAsync*
- uid: SuperOffice.CRM.Services.IBulkUpdateAgent.ExecuteBySelectionIdAsync(SuperOffice.CRM.Services.FieldValueInfo[],System.String,System.String,System.Int32,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IBulkUpdateAgent.ExecuteBySelectionIdAsync(SuperOffice.CRM.Services.FieldValueInfo[],System.String,System.String,System.Int32,System.Boolean,System.Threading.CancellationToken)
  id: ExecuteBySelectionIdAsync(SuperOffice.CRM.Services.FieldValueInfo[],System.String,System.String,System.Int32,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IBulkUpdateAgent
  langs:
  - csharp
  - vb
  name: ExecuteBySelectionIdAsync(FieldValueInfo[], String, String, Int32, Boolean, CancellationToken)
  nameWithType: IBulkUpdateAgent.ExecuteBySelectionIdAsync(FieldValueInfo[], String, String, Int32, Boolean, CancellationToken)
  fullName: SuperOffice.CRM.Services.IBulkUpdateAgent.ExecuteBySelectionIdAsync(SuperOffice.CRM.Services.FieldValueInfo[], System.String, System.String, System.Int32, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nDo the batchupdate on this selection\n"
  syntax:
    content: Task<int> ExecuteBySelectionIdAsync(FieldValueInfo[] fieldValueInfos, string tableName, string context, int selectionId, bool isShadow, CancellationToken cancellationToken = null)
    parameters:
    - id: fieldValueInfos
      type: SuperOffice.CRM.Services.FieldValueInfo[]
      description: The name of the wanted tablename
    - id: tableName
      type: System.String
      description: The name of the table to bulk update
    - id: context
      type: System.String
      description: Where is the function called for
    - id: selectionId
      type: System.Int32
      description: The id of the selection
    - id: isShadow
      type: System.Boolean
      description: Use the shadow selection
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: Return batchtaskinfoid
    content.vb: Function ExecuteBySelectionIdAsync(fieldValueInfos As FieldValueInfo(), tableName As String, context As String, selectionId As Integer, isShadow As Boolean, cancellationToken As CancellationToken = Nothing) As Task(Of Integer)
  overload: SuperOffice.CRM.Services.IBulkUpdateAgent.ExecuteBySelectionIdAsync*
  nameWithType.vb: IBulkUpdateAgent.ExecuteBySelectionIdAsync(FieldValueInfo(), String, String, Int32, Boolean, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IBulkUpdateAgent.ExecuteBySelectionIdAsync(SuperOffice.CRM.Services.FieldValueInfo(), System.String, System.String, System.Int32, System.Boolean, System.Threading.CancellationToken)
  name.vb: ExecuteBySelectionIdAsync(FieldValueInfo(), String, String, Int32, Boolean, CancellationToken)
- uid: SuperOffice.CRM.Services.IBulkUpdateAgent.ExecuteByEntityIdsAsync(SuperOffice.CRM.Services.FieldValueInfo[],System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IBulkUpdateAgent.ExecuteByEntityIdsAsync(SuperOffice.CRM.Services.FieldValueInfo[],System.String,System.String,System.String,System.Threading.CancellationToken)
  id: ExecuteByEntityIdsAsync(SuperOffice.CRM.Services.FieldValueInfo[],System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IBulkUpdateAgent
  langs:
  - csharp
  - vb
  name: ExecuteByEntityIdsAsync(FieldValueInfo[], String, String, String, CancellationToken)
  nameWithType: IBulkUpdateAgent.ExecuteByEntityIdsAsync(FieldValueInfo[], String, String, String, CancellationToken)
  fullName: SuperOffice.CRM.Services.IBulkUpdateAgent.ExecuteByEntityIdsAsync(SuperOffice.CRM.Services.FieldValueInfo[], System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nDo the batchupdate on selected\n"
  syntax:
    content: Task<int> ExecuteByEntityIdsAsync(FieldValueInfo[] fieldValueInfos, string tableName, string context, string ids, CancellationToken cancellationToken = null)
    parameters:
    - id: fieldValueInfos
      type: SuperOffice.CRM.Services.FieldValueInfo[]
      description: The name of the wanted tablename
    - id: tableName
      type: System.String
      description: The name of the table to bulk update
    - id: context
      type: System.String
      description: Where is the function called from
    - id: ids
      type: System.String
      description: Comma separated string of the ids of the entities to update
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: Return batchtaskinfoid
    content.vb: Function ExecuteByEntityIdsAsync(fieldValueInfos As FieldValueInfo(), tableName As String, context As String, ids As String, cancellationToken As CancellationToken = Nothing) As Task(Of Integer)
  overload: SuperOffice.CRM.Services.IBulkUpdateAgent.ExecuteByEntityIdsAsync*
  nameWithType.vb: IBulkUpdateAgent.ExecuteByEntityIdsAsync(FieldValueInfo(), String, String, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IBulkUpdateAgent.ExecuteByEntityIdsAsync(SuperOffice.CRM.Services.FieldValueInfo(), System.String, System.String, System.String, System.Threading.CancellationToken)
  name.vb: ExecuteByEntityIdsAsync(FieldValueInfo(), String, String, String, CancellationToken)
- uid: SuperOffice.CRM.Services.IBulkUpdateAgent.GetJobResultsFromStorageAsJsonAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IBulkUpdateAgent.GetJobResultsFromStorageAsJsonAsync(System.Threading.CancellationToken)
  id: GetJobResultsFromStorageAsJsonAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IBulkUpdateAgent
  langs:
  - csharp
  - vb
  name: GetJobResultsFromStorageAsJsonAsync(CancellationToken)
  nameWithType: IBulkUpdateAgent.GetJobResultsFromStorageAsJsonAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.IBulkUpdateAgent.GetJobResultsFromStorageAsJsonAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet result of the batchupdate job\n"
  syntax:
    content: Task<string[]> GetJobResultsFromStorageAsJsonAsync(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String[]}
      description: Result of job as json
    content.vb: Function GetJobResultsFromStorageAsJsonAsync(cancellationToken As CancellationToken = Nothing) As Task(Of String())
  overload: SuperOffice.CRM.Services.IBulkUpdateAgent.GetJobResultsFromStorageAsJsonAsync*
- uid: SuperOffice.CRM.Services.IBulkUpdateAgent.RemoveStoredFieldsAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IBulkUpdateAgent.RemoveStoredFieldsAsync(System.String,System.String,System.Threading.CancellationToken)
  id: RemoveStoredFieldsAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IBulkUpdateAgent
  langs:
  - csharp
  - vb
  name: RemoveStoredFieldsAsync(String, String, CancellationToken)
  nameWithType: IBulkUpdateAgent.RemoveStoredFieldsAsync(String, String, CancellationToken)
  fullName: SuperOffice.CRM.Services.IBulkUpdateAgent.RemoveStoredFieldsAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nRemove the stored settings of the bulk update for this table from this context\n"
  syntax:
    content: Task<bool> RemoveStoredFieldsAsync(string tableName, string context, CancellationToken cancellationToken = null)
    parameters:
    - id: tableName
      type: System.String
      description: The name of the table to remove stored settings from
    - id: context
      type: System.String
      description: Where is the function called from that we will remove the settings from
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Function RemoveStoredFieldsAsync(tableName As String, context As String, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.Services.IBulkUpdateAgent.RemoveStoredFieldsAsync*
- uid: SuperOffice.CRM.Services.IBulkUpdateAgent.RemoveStoredFieldsAndGetDefaultFieldsAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IBulkUpdateAgent.RemoveStoredFieldsAndGetDefaultFieldsAsync(System.String,System.String,System.Threading.CancellationToken)
  id: RemoveStoredFieldsAndGetDefaultFieldsAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IBulkUpdateAgent
  langs:
  - csharp
  - vb
  name: RemoveStoredFieldsAndGetDefaultFieldsAsync(String, String, CancellationToken)
  nameWithType: IBulkUpdateAgent.RemoveStoredFieldsAndGetDefaultFieldsAsync(String, String, CancellationToken)
  fullName: SuperOffice.CRM.Services.IBulkUpdateAgent.RemoveStoredFieldsAndGetDefaultFieldsAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nRemove the stored settings of the bulk update for this table from this context, to get the default settings instead\n"
  syntax:
    content: Task<FieldValueInfo[]> RemoveStoredFieldsAndGetDefaultFieldsAsync(string tableName, string context, CancellationToken cancellationToken = null)
    parameters:
    - id: tableName
      type: System.String
      description: The name of the table to remove stored settings from
    - id: context
      type: System.String
      description: Where is the function called from that we will remove the settings from
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.FieldValueInfo[]}
      description: Returns array of the available fields for the given tablename
    content.vb: Function RemoveStoredFieldsAndGetDefaultFieldsAsync(tableName As String, context As String, cancellationToken As CancellationToken = Nothing) As Task(Of FieldValueInfo())
  overload: SuperOffice.CRM.Services.IBulkUpdateAgent.RemoveStoredFieldsAndGetDefaultFieldsAsync*
- uid: SuperOffice.CRM.Services.IBulkUpdateAgent.GetJobResultAsJsonFromBinaryObjectIdAsync(System.String,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IBulkUpdateAgent.GetJobResultAsJsonFromBinaryObjectIdAsync(System.String,System.Int32,System.Threading.CancellationToken)
  id: GetJobResultAsJsonFromBinaryObjectIdAsync(System.String,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IBulkUpdateAgent
  langs:
  - csharp
  - vb
  name: GetJobResultAsJsonFromBinaryObjectIdAsync(String, Int32, CancellationToken)
  nameWithType: IBulkUpdateAgent.GetJobResultAsJsonFromBinaryObjectIdAsync(String, Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.IBulkUpdateAgent.GetJobResultAsJsonFromBinaryObjectIdAsync(System.String, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet result of the batchupdate job\n"
  syntax:
    content: Task<string> GetJobResultAsJsonFromBinaryObjectIdAsync(string tableName, int binaryObjectId, CancellationToken cancellationToken = null)
    parameters:
    - id: tableName
      type: System.String
      description: The name of the table that was updated to show the log from
    - id: binaryObjectId
      type: System.Int32
      description: Which binaryobject id has stored the job result
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Result of job as json
    content.vb: Function GetJobResultAsJsonFromBinaryObjectIdAsync(tableName As String, binaryObjectId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Services.IBulkUpdateAgent.GetJobResultAsJsonFromBinaryObjectIdAsync*
references:
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
- uid: SuperOffice.CRM.Services.IBulkUpdateAgent.GetAvailableFieldsAsync*
  commentId: Overload:SuperOffice.CRM.Services.IBulkUpdateAgent.GetAvailableFieldsAsync
  isExternal: true
  name: GetAvailableFieldsAsync
  nameWithType: IBulkUpdateAgent.GetAvailableFieldsAsync
  fullName: SuperOffice.CRM.Services.IBulkUpdateAgent.GetAvailableFieldsAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.FieldValueInfo[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Services.FieldValueInfo[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<FieldValueInfo[]>
  nameWithType: Task<FieldValueInfo[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.FieldValueInfo[]>
  nameWithType.vb: Task(Of FieldValueInfo())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.FieldValueInfo())
  name.vb: Task(Of FieldValueInfo())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Services.FieldValueInfo
    name: FieldValueInfo
    nameWithType: FieldValueInfo
    fullName: SuperOffice.CRM.Services.FieldValueInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Services.FieldValueInfo
    name: FieldValueInfo
    nameWithType: FieldValueInfo
    fullName: SuperOffice.CRM.Services.FieldValueInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.IBulkUpdateAgent.GetStoredFieldsAsync*
  commentId: Overload:SuperOffice.CRM.Services.IBulkUpdateAgent.GetStoredFieldsAsync
  isExternal: true
  name: GetStoredFieldsAsync
  nameWithType: IBulkUpdateAgent.GetStoredFieldsAsync
  fullName: SuperOffice.CRM.Services.IBulkUpdateAgent.GetStoredFieldsAsync
- uid: SuperOffice.CRM.Services.IBulkUpdateAgent.ExecuteBySelectionIdAsync*
  commentId: Overload:SuperOffice.CRM.Services.IBulkUpdateAgent.ExecuteBySelectionIdAsync
  isExternal: true
  name: ExecuteBySelectionIdAsync
  nameWithType: IBulkUpdateAgent.ExecuteBySelectionIdAsync
  fullName: SuperOffice.CRM.Services.IBulkUpdateAgent.ExecuteBySelectionIdAsync
- uid: SuperOffice.CRM.Services.FieldValueInfo[]
  isExternal: true
  name: FieldValueInfo[]
  nameWithType: FieldValueInfo[]
  fullName: SuperOffice.CRM.Services.FieldValueInfo[]
  nameWithType.vb: FieldValueInfo()
  fullName.vb: SuperOffice.CRM.Services.FieldValueInfo()
  name.vb: FieldValueInfo()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.FieldValueInfo
    name: FieldValueInfo
    nameWithType: FieldValueInfo
    fullName: SuperOffice.CRM.Services.FieldValueInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.Services.FieldValueInfo
    name: FieldValueInfo
    nameWithType: FieldValueInfo
    fullName: SuperOffice.CRM.Services.FieldValueInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: '!:System.Threading.Tasks.Task{System.Int32}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  nameWithType.vb: Task(Of Int32)
  fullName.vb: System.Threading.Tasks.Task(Of System.Int32)
  name.vb: Task(Of Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.IBulkUpdateAgent.ExecuteByEntityIdsAsync*
  commentId: Overload:SuperOffice.CRM.Services.IBulkUpdateAgent.ExecuteByEntityIdsAsync
  isExternal: true
  name: ExecuteByEntityIdsAsync
  nameWithType: IBulkUpdateAgent.ExecuteByEntityIdsAsync
  fullName: SuperOffice.CRM.Services.IBulkUpdateAgent.ExecuteByEntityIdsAsync
- uid: SuperOffice.CRM.Services.IBulkUpdateAgent.GetJobResultsFromStorageAsJsonAsync*
  commentId: Overload:SuperOffice.CRM.Services.IBulkUpdateAgent.GetJobResultsFromStorageAsJsonAsync
  isExternal: true
  name: GetJobResultsFromStorageAsJsonAsync
  nameWithType: IBulkUpdateAgent.GetJobResultsFromStorageAsJsonAsync
  fullName: SuperOffice.CRM.Services.IBulkUpdateAgent.GetJobResultsFromStorageAsJsonAsync
- uid: System.Threading.Tasks.Task{System.String[]}
  commentId: '!:System.Threading.Tasks.Task{System.String[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<String[]>
  nameWithType: Task<String[]>
  fullName: System.Threading.Tasks.Task<System.String[]>
  nameWithType.vb: Task(Of String())
  fullName.vb: System.Threading.Tasks.Task(Of System.String())
  name.vb: Task(Of String())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.IBulkUpdateAgent.RemoveStoredFieldsAsync*
  commentId: Overload:SuperOffice.CRM.Services.IBulkUpdateAgent.RemoveStoredFieldsAsync
  isExternal: true
  name: RemoveStoredFieldsAsync
  nameWithType: IBulkUpdateAgent.RemoveStoredFieldsAsync
  fullName: SuperOffice.CRM.Services.IBulkUpdateAgent.RemoveStoredFieldsAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: '!:System.Threading.Tasks.Task{System.Boolean}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.IBulkUpdateAgent.RemoveStoredFieldsAndGetDefaultFieldsAsync*
  commentId: Overload:SuperOffice.CRM.Services.IBulkUpdateAgent.RemoveStoredFieldsAndGetDefaultFieldsAsync
  isExternal: true
  name: RemoveStoredFieldsAndGetDefaultFieldsAsync
  nameWithType: IBulkUpdateAgent.RemoveStoredFieldsAndGetDefaultFieldsAsync
  fullName: SuperOffice.CRM.Services.IBulkUpdateAgent.RemoveStoredFieldsAndGetDefaultFieldsAsync
- uid: SuperOffice.CRM.Services.IBulkUpdateAgent.GetJobResultAsJsonFromBinaryObjectIdAsync*
  commentId: Overload:SuperOffice.CRM.Services.IBulkUpdateAgent.GetJobResultAsJsonFromBinaryObjectIdAsync
  isExternal: true
  name: GetJobResultAsJsonFromBinaryObjectIdAsync
  nameWithType: IBulkUpdateAgent.GetJobResultAsJsonFromBinaryObjectIdAsync
  fullName: SuperOffice.CRM.Services.IBulkUpdateAgent.GetJobResultAsJsonFromBinaryObjectIdAsync
- uid: System.Threading.Tasks.Task{System.String}
  commentId: '!:System.Threading.Tasks.Task{System.String}'
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
