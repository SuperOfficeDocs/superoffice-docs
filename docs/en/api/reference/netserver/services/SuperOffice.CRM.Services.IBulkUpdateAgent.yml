### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Services.IBulkUpdateAgent
  commentId: T:SuperOffice.CRM.Services.IBulkUpdateAgent
  id: IBulkUpdateAgent
  parent: SuperOffice.CRM.Services
  children:
  - SuperOffice.CRM.Services.IBulkUpdateAgent.ExecuteByEntityIds(SuperOffice.CRM.Services.FieldValueInfo[],System.String,System.String,System.String)
  - SuperOffice.CRM.Services.IBulkUpdateAgent.ExecuteBySelectionId(SuperOffice.CRM.Services.FieldValueInfo[],System.String,System.String,System.Int32,System.Boolean)
  - SuperOffice.CRM.Services.IBulkUpdateAgent.GetAvailableFields(System.String)
  - SuperOffice.CRM.Services.IBulkUpdateAgent.GetJobResultAsJsonFromBinaryObjectId(System.String,System.Int32)
  - SuperOffice.CRM.Services.IBulkUpdateAgent.GetJobResultsFromStorageAsJson
  - SuperOffice.CRM.Services.IBulkUpdateAgent.GetStoredFields(System.String,System.String)
  - SuperOffice.CRM.Services.IBulkUpdateAgent.RemoveStoredFields(System.String,System.String)
  - SuperOffice.CRM.Services.IBulkUpdateAgent.RemoveStoredFieldsAndGetDefaultFields(System.String,System.String)
  langs:
  - csharp
  - vb
  name: IBulkUpdateAgent
  nameWithType: IBulkUpdateAgent
  fullName: SuperOffice.CRM.Services.IBulkUpdateAgent
  type: Interface
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nInterface for the BulkUpdate Agent\nAgent used for bulk update methods\n"
  example:
  - "\n<pre><code>  using SuperOffice;\n  using SuperOffice.CRM.Services;\n\n  using (SoSession mySession = SoSession.Authenticate(&quot;user&quot;, &quot;pass&quot;))\n  {\n     using (BulkUpdateAgent agent = new BulkUpdateAgent())\n     {\n        // call methods on agent here...\n     }\n  }</code></pre>\n"
  syntax:
    content: >-
      [Agent("BulkUpdate Agent", "Interface for the BulkUpdate Agent. Agent used for bulk update methods")]

      public interface IBulkUpdateAgent : IAgent
    content.vb: >-
      <Agent("BulkUpdate Agent", "Interface for the BulkUpdate Agent. Agent used for bulk update methods")>

      Public Interface IBulkUpdateAgent
          Inherits IAgent
  attributes:
  - type: SuperOffice.CRM.Services.Reflection.AgentAttribute
    ctor: SuperOffice.CRM.Services.Reflection.AgentAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: BulkUpdate Agent
    - type: System.String
      value: Interface for the BulkUpdate Agent. Agent used for bulk update methods
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.CRM.Services.IBulkUpdateAgent.GetAvailableFields(System.String)
  commentId: M:SuperOffice.CRM.Services.IBulkUpdateAgent.GetAvailableFields(System.String)
  id: GetAvailableFields(System.String)
  parent: SuperOffice.CRM.Services.IBulkUpdateAgent
  langs:
  - csharp
  - vb
  name: GetAvailableFields(String)
  nameWithType: IBulkUpdateAgent.GetAvailableFields(String)
  fullName: SuperOffice.CRM.Services.IBulkUpdateAgent.GetAvailableFields(System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet all available fields for a given tablename/entity\n"
  syntax:
    content: FieldValueInfo[] GetAvailableFields(string tablename)
    parameters:
    - id: tablename
      type: System.String
      description: The name of the wanted tablename
    return:
      type: SuperOffice.CRM.Services.FieldValueInfo[]
      description: Returns array of the available fields for the given entity
    content.vb: Function GetAvailableFields(tablename As String) As FieldValueInfo()
  overload: SuperOffice.CRM.Services.IBulkUpdateAgent.GetAvailableFields*
- uid: SuperOffice.CRM.Services.IBulkUpdateAgent.GetStoredFields(System.String,System.String)
  commentId: M:SuperOffice.CRM.Services.IBulkUpdateAgent.GetStoredFields(System.String,System.String)
  id: GetStoredFields(System.String,System.String)
  parent: SuperOffice.CRM.Services.IBulkUpdateAgent
  langs:
  - csharp
  - vb
  name: GetStoredFields(String, String)
  nameWithType: IBulkUpdateAgent.GetStoredFields(String, String)
  fullName: SuperOffice.CRM.Services.IBulkUpdateAgent.GetStoredFields(System.String, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet all stored fields for a given tablename/entity and context\n"
  syntax:
    content: FieldValueInfo[] GetStoredFields(string tablename, string context)
    parameters:
    - id: tablename
      type: System.String
      description: The name of the wanted tablename
    - id: context
      type: System.String
      description: Where is the function called for
    return:
      type: SuperOffice.CRM.Services.FieldValueInfo[]
      description: Returns array of the stored or default fields for the given entity
    content.vb: Function GetStoredFields(tablename As String, context As String) As FieldValueInfo()
  overload: SuperOffice.CRM.Services.IBulkUpdateAgent.GetStoredFields*
- uid: SuperOffice.CRM.Services.IBulkUpdateAgent.ExecuteBySelectionId(SuperOffice.CRM.Services.FieldValueInfo[],System.String,System.String,System.Int32,System.Boolean)
  commentId: M:SuperOffice.CRM.Services.IBulkUpdateAgent.ExecuteBySelectionId(SuperOffice.CRM.Services.FieldValueInfo[],System.String,System.String,System.Int32,System.Boolean)
  id: ExecuteBySelectionId(SuperOffice.CRM.Services.FieldValueInfo[],System.String,System.String,System.Int32,System.Boolean)
  parent: SuperOffice.CRM.Services.IBulkUpdateAgent
  langs:
  - csharp
  - vb
  name: ExecuteBySelectionId(FieldValueInfo[], String, String, Int32, Boolean)
  nameWithType: IBulkUpdateAgent.ExecuteBySelectionId(FieldValueInfo[], String, String, Int32, Boolean)
  fullName: SuperOffice.CRM.Services.IBulkUpdateAgent.ExecuteBySelectionId(SuperOffice.CRM.Services.FieldValueInfo[], System.String, System.String, System.Int32, System.Boolean)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nDo the batchupdate on this selection\n"
  syntax:
    content: int ExecuteBySelectionId(FieldValueInfo[] fieldValueInfos, string tableName, string context, int selectionId, bool isShadow)
    parameters:
    - id: fieldValueInfos
      type: SuperOffice.CRM.Services.FieldValueInfo[]
      description: The name of the wanted tablename
    - id: tableName
      type: System.String
      description: The name of the table to bulk update
    - id: context
      type: System.String
      description: Where is the function called for
    - id: selectionId
      type: System.Int32
      description: The id of the selection
    - id: isShadow
      type: System.Boolean
      description: Use the shadow selection
    return:
      type: System.Int32
      description: Return batchtaskinfoid
    content.vb: Function ExecuteBySelectionId(fieldValueInfos As FieldValueInfo(), tableName As String, context As String, selectionId As Integer, isShadow As Boolean) As Integer
  overload: SuperOffice.CRM.Services.IBulkUpdateAgent.ExecuteBySelectionId*
  nameWithType.vb: IBulkUpdateAgent.ExecuteBySelectionId(FieldValueInfo(), String, String, Int32, Boolean)
  fullName.vb: SuperOffice.CRM.Services.IBulkUpdateAgent.ExecuteBySelectionId(SuperOffice.CRM.Services.FieldValueInfo(), System.String, System.String, System.Int32, System.Boolean)
  name.vb: ExecuteBySelectionId(FieldValueInfo(), String, String, Int32, Boolean)
- uid: SuperOffice.CRM.Services.IBulkUpdateAgent.ExecuteByEntityIds(SuperOffice.CRM.Services.FieldValueInfo[],System.String,System.String,System.String)
  commentId: M:SuperOffice.CRM.Services.IBulkUpdateAgent.ExecuteByEntityIds(SuperOffice.CRM.Services.FieldValueInfo[],System.String,System.String,System.String)
  id: ExecuteByEntityIds(SuperOffice.CRM.Services.FieldValueInfo[],System.String,System.String,System.String)
  parent: SuperOffice.CRM.Services.IBulkUpdateAgent
  langs:
  - csharp
  - vb
  name: ExecuteByEntityIds(FieldValueInfo[], String, String, String)
  nameWithType: IBulkUpdateAgent.ExecuteByEntityIds(FieldValueInfo[], String, String, String)
  fullName: SuperOffice.CRM.Services.IBulkUpdateAgent.ExecuteByEntityIds(SuperOffice.CRM.Services.FieldValueInfo[], System.String, System.String, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nDo the batchupdate on selected\n"
  syntax:
    content: int ExecuteByEntityIds(FieldValueInfo[] fieldValueInfos, string tableName, string context, string ids)
    parameters:
    - id: fieldValueInfos
      type: SuperOffice.CRM.Services.FieldValueInfo[]
      description: The name of the wanted tablename
    - id: tableName
      type: System.String
      description: The name of the table to bulk update
    - id: context
      type: System.String
      description: Where is the function called from
    - id: ids
      type: System.String
      description: Comma separated string of the ids of the entities to update
    return:
      type: System.Int32
      description: Return batchtaskinfoid
    content.vb: Function ExecuteByEntityIds(fieldValueInfos As FieldValueInfo(), tableName As String, context As String, ids As String) As Integer
  overload: SuperOffice.CRM.Services.IBulkUpdateAgent.ExecuteByEntityIds*
  nameWithType.vb: IBulkUpdateAgent.ExecuteByEntityIds(FieldValueInfo(), String, String, String)
  fullName.vb: SuperOffice.CRM.Services.IBulkUpdateAgent.ExecuteByEntityIds(SuperOffice.CRM.Services.FieldValueInfo(), System.String, System.String, System.String)
  name.vb: ExecuteByEntityIds(FieldValueInfo(), String, String, String)
- uid: SuperOffice.CRM.Services.IBulkUpdateAgent.GetJobResultsFromStorageAsJson
  commentId: M:SuperOffice.CRM.Services.IBulkUpdateAgent.GetJobResultsFromStorageAsJson
  id: GetJobResultsFromStorageAsJson
  parent: SuperOffice.CRM.Services.IBulkUpdateAgent
  langs:
  - csharp
  - vb
  name: GetJobResultsFromStorageAsJson()
  nameWithType: IBulkUpdateAgent.GetJobResultsFromStorageAsJson()
  fullName: SuperOffice.CRM.Services.IBulkUpdateAgent.GetJobResultsFromStorageAsJson()
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet result of the batchupdate job\n"
  syntax:
    content: string[] GetJobResultsFromStorageAsJson()
    return:
      type: System.String[]
      description: Result of job as json
    content.vb: Function GetJobResultsFromStorageAsJson As String()
  overload: SuperOffice.CRM.Services.IBulkUpdateAgent.GetJobResultsFromStorageAsJson*
- uid: SuperOffice.CRM.Services.IBulkUpdateAgent.RemoveStoredFields(System.String,System.String)
  commentId: M:SuperOffice.CRM.Services.IBulkUpdateAgent.RemoveStoredFields(System.String,System.String)
  id: RemoveStoredFields(System.String,System.String)
  parent: SuperOffice.CRM.Services.IBulkUpdateAgent
  langs:
  - csharp
  - vb
  name: RemoveStoredFields(String, String)
  nameWithType: IBulkUpdateAgent.RemoveStoredFields(String, String)
  fullName: SuperOffice.CRM.Services.IBulkUpdateAgent.RemoveStoredFields(System.String, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nRemove the stored settings of the bulk update for this table from this context\n"
  syntax:
    content: bool RemoveStoredFields(string tableName, string context)
    parameters:
    - id: tableName
      type: System.String
      description: The name of the table to remove stored settings from
    - id: context
      type: System.String
      description: Where is the function called from that we will remove the settings from
    return:
      type: System.Boolean
    content.vb: Function RemoveStoredFields(tableName As String, context As String) As Boolean
  overload: SuperOffice.CRM.Services.IBulkUpdateAgent.RemoveStoredFields*
- uid: SuperOffice.CRM.Services.IBulkUpdateAgent.RemoveStoredFieldsAndGetDefaultFields(System.String,System.String)
  commentId: M:SuperOffice.CRM.Services.IBulkUpdateAgent.RemoveStoredFieldsAndGetDefaultFields(System.String,System.String)
  id: RemoveStoredFieldsAndGetDefaultFields(System.String,System.String)
  parent: SuperOffice.CRM.Services.IBulkUpdateAgent
  langs:
  - csharp
  - vb
  name: RemoveStoredFieldsAndGetDefaultFields(String, String)
  nameWithType: IBulkUpdateAgent.RemoveStoredFieldsAndGetDefaultFields(String, String)
  fullName: SuperOffice.CRM.Services.IBulkUpdateAgent.RemoveStoredFieldsAndGetDefaultFields(System.String, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nRemove the stored settings of the bulk update for this table from this context, to get the default settings instead\n"
  syntax:
    content: FieldValueInfo[] RemoveStoredFieldsAndGetDefaultFields(string tableName, string context)
    parameters:
    - id: tableName
      type: System.String
      description: The name of the table to remove stored settings from
    - id: context
      type: System.String
      description: Where is the function called from that we will remove the settings from
    return:
      type: SuperOffice.CRM.Services.FieldValueInfo[]
      description: Returns array of the available fields for the given tablename
    content.vb: Function RemoveStoredFieldsAndGetDefaultFields(tableName As String, context As String) As FieldValueInfo()
  overload: SuperOffice.CRM.Services.IBulkUpdateAgent.RemoveStoredFieldsAndGetDefaultFields*
- uid: SuperOffice.CRM.Services.IBulkUpdateAgent.GetJobResultAsJsonFromBinaryObjectId(System.String,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IBulkUpdateAgent.GetJobResultAsJsonFromBinaryObjectId(System.String,System.Int32)
  id: GetJobResultAsJsonFromBinaryObjectId(System.String,System.Int32)
  parent: SuperOffice.CRM.Services.IBulkUpdateAgent
  langs:
  - csharp
  - vb
  name: GetJobResultAsJsonFromBinaryObjectId(String, Int32)
  nameWithType: IBulkUpdateAgent.GetJobResultAsJsonFromBinaryObjectId(String, Int32)
  fullName: SuperOffice.CRM.Services.IBulkUpdateAgent.GetJobResultAsJsonFromBinaryObjectId(System.String, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet result of the batchupdate job\n"
  syntax:
    content: string GetJobResultAsJsonFromBinaryObjectId(string tableName, int binaryObjectId)
    parameters:
    - id: tableName
      type: System.String
      description: The name of the table that was updated to show the log from
    - id: binaryObjectId
      type: System.Int32
      description: Which binaryobject id has stored the job result
    return:
      type: System.String
      description: Result of job as json
    content.vb: Function GetJobResultAsJsonFromBinaryObjectId(tableName As String, binaryObjectId As Integer) As String
  overload: SuperOffice.CRM.Services.IBulkUpdateAgent.GetJobResultAsJsonFromBinaryObjectId*
references:
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
- uid: SuperOffice.CRM.Services.IBulkUpdateAgent.GetAvailableFields*
  commentId: Overload:SuperOffice.CRM.Services.IBulkUpdateAgent.GetAvailableFields
  isExternal: true
  name: GetAvailableFields
  nameWithType: IBulkUpdateAgent.GetAvailableFields
  fullName: SuperOffice.CRM.Services.IBulkUpdateAgent.GetAvailableFields
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.Services.FieldValueInfo[]
  isExternal: true
  name: FieldValueInfo[]
  nameWithType: FieldValueInfo[]
  fullName: SuperOffice.CRM.Services.FieldValueInfo[]
  nameWithType.vb: FieldValueInfo()
  fullName.vb: SuperOffice.CRM.Services.FieldValueInfo()
  name.vb: FieldValueInfo()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.FieldValueInfo
    name: FieldValueInfo
    nameWithType: FieldValueInfo
    fullName: SuperOffice.CRM.Services.FieldValueInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.Services.FieldValueInfo
    name: FieldValueInfo
    nameWithType: FieldValueInfo
    fullName: SuperOffice.CRM.Services.FieldValueInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Services.IBulkUpdateAgent.GetStoredFields*
  commentId: Overload:SuperOffice.CRM.Services.IBulkUpdateAgent.GetStoredFields
  isExternal: true
  name: GetStoredFields
  nameWithType: IBulkUpdateAgent.GetStoredFields
  fullName: SuperOffice.CRM.Services.IBulkUpdateAgent.GetStoredFields
- uid: SuperOffice.CRM.Services.IBulkUpdateAgent.ExecuteBySelectionId*
  commentId: Overload:SuperOffice.CRM.Services.IBulkUpdateAgent.ExecuteBySelectionId
  isExternal: true
  name: ExecuteBySelectionId
  nameWithType: IBulkUpdateAgent.ExecuteBySelectionId
  fullName: SuperOffice.CRM.Services.IBulkUpdateAgent.ExecuteBySelectionId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.CRM.Services.IBulkUpdateAgent.ExecuteByEntityIds*
  commentId: Overload:SuperOffice.CRM.Services.IBulkUpdateAgent.ExecuteByEntityIds
  isExternal: true
  name: ExecuteByEntityIds
  nameWithType: IBulkUpdateAgent.ExecuteByEntityIds
  fullName: SuperOffice.CRM.Services.IBulkUpdateAgent.ExecuteByEntityIds
- uid: SuperOffice.CRM.Services.IBulkUpdateAgent.GetJobResultsFromStorageAsJson*
  commentId: Overload:SuperOffice.CRM.Services.IBulkUpdateAgent.GetJobResultsFromStorageAsJson
  isExternal: true
  name: GetJobResultsFromStorageAsJson
  nameWithType: IBulkUpdateAgent.GetJobResultsFromStorageAsJson
  fullName: SuperOffice.CRM.Services.IBulkUpdateAgent.GetJobResultsFromStorageAsJson
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.IBulkUpdateAgent.RemoveStoredFields*
  commentId: Overload:SuperOffice.CRM.Services.IBulkUpdateAgent.RemoveStoredFields
  isExternal: true
  name: RemoveStoredFields
  nameWithType: IBulkUpdateAgent.RemoveStoredFields
  fullName: SuperOffice.CRM.Services.IBulkUpdateAgent.RemoveStoredFields
- uid: SuperOffice.CRM.Services.IBulkUpdateAgent.RemoveStoredFieldsAndGetDefaultFields*
  commentId: Overload:SuperOffice.CRM.Services.IBulkUpdateAgent.RemoveStoredFieldsAndGetDefaultFields
  isExternal: true
  name: RemoveStoredFieldsAndGetDefaultFields
  nameWithType: IBulkUpdateAgent.RemoveStoredFieldsAndGetDefaultFields
  fullName: SuperOffice.CRM.Services.IBulkUpdateAgent.RemoveStoredFieldsAndGetDefaultFields
- uid: SuperOffice.CRM.Services.IBulkUpdateAgent.GetJobResultAsJsonFromBinaryObjectId*
  commentId: Overload:SuperOffice.CRM.Services.IBulkUpdateAgent.GetJobResultAsJsonFromBinaryObjectId
  isExternal: true
  name: GetJobResultAsJsonFromBinaryObjectId
  nameWithType: IBulkUpdateAgent.GetJobResultAsJsonFromBinaryObjectId
  fullName: SuperOffice.CRM.Services.IBulkUpdateAgent.GetJobResultAsJsonFromBinaryObjectId
