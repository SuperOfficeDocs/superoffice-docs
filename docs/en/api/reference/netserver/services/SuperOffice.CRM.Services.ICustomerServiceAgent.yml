### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent
  commentId: T:SuperOffice.CRM.Services.ICustomerServiceAgent
  id: ICustomerServiceAgent
  parent: SuperOffice.CRM.Services
  children:
  - SuperOffice.CRM.Services.ICustomerServiceAgent.AddMessageFromMailDataAsync(System.Int32,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ICustomerServiceAgent.ChatSessionsForUserAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ICustomerServiceAgent.CheckIfCustomizedTemplatesAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ICustomerServiceAgent.CheckSymmetricEncryptionAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ICustomerServiceAgent.CreateDefaultCustomerCenterConfigAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ICustomerServiceAgent.CreateDefaultMailboxEntityAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ICustomerServiceAgent.CreateSessionAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ICustomerServiceAgent.CreateTicketFromMailDataAsync(System.Int32,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ICustomerServiceAgent.DeleteChatSessionsAsync(System.Int32[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ICustomerServiceAgent.DeleteCustomerCenterConfigAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ICustomerServiceAgent.EventHandlerExistsAsync(SuperOffice.Data.EventHandlerType,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ICustomerServiceAgent.EventHandlersExistsAsync(SuperOffice.Data.EventHandlerType[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ICustomerServiceAgent.ExecuteEventHandlersAsync(SuperOffice.CRM.Services.EventData,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ICustomerServiceAgent.FindTicketsByTitleOrIdAsync(System.String,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ICustomerServiceAgent.GetAllCustomerCenterConfigsAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ICustomerServiceAgent.GetCustomerCenterConfigAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ICustomerServiceAgent.GetCustomerServiceStartupAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ICustomerServiceAgent.GetCustomerServiceStartupByOwnerAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ICustomerServiceAgent.GetFaqForCustomerAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ICustomerServiceAgent.GetMailboxEntityAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ICustomerServiceAgent.GetMailboxesAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ICustomerServiceAgent.GetParsedTemplateAsync(System.Int32,System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ICustomerServiceAgent.GetPreviewFaqEntryAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ICustomerServiceAgent.GetPreviewQuickReplyAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ICustomerServiceAgent.GetPreviewReplyTemplateAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ICustomerServiceAgent.GetProgramUrlAsync(System.String,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ICustomerServiceAgent.GetSmsConfigAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ICustomerServiceAgent.GetStatisticsAsync(SuperOffice.Data.StatusScreenPanelType[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ICustomerServiceAgent.GetSystemTemplateSettingsAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ICustomerServiceAgent.GetUnparsedTemplateAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ICustomerServiceAgent.HasChatNotifyAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ICustomerServiceAgent.RemoveSessionAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ICustomerServiceAgent.ReportSessionActiveAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ICustomerServiceAgent.SaveAllCustomerCenterConfigsAsync(SuperOffice.CRM.Services.CustomerCenterConfig[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ICustomerServiceAgent.SaveCustomerCenterConfigAsync(SuperOffice.CRM.Services.CustomerCenterConfig,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ICustomerServiceAgent.SaveMailboxEntityAsync(SuperOffice.CRM.Services.MailboxEntity,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ICustomerServiceAgent.SaveSystemTemplateSettingsAsync(SuperOffice.CRM.Services.SystemTemplateSettings,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ICustomerServiceAgent.SessionIsValidAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ICustomerServiceAgent.TestSmtpServerAsync(System.String,System.String,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ICustomerServiceAgent.UpdateFeatureTogglesAsync(SuperOffice.CRM.Services.CsFeatureToggle[],System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: ICustomerServiceAgent
  nameWithType: ICustomerServiceAgent
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent
  type: Interface
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Interface for the CustomerService Agent

    Agent used for Customer Service methods
  example:
  - >-
    <pre><code class="lang-csharp">using SuperOffice;

    using SuperOffice.CRM.Services;


    using (SoSession mySession = SoSession.Authenticate("user", "pass"))

    {
       using (CustomerServiceAgent agent = new CustomerServiceAgent())
       {
          // call methods on agent here...
       }
    }</code></pre>
  syntax:
    content: >-
      [Agent("CustomerService Agent", "Interface for the CustomerService Agent. Agent used for Customer Service methods")]

      public interface ICustomerServiceAgent : IAgent
    content.vb: >-
      <Agent("CustomerService Agent", "Interface for the CustomerService Agent. Agent used for Customer Service methods")>

      Public Interface ICustomerServiceAgent Inherits IAgent
  attributes:
  - type: SuperOffice.CRM.Services.Reflection.AgentAttribute
    ctor: SuperOffice.CRM.Services.Reflection.AgentAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: CustomerService Agent
    - type: System.String
      value: Interface for the CustomerService Agent. Agent used for Customer Service methods
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.DeleteChatSessionsAsync(System.Int32[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ICustomerServiceAgent.DeleteChatSessionsAsync(System.Int32[],System.Threading.CancellationToken)
  id: DeleteChatSessionsAsync(System.Int32[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: DeleteChatSessionsAsync(int[], CancellationToken)
  nameWithType: ICustomerServiceAgent.DeleteChatSessionsAsync(int[], CancellationToken)
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.DeleteChatSessionsAsync(int[], System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Deletes the specified chat sessions.
  example: []
  syntax:
    content: Task DeleteChatSessionsAsync(int[] ids, CancellationToken cancellationToken = default)
    parameters:
    - id: ids
      type: System.Int32[]
      description: The ids of the chat sessions to delete
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Function DeleteChatSessionsAsync(ids As Integer(), cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.ICustomerServiceAgent.DeleteChatSessionsAsync*
  nameWithType.vb: ICustomerServiceAgent.DeleteChatSessionsAsync(Integer(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ICustomerServiceAgent.DeleteChatSessionsAsync(Integer(), System.Threading.CancellationToken)
  name.vb: DeleteChatSessionsAsync(Integer(), CancellationToken)
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.ChatSessionsForUserAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ICustomerServiceAgent.ChatSessionsForUserAsync(System.Threading.CancellationToken)
  id: ChatSessionsForUserAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: ChatSessionsForUserAsync(CancellationToken)
  nameWithType: ICustomerServiceAgent.ChatSessionsForUserAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.ChatSessionsForUserAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: 'Get all chat TOPICS which this user is a member of. Members means that you have at least one of: Can Respond, Notifications, Listen or Manager'
  example: []
  syntax:
    content: Task<ChatSession[]> ChatSessionsForUserAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.ChatSession[]}
      description: Array of chat TOPIC ids the current user can access. NOT chat sessions.
    content.vb: Function ChatSessionsForUserAsync(cancellationToken As CancellationToken = Nothing) As Task(Of ChatSession())
  overload: SuperOffice.CRM.Services.ICustomerServiceAgent.ChatSessionsForUserAsync*
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.UpdateFeatureTogglesAsync(SuperOffice.CRM.Services.CsFeatureToggle[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ICustomerServiceAgent.UpdateFeatureTogglesAsync(SuperOffice.CRM.Services.CsFeatureToggle[],System.Threading.CancellationToken)
  id: UpdateFeatureTogglesAsync(SuperOffice.CRM.Services.CsFeatureToggle[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: UpdateFeatureTogglesAsync(CsFeatureToggle[], CancellationToken)
  nameWithType: ICustomerServiceAgent.UpdateFeatureTogglesAsync(CsFeatureToggle[], CancellationToken)
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.UpdateFeatureTogglesAsync(SuperOffice.CRM.Services.CsFeatureToggle[], System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Update the cached FeatureToggles for CS
  example: []
  syntax:
    content: Task UpdateFeatureTogglesAsync(CsFeatureToggle[] featureToggles, CancellationToken cancellationToken = default)
    parameters:
    - id: featureToggles
      type: SuperOffice.CRM.Services.CsFeatureToggle[]
      description: Feature toggle name / state
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function UpdateFeatureTogglesAsync(featureToggles As CsFeatureToggle(), cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.ICustomerServiceAgent.UpdateFeatureTogglesAsync*
  nameWithType.vb: ICustomerServiceAgent.UpdateFeatureTogglesAsync(CsFeatureToggle(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ICustomerServiceAgent.UpdateFeatureTogglesAsync(SuperOffice.CRM.Services.CsFeatureToggle(), System.Threading.CancellationToken)
  name.vb: UpdateFeatureTogglesAsync(CsFeatureToggle(), CancellationToken)
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.EventHandlerExistsAsync(SuperOffice.Data.EventHandlerType,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ICustomerServiceAgent.EventHandlerExistsAsync(SuperOffice.Data.EventHandlerType,System.Threading.CancellationToken)
  id: EventHandlerExistsAsync(SuperOffice.Data.EventHandlerType,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: EventHandlerExistsAsync(EventHandlerType, CancellationToken)
  nameWithType: ICustomerServiceAgent.EventHandlerExistsAsync(EventHandlerType, CancellationToken)
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.EventHandlerExistsAsync(SuperOffice.Data.EventHandlerType, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Check if an eventhandler exists for a given enum
  example: []
  syntax:
    content: Task<bool> EventHandlerExistsAsync(EventHandlerType eventHandlerType, CancellationToken cancellationToken = default)
    parameters:
    - id: eventHandlerType
      type: SuperOffice.Data.EventHandlerType
      description: The EventHandlerType we are checking
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if it exists
    content.vb: Function EventHandlerExistsAsync(eventHandlerType As EventHandlerType, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.Services.ICustomerServiceAgent.EventHandlerExistsAsync*
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.EventHandlersExistsAsync(SuperOffice.Data.EventHandlerType[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ICustomerServiceAgent.EventHandlersExistsAsync(SuperOffice.Data.EventHandlerType[],System.Threading.CancellationToken)
  id: EventHandlersExistsAsync(SuperOffice.Data.EventHandlerType[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: EventHandlersExistsAsync(EventHandlerType[], CancellationToken)
  nameWithType: ICustomerServiceAgent.EventHandlersExistsAsync(EventHandlerType[], CancellationToken)
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.EventHandlersExistsAsync(SuperOffice.Data.EventHandlerType[], System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Check if any given eventhandler exists
  example: []
  syntax:
    content: Task<EventHandlerType[]> EventHandlersExistsAsync(EventHandlerType[] eventHandlerTypes, CancellationToken cancellationToken = default)
    parameters:
    - id: eventHandlerTypes
      type: SuperOffice.Data.EventHandlerType[]
      description: The EventHandlerTypes we are checking
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.Data.EventHandlerType[]}
      description: The existing event handlers
    content.vb: Function EventHandlersExistsAsync(eventHandlerTypes As EventHandlerType(), cancellationToken As CancellationToken = Nothing) As Task(Of EventHandlerType())
  overload: SuperOffice.CRM.Services.ICustomerServiceAgent.EventHandlersExistsAsync*
  nameWithType.vb: ICustomerServiceAgent.EventHandlersExistsAsync(EventHandlerType(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ICustomerServiceAgent.EventHandlersExistsAsync(SuperOffice.Data.EventHandlerType(), System.Threading.CancellationToken)
  name.vb: EventHandlersExistsAsync(EventHandlerType(), CancellationToken)
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.CreateSessionAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ICustomerServiceAgent.CreateSessionAsync(System.String,System.Threading.CancellationToken)
  id: CreateSessionAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: CreateSessionAsync(string, CancellationToken)
  nameWithType: ICustomerServiceAgent.CreateSessionAsync(string, CancellationToken)
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.CreateSessionAsync(string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Creates a login session for a CS user
  example: []
  syntax:
    content: Task<CsSessionKey> CreateSessionAsync(string remoteIp, CancellationToken cancellationToken = default)
    parameters:
    - id: remoteIp
      type: System.String
      description: The ip of the client creating the session
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.CsSessionKey}
      description: The session key information
    content.vb: Function CreateSessionAsync(remoteIp As String, cancellationToken As CancellationToken = Nothing) As Task(Of CsSessionKey)
  overload: SuperOffice.CRM.Services.ICustomerServiceAgent.CreateSessionAsync*
  nameWithType.vb: ICustomerServiceAgent.CreateSessionAsync(String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ICustomerServiceAgent.CreateSessionAsync(String, System.Threading.CancellationToken)
  name.vb: CreateSessionAsync(String, CancellationToken)
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.RemoveSessionAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ICustomerServiceAgent.RemoveSessionAsync(System.Int32,System.Threading.CancellationToken)
  id: RemoveSessionAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: RemoveSessionAsync(int, CancellationToken)
  nameWithType: ICustomerServiceAgent.RemoveSessionAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.RemoveSessionAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Remove a login session for a CS user
  example: []
  syntax:
    content: Task RemoveSessionAsync(int loginId, CancellationToken cancellationToken = default)
    parameters:
    - id: loginId
      type: System.Int32
      description: The login id to remove
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function RemoveSessionAsync(loginId As Integer, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.ICustomerServiceAgent.RemoveSessionAsync*
  nameWithType.vb: ICustomerServiceAgent.RemoveSessionAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ICustomerServiceAgent.RemoveSessionAsync(Integer, System.Threading.CancellationToken)
  name.vb: RemoveSessionAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.SessionIsValidAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ICustomerServiceAgent.SessionIsValidAsync(System.String,System.Threading.CancellationToken)
  id: SessionIsValidAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: SessionIsValidAsync(string, CancellationToken)
  nameWithType: ICustomerServiceAgent.SessionIsValidAsync(string, CancellationToken)
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.SessionIsValidAsync(string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Check if a CS session is valid
  example: []
  syntax:
    content: Task<bool> SessionIsValidAsync(string csSessionKey, CancellationToken cancellationToken = default)
    parameters:
    - id: csSessionKey
      type: System.String
      description: The CS session key to check
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if there is a valid CS session based on the session key
    content.vb: Function SessionIsValidAsync(csSessionKey As String, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.Services.ICustomerServiceAgent.SessionIsValidAsync*
  nameWithType.vb: ICustomerServiceAgent.SessionIsValidAsync(String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ICustomerServiceAgent.SessionIsValidAsync(String, System.Threading.CancellationToken)
  name.vb: SessionIsValidAsync(String, CancellationToken)
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.HasChatNotifyAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ICustomerServiceAgent.HasChatNotifyAsync(System.Threading.CancellationToken)
  id: HasChatNotifyAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: HasChatNotifyAsync(CancellationToken)
  nameWithType: ICustomerServiceAgent.HasChatNotifyAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.HasChatNotifyAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Check if user has any chat notification
  example: []
  syntax:
    content: Task<bool> HasChatNotifyAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the user has at least one notification setting on
    content.vb: Function HasChatNotifyAsync(cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.Services.ICustomerServiceAgent.HasChatNotifyAsync*
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.CheckSymmetricEncryptionAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ICustomerServiceAgent.CheckSymmetricEncryptionAsync(System.String,System.Threading.CancellationToken)
  id: CheckSymmetricEncryptionAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: CheckSymmetricEncryptionAsync(string, CancellationToken)
  nameWithType: ICustomerServiceAgent.CheckSymmetricEncryptionAsync(string, CancellationToken)
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.CheckSymmetricEncryptionAsync(string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Do a test to check that we are using the same encryption keys
  example: []
  syntax:
    content: Task<string> CheckSymmetricEncryptionAsync(string encryptedString, CancellationToken cancellationToken = default)
    parameters:
    - id: encryptedString
      type: System.String
      description: An encrypted version of the string
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Encrypted version of the string done by NetServer
    content.vb: Function CheckSymmetricEncryptionAsync(encryptedString As String, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Services.ICustomerServiceAgent.CheckSymmetricEncryptionAsync*
  nameWithType.vb: ICustomerServiceAgent.CheckSymmetricEncryptionAsync(String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ICustomerServiceAgent.CheckSymmetricEncryptionAsync(String, System.Threading.CancellationToken)
  name.vb: CheckSymmetricEncryptionAsync(String, CancellationToken)
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.ReportSessionActiveAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ICustomerServiceAgent.ReportSessionActiveAsync(System.String,System.Threading.CancellationToken)
  id: ReportSessionActiveAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: ReportSessionActiveAsync(string, CancellationToken)
  nameWithType: ICustomerServiceAgent.ReportSessionActiveAsync(string, CancellationToken)
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.ReportSessionActiveAsync(string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Report a session as being 'active'; will update the corresponding row in login table, but not more than once per minute/session
  example: []
  syntax:
    content: Task<int> ReportSessionActiveAsync(string sessionKey, CancellationToken cancellationToken = default)
    parameters:
    - id: sessionKey
      type: System.String
      description: CS session key, matching the 'login' table
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: The ID of the login table row, or 0 if not found
    content.vb: Function ReportSessionActiveAsync(sessionKey As String, cancellationToken As CancellationToken = Nothing) As Task(Of Integer)
  overload: SuperOffice.CRM.Services.ICustomerServiceAgent.ReportSessionActiveAsync*
  nameWithType.vb: ICustomerServiceAgent.ReportSessionActiveAsync(String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ICustomerServiceAgent.ReportSessionActiveAsync(String, System.Threading.CancellationToken)
  name.vb: ReportSessionActiveAsync(String, CancellationToken)
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.CreateDefaultCustomerCenterConfigAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ICustomerServiceAgent.CreateDefaultCustomerCenterConfigAsync(System.Threading.CancellationToken)
  id: CreateDefaultCustomerCenterConfigAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultCustomerCenterConfigAsync(CancellationToken)
  nameWithType: ICustomerServiceAgent.CreateDefaultCustomerCenterConfigAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.CreateDefaultCustomerCenterConfigAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Loading default values into a new CustomerCenterConfig.
  example: []
  syntax:
    content: Task<CustomerCenterConfig> CreateDefaultCustomerCenterConfigAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.CustomerCenterConfig}
      description: New CustomerCenterConfig with default values
    content.vb: Function CreateDefaultCustomerCenterConfigAsync(cancellationToken As CancellationToken = Nothing) As Task(Of CustomerCenterConfig)
  overload: SuperOffice.CRM.Services.ICustomerServiceAgent.CreateDefaultCustomerCenterConfigAsync*
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.SaveCustomerCenterConfigAsync(SuperOffice.CRM.Services.CustomerCenterConfig,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ICustomerServiceAgent.SaveCustomerCenterConfigAsync(SuperOffice.CRM.Services.CustomerCenterConfig,System.Threading.CancellationToken)
  id: SaveCustomerCenterConfigAsync(SuperOffice.CRM.Services.CustomerCenterConfig,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: SaveCustomerCenterConfigAsync(CustomerCenterConfig, CancellationToken)
  nameWithType: ICustomerServiceAgent.SaveCustomerCenterConfigAsync(CustomerCenterConfig, CancellationToken)
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.SaveCustomerCenterConfigAsync(SuperOffice.CRM.Services.CustomerCenterConfig, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Updates the existing CustomerCenterConfig or creates a new CustomerCenterConfig if the id parameter is 0.
  example: []
  syntax:
    content: Task<CustomerCenterConfig> SaveCustomerCenterConfigAsync(CustomerCenterConfig customerCenterConfig, CancellationToken cancellationToken = default)
    parameters:
    - id: customerCenterConfig
      type: SuperOffice.CRM.Services.CustomerCenterConfig
      description: The CustomerCenterConfig that is saved
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.CustomerCenterConfig}
      description: New or updated CustomerCenterConfig
    content.vb: Function SaveCustomerCenterConfigAsync(customerCenterConfig As CustomerCenterConfig, cancellationToken As CancellationToken = Nothing) As Task(Of CustomerCenterConfig)
  overload: SuperOffice.CRM.Services.ICustomerServiceAgent.SaveCustomerCenterConfigAsync*
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.DeleteCustomerCenterConfigAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ICustomerServiceAgent.DeleteCustomerCenterConfigAsync(System.Int32,System.Threading.CancellationToken)
  id: DeleteCustomerCenterConfigAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: DeleteCustomerCenterConfigAsync(int, CancellationToken)
  nameWithType: ICustomerServiceAgent.DeleteCustomerCenterConfigAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.DeleteCustomerCenterConfigAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Deletes the CustomerCenterConfig
  example: []
  syntax:
    content: Task DeleteCustomerCenterConfigAsync(int customerCenterConfigId, CancellationToken cancellationToken = default)
    parameters:
    - id: customerCenterConfigId
      type: System.Int32
      description: The identity of the CustomerCenterConfig
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Function DeleteCustomerCenterConfigAsync(customerCenterConfigId As Integer, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.ICustomerServiceAgent.DeleteCustomerCenterConfigAsync*
  nameWithType.vb: ICustomerServiceAgent.DeleteCustomerCenterConfigAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ICustomerServiceAgent.DeleteCustomerCenterConfigAsync(Integer, System.Threading.CancellationToken)
  name.vb: DeleteCustomerCenterConfigAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.GetCustomerCenterConfigAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ICustomerServiceAgent.GetCustomerCenterConfigAsync(System.Int32,System.Threading.CancellationToken)
  id: GetCustomerCenterConfigAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: GetCustomerCenterConfigAsync(int, CancellationToken)
  nameWithType: ICustomerServiceAgent.GetCustomerCenterConfigAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.GetCustomerCenterConfigAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Gets a CustomerCenterConfig object.
  example: []
  syntax:
    content: Task<CustomerCenterConfig> GetCustomerCenterConfigAsync(int customerCenterConfigId, CancellationToken cancellationToken = default)
    parameters:
    - id: customerCenterConfigId
      type: System.Int32
      description: The identifier of the CustomerCenterConfig object
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.CustomerCenterConfig}
      description: A single CustomerCenterConfig
    content.vb: Function GetCustomerCenterConfigAsync(customerCenterConfigId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of CustomerCenterConfig)
  overload: SuperOffice.CRM.Services.ICustomerServiceAgent.GetCustomerCenterConfigAsync*
  nameWithType.vb: ICustomerServiceAgent.GetCustomerCenterConfigAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ICustomerServiceAgent.GetCustomerCenterConfigAsync(Integer, System.Threading.CancellationToken)
  name.vb: GetCustomerCenterConfigAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.GetAllCustomerCenterConfigsAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ICustomerServiceAgent.GetAllCustomerCenterConfigsAsync(System.Threading.CancellationToken)
  id: GetAllCustomerCenterConfigsAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: GetAllCustomerCenterConfigsAsync(CancellationToken)
  nameWithType: ICustomerServiceAgent.GetAllCustomerCenterConfigsAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.GetAllCustomerCenterConfigsAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get all rows from cust_config as an array of CustomerCenterConfig entities
  example: []
  syntax:
    content: Task<CustomerCenterConfig[]> GetAllCustomerCenterConfigsAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.CustomerCenterConfig[]}
      description: An array of CustomerCenterConfig entities
    content.vb: Function GetAllCustomerCenterConfigsAsync(cancellationToken As CancellationToken = Nothing) As Task(Of CustomerCenterConfig())
  overload: SuperOffice.CRM.Services.ICustomerServiceAgent.GetAllCustomerCenterConfigsAsync*
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.SaveAllCustomerCenterConfigsAsync(SuperOffice.CRM.Services.CustomerCenterConfig[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ICustomerServiceAgent.SaveAllCustomerCenterConfigsAsync(SuperOffice.CRM.Services.CustomerCenterConfig[],System.Threading.CancellationToken)
  id: SaveAllCustomerCenterConfigsAsync(SuperOffice.CRM.Services.CustomerCenterConfig[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: SaveAllCustomerCenterConfigsAsync(CustomerCenterConfig[], CancellationToken)
  nameWithType: ICustomerServiceAgent.SaveAllCustomerCenterConfigsAsync(CustomerCenterConfig[], CancellationToken)
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.SaveAllCustomerCenterConfigsAsync(SuperOffice.CRM.Services.CustomerCenterConfig[], System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Save an array of CustomerCenterConfig entities to the database
  example: []
  syntax:
    content: Task SaveAllCustomerCenterConfigsAsync(CustomerCenterConfig[] custConfigs, CancellationToken cancellationToken = default)
    parameters:
    - id: custConfigs
      type: SuperOffice.CRM.Services.CustomerCenterConfig[]
      description: The CustomerCenterConfig entities to be saved. If the id does not exists, a new one will be created. Unknown ids will be skipped
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: void
    content.vb: Function SaveAllCustomerCenterConfigsAsync(custConfigs As CustomerCenterConfig(), cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.ICustomerServiceAgent.SaveAllCustomerCenterConfigsAsync*
  nameWithType.vb: ICustomerServiceAgent.SaveAllCustomerCenterConfigsAsync(CustomerCenterConfig(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ICustomerServiceAgent.SaveAllCustomerCenterConfigsAsync(SuperOffice.CRM.Services.CustomerCenterConfig(), System.Threading.CancellationToken)
  name.vb: SaveAllCustomerCenterConfigsAsync(CustomerCenterConfig(), CancellationToken)
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.CheckIfCustomizedTemplatesAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ICustomerServiceAgent.CheckIfCustomizedTemplatesAsync(System.Threading.CancellationToken)
  id: CheckIfCustomizedTemplatesAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: CheckIfCustomizedTemplatesAsync(CancellationToken)
  nameWithType: ICustomerServiceAgent.CheckIfCustomizedTemplatesAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.CheckIfCustomizedTemplatesAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Checks whether the core html templates are customized
  example: []
  syntax:
    content: Task<bool> CheckIfCustomizedTemplatesAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the templates are customized
    content.vb: Function CheckIfCustomizedTemplatesAsync(cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.Services.ICustomerServiceAgent.CheckIfCustomizedTemplatesAsync*
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.GetProgramUrlAsync(System.String,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ICustomerServiceAgent.GetProgramUrlAsync(System.String,System.Boolean,System.Threading.CancellationToken)
  id: GetProgramUrlAsync(System.String,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: GetProgramUrlAsync(string, bool, CancellationToken)
  nameWithType: ICustomerServiceAgent.GetProgramUrlAsync(string, bool, CancellationToken)
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.GetProgramUrlAsync(string, bool, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: This method will convert a module name into a Service URL.
  example: []
  syntax:
    content: Task<string> GetProgramUrlAsync(string programName, bool external, CancellationToken cancellationToken = default)
    parameters:
    - id: programName
      type: System.String
      description: In this parameter you must specify which CS program you want to create an URL for. Valid examples are "ticket", "rms", "spm" etc.
    - id: external
      type: System.Boolean
      description: If set to true, this will generate URLs that are accesible from the outside (for example Internet)
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Returns a valid Service URL composed of the give parameters.
    content.vb: Function GetProgramUrlAsync(programName As String, external As Boolean, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Services.ICustomerServiceAgent.GetProgramUrlAsync*
  nameWithType.vb: ICustomerServiceAgent.GetProgramUrlAsync(String, Boolean, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ICustomerServiceAgent.GetProgramUrlAsync(String, Boolean, System.Threading.CancellationToken)
  name.vb: GetProgramUrlAsync(String, Boolean, CancellationToken)
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.GetFaqForCustomerAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ICustomerServiceAgent.GetFaqForCustomerAsync(System.Int32,System.Threading.CancellationToken)
  id: GetFaqForCustomerAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: GetFaqForCustomerAsync(int, CancellationToken)
  nameWithType: ICustomerServiceAgent.GetFaqForCustomerAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.GetFaqForCustomerAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get a FAQ entry, ment to be displayed for a customer. This can either be a link to the FAQ entry on Custom Center, or it can be the answer and question. This is dependent on Registry setting with reg_id=157
  example: []
  syntax:
    content: Task<string> GetFaqForCustomerAsync(int faqEntryId, CancellationToken cancellationToken = default)
    parameters:
    - id: faqEntryId
      type: System.Int32
      description: The id of the FAQ entry to get. Only FAQ entries with access level public (both for unauthenticated and autenticated customer) will be returned
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The FAQ to show to the customer. Either a clickable link or the question/answer itself.
    content.vb: Function GetFaqForCustomerAsync(faqEntryId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Services.ICustomerServiceAgent.GetFaqForCustomerAsync*
  nameWithType.vb: ICustomerServiceAgent.GetFaqForCustomerAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ICustomerServiceAgent.GetFaqForCustomerAsync(Integer, System.Threading.CancellationToken)
  name.vb: GetFaqForCustomerAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.GetCustomerServiceStartupAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ICustomerServiceAgent.GetCustomerServiceStartupAsync(System.Threading.CancellationToken)
  id: GetCustomerServiceStartupAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: GetCustomerServiceStartupAsync(CancellationToken)
  nameWithType: ICustomerServiceAgent.GetCustomerServiceStartupAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.GetCustomerServiceStartupAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get the carrier with data that Service needs when starting up
  example: []
  syntax:
    content: Task<CustomerServiceStartup> GetCustomerServiceStartupAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.CustomerServiceStartup}
      description: The carrier containing the startup data
    content.vb: Function GetCustomerServiceStartupAsync(cancellationToken As CancellationToken = Nothing) As Task(Of CustomerServiceStartup)
  overload: SuperOffice.CRM.Services.ICustomerServiceAgent.GetCustomerServiceStartupAsync*
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.GetCustomerServiceStartupByOwnerAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ICustomerServiceAgent.GetCustomerServiceStartupByOwnerAsync(System.Int32,System.Threading.CancellationToken)
  id: GetCustomerServiceStartupByOwnerAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: GetCustomerServiceStartupByOwnerAsync(int, CancellationToken)
  nameWithType: ICustomerServiceAgent.GetCustomerServiceStartupByOwnerAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.GetCustomerServiceStartupByOwnerAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get the carrier with data that Service needs when starting up for a specific user
  example: []
  syntax:
    content: Task<CustomerServiceStartup> GetCustomerServiceStartupByOwnerAsync(int userId, CancellationToken cancellationToken = default)
    parameters:
    - id: userId
      type: System.Int32
      description: The user for which we want to fetch the startup values for
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.CustomerServiceStartup}
      description: The carrier containing the startup data
    content.vb: Function GetCustomerServiceStartupByOwnerAsync(userId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of CustomerServiceStartup)
  overload: SuperOffice.CRM.Services.ICustomerServiceAgent.GetCustomerServiceStartupByOwnerAsync*
  nameWithType.vb: ICustomerServiceAgent.GetCustomerServiceStartupByOwnerAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ICustomerServiceAgent.GetCustomerServiceStartupByOwnerAsync(Integer, System.Threading.CancellationToken)
  name.vb: GetCustomerServiceStartupByOwnerAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.ExecuteEventHandlersAsync(SuperOffice.CRM.Services.EventData,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ICustomerServiceAgent.ExecuteEventHandlersAsync(SuperOffice.CRM.Services.EventData,System.Threading.CancellationToken)
  id: ExecuteEventHandlersAsync(SuperOffice.CRM.Services.EventData,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: ExecuteEventHandlersAsync(EventData, CancellationToken)
  nameWithType: ICustomerServiceAgent.ExecuteEventHandlersAsync(EventData, CancellationToken)
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.ExecuteEventHandlersAsync(SuperOffice.CRM.Services.EventData, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: This method will execute event handlers in CRMScript for a given event.
  example: []
  syntax:
    content: Task<EventData> ExecuteEventHandlersAsync(EventData eventData, CancellationToken cancellationToken = default)
    parameters:
    - id: eventData
      type: SuperOffice.CRM.Services.EventData
      description: The EventData instance sent to the event handler
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.EventData}
      description: The EventData instance after event handler execution
    content.vb: Function ExecuteEventHandlersAsync(eventData As EventData, cancellationToken As CancellationToken = Nothing) As Task(Of EventData)
  overload: SuperOffice.CRM.Services.ICustomerServiceAgent.ExecuteEventHandlersAsync*
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.GetMailboxesAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ICustomerServiceAgent.GetMailboxesAsync(System.Threading.CancellationToken)
  id: GetMailboxesAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: GetMailboxesAsync(CancellationToken)
  nameWithType: ICustomerServiceAgent.GetMailboxesAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.GetMailboxesAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: This method will get all registered mailboxes in Service
  example: []
  syntax:
    content: Task<Mailbox[]> GetMailboxesAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Mailbox[]}
      description: An array of Mailbox objects
    content.vb: Function GetMailboxesAsync(cancellationToken As CancellationToken = Nothing) As Task(Of Mailbox())
  overload: SuperOffice.CRM.Services.ICustomerServiceAgent.GetMailboxesAsync*
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.CreateDefaultMailboxEntityAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ICustomerServiceAgent.CreateDefaultMailboxEntityAsync(System.Threading.CancellationToken)
  id: CreateDefaultMailboxEntityAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultMailboxEntityAsync(CancellationToken)
  nameWithType: ICustomerServiceAgent.CreateDefaultMailboxEntityAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.CreateDefaultMailboxEntityAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Loading default values into a new MailboxEntity.
  example: []
  syntax:
    content: Task<MailboxEntity> CreateDefaultMailboxEntityAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.MailboxEntity}
      description: New MailboxEntity with default values
    content.vb: Function CreateDefaultMailboxEntityAsync(cancellationToken As CancellationToken = Nothing) As Task(Of MailboxEntity)
  overload: SuperOffice.CRM.Services.ICustomerServiceAgent.CreateDefaultMailboxEntityAsync*
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.SaveMailboxEntityAsync(SuperOffice.CRM.Services.MailboxEntity,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ICustomerServiceAgent.SaveMailboxEntityAsync(SuperOffice.CRM.Services.MailboxEntity,System.Threading.CancellationToken)
  id: SaveMailboxEntityAsync(SuperOffice.CRM.Services.MailboxEntity,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: SaveMailboxEntityAsync(MailboxEntity, CancellationToken)
  nameWithType: ICustomerServiceAgent.SaveMailboxEntityAsync(MailboxEntity, CancellationToken)
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.SaveMailboxEntityAsync(SuperOffice.CRM.Services.MailboxEntity, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Updates the existing MailboxEntity or creates a new MailboxEntity if the id parameter is 0.
  example: []
  syntax:
    content: Task<MailboxEntity> SaveMailboxEntityAsync(MailboxEntity mailboxEntity, CancellationToken cancellationToken = default)
    parameters:
    - id: mailboxEntity
      type: SuperOffice.CRM.Services.MailboxEntity
      description: The MailboxEntity that is saved
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.MailboxEntity}
      description: New or updated MailboxEntity
    content.vb: Function SaveMailboxEntityAsync(mailboxEntity As MailboxEntity, cancellationToken As CancellationToken = Nothing) As Task(Of MailboxEntity)
  overload: SuperOffice.CRM.Services.ICustomerServiceAgent.SaveMailboxEntityAsync*
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.GetMailboxEntityAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ICustomerServiceAgent.GetMailboxEntityAsync(System.Int32,System.Threading.CancellationToken)
  id: GetMailboxEntityAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: GetMailboxEntityAsync(int, CancellationToken)
  nameWithType: ICustomerServiceAgent.GetMailboxEntityAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.GetMailboxEntityAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Gets a MailboxEntity object.
  example: []
  syntax:
    content: Task<MailboxEntity> GetMailboxEntityAsync(int mailboxEntityId, CancellationToken cancellationToken = default)
    parameters:
    - id: mailboxEntityId
      type: System.Int32
      description: The identifier of the MailboxEntity object
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.MailboxEntity}
      description: A single MailboxEntity
    content.vb: Function GetMailboxEntityAsync(mailboxEntityId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of MailboxEntity)
  overload: SuperOffice.CRM.Services.ICustomerServiceAgent.GetMailboxEntityAsync*
  nameWithType.vb: ICustomerServiceAgent.GetMailboxEntityAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ICustomerServiceAgent.GetMailboxEntityAsync(Integer, System.Threading.CancellationToken)
  name.vb: GetMailboxEntityAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.GetPreviewFaqEntryAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ICustomerServiceAgent.GetPreviewFaqEntryAsync(System.Int32,System.Threading.CancellationToken)
  id: GetPreviewFaqEntryAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: GetPreviewFaqEntryAsync(int, CancellationToken)
  nameWithType: ICustomerServiceAgent.GetPreviewFaqEntryAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.GetPreviewFaqEntryAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get a faq entry from its faq entry id
  example: []
  syntax:
    content: Task<PreviewFaqEntry> GetPreviewFaqEntryAsync(int kbEntryId, CancellationToken cancellationToken = default)
    parameters:
    - id: kbEntryId
      type: System.Int32
      description: FAQ entry ID
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.PreviewFaqEntry}
      description: FAQ entry suitable for preview
    content.vb: Function GetPreviewFaqEntryAsync(kbEntryId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of PreviewFaqEntry)
  overload: SuperOffice.CRM.Services.ICustomerServiceAgent.GetPreviewFaqEntryAsync*
  nameWithType.vb: ICustomerServiceAgent.GetPreviewFaqEntryAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ICustomerServiceAgent.GetPreviewFaqEntryAsync(Integer, System.Threading.CancellationToken)
  name.vb: GetPreviewFaqEntryAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.GetPreviewQuickReplyAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ICustomerServiceAgent.GetPreviewQuickReplyAsync(System.Int32,System.Threading.CancellationToken)
  id: GetPreviewQuickReplyAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: GetPreviewQuickReplyAsync(int, CancellationToken)
  nameWithType: ICustomerServiceAgent.GetPreviewQuickReplyAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.GetPreviewQuickReplyAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get a quick reply from its quick reply id
  example: []
  syntax:
    content: Task<PreviewQuickReply> GetPreviewQuickReplyAsync(int quickReplyId, CancellationToken cancellationToken = default)
    parameters:
    - id: quickReplyId
      type: System.Int32
      description: Quick reply ID
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.PreviewQuickReply}
      description: Quick reply suitable for preview
    content.vb: Function GetPreviewQuickReplyAsync(quickReplyId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of PreviewQuickReply)
  overload: SuperOffice.CRM.Services.ICustomerServiceAgent.GetPreviewQuickReplyAsync*
  nameWithType.vb: ICustomerServiceAgent.GetPreviewQuickReplyAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ICustomerServiceAgent.GetPreviewQuickReplyAsync(Integer, System.Threading.CancellationToken)
  name.vb: GetPreviewQuickReplyAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.GetPreviewReplyTemplateAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ICustomerServiceAgent.GetPreviewReplyTemplateAsync(System.Int32,System.Threading.CancellationToken)
  id: GetPreviewReplyTemplateAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: GetPreviewReplyTemplateAsync(int, CancellationToken)
  nameWithType: ICustomerServiceAgent.GetPreviewReplyTemplateAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.GetPreviewReplyTemplateAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get a reply template from its reply template id
  example: []
  syntax:
    content: Task<PreviewReplyTemplate> GetPreviewReplyTemplateAsync(int replyTemplateId, CancellationToken cancellationToken = default)
    parameters:
    - id: replyTemplateId
      type: System.Int32
      description: Reply template ID
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.PreviewReplyTemplate}
      description: Reply template suitable for preview
    content.vb: Function GetPreviewReplyTemplateAsync(replyTemplateId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of PreviewReplyTemplate)
  overload: SuperOffice.CRM.Services.ICustomerServiceAgent.GetPreviewReplyTemplateAsync*
  nameWithType.vb: ICustomerServiceAgent.GetPreviewReplyTemplateAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ICustomerServiceAgent.GetPreviewReplyTemplateAsync(Integer, System.Threading.CancellationToken)
  name.vb: GetPreviewReplyTemplateAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.GetParsedTemplateAsync(System.Int32,System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ICustomerServiceAgent.GetParsedTemplateAsync(System.Int32,System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken)
  id: GetParsedTemplateAsync(System.Int32,System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: GetParsedTemplateAsync(int, int, int, int, CancellationToken)
  nameWithType: ICustomerServiceAgent.GetParsedTemplateAsync(int, int, int, int, CancellationToken)
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.GetParsedTemplateAsync(int, int, int, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get a specific langauge version of the reply template, and run this trough the parser
  example: []
  syntax:
    content: Task<ReplyTemplateParsed> GetParsedTemplateAsync(int replyTemplateId, int languageId, int personId, int ticketId, CancellationToken cancellationToken = default)
    parameters:
    - id: replyTemplateId
      type: System.Int32
      description: The id of the reply template
    - id: languageId
      type: System.Int32
      description: The language id (prefered language). If 0 is given, the language of the person will be used
    - id: personId
      type: System.Int32
      description: The id of the person that will be populated into the parser
    - id: ticketId
      type: System.Int32
      description: The id of the ticket that will be populated into the parser
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.ReplyTemplateParsed}
      description: The parsed reply template
    content.vb: Function GetParsedTemplateAsync(replyTemplateId As Integer, languageId As Integer, personId As Integer, ticketId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of ReplyTemplateParsed)
  overload: SuperOffice.CRM.Services.ICustomerServiceAgent.GetParsedTemplateAsync*
  nameWithType.vb: ICustomerServiceAgent.GetParsedTemplateAsync(Integer, Integer, Integer, Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ICustomerServiceAgent.GetParsedTemplateAsync(Integer, Integer, Integer, Integer, System.Threading.CancellationToken)
  name.vb: GetParsedTemplateAsync(Integer, Integer, Integer, Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.GetUnparsedTemplateAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ICustomerServiceAgent.GetUnparsedTemplateAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  id: GetUnparsedTemplateAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: GetUnparsedTemplateAsync(int, int, CancellationToken)
  nameWithType: ICustomerServiceAgent.GetUnparsedTemplateAsync(int, int, CancellationToken)
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.GetUnparsedTemplateAsync(int, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get a specific langauge version of the reply template. No parsing is performed.
  example: []
  syntax:
    content: Task<ReplyTemplateParsed> GetUnparsedTemplateAsync(int replyTemplateId, int languageId, CancellationToken cancellationToken = default)
    parameters:
    - id: replyTemplateId
      type: System.Int32
      description: The id of the reply template
    - id: languageId
      type: System.Int32
      description: The language id (prefered language). If 0 is given, the language of the person will be used
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.ReplyTemplateParsed}
      description: The unparsed reply template, but using the same return data structure
    content.vb: Function GetUnparsedTemplateAsync(replyTemplateId As Integer, languageId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of ReplyTemplateParsed)
  overload: SuperOffice.CRM.Services.ICustomerServiceAgent.GetUnparsedTemplateAsync*
  nameWithType.vb: ICustomerServiceAgent.GetUnparsedTemplateAsync(Integer, Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ICustomerServiceAgent.GetUnparsedTemplateAsync(Integer, Integer, System.Threading.CancellationToken)
  name.vb: GetUnparsedTemplateAsync(Integer, Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.GetSmsConfigAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ICustomerServiceAgent.GetSmsConfigAsync(System.Threading.CancellationToken)
  id: GetSmsConfigAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: GetSmsConfigAsync(CancellationToken)
  nameWithType: ICustomerServiceAgent.GetSmsConfigAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.GetSmsConfigAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get the SmsConfig settings for Customer Service sms providers.
  example: []
  syntax:
    content: Task<SmsConfig> GetSmsConfigAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.SmsConfig}
      description: Current SMS configuration.
    content.vb: Function GetSmsConfigAsync(cancellationToken As CancellationToken = Nothing) As Task(Of SmsConfig)
  overload: SuperOffice.CRM.Services.ICustomerServiceAgent.GetSmsConfigAsync*
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.TestSmtpServerAsync(System.String,System.String,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ICustomerServiceAgent.TestSmtpServerAsync(System.String,System.String,System.Boolean,System.Threading.CancellationToken)
  id: TestSmtpServerAsync(System.String,System.String,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: TestSmtpServerAsync(string, string, bool, CancellationToken)
  nameWithType: ICustomerServiceAgent.TestSmtpServerAsync(string, string, bool, CancellationToken)
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.TestSmtpServerAsync(string, string, bool, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: This method will do a test of a SMTP account, by sending an email to a special @superoffice.com account
  example: []
  syntax:
    content: Task<SmtpTestResult> TestSmtpServerAsync(string smtpUri, string from, bool useStoredPassword, CancellationToken cancellationToken = default)
    parameters:
    - id: smtpUri
      type: System.String
      description: An URI containing information to connect to the SMTP server, eg. smtps://myuser:mypassword@smtp.myserver.com:465. Note that username and password must be url encoded
    - id: from
      type: System.String
      description: The from-address used in the test
    - id: useStoredPassword
      type: System.Boolean
      description: Use database persisted password
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.SmtpTestResult}
      description: Contains the result of the test
    content.vb: Function TestSmtpServerAsync(smtpUri As String, from As String, useStoredPassword As Boolean, cancellationToken As CancellationToken = Nothing) As Task(Of SmtpTestResult)
  overload: SuperOffice.CRM.Services.ICustomerServiceAgent.TestSmtpServerAsync*
  nameWithType.vb: ICustomerServiceAgent.TestSmtpServerAsync(String, String, Boolean, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ICustomerServiceAgent.TestSmtpServerAsync(String, String, Boolean, System.Threading.CancellationToken)
  name.vb: TestSmtpServerAsync(String, String, Boolean, CancellationToken)
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.GetStatisticsAsync(SuperOffice.Data.StatusScreenPanelType[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ICustomerServiceAgent.GetStatisticsAsync(SuperOffice.Data.StatusScreenPanelType[],System.Threading.CancellationToken)
  id: GetStatisticsAsync(SuperOffice.Data.StatusScreenPanelType[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: GetStatisticsAsync(StatusScreenPanelType[], CancellationToken)
  nameWithType: ICustomerServiceAgent.GetStatisticsAsync(StatusScreenPanelType[], CancellationToken)
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.GetStatisticsAsync(SuperOffice.Data.StatusScreenPanelType[], System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Returns the calculated results for the required statistics for the Customer Service Status Page
  example: []
  syntax:
    content: Task<StatisticsDataSet[]> GetStatisticsAsync(StatusScreenPanelType[] functions, CancellationToken cancellationToken = default)
    parameters:
    - id: functions
      type: SuperOffice.Data.StatusScreenPanelType[]
      description: List of functions to calculate and return
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.StatisticsDataSet[]}
      description: Array of StatisticsDataSet
    content.vb: Function GetStatisticsAsync(functions As StatusScreenPanelType(), cancellationToken As CancellationToken = Nothing) As Task(Of StatisticsDataSet())
  overload: SuperOffice.CRM.Services.ICustomerServiceAgent.GetStatisticsAsync*
  nameWithType.vb: ICustomerServiceAgent.GetStatisticsAsync(StatusScreenPanelType(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ICustomerServiceAgent.GetStatisticsAsync(SuperOffice.Data.StatusScreenPanelType(), System.Threading.CancellationToken)
  name.vb: GetStatisticsAsync(StatusScreenPanelType(), CancellationToken)
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.GetSystemTemplateSettingsAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ICustomerServiceAgent.GetSystemTemplateSettingsAsync(System.Threading.CancellationToken)
  id: GetSystemTemplateSettingsAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: GetSystemTemplateSettingsAsync(CancellationToken)
  nameWithType: ICustomerServiceAgent.GetSystemTemplateSettingsAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.GetSystemTemplateSettingsAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Returns system template settings
  example: []
  syntax:
    content: Task<SystemTemplateSettings> GetSystemTemplateSettingsAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.SystemTemplateSettings}
      description: System template settings item
    content.vb: Function GetSystemTemplateSettingsAsync(cancellationToken As CancellationToken = Nothing) As Task(Of SystemTemplateSettings)
  overload: SuperOffice.CRM.Services.ICustomerServiceAgent.GetSystemTemplateSettingsAsync*
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.SaveSystemTemplateSettingsAsync(SuperOffice.CRM.Services.SystemTemplateSettings,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ICustomerServiceAgent.SaveSystemTemplateSettingsAsync(SuperOffice.CRM.Services.SystemTemplateSettings,System.Threading.CancellationToken)
  id: SaveSystemTemplateSettingsAsync(SuperOffice.CRM.Services.SystemTemplateSettings,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: SaveSystemTemplateSettingsAsync(SystemTemplateSettings, CancellationToken)
  nameWithType: ICustomerServiceAgent.SaveSystemTemplateSettingsAsync(SystemTemplateSettings, CancellationToken)
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.SaveSystemTemplateSettingsAsync(SuperOffice.CRM.Services.SystemTemplateSettings, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Saves and validates updated system templates. Throws exception if validation fails
  example: []
  syntax:
    content: Task<SystemTemplateSettings> SaveSystemTemplateSettingsAsync(SystemTemplateSettings systemTemplateSettings, CancellationToken cancellationToken = default)
    parameters:
    - id: systemTemplateSettings
      type: SuperOffice.CRM.Services.SystemTemplateSettings
      description: System template settings item with updated values
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.SystemTemplateSettings}
      description: Updated system template settings
    content.vb: Function SaveSystemTemplateSettingsAsync(systemTemplateSettings As SystemTemplateSettings, cancellationToken As CancellationToken = Nothing) As Task(Of SystemTemplateSettings)
  overload: SuperOffice.CRM.Services.ICustomerServiceAgent.SaveSystemTemplateSettingsAsync*
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.CreateTicketFromMailDataAsync(System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ICustomerServiceAgent.CreateTicketFromMailDataAsync(System.Int32,System.String,System.Threading.CancellationToken)
  id: CreateTicketFromMailDataAsync(System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: CreateTicketFromMailDataAsync(int, string, CancellationToken)
  nameWithType: ICustomerServiceAgent.CreateTicketFromMailDataAsync(int, string, CancellationToken)
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.CreateTicketFromMailDataAsync(int, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: This method create a new ticket in the same way as importMail would import an email. It accepts RFC822 formatted data
  example: []
  syntax:
    content: Task<TicketInfo> CreateTicketFromMailDataAsync(int mailboxId, string data, CancellationToken cancellationToken = default)
    parameters:
    - id: mailboxId
      type: System.Int32
      description: The id of the Service mailbox
    - id: data
      type: System.String
      description: RFC822 formatted data to import as a ticket
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.TicketInfo}
      description: An object containing some meta data for the created ticket
    content.vb: Function CreateTicketFromMailDataAsync(mailboxId As Integer, data As String, cancellationToken As CancellationToken = Nothing) As Task(Of TicketInfo)
  overload: SuperOffice.CRM.Services.ICustomerServiceAgent.CreateTicketFromMailDataAsync*
  nameWithType.vb: ICustomerServiceAgent.CreateTicketFromMailDataAsync(Integer, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ICustomerServiceAgent.CreateTicketFromMailDataAsync(Integer, String, System.Threading.CancellationToken)
  name.vb: CreateTicketFromMailDataAsync(Integer, String, CancellationToken)
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.AddMessageFromMailDataAsync(System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ICustomerServiceAgent.AddMessageFromMailDataAsync(System.Int32,System.String,System.Threading.CancellationToken)
  id: AddMessageFromMailDataAsync(System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: AddMessageFromMailDataAsync(int, string, CancellationToken)
  nameWithType: ICustomerServiceAgent.AddMessageFromMailDataAsync(int, string, CancellationToken)
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.AddMessageFromMailDataAsync(int, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: This method will add a message to an existing request in the sam way as importMail would do it from an email. It accepts RFC822 formatted data
  example: []
  syntax:
    content: Task<TicketInfo> AddMessageFromMailDataAsync(int ticketId, string data, CancellationToken cancellationToken = default)
    parameters:
    - id: ticketId
      type: System.Int32
      description: The id of the ticket to add a message
    - id: data
      type: System.String
      description: RFC822 formatted data to import as a message
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.TicketInfo}
      description: An object containing some meta data for the ticket
    content.vb: Function AddMessageFromMailDataAsync(ticketId As Integer, data As String, cancellationToken As CancellationToken = Nothing) As Task(Of TicketInfo)
  overload: SuperOffice.CRM.Services.ICustomerServiceAgent.AddMessageFromMailDataAsync*
  nameWithType.vb: ICustomerServiceAgent.AddMessageFromMailDataAsync(Integer, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ICustomerServiceAgent.AddMessageFromMailDataAsync(Integer, String, System.Threading.CancellationToken)
  name.vb: AddMessageFromMailDataAsync(Integer, String, CancellationToken)
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.FindTicketsByTitleOrIdAsync(System.String,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ICustomerServiceAgent.FindTicketsByTitleOrIdAsync(System.String,System.Int32,System.Threading.CancellationToken)
  id: FindTicketsByTitleOrIdAsync(System.String,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ICustomerServiceAgent
  langs:
  - csharp
  - vb
  name: FindTicketsByTitleOrIdAsync(string, int, CancellationToken)
  nameWithType: ICustomerServiceAgent.FindTicketsByTitleOrIdAsync(string, int, CancellationToken)
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.FindTicketsByTitleOrIdAsync(string, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: This method wil search for tickets matching title or id
  example: []
  syntax:
    content: Task<TicketInfo[]> FindTicketsByTitleOrIdAsync(string titleOrId, int maxRows, CancellationToken cancellationToken = default)
    parameters:
    - id: titleOrId
      type: System.String
      description: The search string. If this is a number, it will also search for a matching ticket id
    - id: maxRows
      type: System.Int32
      description: The maximum number of rows to be returned
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.TicketInfo[]}
      description: An array of objects containing some meta data for matching tickets
    content.vb: Function FindTicketsByTitleOrIdAsync(titleOrId As String, maxRows As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of TicketInfo())
  overload: SuperOffice.CRM.Services.ICustomerServiceAgent.FindTicketsByTitleOrIdAsync*
  nameWithType.vb: ICustomerServiceAgent.FindTicketsByTitleOrIdAsync(String, Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ICustomerServiceAgent.FindTicketsByTitleOrIdAsync(String, Integer, System.Threading.CancellationToken)
  name.vb: FindTicketsByTitleOrIdAsync(String, Integer, CancellationToken)
references:
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.DeleteChatSessionsAsync*
  commentId: Overload:SuperOffice.CRM.Services.ICustomerServiceAgent.DeleteChatSessionsAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ICustomerServiceAgent.html#SuperOffice_CRM_Services_ICustomerServiceAgent_DeleteChatSessionsAsync_System_Int32___System_Threading_CancellationToken_
  name: DeleteChatSessionsAsync
  nameWithType: ICustomerServiceAgent.DeleteChatSessionsAsync
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.DeleteChatSessionsAsync
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.ChatSessionsForUserAsync*
  commentId: Overload:SuperOffice.CRM.Services.ICustomerServiceAgent.ChatSessionsForUserAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ICustomerServiceAgent.html#SuperOffice_CRM_Services_ICustomerServiceAgent_ChatSessionsForUserAsync_System_Threading_CancellationToken_
  name: ChatSessionsForUserAsync
  nameWithType: ICustomerServiceAgent.ChatSessionsForUserAsync
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.ChatSessionsForUserAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.ChatSession[]}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.ChatSession[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ChatSession[]>
  nameWithType: Task<ChatSession[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.ChatSession[]>
  nameWithType.vb: Task(Of ChatSession())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.ChatSession())
  name.vb: Task(Of ChatSession())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.ChatSession
    name: ChatSession
    isExternal: true
    href: SuperOffice.CRM.Services.ChatSession.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.ChatSession
    name: ChatSession
    isExternal: true
    href: SuperOffice.CRM.Services.ChatSession.html
  - name: (
  - name: )
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.UpdateFeatureTogglesAsync*
  commentId: Overload:SuperOffice.CRM.Services.ICustomerServiceAgent.UpdateFeatureTogglesAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ICustomerServiceAgent.html#SuperOffice_CRM_Services_ICustomerServiceAgent_UpdateFeatureTogglesAsync_SuperOffice_CRM_Services_CsFeatureToggle___System_Threading_CancellationToken_
  name: UpdateFeatureTogglesAsync
  nameWithType: ICustomerServiceAgent.UpdateFeatureTogglesAsync
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.UpdateFeatureTogglesAsync
- uid: SuperOffice.CRM.Services.CsFeatureToggle[]
  isExternal: true
  href: SuperOffice.CRM.Services.CsFeatureToggle.html
  name: CsFeatureToggle[]
  nameWithType: CsFeatureToggle[]
  fullName: SuperOffice.CRM.Services.CsFeatureToggle[]
  nameWithType.vb: CsFeatureToggle()
  fullName.vb: SuperOffice.CRM.Services.CsFeatureToggle()
  name.vb: CsFeatureToggle()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.CsFeatureToggle
    name: CsFeatureToggle
    isExternal: true
    href: SuperOffice.CRM.Services.CsFeatureToggle.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Services.CsFeatureToggle
    name: CsFeatureToggle
    isExternal: true
    href: SuperOffice.CRM.Services.CsFeatureToggle.html
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.EventHandlerExistsAsync*
  commentId: Overload:SuperOffice.CRM.Services.ICustomerServiceAgent.EventHandlerExistsAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ICustomerServiceAgent.html#SuperOffice_CRM_Services_ICustomerServiceAgent_EventHandlerExistsAsync_SuperOffice_Data_EventHandlerType_System_Threading_CancellationToken_
  name: EventHandlerExistsAsync
  nameWithType: ICustomerServiceAgent.EventHandlerExistsAsync
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.EventHandlerExistsAsync
- uid: SuperOffice.Data.EventHandlerType
  isExternal: true
  name: EventHandlerType
  nameWithType: EventHandlerType
  fullName: SuperOffice.Data.EventHandlerType
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.EventHandlersExistsAsync*
  commentId: Overload:SuperOffice.CRM.Services.ICustomerServiceAgent.EventHandlersExistsAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ICustomerServiceAgent.html#SuperOffice_CRM_Services_ICustomerServiceAgent_EventHandlersExistsAsync_SuperOffice_Data_EventHandlerType___System_Threading_CancellationToken_
  name: EventHandlersExistsAsync
  nameWithType: ICustomerServiceAgent.EventHandlersExistsAsync
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.EventHandlersExistsAsync
- uid: SuperOffice.Data.EventHandlerType[]
  isExternal: true
  name: EventHandlerType[]
  nameWithType: EventHandlerType[]
  fullName: SuperOffice.Data.EventHandlerType[]
  nameWithType.vb: EventHandlerType()
  fullName.vb: SuperOffice.Data.EventHandlerType()
  name.vb: EventHandlerType()
  spec.csharp:
  - uid: SuperOffice.Data.EventHandlerType
    name: EventHandlerType
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.Data.EventHandlerType
    name: EventHandlerType
    isExternal: true
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task{SuperOffice.Data.EventHandlerType[]}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.Data.EventHandlerType[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<EventHandlerType[]>
  nameWithType: Task<EventHandlerType[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.Data.EventHandlerType[]>
  nameWithType.vb: Task(Of EventHandlerType())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.Data.EventHandlerType())
  name.vb: Task(Of EventHandlerType())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.Data.EventHandlerType
    name: EventHandlerType
    isExternal: true
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Data.EventHandlerType
    name: EventHandlerType
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.CreateSessionAsync*
  commentId: Overload:SuperOffice.CRM.Services.ICustomerServiceAgent.CreateSessionAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ICustomerServiceAgent.html#SuperOffice_CRM_Services_ICustomerServiceAgent_CreateSessionAsync_System_String_System_Threading_CancellationToken_
  name: CreateSessionAsync
  nameWithType: ICustomerServiceAgent.CreateSessionAsync
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.CreateSessionAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.CsSessionKey}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.CsSessionKey}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<CsSessionKey>
  nameWithType: Task<CsSessionKey>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.CsSessionKey>
  nameWithType.vb: Task(Of CsSessionKey)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.CsSessionKey)
  name.vb: Task(Of CsSessionKey)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.CsSessionKey
    name: CsSessionKey
    isExternal: true
    href: SuperOffice.CRM.Services.CsSessionKey.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.CsSessionKey
    name: CsSessionKey
    isExternal: true
    href: SuperOffice.CRM.Services.CsSessionKey.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.RemoveSessionAsync*
  commentId: Overload:SuperOffice.CRM.Services.ICustomerServiceAgent.RemoveSessionAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ICustomerServiceAgent.html#SuperOffice_CRM_Services_ICustomerServiceAgent_RemoveSessionAsync_System_Int32_System_Threading_CancellationToken_
  name: RemoveSessionAsync
  nameWithType: ICustomerServiceAgent.RemoveSessionAsync
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.RemoveSessionAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.SessionIsValidAsync*
  commentId: Overload:SuperOffice.CRM.Services.ICustomerServiceAgent.SessionIsValidAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ICustomerServiceAgent.html#SuperOffice_CRM_Services_ICustomerServiceAgent_SessionIsValidAsync_System_String_System_Threading_CancellationToken_
  name: SessionIsValidAsync
  nameWithType: ICustomerServiceAgent.SessionIsValidAsync
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.SessionIsValidAsync
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.HasChatNotifyAsync*
  commentId: Overload:SuperOffice.CRM.Services.ICustomerServiceAgent.HasChatNotifyAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ICustomerServiceAgent.html#SuperOffice_CRM_Services_ICustomerServiceAgent_HasChatNotifyAsync_System_Threading_CancellationToken_
  name: HasChatNotifyAsync
  nameWithType: ICustomerServiceAgent.HasChatNotifyAsync
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.HasChatNotifyAsync
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.CheckSymmetricEncryptionAsync*
  commentId: Overload:SuperOffice.CRM.Services.ICustomerServiceAgent.CheckSymmetricEncryptionAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ICustomerServiceAgent.html#SuperOffice_CRM_Services_ICustomerServiceAgent_CheckSymmetricEncryptionAsync_System_String_System_Threading_CancellationToken_
  name: CheckSymmetricEncryptionAsync
  nameWithType: ICustomerServiceAgent.CheckSymmetricEncryptionAsync
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.CheckSymmetricEncryptionAsync
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<string>
  nameWithType: Task<string>
  fullName: System.Threading.Tasks.Task<string>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.ReportSessionActiveAsync*
  commentId: Overload:SuperOffice.CRM.Services.ICustomerServiceAgent.ReportSessionActiveAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ICustomerServiceAgent.html#SuperOffice_CRM_Services_ICustomerServiceAgent_ReportSessionActiveAsync_System_String_System_Threading_CancellationToken_
  name: ReportSessionActiveAsync
  nameWithType: ICustomerServiceAgent.ReportSessionActiveAsync
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.ReportSessionActiveAsync
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: T:System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<int>
  nameWithType: Task<int>
  fullName: System.Threading.Tasks.Task<int>
  nameWithType.vb: Task(Of Integer)
  fullName.vb: System.Threading.Tasks.Task(Of Integer)
  name.vb: Task(Of Integer)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.CreateDefaultCustomerCenterConfigAsync*
  commentId: Overload:SuperOffice.CRM.Services.ICustomerServiceAgent.CreateDefaultCustomerCenterConfigAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ICustomerServiceAgent.html#SuperOffice_CRM_Services_ICustomerServiceAgent_CreateDefaultCustomerCenterConfigAsync_System_Threading_CancellationToken_
  name: CreateDefaultCustomerCenterConfigAsync
  nameWithType: ICustomerServiceAgent.CreateDefaultCustomerCenterConfigAsync
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.CreateDefaultCustomerCenterConfigAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.CustomerCenterConfig}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.CustomerCenterConfig}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<CustomerCenterConfig>
  nameWithType: Task<CustomerCenterConfig>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.CustomerCenterConfig>
  nameWithType.vb: Task(Of CustomerCenterConfig)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.CustomerCenterConfig)
  name.vb: Task(Of CustomerCenterConfig)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.CustomerCenterConfig
    name: CustomerCenterConfig
    isExternal: true
    href: SuperOffice.CRM.Services.CustomerCenterConfig.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.CustomerCenterConfig
    name: CustomerCenterConfig
    isExternal: true
    href: SuperOffice.CRM.Services.CustomerCenterConfig.html
  - name: )
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.SaveCustomerCenterConfigAsync*
  commentId: Overload:SuperOffice.CRM.Services.ICustomerServiceAgent.SaveCustomerCenterConfigAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ICustomerServiceAgent.html#SuperOffice_CRM_Services_ICustomerServiceAgent_SaveCustomerCenterConfigAsync_SuperOffice_CRM_Services_CustomerCenterConfig_System_Threading_CancellationToken_
  name: SaveCustomerCenterConfigAsync
  nameWithType: ICustomerServiceAgent.SaveCustomerCenterConfigAsync
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.SaveCustomerCenterConfigAsync
- uid: SuperOffice.CRM.Services.CustomerCenterConfig
  commentId: T:SuperOffice.CRM.Services.CustomerCenterConfig
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.CustomerCenterConfig.html
  name: CustomerCenterConfig
  nameWithType: CustomerCenterConfig
  fullName: SuperOffice.CRM.Services.CustomerCenterConfig
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.DeleteCustomerCenterConfigAsync*
  commentId: Overload:SuperOffice.CRM.Services.ICustomerServiceAgent.DeleteCustomerCenterConfigAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ICustomerServiceAgent.html#SuperOffice_CRM_Services_ICustomerServiceAgent_DeleteCustomerCenterConfigAsync_System_Int32_System_Threading_CancellationToken_
  name: DeleteCustomerCenterConfigAsync
  nameWithType: ICustomerServiceAgent.DeleteCustomerCenterConfigAsync
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.DeleteCustomerCenterConfigAsync
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.GetCustomerCenterConfigAsync*
  commentId: Overload:SuperOffice.CRM.Services.ICustomerServiceAgent.GetCustomerCenterConfigAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ICustomerServiceAgent.html#SuperOffice_CRM_Services_ICustomerServiceAgent_GetCustomerCenterConfigAsync_System_Int32_System_Threading_CancellationToken_
  name: GetCustomerCenterConfigAsync
  nameWithType: ICustomerServiceAgent.GetCustomerCenterConfigAsync
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.GetCustomerCenterConfigAsync
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.GetAllCustomerCenterConfigsAsync*
  commentId: Overload:SuperOffice.CRM.Services.ICustomerServiceAgent.GetAllCustomerCenterConfigsAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ICustomerServiceAgent.html#SuperOffice_CRM_Services_ICustomerServiceAgent_GetAllCustomerCenterConfigsAsync_System_Threading_CancellationToken_
  name: GetAllCustomerCenterConfigsAsync
  nameWithType: ICustomerServiceAgent.GetAllCustomerCenterConfigsAsync
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.GetAllCustomerCenterConfigsAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.CustomerCenterConfig[]}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.CustomerCenterConfig[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<CustomerCenterConfig[]>
  nameWithType: Task<CustomerCenterConfig[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.CustomerCenterConfig[]>
  nameWithType.vb: Task(Of CustomerCenterConfig())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.CustomerCenterConfig())
  name.vb: Task(Of CustomerCenterConfig())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.CustomerCenterConfig
    name: CustomerCenterConfig
    isExternal: true
    href: SuperOffice.CRM.Services.CustomerCenterConfig.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.CustomerCenterConfig
    name: CustomerCenterConfig
    isExternal: true
    href: SuperOffice.CRM.Services.CustomerCenterConfig.html
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.SaveAllCustomerCenterConfigsAsync*
  commentId: Overload:SuperOffice.CRM.Services.ICustomerServiceAgent.SaveAllCustomerCenterConfigsAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ICustomerServiceAgent.html#SuperOffice_CRM_Services_ICustomerServiceAgent_SaveAllCustomerCenterConfigsAsync_SuperOffice_CRM_Services_CustomerCenterConfig___System_Threading_CancellationToken_
  name: SaveAllCustomerCenterConfigsAsync
  nameWithType: ICustomerServiceAgent.SaveAllCustomerCenterConfigsAsync
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.SaveAllCustomerCenterConfigsAsync
- uid: SuperOffice.CRM.Services.CustomerCenterConfig[]
  isExternal: true
  href: SuperOffice.CRM.Services.CustomerCenterConfig.html
  name: CustomerCenterConfig[]
  nameWithType: CustomerCenterConfig[]
  fullName: SuperOffice.CRM.Services.CustomerCenterConfig[]
  nameWithType.vb: CustomerCenterConfig()
  fullName.vb: SuperOffice.CRM.Services.CustomerCenterConfig()
  name.vb: CustomerCenterConfig()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.CustomerCenterConfig
    name: CustomerCenterConfig
    isExternal: true
    href: SuperOffice.CRM.Services.CustomerCenterConfig.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Services.CustomerCenterConfig
    name: CustomerCenterConfig
    isExternal: true
    href: SuperOffice.CRM.Services.CustomerCenterConfig.html
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.CheckIfCustomizedTemplatesAsync*
  commentId: Overload:SuperOffice.CRM.Services.ICustomerServiceAgent.CheckIfCustomizedTemplatesAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ICustomerServiceAgent.html#SuperOffice_CRM_Services_ICustomerServiceAgent_CheckIfCustomizedTemplatesAsync_System_Threading_CancellationToken_
  name: CheckIfCustomizedTemplatesAsync
  nameWithType: ICustomerServiceAgent.CheckIfCustomizedTemplatesAsync
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.CheckIfCustomizedTemplatesAsync
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.GetProgramUrlAsync*
  commentId: Overload:SuperOffice.CRM.Services.ICustomerServiceAgent.GetProgramUrlAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ICustomerServiceAgent.html#SuperOffice_CRM_Services_ICustomerServiceAgent_GetProgramUrlAsync_System_String_System_Boolean_System_Threading_CancellationToken_
  name: GetProgramUrlAsync
  nameWithType: ICustomerServiceAgent.GetProgramUrlAsync
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.GetProgramUrlAsync
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.GetFaqForCustomerAsync*
  commentId: Overload:SuperOffice.CRM.Services.ICustomerServiceAgent.GetFaqForCustomerAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ICustomerServiceAgent.html#SuperOffice_CRM_Services_ICustomerServiceAgent_GetFaqForCustomerAsync_System_Int32_System_Threading_CancellationToken_
  name: GetFaqForCustomerAsync
  nameWithType: ICustomerServiceAgent.GetFaqForCustomerAsync
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.GetFaqForCustomerAsync
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.GetCustomerServiceStartupAsync*
  commentId: Overload:SuperOffice.CRM.Services.ICustomerServiceAgent.GetCustomerServiceStartupAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ICustomerServiceAgent.html#SuperOffice_CRM_Services_ICustomerServiceAgent_GetCustomerServiceStartupAsync_System_Threading_CancellationToken_
  name: GetCustomerServiceStartupAsync
  nameWithType: ICustomerServiceAgent.GetCustomerServiceStartupAsync
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.GetCustomerServiceStartupAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.CustomerServiceStartup}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.CustomerServiceStartup}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<CustomerServiceStartup>
  nameWithType: Task<CustomerServiceStartup>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.CustomerServiceStartup>
  nameWithType.vb: Task(Of CustomerServiceStartup)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.CustomerServiceStartup)
  name.vb: Task(Of CustomerServiceStartup)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.CustomerServiceStartup
    name: CustomerServiceStartup
    isExternal: true
    href: SuperOffice.CRM.Services.CustomerServiceStartup.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.CustomerServiceStartup
    name: CustomerServiceStartup
    isExternal: true
    href: SuperOffice.CRM.Services.CustomerServiceStartup.html
  - name: )
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.GetCustomerServiceStartupByOwnerAsync*
  commentId: Overload:SuperOffice.CRM.Services.ICustomerServiceAgent.GetCustomerServiceStartupByOwnerAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ICustomerServiceAgent.html#SuperOffice_CRM_Services_ICustomerServiceAgent_GetCustomerServiceStartupByOwnerAsync_System_Int32_System_Threading_CancellationToken_
  name: GetCustomerServiceStartupByOwnerAsync
  nameWithType: ICustomerServiceAgent.GetCustomerServiceStartupByOwnerAsync
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.GetCustomerServiceStartupByOwnerAsync
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.ExecuteEventHandlersAsync*
  commentId: Overload:SuperOffice.CRM.Services.ICustomerServiceAgent.ExecuteEventHandlersAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ICustomerServiceAgent.html#SuperOffice_CRM_Services_ICustomerServiceAgent_ExecuteEventHandlersAsync_SuperOffice_CRM_Services_EventData_System_Threading_CancellationToken_
  name: ExecuteEventHandlersAsync
  nameWithType: ICustomerServiceAgent.ExecuteEventHandlersAsync
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.ExecuteEventHandlersAsync
- uid: SuperOffice.CRM.Services.EventData
  commentId: T:SuperOffice.CRM.Services.EventData
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.EventData.html
  name: EventData
  nameWithType: EventData
  fullName: SuperOffice.CRM.Services.EventData
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.EventData}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.EventData}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<EventData>
  nameWithType: Task<EventData>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.EventData>
  nameWithType.vb: Task(Of EventData)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.EventData)
  name.vb: Task(Of EventData)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.EventData
    name: EventData
    isExternal: true
    href: SuperOffice.CRM.Services.EventData.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.EventData
    name: EventData
    isExternal: true
    href: SuperOffice.CRM.Services.EventData.html
  - name: )
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.GetMailboxesAsync*
  commentId: Overload:SuperOffice.CRM.Services.ICustomerServiceAgent.GetMailboxesAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ICustomerServiceAgent.html#SuperOffice_CRM_Services_ICustomerServiceAgent_GetMailboxesAsync_System_Threading_CancellationToken_
  name: GetMailboxesAsync
  nameWithType: ICustomerServiceAgent.GetMailboxesAsync
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.GetMailboxesAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Mailbox[]}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.Mailbox[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Mailbox[]>
  nameWithType: Task<Mailbox[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.Mailbox[]>
  nameWithType.vb: Task(Of Mailbox())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.Mailbox())
  name.vb: Task(Of Mailbox())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.Mailbox
    name: Mailbox
    isExternal: true
    href: SuperOffice.CRM.Services.Mailbox.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.Mailbox
    name: Mailbox
    isExternal: true
    href: SuperOffice.CRM.Services.Mailbox.html
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.CreateDefaultMailboxEntityAsync*
  commentId: Overload:SuperOffice.CRM.Services.ICustomerServiceAgent.CreateDefaultMailboxEntityAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ICustomerServiceAgent.html#SuperOffice_CRM_Services_ICustomerServiceAgent_CreateDefaultMailboxEntityAsync_System_Threading_CancellationToken_
  name: CreateDefaultMailboxEntityAsync
  nameWithType: ICustomerServiceAgent.CreateDefaultMailboxEntityAsync
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.CreateDefaultMailboxEntityAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.MailboxEntity}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.MailboxEntity}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<MailboxEntity>
  nameWithType: Task<MailboxEntity>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.MailboxEntity>
  nameWithType.vb: Task(Of MailboxEntity)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.MailboxEntity)
  name.vb: Task(Of MailboxEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.MailboxEntity
    name: MailboxEntity
    isExternal: true
    href: SuperOffice.CRM.Services.MailboxEntity.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.MailboxEntity
    name: MailboxEntity
    isExternal: true
    href: SuperOffice.CRM.Services.MailboxEntity.html
  - name: )
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.SaveMailboxEntityAsync*
  commentId: Overload:SuperOffice.CRM.Services.ICustomerServiceAgent.SaveMailboxEntityAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ICustomerServiceAgent.html#SuperOffice_CRM_Services_ICustomerServiceAgent_SaveMailboxEntityAsync_SuperOffice_CRM_Services_MailboxEntity_System_Threading_CancellationToken_
  name: SaveMailboxEntityAsync
  nameWithType: ICustomerServiceAgent.SaveMailboxEntityAsync
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.SaveMailboxEntityAsync
- uid: SuperOffice.CRM.Services.MailboxEntity
  commentId: T:SuperOffice.CRM.Services.MailboxEntity
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.MailboxEntity.html
  name: MailboxEntity
  nameWithType: MailboxEntity
  fullName: SuperOffice.CRM.Services.MailboxEntity
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.GetMailboxEntityAsync*
  commentId: Overload:SuperOffice.CRM.Services.ICustomerServiceAgent.GetMailboxEntityAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ICustomerServiceAgent.html#SuperOffice_CRM_Services_ICustomerServiceAgent_GetMailboxEntityAsync_System_Int32_System_Threading_CancellationToken_
  name: GetMailboxEntityAsync
  nameWithType: ICustomerServiceAgent.GetMailboxEntityAsync
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.GetMailboxEntityAsync
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.GetPreviewFaqEntryAsync*
  commentId: Overload:SuperOffice.CRM.Services.ICustomerServiceAgent.GetPreviewFaqEntryAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ICustomerServiceAgent.html#SuperOffice_CRM_Services_ICustomerServiceAgent_GetPreviewFaqEntryAsync_System_Int32_System_Threading_CancellationToken_
  name: GetPreviewFaqEntryAsync
  nameWithType: ICustomerServiceAgent.GetPreviewFaqEntryAsync
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.GetPreviewFaqEntryAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.PreviewFaqEntry}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.PreviewFaqEntry}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<PreviewFaqEntry>
  nameWithType: Task<PreviewFaqEntry>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.PreviewFaqEntry>
  nameWithType.vb: Task(Of PreviewFaqEntry)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.PreviewFaqEntry)
  name.vb: Task(Of PreviewFaqEntry)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.PreviewFaqEntry
    name: PreviewFaqEntry
    isExternal: true
    href: SuperOffice.CRM.Services.PreviewFaqEntry.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.PreviewFaqEntry
    name: PreviewFaqEntry
    isExternal: true
    href: SuperOffice.CRM.Services.PreviewFaqEntry.html
  - name: )
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.GetPreviewQuickReplyAsync*
  commentId: Overload:SuperOffice.CRM.Services.ICustomerServiceAgent.GetPreviewQuickReplyAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ICustomerServiceAgent.html#SuperOffice_CRM_Services_ICustomerServiceAgent_GetPreviewQuickReplyAsync_System_Int32_System_Threading_CancellationToken_
  name: GetPreviewQuickReplyAsync
  nameWithType: ICustomerServiceAgent.GetPreviewQuickReplyAsync
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.GetPreviewQuickReplyAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.PreviewQuickReply}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.PreviewQuickReply}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<PreviewQuickReply>
  nameWithType: Task<PreviewQuickReply>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.PreviewQuickReply>
  nameWithType.vb: Task(Of PreviewQuickReply)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.PreviewQuickReply)
  name.vb: Task(Of PreviewQuickReply)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.PreviewQuickReply
    name: PreviewQuickReply
    isExternal: true
    href: SuperOffice.CRM.Services.PreviewQuickReply.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.PreviewQuickReply
    name: PreviewQuickReply
    isExternal: true
    href: SuperOffice.CRM.Services.PreviewQuickReply.html
  - name: )
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.GetPreviewReplyTemplateAsync*
  commentId: Overload:SuperOffice.CRM.Services.ICustomerServiceAgent.GetPreviewReplyTemplateAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ICustomerServiceAgent.html#SuperOffice_CRM_Services_ICustomerServiceAgent_GetPreviewReplyTemplateAsync_System_Int32_System_Threading_CancellationToken_
  name: GetPreviewReplyTemplateAsync
  nameWithType: ICustomerServiceAgent.GetPreviewReplyTemplateAsync
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.GetPreviewReplyTemplateAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.PreviewReplyTemplate}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.PreviewReplyTemplate}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<PreviewReplyTemplate>
  nameWithType: Task<PreviewReplyTemplate>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.PreviewReplyTemplate>
  nameWithType.vb: Task(Of PreviewReplyTemplate)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.PreviewReplyTemplate)
  name.vb: Task(Of PreviewReplyTemplate)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.PreviewReplyTemplate
    name: PreviewReplyTemplate
    isExternal: true
    href: SuperOffice.CRM.Services.PreviewReplyTemplate.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.PreviewReplyTemplate
    name: PreviewReplyTemplate
    isExternal: true
    href: SuperOffice.CRM.Services.PreviewReplyTemplate.html
  - name: )
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.GetParsedTemplateAsync*
  commentId: Overload:SuperOffice.CRM.Services.ICustomerServiceAgent.GetParsedTemplateAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ICustomerServiceAgent.html#SuperOffice_CRM_Services_ICustomerServiceAgent_GetParsedTemplateAsync_System_Int32_System_Int32_System_Int32_System_Int32_System_Threading_CancellationToken_
  name: GetParsedTemplateAsync
  nameWithType: ICustomerServiceAgent.GetParsedTemplateAsync
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.GetParsedTemplateAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.ReplyTemplateParsed}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.ReplyTemplateParsed}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ReplyTemplateParsed>
  nameWithType: Task<ReplyTemplateParsed>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.ReplyTemplateParsed>
  nameWithType.vb: Task(Of ReplyTemplateParsed)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.ReplyTemplateParsed)
  name.vb: Task(Of ReplyTemplateParsed)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.ReplyTemplateParsed
    name: ReplyTemplateParsed
    isExternal: true
    href: SuperOffice.CRM.Services.ReplyTemplateParsed.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.ReplyTemplateParsed
    name: ReplyTemplateParsed
    isExternal: true
    href: SuperOffice.CRM.Services.ReplyTemplateParsed.html
  - name: )
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.GetUnparsedTemplateAsync*
  commentId: Overload:SuperOffice.CRM.Services.ICustomerServiceAgent.GetUnparsedTemplateAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ICustomerServiceAgent.html#SuperOffice_CRM_Services_ICustomerServiceAgent_GetUnparsedTemplateAsync_System_Int32_System_Int32_System_Threading_CancellationToken_
  name: GetUnparsedTemplateAsync
  nameWithType: ICustomerServiceAgent.GetUnparsedTemplateAsync
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.GetUnparsedTemplateAsync
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.GetSmsConfigAsync*
  commentId: Overload:SuperOffice.CRM.Services.ICustomerServiceAgent.GetSmsConfigAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ICustomerServiceAgent.html#SuperOffice_CRM_Services_ICustomerServiceAgent_GetSmsConfigAsync_System_Threading_CancellationToken_
  name: GetSmsConfigAsync
  nameWithType: ICustomerServiceAgent.GetSmsConfigAsync
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.GetSmsConfigAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.SmsConfig}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.SmsConfig}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<SmsConfig>
  nameWithType: Task<SmsConfig>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.SmsConfig>
  nameWithType.vb: Task(Of SmsConfig)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.SmsConfig)
  name.vb: Task(Of SmsConfig)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.SmsConfig
    name: SmsConfig
    isExternal: true
    href: SuperOffice.CRM.Services.SmsConfig.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.SmsConfig
    name: SmsConfig
    isExternal: true
    href: SuperOffice.CRM.Services.SmsConfig.html
  - name: )
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.TestSmtpServerAsync*
  commentId: Overload:SuperOffice.CRM.Services.ICustomerServiceAgent.TestSmtpServerAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ICustomerServiceAgent.html#SuperOffice_CRM_Services_ICustomerServiceAgent_TestSmtpServerAsync_System_String_System_String_System_Boolean_System_Threading_CancellationToken_
  name: TestSmtpServerAsync
  nameWithType: ICustomerServiceAgent.TestSmtpServerAsync
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.TestSmtpServerAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.SmtpTestResult}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.SmtpTestResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<SmtpTestResult>
  nameWithType: Task<SmtpTestResult>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.SmtpTestResult>
  nameWithType.vb: Task(Of SmtpTestResult)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.SmtpTestResult)
  name.vb: Task(Of SmtpTestResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.SmtpTestResult
    name: SmtpTestResult
    isExternal: true
    href: SuperOffice.CRM.Services.SmtpTestResult.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.SmtpTestResult
    name: SmtpTestResult
    isExternal: true
    href: SuperOffice.CRM.Services.SmtpTestResult.html
  - name: )
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.GetStatisticsAsync*
  commentId: Overload:SuperOffice.CRM.Services.ICustomerServiceAgent.GetStatisticsAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ICustomerServiceAgent.html#SuperOffice_CRM_Services_ICustomerServiceAgent_GetStatisticsAsync_SuperOffice_Data_StatusScreenPanelType___System_Threading_CancellationToken_
  name: GetStatisticsAsync
  nameWithType: ICustomerServiceAgent.GetStatisticsAsync
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.GetStatisticsAsync
- uid: SuperOffice.Data.StatusScreenPanelType[]
  isExternal: true
  name: StatusScreenPanelType[]
  nameWithType: StatusScreenPanelType[]
  fullName: SuperOffice.Data.StatusScreenPanelType[]
  nameWithType.vb: StatusScreenPanelType()
  fullName.vb: SuperOffice.Data.StatusScreenPanelType()
  name.vb: StatusScreenPanelType()
  spec.csharp:
  - uid: SuperOffice.Data.StatusScreenPanelType
    name: StatusScreenPanelType
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.Data.StatusScreenPanelType
    name: StatusScreenPanelType
    isExternal: true
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.StatisticsDataSet[]}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.StatisticsDataSet[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<StatisticsDataSet[]>
  nameWithType: Task<StatisticsDataSet[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.StatisticsDataSet[]>
  nameWithType.vb: Task(Of StatisticsDataSet())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.StatisticsDataSet())
  name.vb: Task(Of StatisticsDataSet())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.StatisticsDataSet
    name: StatisticsDataSet
    isExternal: true
    href: SuperOffice.CRM.Services.StatisticsDataSet.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.StatisticsDataSet
    name: StatisticsDataSet
    isExternal: true
    href: SuperOffice.CRM.Services.StatisticsDataSet.html
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.GetSystemTemplateSettingsAsync*
  commentId: Overload:SuperOffice.CRM.Services.ICustomerServiceAgent.GetSystemTemplateSettingsAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ICustomerServiceAgent.html#SuperOffice_CRM_Services_ICustomerServiceAgent_GetSystemTemplateSettingsAsync_System_Threading_CancellationToken_
  name: GetSystemTemplateSettingsAsync
  nameWithType: ICustomerServiceAgent.GetSystemTemplateSettingsAsync
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.GetSystemTemplateSettingsAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.SystemTemplateSettings}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.SystemTemplateSettings}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<SystemTemplateSettings>
  nameWithType: Task<SystemTemplateSettings>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.SystemTemplateSettings>
  nameWithType.vb: Task(Of SystemTemplateSettings)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.SystemTemplateSettings)
  name.vb: Task(Of SystemTemplateSettings)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.SystemTemplateSettings
    name: SystemTemplateSettings
    isExternal: true
    href: SuperOffice.CRM.Services.SystemTemplateSettings.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.SystemTemplateSettings
    name: SystemTemplateSettings
    isExternal: true
    href: SuperOffice.CRM.Services.SystemTemplateSettings.html
  - name: )
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.SaveSystemTemplateSettingsAsync*
  commentId: Overload:SuperOffice.CRM.Services.ICustomerServiceAgent.SaveSystemTemplateSettingsAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ICustomerServiceAgent.html#SuperOffice_CRM_Services_ICustomerServiceAgent_SaveSystemTemplateSettingsAsync_SuperOffice_CRM_Services_SystemTemplateSettings_System_Threading_CancellationToken_
  name: SaveSystemTemplateSettingsAsync
  nameWithType: ICustomerServiceAgent.SaveSystemTemplateSettingsAsync
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.SaveSystemTemplateSettingsAsync
- uid: SuperOffice.CRM.Services.SystemTemplateSettings
  commentId: T:SuperOffice.CRM.Services.SystemTemplateSettings
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.SystemTemplateSettings.html
  name: SystemTemplateSettings
  nameWithType: SystemTemplateSettings
  fullName: SuperOffice.CRM.Services.SystemTemplateSettings
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.CreateTicketFromMailDataAsync*
  commentId: Overload:SuperOffice.CRM.Services.ICustomerServiceAgent.CreateTicketFromMailDataAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ICustomerServiceAgent.html#SuperOffice_CRM_Services_ICustomerServiceAgent_CreateTicketFromMailDataAsync_System_Int32_System_String_System_Threading_CancellationToken_
  name: CreateTicketFromMailDataAsync
  nameWithType: ICustomerServiceAgent.CreateTicketFromMailDataAsync
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.CreateTicketFromMailDataAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.TicketInfo}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.TicketInfo}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TicketInfo>
  nameWithType: Task<TicketInfo>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.TicketInfo>
  nameWithType.vb: Task(Of TicketInfo)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.TicketInfo)
  name.vb: Task(Of TicketInfo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.TicketInfo
    name: TicketInfo
    isExternal: true
    href: SuperOffice.CRM.Services.TicketInfo.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.TicketInfo
    name: TicketInfo
    isExternal: true
    href: SuperOffice.CRM.Services.TicketInfo.html
  - name: )
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.AddMessageFromMailDataAsync*
  commentId: Overload:SuperOffice.CRM.Services.ICustomerServiceAgent.AddMessageFromMailDataAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ICustomerServiceAgent.html#SuperOffice_CRM_Services_ICustomerServiceAgent_AddMessageFromMailDataAsync_System_Int32_System_String_System_Threading_CancellationToken_
  name: AddMessageFromMailDataAsync
  nameWithType: ICustomerServiceAgent.AddMessageFromMailDataAsync
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.AddMessageFromMailDataAsync
- uid: SuperOffice.CRM.Services.ICustomerServiceAgent.FindTicketsByTitleOrIdAsync*
  commentId: Overload:SuperOffice.CRM.Services.ICustomerServiceAgent.FindTicketsByTitleOrIdAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ICustomerServiceAgent.html#SuperOffice_CRM_Services_ICustomerServiceAgent_FindTicketsByTitleOrIdAsync_System_String_System_Int32_System_Threading_CancellationToken_
  name: FindTicketsByTitleOrIdAsync
  nameWithType: ICustomerServiceAgent.FindTicketsByTitleOrIdAsync
  fullName: SuperOffice.CRM.Services.ICustomerServiceAgent.FindTicketsByTitleOrIdAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.TicketInfo[]}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.TicketInfo[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TicketInfo[]>
  nameWithType: Task<TicketInfo[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.TicketInfo[]>
  nameWithType.vb: Task(Of TicketInfo())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.TicketInfo())
  name.vb: Task(Of TicketInfo())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.TicketInfo
    name: TicketInfo
    isExternal: true
    href: SuperOffice.CRM.Services.TicketInfo.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.TicketInfo
    name: TicketInfo
    isExternal: true
    href: SuperOffice.CRM.Services.TicketInfo.html
  - name: (
  - name: )
  - name: )
