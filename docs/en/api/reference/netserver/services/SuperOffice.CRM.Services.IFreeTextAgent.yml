### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Services.IFreeTextAgent
  commentId: T:SuperOffice.CRM.Services.IFreeTextAgent
  id: IFreeTextAgent
  parent: SuperOffice.CRM.Services
  children:
  - SuperOffice.CRM.Services.IFreeTextAgent.FreetextIndexRowsAsync(System.String,System.Int32[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IFreeTextAgent.GetStatusAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IFreeTextAgent.RegenerateIndexAsync(System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IFreeTextAgent.SetEnabledAsync(System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IFreeTextAgent.SetMultiWordOperatorAsync(SuperOffice.Data.FreeTextOperator,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IFreeTextAgent.SetSingleWordOperatorAsync(SuperOffice.Data.FreeTextOperator,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IFreeTextAgent
  nameWithType: IFreeTextAgent
  fullName: SuperOffice.CRM.Services.IFreeTextAgent
  type: Interface
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nInterface for the FreeText Agent\nThis agent can be used to manage the free text system\n"
  example:
  - "\n<pre><code>  using SuperOffice;\n  using SuperOffice.CRM.Services;\n\n  using (SoSession mySession = SoSession.Authenticate(&quot;user&quot;, &quot;pass&quot;))\n  {\n     using (FreeTextAgent agent = new FreeTextAgent())\n     {\n        // call methods on agent here...\n     }\n  }</code></pre>\n"
  syntax:
    content: >-
      [Agent("FreeText Agent", "Interface for the FreeText Agent. This agent can be used to manage the free text system")]

      public interface IFreeTextAgent : IAgent
    content.vb: >-
      <Agent("FreeText Agent", "Interface for the FreeText Agent. This agent can be used to manage the free text system")>

      Public Interface IFreeTextAgent
          Inherits IAgent
  attributes:
  - type: SuperOffice.CRM.Services.Reflection.AgentAttribute
    ctor: SuperOffice.CRM.Services.Reflection.AgentAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: FreeText Agent
    - type: System.String
      value: Interface for the FreeText Agent. This agent can be used to manage the free text system
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.CRM.Services.IFreeTextAgent.GetStatusAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IFreeTextAgent.GetStatusAsync(System.Threading.CancellationToken)
  id: GetStatusAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IFreeTextAgent
  langs:
  - csharp
  - vb
  name: GetStatusAsync(CancellationToken)
  nameWithType: IFreeTextAgent.GetStatusAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.IFreeTextAgent.GetStatusAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nReturns status for the freetext search words\n"
  syntax:
    content: Task<FreeText> GetStatusAsync(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.FreeText}
      description: The freetext status
    content.vb: Function GetStatusAsync(cancellationToken As CancellationToken = Nothing) As Task(Of FreeText)
  overload: SuperOffice.CRM.Services.IFreeTextAgent.GetStatusAsync*
- uid: SuperOffice.CRM.Services.IFreeTextAgent.SetEnabledAsync(System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IFreeTextAgent.SetEnabledAsync(System.Boolean,System.Threading.CancellationToken)
  id: SetEnabledAsync(System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IFreeTextAgent
  langs:
  - csharp
  - vb
  name: SetEnabledAsync(Boolean, CancellationToken)
  nameWithType: IFreeTextAgent.SetEnabledAsync(Boolean, CancellationToken)
  fullName: SuperOffice.CRM.Services.IFreeTextAgent.SetEnabledAsync(System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSets freetext search to enabled (true) or disabled (false)\n"
  syntax:
    content: Task SetEnabledAsync(bool enabled, CancellationToken cancellationToken = null)
    parameters:
    - id: enabled
      type: System.Boolean
      description: If enabled true, else false
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Function SetEnabledAsync(enabled As Boolean, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IFreeTextAgent.SetEnabledAsync*
- uid: SuperOffice.CRM.Services.IFreeTextAgent.SetSingleWordOperatorAsync(SuperOffice.Data.FreeTextOperator,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IFreeTextAgent.SetSingleWordOperatorAsync(SuperOffice.Data.FreeTextOperator,System.Threading.CancellationToken)
  id: SetSingleWordOperatorAsync(SuperOffice.Data.FreeTextOperator,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IFreeTextAgent
  langs:
  - csharp
  - vb
  name: SetSingleWordOperatorAsync(FreeTextOperator, CancellationToken)
  nameWithType: IFreeTextAgent.SetSingleWordOperatorAsync(FreeTextOperator, CancellationToken)
  fullName: SuperOffice.CRM.Services.IFreeTextAgent.SetSingleWordOperatorAsync(SuperOffice.Data.FreeTextOperator, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSets the operator used when matching single words\n"
  syntax:
    content: Task SetSingleWordOperatorAsync(FreeTextOperator freeTextOperator, CancellationToken cancellationToken = null)
    parameters:
    - id: freeTextOperator
      type: SuperOffice.Data.FreeTextOperator
      description: The operator
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Function SetSingleWordOperatorAsync(freeTextOperator As FreeTextOperator, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IFreeTextAgent.SetSingleWordOperatorAsync*
- uid: SuperOffice.CRM.Services.IFreeTextAgent.SetMultiWordOperatorAsync(SuperOffice.Data.FreeTextOperator,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IFreeTextAgent.SetMultiWordOperatorAsync(SuperOffice.Data.FreeTextOperator,System.Threading.CancellationToken)
  id: SetMultiWordOperatorAsync(SuperOffice.Data.FreeTextOperator,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IFreeTextAgent
  langs:
  - csharp
  - vb
  name: SetMultiWordOperatorAsync(FreeTextOperator, CancellationToken)
  nameWithType: IFreeTextAgent.SetMultiWordOperatorAsync(FreeTextOperator, CancellationToken)
  fullName: SuperOffice.CRM.Services.IFreeTextAgent.SetMultiWordOperatorAsync(SuperOffice.Data.FreeTextOperator, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSets the operator used when matching multiple words\n"
  syntax:
    content: Task SetMultiWordOperatorAsync(FreeTextOperator freeTextOperator, CancellationToken cancellationToken = null)
    parameters:
    - id: freeTextOperator
      type: SuperOffice.Data.FreeTextOperator
      description: The operator
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: No return value
    content.vb: Function SetMultiWordOperatorAsync(freeTextOperator As FreeTextOperator, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IFreeTextAgent.SetMultiWordOperatorAsync*
- uid: SuperOffice.CRM.Services.IFreeTextAgent.RegenerateIndexAsync(System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IFreeTextAgent.RegenerateIndexAsync(System.Boolean,System.Threading.CancellationToken)
  id: RegenerateIndexAsync(System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IFreeTextAgent
  langs:
  - csharp
  - vb
  name: RegenerateIndexAsync(Boolean, CancellationToken)
  nameWithType: IFreeTextAgent.RegenerateIndexAsync(Boolean, CancellationToken)
  fullName: SuperOffice.CRM.Services.IFreeTextAgent.RegenerateIndexAsync(System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nWipe and regenerate the freetext index by scanning the database (freetext search will be unavailable while this operation runs\n"
  syntax:
    content: Task<BatchTaskInfo> RegenerateIndexAsync(bool runAsBatch, CancellationToken cancellationToken = null)
    parameters:
    - id: runAsBatch
      type: System.Boolean
      description: If true, then execute the regeneration as a Batch Task; the service call will return immediately. Otherwise wait until the task completes, may cause a timeout if called as a Web Service
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.BatchTaskInfo}
      description: Information about the batch task, if batch execution was requested. Otherwise null
    content.vb: Function RegenerateIndexAsync(runAsBatch As Boolean, cancellationToken As CancellationToken = Nothing) As Task(Of BatchTaskInfo)
  overload: SuperOffice.CRM.Services.IFreeTextAgent.RegenerateIndexAsync*
- uid: SuperOffice.CRM.Services.IFreeTextAgent.FreetextIndexRowsAsync(System.String,System.Int32[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IFreeTextAgent.FreetextIndexRowsAsync(System.String,System.Int32[],System.Threading.CancellationToken)
  id: FreetextIndexRowsAsync(System.String,System.Int32[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IFreeTextAgent
  langs:
  - csharp
  - vb
  name: FreetextIndexRowsAsync(String, Int32[], CancellationToken)
  nameWithType: IFreeTextAgent.FreetextIndexRowsAsync(String, Int32[], CancellationToken)
  fullName: SuperOffice.CRM.Services.IFreeTextAgent.FreetextIndexRowsAsync(System.String, System.Int32[], System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nUpdate the freetext index for one or more rows from the same table\n"
  syntax:
    content: Task FreetextIndexRowsAsync(string tableName, int[] iDs, CancellationToken cancellationToken = null)
    parameters:
    - id: tableName
      type: System.String
      description: The name of the table the rows come from; this table should have at least one freetext-indexable field
    - id: iDs
      type: System.Int32[]
      description: One or more primary keys, identifying records to be (re)indexed. It doesn&apos;t matter if they have been indexed before or not
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Function FreetextIndexRowsAsync(tableName As String, iDs As Integer(), cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IFreeTextAgent.FreetextIndexRowsAsync*
  nameWithType.vb: IFreeTextAgent.FreetextIndexRowsAsync(String, Int32(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IFreeTextAgent.FreetextIndexRowsAsync(System.String, System.Int32(), System.Threading.CancellationToken)
  name.vb: FreetextIndexRowsAsync(String, Int32(), CancellationToken)
references:
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
- uid: SuperOffice.CRM.Services.IFreeTextAgent.GetStatusAsync*
  commentId: Overload:SuperOffice.CRM.Services.IFreeTextAgent.GetStatusAsync
  isExternal: true
  name: GetStatusAsync
  nameWithType: IFreeTextAgent.GetStatusAsync
  fullName: SuperOffice.CRM.Services.IFreeTextAgent.GetStatusAsync
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.FreeText}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Services.FreeText}'
  definition: System.Threading.Tasks.Task`1
  name: Task<FreeText>
  nameWithType: Task<FreeText>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.FreeText>
  nameWithType.vb: Task(Of FreeText)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.FreeText)
  name.vb: Task(Of FreeText)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Services.FreeText
    name: FreeText
    nameWithType: FreeText
    fullName: SuperOffice.CRM.Services.FreeText
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Services.FreeText
    name: FreeText
    nameWithType: FreeText
    fullName: SuperOffice.CRM.Services.FreeText
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.IFreeTextAgent.SetEnabledAsync*
  commentId: Overload:SuperOffice.CRM.Services.IFreeTextAgent.SetEnabledAsync
  isExternal: true
  name: SetEnabledAsync
  nameWithType: IFreeTextAgent.SetEnabledAsync
  fullName: SuperOffice.CRM.Services.IFreeTextAgent.SetEnabledAsync
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.Tasks.Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Services.IFreeTextAgent.SetSingleWordOperatorAsync*
  commentId: Overload:SuperOffice.CRM.Services.IFreeTextAgent.SetSingleWordOperatorAsync
  isExternal: true
  name: SetSingleWordOperatorAsync
  nameWithType: IFreeTextAgent.SetSingleWordOperatorAsync
  fullName: SuperOffice.CRM.Services.IFreeTextAgent.SetSingleWordOperatorAsync
- uid: SuperOffice.Data.FreeTextOperator
  isExternal: true
  name: FreeTextOperator
  nameWithType: FreeTextOperator
  fullName: SuperOffice.Data.FreeTextOperator
- uid: SuperOffice.CRM.Services.IFreeTextAgent.SetMultiWordOperatorAsync*
  commentId: Overload:SuperOffice.CRM.Services.IFreeTextAgent.SetMultiWordOperatorAsync
  isExternal: true
  name: SetMultiWordOperatorAsync
  nameWithType: IFreeTextAgent.SetMultiWordOperatorAsync
  fullName: SuperOffice.CRM.Services.IFreeTextAgent.SetMultiWordOperatorAsync
- uid: SuperOffice.CRM.Services.IFreeTextAgent.RegenerateIndexAsync*
  commentId: Overload:SuperOffice.CRM.Services.IFreeTextAgent.RegenerateIndexAsync
  isExternal: true
  name: RegenerateIndexAsync
  nameWithType: IFreeTextAgent.RegenerateIndexAsync
  fullName: SuperOffice.CRM.Services.IFreeTextAgent.RegenerateIndexAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.BatchTaskInfo}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Services.BatchTaskInfo}'
  definition: System.Threading.Tasks.Task`1
  name: Task<BatchTaskInfo>
  nameWithType: Task<BatchTaskInfo>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.BatchTaskInfo>
  nameWithType.vb: Task(Of BatchTaskInfo)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.BatchTaskInfo)
  name.vb: Task(Of BatchTaskInfo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Services.BatchTaskInfo
    name: BatchTaskInfo
    nameWithType: BatchTaskInfo
    fullName: SuperOffice.CRM.Services.BatchTaskInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Services.BatchTaskInfo
    name: BatchTaskInfo
    nameWithType: BatchTaskInfo
    fullName: SuperOffice.CRM.Services.BatchTaskInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.IFreeTextAgent.FreetextIndexRowsAsync*
  commentId: Overload:SuperOffice.CRM.Services.IFreeTextAgent.FreetextIndexRowsAsync
  isExternal: true
  name: FreetextIndexRowsAsync
  nameWithType: IFreeTextAgent.FreetextIndexRowsAsync
  fullName: SuperOffice.CRM.Services.IFreeTextAgent.FreetextIndexRowsAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
