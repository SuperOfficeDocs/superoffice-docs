### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Services.IDashboardAgent
  commentId: T:SuperOffice.CRM.Services.IDashboardAgent
  id: IDashboardAgent
  parent: SuperOffice.CRM.Services
  children:
  - SuperOffice.CRM.Services.IDashboardAgent.CreateDefaultDashboard
  - SuperOffice.CRM.Services.IDashboardAgent.CreateDefaultDashboardTile
  - SuperOffice.CRM.Services.IDashboardAgent.CreateNewFromTemplate(System.Int32,System.String,System.String,System.Int32,SuperOffice.CRM.Services.VisibleFor[])
  - SuperOffice.CRM.Services.IDashboardAgent.DeleteDashboard(System.Int32)
  - SuperOffice.CRM.Services.IDashboardAgent.DeleteDashboardTile(System.Int32)
  - SuperOffice.CRM.Services.IDashboardAgent.GetDashboard(System.Int32)
  - SuperOffice.CRM.Services.IDashboardAgent.GetDashboards(System.Int32)
  - SuperOffice.CRM.Services.IDashboardAgent.GetDashboardTile(System.Int32)
  - SuperOffice.CRM.Services.IDashboardAgent.GetDashboardTiles(System.Int32[])
  - SuperOffice.CRM.Services.IDashboardAgent.GetData(System.Int32,System.String)
  - SuperOffice.CRM.Services.IDashboardAgent.GetDataWithSelection(System.Int32,System.Int32,System.String)
  - SuperOffice.CRM.Services.IDashboardAgent.GetStandardDashboardTileFromChartId(System.String)
  - SuperOffice.CRM.Services.IDashboardAgent.SaveDashboard(SuperOffice.CRM.Services.Dashboard)
  - SuperOffice.CRM.Services.IDashboardAgent.SaveDashboardTile(SuperOffice.CRM.Services.DashboardTile)
  - SuperOffice.CRM.Services.IDashboardAgent.SetTile(System.Int32,System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: IDashboardAgent
  nameWithType: IDashboardAgent
  fullName: SuperOffice.CRM.Services.IDashboardAgent
  type: Interface
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nInterface for the Dashboard Agent\nAgent lets you configure dashboard tiles and retrieve dashboard data\n"
  example:
  - "\n<pre><code>  using SuperOffice;\n  using SuperOffice.CRM.Services;\n\n  using (SoSession mySession = SoSession.Authenticate(&quot;user&quot;, &quot;pass&quot;))\n  {\n     using (DashboardAgent agent = new DashboardAgent())\n     {\n        // call methods on agent here...\n     }\n  }</code></pre>\n"
  syntax:
    content: >-
      [Agent("Dashboard Agent", "Interface for the Dashboard Agent. Agent lets you configure dashboard tiles and retrieve dashboard data")]

      public interface IDashboardAgent : IAgent
    content.vb: >-
      <Agent("Dashboard Agent", "Interface for the Dashboard Agent. Agent lets you configure dashboard tiles and retrieve dashboard data")>

      Public Interface IDashboardAgent

          Inherits IAgent
  attributes:
  - type: SuperOffice.CRM.Services.Reflection.AgentAttribute
    ctor: SuperOffice.CRM.Services.Reflection.AgentAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Dashboard Agent
    - type: System.String
      value: Interface for the Dashboard Agent. Agent lets you configure dashboard tiles and retrieve dashboard data
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.CRM.Services.IDashboardAgent.CreateDefaultDashboard
  commentId: M:SuperOffice.CRM.Services.IDashboardAgent.CreateDefaultDashboard
  id: CreateDefaultDashboard
  parent: SuperOffice.CRM.Services.IDashboardAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultDashboard()
  nameWithType: IDashboardAgent.CreateDefaultDashboard()
  fullName: SuperOffice.CRM.Services.IDashboardAgent.CreateDefaultDashboard()
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nLoading default values into a new Dashboard.\nNetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: Dashboard CreateDefaultDashboard()
    return:
      type: SuperOffice.CRM.Services.Dashboard
      description: New Dashboard with default values
    content.vb: Function CreateDefaultDashboard As Dashboard
  overload: SuperOffice.CRM.Services.IDashboardAgent.CreateDefaultDashboard*
- uid: SuperOffice.CRM.Services.IDashboardAgent.SaveDashboard(SuperOffice.CRM.Services.Dashboard)
  commentId: M:SuperOffice.CRM.Services.IDashboardAgent.SaveDashboard(SuperOffice.CRM.Services.Dashboard)
  id: SaveDashboard(SuperOffice.CRM.Services.Dashboard)
  parent: SuperOffice.CRM.Services.IDashboardAgent
  langs:
  - csharp
  - vb
  name: SaveDashboard(Dashboard)
  nameWithType: IDashboardAgent.SaveDashboard(Dashboard)
  fullName: SuperOffice.CRM.Services.IDashboardAgent.SaveDashboard(SuperOffice.CRM.Services.Dashboard)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nUpdates the existing Dashboard or creates a new Dashboard if the id parameter is empty\n"
  syntax:
    content: Dashboard SaveDashboard(Dashboard dashboard)
    parameters:
    - id: dashboard
      type: SuperOffice.CRM.Services.Dashboard
      description: The Dashboard that is saved.
    return:
      type: SuperOffice.CRM.Services.Dashboard
      description: New or updated Dashboard
    content.vb: Function SaveDashboard(dashboard As Dashboard) As Dashboard
  overload: SuperOffice.CRM.Services.IDashboardAgent.SaveDashboard*
- uid: SuperOffice.CRM.Services.IDashboardAgent.DeleteDashboard(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IDashboardAgent.DeleteDashboard(System.Int32)
  id: DeleteDashboard(System.Int32)
  parent: SuperOffice.CRM.Services.IDashboardAgent
  langs:
  - csharp
  - vb
  name: DeleteDashboard(Int32)
  nameWithType: IDashboardAgent.DeleteDashboard(Int32)
  fullName: SuperOffice.CRM.Services.IDashboardAgent.DeleteDashboard(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nDeletes the Dashboard\n"
  syntax:
    content: void DeleteDashboard(int dashboardId)
    parameters:
    - id: dashboardId
      type: System.Int32
      description: The identity of the Dashboard
    content.vb: Sub DeleteDashboard(dashboardId As Integer)
  overload: SuperOffice.CRM.Services.IDashboardAgent.DeleteDashboard*
- uid: SuperOffice.CRM.Services.IDashboardAgent.CreateDefaultDashboardTile
  commentId: M:SuperOffice.CRM.Services.IDashboardAgent.CreateDefaultDashboardTile
  id: CreateDefaultDashboardTile
  parent: SuperOffice.CRM.Services.IDashboardAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultDashboardTile()
  nameWithType: IDashboardAgent.CreateDefaultDashboardTile()
  fullName: SuperOffice.CRM.Services.IDashboardAgent.CreateDefaultDashboardTile()
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nLoading default values into a new DashboardTile.\nNetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: DashboardTile CreateDefaultDashboardTile()
    return:
      type: SuperOffice.CRM.Services.DashboardTile
      description: New DashboardTile with default values
    content.vb: Function CreateDefaultDashboardTile As DashboardTile
  overload: SuperOffice.CRM.Services.IDashboardAgent.CreateDefaultDashboardTile*
- uid: SuperOffice.CRM.Services.IDashboardAgent.SaveDashboardTile(SuperOffice.CRM.Services.DashboardTile)
  commentId: M:SuperOffice.CRM.Services.IDashboardAgent.SaveDashboardTile(SuperOffice.CRM.Services.DashboardTile)
  id: SaveDashboardTile(SuperOffice.CRM.Services.DashboardTile)
  parent: SuperOffice.CRM.Services.IDashboardAgent
  langs:
  - csharp
  - vb
  name: SaveDashboardTile(DashboardTile)
  nameWithType: IDashboardAgent.SaveDashboardTile(DashboardTile)
  fullName: SuperOffice.CRM.Services.IDashboardAgent.SaveDashboardTile(SuperOffice.CRM.Services.DashboardTile)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nUpdates the existing DashboardTile or creates a new DashboardTile if the id parameter is empty\n"
  syntax:
    content: DashboardTile SaveDashboardTile(DashboardTile dashboardTile)
    parameters:
    - id: dashboardTile
      type: SuperOffice.CRM.Services.DashboardTile
      description: The DashboardTile that is saved.
    return:
      type: SuperOffice.CRM.Services.DashboardTile
      description: New or updated DashboardTile
    content.vb: Function SaveDashboardTile(dashboardTile As DashboardTile) As DashboardTile
  overload: SuperOffice.CRM.Services.IDashboardAgent.SaveDashboardTile*
- uid: SuperOffice.CRM.Services.IDashboardAgent.DeleteDashboardTile(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IDashboardAgent.DeleteDashboardTile(System.Int32)
  id: DeleteDashboardTile(System.Int32)
  parent: SuperOffice.CRM.Services.IDashboardAgent
  langs:
  - csharp
  - vb
  name: DeleteDashboardTile(Int32)
  nameWithType: IDashboardAgent.DeleteDashboardTile(Int32)
  fullName: SuperOffice.CRM.Services.IDashboardAgent.DeleteDashboardTile(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nDeletes the DashboardTile\n"
  syntax:
    content: void DeleteDashboardTile(int dashboardTileId)
    parameters:
    - id: dashboardTileId
      type: System.Int32
      description: The identity of the DashboardTile
    content.vb: Sub DeleteDashboardTile(dashboardTileId As Integer)
  overload: SuperOffice.CRM.Services.IDashboardAgent.DeleteDashboardTile*
- uid: SuperOffice.CRM.Services.IDashboardAgent.GetDashboard(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IDashboardAgent.GetDashboard(System.Int32)
  id: GetDashboard(System.Int32)
  parent: SuperOffice.CRM.Services.IDashboardAgent
  langs:
  - csharp
  - vb
  name: GetDashboard(Int32)
  nameWithType: IDashboardAgent.GetDashboard(Int32)
  fullName: SuperOffice.CRM.Services.IDashboardAgent.GetDashboard(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets a Dashboard object.                        \n"
  syntax:
    content: Dashboard GetDashboard(int dashboardId)
    parameters:
    - id: dashboardId
      type: System.Int32
      description: The identifier of the Dashboard object
    return:
      type: SuperOffice.CRM.Services.Dashboard
      description: Dashboard
    content.vb: Function GetDashboard(dashboardId As Integer) As Dashboard
  overload: SuperOffice.CRM.Services.IDashboardAgent.GetDashboard*
- uid: SuperOffice.CRM.Services.IDashboardAgent.GetDashboards(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IDashboardAgent.GetDashboards(System.Int32)
  id: GetDashboards(System.Int32)
  parent: SuperOffice.CRM.Services.IDashboardAgent
  langs:
  - csharp
  - vb
  name: GetDashboards(Int32)
  nameWithType: IDashboardAgent.GetDashboards(Int32)
  fullName: SuperOffice.CRM.Services.IDashboardAgent.GetDashboards(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets all dashboards for an associate\n"
  syntax:
    content: Dashboard[] GetDashboards(int associateId)
    parameters:
    - id: associateId
      type: System.Int32
      description: Associate Id
    return:
      type: SuperOffice.CRM.Services.Dashboard[]
      description: All the users dashboards
    content.vb: Function GetDashboards(associateId As Integer) As Dashboard()
  overload: SuperOffice.CRM.Services.IDashboardAgent.GetDashboards*
- uid: SuperOffice.CRM.Services.IDashboardAgent.SetTile(System.Int32,System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IDashboardAgent.SetTile(System.Int32,System.Int32,System.Int32)
  id: SetTile(System.Int32,System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.IDashboardAgent
  langs:
  - csharp
  - vb
  name: SetTile(Int32, Int32, Int32)
  nameWithType: IDashboardAgent.SetTile(Int32, Int32, Int32)
  fullName: SuperOffice.CRM.Services.IDashboardAgent.SetTile(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSets tile in the given dashboard position\n"
  syntax:
    content: Dashboard SetTile(int dashboardId, int tileId, int position)
    parameters:
    - id: dashboardId
      type: System.Int32
      description: Dashboard Id
    - id: tileId
      type: System.Int32
      description: Tile Id
    - id: position
      type: System.Int32
      description: Tile position in the dashboard
    return:
      type: SuperOffice.CRM.Services.Dashboard
      description: The new dashboard is returned after the tile change
    content.vb: Function SetTile(dashboardId As Integer, tileId As Integer, position As Integer) As Dashboard
  overload: SuperOffice.CRM.Services.IDashboardAgent.SetTile*
- uid: SuperOffice.CRM.Services.IDashboardAgent.GetDashboardTile(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IDashboardAgent.GetDashboardTile(System.Int32)
  id: GetDashboardTile(System.Int32)
  parent: SuperOffice.CRM.Services.IDashboardAgent
  langs:
  - csharp
  - vb
  name: GetDashboardTile(Int32)
  nameWithType: IDashboardAgent.GetDashboardTile(Int32)
  fullName: SuperOffice.CRM.Services.IDashboardAgent.GetDashboardTile(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets a DashboardTile object.                        \n"
  syntax:
    content: DashboardTile GetDashboardTile(int dashboardTileId)
    parameters:
    - id: dashboardTileId
      type: System.Int32
      description: The identifier of the DashboardTile object
    return:
      type: SuperOffice.CRM.Services.DashboardTile
      description: DashboardTile
    content.vb: Function GetDashboardTile(dashboardTileId As Integer) As DashboardTile
  overload: SuperOffice.CRM.Services.IDashboardAgent.GetDashboardTile*
- uid: SuperOffice.CRM.Services.IDashboardAgent.GetDashboardTiles(System.Int32[])
  commentId: M:SuperOffice.CRM.Services.IDashboardAgent.GetDashboardTiles(System.Int32[])
  id: GetDashboardTiles(System.Int32[])
  parent: SuperOffice.CRM.Services.IDashboardAgent
  langs:
  - csharp
  - vb
  name: GetDashboardTiles(Int32[])
  nameWithType: IDashboardAgent.GetDashboardTiles(Int32[])
  fullName: SuperOffice.CRM.Services.IDashboardAgent.GetDashboardTiles(System.Int32[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets an array of dashboard tiles for the provided ids\n"
  syntax:
    content: DashboardTile[] GetDashboardTiles(int[] dashboardTileIds)
    parameters:
    - id: dashboardTileIds
      type: System.Int32[]
      description: The ids of the tiles to get
    return:
      type: SuperOffice.CRM.Services.DashboardTile[]
      description: Dashboard tiles
    content.vb: Function GetDashboardTiles(dashboardTileIds As Integer()) As DashboardTile()
  overload: SuperOffice.CRM.Services.IDashboardAgent.GetDashboardTiles*
  nameWithType.vb: IDashboardAgent.GetDashboardTiles(Int32())
  fullName.vb: SuperOffice.CRM.Services.IDashboardAgent.GetDashboardTiles(System.Int32())
  name.vb: GetDashboardTiles(Int32())
- uid: SuperOffice.CRM.Services.IDashboardAgent.GetStandardDashboardTileFromChartId(System.String)
  commentId: M:SuperOffice.CRM.Services.IDashboardAgent.GetStandardDashboardTileFromChartId(System.String)
  id: GetStandardDashboardTileFromChartId(System.String)
  parent: SuperOffice.CRM.Services.IDashboardAgent
  langs:
  - csharp
  - vb
  name: GetStandardDashboardTileFromChartId(String)
  nameWithType: IDashboardAgent.GetStandardDashboardTileFromChartId(String)
  fullName: SuperOffice.CRM.Services.IDashboardAgent.GetStandardDashboardTileFromChartId(System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets the standard tile (not personal tile) corresponding to the given chart id\n"
  syntax:
    content: DashboardTile GetStandardDashboardTileFromChartId(string chartId)
    parameters:
    - id: chartId
      type: System.String
      description: The ChartId of the wanted chart/tile
    return:
      type: SuperOffice.CRM.Services.DashboardTile
      description: Standard tile
    content.vb: Function GetStandardDashboardTileFromChartId(chartId As String) As DashboardTile
  overload: SuperOffice.CRM.Services.IDashboardAgent.GetStandardDashboardTileFromChartId*
- uid: SuperOffice.CRM.Services.IDashboardAgent.GetData(System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.IDashboardAgent.GetData(System.Int32,System.String)
  id: GetData(System.Int32,System.String)
  parent: SuperOffice.CRM.Services.IDashboardAgent
  langs:
  - csharp
  - vb
  name: GetData(Int32, String)
  nameWithType: IDashboardAgent.GetData(Int32, String)
  fullName: SuperOffice.CRM.Services.IDashboardAgent.GetData(System.Int32, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet data for this tile\n"
  syntax:
    content: TileData[] GetData(int dashboardTileId, string restrictions)
    parameters:
    - id: dashboardTileId
      type: System.Int32
      description: Tile Id
    - id: restrictions
      type: System.String
      description: Replacement restrictions
    return:
      type: SuperOffice.CRM.Services.TileData[]
      description: The data
    content.vb: Function GetData(dashboardTileId As Integer, restrictions As String) As TileData()
  overload: SuperOffice.CRM.Services.IDashboardAgent.GetData*
- uid: SuperOffice.CRM.Services.IDashboardAgent.CreateNewFromTemplate(System.Int32,System.String,System.String,System.Int32,SuperOffice.CRM.Services.VisibleFor[])
  commentId: M:SuperOffice.CRM.Services.IDashboardAgent.CreateNewFromTemplate(System.Int32,System.String,System.String,System.Int32,SuperOffice.CRM.Services.VisibleFor[])
  id: CreateNewFromTemplate(System.Int32,System.String,System.String,System.Int32,SuperOffice.CRM.Services.VisibleFor[])
  parent: SuperOffice.CRM.Services.IDashboardAgent
  langs:
  - csharp
  - vb
  name: CreateNewFromTemplate(Int32, String, String, Int32, VisibleFor[])
  nameWithType: IDashboardAgent.CreateNewFromTemplate(Int32, String, String, Int32, VisibleFor[])
  fullName: SuperOffice.CRM.Services.IDashboardAgent.CreateNewFromTemplate(System.Int32, System.String, System.String, System.Int32, SuperOffice.CRM.Services.VisibleFor[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCreate new tile from another tile used as template\n"
  syntax:
    content: DashboardTile CreateNewFromTemplate(int dashboardTileId, string caption, string description, int selectionId, VisibleFor[] visibleFor)
    parameters:
    - id: dashboardTileId
      type: System.Int32
      description: Tile template Id
    - id: caption
      type: System.String
      description: Caption of new tile
    - id: description
      type: System.String
      description: Description of new tile
    - id: selectionId
      type: System.Int32
      description: Selection id of new tile
    - id: visibleFor
      type: SuperOffice.CRM.Services.VisibleFor[]
      description: Who the tile should be visible for
    return:
      type: SuperOffice.CRM.Services.DashboardTile
      description: The new tile
    content.vb: Function CreateNewFromTemplate(dashboardTileId As Integer, caption As String, description As String, selectionId As Integer, visibleFor As VisibleFor()) As DashboardTile
  overload: SuperOffice.CRM.Services.IDashboardAgent.CreateNewFromTemplate*
  nameWithType.vb: IDashboardAgent.CreateNewFromTemplate(Int32, String, String, Int32, VisibleFor())
  fullName.vb: SuperOffice.CRM.Services.IDashboardAgent.CreateNewFromTemplate(System.Int32, System.String, System.String, System.Int32, SuperOffice.CRM.Services.VisibleFor())
  name.vb: CreateNewFromTemplate(Int32, String, String, Int32, VisibleFor())
- uid: SuperOffice.CRM.Services.IDashboardAgent.GetDataWithSelection(System.Int32,System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.IDashboardAgent.GetDataWithSelection(System.Int32,System.Int32,System.String)
  id: GetDataWithSelection(System.Int32,System.Int32,System.String)
  parent: SuperOffice.CRM.Services.IDashboardAgent
  langs:
  - csharp
  - vb
  name: GetDataWithSelection(Int32, Int32, String)
  nameWithType: IDashboardAgent.GetDataWithSelection(Int32, Int32, String)
  fullName: SuperOffice.CRM.Services.IDashboardAgent.GetDataWithSelection(System.Int32, System.Int32, System.String)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet data for this tile\n"
  syntax:
    content: TileData[] GetDataWithSelection(int dashboardTileId, int selectionId, string restrictions)
    parameters:
    - id: dashboardTileId
      type: System.Int32
      description: Tile Id
    - id: selectionId
      type: System.Int32
      description: Selection Id
    - id: restrictions
      type: System.String
      description: Replacement restrictions
    return:
      type: SuperOffice.CRM.Services.TileData[]
      description: The data
    content.vb: Function GetDataWithSelection(dashboardTileId As Integer, selectionId As Integer, restrictions As String) As TileData()
  overload: SuperOffice.CRM.Services.IDashboardAgent.GetDataWithSelection*
references:
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
- uid: SuperOffice.CRM.Services.IDashboardAgent.CreateDefaultDashboard*
  commentId: Overload:SuperOffice.CRM.Services.IDashboardAgent.CreateDefaultDashboard
  isExternal: true
  name: CreateDefaultDashboard
  nameWithType: IDashboardAgent.CreateDefaultDashboard
  fullName: SuperOffice.CRM.Services.IDashboardAgent.CreateDefaultDashboard
- uid: SuperOffice.CRM.Services.Dashboard
  commentId: T:SuperOffice.CRM.Services.Dashboard
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: Dashboard
  nameWithType: Dashboard
  fullName: SuperOffice.CRM.Services.Dashboard
- uid: SuperOffice.CRM.Services.IDashboardAgent.SaveDashboard*
  commentId: Overload:SuperOffice.CRM.Services.IDashboardAgent.SaveDashboard
  isExternal: true
  name: SaveDashboard
  nameWithType: IDashboardAgent.SaveDashboard
  fullName: SuperOffice.CRM.Services.IDashboardAgent.SaveDashboard
- uid: SuperOffice.CRM.Services.IDashboardAgent.DeleteDashboard*
  commentId: Overload:SuperOffice.CRM.Services.IDashboardAgent.DeleteDashboard
  isExternal: true
  name: DeleteDashboard
  nameWithType: IDashboardAgent.DeleteDashboard
  fullName: SuperOffice.CRM.Services.IDashboardAgent.DeleteDashboard
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Services.IDashboardAgent.CreateDefaultDashboardTile*
  commentId: Overload:SuperOffice.CRM.Services.IDashboardAgent.CreateDefaultDashboardTile
  isExternal: true
  name: CreateDefaultDashboardTile
  nameWithType: IDashboardAgent.CreateDefaultDashboardTile
  fullName: SuperOffice.CRM.Services.IDashboardAgent.CreateDefaultDashboardTile
- uid: SuperOffice.CRM.Services.DashboardTile
  commentId: T:SuperOffice.CRM.Services.DashboardTile
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: DashboardTile
  nameWithType: DashboardTile
  fullName: SuperOffice.CRM.Services.DashboardTile
- uid: SuperOffice.CRM.Services.IDashboardAgent.SaveDashboardTile*
  commentId: Overload:SuperOffice.CRM.Services.IDashboardAgent.SaveDashboardTile
  isExternal: true
  name: SaveDashboardTile
  nameWithType: IDashboardAgent.SaveDashboardTile
  fullName: SuperOffice.CRM.Services.IDashboardAgent.SaveDashboardTile
- uid: SuperOffice.CRM.Services.IDashboardAgent.DeleteDashboardTile*
  commentId: Overload:SuperOffice.CRM.Services.IDashboardAgent.DeleteDashboardTile
  isExternal: true
  name: DeleteDashboardTile
  nameWithType: IDashboardAgent.DeleteDashboardTile
  fullName: SuperOffice.CRM.Services.IDashboardAgent.DeleteDashboardTile
- uid: SuperOffice.CRM.Services.IDashboardAgent.GetDashboard*
  commentId: Overload:SuperOffice.CRM.Services.IDashboardAgent.GetDashboard
  isExternal: true
  name: GetDashboard
  nameWithType: IDashboardAgent.GetDashboard
  fullName: SuperOffice.CRM.Services.IDashboardAgent.GetDashboard
- uid: SuperOffice.CRM.Services.IDashboardAgent.GetDashboards*
  commentId: Overload:SuperOffice.CRM.Services.IDashboardAgent.GetDashboards
  isExternal: true
  name: GetDashboards
  nameWithType: IDashboardAgent.GetDashboards
  fullName: SuperOffice.CRM.Services.IDashboardAgent.GetDashboards
- uid: SuperOffice.CRM.Services.Dashboard[]
  isExternal: true
  name: Dashboard[]
  nameWithType: Dashboard[]
  fullName: SuperOffice.CRM.Services.Dashboard[]
  nameWithType.vb: Dashboard()
  fullName.vb: SuperOffice.CRM.Services.Dashboard()
  name.vb: Dashboard()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.Dashboard
    name: Dashboard
    nameWithType: Dashboard
    fullName: SuperOffice.CRM.Services.Dashboard
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.Services.Dashboard
    name: Dashboard
    nameWithType: Dashboard
    fullName: SuperOffice.CRM.Services.Dashboard
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.IDashboardAgent.SetTile*
  commentId: Overload:SuperOffice.CRM.Services.IDashboardAgent.SetTile
  isExternal: true
  name: SetTile
  nameWithType: IDashboardAgent.SetTile
  fullName: SuperOffice.CRM.Services.IDashboardAgent.SetTile
- uid: SuperOffice.CRM.Services.IDashboardAgent.GetDashboardTile*
  commentId: Overload:SuperOffice.CRM.Services.IDashboardAgent.GetDashboardTile
  isExternal: true
  name: GetDashboardTile
  nameWithType: IDashboardAgent.GetDashboardTile
  fullName: SuperOffice.CRM.Services.IDashboardAgent.GetDashboardTile
- uid: SuperOffice.CRM.Services.IDashboardAgent.GetDashboardTiles*
  commentId: Overload:SuperOffice.CRM.Services.IDashboardAgent.GetDashboardTiles
  isExternal: true
  name: GetDashboardTiles
  nameWithType: IDashboardAgent.GetDashboardTiles
  fullName: SuperOffice.CRM.Services.IDashboardAgent.GetDashboardTiles
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.DashboardTile[]
  isExternal: true
  name: DashboardTile[]
  nameWithType: DashboardTile[]
  fullName: SuperOffice.CRM.Services.DashboardTile[]
  nameWithType.vb: DashboardTile()
  fullName.vb: SuperOffice.CRM.Services.DashboardTile()
  name.vb: DashboardTile()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.DashboardTile
    name: DashboardTile
    nameWithType: DashboardTile
    fullName: SuperOffice.CRM.Services.DashboardTile
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.Services.DashboardTile
    name: DashboardTile
    nameWithType: DashboardTile
    fullName: SuperOffice.CRM.Services.DashboardTile
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.IDashboardAgent.GetStandardDashboardTileFromChartId*
  commentId: Overload:SuperOffice.CRM.Services.IDashboardAgent.GetStandardDashboardTileFromChartId
  isExternal: true
  name: GetStandardDashboardTileFromChartId
  nameWithType: IDashboardAgent.GetStandardDashboardTileFromChartId
  fullName: SuperOffice.CRM.Services.IDashboardAgent.GetStandardDashboardTileFromChartId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.Services.IDashboardAgent.GetData*
  commentId: Overload:SuperOffice.CRM.Services.IDashboardAgent.GetData
  isExternal: true
  name: GetData
  nameWithType: IDashboardAgent.GetData
  fullName: SuperOffice.CRM.Services.IDashboardAgent.GetData
- uid: SuperOffice.CRM.Services.TileData[]
  isExternal: true
  name: TileData[]
  nameWithType: TileData[]
  fullName: SuperOffice.CRM.Services.TileData[]
  nameWithType.vb: TileData()
  fullName.vb: SuperOffice.CRM.Services.TileData()
  name.vb: TileData()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.TileData
    name: TileData
    nameWithType: TileData
    fullName: SuperOffice.CRM.Services.TileData
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.Services.TileData
    name: TileData
    nameWithType: TileData
    fullName: SuperOffice.CRM.Services.TileData
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.IDashboardAgent.CreateNewFromTemplate*
  commentId: Overload:SuperOffice.CRM.Services.IDashboardAgent.CreateNewFromTemplate
  isExternal: true
  name: CreateNewFromTemplate
  nameWithType: IDashboardAgent.CreateNewFromTemplate
  fullName: SuperOffice.CRM.Services.IDashboardAgent.CreateNewFromTemplate
- uid: SuperOffice.CRM.Services.VisibleFor[]
  isExternal: true
  name: VisibleFor[]
  nameWithType: VisibleFor[]
  fullName: SuperOffice.CRM.Services.VisibleFor[]
  nameWithType.vb: VisibleFor()
  fullName.vb: SuperOffice.CRM.Services.VisibleFor()
  name.vb: VisibleFor()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.VisibleFor
    name: VisibleFor
    nameWithType: VisibleFor
    fullName: SuperOffice.CRM.Services.VisibleFor
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.Services.VisibleFor
    name: VisibleFor
    nameWithType: VisibleFor
    fullName: SuperOffice.CRM.Services.VisibleFor
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.IDashboardAgent.GetDataWithSelection*
  commentId: Overload:SuperOffice.CRM.Services.IDashboardAgent.GetDataWithSelection
  isExternal: true
  name: GetDataWithSelection
  nameWithType: IDashboardAgent.GetDataWithSelection
  fullName: SuperOffice.CRM.Services.IDashboardAgent.GetDataWithSelection
