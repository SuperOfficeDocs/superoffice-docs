### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Services.IBatchAgent
  commentId: T:SuperOffice.CRM.Services.IBatchAgent
  id: IBatchAgent
  parent: SuperOffice.CRM.Services
  children:
  - SuperOffice.CRM.Services.IBatchAgent.DeleteBatchTask(System.Int32)
  - SuperOffice.CRM.Services.IBatchAgent.DeleteBatchTasks(System.Int32[])
  - SuperOffice.CRM.Services.IBatchAgent.GetBatchTaskInfo(System.Int32)
  - SuperOffice.CRM.Services.IBatchAgent.GetBatchTaskInfosByAssociates(System.Int32[])
  - SuperOffice.CRM.Services.IBatchAgent.GetBatchTaskInfosByAssociatesAndState(System.Int32[],SuperOffice.Data.BatchTaskState)
  - SuperOffice.CRM.Services.IBatchAgent.GetBatchTaskInfosByNameAndAssociates(System.String,System.Int32[])
  - SuperOffice.CRM.Services.IBatchAgent.GetBatchTaskInfosByNameAndState(System.String,SuperOffice.Data.BatchTaskState)
  - SuperOffice.CRM.Services.IBatchAgent.GetBatchTaskInfosByState(SuperOffice.Data.BatchTaskState)
  - SuperOffice.CRM.Services.IBatchAgent.StartBatchJob(SuperOffice.CRM.Services.BatchTaskInfo)
  - SuperOffice.CRM.Services.IBatchAgent.StopBatchJob(System.Int32)
  - SuperOffice.CRM.Services.IBatchAgent.UpdateBatchTask(SuperOffice.CRM.Services.BatchTaskInfo)
  langs:
  - csharp
  - vb
  name: IBatchAgent
  nameWithType: IBatchAgent
  fullName: SuperOffice.CRM.Services.IBatchAgent
  type: Interface
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nInterface for the Batch Agent\nStart, stop and monitor predefined batch tasks\n"
  example:
  - "\n<pre><code>  using SuperOffice;\n  using SuperOffice.CRM.Services;\n\n  using (SoSession mySession = SoSession.Authenticate(&quot;user&quot;, &quot;pass&quot;))\n  {\n     using (BatchAgent agent = new BatchAgent())\n     {\n        // call methods on agent here...\n     }\n  }</code></pre>\n"
  syntax:
    content: >-
      [Agent("Batch Agent", "Interface for the Batch Agent. Start, stop and monitor predefined batch tasks")]

      public interface IBatchAgent : IAgent
    content.vb: >-
      <Agent("Batch Agent", "Interface for the Batch Agent. Start, stop and monitor predefined batch tasks")>

      Public Interface IBatchAgent

          Inherits IAgent
  attributes:
  - type: SuperOffice.CRM.Services.Reflection.AgentAttribute
    ctor: SuperOffice.CRM.Services.Reflection.AgentAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Batch Agent
    - type: System.String
      value: Interface for the Batch Agent. Start, stop and monitor predefined batch tasks
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.CRM.Services.IBatchAgent.GetBatchTaskInfo(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IBatchAgent.GetBatchTaskInfo(System.Int32)
  id: GetBatchTaskInfo(System.Int32)
  parent: SuperOffice.CRM.Services.IBatchAgent
  langs:
  - csharp
  - vb
  name: GetBatchTaskInfo(Int32)
  nameWithType: IBatchAgent.GetBatchTaskInfo(Int32)
  fullName: SuperOffice.CRM.Services.IBatchAgent.GetBatchTaskInfo(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet a single BatchTaskInfo based on Id.\n"
  syntax:
    content: BatchTaskInfo GetBatchTaskInfo(int id)
    parameters:
    - id: id
      type: System.Int32
      description: Id of the BatchTaskInfo to get.
    return:
      type: SuperOffice.CRM.Services.BatchTaskInfo
      description: Returns a BatchTaskInfo.
    content.vb: Function GetBatchTaskInfo(id As Integer) As BatchTaskInfo
  overload: SuperOffice.CRM.Services.IBatchAgent.GetBatchTaskInfo*
- uid: SuperOffice.CRM.Services.IBatchAgent.GetBatchTaskInfosByAssociates(System.Int32[])
  commentId: M:SuperOffice.CRM.Services.IBatchAgent.GetBatchTaskInfosByAssociates(System.Int32[])
  id: GetBatchTaskInfosByAssociates(System.Int32[])
  parent: SuperOffice.CRM.Services.IBatchAgent
  langs:
  - csharp
  - vb
  name: GetBatchTaskInfosByAssociates(Int32[])
  nameWithType: IBatchAgent.GetBatchTaskInfosByAssociates(Int32[])
  fullName: SuperOffice.CRM.Services.IBatchAgent.GetBatchTaskInfosByAssociates(System.Int32[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet an array of BatchTaskInfo for the provided associate id&apos;s.\n"
  syntax:
    content: BatchTaskInfo[] GetBatchTaskInfosByAssociates(int[] associateIds)
    parameters:
    - id: associateIds
      type: System.Int32[]
      description: Array of associate id&apos;s.
    return:
      type: SuperOffice.CRM.Services.BatchTaskInfo[]
      description: Returns an array of BatchTaskInfo.
    content.vb: Function GetBatchTaskInfosByAssociates(associateIds As Integer()) As BatchTaskInfo()
  overload: SuperOffice.CRM.Services.IBatchAgent.GetBatchTaskInfosByAssociates*
  nameWithType.vb: IBatchAgent.GetBatchTaskInfosByAssociates(Int32())
  fullName.vb: SuperOffice.CRM.Services.IBatchAgent.GetBatchTaskInfosByAssociates(System.Int32())
  name.vb: GetBatchTaskInfosByAssociates(Int32())
- uid: SuperOffice.CRM.Services.IBatchAgent.StartBatchJob(SuperOffice.CRM.Services.BatchTaskInfo)
  commentId: M:SuperOffice.CRM.Services.IBatchAgent.StartBatchJob(SuperOffice.CRM.Services.BatchTaskInfo)
  id: StartBatchJob(SuperOffice.CRM.Services.BatchTaskInfo)
  parent: SuperOffice.CRM.Services.IBatchAgent
  langs:
  - csharp
  - vb
  name: StartBatchJob(BatchTaskInfo)
  nameWithType: IBatchAgent.StartBatchJob(BatchTaskInfo)
  fullName: SuperOffice.CRM.Services.IBatchAgent.StartBatchJob(SuperOffice.CRM.Services.BatchTaskInfo)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nStart a batch job based on BatchTaskInfo.\n"
  syntax:
    content: int StartBatchJob(BatchTaskInfo batchTaskInfo)
    parameters:
    - id: batchTaskInfo
      type: SuperOffice.CRM.Services.BatchTaskInfo
      description: Use BatchTaskInfo to describe the new batch job.
    return:
      type: System.Int32
      description: Returns the id of the created batch job.
    content.vb: Function StartBatchJob(batchTaskInfo As BatchTaskInfo) As Integer
  overload: SuperOffice.CRM.Services.IBatchAgent.StartBatchJob*
- uid: SuperOffice.CRM.Services.IBatchAgent.StopBatchJob(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IBatchAgent.StopBatchJob(System.Int32)
  id: StopBatchJob(System.Int32)
  parent: SuperOffice.CRM.Services.IBatchAgent
  langs:
  - csharp
  - vb
  name: StopBatchJob(Int32)
  nameWithType: IBatchAgent.StopBatchJob(Int32)
  fullName: SuperOffice.CRM.Services.IBatchAgent.StopBatchJob(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nStop a batch job based on Id.\n"
  syntax:
    content: bool StopBatchJob(int id)
    parameters:
    - id: id
      type: System.Int32
      description: Id of the batch job to stop.
    return:
      type: System.Boolean
      description: Returns true if the job was stopped successfully.
    content.vb: Function StopBatchJob(id As Integer) As Boolean
  overload: SuperOffice.CRM.Services.IBatchAgent.StopBatchJob*
- uid: SuperOffice.CRM.Services.IBatchAgent.GetBatchTaskInfosByState(SuperOffice.Data.BatchTaskState)
  commentId: M:SuperOffice.CRM.Services.IBatchAgent.GetBatchTaskInfosByState(SuperOffice.Data.BatchTaskState)
  id: GetBatchTaskInfosByState(SuperOffice.Data.BatchTaskState)
  parent: SuperOffice.CRM.Services.IBatchAgent
  langs:
  - csharp
  - vb
  name: GetBatchTaskInfosByState(BatchTaskState)
  nameWithType: IBatchAgent.GetBatchTaskInfosByState(BatchTaskState)
  fullName: SuperOffice.CRM.Services.IBatchAgent.GetBatchTaskInfosByState(SuperOffice.Data.BatchTaskState)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets an array of BatchTaskInfo with state defined by a BatchTaskState.\n"
  syntax:
    content: BatchTaskInfo[] GetBatchTaskInfosByState(BatchTaskState state)
    parameters:
    - id: state
      type: SuperOffice.Data.BatchTaskState
      description: The BatchTaskState to get batch tasks for.
    return:
      type: SuperOffice.CRM.Services.BatchTaskInfo[]
      description: Returns an array of BatchTaskInfo.
    content.vb: Function GetBatchTaskInfosByState(state As BatchTaskState) As BatchTaskInfo()
  overload: SuperOffice.CRM.Services.IBatchAgent.GetBatchTaskInfosByState*
- uid: SuperOffice.CRM.Services.IBatchAgent.UpdateBatchTask(SuperOffice.CRM.Services.BatchTaskInfo)
  commentId: M:SuperOffice.CRM.Services.IBatchAgent.UpdateBatchTask(SuperOffice.CRM.Services.BatchTaskInfo)
  id: UpdateBatchTask(SuperOffice.CRM.Services.BatchTaskInfo)
  parent: SuperOffice.CRM.Services.IBatchAgent
  langs:
  - csharp
  - vb
  name: UpdateBatchTask(BatchTaskInfo)
  nameWithType: IBatchAgent.UpdateBatchTask(BatchTaskInfo)
  fullName: SuperOffice.CRM.Services.IBatchAgent.UpdateBatchTask(SuperOffice.CRM.Services.BatchTaskInfo)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nUpdate information about a BatchTask. Only the following properties can be updated: State, Description, Response and Request.\n"
  syntax:
    content: BatchTaskInfo UpdateBatchTask(BatchTaskInfo batchTaskInfo)
    parameters:
    - id: batchTaskInfo
      type: SuperOffice.CRM.Services.BatchTaskInfo
      description: The updated information to save.
    return:
      type: SuperOffice.CRM.Services.BatchTaskInfo
      description: The updated BatchTaskInfo
    content.vb: Function UpdateBatchTask(batchTaskInfo As BatchTaskInfo) As BatchTaskInfo
  overload: SuperOffice.CRM.Services.IBatchAgent.UpdateBatchTask*
- uid: SuperOffice.CRM.Services.IBatchAgent.GetBatchTaskInfosByNameAndState(System.String,SuperOffice.Data.BatchTaskState)
  commentId: M:SuperOffice.CRM.Services.IBatchAgent.GetBatchTaskInfosByNameAndState(System.String,SuperOffice.Data.BatchTaskState)
  id: GetBatchTaskInfosByNameAndState(System.String,SuperOffice.Data.BatchTaskState)
  parent: SuperOffice.CRM.Services.IBatchAgent
  langs:
  - csharp
  - vb
  name: GetBatchTaskInfosByNameAndState(String, BatchTaskState)
  nameWithType: IBatchAgent.GetBatchTaskInfosByNameAndState(String, BatchTaskState)
  fullName: SuperOffice.CRM.Services.IBatchAgent.GetBatchTaskInfosByNameAndState(System.String, SuperOffice.Data.BatchTaskState)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets an array of BatchTaskInfo with state defined by a BatchTaskState and the batchtask definition name.\n"
  syntax:
    content: BatchTaskInfo[] GetBatchTaskInfosByNameAndState(string name, BatchTaskState state)
    parameters:
    - id: name
      type: System.String
      description: Batchtask definition name.
    - id: state
      type: SuperOffice.Data.BatchTaskState
      description: The BatchTaskState to get batch tasks for.
    return:
      type: SuperOffice.CRM.Services.BatchTaskInfo[]
      description: Returns an array of BatchTaskInfo.
    content.vb: Function GetBatchTaskInfosByNameAndState(name As String, state As BatchTaskState) As BatchTaskInfo()
  overload: SuperOffice.CRM.Services.IBatchAgent.GetBatchTaskInfosByNameAndState*
- uid: SuperOffice.CRM.Services.IBatchAgent.GetBatchTaskInfosByNameAndAssociates(System.String,System.Int32[])
  commentId: M:SuperOffice.CRM.Services.IBatchAgent.GetBatchTaskInfosByNameAndAssociates(System.String,System.Int32[])
  id: GetBatchTaskInfosByNameAndAssociates(System.String,System.Int32[])
  parent: SuperOffice.CRM.Services.IBatchAgent
  langs:
  - csharp
  - vb
  name: GetBatchTaskInfosByNameAndAssociates(String, Int32[])
  nameWithType: IBatchAgent.GetBatchTaskInfosByNameAndAssociates(String, Int32[])
  fullName: SuperOffice.CRM.Services.IBatchAgent.GetBatchTaskInfosByNameAndAssociates(System.String, System.Int32[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet an array of BatchTaskInfo for the provided associate id&apos;s and batch task definition name.\n"
  syntax:
    content: BatchTaskInfo[] GetBatchTaskInfosByNameAndAssociates(string name, int[] associateIds)
    parameters:
    - id: name
      type: System.String
      description: Batchtask definition name.
    - id: associateIds
      type: System.Int32[]
      description: Array of associate id&apos;s.
    return:
      type: SuperOffice.CRM.Services.BatchTaskInfo[]
      description: Returns an array of BatchTaskInfo.
    content.vb: Function GetBatchTaskInfosByNameAndAssociates(name As String, associateIds As Integer()) As BatchTaskInfo()
  overload: SuperOffice.CRM.Services.IBatchAgent.GetBatchTaskInfosByNameAndAssociates*
  nameWithType.vb: IBatchAgent.GetBatchTaskInfosByNameAndAssociates(String, Int32())
  fullName.vb: SuperOffice.CRM.Services.IBatchAgent.GetBatchTaskInfosByNameAndAssociates(System.String, System.Int32())
  name.vb: GetBatchTaskInfosByNameAndAssociates(String, Int32())
- uid: SuperOffice.CRM.Services.IBatchAgent.GetBatchTaskInfosByAssociatesAndState(System.Int32[],SuperOffice.Data.BatchTaskState)
  commentId: M:SuperOffice.CRM.Services.IBatchAgent.GetBatchTaskInfosByAssociatesAndState(System.Int32[],SuperOffice.Data.BatchTaskState)
  id: GetBatchTaskInfosByAssociatesAndState(System.Int32[],SuperOffice.Data.BatchTaskState)
  parent: SuperOffice.CRM.Services.IBatchAgent
  langs:
  - csharp
  - vb
  name: GetBatchTaskInfosByAssociatesAndState(Int32[], BatchTaskState)
  nameWithType: IBatchAgent.GetBatchTaskInfosByAssociatesAndState(Int32[], BatchTaskState)
  fullName: SuperOffice.CRM.Services.IBatchAgent.GetBatchTaskInfosByAssociatesAndState(System.Int32[], SuperOffice.Data.BatchTaskState)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet an array of BatchTaskInfo for the provided associate id&apos;s and batch task state.\n"
  syntax:
    content: BatchTaskInfo[] GetBatchTaskInfosByAssociatesAndState(int[] associateIds, BatchTaskState state)
    parameters:
    - id: associateIds
      type: System.Int32[]
      description: Array of associate id&apos;s.
    - id: state
      type: SuperOffice.Data.BatchTaskState
      description: The BatchTaskState to get batch tasks for.
    return:
      type: SuperOffice.CRM.Services.BatchTaskInfo[]
      description: Returns an array of BatchTaskInfo.
    content.vb: Function GetBatchTaskInfosByAssociatesAndState(associateIds As Integer(), state As BatchTaskState) As BatchTaskInfo()
  overload: SuperOffice.CRM.Services.IBatchAgent.GetBatchTaskInfosByAssociatesAndState*
  nameWithType.vb: IBatchAgent.GetBatchTaskInfosByAssociatesAndState(Int32(), BatchTaskState)
  fullName.vb: SuperOffice.CRM.Services.IBatchAgent.GetBatchTaskInfosByAssociatesAndState(System.Int32(), SuperOffice.Data.BatchTaskState)
  name.vb: GetBatchTaskInfosByAssociatesAndState(Int32(), BatchTaskState)
- uid: SuperOffice.CRM.Services.IBatchAgent.DeleteBatchTasks(System.Int32[])
  commentId: M:SuperOffice.CRM.Services.IBatchAgent.DeleteBatchTasks(System.Int32[])
  id: DeleteBatchTasks(System.Int32[])
  parent: SuperOffice.CRM.Services.IBatchAgent
  langs:
  - csharp
  - vb
  name: DeleteBatchTasks(Int32[])
  nameWithType: IBatchAgent.DeleteBatchTasks(Int32[])
  fullName: SuperOffice.CRM.Services.IBatchAgent.DeleteBatchTasks(System.Int32[])
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nDelete batch tasks from the database.\n"
  syntax:
    content: void DeleteBatchTasks(int[] batchTaskIds)
    parameters:
    - id: batchTaskIds
      type: System.Int32[]
      description: Array of batchTask ids to delete.
    content.vb: Sub DeleteBatchTasks(batchTaskIds As Integer())
  overload: SuperOffice.CRM.Services.IBatchAgent.DeleteBatchTasks*
  nameWithType.vb: IBatchAgent.DeleteBatchTasks(Int32())
  fullName.vb: SuperOffice.CRM.Services.IBatchAgent.DeleteBatchTasks(System.Int32())
  name.vb: DeleteBatchTasks(Int32())
- uid: SuperOffice.CRM.Services.IBatchAgent.DeleteBatchTask(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IBatchAgent.DeleteBatchTask(System.Int32)
  id: DeleteBatchTask(System.Int32)
  parent: SuperOffice.CRM.Services.IBatchAgent
  langs:
  - csharp
  - vb
  name: DeleteBatchTask(Int32)
  nameWithType: IBatchAgent.DeleteBatchTask(Int32)
  fullName: SuperOffice.CRM.Services.IBatchAgent.DeleteBatchTask(System.Int32)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nDelete a batch task from the database.\n"
  syntax:
    content: void DeleteBatchTask(int batchTaskId)
    parameters:
    - id: batchTaskId
      type: System.Int32
      description: The batchTask ids to delete.
    content.vb: Sub DeleteBatchTask(batchTaskId As Integer)
  overload: SuperOffice.CRM.Services.IBatchAgent.DeleteBatchTask*
references:
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
- uid: SuperOffice.CRM.Services.IBatchAgent.GetBatchTaskInfo*
  commentId: Overload:SuperOffice.CRM.Services.IBatchAgent.GetBatchTaskInfo
  isExternal: true
  name: GetBatchTaskInfo
  nameWithType: IBatchAgent.GetBatchTaskInfo
  fullName: SuperOffice.CRM.Services.IBatchAgent.GetBatchTaskInfo
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.CRM.Services.BatchTaskInfo
  commentId: T:SuperOffice.CRM.Services.BatchTaskInfo
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: BatchTaskInfo
  nameWithType: BatchTaskInfo
  fullName: SuperOffice.CRM.Services.BatchTaskInfo
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Services.IBatchAgent.GetBatchTaskInfosByAssociates*
  commentId: Overload:SuperOffice.CRM.Services.IBatchAgent.GetBatchTaskInfosByAssociates
  isExternal: true
  name: GetBatchTaskInfosByAssociates
  nameWithType: IBatchAgent.GetBatchTaskInfosByAssociates
  fullName: SuperOffice.CRM.Services.IBatchAgent.GetBatchTaskInfosByAssociates
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.BatchTaskInfo[]
  isExternal: true
  name: BatchTaskInfo[]
  nameWithType: BatchTaskInfo[]
  fullName: SuperOffice.CRM.Services.BatchTaskInfo[]
  nameWithType.vb: BatchTaskInfo()
  fullName.vb: SuperOffice.CRM.Services.BatchTaskInfo()
  name.vb: BatchTaskInfo()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.BatchTaskInfo
    name: BatchTaskInfo
    nameWithType: BatchTaskInfo
    fullName: SuperOffice.CRM.Services.BatchTaskInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.Services.BatchTaskInfo
    name: BatchTaskInfo
    nameWithType: BatchTaskInfo
    fullName: SuperOffice.CRM.Services.BatchTaskInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.IBatchAgent.StartBatchJob*
  commentId: Overload:SuperOffice.CRM.Services.IBatchAgent.StartBatchJob
  isExternal: true
  name: StartBatchJob
  nameWithType: IBatchAgent.StartBatchJob
  fullName: SuperOffice.CRM.Services.IBatchAgent.StartBatchJob
- uid: SuperOffice.CRM.Services.IBatchAgent.StopBatchJob*
  commentId: Overload:SuperOffice.CRM.Services.IBatchAgent.StopBatchJob
  isExternal: true
  name: StopBatchJob
  nameWithType: IBatchAgent.StopBatchJob
  fullName: SuperOffice.CRM.Services.IBatchAgent.StopBatchJob
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.CRM.Services.IBatchAgent.GetBatchTaskInfosByState*
  commentId: Overload:SuperOffice.CRM.Services.IBatchAgent.GetBatchTaskInfosByState
  isExternal: true
  name: GetBatchTaskInfosByState
  nameWithType: IBatchAgent.GetBatchTaskInfosByState
  fullName: SuperOffice.CRM.Services.IBatchAgent.GetBatchTaskInfosByState
- uid: SuperOffice.Data.BatchTaskState
  isExternal: true
  name: BatchTaskState
  nameWithType: BatchTaskState
  fullName: SuperOffice.Data.BatchTaskState
- uid: SuperOffice.CRM.Services.IBatchAgent.UpdateBatchTask*
  commentId: Overload:SuperOffice.CRM.Services.IBatchAgent.UpdateBatchTask
  isExternal: true
  name: UpdateBatchTask
  nameWithType: IBatchAgent.UpdateBatchTask
  fullName: SuperOffice.CRM.Services.IBatchAgent.UpdateBatchTask
- uid: SuperOffice.CRM.Services.IBatchAgent.GetBatchTaskInfosByNameAndState*
  commentId: Overload:SuperOffice.CRM.Services.IBatchAgent.GetBatchTaskInfosByNameAndState
  isExternal: true
  name: GetBatchTaskInfosByNameAndState
  nameWithType: IBatchAgent.GetBatchTaskInfosByNameAndState
  fullName: SuperOffice.CRM.Services.IBatchAgent.GetBatchTaskInfosByNameAndState
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.Services.IBatchAgent.GetBatchTaskInfosByNameAndAssociates*
  commentId: Overload:SuperOffice.CRM.Services.IBatchAgent.GetBatchTaskInfosByNameAndAssociates
  isExternal: true
  name: GetBatchTaskInfosByNameAndAssociates
  nameWithType: IBatchAgent.GetBatchTaskInfosByNameAndAssociates
  fullName: SuperOffice.CRM.Services.IBatchAgent.GetBatchTaskInfosByNameAndAssociates
- uid: SuperOffice.CRM.Services.IBatchAgent.GetBatchTaskInfosByAssociatesAndState*
  commentId: Overload:SuperOffice.CRM.Services.IBatchAgent.GetBatchTaskInfosByAssociatesAndState
  isExternal: true
  name: GetBatchTaskInfosByAssociatesAndState
  nameWithType: IBatchAgent.GetBatchTaskInfosByAssociatesAndState
  fullName: SuperOffice.CRM.Services.IBatchAgent.GetBatchTaskInfosByAssociatesAndState
- uid: SuperOffice.CRM.Services.IBatchAgent.DeleteBatchTasks*
  commentId: Overload:SuperOffice.CRM.Services.IBatchAgent.DeleteBatchTasks
  isExternal: true
  name: DeleteBatchTasks
  nameWithType: IBatchAgent.DeleteBatchTasks
  fullName: SuperOffice.CRM.Services.IBatchAgent.DeleteBatchTasks
- uid: SuperOffice.CRM.Services.IBatchAgent.DeleteBatchTask*
  commentId: Overload:SuperOffice.CRM.Services.IBatchAgent.DeleteBatchTask
  isExternal: true
  name: DeleteBatchTask
  nameWithType: IBatchAgent.DeleteBatchTask
  fullName: SuperOffice.CRM.Services.IBatchAgent.DeleteBatchTask
