### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Services.IDatabaseTableAgent
  commentId: T:SuperOffice.CRM.Services.IDatabaseTableAgent
  id: IDatabaseTableAgent
  parent: SuperOffice.CRM.Services
  children:
  - SuperOffice.CRM.Services.IDatabaseTableAgent.DeleteAsync(System.String,System.Int32[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IDatabaseTableAgent.DeleteRowAsync(System.String,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IDatabaseTableAgent.InsertAsync(System.String,System.String[],System.String[][],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IDatabaseTableAgent.InsertRowAsync(System.String,SuperOffice.CRM.Services.StringDictionary,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IDatabaseTableAgent.ReadRowAsync(System.String,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IDatabaseTableAgent.TruncateAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IDatabaseTableAgent.UpdateRowAsync(System.String,System.Int32,SuperOffice.CRM.Services.StringDictionary,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IDatabaseTableAgent.UpsertAsync(System.String,System.String[],System.String[],System.String[][],SuperOffice.Data.UpsertNomatchAction,System.Boolean,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IDatabaseTableAgent
  nameWithType: IDatabaseTableAgent
  fullName: SuperOffice.CRM.Services.IDatabaseTableAgent
  type: Interface
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Interface for the DatabaseTable Agent

    Agent used for CRUD operations on database tables. Read, add, update, delete rows in tables.
  example:
  - >-
    <pre><code class="lang-csharp">using SuperOffice;

    using SuperOffice.CRM.Services;


    using (SoSession mySession = SoSession.Authenticate("user", "pass"))

    {
       using (DatabaseTableAgent agent = new DatabaseTableAgent())
       {
          // call methods on agent here...
       }
    }</code></pre>
  syntax:
    content: >-
      [Agent("DatabaseTable Agent", "Interface for the DatabaseTable Agent. Agent used for CRUD operations on database tables. Read, add, update, delete rows in tables.")]

      public interface IDatabaseTableAgent : IAgent
    content.vb: >-
      <Agent("DatabaseTable Agent", "Interface for the DatabaseTable Agent. Agent used for CRUD operations on database tables. Read, add, update, delete rows in tables.")>

      Public Interface IDatabaseTableAgent Inherits IAgent
  attributes:
  - type: SuperOffice.CRM.Services.Reflection.AgentAttribute
    ctor: SuperOffice.CRM.Services.Reflection.AgentAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: DatabaseTable Agent
    - type: System.String
      value: Interface for the DatabaseTable Agent. Agent used for CRUD operations on database tables. Read, add, update, delete rows in tables.
- uid: SuperOffice.CRM.Services.IDatabaseTableAgent.ReadRowAsync(System.String,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IDatabaseTableAgent.ReadRowAsync(System.String,System.Int32,System.Threading.CancellationToken)
  id: ReadRowAsync(System.String,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IDatabaseTableAgent
  langs:
  - csharp
  - vb
  name: ReadRowAsync(string, int, CancellationToken)
  nameWithType: IDatabaseTableAgent.ReadRowAsync(string, int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IDatabaseTableAgent.ReadRowAsync(string, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Read a row from a table
  example: []
  syntax:
    content: Task<TableRecord> ReadRowAsync(string tableName, int id, CancellationToken cancellationToken = default)
    parameters:
    - id: tableName
      type: System.String
      description: The name of the table to fetch; in the current release this must be an 'extratable'. Use the database name, on the form y_aTable
    - id: id
      type: System.Int32
      description: The id of the row to fetch
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.TableRecord}
      description: The row from the table
    content.vb: Function ReadRowAsync(tableName As String, id As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of TableRecord)
  overload: SuperOffice.CRM.Services.IDatabaseTableAgent.ReadRowAsync*
  nameWithType.vb: IDatabaseTableAgent.ReadRowAsync(String, Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IDatabaseTableAgent.ReadRowAsync(String, Integer, System.Threading.CancellationToken)
  name.vb: ReadRowAsync(String, Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IDatabaseTableAgent.InsertRowAsync(System.String,SuperOffice.CRM.Services.StringDictionary,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IDatabaseTableAgent.InsertRowAsync(System.String,SuperOffice.CRM.Services.StringDictionary,System.Threading.CancellationToken)
  id: InsertRowAsync(System.String,SuperOffice.CRM.Services.StringDictionary,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IDatabaseTableAgent
  langs:
  - csharp
  - vb
  name: InsertRowAsync(string, StringDictionary, CancellationToken)
  nameWithType: IDatabaseTableAgent.InsertRowAsync(string, StringDictionary, CancellationToken)
  fullName: SuperOffice.CRM.Services.IDatabaseTableAgent.InsertRowAsync(string, SuperOffice.CRM.Services.StringDictionary, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Insert a row into a table
  example: []
  syntax:
    content: Task<int> InsertRowAsync(string tableName, StringDictionary values, CancellationToken cancellationToken = default)
    parameters:
    - id: tableName
      type: System.String
      description: The name of the table to insert into; in the current release this must be an 'extratable'. Use the database name, on the form y_aTable
    - id: values
      type: SuperOffice.CRM.Services.StringDictionary
      description: A StringDictionary with the values to insert. You do not need to specify all the values in the table. The omitted ones will get default values
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: The id of the newly inserted row
    content.vb: Function InsertRowAsync(tableName As String, values As StringDictionary, cancellationToken As CancellationToken = Nothing) As Task(Of Integer)
  overload: SuperOffice.CRM.Services.IDatabaseTableAgent.InsertRowAsync*
  nameWithType.vb: IDatabaseTableAgent.InsertRowAsync(String, StringDictionary, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IDatabaseTableAgent.InsertRowAsync(String, SuperOffice.CRM.Services.StringDictionary, System.Threading.CancellationToken)
  name.vb: InsertRowAsync(String, StringDictionary, CancellationToken)
- uid: SuperOffice.CRM.Services.IDatabaseTableAgent.UpdateRowAsync(System.String,System.Int32,SuperOffice.CRM.Services.StringDictionary,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IDatabaseTableAgent.UpdateRowAsync(System.String,System.Int32,SuperOffice.CRM.Services.StringDictionary,System.Threading.CancellationToken)
  id: UpdateRowAsync(System.String,System.Int32,SuperOffice.CRM.Services.StringDictionary,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IDatabaseTableAgent
  langs:
  - csharp
  - vb
  name: UpdateRowAsync(string, int, StringDictionary, CancellationToken)
  nameWithType: IDatabaseTableAgent.UpdateRowAsync(string, int, StringDictionary, CancellationToken)
  fullName: SuperOffice.CRM.Services.IDatabaseTableAgent.UpdateRowAsync(string, int, SuperOffice.CRM.Services.StringDictionary, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Update a row in a table
  example: []
  syntax:
    content: Task UpdateRowAsync(string tableName, int id, StringDictionary values, CancellationToken cancellationToken = default)
    parameters:
    - id: tableName
      type: System.String
      description: The name of the table to update; in the current release this must be an 'extratable'. Use the database name, on the form y_aTable
    - id: id
      type: System.Int32
      description: The id of the row to update
    - id: values
      type: SuperOffice.CRM.Services.StringDictionary
      description: A StringDictionary with the values to update. You do not need to specify all the values in the table. The omitted ones will remain unchanged
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function UpdateRowAsync(tableName As String, id As Integer, values As StringDictionary, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IDatabaseTableAgent.UpdateRowAsync*
  nameWithType.vb: IDatabaseTableAgent.UpdateRowAsync(String, Integer, StringDictionary, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IDatabaseTableAgent.UpdateRowAsync(String, Integer, SuperOffice.CRM.Services.StringDictionary, System.Threading.CancellationToken)
  name.vb: UpdateRowAsync(String, Integer, StringDictionary, CancellationToken)
- uid: SuperOffice.CRM.Services.IDatabaseTableAgent.DeleteRowAsync(System.String,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IDatabaseTableAgent.DeleteRowAsync(System.String,System.Int32,System.Threading.CancellationToken)
  id: DeleteRowAsync(System.String,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IDatabaseTableAgent
  langs:
  - csharp
  - vb
  name: DeleteRowAsync(string, int, CancellationToken)
  nameWithType: IDatabaseTableAgent.DeleteRowAsync(string, int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IDatabaseTableAgent.DeleteRowAsync(string, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Delete a row from a table
  example: []
  syntax:
    content: Task DeleteRowAsync(string tableName, int id, CancellationToken cancellationToken = default)
    parameters:
    - id: tableName
      type: System.String
      description: The name of the table to delete from; in the current release this must be an 'extratable'. Use the database name, on the form y_aTable
    - id: id
      type: System.Int32
      description: The id of the row to delete
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function DeleteRowAsync(tableName As String, id As Integer, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IDatabaseTableAgent.DeleteRowAsync*
  nameWithType.vb: IDatabaseTableAgent.DeleteRowAsync(String, Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IDatabaseTableAgent.DeleteRowAsync(String, Integer, System.Threading.CancellationToken)
  name.vb: DeleteRowAsync(String, Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IDatabaseTableAgent.InsertAsync(System.String,System.String[],System.String[][],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IDatabaseTableAgent.InsertAsync(System.String,System.String[],System.String[][],System.Threading.CancellationToken)
  id: InsertAsync(System.String,System.String[],System.String[][],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IDatabaseTableAgent
  langs:
  - csharp
  - vb
  name: InsertAsync(string, string[], string[][], CancellationToken)
  nameWithType: IDatabaseTableAgent.InsertAsync(string, string[], string[][], CancellationToken)
  fullName: SuperOffice.CRM.Services.IDatabaseTableAgent.InsertAsync(string, string[], string[][], System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Mass-insert rows, with or without primary keys specified. Works on physical tables with no special processing for udef etc.; traveltransactionlog and WebHooks are supported
  example: []
  syntax:
    content: Task<MassOperationResult> InsertAsync(string tableName, string[] columns, string[][] data, CancellationToken cancellationToken = default)
    parameters:
    - id: tableName
      type: System.String
      description: The name of the table where rows should be inserted
    - id: columns
      type: System.String[]
      description: List of column names, in the same order as in the Data parameter
    - id: data
      type: System.String[][]
      description: Outer array = rows, inner = columns in specified order; use CultureDataFormatter to format values that aren't string or int
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.MassOperationResult}
      description: Summary of results
    content.vb: Function InsertAsync(tableName As String, columns As String(), data As String()(), cancellationToken As CancellationToken = Nothing) As Task(Of MassOperationResult)
  overload: SuperOffice.CRM.Services.IDatabaseTableAgent.InsertAsync*
  nameWithType.vb: IDatabaseTableAgent.InsertAsync(String, String(), String()(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IDatabaseTableAgent.InsertAsync(String, String(), String()(), System.Threading.CancellationToken)
  name.vb: InsertAsync(String, String(), String()(), CancellationToken)
- uid: SuperOffice.CRM.Services.IDatabaseTableAgent.TruncateAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IDatabaseTableAgent.TruncateAsync(System.String,System.Threading.CancellationToken)
  id: TruncateAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IDatabaseTableAgent
  langs:
  - csharp
  - vb
  name: TruncateAsync(string, CancellationToken)
  nameWithType: IDatabaseTableAgent.TruncateAsync(string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IDatabaseTableAgent.TruncateAsync(string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Drop all rows in a table. This clearance is not individually logged in TravelTransactionlog or Webhook/script calls
  example: []
  syntax:
    content: Task<MassOperationResult> TruncateAsync(string tableName, CancellationToken cancellationToken = default)
    parameters:
    - id: tableName
      type: System.String
      description: Name of table to be truncated
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.MassOperationResult}
      description: Summary of results
    content.vb: Function TruncateAsync(tableName As String, cancellationToken As CancellationToken = Nothing) As Task(Of MassOperationResult)
  overload: SuperOffice.CRM.Services.IDatabaseTableAgent.TruncateAsync*
  nameWithType.vb: IDatabaseTableAgent.TruncateAsync(String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IDatabaseTableAgent.TruncateAsync(String, System.Threading.CancellationToken)
  name.vb: TruncateAsync(String, CancellationToken)
- uid: SuperOffice.CRM.Services.IDatabaseTableAgent.UpsertAsync(System.String,System.String[],System.String[],System.String[][],SuperOffice.Data.UpsertNomatchAction,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IDatabaseTableAgent.UpsertAsync(System.String,System.String[],System.String[],System.String[][],SuperOffice.Data.UpsertNomatchAction,System.Boolean,System.Threading.CancellationToken)
  id: UpsertAsync(System.String,System.String[],System.String[],System.String[][],SuperOffice.Data.UpsertNomatchAction,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IDatabaseTableAgent
  langs:
  - csharp
  - vb
  name: UpsertAsync(string, string[], string[], string[][], UpsertNomatchAction, bool, CancellationToken)
  nameWithType: IDatabaseTableAgent.UpsertAsync(string, string[], string[], string[][], UpsertNomatchAction, bool, CancellationToken)
  fullName: SuperOffice.CRM.Services.IDatabaseTableAgent.UpsertAsync(string, string[], string[], string[][], SuperOffice.Data.UpsertNomatchAction, bool, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Insert or update rows, optionally deleting/zeroing 'leftover' rows. Special support for UDEF, as well as optional extensive information return. Traveltransactionlog and WebHooks are supported
  example: []
  syntax:
    content: Task<MassOperationResult> UpsertAsync(string tableName, string[] columns, string[] keys, string[][] data, UpsertNomatchAction nomatchAction, bool returnRowStatus, CancellationToken cancellationToken = default)
    parameters:
    - id: tableName
      type: System.String
      description: The name of the table where rows should be inserted or updated
    - id: columns
      type: System.String[]
      description: List of column names, in the same order as in the data
    - id: keys
      type: System.String[]
      description: List of columns that are to be used as keys, to match any existing rows
    - id: data
      type: System.String[][]
      description: Outer array = row, inner = column in specified order; use CultureDataFormatter to format values
    - id: nomatchAction
      type: SuperOffice.Data.UpsertNomatchAction
      description: Action to take on rows in the target table, that are not matched by any rows in the incoming data. Use the deletion options with care. NEVER use deletion if your Upsert is so large you need to divide it into multiple batches.
    - id: returnRowStatus
      type: System.Boolean
      description: If true, then the 'RowStatus' member of the return carrier will be populated with a per-row status, for each incoming row
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.MassOperationResult}
      description: Summary of results
    content.vb: Function UpsertAsync(tableName As String, columns As String(), keys As String(), data As String()(), nomatchAction As UpsertNomatchAction, returnRowStatus As Boolean, cancellationToken As CancellationToken = Nothing) As Task(Of MassOperationResult)
  overload: SuperOffice.CRM.Services.IDatabaseTableAgent.UpsertAsync*
  nameWithType.vb: IDatabaseTableAgent.UpsertAsync(String, String(), String(), String()(), UpsertNomatchAction, Boolean, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IDatabaseTableAgent.UpsertAsync(String, String(), String(), String()(), SuperOffice.Data.UpsertNomatchAction, Boolean, System.Threading.CancellationToken)
  name.vb: UpsertAsync(String, String(), String(), String()(), UpsertNomatchAction, Boolean, CancellationToken)
- uid: SuperOffice.CRM.Services.IDatabaseTableAgent.DeleteAsync(System.String,System.Int32[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IDatabaseTableAgent.DeleteAsync(System.String,System.Int32[],System.Threading.CancellationToken)
  id: DeleteAsync(System.String,System.Int32[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IDatabaseTableAgent
  langs:
  - csharp
  - vb
  name: DeleteAsync(string, int[], CancellationToken)
  nameWithType: IDatabaseTableAgent.DeleteAsync(string, int[], CancellationToken)
  fullName: SuperOffice.CRM.Services.IDatabaseTableAgent.DeleteAsync(string, int[], System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Delete rows, by primary key; traveltransactionlog and WebHooks are supported
  example: []
  syntax:
    content: Task<MassOperationResult> DeleteAsync(string tableName, int[] iDs, CancellationToken cancellationToken = default)
    parameters:
    - id: tableName
      type: System.String
      description: The name of the table where rows should be deleted
    - id: iDs
      type: System.Int32[]
      description: Primary keys of the rows to be deleted
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.MassOperationResult}
      description: Summary of results
    content.vb: Function DeleteAsync(tableName As String, iDs As Integer(), cancellationToken As CancellationToken = Nothing) As Task(Of MassOperationResult)
  overload: SuperOffice.CRM.Services.IDatabaseTableAgent.DeleteAsync*
  nameWithType.vb: IDatabaseTableAgent.DeleteAsync(String, Integer(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IDatabaseTableAgent.DeleteAsync(String, Integer(), System.Threading.CancellationToken)
  name.vb: DeleteAsync(String, Integer(), CancellationToken)
references:
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
- uid: SuperOffice.CRM.Services.IDatabaseTableAgent.ReadRowAsync*
  commentId: Overload:SuperOffice.CRM.Services.IDatabaseTableAgent.ReadRowAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IDatabaseTableAgent.html#SuperOffice_CRM_Services_IDatabaseTableAgent_ReadRowAsync_System_String_System_Int32_System_Threading_CancellationToken_
  name: ReadRowAsync
  nameWithType: IDatabaseTableAgent.ReadRowAsync
  fullName: SuperOffice.CRM.Services.IDatabaseTableAgent.ReadRowAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.TableRecord}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.TableRecord}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TableRecord>
  nameWithType: Task<TableRecord>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.TableRecord>
  nameWithType.vb: Task(Of TableRecord)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.TableRecord)
  name.vb: Task(Of TableRecord)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.TableRecord
    name: TableRecord
    isExternal: true
    href: SuperOffice.CRM.Services.TableRecord.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.TableRecord
    name: TableRecord
    isExternal: true
    href: SuperOffice.CRM.Services.TableRecord.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: SuperOffice.CRM.Services.IDatabaseTableAgent.InsertRowAsync*
  commentId: Overload:SuperOffice.CRM.Services.IDatabaseTableAgent.InsertRowAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IDatabaseTableAgent.html#SuperOffice_CRM_Services_IDatabaseTableAgent_InsertRowAsync_System_String_SuperOffice_CRM_Services_StringDictionary_System_Threading_CancellationToken_
  name: InsertRowAsync
  nameWithType: IDatabaseTableAgent.InsertRowAsync
  fullName: SuperOffice.CRM.Services.IDatabaseTableAgent.InsertRowAsync
- uid: SuperOffice.CRM.Services.StringDictionary
  isExternal: true
  name: StringDictionary
  nameWithType: StringDictionary
  fullName: SuperOffice.CRM.Services.StringDictionary
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: T:System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<int>
  nameWithType: Task<int>
  fullName: System.Threading.Tasks.Task<int>
  nameWithType.vb: Task(Of Integer)
  fullName.vb: System.Threading.Tasks.Task(Of Integer)
  name.vb: Task(Of Integer)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SuperOffice.CRM.Services.IDatabaseTableAgent.UpdateRowAsync*
  commentId: Overload:SuperOffice.CRM.Services.IDatabaseTableAgent.UpdateRowAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IDatabaseTableAgent.html#SuperOffice_CRM_Services_IDatabaseTableAgent_UpdateRowAsync_System_String_System_Int32_SuperOffice_CRM_Services_StringDictionary_System_Threading_CancellationToken_
  name: UpdateRowAsync
  nameWithType: IDatabaseTableAgent.UpdateRowAsync
  fullName: SuperOffice.CRM.Services.IDatabaseTableAgent.UpdateRowAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: SuperOffice.CRM.Services.IDatabaseTableAgent.DeleteRowAsync*
  commentId: Overload:SuperOffice.CRM.Services.IDatabaseTableAgent.DeleteRowAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IDatabaseTableAgent.html#SuperOffice_CRM_Services_IDatabaseTableAgent_DeleteRowAsync_System_String_System_Int32_System_Threading_CancellationToken_
  name: DeleteRowAsync
  nameWithType: IDatabaseTableAgent.DeleteRowAsync
  fullName: SuperOffice.CRM.Services.IDatabaseTableAgent.DeleteRowAsync
- uid: SuperOffice.CRM.Services.IDatabaseTableAgent.InsertAsync*
  commentId: Overload:SuperOffice.CRM.Services.IDatabaseTableAgent.InsertAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IDatabaseTableAgent.html#SuperOffice_CRM_Services_IDatabaseTableAgent_InsertAsync_System_String_System_String___System_String_____System_Threading_CancellationToken_
  name: InsertAsync
  nameWithType: IDatabaseTableAgent.InsertAsync
  fullName: SuperOffice.CRM.Services.IDatabaseTableAgent.InsertAsync
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: System.String[][]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[][]
  nameWithType: string[][]
  fullName: string[][]
  nameWithType.vb: String()()
  fullName.vb: String()()
  name.vb: String()()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.MassOperationResult}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.MassOperationResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<MassOperationResult>
  nameWithType: Task<MassOperationResult>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.MassOperationResult>
  nameWithType.vb: Task(Of MassOperationResult)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.MassOperationResult)
  name.vb: Task(Of MassOperationResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.MassOperationResult
    name: MassOperationResult
    isExternal: true
    href: SuperOffice.CRM.Services.MassOperationResult.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.MassOperationResult
    name: MassOperationResult
    isExternal: true
    href: SuperOffice.CRM.Services.MassOperationResult.html
  - name: )
- uid: SuperOffice.CRM.Services.IDatabaseTableAgent.TruncateAsync*
  commentId: Overload:SuperOffice.CRM.Services.IDatabaseTableAgent.TruncateAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IDatabaseTableAgent.html#SuperOffice_CRM_Services_IDatabaseTableAgent_TruncateAsync_System_String_System_Threading_CancellationToken_
  name: TruncateAsync
  nameWithType: IDatabaseTableAgent.TruncateAsync
  fullName: SuperOffice.CRM.Services.IDatabaseTableAgent.TruncateAsync
- uid: SuperOffice.CRM.Services.IDatabaseTableAgent.UpsertAsync*
  commentId: Overload:SuperOffice.CRM.Services.IDatabaseTableAgent.UpsertAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IDatabaseTableAgent.html#SuperOffice_CRM_Services_IDatabaseTableAgent_UpsertAsync_System_String_System_String___System_String___System_String_____SuperOffice_Data_UpsertNomatchAction_System_Boolean_System_Threading_CancellationToken_
  name: UpsertAsync
  nameWithType: IDatabaseTableAgent.UpsertAsync
  fullName: SuperOffice.CRM.Services.IDatabaseTableAgent.UpsertAsync
- uid: SuperOffice.Data.UpsertNomatchAction
  isExternal: true
  name: UpsertNomatchAction
  nameWithType: UpsertNomatchAction
  fullName: SuperOffice.Data.UpsertNomatchAction
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SuperOffice.CRM.Services.IDatabaseTableAgent.DeleteAsync*
  commentId: Overload:SuperOffice.CRM.Services.IDatabaseTableAgent.DeleteAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IDatabaseTableAgent.html#SuperOffice_CRM_Services_IDatabaseTableAgent_DeleteAsync_System_String_System_Int32___System_Threading_CancellationToken_
  name: DeleteAsync
  nameWithType: IDatabaseTableAgent.DeleteAsync
  fullName: SuperOffice.CRM.Services.IDatabaseTableAgent.DeleteAsync
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
