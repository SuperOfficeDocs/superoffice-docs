### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Services.IAppointmentAgent
  commentId: T:SuperOffice.CRM.Services.IAppointmentAgent
  id: IAppointmentAgent
  parent: SuperOffice.CRM.Services
  children:
  - SuperOffice.CRM.Services.IAppointmentAgent.AcceptAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.AcceptRejectedAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.AcceptWithEmailConfirmationAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.AcceptWithSmtpEmailConfirmationAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,SuperOffice.CRM.Services.EMailConnectionInfo,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.AssignToAsync(System.Int32,SuperOffice.CRM.Services.ParticipantInfo,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.CalculateDaysAsync(SuperOffice.CRM.Services.AppointmentEntity,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.CanAssignToProjectMemberAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.CleanUpBookingDeletedAsync(System.Int32[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.CleanUpBookingDeletedWithUpdateModeAsync(System.Int32[],SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.CleanUpRecurringBookingDeletedAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.ConvertAppointmentToTaskAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.CreateAndAcceptAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.CreateAndAcceptWithEmailConfirmationAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.CreateAppointmentEntityFromExistingAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.CreateAppointmentForUIDAsync(SuperOffice.CRM.Services.AppointmentEntity,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociateAsync(SuperOffice.Data.TaskType,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAsync(SuperOffice.Data.TaskType,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestionAsync(System.Int32,System.Int32,System.Boolean,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestionAsync(System.Int32,System.Int32,System.Boolean,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultReOpenAppointmentAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultRecurrenceAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultRecurrenceByDateAsync(System.DateTime,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultSuggestedAppointmentEntityAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultTaskListItemAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.CreateVideoMeetingReservationAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.DeclineInvitationFromEmailItemAsync(System.Int32,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.DeleteAppointmentEntityAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.DeleteAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.CRM.Services.EMailConnectionInfo,SuperOffice.CRM.Services.EMailConnectionInfo,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.DeleteVideoMeetingReservationAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GenerateLeadAsync(System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetActivityInformationListByDatesAndAssociateAsync(System.DateTime,System.DateTime,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetAlarmsAsync(System.Boolean,System.Boolean,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentEmailInvitationAsync(SuperOffice.CRM.Services.AppointmentEntity,System.String,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentEntityAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentFromUIDAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentHaveParticipantsWithEmailAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentListAsync(System.Int32[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentRecordsAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentsByTaskHeadingAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetAssociateDiaryAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetAssociatesDiaryAsync(System.Int32[],System.DateTime,System.DateTime,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetAssociatesDiaryInfoAsync(System.Int32[],System.DateTime,System.DateTime,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetCanInsertForAssociatesAsync(System.Int32[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTaskAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTaskHeadingAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTasksAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTypeAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.Data.AppointmentType,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetDayInformationListByDatesAndAssociateAsync(System.DateTime,System.DateTime,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetDiaryByGroupAsync(System.Int32,System.Int32,System.DateTime,System.DateTime,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetMyAppointmentsAsync(System.DateTime,System.DateTime,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetMyDiaryAsync(System.DateTime,System.DateTime,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetMyPublishedAppointmentsAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetMySyncAppointmentsAsync(System.DateTime,System.DateTime,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetMyTasksAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetNextAvailableTimeAsync(System.Int32[],System.DateTime,System.DateTime,System.Int32,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetNextSuggestedAppointmentBySaleAsync(System.Int32,System.Int32,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetOrganizerNameAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTaskAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTaskHeadingAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTasksAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTypeAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,SuperOffice.Data.AppointmentType,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetPersonDiaryAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetPersonTasksAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTaskAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTaskHeadingAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTasksAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTypeAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.Data.AppointmentType,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTaskAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTaskHeadingAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTasksAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTypeAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.Data.AppointmentType,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedAppointmentAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedAppointmentsAsync(System.Int32[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedProjectAppointmentsAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetRedLetterInformationListByDatesAndAssociateAsync(System.DateTime,System.DateTime,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetSuggestedAppointmentAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetSuggestedAppointmentEntityAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetTaskListItemAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetTaskListItemsAsync(System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetUIDFromAppointmentIdAsync(System.Int32,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.MoveAsync(System.Int32,System.DateTime,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.MoveExtendedAsync(SuperOffice.CRM.Services.AppointmentMoveData,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.MoveWithEmailAsync(System.Int32,System.DateTime,SuperOffice.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.CRM.Services.EMailConnectionInfo,SuperOffice.CRM.Services.EMailConnectionInfo,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.RejectAsync(System.Int32,System.String,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.RejectWithEmailConfirmationAsync(System.Int32,System.String,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.RejectWithSmtpEmailConfirmationAsync(System.Int32,System.String,SuperOffice.Data.RecurrenceUpdateMode,SuperOffice.CRM.Services.EMailConnectionInfo,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.RequestForInfoAsync(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.SaveAppointmentEntityAsync(SuperOffice.CRM.Services.AppointmentEntity,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.SaveAsync(SuperOffice.CRM.Services.AppointmentEntity,SuperOffice.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.CRM.Services.EMailConnectionInfo,SuperOffice.CRM.Services.EMailConnectionInfo,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.SaveSuggestedAppointmentEntityAsync(SuperOffice.CRM.Services.SuggestedAppointmentEntity,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.SaveTaskListItemAsync(SuperOffice.CRM.Services.TaskListItem,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.SaveWithCustomInvitationAsync(SuperOffice.CRM.Services.AppointmentEntity,SuperOffice.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.CRM.Services.EMailConnectionInfo,SuperOffice.CRM.Services.EMailConnectionInfo,System.String,System.String,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.SetActivityStatusAsync(System.String[],SuperOffice.Data.ActivityStatus,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.SetSeenAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.SetSeenManyAsync(System.Int32[],SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.ToggleActivitiesAsync(System.String[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.ToggleActivityAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.ToggleAndSetActivitiesAsync(System.String[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.ToggleAppointmentStatusAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointmentAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointmentFromIcsResponseAsync(System.String,System.IO.Stream,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointmentWithModeAndEmailAsync(System.Int32,System.DateTime,System.DateTime,SuperOffice.Data.AppointmentStatus,SuperOffice.Data.AppointmentType,System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.CRM.Services.EMailConnectionInfo,SuperOffice.CRM.Services.EMailConnectionInfo,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointmentWithModeAsync(System.Int32,System.DateTime,System.DateTime,SuperOffice.Data.AppointmentStatus,SuperOffice.Data.AppointmentType,System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.ValidateAppointmentEntityAsync(SuperOffice.CRM.Services.AppointmentEntity,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.ValidateDaysAsync(SuperOffice.CRM.Services.AppointmentEntity,System.DateTime[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.IAppointmentAgent.WillSendEmailAsync(SuperOffice.CRM.Services.AppointmentEntity,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IAppointmentAgent
  nameWithType: IAppointmentAgent
  fullName: SuperOffice.CRM.Services.IAppointmentAgent
  type: Interface
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Interface for the Appointment Agent

    Collection of all services that works with Appointment data.
  example:
  - >-
    <pre><code class="lang-csharp">using SuperOffice;

    using SuperOffice.CRM.Services;


    using (SoSession mySession = SoSession.Authenticate("user", "pass"))

    {
       using (AppointmentAgent agent = new AppointmentAgent())
       {
          // call methods on agent here...
       }
    }</code></pre>
  syntax:
    content: >-
      [Agent("Appointment Agent", "Interface for the Appointment Agent. Collection of all services that works with Appointment data.")]

      public interface IAppointmentAgent : IAgent
    content.vb: >-
      <Agent("Appointment Agent", "Interface for the Appointment Agent. Collection of all services that works with Appointment data.")>

      Public Interface IAppointmentAgent Inherits IAgent
  attributes:
  - type: SuperOffice.CRM.Services.Reflection.AgentAttribute
    ctor: SuperOffice.CRM.Services.Reflection.AgentAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Appointment Agent
    - type: System.String
      value: Interface for the Appointment Agent. Collection of all services that works with Appointment data.
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentAsync(System.Int32,System.Threading.CancellationToken)
  id: GetAppointmentAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetAppointmentAsync(int, CancellationToken)
  nameWithType: IAppointmentAgent.GetAppointmentAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Gets a Appointment object.
  example: []
  syntax:
    content: Task<Appointment> GetAppointmentAsync(int appointmentId, CancellationToken cancellationToken = default)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The identifier of the Appointment object
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Appointment}
      description: A single Appointment
    content.vb: Function GetAppointmentAsync(appointmentId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Appointment)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentAsync*
  nameWithType.vb: IAppointmentAgent.GetAppointmentAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentAsync(Integer, System.Threading.CancellationToken)
  name.vb: GetAppointmentAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.ToggleAppointmentStatusAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.ToggleAppointmentStatusAsync(System.Int32,System.Threading.CancellationToken)
  id: ToggleAppointmentStatusAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: ToggleAppointmentStatusAsync(int, CancellationToken)
  nameWithType: IAppointmentAgent.ToggleAppointmentStatusAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.ToggleAppointmentStatusAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Sets an appointment's status to Completed if the appointment had a different status, or sets the status to started if already set to completed.
  example: []
  syntax:
    content: Task<AppointmentStatus> ToggleAppointmentStatusAsync(int appointmentId, CancellationToken cancellationToken = default)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointment id.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.Data.AppointmentStatus}
      description: The new AppointmentStatus
    content.vb: Function ToggleAppointmentStatusAsync(appointmentId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of AppointmentStatus)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.ToggleAppointmentStatusAsync*
  nameWithType.vb: IAppointmentAgent.ToggleAppointmentStatusAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.ToggleAppointmentStatusAsync(Integer, System.Threading.CancellationToken)
  name.vb: ToggleAppointmentStatusAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.ToggleActivityAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.ToggleActivityAsync(System.String,System.Threading.CancellationToken)
  id: ToggleActivityAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: ToggleActivityAsync(string, CancellationToken)
  nameWithType: IAppointmentAgent.ToggleActivityAsync(string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.ToggleActivityAsync(string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Toggle the completed status for an activity. Activity may be sale, document or appointment. The changes are saved immediately.
  example: []
  syntax:
    content: Task<ActivityStatus> ToggleActivityAsync(string activityIdentifier, CancellationToken cancellationToken = default)
    parameters:
    - id: activityIdentifier
      type: System.String
      description: May contain of a mix of appointment_id, sale_id, document_id and todo_id
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.Data.ActivityStatus}
      description: What the result after toggling was.
    content.vb: Function ToggleActivityAsync(activityIdentifier As String, cancellationToken As CancellationToken = Nothing) As Task(Of ActivityStatus)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.ToggleActivityAsync*
  nameWithType.vb: IAppointmentAgent.ToggleActivityAsync(String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.ToggleActivityAsync(String, System.Threading.CancellationToken)
  name.vb: ToggleActivityAsync(String, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.ToggleActivitiesAsync(System.String[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.ToggleActivitiesAsync(System.String[],System.Threading.CancellationToken)
  id: ToggleActivitiesAsync(System.String[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: ToggleActivitiesAsync(string[], CancellationToken)
  nameWithType: IAppointmentAgent.ToggleActivitiesAsync(string[], CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.ToggleActivitiesAsync(string[], System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Toggle the completed status for an array of activities.
  example: []
  syntax:
    content: Task<ActivityStatus> ToggleActivitiesAsync(string[] activityIdentifier, CancellationToken cancellationToken = default)
    parameters:
    - id: activityIdentifier
      type: System.String[]
      description: Contain of a mix of appointment_id, sale_id, document_id and todo_id.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.Data.ActivityStatus}
      description: The resulting ActivityStatus of the first in the array
    content.vb: Function ToggleActivitiesAsync(activityIdentifier As String(), cancellationToken As CancellationToken = Nothing) As Task(Of ActivityStatus)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.ToggleActivitiesAsync*
  nameWithType.vb: IAppointmentAgent.ToggleActivitiesAsync(String(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.ToggleActivitiesAsync(String(), System.Threading.CancellationToken)
  name.vb: ToggleActivitiesAsync(String(), CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.SetActivityStatusAsync(System.String[],SuperOffice.Data.ActivityStatus,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.SetActivityStatusAsync(System.String[],SuperOffice.Data.ActivityStatus,System.Threading.CancellationToken)
  id: SetActivityStatusAsync(System.String[],SuperOffice.Data.ActivityStatus,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: SetActivityStatusAsync(string[], ActivityStatus, CancellationToken)
  nameWithType: IAppointmentAgent.SetActivityStatusAsync(string[], ActivityStatus, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.SetActivityStatusAsync(string[], SuperOffice.Data.ActivityStatus, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Sets the completed status for an array of activities. The string activityIdentifier param may contain of a mix of appointment_id, sale_id, document_id and todo_id. The changes are saved immediately. If an invalid id is passed in (nonexistent record), no changes will be made. If there is no write access to the record being changed, a Sentry exception will be thrown in the usual manner.
  example: []
  syntax:
    content: Task SetActivityStatusAsync(string[] activityIdentifier, ActivityStatus activityStatus, CancellationToken cancellationToken = default)
    parameters:
    - id: activityIdentifier
      type: System.String[]
      description: Array of activity ids. ex. appointment_id=666
    - id: activityStatus
      type: SuperOffice.Data.ActivityStatus
      description: The status to set the activities
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function SetActivityStatusAsync(activityIdentifier As String(), activityStatus As ActivityStatus, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IAppointmentAgent.SetActivityStatusAsync*
  nameWithType.vb: IAppointmentAgent.SetActivityStatusAsync(String(), ActivityStatus, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.SetActivityStatusAsync(String(), SuperOffice.Data.ActivityStatus, System.Threading.CancellationToken)
  name.vb: SetActivityStatusAsync(String(), ActivityStatus, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.ToggleAndSetActivitiesAsync(System.String[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.ToggleAndSetActivitiesAsync(System.String[],System.Threading.CancellationToken)
  id: ToggleAndSetActivitiesAsync(System.String[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: ToggleAndSetActivitiesAsync(string[], CancellationToken)
  nameWithType: IAppointmentAgent.ToggleAndSetActivitiesAsync(string[], CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.ToggleAndSetActivitiesAsync(string[], System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Toggles the first activity and sets the rest of the activities to the result of the first toggle. However, there are some special rules for appointments that trigger a suggested appointment when they are completed. If more than one appointment in the set of identifiers triggers a suggestion, we will not toggle those appointments. This rule is only active when changing the status of an appointment to complete. There must be more than one appointment that triggers such an event for this rule to take effect.
  example: []
  syntax:
    content: Task<string[]> ToggleAndSetActivitiesAsync(string[] activityIdentifiers, CancellationToken cancellationToken = default)
    parameters:
    - id: activityIdentifiers
      type: System.String[]
      description: Array of activity ids. ex. appointment_id=666
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String[]}
      description: The identifiers that were not toggled.
    content.vb: Function ToggleAndSetActivitiesAsync(activityIdentifiers As String(), cancellationToken As CancellationToken = Nothing) As Task(Of String())
  overload: SuperOffice.CRM.Services.IAppointmentAgent.ToggleAndSetActivitiesAsync*
  nameWithType.vb: IAppointmentAgent.ToggleAndSetActivitiesAsync(String(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.ToggleAndSetActivitiesAsync(String(), System.Threading.CancellationToken)
  name.vb: ToggleAndSetActivitiesAsync(String(), CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityAsync(System.Threading.CancellationToken)
  id: CreateDefaultAppointmentEntityAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultAppointmentEntityAsync(CancellationToken)
  nameWithType: IAppointmentAgent.CreateDefaultAppointmentEntityAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Loading default values into a new AppointmentEntity.
  example: []
  syntax:
    content: Task<AppointmentEntity> CreateDefaultAppointmentEntityAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.AppointmentEntity}
      description: New AppointmentEntity with default values
    content.vb: Function CreateDefaultAppointmentEntityAsync(cancellationToken As CancellationToken = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityAsync*
- uid: SuperOffice.CRM.Services.IAppointmentAgent.SaveAppointmentEntityAsync(SuperOffice.CRM.Services.AppointmentEntity,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.SaveAppointmentEntityAsync(SuperOffice.CRM.Services.AppointmentEntity,System.Threading.CancellationToken)
  id: SaveAppointmentEntityAsync(SuperOffice.CRM.Services.AppointmentEntity,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: SaveAppointmentEntityAsync(AppointmentEntity, CancellationToken)
  nameWithType: IAppointmentAgent.SaveAppointmentEntityAsync(AppointmentEntity, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.SaveAppointmentEntityAsync(SuperOffice.CRM.Services.AppointmentEntity, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Updates the existing AppointmentEntity or creates a new AppointmentEntity if the id parameter is 0. Save the appointment entity
  example: []
  syntax:
    content: Task<AppointmentEntity> SaveAppointmentEntityAsync(AppointmentEntity appointmentEntity, CancellationToken cancellationToken = default)
    parameters:
    - id: appointmentEntity
      type: SuperOffice.CRM.Services.AppointmentEntity
      description: The AppointmentEntity that is saved
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.AppointmentEntity}
      description: New or updated AppointmentEntity
    content.vb: Function SaveAppointmentEntityAsync(appointmentEntity As AppointmentEntity, cancellationToken As CancellationToken = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.SaveAppointmentEntityAsync*
- uid: SuperOffice.CRM.Services.IAppointmentAgent.DeleteAppointmentEntityAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.DeleteAppointmentEntityAsync(System.Int32,System.Threading.CancellationToken)
  id: DeleteAppointmentEntityAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: DeleteAppointmentEntityAsync(int, CancellationToken)
  nameWithType: IAppointmentAgent.DeleteAppointmentEntityAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.DeleteAppointmentEntityAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Deletes the AppointmentEntity
  example: []
  syntax:
    content: Task DeleteAppointmentEntityAsync(int appointmentEntityId, CancellationToken cancellationToken = default)
    parameters:
    - id: appointmentEntityId
      type: System.Int32
      description: The identity of the AppointmentEntity
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Function DeleteAppointmentEntityAsync(appointmentEntityId As Integer, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IAppointmentAgent.DeleteAppointmentEntityAsync*
  nameWithType.vb: IAppointmentAgent.DeleteAppointmentEntityAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.DeleteAppointmentEntityAsync(Integer, System.Threading.CancellationToken)
  name.vb: DeleteAppointmentEntityAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentEntityAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentEntityAsync(System.Int32,System.Threading.CancellationToken)
  id: GetAppointmentEntityAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetAppointmentEntityAsync(int, CancellationToken)
  nameWithType: IAppointmentAgent.GetAppointmentEntityAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentEntityAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Gets a AppointmentEntity object.
  example: []
  syntax:
    content: Task<AppointmentEntity> GetAppointmentEntityAsync(int appointmentEntityId, CancellationToken cancellationToken = default)
    parameters:
    - id: appointmentEntityId
      type: System.Int32
      description: The identifier of the AppointmentEntity object
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.AppointmentEntity}
      description: A single AppointmentEntity
    content.vb: Function GetAppointmentEntityAsync(appointmentEntityId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentEntityAsync*
  nameWithType.vb: IAppointmentAgent.GetAppointmentEntityAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentEntityAsync(Integer, System.Threading.CancellationToken)
  name.vb: GetAppointmentEntityAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAsync(SuperOffice.Data.TaskType,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAsync(SuperOffice.Data.TaskType,System.Threading.CancellationToken)
  id: CreateDefaultAppointmentEntityByTypeAsync(SuperOffice.Data.TaskType,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultAppointmentEntityByTypeAsync(TaskType, CancellationToken)
  nameWithType: IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAsync(TaskType, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAsync(SuperOffice.Data.TaskType, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Creates an AppointmentEntity populated with the default values for the specific type.
  example: []
  syntax:
    content: Task<AppointmentEntity> CreateDefaultAppointmentEntityByTypeAsync(TaskType type, CancellationToken cancellationToken = default)
    parameters:
    - id: type
      type: SuperOffice.Data.TaskType
      description: The type of task requested.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.AppointmentEntity}
      description: AppointmentEntity with default values.
    content.vb: Function CreateDefaultAppointmentEntityByTypeAsync(type As TaskType, cancellationToken As CancellationToken = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAsync*
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateAppointmentEntityFromExistingAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.CreateAppointmentEntityFromExistingAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  id: CreateAppointmentEntityFromExistingAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateAppointmentEntityFromExistingAsync(int, int, CancellationToken)
  nameWithType: IAppointmentAgent.CreateAppointmentEntityFromExistingAsync(int, int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateAppointmentEntityFromExistingAsync(int, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Creates an AppointmentEntity populated with values from an existing appointment. The new appointment will get the same task type and participant list as the source appointment. The date of the new appointment will be set to today, but the time component is kept.
  example: []
  syntax:
    content: Task<AppointmentEntity> CreateAppointmentEntityFromExistingAsync(int appointmentId, int associateId, CancellationToken cancellationToken = default)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: Source appointment ID
    - id: associateId
      type: System.Int32
      description: Associate owning the new appointment. If 0 the current associate is used.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.AppointmentEntity}
      description: AppointmentEntity with values copied from an existing appointment. Values that are not copied will be the default values.
    content.vb: Function CreateAppointmentEntityFromExistingAsync(appointmentId As Integer, associateId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.CreateAppointmentEntityFromExistingAsync*
  nameWithType.vb: IAppointmentAgent.CreateAppointmentEntityFromExistingAsync(Integer, Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.CreateAppointmentEntityFromExistingAsync(Integer, Integer, System.Threading.CancellationToken)
  name.vb: CreateAppointmentEntityFromExistingAsync(Integer, Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.AcceptAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.AcceptAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  id: AcceptAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: AcceptAsync(int, RecurrenceUpdateMode, CancellationToken)
  nameWithType: IAppointmentAgent.AcceptAsync(int, RecurrenceUpdateMode, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.AcceptAsync(int, SuperOffice.Data.RecurrenceUpdateMode, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Accepting an appointment invitation.
  example: []
  syntax:
    content: Task AcceptAsync(int appointmentId, RecurrenceUpdateMode updateMode, CancellationToken cancellationToken = default)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointmentId. Both master and child record ids are accepted.
    - id: updateMode
      type: SuperOffice.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: Updated AppointmentEntity
    content.vb: Function AcceptAsync(appointmentId As Integer, updateMode As RecurrenceUpdateMode, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IAppointmentAgent.AcceptAsync*
  nameWithType.vb: IAppointmentAgent.AcceptAsync(Integer, RecurrenceUpdateMode, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.AcceptAsync(Integer, SuperOffice.Data.RecurrenceUpdateMode, System.Threading.CancellationToken)
  name.vb: AcceptAsync(Integer, RecurrenceUpdateMode, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateAndAcceptAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.CreateAndAcceptAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  id: CreateAndAcceptAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateAndAcceptAsync(int, RecurrenceUpdateMode, CancellationToken)
  nameWithType: IAppointmentAgent.CreateAndAcceptAsync(int, RecurrenceUpdateMode, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateAndAcceptAsync(int, SuperOffice.Data.RecurrenceUpdateMode, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Creating an appointment from an emailItem invitation and accepting it.
  example: []
  syntax:
    content: Task CreateAndAcceptAsync(int emailItemId, RecurrenceUpdateMode updateMode, CancellationToken cancellationToken = default)
    parameters:
    - id: emailItemId
      type: System.Int32
      description: The emailItemId
    - id: updateMode
      type: SuperOffice.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function CreateAndAcceptAsync(emailItemId As Integer, updateMode As RecurrenceUpdateMode, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IAppointmentAgent.CreateAndAcceptAsync*
  nameWithType.vb: IAppointmentAgent.CreateAndAcceptAsync(Integer, RecurrenceUpdateMode, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.CreateAndAcceptAsync(Integer, SuperOffice.Data.RecurrenceUpdateMode, System.Threading.CancellationToken)
  name.vb: CreateAndAcceptAsync(Integer, RecurrenceUpdateMode, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.AcceptWithEmailConfirmationAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.AcceptWithEmailConfirmationAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  id: AcceptWithEmailConfirmationAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: AcceptWithEmailConfirmationAsync(int, RecurrenceUpdateMode, CancellationToken)
  nameWithType: IAppointmentAgent.AcceptWithEmailConfirmationAsync(int, RecurrenceUpdateMode, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.AcceptWithEmailConfirmationAsync(int, SuperOffice.Data.RecurrenceUpdateMode, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Accepting an appointment invitation and send an email confirmation to the meeting organizer.
  example: []
  syntax:
    content: Task AcceptWithEmailConfirmationAsync(int appointmentId, RecurrenceUpdateMode updateMode, CancellationToken cancellationToken = default)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointmentId. Both master and child record ids are accepted.
    - id: updateMode
      type: SuperOffice.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: Updated AppointmentEntity
    content.vb: Function AcceptWithEmailConfirmationAsync(appointmentId As Integer, updateMode As RecurrenceUpdateMode, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IAppointmentAgent.AcceptWithEmailConfirmationAsync*
  nameWithType.vb: IAppointmentAgent.AcceptWithEmailConfirmationAsync(Integer, RecurrenceUpdateMode, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.AcceptWithEmailConfirmationAsync(Integer, SuperOffice.Data.RecurrenceUpdateMode, System.Threading.CancellationToken)
  name.vb: AcceptWithEmailConfirmationAsync(Integer, RecurrenceUpdateMode, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateAndAcceptWithEmailConfirmationAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.CreateAndAcceptWithEmailConfirmationAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  id: CreateAndAcceptWithEmailConfirmationAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateAndAcceptWithEmailConfirmationAsync(int, RecurrenceUpdateMode, CancellationToken)
  nameWithType: IAppointmentAgent.CreateAndAcceptWithEmailConfirmationAsync(int, RecurrenceUpdateMode, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateAndAcceptWithEmailConfirmationAsync(int, SuperOffice.Data.RecurrenceUpdateMode, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Creating an appointment from an emailItem invitation and accepting it with email confirmation to the meeting organizer.
  example: []
  syntax:
    content: Task CreateAndAcceptWithEmailConfirmationAsync(int emailItemId, RecurrenceUpdateMode updateMode, CancellationToken cancellationToken = default)
    parameters:
    - id: emailItemId
      type: System.Int32
      description: The emailItemId
    - id: updateMode
      type: SuperOffice.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function CreateAndAcceptWithEmailConfirmationAsync(emailItemId As Integer, updateMode As RecurrenceUpdateMode, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IAppointmentAgent.CreateAndAcceptWithEmailConfirmationAsync*
  nameWithType.vb: IAppointmentAgent.CreateAndAcceptWithEmailConfirmationAsync(Integer, RecurrenceUpdateMode, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.CreateAndAcceptWithEmailConfirmationAsync(Integer, SuperOffice.Data.RecurrenceUpdateMode, System.Threading.CancellationToken)
  name.vb: CreateAndAcceptWithEmailConfirmationAsync(Integer, RecurrenceUpdateMode, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.RejectAsync(System.Int32,System.String,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.RejectAsync(System.Int32,System.String,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  id: RejectAsync(System.Int32,System.String,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: RejectAsync(int, string, RecurrenceUpdateMode, CancellationToken)
  nameWithType: IAppointmentAgent.RejectAsync(int, string, RecurrenceUpdateMode, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.RejectAsync(int, string, SuperOffice.Data.RecurrenceUpdateMode, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Rejecting an appointment invitation
  example: []
  syntax:
    content: Task RejectAsync(int appointmentId, string rejectReason, RecurrenceUpdateMode updateMode, CancellationToken cancellationToken = default)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointmentId. Both master and child record ids are accepted.
    - id: rejectReason
      type: System.String
      description: The reason the invitation was rejected.
    - id: updateMode
      type: SuperOffice.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: Updated AppointmentEntity
    content.vb: Function RejectAsync(appointmentId As Integer, rejectReason As String, updateMode As RecurrenceUpdateMode, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IAppointmentAgent.RejectAsync*
  nameWithType.vb: IAppointmentAgent.RejectAsync(Integer, String, RecurrenceUpdateMode, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.RejectAsync(Integer, String, SuperOffice.Data.RecurrenceUpdateMode, System.Threading.CancellationToken)
  name.vb: RejectAsync(Integer, String, RecurrenceUpdateMode, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.RejectWithEmailConfirmationAsync(System.Int32,System.String,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.RejectWithEmailConfirmationAsync(System.Int32,System.String,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  id: RejectWithEmailConfirmationAsync(System.Int32,System.String,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: RejectWithEmailConfirmationAsync(int, string, RecurrenceUpdateMode, CancellationToken)
  nameWithType: IAppointmentAgent.RejectWithEmailConfirmationAsync(int, string, RecurrenceUpdateMode, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.RejectWithEmailConfirmationAsync(int, string, SuperOffice.Data.RecurrenceUpdateMode, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Rejecting an appointment invitation and send an email confirmation to the meeting organizer.
  example: []
  syntax:
    content: Task RejectWithEmailConfirmationAsync(int appointmentId, string rejectReason, RecurrenceUpdateMode updateMode, CancellationToken cancellationToken = default)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointmentId. Both master and child record ids are accepted.
    - id: rejectReason
      type: System.String
      description: The reason the invitation was rejected.
    - id: updateMode
      type: SuperOffice.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: Updated AppointmentEntity
    content.vb: Function RejectWithEmailConfirmationAsync(appointmentId As Integer, rejectReason As String, updateMode As RecurrenceUpdateMode, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IAppointmentAgent.RejectWithEmailConfirmationAsync*
  nameWithType.vb: IAppointmentAgent.RejectWithEmailConfirmationAsync(Integer, String, RecurrenceUpdateMode, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.RejectWithEmailConfirmationAsync(Integer, String, SuperOffice.Data.RecurrenceUpdateMode, System.Threading.CancellationToken)
  name.vb: RejectWithEmailConfirmationAsync(Integer, String, RecurrenceUpdateMode, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.DeclineInvitationFromEmailItemAsync(System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.DeclineInvitationFromEmailItemAsync(System.Int32,System.String,System.Threading.CancellationToken)
  id: DeclineInvitationFromEmailItemAsync(System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: DeclineInvitationFromEmailItemAsync(int, string, CancellationToken)
  nameWithType: IAppointmentAgent.DeclineInvitationFromEmailItemAsync(int, string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.DeclineInvitationFromEmailItemAsync(int, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Declining an appointment invitation where no tentative appointments have been created.
  example: []
  syntax:
    content: Task DeclineInvitationFromEmailItemAsync(int emailItemId, string rejectReason, CancellationToken cancellationToken = default)
    parameters:
    - id: emailItemId
      type: System.Int32
      description: The emailItemId.
    - id: rejectReason
      type: System.String
      description: The reason the invitation was rejected.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function DeclineInvitationFromEmailItemAsync(emailItemId As Integer, rejectReason As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IAppointmentAgent.DeclineInvitationFromEmailItemAsync*
  nameWithType.vb: IAppointmentAgent.DeclineInvitationFromEmailItemAsync(Integer, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.DeclineInvitationFromEmailItemAsync(Integer, String, System.Threading.CancellationToken)
  name.vb: DeclineInvitationFromEmailItemAsync(Integer, String, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetOrganizerNameAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetOrganizerNameAsync(System.Int32,System.Threading.CancellationToken)
  id: GetOrganizerNameAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetOrganizerNameAsync(int, CancellationToken)
  nameWithType: IAppointmentAgent.GetOrganizerNameAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetOrganizerNameAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Lookup the name / email of an event-organizer
  example: []
  syntax:
    content: Task<string> GetOrganizerNameAsync(int motherAppointmentId, CancellationToken cancellationToken = default)
    parameters:
    - id: motherAppointmentId
      type: System.Int32
      description: The id of the mother-appointment.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: 'The displayed name of the organizer: name or email'
    content.vb: Function GetOrganizerNameAsync(motherAppointmentId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetOrganizerNameAsync*
  nameWithType.vb: IAppointmentAgent.GetOrganizerNameAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetOrganizerNameAsync(Integer, System.Threading.CancellationToken)
  name.vb: GetOrganizerNameAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.SaveAsync(SuperOffice.CRM.Services.AppointmentEntity,SuperOffice.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.CRM.Services.EMailConnectionInfo,SuperOffice.CRM.Services.EMailConnectionInfo,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.SaveAsync(SuperOffice.CRM.Services.AppointmentEntity,SuperOffice.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.CRM.Services.EMailConnectionInfo,SuperOffice.CRM.Services.EMailConnectionInfo,System.Threading.CancellationToken)
  id: SaveAsync(SuperOffice.CRM.Services.AppointmentEntity,SuperOffice.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.CRM.Services.EMailConnectionInfo,SuperOffice.CRM.Services.EMailConnectionInfo,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: SaveAsync(AppointmentEntity, RecurrenceUpdateMode, bool, EMailConnectionInfo, EMailConnectionInfo, CancellationToken)
  nameWithType: IAppointmentAgent.SaveAsync(AppointmentEntity, RecurrenceUpdateMode, bool, EMailConnectionInfo, EMailConnectionInfo, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.SaveAsync(SuperOffice.CRM.Services.AppointmentEntity, SuperOffice.Data.RecurrenceUpdateMode, bool, SuperOffice.CRM.Services.EMailConnectionInfo, SuperOffice.CRM.Services.EMailConnectionInfo, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Saving a booking.
  example: []
  syntax:
    content: Task<AppointmentEntity> SaveAsync(AppointmentEntity appointmentEntity, RecurrenceUpdateMode updateMode, bool sendEmailToParticipants, EMailConnectionInfo smtpEMailConnectionInfo, EMailConnectionInfo imapEMailConnectionInfo, CancellationToken cancellationToken = default)
    parameters:
    - id: appointmentEntity
      type: SuperOffice.CRM.Services.AppointmentEntity
      description: ''
    - id: updateMode
      type: SuperOffice.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: sendEmailToParticipants
      type: System.Boolean
      description: If true, emails will be sent to all participants that is marked with send email flag. If false no mails will be sent even if the send email flag is true.
    - id: smtpEMailConnectionInfo
      type: SuperOffice.CRM.Services.EMailConnectionInfo
      description: Login information for outgoing smtp email server. Will be null if no login information is relevant.
    - id: imapEMailConnectionInfo
      type: SuperOffice.CRM.Services.EMailConnectionInfo
      description: Login information for imap server. Will be null if no login information is relevant.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.AppointmentEntity}
      description: Updated AppointmentEntity
    content.vb: Function SaveAsync(appointmentEntity As AppointmentEntity, updateMode As RecurrenceUpdateMode, sendEmailToParticipants As Boolean, smtpEMailConnectionInfo As EMailConnectionInfo, imapEMailConnectionInfo As EMailConnectionInfo, cancellationToken As CancellationToken = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.SaveAsync*
  nameWithType.vb: IAppointmentAgent.SaveAsync(AppointmentEntity, RecurrenceUpdateMode, Boolean, EMailConnectionInfo, EMailConnectionInfo, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.SaveAsync(SuperOffice.CRM.Services.AppointmentEntity, SuperOffice.Data.RecurrenceUpdateMode, Boolean, SuperOffice.CRM.Services.EMailConnectionInfo, SuperOffice.CRM.Services.EMailConnectionInfo, System.Threading.CancellationToken)
  name.vb: SaveAsync(AppointmentEntity, RecurrenceUpdateMode, Boolean, EMailConnectionInfo, EMailConnectionInfo, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.DeleteAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.CRM.Services.EMailConnectionInfo,SuperOffice.CRM.Services.EMailConnectionInfo,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.DeleteAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.CRM.Services.EMailConnectionInfo,SuperOffice.CRM.Services.EMailConnectionInfo,System.Threading.CancellationToken)
  id: DeleteAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.CRM.Services.EMailConnectionInfo,SuperOffice.CRM.Services.EMailConnectionInfo,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: DeleteAsync(int, RecurrenceUpdateMode, bool, EMailConnectionInfo, EMailConnectionInfo, CancellationToken)
  nameWithType: IAppointmentAgent.DeleteAsync(int, RecurrenceUpdateMode, bool, EMailConnectionInfo, EMailConnectionInfo, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.DeleteAsync(int, SuperOffice.Data.RecurrenceUpdateMode, bool, SuperOffice.CRM.Services.EMailConnectionInfo, SuperOffice.CRM.Services.EMailConnectionInfo, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Deleting a booking
  example: []
  syntax:
    content: Task DeleteAsync(int appointmentId, RecurrenceUpdateMode updateMode, bool sendEmailToParticipants, EMailConnectionInfo smtpEMailConnectionInfo, EMailConnectionInfo imapEMailConnectionInfo, CancellationToken cancellationToken = default)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointmentId. Both master and child record ids are accepted.
    - id: updateMode
      type: SuperOffice.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: sendEmailToParticipants
      type: System.Boolean
      description: If true, emails will be sent to all participants that is marked with send email flag. If false no mails will be sent even if the send email flag is true.
    - id: smtpEMailConnectionInfo
      type: SuperOffice.CRM.Services.EMailConnectionInfo
      description: Login information for outgoing smtp email server. Will be null if no login information is relevant.
    - id: imapEMailConnectionInfo
      type: SuperOffice.CRM.Services.EMailConnectionInfo
      description: Login information for imap server. Will be null if no login information is relevant.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function DeleteAsync(appointmentId As Integer, updateMode As RecurrenceUpdateMode, sendEmailToParticipants As Boolean, smtpEMailConnectionInfo As EMailConnectionInfo, imapEMailConnectionInfo As EMailConnectionInfo, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IAppointmentAgent.DeleteAsync*
  nameWithType.vb: IAppointmentAgent.DeleteAsync(Integer, RecurrenceUpdateMode, Boolean, EMailConnectionInfo, EMailConnectionInfo, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.DeleteAsync(Integer, SuperOffice.Data.RecurrenceUpdateMode, Boolean, SuperOffice.CRM.Services.EMailConnectionInfo, SuperOffice.CRM.Services.EMailConnectionInfo, System.Threading.CancellationToken)
  name.vb: DeleteAsync(Integer, RecurrenceUpdateMode, Boolean, EMailConnectionInfo, EMailConnectionInfo, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CalculateDaysAsync(SuperOffice.CRM.Services.AppointmentEntity,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.CalculateDaysAsync(SuperOffice.CRM.Services.AppointmentEntity,System.Threading.CancellationToken)
  id: CalculateDaysAsync(SuperOffice.CRM.Services.AppointmentEntity,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CalculateDaysAsync(AppointmentEntity, CancellationToken)
  nameWithType: IAppointmentAgent.CalculateDaysAsync(AppointmentEntity, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CalculateDaysAsync(SuperOffice.CRM.Services.AppointmentEntity, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Calculates the set of dates that represents a recurrence pattern. Adds conflict information to each date.
  example: []
  syntax:
    content: Task<RecurrenceInfo> CalculateDaysAsync(AppointmentEntity appointmentEntity, CancellationToken cancellationToken = default)
    parameters:
    - id: appointmentEntity
      type: SuperOffice.CRM.Services.AppointmentEntity
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.RecurrenceInfo}
      description: ''
    content.vb: Function CalculateDaysAsync(appointmentEntity As AppointmentEntity, cancellationToken As CancellationToken = Nothing) As Task(Of RecurrenceInfo)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.CalculateDaysAsync*
- uid: SuperOffice.CRM.Services.IAppointmentAgent.ValidateDaysAsync(SuperOffice.CRM.Services.AppointmentEntity,System.DateTime[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.ValidateDaysAsync(SuperOffice.CRM.Services.AppointmentEntity,System.DateTime[],System.Threading.CancellationToken)
  id: ValidateDaysAsync(SuperOffice.CRM.Services.AppointmentEntity,System.DateTime[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: ValidateDaysAsync(AppointmentEntity, DateTime[], CancellationToken)
  nameWithType: IAppointmentAgent.ValidateDaysAsync(AppointmentEntity, DateTime[], CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.ValidateDaysAsync(SuperOffice.CRM.Services.AppointmentEntity, System.DateTime[], System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Validates the set of dates to calculate any conflicts.
  example: []
  syntax:
    content: Task<RecurrenceDate[]> ValidateDaysAsync(AppointmentEntity appointmentEntity, DateTime[] dates, CancellationToken cancellationToken = default)
    parameters:
    - id: appointmentEntity
      type: SuperOffice.CRM.Services.AppointmentEntity
      description: ''
    - id: dates
      type: System.DateTime[]
      description: The dates to validate.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.RecurrenceDate[]}
      description: Array of RecurrenceDate object for each validated date.
    content.vb: Function ValidateDaysAsync(appointmentEntity As AppointmentEntity, dates As Date(), cancellationToken As CancellationToken = Nothing) As Task(Of RecurrenceDate())
  overload: SuperOffice.CRM.Services.IAppointmentAgent.ValidateDaysAsync*
  nameWithType.vb: IAppointmentAgent.ValidateDaysAsync(AppointmentEntity, Date(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.ValidateDaysAsync(SuperOffice.CRM.Services.AppointmentEntity, Date(), System.Threading.CancellationToken)
  name.vb: ValidateDaysAsync(AppointmentEntity, Date(), CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultRecurrenceAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultRecurrenceAsync(System.Threading.CancellationToken)
  id: CreateDefaultRecurrenceAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultRecurrenceAsync(CancellationToken)
  nameWithType: IAppointmentAgent.CreateDefaultRecurrenceAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultRecurrenceAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Creates a RecurrenceInfo object populated with the default values for the specific type.
  example: []
  syntax:
    content: Task<RecurrenceInfo> CreateDefaultRecurrenceAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.RecurrenceInfo}
      description: RecurrenceInfo object with default values.
    content.vb: Function CreateDefaultRecurrenceAsync(cancellationToken As CancellationToken = Nothing) As Task(Of RecurrenceInfo)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultRecurrenceAsync*
- uid: SuperOffice.CRM.Services.IAppointmentAgent.AssignToAsync(System.Int32,SuperOffice.CRM.Services.ParticipantInfo,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.AssignToAsync(System.Int32,SuperOffice.CRM.Services.ParticipantInfo,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  id: AssignToAsync(System.Int32,SuperOffice.CRM.Services.ParticipantInfo,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: AssignToAsync(int, ParticipantInfo, RecurrenceUpdateMode, CancellationToken)
  nameWithType: IAppointmentAgent.AssignToAsync(int, ParticipantInfo, RecurrenceUpdateMode, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.AssignToAsync(int, SuperOffice.CRM.Services.ParticipantInfo, SuperOffice.Data.RecurrenceUpdateMode, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Assigning an appointment to another person.
  example: []
  syntax:
    content: Task<AppointmentEntity> AssignToAsync(int appointmentId, ParticipantInfo participant, RecurrenceUpdateMode updateMode, CancellationToken cancellationToken = default)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointmentId. Both master and child record ids are accepted.
    - id: participant
      type: SuperOffice.CRM.Services.ParticipantInfo
      description: ''
    - id: updateMode
      type: SuperOffice.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.AppointmentEntity}
      description: Updated AppointmentEntity
    content.vb: Function AssignToAsync(appointmentId As Integer, participant As ParticipantInfo, updateMode As RecurrenceUpdateMode, cancellationToken As CancellationToken = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.AssignToAsync*
  nameWithType.vb: IAppointmentAgent.AssignToAsync(Integer, ParticipantInfo, RecurrenceUpdateMode, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.AssignToAsync(Integer, SuperOffice.CRM.Services.ParticipantInfo, SuperOffice.Data.RecurrenceUpdateMode, System.Threading.CancellationToken)
  name.vb: AssignToAsync(Integer, ParticipantInfo, RecurrenceUpdateMode, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.SetSeenAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.SetSeenAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  id: SetSeenAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: SetSeenAsync(int, RecurrenceUpdateMode, CancellationToken)
  nameWithType: IAppointmentAgent.SetSeenAsync(int, RecurrenceUpdateMode, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.SetSeenAsync(int, SuperOffice.Data.RecurrenceUpdateMode, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Sets an appointment invitiation to seen.
  example: []
  syntax:
    content: Task SetSeenAsync(int appointmentId, RecurrenceUpdateMode updateMode, CancellationToken cancellationToken = default)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointmentId. Both master and child record ids are accepted.
    - id: updateMode
      type: SuperOffice.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function SetSeenAsync(appointmentId As Integer, updateMode As RecurrenceUpdateMode, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IAppointmentAgent.SetSeenAsync*
  nameWithType.vb: IAppointmentAgent.SetSeenAsync(Integer, RecurrenceUpdateMode, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.SetSeenAsync(Integer, SuperOffice.Data.RecurrenceUpdateMode, System.Threading.CancellationToken)
  name.vb: SetSeenAsync(Integer, RecurrenceUpdateMode, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.SetSeenManyAsync(System.Int32[],SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.SetSeenManyAsync(System.Int32[],SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  id: SetSeenManyAsync(System.Int32[],SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: SetSeenManyAsync(int[], RecurrenceUpdateMode, CancellationToken)
  nameWithType: IAppointmentAgent.SetSeenManyAsync(int[], RecurrenceUpdateMode, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.SetSeenManyAsync(int[], SuperOffice.Data.RecurrenceUpdateMode, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Sets a list of appointment invitations to seen. The same update mode will be used for all appointments in this batch.
  example: []
  syntax:
    content: Task SetSeenManyAsync(int[] appointmentIds, RecurrenceUpdateMode updateMode, CancellationToken cancellationToken = default)
    parameters:
    - id: appointmentIds
      type: System.Int32[]
      description: List of appointment IDs
    - id: updateMode
      type: SuperOffice.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function SetSeenManyAsync(appointmentIds As Integer(), updateMode As RecurrenceUpdateMode, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IAppointmentAgent.SetSeenManyAsync*
  nameWithType.vb: IAppointmentAgent.SetSeenManyAsync(Integer(), RecurrenceUpdateMode, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.SetSeenManyAsync(Integer(), SuperOffice.Data.RecurrenceUpdateMode, System.Threading.CancellationToken)
  name.vb: SetSeenManyAsync(Integer(), RecurrenceUpdateMode, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.MoveAsync(System.Int32,System.DateTime,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.MoveAsync(System.Int32,System.DateTime,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  id: MoveAsync(System.Int32,System.DateTime,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: MoveAsync(int, DateTime, RecurrenceUpdateMode, CancellationToken)
  nameWithType: IAppointmentAgent.MoveAsync(int, DateTime, RecurrenceUpdateMode, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.MoveAsync(int, System.DateTime, SuperOffice.Data.RecurrenceUpdateMode, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Moving a booking to another start time.
  example: []
  syntax:
    content: Task<AppointmentEntity> MoveAsync(int appointmentId, DateTime newStartTime, RecurrenceUpdateMode updateMode, CancellationToken cancellationToken = default)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointmentId. Both master and child record ids are accepted.
    - id: newStartTime
      type: System.DateTime
      description: The new start time for the moved booking.
    - id: updateMode
      type: SuperOffice.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.AppointmentEntity}
      description: Updated AppointmentEntity
    content.vb: Function MoveAsync(appointmentId As Integer, newStartTime As Date, updateMode As RecurrenceUpdateMode, cancellationToken As CancellationToken = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.MoveAsync*
  nameWithType.vb: IAppointmentAgent.MoveAsync(Integer, Date, RecurrenceUpdateMode, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.MoveAsync(Integer, Date, SuperOffice.Data.RecurrenceUpdateMode, System.Threading.CancellationToken)
  name.vb: MoveAsync(Integer, Date, RecurrenceUpdateMode, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.MoveWithEmailAsync(System.Int32,System.DateTime,SuperOffice.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.CRM.Services.EMailConnectionInfo,SuperOffice.CRM.Services.EMailConnectionInfo,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.MoveWithEmailAsync(System.Int32,System.DateTime,SuperOffice.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.CRM.Services.EMailConnectionInfo,SuperOffice.CRM.Services.EMailConnectionInfo,System.Threading.CancellationToken)
  id: MoveWithEmailAsync(System.Int32,System.DateTime,SuperOffice.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.CRM.Services.EMailConnectionInfo,SuperOffice.CRM.Services.EMailConnectionInfo,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: MoveWithEmailAsync(int, DateTime, RecurrenceUpdateMode, bool, EMailConnectionInfo, EMailConnectionInfo, CancellationToken)
  nameWithType: IAppointmentAgent.MoveWithEmailAsync(int, DateTime, RecurrenceUpdateMode, bool, EMailConnectionInfo, EMailConnectionInfo, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.MoveWithEmailAsync(int, System.DateTime, SuperOffice.Data.RecurrenceUpdateMode, bool, SuperOffice.CRM.Services.EMailConnectionInfo, SuperOffice.CRM.Services.EMailConnectionInfo, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Moving a booking to another start time.
  example: []
  syntax:
    content: Task<AppointmentEntity> MoveWithEmailAsync(int appointmentId, DateTime newStartTime, RecurrenceUpdateMode updateMode, bool sendEmailToParticipants, EMailConnectionInfo smtpEMailConnectionInfo, EMailConnectionInfo imapEMailConnectionInfo, CancellationToken cancellationToken = default)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointmentId. Both master and child record ids are accepted.
    - id: newStartTime
      type: System.DateTime
      description: The new start time for the moved booking.
    - id: updateMode
      type: SuperOffice.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: sendEmailToParticipants
      type: System.Boolean
      description: If true, emails will be sent to all participants that is marked with send email flag if deemed necessary. If false no mails will be sent even if the send email flag is true.
    - id: smtpEMailConnectionInfo
      type: SuperOffice.CRM.Services.EMailConnectionInfo
      description: Login information for outgoing smtp email server. Will be null if no login information is relevant.
    - id: imapEMailConnectionInfo
      type: SuperOffice.CRM.Services.EMailConnectionInfo
      description: Login information for imap server. Will be null if no login information is relevant.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.AppointmentEntity}
      description: Updated AppointmentEntity
    content.vb: Function MoveWithEmailAsync(appointmentId As Integer, newStartTime As Date, updateMode As RecurrenceUpdateMode, sendEmailToParticipants As Boolean, smtpEMailConnectionInfo As EMailConnectionInfo, imapEMailConnectionInfo As EMailConnectionInfo, cancellationToken As CancellationToken = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.MoveWithEmailAsync*
  nameWithType.vb: IAppointmentAgent.MoveWithEmailAsync(Integer, Date, RecurrenceUpdateMode, Boolean, EMailConnectionInfo, EMailConnectionInfo, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.MoveWithEmailAsync(Integer, Date, SuperOffice.Data.RecurrenceUpdateMode, Boolean, SuperOffice.CRM.Services.EMailConnectionInfo, SuperOffice.CRM.Services.EMailConnectionInfo, System.Threading.CancellationToken)
  name.vb: MoveWithEmailAsync(Integer, Date, RecurrenceUpdateMode, Boolean, EMailConnectionInfo, EMailConnectionInfo, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.MoveExtendedAsync(SuperOffice.CRM.Services.AppointmentMoveData,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.MoveExtendedAsync(SuperOffice.CRM.Services.AppointmentMoveData,System.Threading.CancellationToken)
  id: MoveExtendedAsync(SuperOffice.CRM.Services.AppointmentMoveData,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: MoveExtendedAsync(AppointmentMoveData, CancellationToken)
  nameWithType: IAppointmentAgent.MoveExtendedAsync(AppointmentMoveData, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.MoveExtendedAsync(SuperOffice.CRM.Services.AppointmentMoveData, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Moving a booking to another start time and with new info and possibly notifications.
  example: []
  syntax:
    content: Task<AppointmentEntity> MoveExtendedAsync(AppointmentMoveData appointmentMoveData, CancellationToken cancellationToken = default)
    parameters:
    - id: appointmentMoveData
      type: SuperOffice.CRM.Services.AppointmentMoveData
      description: Move parameter data.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.AppointmentEntity}
      description: Updated AppointmentEntity
    content.vb: Function MoveExtendedAsync(appointmentMoveData As AppointmentMoveData, cancellationToken As CancellationToken = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.MoveExtendedAsync*
- uid: SuperOffice.CRM.Services.IAppointmentAgent.AcceptRejectedAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.AcceptRejectedAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  id: AcceptRejectedAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: AcceptRejectedAsync(int, RecurrenceUpdateMode, CancellationToken)
  nameWithType: IAppointmentAgent.AcceptRejectedAsync(int, RecurrenceUpdateMode, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.AcceptRejectedAsync(int, SuperOffice.Data.RecurrenceUpdateMode, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Accept that an invited participant has rejected your invitation or assignment.
  example: []
  syntax:
    content: Task<AppointmentEntity> AcceptRejectedAsync(int appointmentId, RecurrenceUpdateMode updateMode, CancellationToken cancellationToken = default)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointmentId. Both master and child record ids are accepted.
    - id: updateMode
      type: SuperOffice.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.AppointmentEntity}
      description: Updated AppointmentEntity
    content.vb: Function AcceptRejectedAsync(appointmentId As Integer, updateMode As RecurrenceUpdateMode, cancellationToken As CancellationToken = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.AcceptRejectedAsync*
  nameWithType.vb: IAppointmentAgent.AcceptRejectedAsync(Integer, RecurrenceUpdateMode, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.AcceptRejectedAsync(Integer, SuperOffice.Data.RecurrenceUpdateMode, System.Threading.CancellationToken)
  name.vb: AcceptRejectedAsync(Integer, RecurrenceUpdateMode, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultRecurrenceByDateAsync(System.DateTime,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultRecurrenceByDateAsync(System.DateTime,System.Threading.CancellationToken)
  id: CreateDefaultRecurrenceByDateAsync(System.DateTime,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultRecurrenceByDateAsync(DateTime, CancellationToken)
  nameWithType: IAppointmentAgent.CreateDefaultRecurrenceByDateAsync(DateTime, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultRecurrenceByDateAsync(System.DateTime, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Creates a RecurrenceInfo object populated with the default values for the specific type. Using startDate as start date for the recurreing pattern.
  example: []
  syntax:
    content: Task<RecurrenceInfo> CreateDefaultRecurrenceByDateAsync(DateTime startDate, CancellationToken cancellationToken = default)
    parameters:
    - id: startDate
      type: System.DateTime
      description: Date of which the recurring pattern should start.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.RecurrenceInfo}
      description: ''
    content.vb: Function CreateDefaultRecurrenceByDateAsync(startDate As Date, cancellationToken As CancellationToken = Nothing) As Task(Of RecurrenceInfo)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultRecurrenceByDateAsync*
  nameWithType.vb: IAppointmentAgent.CreateDefaultRecurrenceByDateAsync(Date, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultRecurrenceByDateAsync(Date, System.Threading.CancellationToken)
  name.vb: CreateDefaultRecurrenceByDateAsync(Date, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CleanUpBookingDeletedAsync(System.Int32[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.CleanUpBookingDeletedAsync(System.Int32[],System.Threading.CancellationToken)
  id: CleanUpBookingDeletedAsync(System.Int32[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CleanUpBookingDeletedAsync(int[], CancellationToken)
  nameWithType: IAppointmentAgent.CleanUpBookingDeletedAsync(int[], CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CleanUpBookingDeletedAsync(int[], System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Deletes all appointments(within the appointmentIds array) with status BookingDeleted.
  example: []
  syntax:
    content: Task<int> CleanUpBookingDeletedAsync(int[] appointmentIds, CancellationToken cancellationToken = default)
    parameters:
    - id: appointmentIds
      type: System.Int32[]
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: Number of modified or deleted appointments
    content.vb: Function CleanUpBookingDeletedAsync(appointmentIds As Integer(), cancellationToken As CancellationToken = Nothing) As Task(Of Integer)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.CleanUpBookingDeletedAsync*
  nameWithType.vb: IAppointmentAgent.CleanUpBookingDeletedAsync(Integer(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.CleanUpBookingDeletedAsync(Integer(), System.Threading.CancellationToken)
  name.vb: CleanUpBookingDeletedAsync(Integer(), CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CleanUpBookingDeletedWithUpdateModeAsync(System.Int32[],SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.CleanUpBookingDeletedWithUpdateModeAsync(System.Int32[],SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  id: CleanUpBookingDeletedWithUpdateModeAsync(System.Int32[],SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CleanUpBookingDeletedWithUpdateModeAsync(int[], RecurrenceUpdateMode, CancellationToken)
  nameWithType: IAppointmentAgent.CleanUpBookingDeletedWithUpdateModeAsync(int[], RecurrenceUpdateMode, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CleanUpBookingDeletedWithUpdateModeAsync(int[], SuperOffice.Data.RecurrenceUpdateMode, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Deletes all appointments(within the appointmentIds array) with status BookingDeleted. All appointments in the list will be deleted using the same recurrence update mode.
  example: []
  syntax:
    content: Task CleanUpBookingDeletedWithUpdateModeAsync(int[] appointmentIds, RecurrenceUpdateMode updateMode, CancellationToken cancellationToken = default)
    parameters:
    - id: appointmentIds
      type: System.Int32[]
      description: List of appointment IDs
    - id: updateMode
      type: SuperOffice.Data.RecurrenceUpdateMode
      description: Update mode
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function CleanUpBookingDeletedWithUpdateModeAsync(appointmentIds As Integer(), updateMode As RecurrenceUpdateMode, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IAppointmentAgent.CleanUpBookingDeletedWithUpdateModeAsync*
  nameWithType.vb: IAppointmentAgent.CleanUpBookingDeletedWithUpdateModeAsync(Integer(), RecurrenceUpdateMode, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.CleanUpBookingDeletedWithUpdateModeAsync(Integer(), SuperOffice.Data.RecurrenceUpdateMode, System.Threading.CancellationToken)
  name.vb: CleanUpBookingDeletedWithUpdateModeAsync(Integer(), RecurrenceUpdateMode, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CleanUpRecurringBookingDeletedAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.CleanUpRecurringBookingDeletedAsync(System.Threading.CancellationToken)
  id: CleanUpRecurringBookingDeletedAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CleanUpRecurringBookingDeletedAsync(CancellationToken)
  nameWithType: IAppointmentAgent.CleanUpRecurringBookingDeletedAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CleanUpRecurringBookingDeletedAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Deletes all appointments with status BookingDeleted and for in logged user.
  example: []
  syntax:
    content: Task<int> CleanUpRecurringBookingDeletedAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: ''
    content.vb: Function CleanUpRecurringBookingDeletedAsync(cancellationToken As CancellationToken = Nothing) As Task(Of Integer)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.CleanUpRecurringBookingDeletedAsync*
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociateAsync(SuperOffice.Data.TaskType,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociateAsync(SuperOffice.Data.TaskType,System.Int32,System.Threading.CancellationToken)
  id: CreateDefaultAppointmentEntityByTypeAndAssociateAsync(SuperOffice.Data.TaskType,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultAppointmentEntityByTypeAndAssociateAsync(TaskType, int, CancellationToken)
  nameWithType: IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociateAsync(TaskType, int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociateAsync(SuperOffice.Data.TaskType, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Creates a AppointmentEntity populated with the default values for the specific type and owner.
  example: []
  syntax:
    content: Task<AppointmentEntity> CreateDefaultAppointmentEntityByTypeAndAssociateAsync(TaskType type, int associateId, CancellationToken cancellationToken = default)
    parameters:
    - id: type
      type: SuperOffice.Data.TaskType
      description: The type of task requested.
    - id: associateId
      type: System.Int32
      description: The associateId of the appointment owner.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.AppointmentEntity}
      description: AppointmentEntity with default values.
    content.vb: Function CreateDefaultAppointmentEntityByTypeAndAssociateAsync(type As TaskType, associateId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociateAsync*
  nameWithType.vb: IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociateAsync(TaskType, Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociateAsync(SuperOffice.Data.TaskType, Integer, System.Threading.CancellationToken)
  name.vb: CreateDefaultAppointmentEntityByTypeAndAssociateAsync(TaskType, Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetCanInsertForAssociatesAsync(System.Int32[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetCanInsertForAssociatesAsync(System.Int32[],System.Threading.CancellationToken)
  id: GetCanInsertForAssociatesAsync(System.Int32[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetCanInsertForAssociatesAsync(int[], CancellationToken)
  nameWithType: IAppointmentAgent.GetCanInsertForAssociatesAsync(int[], CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetCanInsertForAssociatesAsync(int[], System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Check if current associate can create appointments in the diary of other associates.
  example: []
  syntax:
    content: Task<bool[]> GetCanInsertForAssociatesAsync(int[] associateIds, CancellationToken cancellationToken = default)
    parameters:
    - id: associateIds
      type: System.Int32[]
      description: Array of associate ids to check for.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean[]}
      description: Returns an array of bool corresponding to the associate array input parameter.
    content.vb: Function GetCanInsertForAssociatesAsync(associateIds As Integer(), cancellationToken As CancellationToken = Nothing) As Task(Of Boolean())
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetCanInsertForAssociatesAsync*
  nameWithType.vb: IAppointmentAgent.GetCanInsertForAssociatesAsync(Integer(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetCanInsertForAssociatesAsync(Integer(), System.Threading.CancellationToken)
  name.vb: GetCanInsertForAssociatesAsync(Integer(), CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentHaveParticipantsWithEmailAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentHaveParticipantsWithEmailAsync(System.Int32,System.Threading.CancellationToken)
  id: GetAppointmentHaveParticipantsWithEmailAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetAppointmentHaveParticipantsWithEmailAsync(int, CancellationToken)
  nameWithType: IAppointmentAgent.GetAppointmentHaveParticipantsWithEmailAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentHaveParticipantsWithEmailAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: GetAppointmentHaveParticipantsWithEmail will check if any of the participants is marked to receive emails on this appointment. If no participants are defined, false will be returned.
  example: []
  syntax:
    content: Task<bool> GetAppointmentHaveParticipantsWithEmailAsync(int appointmentId, CancellationToken cancellationToken = default)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointmentId.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: Return true or false.
    content.vb: Function GetAppointmentHaveParticipantsWithEmailAsync(appointmentId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentHaveParticipantsWithEmailAsync*
  nameWithType.vb: IAppointmentAgent.GetAppointmentHaveParticipantsWithEmailAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentHaveParticipantsWithEmailAsync(Integer, System.Threading.CancellationToken)
  name.vb: GetAppointmentHaveParticipantsWithEmailAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestionAsync(System.Int32,System.Int32,System.Boolean,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestionAsync(System.Int32,System.Int32,System.Boolean,System.Int32,System.Threading.CancellationToken)
  id: CreateDefaultAppointmentEntityFromSaleSuggestionAsync(System.Int32,System.Int32,System.Boolean,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultAppointmentEntityFromSaleSuggestionAsync(int, int, bool, int, CancellationToken)
  nameWithType: IAppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestionAsync(int, int, bool, int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestionAsync(int, int, bool, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Creates an appointment based on a suggested appointment.
  example: []
  syntax:
    content: Task<AppointmentEntity> CreateDefaultAppointmentEntityFromSaleSuggestionAsync(int suggestedAppointmentId, int saleId, bool createNow, int ownerId, CancellationToken cancellationToken = default)
    parameters:
    - id: suggestedAppointmentId
      type: System.Int32
      description: The id of the suggested appointment
    - id: saleId
      type: System.Int32
      description: This is the id of the sale the appointment is connected to. This will be used to give the appointment it's starting date. If the id is 0 or invalid, we assume the start date is now
    - id: createNow
      type: System.Boolean
      description: If this parameter is true, we override the suggested start time and create the appointment with the current date and time
    - id: ownerId
      type: System.Int32
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.AppointmentEntity}
      description: The newly created appointment
    content.vb: Function CreateDefaultAppointmentEntityFromSaleSuggestionAsync(suggestedAppointmentId As Integer, saleId As Integer, createNow As Boolean, ownerId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestionAsync*
  nameWithType.vb: IAppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestionAsync(Integer, Integer, Boolean, Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestionAsync(Integer, Integer, Boolean, Integer, System.Threading.CancellationToken)
  name.vb: CreateDefaultAppointmentEntityFromSaleSuggestionAsync(Integer, Integer, Boolean, Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetNextSuggestedAppointmentBySaleAsync(System.Int32,System.Int32,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetNextSuggestedAppointmentBySaleAsync(System.Int32,System.Int32,System.Boolean,System.Threading.CancellationToken)
  id: GetNextSuggestedAppointmentBySaleAsync(System.Int32,System.Int32,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetNextSuggestedAppointmentBySaleAsync(int, int, bool, CancellationToken)
  nameWithType: IAppointmentAgent.GetNextSuggestedAppointmentBySaleAsync(int, int, bool, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetNextSuggestedAppointmentBySaleAsync(int, int, bool, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Gets the next suggested appointment for a given sale (or rather a given sale's guide).
  example: []
  syntax:
    content: Task<SuggestedAppointment> GetNextSuggestedAppointmentBySaleAsync(int saleId, int currentAppointmentId, bool skipCompleteCheck, CancellationToken cancellationToken = default)
    parameters:
    - id: saleId
      type: System.Int32
      description: The identifier of the (guided) sale from which we want to find a suggested appointment
    - id: currentAppointmentId
      type: System.Int32
      description: The identifier of the appointment from which we calculate the next suggestion. The next suggested appointment is the subsequent appointment defined in the SoAdmin's sales guide.
    - id: skipCompleteCheck
      type: System.Boolean
      description: If you want to get the next appointment step in a sales guide for an appointment which is not completed, this value must be true. In all other cases, this value should be false, as it would return the value of null if the current appointment is not completes.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.SuggestedAppointment}
      description: The next suggestion based on the sale id of a guided sale and the id of the current apopintment. If we cannot find a next suggestion or the sale is not guided (or if any of the paramters are invalid), we will return null.
    content.vb: Function GetNextSuggestedAppointmentBySaleAsync(saleId As Integer, currentAppointmentId As Integer, skipCompleteCheck As Boolean, cancellationToken As CancellationToken = Nothing) As Task(Of SuggestedAppointment)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetNextSuggestedAppointmentBySaleAsync*
  nameWithType.vb: IAppointmentAgent.GetNextSuggestedAppointmentBySaleAsync(Integer, Integer, Boolean, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetNextSuggestedAppointmentBySaleAsync(Integer, Integer, Boolean, System.Threading.CancellationToken)
  name.vb: GetNextSuggestedAppointmentBySaleAsync(Integer, Integer, Boolean, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultReOpenAppointmentAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultReOpenAppointmentAsync(System.Int32,System.Threading.CancellationToken)
  id: CreateDefaultReOpenAppointmentAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultReOpenAppointmentAsync(int, CancellationToken)
  nameWithType: IAppointmentAgent.CreateDefaultReOpenAppointmentAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultReOpenAppointmentAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: A re-open appointment should be created as a reminder to re-open the sale at a certain date with information regarding the stalled sale.
  example: []
  syntax:
    content: Task<AppointmentEntity> CreateDefaultReOpenAppointmentAsync(int saleId, CancellationToken cancellationToken = default)
    parameters:
    - id: saleId
      type: System.Int32
      description: The identifier of the stalled sale from which we create a re-open appointment
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.AppointmentEntity}
      description: The re-open appointment with start date = the re-open date of the sale and a description matching the sales stalled reason.
    content.vb: Function CreateDefaultReOpenAppointmentAsync(saleId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultReOpenAppointmentAsync*
  nameWithType.vb: IAppointmentAgent.CreateDefaultReOpenAppointmentAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultReOpenAppointmentAsync(Integer, System.Threading.CancellationToken)
  name.vb: CreateDefaultReOpenAppointmentAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestionAsync(System.Int32,System.Int32,System.Boolean,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestionAsync(System.Int32,System.Int32,System.Boolean,System.Int32,System.Threading.CancellationToken)
  id: CreateDefaultAppointmentEntityFromProjectSuggestionAsync(System.Int32,System.Int32,System.Boolean,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultAppointmentEntityFromProjectSuggestionAsync(int, int, bool, int, CancellationToken)
  nameWithType: IAppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestionAsync(int, int, bool, int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestionAsync(int, int, bool, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: ''
  example: []
  syntax:
    content: Task<AppointmentEntity> CreateDefaultAppointmentEntityFromProjectSuggestionAsync(int suggestedAppointmentId, int projectId, bool createNow, int ownerId, CancellationToken cancellationToken = default)
    parameters:
    - id: suggestedAppointmentId
      type: System.Int32
      description: ''
    - id: projectId
      type: System.Int32
      description: ''
    - id: createNow
      type: System.Boolean
      description: ''
    - id: ownerId
      type: System.Int32
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.AppointmentEntity}
      description: ''
    content.vb: Function CreateDefaultAppointmentEntityFromProjectSuggestionAsync(suggestedAppointmentId As Integer, projectId As Integer, createNow As Boolean, ownerId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestionAsync*
  nameWithType.vb: IAppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestionAsync(Integer, Integer, Boolean, Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestionAsync(Integer, Integer, Boolean, Integer, System.Threading.CancellationToken)
  name.vb: CreateDefaultAppointmentEntityFromProjectSuggestionAsync(Integer, Integer, Boolean, Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateAppointmentForUIDAsync(SuperOffice.CRM.Services.AppointmentEntity,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.CreateAppointmentForUIDAsync(SuperOffice.CRM.Services.AppointmentEntity,System.String,System.Threading.CancellationToken)
  id: CreateAppointmentForUIDAsync(SuperOffice.CRM.Services.AppointmentEntity,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateAppointmentForUIDAsync(AppointmentEntity, string, CancellationToken)
  nameWithType: IAppointmentAgent.CreateAppointmentForUIDAsync(AppointmentEntity, string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateAppointmentForUIDAsync(SuperOffice.CRM.Services.AppointmentEntity, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Create an invitation record and an appointment with a given UID to reserve it if the UID is unused, otherwise null.
  example: []
  syntax:
    content: Task<AppointmentEntity> CreateAppointmentForUIDAsync(AppointmentEntity appointmentEntity, string uID, CancellationToken cancellationToken = default)
    parameters:
    - id: appointmentEntity
      type: SuperOffice.CRM.Services.AppointmentEntity
      description: ''
    - id: uID
      type: System.String
      description: The UID associated with the appointment
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.AppointmentEntity}
      description: The newly created AppointmentEntity or null if the UID is in the DB already.
    content.vb: Function CreateAppointmentForUIDAsync(appointmentEntity As AppointmentEntity, uID As String, cancellationToken As CancellationToken = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.CreateAppointmentForUIDAsync*
  nameWithType.vb: IAppointmentAgent.CreateAppointmentForUIDAsync(AppointmentEntity, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.CreateAppointmentForUIDAsync(SuperOffice.CRM.Services.AppointmentEntity, String, System.Threading.CancellationToken)
  name.vb: CreateAppointmentForUIDAsync(AppointmentEntity, String, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentFromUIDAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentFromUIDAsync(System.String,System.Threading.CancellationToken)
  id: GetAppointmentFromUIDAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetAppointmentFromUIDAsync(string, CancellationToken)
  nameWithType: IAppointmentAgent.GetAppointmentFromUIDAsync(string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentFromUIDAsync(string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get the appointment that corresponds to the given UID.
  example: []
  syntax:
    content: Task<AppointmentEntity> GetAppointmentFromUIDAsync(string uID, CancellationToken cancellationToken = default)
    parameters:
    - id: uID
      type: System.String
      description: The UID associated with the appointment
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.AppointmentEntity}
      description: The corresponding AppointmentEntity if exists or a default appointment entity.
    content.vb: Function GetAppointmentFromUIDAsync(uID As String, cancellationToken As CancellationToken = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentFromUIDAsync*
  nameWithType.vb: IAppointmentAgent.GetAppointmentFromUIDAsync(String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentFromUIDAsync(String, System.Threading.CancellationToken)
  name.vb: GetAppointmentFromUIDAsync(String, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CanAssignToProjectMemberAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.CanAssignToProjectMemberAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  id: CanAssignToProjectMemberAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CanAssignToProjectMemberAsync(int, int, CancellationToken)
  nameWithType: IAppointmentAgent.CanAssignToProjectMemberAsync(int, int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CanAssignToProjectMemberAsync(int, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: ''
  example: []
  syntax:
    content: Task<bool> CanAssignToProjectMemberAsync(int projectId, int suggestedAppointmentId, CancellationToken cancellationToken = default)
    parameters:
    - id: projectId
      type: System.Int32
      description: ''
    - id: suggestedAppointmentId
      type: System.Int32
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: ''
    content.vb: Function CanAssignToProjectMemberAsync(projectId As Integer, suggestedAppointmentId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.CanAssignToProjectMemberAsync*
  nameWithType.vb: IAppointmentAgent.CanAssignToProjectMemberAsync(Integer, Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.CanAssignToProjectMemberAsync(Integer, Integer, System.Threading.CancellationToken)
  name.vb: CanAssignToProjectMemberAsync(Integer, Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetUIDFromAppointmentIdAsync(System.Int32,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetUIDFromAppointmentIdAsync(System.Int32,System.Boolean,System.Threading.CancellationToken)
  id: GetUIDFromAppointmentIdAsync(System.Int32,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetUIDFromAppointmentIdAsync(int, bool, CancellationToken)
  nameWithType: IAppointmentAgent.GetUIDFromAppointmentIdAsync(int, bool, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetUIDFromAppointmentIdAsync(int, bool, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get the UID associated with the appointment id in the Invitation table.
  example: []
  syntax:
    content: Task<string> GetUIDFromAppointmentIdAsync(int appointmentId, bool useMotherId, CancellationToken cancellationToken = default)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: ''
    - id: useMotherId
      type: System.Boolean
      description: Uses motherId if no UID is found for appointmentId.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The associated UID, or null if none exist.
    content.vb: Function GetUIDFromAppointmentIdAsync(appointmentId As Integer, useMotherId As Boolean, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetUIDFromAppointmentIdAsync*
  nameWithType.vb: IAppointmentAgent.GetUIDFromAppointmentIdAsync(Integer, Boolean, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetUIDFromAppointmentIdAsync(Integer, Boolean, System.Threading.CancellationToken)
  name.vb: GetUIDFromAppointmentIdAsync(Integer, Boolean, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointmentFromIcsResponseAsync(System.String,System.IO.Stream,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointmentFromIcsResponseAsync(System.String,System.IO.Stream,System.Threading.CancellationToken)
  id: UpdateAppointmentFromIcsResponseAsync(System.String,System.IO.Stream,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: UpdateAppointmentFromIcsResponseAsync(string, Stream, CancellationToken)
  nameWithType: IAppointmentAgent.UpdateAppointmentFromIcsResponseAsync(string, Stream, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointmentFromIcsResponseAsync(string, System.IO.Stream, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Update the attendance to an appointment based on incoming ICS RSVPs.
  example: []
  syntax:
    content: Task<bool> UpdateAppointmentFromIcsResponseAsync(string emailAddress, Stream icsData, CancellationToken cancellationToken = default)
    parameters:
    - id: emailAddress
      type: System.String
      description: The email-address of the person responding to our meeting-request.
    - id: icsData
      type: System.IO.Stream
      description: The iCal ICS RSVP-content in byte-form.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if successfull.
    content.vb: Function UpdateAppointmentFromIcsResponseAsync(emailAddress As String, icsData As Stream, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointmentFromIcsResponseAsync*
  nameWithType.vb: IAppointmentAgent.UpdateAppointmentFromIcsResponseAsync(String, Stream, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointmentFromIcsResponseAsync(String, System.IO.Stream, System.Threading.CancellationToken)
  name.vb: UpdateAppointmentFromIcsResponseAsync(String, Stream, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.ValidateAppointmentEntityAsync(SuperOffice.CRM.Services.AppointmentEntity,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.ValidateAppointmentEntityAsync(SuperOffice.CRM.Services.AppointmentEntity,System.Threading.CancellationToken)
  id: ValidateAppointmentEntityAsync(SuperOffice.CRM.Services.AppointmentEntity,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: ValidateAppointmentEntityAsync(AppointmentEntity, CancellationToken)
  nameWithType: IAppointmentAgent.ValidateAppointmentEntityAsync(AppointmentEntity, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.ValidateAppointmentEntityAsync(SuperOffice.CRM.Services.AppointmentEntity, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Check that entity is ready for saving.
  example: []
  syntax:
    content: Task<StringDictionary> ValidateAppointmentEntityAsync(AppointmentEntity appointmentEntity, CancellationToken cancellationToken = default)
    parameters:
    - id: appointmentEntity
      type: SuperOffice.CRM.Services.AppointmentEntity
      description: Entity to be checked.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.StringDictionary}
      description: Error messages tagged by field.
    content.vb: Function ValidateAppointmentEntityAsync(appointmentEntity As AppointmentEntity, cancellationToken As CancellationToken = Nothing) As Task(Of StringDictionary)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.ValidateAppointmentEntityAsync*
- uid: SuperOffice.CRM.Services.IAppointmentAgent.WillSendEmailAsync(SuperOffice.CRM.Services.AppointmentEntity,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.WillSendEmailAsync(SuperOffice.CRM.Services.AppointmentEntity,System.Threading.CancellationToken)
  id: WillSendEmailAsync(SuperOffice.CRM.Services.AppointmentEntity,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: WillSendEmailAsync(AppointmentEntity, CancellationToken)
  nameWithType: IAppointmentAgent.WillSendEmailAsync(AppointmentEntity, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.WillSendEmailAsync(SuperOffice.CRM.Services.AppointmentEntity, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Returns true if the changes will trigger email sending on Save, so you can inform the user.
  example: []
  syntax:
    content: Task<bool> WillSendEmailAsync(AppointmentEntity appointment, CancellationToken cancellationToken = default)
    parameters:
    - id: appointment
      type: SuperOffice.CRM.Services.AppointmentEntity
      description: The appointment carrier with changes made, before saving the changes.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the changes to the appointment and preference settings etc. indicates an email should be sent.
    content.vb: Function WillSendEmailAsync(appointment As AppointmentEntity, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.WillSendEmailAsync*
- uid: SuperOffice.CRM.Services.IAppointmentAgent.AcceptWithSmtpEmailConfirmationAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,SuperOffice.CRM.Services.EMailConnectionInfo,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.AcceptWithSmtpEmailConfirmationAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,SuperOffice.CRM.Services.EMailConnectionInfo,System.Threading.CancellationToken)
  id: AcceptWithSmtpEmailConfirmationAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,SuperOffice.CRM.Services.EMailConnectionInfo,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: AcceptWithSmtpEmailConfirmationAsync(int, RecurrenceUpdateMode, EMailConnectionInfo, CancellationToken)
  nameWithType: IAppointmentAgent.AcceptWithSmtpEmailConfirmationAsync(int, RecurrenceUpdateMode, EMailConnectionInfo, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.AcceptWithSmtpEmailConfirmationAsync(int, SuperOffice.Data.RecurrenceUpdateMode, SuperOffice.CRM.Services.EMailConnectionInfo, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Accepting an appointment invitation and send an email confirmation to the meeting organizer.
  example: []
  syntax:
    content: Task AcceptWithSmtpEmailConfirmationAsync(int appointmentId, RecurrenceUpdateMode updateMode, EMailConnectionInfo smtpEMailConnectionInfo, CancellationToken cancellationToken = default)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointmentId. Both master and child record ids are accepted.
    - id: updateMode
      type: SuperOffice.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: smtpEMailConnectionInfo
      type: SuperOffice.CRM.Services.EMailConnectionInfo
      description: Login information for outgoing smtp email server. Will be null if no login information is relevant.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: Updated AppointmentEntity
    content.vb: Function AcceptWithSmtpEmailConfirmationAsync(appointmentId As Integer, updateMode As RecurrenceUpdateMode, smtpEMailConnectionInfo As EMailConnectionInfo, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IAppointmentAgent.AcceptWithSmtpEmailConfirmationAsync*
  nameWithType.vb: IAppointmentAgent.AcceptWithSmtpEmailConfirmationAsync(Integer, RecurrenceUpdateMode, EMailConnectionInfo, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.AcceptWithSmtpEmailConfirmationAsync(Integer, SuperOffice.Data.RecurrenceUpdateMode, SuperOffice.CRM.Services.EMailConnectionInfo, System.Threading.CancellationToken)
  name.vb: AcceptWithSmtpEmailConfirmationAsync(Integer, RecurrenceUpdateMode, EMailConnectionInfo, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.RejectWithSmtpEmailConfirmationAsync(System.Int32,System.String,SuperOffice.Data.RecurrenceUpdateMode,SuperOffice.CRM.Services.EMailConnectionInfo,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.RejectWithSmtpEmailConfirmationAsync(System.Int32,System.String,SuperOffice.Data.RecurrenceUpdateMode,SuperOffice.CRM.Services.EMailConnectionInfo,System.Threading.CancellationToken)
  id: RejectWithSmtpEmailConfirmationAsync(System.Int32,System.String,SuperOffice.Data.RecurrenceUpdateMode,SuperOffice.CRM.Services.EMailConnectionInfo,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: RejectWithSmtpEmailConfirmationAsync(int, string, RecurrenceUpdateMode, EMailConnectionInfo, CancellationToken)
  nameWithType: IAppointmentAgent.RejectWithSmtpEmailConfirmationAsync(int, string, RecurrenceUpdateMode, EMailConnectionInfo, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.RejectWithSmtpEmailConfirmationAsync(int, string, SuperOffice.Data.RecurrenceUpdateMode, SuperOffice.CRM.Services.EMailConnectionInfo, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Rejecting an appointment invitation and send an email confirmation to the meeting organizer.
  example: []
  syntax:
    content: Task RejectWithSmtpEmailConfirmationAsync(int appointmentId, string rejectReason, RecurrenceUpdateMode updateMode, EMailConnectionInfo smtpEMailConnectionInfo, CancellationToken cancellationToken = default)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointmentId. Both master and child record ids are accepted.
    - id: rejectReason
      type: System.String
      description: The reason the invitation was rejected.
    - id: updateMode
      type: SuperOffice.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: smtpEMailConnectionInfo
      type: SuperOffice.CRM.Services.EMailConnectionInfo
      description: Login information for outgoing smtp email server. Will be null if no login information is relevant.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: Updated AppointmentEntity
    content.vb: Function RejectWithSmtpEmailConfirmationAsync(appointmentId As Integer, rejectReason As String, updateMode As RecurrenceUpdateMode, smtpEMailConnectionInfo As EMailConnectionInfo, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IAppointmentAgent.RejectWithSmtpEmailConfirmationAsync*
  nameWithType.vb: IAppointmentAgent.RejectWithSmtpEmailConfirmationAsync(Integer, String, RecurrenceUpdateMode, EMailConnectionInfo, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.RejectWithSmtpEmailConfirmationAsync(Integer, String, SuperOffice.Data.RecurrenceUpdateMode, SuperOffice.CRM.Services.EMailConnectionInfo, System.Threading.CancellationToken)
  name.vb: RejectWithSmtpEmailConfirmationAsync(Integer, String, RecurrenceUpdateMode, EMailConnectionInfo, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentEmailInvitationAsync(SuperOffice.CRM.Services.AppointmentEntity,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentEmailInvitationAsync(SuperOffice.CRM.Services.AppointmentEntity,System.String,System.String,System.Threading.CancellationToken)
  id: GetAppointmentEmailInvitationAsync(SuperOffice.CRM.Services.AppointmentEntity,System.String,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetAppointmentEmailInvitationAsync(AppointmentEntity, string, string, CancellationToken)
  nameWithType: IAppointmentAgent.GetAppointmentEmailInvitationAsync(AppointmentEntity, string, string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentEmailInvitationAsync(SuperOffice.CRM.Services.AppointmentEntity, string, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Create an EMailEntity (without an ical attachment) with the email sent to participants when the appointment is saved
  example: []
  syntax:
    content: Task<EMailEntity> GetAppointmentEmailInvitationAsync(AppointmentEntity appointment, string templateName, string language, CancellationToken cancellationToken = default)
    parameters:
    - id: appointment
      type: SuperOffice.CRM.Services.AppointmentEntity
      description: The appointment carrier with changes made.
    - id: templateName
      type: System.String
      description: Filename of invitation template
    - id: language
      type: System.String
      description: The desired SO-language for the template
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.EMailEntity}
      description: Email entity with the preview in HTMLBody
    content.vb: Function GetAppointmentEmailInvitationAsync(appointment As AppointmentEntity, templateName As String, language As String, cancellationToken As CancellationToken = Nothing) As Task(Of EMailEntity)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentEmailInvitationAsync*
  nameWithType.vb: IAppointmentAgent.GetAppointmentEmailInvitationAsync(AppointmentEntity, String, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentEmailInvitationAsync(SuperOffice.CRM.Services.AppointmentEntity, String, String, System.Threading.CancellationToken)
  name.vb: GetAppointmentEmailInvitationAsync(AppointmentEntity, String, String, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.SaveWithCustomInvitationAsync(SuperOffice.CRM.Services.AppointmentEntity,SuperOffice.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.CRM.Services.EMailConnectionInfo,SuperOffice.CRM.Services.EMailConnectionInfo,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.SaveWithCustomInvitationAsync(SuperOffice.CRM.Services.AppointmentEntity,SuperOffice.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.CRM.Services.EMailConnectionInfo,SuperOffice.CRM.Services.EMailConnectionInfo,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: SaveWithCustomInvitationAsync(SuperOffice.CRM.Services.AppointmentEntity,SuperOffice.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.CRM.Services.EMailConnectionInfo,SuperOffice.CRM.Services.EMailConnectionInfo,System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: SaveWithCustomInvitationAsync(AppointmentEntity, RecurrenceUpdateMode, bool, EMailConnectionInfo, EMailConnectionInfo, string, string, string, CancellationToken)
  nameWithType: IAppointmentAgent.SaveWithCustomInvitationAsync(AppointmentEntity, RecurrenceUpdateMode, bool, EMailConnectionInfo, EMailConnectionInfo, string, string, string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.SaveWithCustomInvitationAsync(SuperOffice.CRM.Services.AppointmentEntity, SuperOffice.Data.RecurrenceUpdateMode, bool, SuperOffice.CRM.Services.EMailConnectionInfo, SuperOffice.CRM.Services.EMailConnectionInfo, string, string, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Save a booking and send a custom invitation email to participants
  example: []
  syntax:
    content: Task<AppointmentSaveData> SaveWithCustomInvitationAsync(AppointmentEntity appointmentEntity, RecurrenceUpdateMode updateMode, bool sendEmailToParticipants, EMailConnectionInfo smtpEMailConnectionInfo, EMailConnectionInfo imapEMailConnectionInfo, string emailBody, string subject, string templateLanguage, CancellationToken cancellationToken = default)
    parameters:
    - id: appointmentEntity
      type: SuperOffice.CRM.Services.AppointmentEntity
      description: ''
    - id: updateMode
      type: SuperOffice.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: sendEmailToParticipants
      type: System.Boolean
      description: If true, emails will be sent to all participants that is marked with send email flag. If false no mails will be sent even if the send email flag is true.
    - id: smtpEMailConnectionInfo
      type: SuperOffice.CRM.Services.EMailConnectionInfo
      description: Login information for outgoing smtp email server. Will be null if no login information is relevant.
    - id: imapEMailConnectionInfo
      type: SuperOffice.CRM.Services.EMailConnectionInfo
      description: Login information for imap server. Will be null if no login information is relevant.
    - id: emailBody
      type: System.String
      description: The email-body to be used for new invitations
    - id: subject
      type: System.String
      description: The email-subject to be used for new invitations
    - id: templateLanguage
      type: System.String
      description: The template language to use for invitation updates
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.AppointmentSaveData}
      description: Appointment entity and flag for if email was queued to be sent
    content.vb: Function SaveWithCustomInvitationAsync(appointmentEntity As AppointmentEntity, updateMode As RecurrenceUpdateMode, sendEmailToParticipants As Boolean, smtpEMailConnectionInfo As EMailConnectionInfo, imapEMailConnectionInfo As EMailConnectionInfo, emailBody As String, subject As String, templateLanguage As String, cancellationToken As CancellationToken = Nothing) As Task(Of AppointmentSaveData)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.SaveWithCustomInvitationAsync*
  nameWithType.vb: IAppointmentAgent.SaveWithCustomInvitationAsync(AppointmentEntity, RecurrenceUpdateMode, Boolean, EMailConnectionInfo, EMailConnectionInfo, String, String, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.SaveWithCustomInvitationAsync(SuperOffice.CRM.Services.AppointmentEntity, SuperOffice.Data.RecurrenceUpdateMode, Boolean, SuperOffice.CRM.Services.EMailConnectionInfo, SuperOffice.CRM.Services.EMailConnectionInfo, String, String, String, System.Threading.CancellationToken)
  name.vb: SaveWithCustomInvitationAsync(AppointmentEntity, RecurrenceUpdateMode, Boolean, EMailConnectionInfo, EMailConnectionInfo, String, String, String, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.ConvertAppointmentToTaskAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.ConvertAppointmentToTaskAsync(System.Int32,System.Threading.CancellationToken)
  id: ConvertAppointmentToTaskAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: ConvertAppointmentToTaskAsync(int, CancellationToken)
  nameWithType: IAppointmentAgent.ConvertAppointmentToTaskAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.ConvertAppointmentToTaskAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Convert appointment to task if certain criteria are met (participants &lt; 2)
  example: []
  syntax:
    content: Task<AppointmentEntity> ConvertAppointmentToTaskAsync(int appointmentId, CancellationToken cancellationToken = default)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: Appointment ID
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.AppointmentEntity}
      description: Appointment entity
    content.vb: Function ConvertAppointmentToTaskAsync(appointmentId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of AppointmentEntity)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.ConvertAppointmentToTaskAsync*
  nameWithType.vb: IAppointmentAgent.ConvertAppointmentToTaskAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.ConvertAppointmentToTaskAsync(Integer, System.Threading.CancellationToken)
  name.vb: ConvertAppointmentToTaskAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentListAsync(System.Int32[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentListAsync(System.Int32[],System.Threading.CancellationToken)
  id: GetAppointmentListAsync(System.Int32[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetAppointmentListAsync(int[], CancellationToken)
  nameWithType: IAppointmentAgent.GetAppointmentListAsync(int[], CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentListAsync(int[], System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Gets an array of Appointment objects.
  example: []
  syntax:
    content: Task<Appointment[]> GetAppointmentListAsync(int[] appointmentIds, CancellationToken cancellationToken = default)
    parameters:
    - id: appointmentIds
      type: System.Int32[]
      description: The identifiers of the Appointment object
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Appointment[]}
      description: Array of Appointment
    content.vb: Function GetAppointmentListAsync(appointmentIds As Integer(), cancellationToken As CancellationToken = Nothing) As Task(Of Appointment())
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentListAsync*
  nameWithType.vb: IAppointmentAgent.GetAppointmentListAsync(Integer(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentListAsync(Integer(), System.Threading.CancellationToken)
  name.vb: GetAppointmentListAsync(Integer(), CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetMyAppointmentsAsync(System.DateTime,System.DateTime,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetMyAppointmentsAsync(System.DateTime,System.DateTime,System.Int32,System.Threading.CancellationToken)
  id: GetMyAppointmentsAsync(System.DateTime,System.DateTime,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetMyAppointmentsAsync(DateTime, DateTime, int, CancellationToken)
  nameWithType: IAppointmentAgent.GetMyAppointmentsAsync(DateTime, DateTime, int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetMyAppointmentsAsync(System.DateTime, System.DateTime, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments within a time range. The appointments belong to the currently logged on user.
  example: []
  syntax:
    content: Task<Appointment[]> GetMyAppointmentsAsync(DateTime startTime, DateTime endTime, int count, CancellationToken cancellationToken = default)
    parameters:
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetMyAppointmentsAsync(startTime As Date, endTime As Date, count As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Appointment())
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetMyAppointmentsAsync*
  nameWithType.vb: IAppointmentAgent.GetMyAppointmentsAsync(Date, Date, Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetMyAppointmentsAsync(Date, Date, Integer, System.Threading.CancellationToken)
  name.vb: GetMyAppointmentsAsync(Date, Date, Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Threading.CancellationToken)
  id: GetPersonAppointmentsAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetPersonAppointmentsAsync(int, bool, DateTime, DateTime, int, CancellationToken)
  nameWithType: IAppointmentAgent.GetPersonAppointmentsAsync(int, bool, DateTime, DateTime, int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsAsync(int, bool, System.DateTime, System.DateTime, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments within a time range. The appointments belong to the person specified. If the person not is a SuperOffice user (associate) or the logged on user is not allowed to view this persons appointments an exception is thrown.
  example: []
  syntax:
    content: Task<Appointment[]> GetPersonAppointmentsAsync(int personId, bool includeProjectAppointments, DateTime startTime, DateTime endTime, int count, CancellationToken cancellationToken = default)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id of the SuperOffice user (associate).
    - id: includeProjectAppointments
      type: System.Boolean
      description: If true, all appointments that belong to projects where the user is a project member are included as well as the appointments belonging to the person.
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetPersonAppointmentsAsync(personId As Integer, includeProjectAppointments As Boolean, startTime As Date, endTime As Date, count As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Appointment())
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsAsync*
  nameWithType.vb: IAppointmentAgent.GetPersonAppointmentsAsync(Integer, Boolean, Date, Date, Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsAsync(Integer, Boolean, Date, Date, Integer, System.Threading.CancellationToken)
  name.vb: GetPersonAppointmentsAsync(Integer, Boolean, Date, Date, Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetMyDiaryAsync(System.DateTime,System.DateTime,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetMyDiaryAsync(System.DateTime,System.DateTime,System.Int32,System.Threading.CancellationToken)
  id: GetMyDiaryAsync(System.DateTime,System.DateTime,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetMyDiaryAsync(DateTime, DateTime, int, CancellationToken)
  nameWithType: IAppointmentAgent.GetMyDiaryAsync(DateTime, DateTime, int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetMyDiaryAsync(System.DateTime, System.DateTime, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments within a time range. It only returns appointments that would be displayed in the user's diary. The appointments belong to the currently logged on user.
  example: []
  syntax:
    content: Task<Appointment[]> GetMyDiaryAsync(DateTime startTime, DateTime endTime, int count, CancellationToken cancellationToken = default)
    parameters:
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetMyDiaryAsync(startTime As Date, endTime As Date, count As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Appointment())
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetMyDiaryAsync*
  nameWithType.vb: IAppointmentAgent.GetMyDiaryAsync(Date, Date, Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetMyDiaryAsync(Date, Date, Integer, System.Threading.CancellationToken)
  name.vb: GetMyDiaryAsync(Date, Date, Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetMyTasksAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetMyTasksAsync(System.Int32,System.Threading.CancellationToken)
  id: GetMyTasksAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetMyTasksAsync(int, CancellationToken)
  nameWithType: IAppointmentAgent.GetMyTasksAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetMyTasksAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments within a time range. It only returns appointments that would be displayed in the user's task list. The appointments belong to the currently logged on user.
  example: []
  syntax:
    content: Task<Appointment[]> GetMyTasksAsync(int count, CancellationToken cancellationToken = default)
    parameters:
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetMyTasksAsync(count As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Appointment())
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetMyTasksAsync*
  nameWithType.vb: IAppointmentAgent.GetMyTasksAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetMyTasksAsync(Integer, System.Threading.CancellationToken)
  name.vb: GetMyTasksAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonDiaryAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetPersonDiaryAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Threading.CancellationToken)
  id: GetPersonDiaryAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetPersonDiaryAsync(int, DateTime, DateTime, int, CancellationToken)
  nameWithType: IAppointmentAgent.GetPersonDiaryAsync(int, DateTime, DateTime, int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonDiaryAsync(int, System.DateTime, System.DateTime, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments within a time range. It only returns appointments that would be displayed in the user's diary. The appointments belong to the person specified. If the person not is a SuperOffice user (associate) or the logged on user is not allowed to view this persons appointments an exception is thrown.
  example: []
  syntax:
    content: Task<Appointment[]> GetPersonDiaryAsync(int personId, DateTime startTime, DateTime endTime, int count, CancellationToken cancellationToken = default)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id of the SuperOffice user (associate).
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetPersonDiaryAsync(personId As Integer, startTime As Date, endTime As Date, count As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Appointment())
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonDiaryAsync*
  nameWithType.vb: IAppointmentAgent.GetPersonDiaryAsync(Integer, Date, Date, Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonDiaryAsync(Integer, Date, Date, Integer, System.Threading.CancellationToken)
  name.vb: GetPersonDiaryAsync(Integer, Date, Date, Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonTasksAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetPersonTasksAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  id: GetPersonTasksAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetPersonTasksAsync(int, int, CancellationToken)
  nameWithType: IAppointmentAgent.GetPersonTasksAsync(int, int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonTasksAsync(int, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments within a time range. It only returns appointments that would be displayed in the user's task list. The appointments belong to the person specified. If the person not is a SuperOffice user (associate) or the logged on user is not allowed to view this persons appointments an exception is thrown.
  example: []
  syntax:
    content: Task<Appointment[]> GetPersonTasksAsync(int personId, int count, CancellationToken cancellationToken = default)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id of the SuperOffice user (associate).
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetPersonTasksAsync(personId As Integer, count As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Appointment())
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonTasksAsync*
  nameWithType.vb: IAppointmentAgent.GetPersonTasksAsync(Integer, Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonTasksAsync(Integer, Integer, System.Threading.CancellationToken)
  name.vb: GetPersonTasksAsync(Integer, Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTypeAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,SuperOffice.Data.AppointmentType,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTypeAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,SuperOffice.Data.AppointmentType,System.Threading.CancellationToken)
  id: GetPersonAppointmentsByTypeAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,SuperOffice.Data.AppointmentType,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetPersonAppointmentsByTypeAsync(int, bool, DateTime, DateTime, int, AppointmentType, CancellationToken)
  nameWithType: IAppointmentAgent.GetPersonAppointmentsByTypeAsync(int, bool, DateTime, DateTime, int, AppointmentType, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTypeAsync(int, bool, System.DateTime, System.DateTime, int, SuperOffice.Data.AppointmentType, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments of a specific appointment type within a time range. The appointments belong to the person specified.
  example: []
  syntax:
    content: Task<Appointment[]> GetPersonAppointmentsByTypeAsync(int personId, bool includeProjectAppointments, DateTime startTime, DateTime endTime, int count, AppointmentType appointmentType, CancellationToken cancellationToken = default)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id of the SuperOffice user (associate).
    - id: includeProjectAppointments
      type: System.Boolean
      description: If true, all appointments that belong to projects where the user is a project member are included as well as the appointments belonging to the person.
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: appointmentType
      type: SuperOffice.Data.AppointmentType
      description: The appointment type, e.g. inDiary, inChecklist etc.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetPersonAppointmentsByTypeAsync(personId As Integer, includeProjectAppointments As Boolean, startTime As Date, endTime As Date, count As Integer, appointmentType As AppointmentType, cancellationToken As CancellationToken = Nothing) As Task(Of Appointment())
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTypeAsync*
  nameWithType.vb: IAppointmentAgent.GetPersonAppointmentsByTypeAsync(Integer, Boolean, Date, Date, Integer, AppointmentType, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTypeAsync(Integer, Boolean, Date, Date, Integer, SuperOffice.Data.AppointmentType, System.Threading.CancellationToken)
  name.vb: GetPersonAppointmentsByTypeAsync(Integer, Boolean, Date, Date, Integer, AppointmentType, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Threading.CancellationToken)
  id: GetProjectAppointmentsAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetProjectAppointmentsAsync(int, DateTime, DateTime, int, CancellationToken)
  nameWithType: IAppointmentAgent.GetProjectAppointmentsAsync(int, DateTime, DateTime, int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsAsync(int, System.DateTime, System.DateTime, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments within a time range. The appointments belong to the project specified. If the logged on user is not allowed to view this projects appointments an exception is thrown.
  example: []
  syntax:
    content: Task<Appointment[]> GetProjectAppointmentsAsync(int projectId, DateTime startTime, DateTime endTime, int count, CancellationToken cancellationToken = default)
    parameters:
    - id: projectId
      type: System.Int32
      description: The project id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetProjectAppointmentsAsync(projectId As Integer, startTime As Date, endTime As Date, count As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Appointment())
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsAsync*
  nameWithType.vb: IAppointmentAgent.GetProjectAppointmentsAsync(Integer, Date, Date, Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsAsync(Integer, Date, Date, Integer, System.Threading.CancellationToken)
  name.vb: GetProjectAppointmentsAsync(Integer, Date, Date, Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTypeAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.Data.AppointmentType,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTypeAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.Data.AppointmentType,System.Threading.CancellationToken)
  id: GetProjectAppointmentsByTypeAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.Data.AppointmentType,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetProjectAppointmentsByTypeAsync(int, DateTime, DateTime, int, AppointmentType, CancellationToken)
  nameWithType: IAppointmentAgent.GetProjectAppointmentsByTypeAsync(int, DateTime, DateTime, int, AppointmentType, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTypeAsync(int, System.DateTime, System.DateTime, int, SuperOffice.Data.AppointmentType, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments of a specific appointment type within a time range. The appointments belong to the project specified.
  example: []
  syntax:
    content: Task<Appointment[]> GetProjectAppointmentsByTypeAsync(int projectId, DateTime startTime, DateTime endTime, int count, AppointmentType appointmentType, CancellationToken cancellationToken = default)
    parameters:
    - id: projectId
      type: System.Int32
      description: The project id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: appointmentType
      type: SuperOffice.Data.AppointmentType
      description: The appointment type, e.g. inDiary, inChecklist etc.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetProjectAppointmentsByTypeAsync(projectId As Integer, startTime As Date, endTime As Date, count As Integer, appointmentType As AppointmentType, cancellationToken As CancellationToken = Nothing) As Task(Of Appointment())
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTypeAsync*
  nameWithType.vb: IAppointmentAgent.GetProjectAppointmentsByTypeAsync(Integer, Date, Date, Integer, AppointmentType, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTypeAsync(Integer, Date, Date, Integer, SuperOffice.Data.AppointmentType, System.Threading.CancellationToken)
  name.vb: GetProjectAppointmentsByTypeAsync(Integer, Date, Date, Integer, AppointmentType, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Threading.CancellationToken)
  id: GetContactAppointmentsAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetContactAppointmentsAsync(int, DateTime, DateTime, int, CancellationToken)
  nameWithType: IAppointmentAgent.GetContactAppointmentsAsync(int, DateTime, DateTime, int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsAsync(int, System.DateTime, System.DateTime, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments within a time range. The appointments belong to the contact specified. If the logged on user is not allowed to view this persons appointments an exception is thrown.
  example: []
  syntax:
    content: Task<Appointment[]> GetContactAppointmentsAsync(int contactId, DateTime startTime, DateTime endTime, int count, CancellationToken cancellationToken = default)
    parameters:
    - id: contactId
      type: System.Int32
      description: The contact id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetContactAppointmentsAsync(contactId As Integer, startTime As Date, endTime As Date, count As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Appointment())
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsAsync*
  nameWithType.vb: IAppointmentAgent.GetContactAppointmentsAsync(Integer, Date, Date, Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsAsync(Integer, Date, Date, Integer, System.Threading.CancellationToken)
  name.vb: GetContactAppointmentsAsync(Integer, Date, Date, Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTypeAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.Data.AppointmentType,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTypeAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.Data.AppointmentType,System.Threading.CancellationToken)
  id: GetContactAppointmentsByTypeAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.Data.AppointmentType,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetContactAppointmentsByTypeAsync(int, DateTime, DateTime, int, AppointmentType, CancellationToken)
  nameWithType: IAppointmentAgent.GetContactAppointmentsByTypeAsync(int, DateTime, DateTime, int, AppointmentType, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTypeAsync(int, System.DateTime, System.DateTime, int, SuperOffice.Data.AppointmentType, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments of a specific appointment type within a time range. The appointments belong to the contact specified. If the logged on user is not allowed to view this contacts appointments an exception is thrown.
  example: []
  syntax:
    content: Task<Appointment[]> GetContactAppointmentsByTypeAsync(int contactId, DateTime startTime, DateTime endTime, int count, AppointmentType appointmentType, CancellationToken cancellationToken = default)
    parameters:
    - id: contactId
      type: System.Int32
      description: The contact id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: appointmentType
      type: SuperOffice.Data.AppointmentType
      description: The appointment type, e.g. inDiary, inChecklist etc.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetContactAppointmentsByTypeAsync(contactId As Integer, startTime As Date, endTime As Date, count As Integer, appointmentType As AppointmentType, cancellationToken As CancellationToken = Nothing) As Task(Of Appointment())
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTypeAsync*
  nameWithType.vb: IAppointmentAgent.GetContactAppointmentsByTypeAsync(Integer, Date, Date, Integer, AppointmentType, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTypeAsync(Integer, Date, Date, Integer, SuperOffice.Data.AppointmentType, System.Threading.CancellationToken)
  name.vb: GetContactAppointmentsByTypeAsync(Integer, Date, Date, Integer, AppointmentType, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Threading.CancellationToken)
  id: GetProjectMemberAppointmentsAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetProjectMemberAppointmentsAsync(int, DateTime, DateTime, int, CancellationToken)
  nameWithType: IAppointmentAgent.GetProjectMemberAppointmentsAsync(int, DateTime, DateTime, int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsAsync(int, System.DateTime, System.DateTime, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments within a time range. The appointments belong to the projects where the person specified is member.
  example: []
  syntax:
    content: Task<Appointment[]> GetProjectMemberAppointmentsAsync(int personId, DateTime startTime, DateTime endTime, int count, CancellationToken cancellationToken = default)
    parameters:
    - id: personId
      type: System.Int32
      description: The project member's person id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetProjectMemberAppointmentsAsync(personId As Integer, startTime As Date, endTime As Date, count As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Appointment())
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsAsync*
  nameWithType.vb: IAppointmentAgent.GetProjectMemberAppointmentsAsync(Integer, Date, Date, Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsAsync(Integer, Date, Date, Integer, System.Threading.CancellationToken)
  name.vb: GetProjectMemberAppointmentsAsync(Integer, Date, Date, Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTypeAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.Data.AppointmentType,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTypeAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.Data.AppointmentType,System.Threading.CancellationToken)
  id: GetProjectMemberAppointmentsByTypeAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.Data.AppointmentType,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetProjectMemberAppointmentsByTypeAsync(int, DateTime, DateTime, int, AppointmentType, CancellationToken)
  nameWithType: IAppointmentAgent.GetProjectMemberAppointmentsByTypeAsync(int, DateTime, DateTime, int, AppointmentType, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTypeAsync(int, System.DateTime, System.DateTime, int, SuperOffice.Data.AppointmentType, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments of a specific appointment type within a time range. The appointments belong to the projects where the person specified is member.
  example: []
  syntax:
    content: Task<Appointment[]> GetProjectMemberAppointmentsByTypeAsync(int personId, DateTime startTime, DateTime endTime, int count, AppointmentType appointmentType, CancellationToken cancellationToken = default)
    parameters:
    - id: personId
      type: System.Int32
      description: The project member's person id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: appointmentType
      type: SuperOffice.Data.AppointmentType
      description: The appointment type, e.g. inDiary, inChecklist etc.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetProjectMemberAppointmentsByTypeAsync(personId As Integer, startTime As Date, endTime As Date, count As Integer, appointmentType As AppointmentType, cancellationToken As CancellationToken = Nothing) As Task(Of Appointment())
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTypeAsync*
  nameWithType.vb: IAppointmentAgent.GetProjectMemberAppointmentsByTypeAsync(Integer, Date, Date, Integer, AppointmentType, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTypeAsync(Integer, Date, Date, Integer, SuperOffice.Data.AppointmentType, System.Threading.CancellationToken)
  name.vb: GetProjectMemberAppointmentsByTypeAsync(Integer, Date, Date, Integer, AppointmentType, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTaskAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTaskAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Threading.CancellationToken)
  id: GetPersonAppointmentsByTaskAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetPersonAppointmentsByTaskAsync(int, bool, DateTime, DateTime, int, int, CancellationToken)
  nameWithType: IAppointmentAgent.GetPersonAppointmentsByTaskAsync(int, bool, DateTime, DateTime, int, int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTaskAsync(int, bool, System.DateTime, System.DateTime, int, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments of a specific appointment task type within a time range. The appointments belong to the person specified.  Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
  example: []
  syntax:
    content: Task<Appointment[]> GetPersonAppointmentsByTaskAsync(int personId, bool includeProjectAppointments, DateTime startTime, DateTime endTime, int count, int taskId, CancellationToken cancellationToken = default)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id of the SuperOffice user (associate).
    - id: includeProjectAppointments
      type: System.Boolean
      description: If true, all appointments that belong to projects where the user is a project member are included as well as the appointments belonging to the person.
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: taskId
      type: System.Int32
      description: The task id. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetPersonAppointmentsByTaskAsync(personId As Integer, includeProjectAppointments As Boolean, startTime As Date, endTime As Date, count As Integer, taskId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Appointment())
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTaskAsync*
  nameWithType.vb: IAppointmentAgent.GetPersonAppointmentsByTaskAsync(Integer, Boolean, Date, Date, Integer, Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTaskAsync(Integer, Boolean, Date, Date, Integer, Integer, System.Threading.CancellationToken)
  name.vb: GetPersonAppointmentsByTaskAsync(Integer, Boolean, Date, Date, Integer, Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTasksAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTasksAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32[],System.Threading.CancellationToken)
  id: GetPersonAppointmentsByTasksAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetPersonAppointmentsByTasksAsync(int, bool, DateTime, DateTime, int, int[], CancellationToken)
  nameWithType: IAppointmentAgent.GetPersonAppointmentsByTasksAsync(int, bool, DateTime, DateTime, int, int[], CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTasksAsync(int, bool, System.DateTime, System.DateTime, int, int[], System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments from a list of appointment task types within a time range. The appointments belong to the person specified.  Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
  example: []
  syntax:
    content: Task<Appointment[]> GetPersonAppointmentsByTasksAsync(int personId, bool includeProjectAppointments, DateTime startTime, DateTime endTime, int count, int[] taskIds, CancellationToken cancellationToken = default)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id of the SuperOffice user (associate).
    - id: includeProjectAppointments
      type: System.Boolean
      description: If true, all appointments that belong to projects where the user is a project member are included as well as the appointments belonging to the person.
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: taskIds
      type: System.Int32[]
      description: The task ids as an integer array. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetPersonAppointmentsByTasksAsync(personId As Integer, includeProjectAppointments As Boolean, startTime As Date, endTime As Date, count As Integer, taskIds As Integer(), cancellationToken As CancellationToken = Nothing) As Task(Of Appointment())
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTasksAsync*
  nameWithType.vb: IAppointmentAgent.GetPersonAppointmentsByTasksAsync(Integer, Boolean, Date, Date, Integer, Integer(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTasksAsync(Integer, Boolean, Date, Date, Integer, Integer(), System.Threading.CancellationToken)
  name.vb: GetPersonAppointmentsByTasksAsync(Integer, Boolean, Date, Date, Integer, Integer(), CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTaskHeadingAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTaskHeadingAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Threading.CancellationToken)
  id: GetPersonAppointmentsByTaskHeadingAsync(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetPersonAppointmentsByTaskHeadingAsync(int, bool, DateTime, DateTime, int, int, CancellationToken)
  nameWithType: IAppointmentAgent.GetPersonAppointmentsByTaskHeadingAsync(int, bool, DateTime, DateTime, int, int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTaskHeadingAsync(int, bool, System.DateTime, System.DateTime, int, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments of a specific appointment task heading within a time range. The appointments belong to the person specified.  Task represents the different types of activities, like “Phone call”, “Meeting” and so on. The heading represents a grouping or filtering of tasks.
  example: []
  syntax:
    content: Task<Appointment[]> GetPersonAppointmentsByTaskHeadingAsync(int personId, bool includeProjectAppointments, DateTime startTime, DateTime endTime, int count, int taskHeadingId, CancellationToken cancellationToken = default)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id of the SuperOffice user (associate).
    - id: includeProjectAppointments
      type: System.Boolean
      description: If true, all appointments that belong to projects where the user is a project member are included as well as the appointments belonging to the person.
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: taskHeadingId
      type: System.Int32
      description: The task heading id. The heading represents a grouping or filtering of tasks. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetPersonAppointmentsByTaskHeadingAsync(personId As Integer, includeProjectAppointments As Boolean, startTime As Date, endTime As Date, count As Integer, taskHeadingId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Appointment())
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTaskHeadingAsync*
  nameWithType.vb: IAppointmentAgent.GetPersonAppointmentsByTaskHeadingAsync(Integer, Boolean, Date, Date, Integer, Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTaskHeadingAsync(Integer, Boolean, Date, Date, Integer, Integer, System.Threading.CancellationToken)
  name.vb: GetPersonAppointmentsByTaskHeadingAsync(Integer, Boolean, Date, Date, Integer, Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTaskAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTaskAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Threading.CancellationToken)
  id: GetProjectAppointmentsByTaskAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetProjectAppointmentsByTaskAsync(int, DateTime, DateTime, int, int, CancellationToken)
  nameWithType: IAppointmentAgent.GetProjectAppointmentsByTaskAsync(int, DateTime, DateTime, int, int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTaskAsync(int, System.DateTime, System.DateTime, int, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments of a specific appointment task type within a time range. The appointments belong to the project specified.  Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
  example: []
  syntax:
    content: Task<Appointment[]> GetProjectAppointmentsByTaskAsync(int projectId, DateTime startTime, DateTime endTime, int count, int taskId, CancellationToken cancellationToken = default)
    parameters:
    - id: projectId
      type: System.Int32
      description: The project id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: taskId
      type: System.Int32
      description: The task id. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetProjectAppointmentsByTaskAsync(projectId As Integer, startTime As Date, endTime As Date, count As Integer, taskId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Appointment())
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTaskAsync*
  nameWithType.vb: IAppointmentAgent.GetProjectAppointmentsByTaskAsync(Integer, Date, Date, Integer, Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTaskAsync(Integer, Date, Date, Integer, Integer, System.Threading.CancellationToken)
  name.vb: GetProjectAppointmentsByTaskAsync(Integer, Date, Date, Integer, Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTasksAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTasksAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[],System.Threading.CancellationToken)
  id: GetProjectAppointmentsByTasksAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetProjectAppointmentsByTasksAsync(int, DateTime, DateTime, int, int[], CancellationToken)
  nameWithType: IAppointmentAgent.GetProjectAppointmentsByTasksAsync(int, DateTime, DateTime, int, int[], CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTasksAsync(int, System.DateTime, System.DateTime, int, int[], System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments matching the list of appointment task types within a time range. The appointments belong to the project specified.  Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
  example: []
  syntax:
    content: Task<Appointment[]> GetProjectAppointmentsByTasksAsync(int projectId, DateTime startTime, DateTime endTime, int count, int[] taskIds, CancellationToken cancellationToken = default)
    parameters:
    - id: projectId
      type: System.Int32
      description: The project id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: taskIds
      type: System.Int32[]
      description: The task ids as an integer array. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetProjectAppointmentsByTasksAsync(projectId As Integer, startTime As Date, endTime As Date, count As Integer, taskIds As Integer(), cancellationToken As CancellationToken = Nothing) As Task(Of Appointment())
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTasksAsync*
  nameWithType.vb: IAppointmentAgent.GetProjectAppointmentsByTasksAsync(Integer, Date, Date, Integer, Integer(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTasksAsync(Integer, Date, Date, Integer, Integer(), System.Threading.CancellationToken)
  name.vb: GetProjectAppointmentsByTasksAsync(Integer, Date, Date, Integer, Integer(), CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTaskHeadingAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTaskHeadingAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Threading.CancellationToken)
  id: GetProjectAppointmentsByTaskHeadingAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetProjectAppointmentsByTaskHeadingAsync(int, DateTime, DateTime, int, int, CancellationToken)
  nameWithType: IAppointmentAgent.GetProjectAppointmentsByTaskHeadingAsync(int, DateTime, DateTime, int, int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTaskHeadingAsync(int, System.DateTime, System.DateTime, int, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments of a specific appointment task heading within a time range. The appointments belong to the project specified.  Task represents the different types of activities, like “Phone call”, “Meeting” and so on. The heading represents a grouping or filtering of tasks.
  example: []
  syntax:
    content: Task<Appointment[]> GetProjectAppointmentsByTaskHeadingAsync(int projectId, DateTime startTime, DateTime endTime, int count, int taskHeadingId, CancellationToken cancellationToken = default)
    parameters:
    - id: projectId
      type: System.Int32
      description: The project id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: taskHeadingId
      type: System.Int32
      description: The task heading id. The heading represents a grouping or filtering of tasks. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetProjectAppointmentsByTaskHeadingAsync(projectId As Integer, startTime As Date, endTime As Date, count As Integer, taskHeadingId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Appointment())
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTaskHeadingAsync*
  nameWithType.vb: IAppointmentAgent.GetProjectAppointmentsByTaskHeadingAsync(Integer, Date, Date, Integer, Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTaskHeadingAsync(Integer, Date, Date, Integer, Integer, System.Threading.CancellationToken)
  name.vb: GetProjectAppointmentsByTaskHeadingAsync(Integer, Date, Date, Integer, Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTaskAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTaskAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Threading.CancellationToken)
  id: GetProjectMemberAppointmentsByTaskAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetProjectMemberAppointmentsByTaskAsync(int, DateTime, DateTime, int, int, CancellationToken)
  nameWithType: IAppointmentAgent.GetProjectMemberAppointmentsByTaskAsync(int, DateTime, DateTime, int, int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTaskAsync(int, System.DateTime, System.DateTime, int, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments of a specific appointment task type within a time range. The appointments belong to the projects where the person specified is member. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
  example: []
  syntax:
    content: Task<Appointment[]> GetProjectMemberAppointmentsByTaskAsync(int personId, DateTime startTime, DateTime endTime, int count, int taskId, CancellationToken cancellationToken = default)
    parameters:
    - id: personId
      type: System.Int32
      description: The project member's person id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: taskId
      type: System.Int32
      description: The task id. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetProjectMemberAppointmentsByTaskAsync(personId As Integer, startTime As Date, endTime As Date, count As Integer, taskId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Appointment())
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTaskAsync*
  nameWithType.vb: IAppointmentAgent.GetProjectMemberAppointmentsByTaskAsync(Integer, Date, Date, Integer, Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTaskAsync(Integer, Date, Date, Integer, Integer, System.Threading.CancellationToken)
  name.vb: GetProjectMemberAppointmentsByTaskAsync(Integer, Date, Date, Integer, Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTasksAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTasksAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[],System.Threading.CancellationToken)
  id: GetProjectMemberAppointmentsByTasksAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetProjectMemberAppointmentsByTasksAsync(int, DateTime, DateTime, int, int[], CancellationToken)
  nameWithType: IAppointmentAgent.GetProjectMemberAppointmentsByTasksAsync(int, DateTime, DateTime, int, int[], CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTasksAsync(int, System.DateTime, System.DateTime, int, int[], System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments matching a set of appointment task types within a time range. The appointments belong to the projects where the person specified is member. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
  example: []
  syntax:
    content: Task<Appointment[]> GetProjectMemberAppointmentsByTasksAsync(int personId, DateTime startTime, DateTime endTime, int count, int[] taskIds, CancellationToken cancellationToken = default)
    parameters:
    - id: personId
      type: System.Int32
      description: The project member's person id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: taskIds
      type: System.Int32[]
      description: The task ids as an integer array. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetProjectMemberAppointmentsByTasksAsync(personId As Integer, startTime As Date, endTime As Date, count As Integer, taskIds As Integer(), cancellationToken As CancellationToken = Nothing) As Task(Of Appointment())
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTasksAsync*
  nameWithType.vb: IAppointmentAgent.GetProjectMemberAppointmentsByTasksAsync(Integer, Date, Date, Integer, Integer(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTasksAsync(Integer, Date, Date, Integer, Integer(), System.Threading.CancellationToken)
  name.vb: GetProjectMemberAppointmentsByTasksAsync(Integer, Date, Date, Integer, Integer(), CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTaskHeadingAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTaskHeadingAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Threading.CancellationToken)
  id: GetProjectMemberAppointmentsByTaskHeadingAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetProjectMemberAppointmentsByTaskHeadingAsync(int, DateTime, DateTime, int, int, CancellationToken)
  nameWithType: IAppointmentAgent.GetProjectMemberAppointmentsByTaskHeadingAsync(int, DateTime, DateTime, int, int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTaskHeadingAsync(int, System.DateTime, System.DateTime, int, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments of a specific appointment task heading within a time range. The appointments belong to the projects where the person specified is member. Task represents the different types of activities, like “Phone call”, “Meeting” and so on. The heading represents a grouping or filtering of tasks.
  example: []
  syntax:
    content: Task<Appointment[]> GetProjectMemberAppointmentsByTaskHeadingAsync(int personId, DateTime startTime, DateTime endTime, int count, int taskHeadingId, CancellationToken cancellationToken = default)
    parameters:
    - id: personId
      type: System.Int32
      description: The project member's person id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: taskHeadingId
      type: System.Int32
      description: The task heading id. The heading represents a grouping or filtering of tasks. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetProjectMemberAppointmentsByTaskHeadingAsync(personId As Integer, startTime As Date, endTime As Date, count As Integer, taskHeadingId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Appointment())
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTaskHeadingAsync*
  nameWithType.vb: IAppointmentAgent.GetProjectMemberAppointmentsByTaskHeadingAsync(Integer, Date, Date, Integer, Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTaskHeadingAsync(Integer, Date, Date, Integer, Integer, System.Threading.CancellationToken)
  name.vb: GetProjectMemberAppointmentsByTaskHeadingAsync(Integer, Date, Date, Integer, Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTaskAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTaskAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Threading.CancellationToken)
  id: GetContactAppointmentsByTaskAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetContactAppointmentsByTaskAsync(int, DateTime, DateTime, int, int, CancellationToken)
  nameWithType: IAppointmentAgent.GetContactAppointmentsByTaskAsync(int, DateTime, DateTime, int, int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTaskAsync(int, System.DateTime, System.DateTime, int, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments of a specific appointment task type within a time range. The appointments belong to the contact specified. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
  example: []
  syntax:
    content: Task<Appointment[]> GetContactAppointmentsByTaskAsync(int contactId, DateTime startTime, DateTime endTime, int count, int taskId, CancellationToken cancellationToken = default)
    parameters:
    - id: contactId
      type: System.Int32
      description: The contact id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: taskId
      type: System.Int32
      description: The task id. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetContactAppointmentsByTaskAsync(contactId As Integer, startTime As Date, endTime As Date, count As Integer, taskId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Appointment())
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTaskAsync*
  nameWithType.vb: IAppointmentAgent.GetContactAppointmentsByTaskAsync(Integer, Date, Date, Integer, Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTaskAsync(Integer, Date, Date, Integer, Integer, System.Threading.CancellationToken)
  name.vb: GetContactAppointmentsByTaskAsync(Integer, Date, Date, Integer, Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTasksAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTasksAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[],System.Threading.CancellationToken)
  id: GetContactAppointmentsByTasksAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetContactAppointmentsByTasksAsync(int, DateTime, DateTime, int, int[], CancellationToken)
  nameWithType: IAppointmentAgent.GetContactAppointmentsByTasksAsync(int, DateTime, DateTime, int, int[], CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTasksAsync(int, System.DateTime, System.DateTime, int, int[], System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments belonging to an array of appointment task types within a time range. The appointments belong to the contact specified. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
  example: []
  syntax:
    content: Task<Appointment[]> GetContactAppointmentsByTasksAsync(int contactId, DateTime startTime, DateTime endTime, int count, int[] taskIds, CancellationToken cancellationToken = default)
    parameters:
    - id: contactId
      type: System.Int32
      description: The contact id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: taskIds
      type: System.Int32[]
      description: The task ids as an integer array. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetContactAppointmentsByTasksAsync(contactId As Integer, startTime As Date, endTime As Date, count As Integer, taskIds As Integer(), cancellationToken As CancellationToken = Nothing) As Task(Of Appointment())
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTasksAsync*
  nameWithType.vb: IAppointmentAgent.GetContactAppointmentsByTasksAsync(Integer, Date, Date, Integer, Integer(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTasksAsync(Integer, Date, Date, Integer, Integer(), System.Threading.CancellationToken)
  name.vb: GetContactAppointmentsByTasksAsync(Integer, Date, Date, Integer, Integer(), CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTaskHeadingAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTaskHeadingAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Threading.CancellationToken)
  id: GetContactAppointmentsByTaskHeadingAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetContactAppointmentsByTaskHeadingAsync(int, DateTime, DateTime, int, int, CancellationToken)
  nameWithType: IAppointmentAgent.GetContactAppointmentsByTaskHeadingAsync(int, DateTime, DateTime, int, int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTaskHeadingAsync(int, System.DateTime, System.DateTime, int, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments of a specific appointment task heading within a time range. The appointments belong to the contact specified. Task represents the different types of activities, like “Phone call”, “Meeting” and so on. The heading represents a grouping or filtering of tasks.
  example: []
  syntax:
    content: Task<Appointment[]> GetContactAppointmentsByTaskHeadingAsync(int contactId, DateTime startTime, DateTime endTime, int count, int taskHeadingId, CancellationToken cancellationToken = default)
    parameters:
    - id: contactId
      type: System.Int32
      description: The contact id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: taskHeadingId
      type: System.Int32
      description: The task heading id. The heading represents a grouping or filtering of tasks. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetContactAppointmentsByTaskHeadingAsync(contactId As Integer, startTime As Date, endTime As Date, count As Integer, taskHeadingId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Appointment())
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTaskHeadingAsync*
  nameWithType.vb: IAppointmentAgent.GetContactAppointmentsByTaskHeadingAsync(Integer, Date, Date, Integer, Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTaskHeadingAsync(Integer, Date, Date, Integer, Integer, System.Threading.CancellationToken)
  name.vb: GetContactAppointmentsByTaskHeadingAsync(Integer, Date, Date, Integer, Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedAppointmentAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedAppointmentAsync(System.Int32,System.Threading.CancellationToken)
  id: GetPublishedAppointmentAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetPublishedAppointmentAsync(int, CancellationToken)
  nameWithType: IAppointmentAgent.GetPublishedAppointmentAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedAppointmentAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get published appointment by appointment id.
  example: []
  syntax:
    content: Task<Appointment> GetPublishedAppointmentAsync(int appointmentId, CancellationToken cancellationToken = default)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointment id
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Appointment}
      description: Appointment
    content.vb: Function GetPublishedAppointmentAsync(appointmentId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Appointment)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedAppointmentAsync*
  nameWithType.vb: IAppointmentAgent.GetPublishedAppointmentAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedAppointmentAsync(Integer, System.Threading.CancellationToken)
  name.vb: GetPublishedAppointmentAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedAppointmentsAsync(System.Int32[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedAppointmentsAsync(System.Int32[],System.Threading.CancellationToken)
  id: GetPublishedAppointmentsAsync(System.Int32[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetPublishedAppointmentsAsync(int[], CancellationToken)
  nameWithType: IAppointmentAgent.GetPublishedAppointmentsAsync(int[], CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedAppointmentsAsync(int[], System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get published appointments by appointment ids.
  example: []
  syntax:
    content: Task<Appointment[]> GetPublishedAppointmentsAsync(int[] appointmentIds, CancellationToken cancellationToken = default)
    parameters:
    - id: appointmentIds
      type: System.Int32[]
      description: The array of appointment ids
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Appointment[]}
      description: Array of Appointment
    content.vb: Function GetPublishedAppointmentsAsync(appointmentIds As Integer(), cancellationToken As CancellationToken = Nothing) As Task(Of Appointment())
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedAppointmentsAsync*
  nameWithType.vb: IAppointmentAgent.GetPublishedAppointmentsAsync(Integer(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedAppointmentsAsync(Integer(), System.Threading.CancellationToken)
  name.vb: GetPublishedAppointmentsAsync(Integer(), CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetMyPublishedAppointmentsAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetMyPublishedAppointmentsAsync(System.Threading.CancellationToken)
  id: GetMyPublishedAppointmentsAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetMyPublishedAppointmentsAsync(CancellationToken)
  nameWithType: IAppointmentAgent.GetMyPublishedAppointmentsAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetMyPublishedAppointmentsAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get published appointments from the logged in user.
  example: []
  syntax:
    content: Task<Appointment[]> GetMyPublishedAppointmentsAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Appointment[]}
      description: Appointments
    content.vb: Function GetMyPublishedAppointmentsAsync(cancellationToken As CancellationToken = Nothing) As Task(Of Appointment())
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetMyPublishedAppointmentsAsync*
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedProjectAppointmentsAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedProjectAppointmentsAsync(System.Int32,System.Threading.CancellationToken)
  id: GetPublishedProjectAppointmentsAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetPublishedProjectAppointmentsAsync(int, CancellationToken)
  nameWithType: IAppointmentAgent.GetPublishedProjectAppointmentsAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedProjectAppointmentsAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get published appointments by project id.
  example: []
  syntax:
    content: Task<Appointment[]> GetPublishedProjectAppointmentsAsync(int projectId, CancellationToken cancellationToken = default)
    parameters:
    - id: projectId
      type: System.Int32
      description: The project id
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Appointment[]}
      description: Array of Appointment
    content.vb: Function GetPublishedProjectAppointmentsAsync(projectId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Appointment())
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedProjectAppointmentsAsync*
  nameWithType.vb: IAppointmentAgent.GetPublishedProjectAppointmentsAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedProjectAppointmentsAsync(Integer, System.Threading.CancellationToken)
  name.vb: GetPublishedProjectAppointmentsAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentsByTaskHeadingAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentsByTaskHeadingAsync(System.Int32,System.Threading.CancellationToken)
  id: GetAppointmentsByTaskHeadingAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetAppointmentsByTaskHeadingAsync(int, CancellationToken)
  nameWithType: IAppointmentAgent.GetAppointmentsByTaskHeadingAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentsByTaskHeadingAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns appointments of a specific appointment task heading. Task represents the different types of activities, like “Phone call”, “Meeting” and so on. The heading represents a grouping or filtering of tasks.
  example: []
  syntax:
    content: Task<Appointment[]> GetAppointmentsByTaskHeadingAsync(int taskHeadingId, CancellationToken cancellationToken = default)
    parameters:
    - id: taskHeadingId
      type: System.Int32
      description: The task heading id. The heading represents a grouping or filtering of tasks. Task represents the different types of activities, like “Phone call”, “Meeting” and so on
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Appointment[]}
      description: Array of Appointments.
    content.vb: Function GetAppointmentsByTaskHeadingAsync(taskHeadingId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Appointment())
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentsByTaskHeadingAsync*
  nameWithType.vb: IAppointmentAgent.GetAppointmentsByTaskHeadingAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentsByTaskHeadingAsync(Integer, System.Threading.CancellationToken)
  name.vb: GetAppointmentsByTaskHeadingAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetAssociateDiaryAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetAssociateDiaryAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Threading.CancellationToken)
  id: GetAssociateDiaryAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetAssociateDiaryAsync(int, DateTime, DateTime, int, CancellationToken)
  nameWithType: IAppointmentAgent.GetAssociateDiaryAsync(int, DateTime, DateTime, int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetAssociateDiaryAsync(int, System.DateTime, System.DateTime, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: ''
  example: []
  syntax:
    content: Task<Appointment[]> GetAssociateDiaryAsync(int associateId, DateTime startTime, DateTime endTime, int count, CancellationToken cancellationToken = default)
    parameters:
    - id: associateId
      type: System.Int32
      description: ''
    - id: startTime
      type: System.DateTime
      description: ''
    - id: endTime
      type: System.DateTime
      description: ''
    - id: count
      type: System.Int32
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Appointment[]}
      description: ''
    content.vb: Function GetAssociateDiaryAsync(associateId As Integer, startTime As Date, endTime As Date, count As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Appointment())
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetAssociateDiaryAsync*
  nameWithType.vb: IAppointmentAgent.GetAssociateDiaryAsync(Integer, Date, Date, Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetAssociateDiaryAsync(Integer, Date, Date, Integer, System.Threading.CancellationToken)
  name.vb: GetAssociateDiaryAsync(Integer, Date, Date, Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetDiaryByGroupAsync(System.Int32,System.Int32,System.DateTime,System.DateTime,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetDiaryByGroupAsync(System.Int32,System.Int32,System.DateTime,System.DateTime,System.Int32,System.Threading.CancellationToken)
  id: GetDiaryByGroupAsync(System.Int32,System.Int32,System.DateTime,System.DateTime,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetDiaryByGroupAsync(int, int, DateTime, DateTime, int, CancellationToken)
  nameWithType: IAppointmentAgent.GetDiaryByGroupAsync(int, int, DateTime, DateTime, int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetDiaryByGroupAsync(int, int, System.DateTime, System.DateTime, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: ''
  example: []
  syntax:
    content: Task<Appointment[]> GetDiaryByGroupAsync(int groupId, int groupType, DateTime startTime, DateTime endTime, int count, CancellationToken cancellationToken = default)
    parameters:
    - id: groupId
      type: System.Int32
      description: ''
    - id: groupType
      type: System.Int32
      description: ''
    - id: startTime
      type: System.DateTime
      description: ''
    - id: endTime
      type: System.DateTime
      description: ''
    - id: count
      type: System.Int32
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Appointment[]}
      description: ''
    content.vb: Function GetDiaryByGroupAsync(groupId As Integer, groupType As Integer, startTime As Date, endTime As Date, count As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Appointment())
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetDiaryByGroupAsync*
  nameWithType.vb: IAppointmentAgent.GetDiaryByGroupAsync(Integer, Integer, Date, Date, Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetDiaryByGroupAsync(Integer, Integer, Date, Date, Integer, System.Threading.CancellationToken)
  name.vb: GetDiaryByGroupAsync(Integer, Integer, Date, Date, Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointmentAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointmentAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken)
  id: UpdateAppointmentAsync(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: UpdateAppointmentAsync(int, DateTime, DateTime, int, int, int, CancellationToken)
  nameWithType: IAppointmentAgent.UpdateAppointmentAsync(int, DateTime, DateTime, int, int, int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointmentAsync(int, System.DateTime, System.DateTime, int, int, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Updates an appointment record.
  example: []
  syntax:
    content: Task<Appointment> UpdateAppointmentAsync(int id, DateTime startTime, DateTime endTime, int status, int type, int associateId, CancellationToken cancellationToken = default)
    parameters:
    - id: id
      type: System.Int32
      description: ''
    - id: startTime
      type: System.DateTime
      description: ''
    - id: endTime
      type: System.DateTime
      description: ''
    - id: status
      type: System.Int32
      description: ''
    - id: type
      type: System.Int32
      description: ''
    - id: associateId
      type: System.Int32
      description: The appointment owner's id (associate id)
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Appointment}
      description: ''
    content.vb: Function UpdateAppointmentAsync(id As Integer, startTime As Date, endTime As Date, status As Integer, type As Integer, associateId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Appointment)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointmentAsync*
  nameWithType.vb: IAppointmentAgent.UpdateAppointmentAsync(Integer, Date, Date, Integer, Integer, Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointmentAsync(Integer, Date, Date, Integer, Integer, Integer, System.Threading.CancellationToken)
  name.vb: UpdateAppointmentAsync(Integer, Date, Date, Integer, Integer, Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointmentWithModeAsync(System.Int32,System.DateTime,System.DateTime,SuperOffice.Data.AppointmentStatus,SuperOffice.Data.AppointmentType,System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointmentWithModeAsync(System.Int32,System.DateTime,System.DateTime,SuperOffice.Data.AppointmentStatus,SuperOffice.Data.AppointmentType,System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  id: UpdateAppointmentWithModeAsync(System.Int32,System.DateTime,System.DateTime,SuperOffice.Data.AppointmentStatus,SuperOffice.Data.AppointmentType,System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: UpdateAppointmentWithModeAsync(int, DateTime, DateTime, AppointmentStatus, AppointmentType, int, RecurrenceUpdateMode, CancellationToken)
  nameWithType: IAppointmentAgent.UpdateAppointmentWithModeAsync(int, DateTime, DateTime, AppointmentStatus, AppointmentType, int, RecurrenceUpdateMode, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointmentWithModeAsync(int, System.DateTime, System.DateTime, SuperOffice.Data.AppointmentStatus, SuperOffice.Data.AppointmentType, int, SuperOffice.Data.RecurrenceUpdateMode, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Updates an appointment record, taking the given recurrence update mode into account.
  example: []
  syntax:
    content: Task<Appointment> UpdateAppointmentWithModeAsync(int id, DateTime startTime, DateTime endTime, AppointmentStatus status, AppointmentType type, int associateId, RecurrenceUpdateMode updateMode, CancellationToken cancellationToken = default)
    parameters:
    - id: id
      type: System.Int32
      description: ''
    - id: startTime
      type: System.DateTime
      description: ''
    - id: endTime
      type: System.DateTime
      description: ''
    - id: status
      type: SuperOffice.Data.AppointmentStatus
      description: ''
    - id: type
      type: SuperOffice.Data.AppointmentType
      description: ''
    - id: associateId
      type: System.Int32
      description: The appointment owner's id (associate id)
    - id: updateMode
      type: SuperOffice.Data.RecurrenceUpdateMode
      description: Update mode for recurrence.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Appointment}
      description: ''
    content.vb: Function UpdateAppointmentWithModeAsync(id As Integer, startTime As Date, endTime As Date, status As AppointmentStatus, type As AppointmentType, associateId As Integer, updateMode As RecurrenceUpdateMode, cancellationToken As CancellationToken = Nothing) As Task(Of Appointment)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointmentWithModeAsync*
  nameWithType.vb: IAppointmentAgent.UpdateAppointmentWithModeAsync(Integer, Date, Date, AppointmentStatus, AppointmentType, Integer, RecurrenceUpdateMode, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointmentWithModeAsync(Integer, Date, Date, SuperOffice.Data.AppointmentStatus, SuperOffice.Data.AppointmentType, Integer, SuperOffice.Data.RecurrenceUpdateMode, System.Threading.CancellationToken)
  name.vb: UpdateAppointmentWithModeAsync(Integer, Date, Date, AppointmentStatus, AppointmentType, Integer, RecurrenceUpdateMode, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointmentWithModeAndEmailAsync(System.Int32,System.DateTime,System.DateTime,SuperOffice.Data.AppointmentStatus,SuperOffice.Data.AppointmentType,System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.CRM.Services.EMailConnectionInfo,SuperOffice.CRM.Services.EMailConnectionInfo,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointmentWithModeAndEmailAsync(System.Int32,System.DateTime,System.DateTime,SuperOffice.Data.AppointmentStatus,SuperOffice.Data.AppointmentType,System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.CRM.Services.EMailConnectionInfo,SuperOffice.CRM.Services.EMailConnectionInfo,System.Threading.CancellationToken)
  id: UpdateAppointmentWithModeAndEmailAsync(System.Int32,System.DateTime,System.DateTime,SuperOffice.Data.AppointmentStatus,SuperOffice.Data.AppointmentType,System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.CRM.Services.EMailConnectionInfo,SuperOffice.CRM.Services.EMailConnectionInfo,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: UpdateAppointmentWithModeAndEmailAsync(int, DateTime, DateTime, AppointmentStatus, AppointmentType, int, RecurrenceUpdateMode, bool, EMailConnectionInfo, EMailConnectionInfo, CancellationToken)
  nameWithType: IAppointmentAgent.UpdateAppointmentWithModeAndEmailAsync(int, DateTime, DateTime, AppointmentStatus, AppointmentType, int, RecurrenceUpdateMode, bool, EMailConnectionInfo, EMailConnectionInfo, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointmentWithModeAndEmailAsync(int, System.DateTime, System.DateTime, SuperOffice.Data.AppointmentStatus, SuperOffice.Data.AppointmentType, int, SuperOffice.Data.RecurrenceUpdateMode, bool, SuperOffice.CRM.Services.EMailConnectionInfo, SuperOffice.CRM.Services.EMailConnectionInfo, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Updates an appointment record, taking the given recurrence update mode into account, possibly sending notification emails.
  example: []
  syntax:
    content: Task<Appointment> UpdateAppointmentWithModeAndEmailAsync(int id, DateTime startTime, DateTime endTime, AppointmentStatus status, AppointmentType type, int associateId, RecurrenceUpdateMode updateMode, bool sendEmailToParticipants, EMailConnectionInfo smtpEMailConnectionInfo, EMailConnectionInfo imapEMailConnectionInfo, CancellationToken cancellationToken = default)
    parameters:
    - id: id
      type: System.Int32
      description: ''
    - id: startTime
      type: System.DateTime
      description: ''
    - id: endTime
      type: System.DateTime
      description: ''
    - id: status
      type: SuperOffice.Data.AppointmentStatus
      description: ''
    - id: type
      type: SuperOffice.Data.AppointmentType
      description: ''
    - id: associateId
      type: System.Int32
      description: The appointment owner's id (associate id)
    - id: updateMode
      type: SuperOffice.Data.RecurrenceUpdateMode
      description: Update mode for recurrence.
    - id: sendEmailToParticipants
      type: System.Boolean
      description: If true, emails will be sent to all participants that is marked with send email flag if deemed necessary. If false no mails will be sent even if the send email flag is true.
    - id: smtpEMailConnectionInfo
      type: SuperOffice.CRM.Services.EMailConnectionInfo
      description: Login information for outgoing smtp email server. Will be null if no login information is relevant.
    - id: imapEMailConnectionInfo
      type: SuperOffice.CRM.Services.EMailConnectionInfo
      description: Login information for imap server. Will be null if no login information is relevant.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Appointment}
      description: ''
    content.vb: Function UpdateAppointmentWithModeAndEmailAsync(id As Integer, startTime As Date, endTime As Date, status As AppointmentStatus, type As AppointmentType, associateId As Integer, updateMode As RecurrenceUpdateMode, sendEmailToParticipants As Boolean, smtpEMailConnectionInfo As EMailConnectionInfo, imapEMailConnectionInfo As EMailConnectionInfo, cancellationToken As CancellationToken = Nothing) As Task(Of Appointment)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointmentWithModeAndEmailAsync*
  nameWithType.vb: IAppointmentAgent.UpdateAppointmentWithModeAndEmailAsync(Integer, Date, Date, AppointmentStatus, AppointmentType, Integer, RecurrenceUpdateMode, Boolean, EMailConnectionInfo, EMailConnectionInfo, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointmentWithModeAndEmailAsync(Integer, Date, Date, SuperOffice.Data.AppointmentStatus, SuperOffice.Data.AppointmentType, Integer, SuperOffice.Data.RecurrenceUpdateMode, Boolean, SuperOffice.CRM.Services.EMailConnectionInfo, SuperOffice.CRM.Services.EMailConnectionInfo, System.Threading.CancellationToken)
  name.vb: UpdateAppointmentWithModeAndEmailAsync(Integer, Date, Date, AppointmentStatus, AppointmentType, Integer, RecurrenceUpdateMode, Boolean, EMailConnectionInfo, EMailConnectionInfo, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetAssociatesDiaryAsync(System.Int32[],System.DateTime,System.DateTime,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetAssociatesDiaryAsync(System.Int32[],System.DateTime,System.DateTime,System.Threading.CancellationToken)
  id: GetAssociatesDiaryAsync(System.Int32[],System.DateTime,System.DateTime,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetAssociatesDiaryAsync(int[], DateTime, DateTime, CancellationToken)
  nameWithType: IAppointmentAgent.GetAssociatesDiaryAsync(int[], DateTime, DateTime, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetAssociatesDiaryAsync(int[], System.DateTime, System.DateTime, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Fetch appointments for given associates
  example: []
  syntax:
    content: Task<Appointment[]> GetAssociatesDiaryAsync(int[] associateIds, DateTime startTime, DateTime endTime, CancellationToken cancellationToken = default)
    parameters:
    - id: associateIds
      type: System.Int32[]
      description: ''
    - id: startTime
      type: System.DateTime
      description: ''
    - id: endTime
      type: System.DateTime
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Appointment[]}
      description: ''
    content.vb: Function GetAssociatesDiaryAsync(associateIds As Integer(), startTime As Date, endTime As Date, cancellationToken As CancellationToken = Nothing) As Task(Of Appointment())
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetAssociatesDiaryAsync*
  nameWithType.vb: IAppointmentAgent.GetAssociatesDiaryAsync(Integer(), Date, Date, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetAssociatesDiaryAsync(Integer(), Date, Date, System.Threading.CancellationToken)
  name.vb: GetAssociatesDiaryAsync(Integer(), Date, Date, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetAssociatesDiaryInfoAsync(System.Int32[],System.DateTime,System.DateTime,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetAssociatesDiaryInfoAsync(System.Int32[],System.DateTime,System.DateTime,System.Threading.CancellationToken)
  id: GetAssociatesDiaryInfoAsync(System.Int32[],System.DateTime,System.DateTime,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetAssociatesDiaryInfoAsync(int[], DateTime, DateTime, CancellationToken)
  nameWithType: IAppointmentAgent.GetAssociatesDiaryInfoAsync(int[], DateTime, DateTime, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetAssociatesDiaryInfoAsync(int[], System.DateTime, System.DateTime, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Fetch appointment info for given associates
  example: []
  syntax:
    content: Task<AppointmentInfo[]> GetAssociatesDiaryInfoAsync(int[] associateIds, DateTime startTime, DateTime endTime, CancellationToken cancellationToken = default)
    parameters:
    - id: associateIds
      type: System.Int32[]
      description: ''
    - id: startTime
      type: System.DateTime
      description: ''
    - id: endTime
      type: System.DateTime
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.AppointmentInfo[]}
      description: ''
    content.vb: Function GetAssociatesDiaryInfoAsync(associateIds As Integer(), startTime As Date, endTime As Date, cancellationToken As CancellationToken = Nothing) As Task(Of AppointmentInfo())
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetAssociatesDiaryInfoAsync*
  nameWithType.vb: IAppointmentAgent.GetAssociatesDiaryInfoAsync(Integer(), Date, Date, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetAssociatesDiaryInfoAsync(Integer(), Date, Date, System.Threading.CancellationToken)
  name.vb: GetAssociatesDiaryInfoAsync(Integer(), Date, Date, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentRecordsAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentRecordsAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  id: GetAppointmentRecordsAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetAppointmentRecordsAsync(int, int, CancellationToken)
  nameWithType: IAppointmentAgent.GetAppointmentRecordsAsync(int, int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentRecordsAsync(int, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get all records involved in a booking and/or recurring appointments. MotherId can be zero for repeating appointments or bookings, and recurrenceRuleId can be zero for bookings that are not repeating.
  example: []
  syntax:
    content: Task<Appointment[]> GetAppointmentRecordsAsync(int motherId, int recurrenceRuleId, CancellationToken cancellationToken = default)
    parameters:
    - id: motherId
      type: System.Int32
      description: Appointment id of the owner of a booking
    - id: recurrenceRuleId
      type: System.Int32
      description: RecurrenceId of a recuring appointment
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Appointment[]}
      description: ''
    content.vb: Function GetAppointmentRecordsAsync(motherId As Integer, recurrenceRuleId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Appointment())
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentRecordsAsync*
  nameWithType.vb: IAppointmentAgent.GetAppointmentRecordsAsync(Integer, Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentRecordsAsync(Integer, Integer, System.Threading.CancellationToken)
  name.vb: GetAppointmentRecordsAsync(Integer, Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetMySyncAppointmentsAsync(System.DateTime,System.DateTime,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetMySyncAppointmentsAsync(System.DateTime,System.DateTime,System.Threading.CancellationToken)
  id: GetMySyncAppointmentsAsync(System.DateTime,System.DateTime,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetMySyncAppointmentsAsync(DateTime, DateTime, CancellationToken)
  nameWithType: IAppointmentAgent.GetMySyncAppointmentsAsync(DateTime, DateTime, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetMySyncAppointmentsAsync(System.DateTime, System.DateTime, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments within a time range. The appointments belong to the currently logged on user.
  example: []
  syntax:
    content: Task<AppointmentSyncData[]> GetMySyncAppointmentsAsync(DateTime startTime, DateTime endTime, CancellationToken cancellationToken = default)
    parameters:
    - id: startTime
      type: System.DateTime
      description: The start of the time interval in which we want appointments. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.AppointmentSyncData[]}
      description: Array of Appointments.
    content.vb: Function GetMySyncAppointmentsAsync(startTime As Date, endTime As Date, cancellationToken As CancellationToken = Nothing) As Task(Of AppointmentSyncData())
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetMySyncAppointmentsAsync*
  nameWithType.vb: IAppointmentAgent.GetMySyncAppointmentsAsync(Date, Date, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetMySyncAppointmentsAsync(Date, Date, System.Threading.CancellationToken)
  name.vb: GetMySyncAppointmentsAsync(Date, Date, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetDayInformationListByDatesAndAssociateAsync(System.DateTime,System.DateTime,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetDayInformationListByDatesAndAssociateAsync(System.DateTime,System.DateTime,System.Int32,System.Threading.CancellationToken)
  id: GetDayInformationListByDatesAndAssociateAsync(System.DateTime,System.DateTime,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetDayInformationListByDatesAndAssociateAsync(DateTime, DateTime, int, CancellationToken)
  nameWithType: IAppointmentAgent.GetDayInformationListByDatesAndAssociateAsync(DateTime, DateTime, int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetDayInformationListByDatesAndAssociateAsync(System.DateTime, System.DateTime, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get combined day information (activity + redletter summary) for one or more days according to the given date interval. The time portion of the dates is ignored. Private appointments are counted, but may not be visible through tooltips or other more detailed services.
  example: []
  syntax:
    content: Task<DayInformationListItem[]> GetDayInformationListByDatesAndAssociateAsync(DateTime startDate, DateTime endDate, int associateId, CancellationToken cancellationToken = default)
    parameters:
    - id: startDate
      type: System.DateTime
      description: Start date of interval. Time portion is ignored.
    - id: endDate
      type: System.DateTime
      description: End date of interval. Time portion is ignored.
    - id: associateId
      type: System.Int32
      description: Associate id to identify the calendar to scan. If 0 is passed in, the currently authenticated associate is used instead.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.DayInformationListItem[]}
      description: Exactly one item per day of the given time span is returned. Days where nothing happens will have all values set to 0, but will still be in the returned array. Start end dates are treated as inclusive.
    content.vb: Function GetDayInformationListByDatesAndAssociateAsync(startDate As Date, endDate As Date, associateId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of DayInformationListItem())
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetDayInformationListByDatesAndAssociateAsync*
  nameWithType.vb: IAppointmentAgent.GetDayInformationListByDatesAndAssociateAsync(Date, Date, Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetDayInformationListByDatesAndAssociateAsync(Date, Date, Integer, System.Threading.CancellationToken)
  name.vb: GetDayInformationListByDatesAndAssociateAsync(Date, Date, Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetActivityInformationListByDatesAndAssociateAsync(System.DateTime,System.DateTime,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetActivityInformationListByDatesAndAssociateAsync(System.DateTime,System.DateTime,System.Int32,System.Threading.CancellationToken)
  id: GetActivityInformationListByDatesAndAssociateAsync(System.DateTime,System.DateTime,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetActivityInformationListByDatesAndAssociateAsync(DateTime, DateTime, int, CancellationToken)
  nameWithType: IAppointmentAgent.GetActivityInformationListByDatesAndAssociateAsync(DateTime, DateTime, int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetActivityInformationListByDatesAndAssociateAsync(System.DateTime, System.DateTime, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get activity information for one or more days according to the given date interval. The time portion of the dates is ignored. Private appointments are counted, but may not be visible through tooltips or other more detailed services.
  example: []
  syntax:
    content: Task<ActivityInformationListItem[]> GetActivityInformationListByDatesAndAssociateAsync(DateTime startDate, DateTime endDate, int associateId, CancellationToken cancellationToken = default)
    parameters:
    - id: startDate
      type: System.DateTime
      description: Start date of interval. Time portion is ignored.
    - id: endDate
      type: System.DateTime
      description: End date of interval. Time portion is ignored.
    - id: associateId
      type: System.Int32
      description: Associate id to identify the calendar to scan. If 0 is passed in, the currently authenticated associate is used instead.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.ActivityInformationListItem[]}
      description: Exactly one item per day of the given time span is returned. Days where nothing happens will have all values set to 0, but will still be in the returned array. Start end dates are treated as inclusive.
    content.vb: Function GetActivityInformationListByDatesAndAssociateAsync(startDate As Date, endDate As Date, associateId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of ActivityInformationListItem())
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetActivityInformationListByDatesAndAssociateAsync*
  nameWithType.vb: IAppointmentAgent.GetActivityInformationListByDatesAndAssociateAsync(Date, Date, Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetActivityInformationListByDatesAndAssociateAsync(Date, Date, Integer, System.Threading.CancellationToken)
  name.vb: GetActivityInformationListByDatesAndAssociateAsync(Date, Date, Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetRedLetterInformationListByDatesAndAssociateAsync(System.DateTime,System.DateTime,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetRedLetterInformationListByDatesAndAssociateAsync(System.DateTime,System.DateTime,System.Int32,System.Threading.CancellationToken)
  id: GetRedLetterInformationListByDatesAndAssociateAsync(System.DateTime,System.DateTime,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetRedLetterInformationListByDatesAndAssociateAsync(DateTime, DateTime, int, CancellationToken)
  nameWithType: IAppointmentAgent.GetRedLetterInformationListByDatesAndAssociateAsync(DateTime, DateTime, int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetRedLetterInformationListByDatesAndAssociateAsync(System.DateTime, System.DateTime, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get detailed red letter day information (redletter summary + individual day texts) for one or more days according to the given date interval. The time portion of the dates is ignored.
  example: []
  syntax:
    content: Task<RedLetterInformationListItem[]> GetRedLetterInformationListByDatesAndAssociateAsync(DateTime startDate, DateTime endDate, int associateId, CancellationToken cancellationToken = default)
    parameters:
    - id: startDate
      type: System.DateTime
      description: Start date of interval. Time portion is ignored.
    - id: endDate
      type: System.DateTime
      description: End date of interval. Time portion is ignored.
    - id: associateId
      type: System.Int32
      description: Associate id to identify the calendar to scan. If 0 is passed in, the currently authenticated associate is used instead.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.RedLetterInformationListItem[]}
      description: Exactly one item per day of the given time span is returned. Days where nothing happens will have all values set to 0, but will still be in the returned array. Start end dates are treated as inclusive.
    content.vb: Function GetRedLetterInformationListByDatesAndAssociateAsync(startDate As Date, endDate As Date, associateId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of RedLetterInformationListItem())
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetRedLetterInformationListByDatesAndAssociateAsync*
  nameWithType.vb: IAppointmentAgent.GetRedLetterInformationListByDatesAndAssociateAsync(Date, Date, Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetRedLetterInformationListByDatesAndAssociateAsync(Date, Date, Integer, System.Threading.CancellationToken)
  name.vb: GetRedLetterInformationListByDatesAndAssociateAsync(Date, Date, Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetAlarmsAsync(System.Boolean,System.Boolean,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetAlarmsAsync(System.Boolean,System.Boolean,System.Int32,System.Threading.CancellationToken)
  id: GetAlarmsAsync(System.Boolean,System.Boolean,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetAlarmsAsync(bool, bool, int, CancellationToken)
  nameWithType: IAppointmentAgent.GetAlarmsAsync(bool, bool, int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetAlarmsAsync(bool, bool, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: ''
  example: []
  syntax:
    content: Task<MultiAlarmData> GetAlarmsAsync(bool includeInvitations, bool includeAllAppointments, int defaultAlarmLeadTimeInMinutes, CancellationToken cancellationToken = default)
    parameters:
    - id: includeInvitations
      type: System.Boolean
      description: ''
    - id: includeAllAppointments
      type: System.Boolean
      description: ''
    - id: defaultAlarmLeadTimeInMinutes
      type: System.Int32
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.MultiAlarmData}
      description: ''
    content.vb: Function GetAlarmsAsync(includeInvitations As Boolean, includeAllAppointments As Boolean, defaultAlarmLeadTimeInMinutes As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of MultiAlarmData)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetAlarmsAsync*
  nameWithType.vb: IAppointmentAgent.GetAlarmsAsync(Boolean, Boolean, Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetAlarmsAsync(Boolean, Boolean, Integer, System.Threading.CancellationToken)
  name.vb: GetAlarmsAsync(Boolean, Boolean, Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetNextAvailableTimeAsync(System.Int32[],System.DateTime,System.DateTime,System.Int32,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetNextAvailableTimeAsync(System.Int32[],System.DateTime,System.DateTime,System.Int32,System.Boolean,System.Threading.CancellationToken)
  id: GetNextAvailableTimeAsync(System.Int32[],System.DateTime,System.DateTime,System.Int32,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetNextAvailableTimeAsync(int[], DateTime, DateTime, int, bool, CancellationToken)
  nameWithType: IAppointmentAgent.GetNextAvailableTimeAsync(int[], DateTime, DateTime, int, bool, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetNextAvailableTimeAsync(int[], System.DateTime, System.DateTime, int, bool, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: An array of the soonest-available working time slots.
  example: []
  syntax:
    content: Task<NextAvailableTime[]> GetNextAvailableTimeAsync(int[] associates, DateTime startTime, DateTime endTime, int count, bool isAllDay, CancellationToken cancellationToken = default)
    parameters:
    - id: associates
      type: System.Int32[]
      description: Associate participants we want to account for while finding the next available times.
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: How many next-available date time slots should be returned.
    - id: isAllDay
      type: System.Boolean
      description: Is the appointment an all day event.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.NextAvailableTime[]}
      description: Array of the soonest-available working time slots.
    content.vb: Function GetNextAvailableTimeAsync(associates As Integer(), startTime As Date, endTime As Date, count As Integer, isAllDay As Boolean, cancellationToken As CancellationToken = Nothing) As Task(Of NextAvailableTime())
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetNextAvailableTimeAsync*
  nameWithType.vb: IAppointmentAgent.GetNextAvailableTimeAsync(Integer(), Date, Date, Integer, Boolean, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetNextAvailableTimeAsync(Integer(), Date, Date, Integer, Boolean, System.Threading.CancellationToken)
  name.vb: GetNextAvailableTimeAsync(Integer(), Date, Date, Integer, Boolean, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GenerateLeadAsync(System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GenerateLeadAsync(System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: GenerateLeadAsync(System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GenerateLeadAsync(int, string, string, int, string, string, string, string, string, string, string, string, CancellationToken)
  nameWithType: IAppointmentAgent.GenerateLeadAsync(int, string, string, int, string, string, string, string, string, string, string, string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GenerateLeadAsync(int, string, string, int, string, string, string, string, string, string, string, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "Adds a sales lead (task) to a contact in SuperOffice. If the contact or person is known, the sales lead is added to the current contact. If not, a new contact is created, with the associate with ownerIdForNewContact as responsible (Our Contact). A relation is created between the contact and the person submitting the lead. Based on wether the person the request is made for is found or not, the following happens: If the person is found, the person, person's contact and sales representative is returned. If neither the person nor the contact is found a new person and contact is created (if sufficient data is supplied), and the person, person's contact and sales representative is returned. If the contact and not the person is found a new person is created on this contact, and the contact, salesrep, and person is returned (if there was enough data to return the person). If more than one contact is found a list of contacts is returned."
  example: []
  syntax:
    content: Task<SalesActivity> GenerateLeadAsync(int associateIdForNewContact, string leadDescription, string relation, int relationId, string leadContact, string leadPersonFirstname, string leadPersonLastname, string leadPersonEmail, string leadPhoneNumber, string creatorsContact, string creatorsFirstname, string creatorsLastname, CancellationToken cancellationToken = default)
    parameters:
    - id: associateIdForNewContact
      type: System.Int32
      description: Associate id of the person set as "Our Contact" if a new Contact is created. Ensures that the sales lead is assigned to the correct salesman.
    - id: leadDescription
      type: System.String
      description: Description of the lead. The lead text as shown in SuperOffice
    - id: relation
      type: System.String
      description: The relation the person submitting the lead has to the contact.
    - id: relationId
      type: System.Int32
      description: Id of the relation type. Database specific.
    - id: leadContact
      type: System.String
      description: Name of the new or existing contact (company) the lead is created for.
    - id: leadPersonFirstname
      type: System.String
      description: Firstname of the contact's person.
    - id: leadPersonLastname
      type: System.String
      description: Lastname of the contact's person.
    - id: leadPersonEmail
      type: System.String
      description: Email to the contact's person.
    - id: leadPhoneNumber
      type: System.String
      description: Phone number of the contact or contact's person.
    - id: creatorsContact
      type: System.String
      description: The contact (company) of the person creating the lead
    - id: creatorsFirstname
      type: System.String
      description: The firstname of the person creating the lead
    - id: creatorsLastname
      type: System.String
      description: The lastname of the person creating the lead
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.SalesActivity}
      description: True if successfull.
    content.vb: Function GenerateLeadAsync(associateIdForNewContact As Integer, leadDescription As String, relation As String, relationId As Integer, leadContact As String, leadPersonFirstname As String, leadPersonLastname As String, leadPersonEmail As String, leadPhoneNumber As String, creatorsContact As String, creatorsFirstname As String, creatorsLastname As String, cancellationToken As CancellationToken = Nothing) As Task(Of SalesActivity)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GenerateLeadAsync*
  nameWithType.vb: IAppointmentAgent.GenerateLeadAsync(Integer, String, String, Integer, String, String, String, String, String, String, String, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GenerateLeadAsync(Integer, String, String, Integer, String, String, String, String, String, String, String, String, System.Threading.CancellationToken)
  name.vb: GenerateLeadAsync(Integer, String, String, Integer, String, String, String, String, String, String, String, String, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.RequestForInfoAsync(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.RequestForInfoAsync(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: RequestForInfoAsync(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: RequestForInfoAsync(int, string, string, string, string, string, string, string, CancellationToken)
  nameWithType: IAppointmentAgent.RequestForInfoAsync(int, string, string, string, string, string, string, string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.RequestForInfoAsync(int, string, string, string, string, string, string, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "Submits a request for information. The request is added to the task list of the user that is responsible for this contact. Based on wether the person the request is made for is found or not, the following happens: If the person is found, the person, person's contact and sales representative is returned. If neither the person nor the contact is found a new person and contact is created (if sufficient data is supplied), and the person, person's contact and sales representative is returned. If the contact and not the person is found a new person is created on this contact, and the contact, salesrep, and person is returned (if there was enough data to return the person). If more than one contact is found a list of contacts is returned."
  example: []
  syntax:
    content: Task<SalesActivity> RequestForInfoAsync(int associateIdForNewContact, string channel, string regarding, string contactName, string personFirstname, string personLastname, string emailAddress, string phoneNumber, CancellationToken cancellationToken = default)
    parameters:
    - id: associateIdForNewContact
      type: System.Int32
      description: Associate id of the person set as "Our Contact" if a new Contact is created. Ensures that the request is assigned to the correct salesman.
    - id: channel
      type: System.String
      description: The requested channel, e.g. "Phone"
    - id: regarding
      type: System.String
      description: The text submitted by the user.
    - id: contactName
      type: System.String
      description: The name of the contact that the RFI will be added to. May be empty.
    - id: personFirstname
      type: System.String
      description: The firstname of the person that the RFI will be added to. May be empty.
    - id: personLastname
      type: System.String
      description: The lastname of the person that the RFI will be added to. May be empty.
    - id: emailAddress
      type: System.String
      description: The email address of the person that the RFI will be added to.
    - id: phoneNumber
      type: System.String
      description: Phone number of the contact or contact's person.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.SalesActivity}
      description: True if the submission was successful.
    content.vb: Function RequestForInfoAsync(associateIdForNewContact As Integer, channel As String, regarding As String, contactName As String, personFirstname As String, personLastname As String, emailAddress As String, phoneNumber As String, cancellationToken As CancellationToken = Nothing) As Task(Of SalesActivity)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.RequestForInfoAsync*
  nameWithType.vb: IAppointmentAgent.RequestForInfoAsync(Integer, String, String, String, String, String, String, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.RequestForInfoAsync(Integer, String, String, String, String, String, String, String, System.Threading.CancellationToken)
  name.vb: RequestForInfoAsync(Integer, String, String, String, String, String, String, String, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetSuggestedAppointmentAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetSuggestedAppointmentAsync(System.Int32,System.Threading.CancellationToken)
  id: GetSuggestedAppointmentAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetSuggestedAppointmentAsync(int, CancellationToken)
  nameWithType: IAppointmentAgent.GetSuggestedAppointmentAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetSuggestedAppointmentAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Gets a SuggestedAppointment object.
  example: []
  syntax:
    content: Task<SuggestedAppointment> GetSuggestedAppointmentAsync(int suggestedAppointmentId, CancellationToken cancellationToken = default)
    parameters:
    - id: suggestedAppointmentId
      type: System.Int32
      description: The identifier of the SuggestedAppointment object
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.SuggestedAppointment}
      description: A single SuggestedAppointment
    content.vb: Function GetSuggestedAppointmentAsync(suggestedAppointmentId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of SuggestedAppointment)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetSuggestedAppointmentAsync*
  nameWithType.vb: IAppointmentAgent.GetSuggestedAppointmentAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetSuggestedAppointmentAsync(Integer, System.Threading.CancellationToken)
  name.vb: GetSuggestedAppointmentAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultSuggestedAppointmentEntityAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultSuggestedAppointmentEntityAsync(System.Threading.CancellationToken)
  id: CreateDefaultSuggestedAppointmentEntityAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultSuggestedAppointmentEntityAsync(CancellationToken)
  nameWithType: IAppointmentAgent.CreateDefaultSuggestedAppointmentEntityAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultSuggestedAppointmentEntityAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Loading default values into a new SuggestedAppointmentEntity.
  example: []
  syntax:
    content: Task<SuggestedAppointmentEntity> CreateDefaultSuggestedAppointmentEntityAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.SuggestedAppointmentEntity}
      description: New SuggestedAppointmentEntity with default values
    content.vb: Function CreateDefaultSuggestedAppointmentEntityAsync(cancellationToken As CancellationToken = Nothing) As Task(Of SuggestedAppointmentEntity)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultSuggestedAppointmentEntityAsync*
- uid: SuperOffice.CRM.Services.IAppointmentAgent.SaveSuggestedAppointmentEntityAsync(SuperOffice.CRM.Services.SuggestedAppointmentEntity,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.SaveSuggestedAppointmentEntityAsync(SuperOffice.CRM.Services.SuggestedAppointmentEntity,System.Threading.CancellationToken)
  id: SaveSuggestedAppointmentEntityAsync(SuperOffice.CRM.Services.SuggestedAppointmentEntity,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: SaveSuggestedAppointmentEntityAsync(SuggestedAppointmentEntity, CancellationToken)
  nameWithType: IAppointmentAgent.SaveSuggestedAppointmentEntityAsync(SuggestedAppointmentEntity, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.SaveSuggestedAppointmentEntityAsync(SuperOffice.CRM.Services.SuggestedAppointmentEntity, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Updates the existing SuggestedAppointmentEntity or creates a new SuggestedAppointmentEntity if the id parameter is 0.
  example: []
  syntax:
    content: Task<SuggestedAppointmentEntity> SaveSuggestedAppointmentEntityAsync(SuggestedAppointmentEntity suggestedAppointmentEntity, CancellationToken cancellationToken = default)
    parameters:
    - id: suggestedAppointmentEntity
      type: SuperOffice.CRM.Services.SuggestedAppointmentEntity
      description: The SuggestedAppointmentEntity that is saved
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.SuggestedAppointmentEntity}
      description: New or updated SuggestedAppointmentEntity
    content.vb: Function SaveSuggestedAppointmentEntityAsync(suggestedAppointmentEntity As SuggestedAppointmentEntity, cancellationToken As CancellationToken = Nothing) As Task(Of SuggestedAppointmentEntity)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.SaveSuggestedAppointmentEntityAsync*
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetSuggestedAppointmentEntityAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetSuggestedAppointmentEntityAsync(System.Int32,System.Threading.CancellationToken)
  id: GetSuggestedAppointmentEntityAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetSuggestedAppointmentEntityAsync(int, CancellationToken)
  nameWithType: IAppointmentAgent.GetSuggestedAppointmentEntityAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetSuggestedAppointmentEntityAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Gets a SuggestedAppointmentEntity object.
  example: []
  syntax:
    content: Task<SuggestedAppointmentEntity> GetSuggestedAppointmentEntityAsync(int suggestedAppointmentEntityId, CancellationToken cancellationToken = default)
    parameters:
    - id: suggestedAppointmentEntityId
      type: System.Int32
      description: The identifier of the SuggestedAppointmentEntity object
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.SuggestedAppointmentEntity}
      description: A single SuggestedAppointmentEntity
    content.vb: Function GetSuggestedAppointmentEntityAsync(suggestedAppointmentEntityId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of SuggestedAppointmentEntity)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetSuggestedAppointmentEntityAsync*
  nameWithType.vb: IAppointmentAgent.GetSuggestedAppointmentEntityAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetSuggestedAppointmentEntityAsync(Integer, System.Threading.CancellationToken)
  name.vb: GetSuggestedAppointmentEntityAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultTaskListItemAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultTaskListItemAsync(System.Threading.CancellationToken)
  id: CreateDefaultTaskListItemAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultTaskListItemAsync(CancellationToken)
  nameWithType: IAppointmentAgent.CreateDefaultTaskListItemAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultTaskListItemAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Loading default values into a new TaskListItem.
  example: []
  syntax:
    content: Task<TaskListItem> CreateDefaultTaskListItemAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.TaskListItem}
      description: New TaskListItem with default values
    content.vb: Function CreateDefaultTaskListItemAsync(cancellationToken As CancellationToken = Nothing) As Task(Of TaskListItem)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultTaskListItemAsync*
- uid: SuperOffice.CRM.Services.IAppointmentAgent.SaveTaskListItemAsync(SuperOffice.CRM.Services.TaskListItem,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.SaveTaskListItemAsync(SuperOffice.CRM.Services.TaskListItem,System.Threading.CancellationToken)
  id: SaveTaskListItemAsync(SuperOffice.CRM.Services.TaskListItem,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: SaveTaskListItemAsync(TaskListItem, CancellationToken)
  nameWithType: IAppointmentAgent.SaveTaskListItemAsync(TaskListItem, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.SaveTaskListItemAsync(SuperOffice.CRM.Services.TaskListItem, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Updates the existing TaskListItem or creates a new TaskListItem if the id parameter is 0.
  example: []
  syntax:
    content: Task<TaskListItem> SaveTaskListItemAsync(TaskListItem taskListItem, CancellationToken cancellationToken = default)
    parameters:
    - id: taskListItem
      type: SuperOffice.CRM.Services.TaskListItem
      description: The TaskListItem that is saved
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.TaskListItem}
      description: New or updated TaskListItem
    content.vb: Function SaveTaskListItemAsync(taskListItem As TaskListItem, cancellationToken As CancellationToken = Nothing) As Task(Of TaskListItem)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.SaveTaskListItemAsync*
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetTaskListItemAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetTaskListItemAsync(System.Int32,System.Threading.CancellationToken)
  id: GetTaskListItemAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetTaskListItemAsync(int, CancellationToken)
  nameWithType: IAppointmentAgent.GetTaskListItemAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetTaskListItemAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Gets a TaskListItem object.
  example: []
  syntax:
    content: Task<TaskListItem> GetTaskListItemAsync(int taskListItemId, CancellationToken cancellationToken = default)
    parameters:
    - id: taskListItemId
      type: System.Int32
      description: The identifier of the TaskListItem object
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.TaskListItem}
      description: A single TaskListItem
    content.vb: Function GetTaskListItemAsync(taskListItemId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of TaskListItem)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetTaskListItemAsync*
  nameWithType.vb: IAppointmentAgent.GetTaskListItemAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetTaskListItemAsync(Integer, System.Threading.CancellationToken)
  name.vb: GetTaskListItemAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetTaskListItemsAsync(System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetTaskListItemsAsync(System.Boolean,System.Threading.CancellationToken)
  id: GetTaskListItemsAsync(System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetTaskListItemsAsync(bool, CancellationToken)
  nameWithType: IAppointmentAgent.GetTaskListItemsAsync(bool, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetTaskListItemsAsync(bool, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Gets all takslist items
  example: []
  syntax:
    content: Task<TaskListItem[]> GetTaskListItemsAsync(bool includeDeleted, CancellationToken cancellationToken = default)
    parameters:
    - id: includeDeleted
      type: System.Boolean
      description: Include deleted items
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.TaskListItem[]}
      description: An array of tasklist items
    content.vb: Function GetTaskListItemsAsync(includeDeleted As Boolean, cancellationToken As CancellationToken = Nothing) As Task(Of TaskListItem())
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetTaskListItemsAsync*
  nameWithType.vb: IAppointmentAgent.GetTaskListItemsAsync(Boolean, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetTaskListItemsAsync(Boolean, System.Threading.CancellationToken)
  name.vb: GetTaskListItemsAsync(Boolean, CancellationToken)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateVideoMeetingReservationAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.CreateVideoMeetingReservationAsync(System.Threading.CancellationToken)
  id: CreateVideoMeetingReservationAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateVideoMeetingReservationAsync(CancellationToken)
  nameWithType: IAppointmentAgent.CreateVideoMeetingReservationAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateVideoMeetingReservationAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Create a VideoMeetingReservation. System users are not allowed to create video meeting reservations
  example: []
  syntax:
    content: Task<VideoMeetingReservation> CreateVideoMeetingReservationAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.VideoMeetingReservation}
      description: The created VideoMeetingReservation.
    content.vb: Function CreateVideoMeetingReservationAsync(cancellationToken As CancellationToken = Nothing) As Task(Of VideoMeetingReservation)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.CreateVideoMeetingReservationAsync*
- uid: SuperOffice.CRM.Services.IAppointmentAgent.DeleteVideoMeetingReservationAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.DeleteVideoMeetingReservationAsync(System.String,System.Threading.CancellationToken)
  id: DeleteVideoMeetingReservationAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: DeleteVideoMeetingReservationAsync(string, CancellationToken)
  nameWithType: IAppointmentAgent.DeleteVideoMeetingReservationAsync(string, CancellationToken)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.DeleteVideoMeetingReservationAsync(string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Delete a VideoMeetingReservation.
  example: []
  syntax:
    content: Task DeleteVideoMeetingReservationAsync(string videoMeetingId, CancellationToken cancellationToken = default)
    parameters:
    - id: videoMeetingId
      type: System.String
      description: The VideoMeetingReservation.VideoMeetingId to remove. System users are not allowed to delete video meeting reservations
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function DeleteVideoMeetingReservationAsync(videoMeetingId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.IAppointmentAgent.DeleteVideoMeetingReservationAsync*
  nameWithType.vb: IAppointmentAgent.DeleteVideoMeetingReservationAsync(String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.DeleteVideoMeetingReservationAsync(String, System.Threading.CancellationToken)
  name.vb: DeleteVideoMeetingReservationAsync(String, CancellationToken)
references:
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetAppointmentAsync_System_Int32_System_Threading_CancellationToken_
  name: GetAppointmentAsync
  nameWithType: IAppointmentAgent.GetAppointmentAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Appointment}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.Appointment}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Appointment>
  nameWithType: Task<Appointment>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.Appointment>
  nameWithType.vb: Task(Of Appointment)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.Appointment)
  name.vb: Task(Of Appointment)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.Appointment
    name: Appointment
    isExternal: true
    href: SuperOffice.CRM.Services.Appointment.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.Appointment
    name: Appointment
    isExternal: true
    href: SuperOffice.CRM.Services.Appointment.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: SuperOffice.CRM.Services.IAppointmentAgent.ToggleAppointmentStatusAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.ToggleAppointmentStatusAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_ToggleAppointmentStatusAsync_System_Int32_System_Threading_CancellationToken_
  name: ToggleAppointmentStatusAsync
  nameWithType: IAppointmentAgent.ToggleAppointmentStatusAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.ToggleAppointmentStatusAsync
- uid: System.Threading.Tasks.Task{SuperOffice.Data.AppointmentStatus}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.Data.AppointmentStatus}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<AppointmentStatus>
  nameWithType: Task<AppointmentStatus>
  fullName: System.Threading.Tasks.Task<SuperOffice.Data.AppointmentStatus>
  nameWithType.vb: Task(Of AppointmentStatus)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.Data.AppointmentStatus)
  name.vb: Task(Of AppointmentStatus)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.Data.AppointmentStatus
    name: AppointmentStatus
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Data.AppointmentStatus
    name: AppointmentStatus
    isExternal: true
  - name: )
- uid: SuperOffice.CRM.Services.IAppointmentAgent.ToggleActivityAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.ToggleActivityAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_ToggleActivityAsync_System_String_System_Threading_CancellationToken_
  name: ToggleActivityAsync
  nameWithType: IAppointmentAgent.ToggleActivityAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.ToggleActivityAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.Tasks.Task{SuperOffice.Data.ActivityStatus}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.Data.ActivityStatus}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ActivityStatus>
  nameWithType: Task<ActivityStatus>
  fullName: System.Threading.Tasks.Task<SuperOffice.Data.ActivityStatus>
  nameWithType.vb: Task(Of ActivityStatus)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.Data.ActivityStatus)
  name.vb: Task(Of ActivityStatus)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.Data.ActivityStatus
    name: ActivityStatus
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Data.ActivityStatus
    name: ActivityStatus
    isExternal: true
  - name: )
- uid: SuperOffice.CRM.Services.IAppointmentAgent.ToggleActivitiesAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.ToggleActivitiesAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_ToggleActivitiesAsync_System_String___System_Threading_CancellationToken_
  name: ToggleActivitiesAsync
  nameWithType: IAppointmentAgent.ToggleActivitiesAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.ToggleActivitiesAsync
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.IAppointmentAgent.SetActivityStatusAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.SetActivityStatusAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_SetActivityStatusAsync_System_String___SuperOffice_Data_ActivityStatus_System_Threading_CancellationToken_
  name: SetActivityStatusAsync
  nameWithType: IAppointmentAgent.SetActivityStatusAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.SetActivityStatusAsync
- uid: SuperOffice.Data.ActivityStatus
  isExternal: true
  name: ActivityStatus
  nameWithType: ActivityStatus
  fullName: SuperOffice.Data.ActivityStatus
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: SuperOffice.CRM.Services.IAppointmentAgent.ToggleAndSetActivitiesAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.ToggleAndSetActivitiesAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_ToggleAndSetActivitiesAsync_System_String___System_Threading_CancellationToken_
  name: ToggleAndSetActivitiesAsync
  nameWithType: IAppointmentAgent.ToggleAndSetActivitiesAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.ToggleAndSetActivitiesAsync
- uid: System.Threading.Tasks.Task{System.String[]}
  commentId: T:System.Threading.Tasks.Task{System.String[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<string[]>
  nameWithType: Task<string[]>
  fullName: System.Threading.Tasks.Task<string[]>
  nameWithType.vb: Task(Of String())
  fullName.vb: System.Threading.Tasks.Task(Of String())
  name.vb: Task(Of String())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_CreateDefaultAppointmentEntityAsync_System_Threading_CancellationToken_
  name: CreateDefaultAppointmentEntityAsync
  nameWithType: IAppointmentAgent.CreateDefaultAppointmentEntityAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.AppointmentEntity}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.AppointmentEntity}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<AppointmentEntity>
  nameWithType: Task<AppointmentEntity>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.AppointmentEntity>
  nameWithType.vb: Task(Of AppointmentEntity)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.AppointmentEntity)
  name.vb: Task(Of AppointmentEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.AppointmentEntity
    name: AppointmentEntity
    isExternal: true
    href: SuperOffice.CRM.Services.AppointmentEntity.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.AppointmentEntity
    name: AppointmentEntity
    isExternal: true
    href: SuperOffice.CRM.Services.AppointmentEntity.html
  - name: )
- uid: SuperOffice.CRM.Services.IAppointmentAgent.SaveAppointmentEntityAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.SaveAppointmentEntityAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_SaveAppointmentEntityAsync_SuperOffice_CRM_Services_AppointmentEntity_System_Threading_CancellationToken_
  name: SaveAppointmentEntityAsync
  nameWithType: IAppointmentAgent.SaveAppointmentEntityAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.SaveAppointmentEntityAsync
- uid: SuperOffice.CRM.Services.AppointmentEntity
  commentId: T:SuperOffice.CRM.Services.AppointmentEntity
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.AppointmentEntity.html
  name: AppointmentEntity
  nameWithType: AppointmentEntity
  fullName: SuperOffice.CRM.Services.AppointmentEntity
- uid: SuperOffice.CRM.Services.IAppointmentAgent.DeleteAppointmentEntityAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.DeleteAppointmentEntityAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_DeleteAppointmentEntityAsync_System_Int32_System_Threading_CancellationToken_
  name: DeleteAppointmentEntityAsync
  nameWithType: IAppointmentAgent.DeleteAppointmentEntityAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.DeleteAppointmentEntityAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentEntityAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentEntityAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetAppointmentEntityAsync_System_Int32_System_Threading_CancellationToken_
  name: GetAppointmentEntityAsync
  nameWithType: IAppointmentAgent.GetAppointmentEntityAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentEntityAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_CreateDefaultAppointmentEntityByTypeAsync_SuperOffice_Data_TaskType_System_Threading_CancellationToken_
  name: CreateDefaultAppointmentEntityByTypeAsync
  nameWithType: IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAsync
- uid: SuperOffice.Data.TaskType
  isExternal: true
  name: TaskType
  nameWithType: TaskType
  fullName: SuperOffice.Data.TaskType
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateAppointmentEntityFromExistingAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.CreateAppointmentEntityFromExistingAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_CreateAppointmentEntityFromExistingAsync_System_Int32_System_Int32_System_Threading_CancellationToken_
  name: CreateAppointmentEntityFromExistingAsync
  nameWithType: IAppointmentAgent.CreateAppointmentEntityFromExistingAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateAppointmentEntityFromExistingAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.AcceptAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.AcceptAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_AcceptAsync_System_Int32_SuperOffice_Data_RecurrenceUpdateMode_System_Threading_CancellationToken_
  name: AcceptAsync
  nameWithType: IAppointmentAgent.AcceptAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.AcceptAsync
- uid: SuperOffice.Data.RecurrenceUpdateMode
  isExternal: true
  name: RecurrenceUpdateMode
  nameWithType: RecurrenceUpdateMode
  fullName: SuperOffice.Data.RecurrenceUpdateMode
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateAndAcceptAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.CreateAndAcceptAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_CreateAndAcceptAsync_System_Int32_SuperOffice_Data_RecurrenceUpdateMode_System_Threading_CancellationToken_
  name: CreateAndAcceptAsync
  nameWithType: IAppointmentAgent.CreateAndAcceptAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateAndAcceptAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.AcceptWithEmailConfirmationAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.AcceptWithEmailConfirmationAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_AcceptWithEmailConfirmationAsync_System_Int32_SuperOffice_Data_RecurrenceUpdateMode_System_Threading_CancellationToken_
  name: AcceptWithEmailConfirmationAsync
  nameWithType: IAppointmentAgent.AcceptWithEmailConfirmationAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.AcceptWithEmailConfirmationAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateAndAcceptWithEmailConfirmationAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.CreateAndAcceptWithEmailConfirmationAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_CreateAndAcceptWithEmailConfirmationAsync_System_Int32_SuperOffice_Data_RecurrenceUpdateMode_System_Threading_CancellationToken_
  name: CreateAndAcceptWithEmailConfirmationAsync
  nameWithType: IAppointmentAgent.CreateAndAcceptWithEmailConfirmationAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateAndAcceptWithEmailConfirmationAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.RejectAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.RejectAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_RejectAsync_System_Int32_System_String_SuperOffice_Data_RecurrenceUpdateMode_System_Threading_CancellationToken_
  name: RejectAsync
  nameWithType: IAppointmentAgent.RejectAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.RejectAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.RejectWithEmailConfirmationAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.RejectWithEmailConfirmationAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_RejectWithEmailConfirmationAsync_System_Int32_System_String_SuperOffice_Data_RecurrenceUpdateMode_System_Threading_CancellationToken_
  name: RejectWithEmailConfirmationAsync
  nameWithType: IAppointmentAgent.RejectWithEmailConfirmationAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.RejectWithEmailConfirmationAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.DeclineInvitationFromEmailItemAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.DeclineInvitationFromEmailItemAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_DeclineInvitationFromEmailItemAsync_System_Int32_System_String_System_Threading_CancellationToken_
  name: DeclineInvitationFromEmailItemAsync
  nameWithType: IAppointmentAgent.DeclineInvitationFromEmailItemAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.DeclineInvitationFromEmailItemAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetOrganizerNameAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetOrganizerNameAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetOrganizerNameAsync_System_Int32_System_Threading_CancellationToken_
  name: GetOrganizerNameAsync
  nameWithType: IAppointmentAgent.GetOrganizerNameAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetOrganizerNameAsync
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<string>
  nameWithType: Task<string>
  fullName: System.Threading.Tasks.Task<string>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SuperOffice.CRM.Services.IAppointmentAgent.SaveAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.SaveAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_SaveAsync_SuperOffice_CRM_Services_AppointmentEntity_SuperOffice_Data_RecurrenceUpdateMode_System_Boolean_SuperOffice_CRM_Services_EMailConnectionInfo_SuperOffice_CRM_Services_EMailConnectionInfo_System_Threading_CancellationToken_
  name: SaveAsync
  nameWithType: IAppointmentAgent.SaveAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.SaveAsync
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SuperOffice.CRM.Services.EMailConnectionInfo
  commentId: T:SuperOffice.CRM.Services.EMailConnectionInfo
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.EMailConnectionInfo.html
  name: EMailConnectionInfo
  nameWithType: EMailConnectionInfo
  fullName: SuperOffice.CRM.Services.EMailConnectionInfo
- uid: SuperOffice.CRM.Services.IAppointmentAgent.DeleteAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.DeleteAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_DeleteAsync_System_Int32_SuperOffice_Data_RecurrenceUpdateMode_System_Boolean_SuperOffice_CRM_Services_EMailConnectionInfo_SuperOffice_CRM_Services_EMailConnectionInfo_System_Threading_CancellationToken_
  name: DeleteAsync
  nameWithType: IAppointmentAgent.DeleteAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.DeleteAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CalculateDaysAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.CalculateDaysAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_CalculateDaysAsync_SuperOffice_CRM_Services_AppointmentEntity_System_Threading_CancellationToken_
  name: CalculateDaysAsync
  nameWithType: IAppointmentAgent.CalculateDaysAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CalculateDaysAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.RecurrenceInfo}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.RecurrenceInfo}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<RecurrenceInfo>
  nameWithType: Task<RecurrenceInfo>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.RecurrenceInfo>
  nameWithType.vb: Task(Of RecurrenceInfo)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.RecurrenceInfo)
  name.vb: Task(Of RecurrenceInfo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.RecurrenceInfo
    name: RecurrenceInfo
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.RecurrenceInfo
    name: RecurrenceInfo
    isExternal: true
  - name: )
- uid: SuperOffice.CRM.Services.IAppointmentAgent.ValidateDaysAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.ValidateDaysAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_ValidateDaysAsync_SuperOffice_CRM_Services_AppointmentEntity_System_DateTime___System_Threading_CancellationToken_
  name: ValidateDaysAsync
  nameWithType: IAppointmentAgent.ValidateDaysAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.ValidateDaysAsync
- uid: System.DateTime[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime[]
  nameWithType: DateTime[]
  fullName: System.DateTime[]
  nameWithType.vb: Date()
  fullName.vb: Date()
  name.vb: Date()
  spec.csharp:
  - uid: System.DateTime
    name: DateTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.DateTime
    name: Date
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.RecurrenceDate[]}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.RecurrenceDate[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<RecurrenceDate[]>
  nameWithType: Task<RecurrenceDate[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.RecurrenceDate[]>
  nameWithType.vb: Task(Of RecurrenceDate())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.RecurrenceDate())
  name.vb: Task(Of RecurrenceDate())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.RecurrenceDate
    name: RecurrenceDate
    isExternal: true
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.RecurrenceDate
    name: RecurrenceDate
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultRecurrenceAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultRecurrenceAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_CreateDefaultRecurrenceAsync_System_Threading_CancellationToken_
  name: CreateDefaultRecurrenceAsync
  nameWithType: IAppointmentAgent.CreateDefaultRecurrenceAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultRecurrenceAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.AssignToAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.AssignToAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_AssignToAsync_System_Int32_SuperOffice_CRM_Services_ParticipantInfo_SuperOffice_Data_RecurrenceUpdateMode_System_Threading_CancellationToken_
  name: AssignToAsync
  nameWithType: IAppointmentAgent.AssignToAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.AssignToAsync
- uid: SuperOffice.CRM.Services.ParticipantInfo
  isExternal: true
  name: ParticipantInfo
  nameWithType: ParticipantInfo
  fullName: SuperOffice.CRM.Services.ParticipantInfo
- uid: SuperOffice.CRM.Services.IAppointmentAgent.SetSeenAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.SetSeenAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_SetSeenAsync_System_Int32_SuperOffice_Data_RecurrenceUpdateMode_System_Threading_CancellationToken_
  name: SetSeenAsync
  nameWithType: IAppointmentAgent.SetSeenAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.SetSeenAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.SetSeenManyAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.SetSeenManyAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_SetSeenManyAsync_System_Int32___SuperOffice_Data_RecurrenceUpdateMode_System_Threading_CancellationToken_
  name: SetSeenManyAsync
  nameWithType: IAppointmentAgent.SetSeenManyAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.SetSeenManyAsync
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.IAppointmentAgent.MoveAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.MoveAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_MoveAsync_System_Int32_System_DateTime_SuperOffice_Data_RecurrenceUpdateMode_System_Threading_CancellationToken_
  name: MoveAsync
  nameWithType: IAppointmentAgent.MoveAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.MoveAsync
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: SuperOffice.CRM.Services.IAppointmentAgent.MoveWithEmailAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.MoveWithEmailAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_MoveWithEmailAsync_System_Int32_System_DateTime_SuperOffice_Data_RecurrenceUpdateMode_System_Boolean_SuperOffice_CRM_Services_EMailConnectionInfo_SuperOffice_CRM_Services_EMailConnectionInfo_System_Threading_CancellationToken_
  name: MoveWithEmailAsync
  nameWithType: IAppointmentAgent.MoveWithEmailAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.MoveWithEmailAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.MoveExtendedAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.MoveExtendedAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_MoveExtendedAsync_SuperOffice_CRM_Services_AppointmentMoveData_System_Threading_CancellationToken_
  name: MoveExtendedAsync
  nameWithType: IAppointmentAgent.MoveExtendedAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.MoveExtendedAsync
- uid: SuperOffice.CRM.Services.AppointmentMoveData
  commentId: T:SuperOffice.CRM.Services.AppointmentMoveData
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.AppointmentMoveData.html
  name: AppointmentMoveData
  nameWithType: AppointmentMoveData
  fullName: SuperOffice.CRM.Services.AppointmentMoveData
- uid: SuperOffice.CRM.Services.IAppointmentAgent.AcceptRejectedAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.AcceptRejectedAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_AcceptRejectedAsync_System_Int32_SuperOffice_Data_RecurrenceUpdateMode_System_Threading_CancellationToken_
  name: AcceptRejectedAsync
  nameWithType: IAppointmentAgent.AcceptRejectedAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.AcceptRejectedAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultRecurrenceByDateAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultRecurrenceByDateAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_CreateDefaultRecurrenceByDateAsync_System_DateTime_System_Threading_CancellationToken_
  name: CreateDefaultRecurrenceByDateAsync
  nameWithType: IAppointmentAgent.CreateDefaultRecurrenceByDateAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultRecurrenceByDateAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CleanUpBookingDeletedAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.CleanUpBookingDeletedAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_CleanUpBookingDeletedAsync_System_Int32___System_Threading_CancellationToken_
  name: CleanUpBookingDeletedAsync
  nameWithType: IAppointmentAgent.CleanUpBookingDeletedAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CleanUpBookingDeletedAsync
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: T:System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<int>
  nameWithType: Task<int>
  fullName: System.Threading.Tasks.Task<int>
  nameWithType.vb: Task(Of Integer)
  fullName.vb: System.Threading.Tasks.Task(Of Integer)
  name.vb: Task(Of Integer)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CleanUpBookingDeletedWithUpdateModeAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.CleanUpBookingDeletedWithUpdateModeAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_CleanUpBookingDeletedWithUpdateModeAsync_System_Int32___SuperOffice_Data_RecurrenceUpdateMode_System_Threading_CancellationToken_
  name: CleanUpBookingDeletedWithUpdateModeAsync
  nameWithType: IAppointmentAgent.CleanUpBookingDeletedWithUpdateModeAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CleanUpBookingDeletedWithUpdateModeAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CleanUpRecurringBookingDeletedAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.CleanUpRecurringBookingDeletedAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_CleanUpRecurringBookingDeletedAsync_System_Threading_CancellationToken_
  name: CleanUpRecurringBookingDeletedAsync
  nameWithType: IAppointmentAgent.CleanUpRecurringBookingDeletedAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CleanUpRecurringBookingDeletedAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociateAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociateAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_CreateDefaultAppointmentEntityByTypeAndAssociateAsync_SuperOffice_Data_TaskType_System_Int32_System_Threading_CancellationToken_
  name: CreateDefaultAppointmentEntityByTypeAndAssociateAsync
  nameWithType: IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociateAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociateAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetCanInsertForAssociatesAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetCanInsertForAssociatesAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetCanInsertForAssociatesAsync_System_Int32___System_Threading_CancellationToken_
  name: GetCanInsertForAssociatesAsync
  nameWithType: IAppointmentAgent.GetCanInsertForAssociatesAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetCanInsertForAssociatesAsync
- uid: System.Threading.Tasks.Task{System.Boolean[]}
  commentId: T:System.Threading.Tasks.Task{System.Boolean[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool[]>
  nameWithType: Task<bool[]>
  fullName: System.Threading.Tasks.Task<bool[]>
  nameWithType.vb: Task(Of Boolean())
  fullName.vb: System.Threading.Tasks.Task(Of Boolean())
  name.vb: Task(Of Boolean())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentHaveParticipantsWithEmailAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentHaveParticipantsWithEmailAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetAppointmentHaveParticipantsWithEmailAsync_System_Int32_System_Threading_CancellationToken_
  name: GetAppointmentHaveParticipantsWithEmailAsync
  nameWithType: IAppointmentAgent.GetAppointmentHaveParticipantsWithEmailAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentHaveParticipantsWithEmailAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestionAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestionAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_CreateDefaultAppointmentEntityFromSaleSuggestionAsync_System_Int32_System_Int32_System_Boolean_System_Int32_System_Threading_CancellationToken_
  name: CreateDefaultAppointmentEntityFromSaleSuggestionAsync
  nameWithType: IAppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestionAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestionAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetNextSuggestedAppointmentBySaleAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetNextSuggestedAppointmentBySaleAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetNextSuggestedAppointmentBySaleAsync_System_Int32_System_Int32_System_Boolean_System_Threading_CancellationToken_
  name: GetNextSuggestedAppointmentBySaleAsync
  nameWithType: IAppointmentAgent.GetNextSuggestedAppointmentBySaleAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetNextSuggestedAppointmentBySaleAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.SuggestedAppointment}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.SuggestedAppointment}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<SuggestedAppointment>
  nameWithType: Task<SuggestedAppointment>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.SuggestedAppointment>
  nameWithType.vb: Task(Of SuggestedAppointment)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.SuggestedAppointment)
  name.vb: Task(Of SuggestedAppointment)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.SuggestedAppointment
    name: SuggestedAppointment
    isExternal: true
    href: SuperOffice.CRM.Services.SuggestedAppointment.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.SuggestedAppointment
    name: SuggestedAppointment
    isExternal: true
    href: SuperOffice.CRM.Services.SuggestedAppointment.html
  - name: )
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultReOpenAppointmentAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultReOpenAppointmentAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_CreateDefaultReOpenAppointmentAsync_System_Int32_System_Threading_CancellationToken_
  name: CreateDefaultReOpenAppointmentAsync
  nameWithType: IAppointmentAgent.CreateDefaultReOpenAppointmentAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultReOpenAppointmentAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestionAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestionAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_CreateDefaultAppointmentEntityFromProjectSuggestionAsync_System_Int32_System_Int32_System_Boolean_System_Int32_System_Threading_CancellationToken_
  name: CreateDefaultAppointmentEntityFromProjectSuggestionAsync
  nameWithType: IAppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestionAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestionAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateAppointmentForUIDAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.CreateAppointmentForUIDAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_CreateAppointmentForUIDAsync_SuperOffice_CRM_Services_AppointmentEntity_System_String_System_Threading_CancellationToken_
  name: CreateAppointmentForUIDAsync
  nameWithType: IAppointmentAgent.CreateAppointmentForUIDAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateAppointmentForUIDAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentFromUIDAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentFromUIDAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetAppointmentFromUIDAsync_System_String_System_Threading_CancellationToken_
  name: GetAppointmentFromUIDAsync
  nameWithType: IAppointmentAgent.GetAppointmentFromUIDAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentFromUIDAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CanAssignToProjectMemberAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.CanAssignToProjectMemberAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_CanAssignToProjectMemberAsync_System_Int32_System_Int32_System_Threading_CancellationToken_
  name: CanAssignToProjectMemberAsync
  nameWithType: IAppointmentAgent.CanAssignToProjectMemberAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CanAssignToProjectMemberAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetUIDFromAppointmentIdAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetUIDFromAppointmentIdAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetUIDFromAppointmentIdAsync_System_Int32_System_Boolean_System_Threading_CancellationToken_
  name: GetUIDFromAppointmentIdAsync
  nameWithType: IAppointmentAgent.GetUIDFromAppointmentIdAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetUIDFromAppointmentIdAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointmentFromIcsResponseAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointmentFromIcsResponseAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_UpdateAppointmentFromIcsResponseAsync_System_String_System_IO_Stream_System_Threading_CancellationToken_
  name: UpdateAppointmentFromIcsResponseAsync
  nameWithType: IAppointmentAgent.UpdateAppointmentFromIcsResponseAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointmentFromIcsResponseAsync
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
- uid: SuperOffice.CRM.Services.IAppointmentAgent.ValidateAppointmentEntityAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.ValidateAppointmentEntityAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_ValidateAppointmentEntityAsync_SuperOffice_CRM_Services_AppointmentEntity_System_Threading_CancellationToken_
  name: ValidateAppointmentEntityAsync
  nameWithType: IAppointmentAgent.ValidateAppointmentEntityAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.ValidateAppointmentEntityAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.StringDictionary}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.StringDictionary}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<StringDictionary>
  nameWithType: Task<StringDictionary>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.StringDictionary>
  nameWithType.vb: Task(Of StringDictionary)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.StringDictionary)
  name.vb: Task(Of StringDictionary)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.StringDictionary
    name: StringDictionary
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.StringDictionary
    name: StringDictionary
    isExternal: true
  - name: )
- uid: SuperOffice.CRM.Services.IAppointmentAgent.WillSendEmailAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.WillSendEmailAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_WillSendEmailAsync_SuperOffice_CRM_Services_AppointmentEntity_System_Threading_CancellationToken_
  name: WillSendEmailAsync
  nameWithType: IAppointmentAgent.WillSendEmailAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.WillSendEmailAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.AcceptWithSmtpEmailConfirmationAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.AcceptWithSmtpEmailConfirmationAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_AcceptWithSmtpEmailConfirmationAsync_System_Int32_SuperOffice_Data_RecurrenceUpdateMode_SuperOffice_CRM_Services_EMailConnectionInfo_System_Threading_CancellationToken_
  name: AcceptWithSmtpEmailConfirmationAsync
  nameWithType: IAppointmentAgent.AcceptWithSmtpEmailConfirmationAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.AcceptWithSmtpEmailConfirmationAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.RejectWithSmtpEmailConfirmationAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.RejectWithSmtpEmailConfirmationAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_RejectWithSmtpEmailConfirmationAsync_System_Int32_System_String_SuperOffice_Data_RecurrenceUpdateMode_SuperOffice_CRM_Services_EMailConnectionInfo_System_Threading_CancellationToken_
  name: RejectWithSmtpEmailConfirmationAsync
  nameWithType: IAppointmentAgent.RejectWithSmtpEmailConfirmationAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.RejectWithSmtpEmailConfirmationAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentEmailInvitationAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentEmailInvitationAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetAppointmentEmailInvitationAsync_SuperOffice_CRM_Services_AppointmentEntity_System_String_System_String_System_Threading_CancellationToken_
  name: GetAppointmentEmailInvitationAsync
  nameWithType: IAppointmentAgent.GetAppointmentEmailInvitationAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentEmailInvitationAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.EMailEntity}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.EMailEntity}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<EMailEntity>
  nameWithType: Task<EMailEntity>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.EMailEntity>
  nameWithType.vb: Task(Of EMailEntity)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.EMailEntity)
  name.vb: Task(Of EMailEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.EMailEntity
    name: EMailEntity
    isExternal: true
    href: SuperOffice.CRM.Services.EMailEntity.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.EMailEntity
    name: EMailEntity
    isExternal: true
    href: SuperOffice.CRM.Services.EMailEntity.html
  - name: )
- uid: SuperOffice.CRM.Services.IAppointmentAgent.SaveWithCustomInvitationAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.SaveWithCustomInvitationAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_SaveWithCustomInvitationAsync_SuperOffice_CRM_Services_AppointmentEntity_SuperOffice_Data_RecurrenceUpdateMode_System_Boolean_SuperOffice_CRM_Services_EMailConnectionInfo_SuperOffice_CRM_Services_EMailConnectionInfo_System_String_System_String_System_String_System_Threading_CancellationToken_
  name: SaveWithCustomInvitationAsync
  nameWithType: IAppointmentAgent.SaveWithCustomInvitationAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.SaveWithCustomInvitationAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.AppointmentSaveData}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.AppointmentSaveData}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<AppointmentSaveData>
  nameWithType: Task<AppointmentSaveData>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.AppointmentSaveData>
  nameWithType.vb: Task(Of AppointmentSaveData)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.AppointmentSaveData)
  name.vb: Task(Of AppointmentSaveData)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.AppointmentSaveData
    name: AppointmentSaveData
    isExternal: true
    href: SuperOffice.CRM.Services.AppointmentSaveData.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.AppointmentSaveData
    name: AppointmentSaveData
    isExternal: true
    href: SuperOffice.CRM.Services.AppointmentSaveData.html
  - name: )
- uid: SuperOffice.CRM.Services.IAppointmentAgent.ConvertAppointmentToTaskAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.ConvertAppointmentToTaskAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_ConvertAppointmentToTaskAsync_System_Int32_System_Threading_CancellationToken_
  name: ConvertAppointmentToTaskAsync
  nameWithType: IAppointmentAgent.ConvertAppointmentToTaskAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.ConvertAppointmentToTaskAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentListAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentListAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetAppointmentListAsync_System_Int32___System_Threading_CancellationToken_
  name: GetAppointmentListAsync
  nameWithType: IAppointmentAgent.GetAppointmentListAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentListAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.Appointment[]}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.Appointment[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Appointment[]>
  nameWithType: Task<Appointment[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.Appointment[]>
  nameWithType.vb: Task(Of Appointment())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.Appointment())
  name.vb: Task(Of Appointment())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.Appointment
    name: Appointment
    isExternal: true
    href: SuperOffice.CRM.Services.Appointment.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.Appointment
    name: Appointment
    isExternal: true
    href: SuperOffice.CRM.Services.Appointment.html
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetMyAppointmentsAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetMyAppointmentsAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetMyAppointmentsAsync_System_DateTime_System_DateTime_System_Int32_System_Threading_CancellationToken_
  name: GetMyAppointmentsAsync
  nameWithType: IAppointmentAgent.GetMyAppointmentsAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetMyAppointmentsAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetPersonAppointmentsAsync_System_Int32_System_Boolean_System_DateTime_System_DateTime_System_Int32_System_Threading_CancellationToken_
  name: GetPersonAppointmentsAsync
  nameWithType: IAppointmentAgent.GetPersonAppointmentsAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetMyDiaryAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetMyDiaryAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetMyDiaryAsync_System_DateTime_System_DateTime_System_Int32_System_Threading_CancellationToken_
  name: GetMyDiaryAsync
  nameWithType: IAppointmentAgent.GetMyDiaryAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetMyDiaryAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetMyTasksAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetMyTasksAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetMyTasksAsync_System_Int32_System_Threading_CancellationToken_
  name: GetMyTasksAsync
  nameWithType: IAppointmentAgent.GetMyTasksAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetMyTasksAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonDiaryAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetPersonDiaryAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetPersonDiaryAsync_System_Int32_System_DateTime_System_DateTime_System_Int32_System_Threading_CancellationToken_
  name: GetPersonDiaryAsync
  nameWithType: IAppointmentAgent.GetPersonDiaryAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonDiaryAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonTasksAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetPersonTasksAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetPersonTasksAsync_System_Int32_System_Int32_System_Threading_CancellationToken_
  name: GetPersonTasksAsync
  nameWithType: IAppointmentAgent.GetPersonTasksAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonTasksAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTypeAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTypeAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetPersonAppointmentsByTypeAsync_System_Int32_System_Boolean_System_DateTime_System_DateTime_System_Int32_SuperOffice_Data_AppointmentType_System_Threading_CancellationToken_
  name: GetPersonAppointmentsByTypeAsync
  nameWithType: IAppointmentAgent.GetPersonAppointmentsByTypeAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTypeAsync
- uid: SuperOffice.Data.AppointmentType
  isExternal: true
  name: AppointmentType
  nameWithType: AppointmentType
  fullName: SuperOffice.Data.AppointmentType
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetProjectAppointmentsAsync_System_Int32_System_DateTime_System_DateTime_System_Int32_System_Threading_CancellationToken_
  name: GetProjectAppointmentsAsync
  nameWithType: IAppointmentAgent.GetProjectAppointmentsAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTypeAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTypeAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetProjectAppointmentsByTypeAsync_System_Int32_System_DateTime_System_DateTime_System_Int32_SuperOffice_Data_AppointmentType_System_Threading_CancellationToken_
  name: GetProjectAppointmentsByTypeAsync
  nameWithType: IAppointmentAgent.GetProjectAppointmentsByTypeAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTypeAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetContactAppointmentsAsync_System_Int32_System_DateTime_System_DateTime_System_Int32_System_Threading_CancellationToken_
  name: GetContactAppointmentsAsync
  nameWithType: IAppointmentAgent.GetContactAppointmentsAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTypeAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTypeAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetContactAppointmentsByTypeAsync_System_Int32_System_DateTime_System_DateTime_System_Int32_SuperOffice_Data_AppointmentType_System_Threading_CancellationToken_
  name: GetContactAppointmentsByTypeAsync
  nameWithType: IAppointmentAgent.GetContactAppointmentsByTypeAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTypeAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetProjectMemberAppointmentsAsync_System_Int32_System_DateTime_System_DateTime_System_Int32_System_Threading_CancellationToken_
  name: GetProjectMemberAppointmentsAsync
  nameWithType: IAppointmentAgent.GetProjectMemberAppointmentsAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTypeAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTypeAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetProjectMemberAppointmentsByTypeAsync_System_Int32_System_DateTime_System_DateTime_System_Int32_SuperOffice_Data_AppointmentType_System_Threading_CancellationToken_
  name: GetProjectMemberAppointmentsByTypeAsync
  nameWithType: IAppointmentAgent.GetProjectMemberAppointmentsByTypeAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTypeAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTaskAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTaskAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetPersonAppointmentsByTaskAsync_System_Int32_System_Boolean_System_DateTime_System_DateTime_System_Int32_System_Int32_System_Threading_CancellationToken_
  name: GetPersonAppointmentsByTaskAsync
  nameWithType: IAppointmentAgent.GetPersonAppointmentsByTaskAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTaskAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTasksAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTasksAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetPersonAppointmentsByTasksAsync_System_Int32_System_Boolean_System_DateTime_System_DateTime_System_Int32_System_Int32___System_Threading_CancellationToken_
  name: GetPersonAppointmentsByTasksAsync
  nameWithType: IAppointmentAgent.GetPersonAppointmentsByTasksAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTasksAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTaskHeadingAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTaskHeadingAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetPersonAppointmentsByTaskHeadingAsync_System_Int32_System_Boolean_System_DateTime_System_DateTime_System_Int32_System_Int32_System_Threading_CancellationToken_
  name: GetPersonAppointmentsByTaskHeadingAsync
  nameWithType: IAppointmentAgent.GetPersonAppointmentsByTaskHeadingAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTaskHeadingAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTaskAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTaskAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetProjectAppointmentsByTaskAsync_System_Int32_System_DateTime_System_DateTime_System_Int32_System_Int32_System_Threading_CancellationToken_
  name: GetProjectAppointmentsByTaskAsync
  nameWithType: IAppointmentAgent.GetProjectAppointmentsByTaskAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTaskAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTasksAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTasksAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetProjectAppointmentsByTasksAsync_System_Int32_System_DateTime_System_DateTime_System_Int32_System_Int32___System_Threading_CancellationToken_
  name: GetProjectAppointmentsByTasksAsync
  nameWithType: IAppointmentAgent.GetProjectAppointmentsByTasksAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTasksAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTaskHeadingAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTaskHeadingAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetProjectAppointmentsByTaskHeadingAsync_System_Int32_System_DateTime_System_DateTime_System_Int32_System_Int32_System_Threading_CancellationToken_
  name: GetProjectAppointmentsByTaskHeadingAsync
  nameWithType: IAppointmentAgent.GetProjectAppointmentsByTaskHeadingAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTaskHeadingAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTaskAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTaskAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetProjectMemberAppointmentsByTaskAsync_System_Int32_System_DateTime_System_DateTime_System_Int32_System_Int32_System_Threading_CancellationToken_
  name: GetProjectMemberAppointmentsByTaskAsync
  nameWithType: IAppointmentAgent.GetProjectMemberAppointmentsByTaskAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTaskAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTasksAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTasksAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetProjectMemberAppointmentsByTasksAsync_System_Int32_System_DateTime_System_DateTime_System_Int32_System_Int32___System_Threading_CancellationToken_
  name: GetProjectMemberAppointmentsByTasksAsync
  nameWithType: IAppointmentAgent.GetProjectMemberAppointmentsByTasksAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTasksAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTaskHeadingAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTaskHeadingAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetProjectMemberAppointmentsByTaskHeadingAsync_System_Int32_System_DateTime_System_DateTime_System_Int32_System_Int32_System_Threading_CancellationToken_
  name: GetProjectMemberAppointmentsByTaskHeadingAsync
  nameWithType: IAppointmentAgent.GetProjectMemberAppointmentsByTaskHeadingAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTaskHeadingAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTaskAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTaskAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetContactAppointmentsByTaskAsync_System_Int32_System_DateTime_System_DateTime_System_Int32_System_Int32_System_Threading_CancellationToken_
  name: GetContactAppointmentsByTaskAsync
  nameWithType: IAppointmentAgent.GetContactAppointmentsByTaskAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTaskAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTasksAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTasksAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetContactAppointmentsByTasksAsync_System_Int32_System_DateTime_System_DateTime_System_Int32_System_Int32___System_Threading_CancellationToken_
  name: GetContactAppointmentsByTasksAsync
  nameWithType: IAppointmentAgent.GetContactAppointmentsByTasksAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTasksAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTaskHeadingAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTaskHeadingAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetContactAppointmentsByTaskHeadingAsync_System_Int32_System_DateTime_System_DateTime_System_Int32_System_Int32_System_Threading_CancellationToken_
  name: GetContactAppointmentsByTaskHeadingAsync
  nameWithType: IAppointmentAgent.GetContactAppointmentsByTaskHeadingAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTaskHeadingAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedAppointmentAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedAppointmentAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetPublishedAppointmentAsync_System_Int32_System_Threading_CancellationToken_
  name: GetPublishedAppointmentAsync
  nameWithType: IAppointmentAgent.GetPublishedAppointmentAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedAppointmentAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedAppointmentsAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedAppointmentsAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetPublishedAppointmentsAsync_System_Int32___System_Threading_CancellationToken_
  name: GetPublishedAppointmentsAsync
  nameWithType: IAppointmentAgent.GetPublishedAppointmentsAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedAppointmentsAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetMyPublishedAppointmentsAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetMyPublishedAppointmentsAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetMyPublishedAppointmentsAsync_System_Threading_CancellationToken_
  name: GetMyPublishedAppointmentsAsync
  nameWithType: IAppointmentAgent.GetMyPublishedAppointmentsAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetMyPublishedAppointmentsAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedProjectAppointmentsAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedProjectAppointmentsAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetPublishedProjectAppointmentsAsync_System_Int32_System_Threading_CancellationToken_
  name: GetPublishedProjectAppointmentsAsync
  nameWithType: IAppointmentAgent.GetPublishedProjectAppointmentsAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedProjectAppointmentsAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentsByTaskHeadingAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentsByTaskHeadingAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetAppointmentsByTaskHeadingAsync_System_Int32_System_Threading_CancellationToken_
  name: GetAppointmentsByTaskHeadingAsync
  nameWithType: IAppointmentAgent.GetAppointmentsByTaskHeadingAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentsByTaskHeadingAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetAssociateDiaryAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetAssociateDiaryAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetAssociateDiaryAsync_System_Int32_System_DateTime_System_DateTime_System_Int32_System_Threading_CancellationToken_
  name: GetAssociateDiaryAsync
  nameWithType: IAppointmentAgent.GetAssociateDiaryAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetAssociateDiaryAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetDiaryByGroupAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetDiaryByGroupAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetDiaryByGroupAsync_System_Int32_System_Int32_System_DateTime_System_DateTime_System_Int32_System_Threading_CancellationToken_
  name: GetDiaryByGroupAsync
  nameWithType: IAppointmentAgent.GetDiaryByGroupAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetDiaryByGroupAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointmentAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointmentAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_UpdateAppointmentAsync_System_Int32_System_DateTime_System_DateTime_System_Int32_System_Int32_System_Int32_System_Threading_CancellationToken_
  name: UpdateAppointmentAsync
  nameWithType: IAppointmentAgent.UpdateAppointmentAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointmentAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointmentWithModeAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointmentWithModeAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_UpdateAppointmentWithModeAsync_System_Int32_System_DateTime_System_DateTime_SuperOffice_Data_AppointmentStatus_SuperOffice_Data_AppointmentType_System_Int32_SuperOffice_Data_RecurrenceUpdateMode_System_Threading_CancellationToken_
  name: UpdateAppointmentWithModeAsync
  nameWithType: IAppointmentAgent.UpdateAppointmentWithModeAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointmentWithModeAsync
- uid: SuperOffice.Data.AppointmentStatus
  isExternal: true
  name: AppointmentStatus
  nameWithType: AppointmentStatus
  fullName: SuperOffice.Data.AppointmentStatus
- uid: SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointmentWithModeAndEmailAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointmentWithModeAndEmailAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_UpdateAppointmentWithModeAndEmailAsync_System_Int32_System_DateTime_System_DateTime_SuperOffice_Data_AppointmentStatus_SuperOffice_Data_AppointmentType_System_Int32_SuperOffice_Data_RecurrenceUpdateMode_System_Boolean_SuperOffice_CRM_Services_EMailConnectionInfo_SuperOffice_CRM_Services_EMailConnectionInfo_System_Threading_CancellationToken_
  name: UpdateAppointmentWithModeAndEmailAsync
  nameWithType: IAppointmentAgent.UpdateAppointmentWithModeAndEmailAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointmentWithModeAndEmailAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetAssociatesDiaryAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetAssociatesDiaryAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetAssociatesDiaryAsync_System_Int32___System_DateTime_System_DateTime_System_Threading_CancellationToken_
  name: GetAssociatesDiaryAsync
  nameWithType: IAppointmentAgent.GetAssociatesDiaryAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetAssociatesDiaryAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetAssociatesDiaryInfoAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetAssociatesDiaryInfoAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetAssociatesDiaryInfoAsync_System_Int32___System_DateTime_System_DateTime_System_Threading_CancellationToken_
  name: GetAssociatesDiaryInfoAsync
  nameWithType: IAppointmentAgent.GetAssociatesDiaryInfoAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetAssociatesDiaryInfoAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.AppointmentInfo[]}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.AppointmentInfo[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<AppointmentInfo[]>
  nameWithType: Task<AppointmentInfo[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.AppointmentInfo[]>
  nameWithType.vb: Task(Of AppointmentInfo())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.AppointmentInfo())
  name.vb: Task(Of AppointmentInfo())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.AppointmentInfo
    name: AppointmentInfo
    isExternal: true
    href: SuperOffice.CRM.Services.AppointmentInfo.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.AppointmentInfo
    name: AppointmentInfo
    isExternal: true
    href: SuperOffice.CRM.Services.AppointmentInfo.html
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentRecordsAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentRecordsAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetAppointmentRecordsAsync_System_Int32_System_Int32_System_Threading_CancellationToken_
  name: GetAppointmentRecordsAsync
  nameWithType: IAppointmentAgent.GetAppointmentRecordsAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentRecordsAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetMySyncAppointmentsAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetMySyncAppointmentsAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetMySyncAppointmentsAsync_System_DateTime_System_DateTime_System_Threading_CancellationToken_
  name: GetMySyncAppointmentsAsync
  nameWithType: IAppointmentAgent.GetMySyncAppointmentsAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetMySyncAppointmentsAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.AppointmentSyncData[]}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.AppointmentSyncData[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<AppointmentSyncData[]>
  nameWithType: Task<AppointmentSyncData[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.AppointmentSyncData[]>
  nameWithType.vb: Task(Of AppointmentSyncData())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.AppointmentSyncData())
  name.vb: Task(Of AppointmentSyncData())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.AppointmentSyncData
    name: AppointmentSyncData
    isExternal: true
    href: SuperOffice.CRM.Services.AppointmentSyncData.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.AppointmentSyncData
    name: AppointmentSyncData
    isExternal: true
    href: SuperOffice.CRM.Services.AppointmentSyncData.html
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetDayInformationListByDatesAndAssociateAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetDayInformationListByDatesAndAssociateAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetDayInformationListByDatesAndAssociateAsync_System_DateTime_System_DateTime_System_Int32_System_Threading_CancellationToken_
  name: GetDayInformationListByDatesAndAssociateAsync
  nameWithType: IAppointmentAgent.GetDayInformationListByDatesAndAssociateAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetDayInformationListByDatesAndAssociateAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.DayInformationListItem[]}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.DayInformationListItem[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<DayInformationListItem[]>
  nameWithType: Task<DayInformationListItem[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.DayInformationListItem[]>
  nameWithType.vb: Task(Of DayInformationListItem())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.DayInformationListItem())
  name.vb: Task(Of DayInformationListItem())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.DayInformationListItem
    name: DayInformationListItem
    isExternal: true
    href: SuperOffice.CRM.Services.DayInformationListItem.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.DayInformationListItem
    name: DayInformationListItem
    isExternal: true
    href: SuperOffice.CRM.Services.DayInformationListItem.html
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetActivityInformationListByDatesAndAssociateAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetActivityInformationListByDatesAndAssociateAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetActivityInformationListByDatesAndAssociateAsync_System_DateTime_System_DateTime_System_Int32_System_Threading_CancellationToken_
  name: GetActivityInformationListByDatesAndAssociateAsync
  nameWithType: IAppointmentAgent.GetActivityInformationListByDatesAndAssociateAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetActivityInformationListByDatesAndAssociateAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.ActivityInformationListItem[]}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.ActivityInformationListItem[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ActivityInformationListItem[]>
  nameWithType: Task<ActivityInformationListItem[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.ActivityInformationListItem[]>
  nameWithType.vb: Task(Of ActivityInformationListItem())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.ActivityInformationListItem())
  name.vb: Task(Of ActivityInformationListItem())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.ActivityInformationListItem
    name: ActivityInformationListItem
    isExternal: true
    href: SuperOffice.CRM.Services.ActivityInformationListItem.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.ActivityInformationListItem
    name: ActivityInformationListItem
    isExternal: true
    href: SuperOffice.CRM.Services.ActivityInformationListItem.html
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetRedLetterInformationListByDatesAndAssociateAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetRedLetterInformationListByDatesAndAssociateAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetRedLetterInformationListByDatesAndAssociateAsync_System_DateTime_System_DateTime_System_Int32_System_Threading_CancellationToken_
  name: GetRedLetterInformationListByDatesAndAssociateAsync
  nameWithType: IAppointmentAgent.GetRedLetterInformationListByDatesAndAssociateAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetRedLetterInformationListByDatesAndAssociateAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.RedLetterInformationListItem[]}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.RedLetterInformationListItem[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<RedLetterInformationListItem[]>
  nameWithType: Task<RedLetterInformationListItem[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.RedLetterInformationListItem[]>
  nameWithType.vb: Task(Of RedLetterInformationListItem())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.RedLetterInformationListItem())
  name.vb: Task(Of RedLetterInformationListItem())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.RedLetterInformationListItem
    name: RedLetterInformationListItem
    isExternal: true
    href: SuperOffice.CRM.Services.RedLetterInformationListItem.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.RedLetterInformationListItem
    name: RedLetterInformationListItem
    isExternal: true
    href: SuperOffice.CRM.Services.RedLetterInformationListItem.html
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetAlarmsAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetAlarmsAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetAlarmsAsync_System_Boolean_System_Boolean_System_Int32_System_Threading_CancellationToken_
  name: GetAlarmsAsync
  nameWithType: IAppointmentAgent.GetAlarmsAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetAlarmsAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.MultiAlarmData}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.MultiAlarmData}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<MultiAlarmData>
  nameWithType: Task<MultiAlarmData>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.MultiAlarmData>
  nameWithType.vb: Task(Of MultiAlarmData)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.MultiAlarmData)
  name.vb: Task(Of MultiAlarmData)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.MultiAlarmData
    name: MultiAlarmData
    isExternal: true
    href: SuperOffice.CRM.Services.MultiAlarmData.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.MultiAlarmData
    name: MultiAlarmData
    isExternal: true
    href: SuperOffice.CRM.Services.MultiAlarmData.html
  - name: )
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetNextAvailableTimeAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetNextAvailableTimeAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetNextAvailableTimeAsync_System_Int32___System_DateTime_System_DateTime_System_Int32_System_Boolean_System_Threading_CancellationToken_
  name: GetNextAvailableTimeAsync
  nameWithType: IAppointmentAgent.GetNextAvailableTimeAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetNextAvailableTimeAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.NextAvailableTime[]}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.NextAvailableTime[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<NextAvailableTime[]>
  nameWithType: Task<NextAvailableTime[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.NextAvailableTime[]>
  nameWithType.vb: Task(Of NextAvailableTime())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.NextAvailableTime())
  name.vb: Task(Of NextAvailableTime())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.NextAvailableTime
    name: NextAvailableTime
    isExternal: true
    href: SuperOffice.CRM.Services.NextAvailableTime.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.NextAvailableTime
    name: NextAvailableTime
    isExternal: true
    href: SuperOffice.CRM.Services.NextAvailableTime.html
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GenerateLeadAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GenerateLeadAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GenerateLeadAsync_System_Int32_System_String_System_String_System_Int32_System_String_System_String_System_String_System_String_System_String_System_String_System_String_System_String_System_Threading_CancellationToken_
  name: GenerateLeadAsync
  nameWithType: IAppointmentAgent.GenerateLeadAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GenerateLeadAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.SalesActivity}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.SalesActivity}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<SalesActivity>
  nameWithType: Task<SalesActivity>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.SalesActivity>
  nameWithType.vb: Task(Of SalesActivity)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.SalesActivity)
  name.vb: Task(Of SalesActivity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.SalesActivity
    name: SalesActivity
    isExternal: true
    href: SuperOffice.CRM.Services.SalesActivity.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.SalesActivity
    name: SalesActivity
    isExternal: true
    href: SuperOffice.CRM.Services.SalesActivity.html
  - name: )
- uid: SuperOffice.CRM.Services.IAppointmentAgent.RequestForInfoAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.RequestForInfoAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_RequestForInfoAsync_System_Int32_System_String_System_String_System_String_System_String_System_String_System_String_System_String_System_Threading_CancellationToken_
  name: RequestForInfoAsync
  nameWithType: IAppointmentAgent.RequestForInfoAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.RequestForInfoAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetSuggestedAppointmentAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetSuggestedAppointmentAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetSuggestedAppointmentAsync_System_Int32_System_Threading_CancellationToken_
  name: GetSuggestedAppointmentAsync
  nameWithType: IAppointmentAgent.GetSuggestedAppointmentAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetSuggestedAppointmentAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultSuggestedAppointmentEntityAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultSuggestedAppointmentEntityAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_CreateDefaultSuggestedAppointmentEntityAsync_System_Threading_CancellationToken_
  name: CreateDefaultSuggestedAppointmentEntityAsync
  nameWithType: IAppointmentAgent.CreateDefaultSuggestedAppointmentEntityAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultSuggestedAppointmentEntityAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.SuggestedAppointmentEntity}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.SuggestedAppointmentEntity}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<SuggestedAppointmentEntity>
  nameWithType: Task<SuggestedAppointmentEntity>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.SuggestedAppointmentEntity>
  nameWithType.vb: Task(Of SuggestedAppointmentEntity)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.SuggestedAppointmentEntity)
  name.vb: Task(Of SuggestedAppointmentEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.SuggestedAppointmentEntity
    name: SuggestedAppointmentEntity
    isExternal: true
    href: SuperOffice.CRM.Services.SuggestedAppointmentEntity.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.SuggestedAppointmentEntity
    name: SuggestedAppointmentEntity
    isExternal: true
    href: SuperOffice.CRM.Services.SuggestedAppointmentEntity.html
  - name: )
- uid: SuperOffice.CRM.Services.IAppointmentAgent.SaveSuggestedAppointmentEntityAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.SaveSuggestedAppointmentEntityAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_SaveSuggestedAppointmentEntityAsync_SuperOffice_CRM_Services_SuggestedAppointmentEntity_System_Threading_CancellationToken_
  name: SaveSuggestedAppointmentEntityAsync
  nameWithType: IAppointmentAgent.SaveSuggestedAppointmentEntityAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.SaveSuggestedAppointmentEntityAsync
- uid: SuperOffice.CRM.Services.SuggestedAppointmentEntity
  commentId: T:SuperOffice.CRM.Services.SuggestedAppointmentEntity
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.SuggestedAppointmentEntity.html
  name: SuggestedAppointmentEntity
  nameWithType: SuggestedAppointmentEntity
  fullName: SuperOffice.CRM.Services.SuggestedAppointmentEntity
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetSuggestedAppointmentEntityAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetSuggestedAppointmentEntityAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetSuggestedAppointmentEntityAsync_System_Int32_System_Threading_CancellationToken_
  name: GetSuggestedAppointmentEntityAsync
  nameWithType: IAppointmentAgent.GetSuggestedAppointmentEntityAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetSuggestedAppointmentEntityAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultTaskListItemAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultTaskListItemAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_CreateDefaultTaskListItemAsync_System_Threading_CancellationToken_
  name: CreateDefaultTaskListItemAsync
  nameWithType: IAppointmentAgent.CreateDefaultTaskListItemAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultTaskListItemAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.TaskListItem}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.TaskListItem}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TaskListItem>
  nameWithType: Task<TaskListItem>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.TaskListItem>
  nameWithType.vb: Task(Of TaskListItem)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.TaskListItem)
  name.vb: Task(Of TaskListItem)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.TaskListItem
    name: TaskListItem
    isExternal: true
    href: SuperOffice.CRM.Services.TaskListItem.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.TaskListItem
    name: TaskListItem
    isExternal: true
    href: SuperOffice.CRM.Services.TaskListItem.html
  - name: )
- uid: SuperOffice.CRM.Services.IAppointmentAgent.SaveTaskListItemAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.SaveTaskListItemAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_SaveTaskListItemAsync_SuperOffice_CRM_Services_TaskListItem_System_Threading_CancellationToken_
  name: SaveTaskListItemAsync
  nameWithType: IAppointmentAgent.SaveTaskListItemAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.SaveTaskListItemAsync
- uid: SuperOffice.CRM.Services.TaskListItem
  commentId: T:SuperOffice.CRM.Services.TaskListItem
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.TaskListItem.html
  name: TaskListItem
  nameWithType: TaskListItem
  fullName: SuperOffice.CRM.Services.TaskListItem
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetTaskListItemAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetTaskListItemAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetTaskListItemAsync_System_Int32_System_Threading_CancellationToken_
  name: GetTaskListItemAsync
  nameWithType: IAppointmentAgent.GetTaskListItemAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetTaskListItemAsync
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetTaskListItemsAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetTaskListItemsAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetTaskListItemsAsync_System_Boolean_System_Threading_CancellationToken_
  name: GetTaskListItemsAsync
  nameWithType: IAppointmentAgent.GetTaskListItemsAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetTaskListItemsAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.TaskListItem[]}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.TaskListItem[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TaskListItem[]>
  nameWithType: Task<TaskListItem[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.TaskListItem[]>
  nameWithType.vb: Task(Of TaskListItem())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.TaskListItem())
  name.vb: Task(Of TaskListItem())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.TaskListItem
    name: TaskListItem
    isExternal: true
    href: SuperOffice.CRM.Services.TaskListItem.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.TaskListItem
    name: TaskListItem
    isExternal: true
    href: SuperOffice.CRM.Services.TaskListItem.html
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateVideoMeetingReservationAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.CreateVideoMeetingReservationAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_CreateVideoMeetingReservationAsync_System_Threading_CancellationToken_
  name: CreateVideoMeetingReservationAsync
  nameWithType: IAppointmentAgent.CreateVideoMeetingReservationAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateVideoMeetingReservationAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.VideoMeetingReservation}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.VideoMeetingReservation}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<VideoMeetingReservation>
  nameWithType: Task<VideoMeetingReservation>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.VideoMeetingReservation>
  nameWithType.vb: Task(Of VideoMeetingReservation)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.VideoMeetingReservation)
  name.vb: Task(Of VideoMeetingReservation)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.VideoMeetingReservation
    name: VideoMeetingReservation
    isExternal: true
    href: SuperOffice.CRM.Services.VideoMeetingReservation.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.VideoMeetingReservation
    name: VideoMeetingReservation
    isExternal: true
    href: SuperOffice.CRM.Services.VideoMeetingReservation.html
  - name: )
- uid: SuperOffice.CRM.Services.IAppointmentAgent.DeleteVideoMeetingReservationAsync*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.DeleteVideoMeetingReservationAsync
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_DeleteVideoMeetingReservationAsync_System_String_System_Threading_CancellationToken_
  name: DeleteVideoMeetingReservationAsync
  nameWithType: IAppointmentAgent.DeleteVideoMeetingReservationAsync
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.DeleteVideoMeetingReservationAsync
