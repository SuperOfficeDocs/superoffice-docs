### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Services.ISelectionAgent
  commentId: T:SuperOffice.CRM.Services.ISelectionAgent
  id: ISelectionAgent
  parent: SuperOffice.CRM.Services
  children:
  - SuperOffice.CRM.Services.ISelectionAgent.AddContactSelectionMembersAsync(System.Int32,SuperOffice.CRM.Services.ContactPersonId[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISelectionAgent.AddContactSelectionMembersFromSearchAsync(System.Int32,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISelectionAgent.AddRemoveContactSelectionMemberInterestsAsync(System.Int32,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISelectionAgent.AddSelectionMembersAsync(System.Int32,System.Int32[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISelectionAgent.AddSelectionMembersFromSearchAsync(System.Int32,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISelectionAgent.CopyContactSelectionMembersAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISelectionAgent.CopySelectionMembersAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISelectionAgent.CreateContactSelectionFromSelectionAsync(System.Int32,System.String,SuperOffice.Data.SelectionType,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISelectionAgent.CreateContactSelectionFromShadowSelectionAsync(System.Int32,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISelectionAgent.CreateDefaultSelectionEntityAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISelectionAgent.CreateNewEntryAsync(SuperOffice.CRM.Services.DuplicateEntry,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISelectionAgent.CreateSelectionEntityAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISelectionAgent.CreateSelectionFromSelectionAsync(System.Int32,System.String,SuperOffice.Data.SelectionType,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionFromContactPersonIdsAsync(SuperOffice.CRM.Services.ContactPersonId[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionFromSelectionMemberIdsAsync(System.Int32,System.Int32[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISelectionAgent.CreateTemporarySelectionFromIdsAsync(System.Int32[],System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISelectionAgent.DeleteContactsAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISelectionAgent.DeleteEntitiesAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISelectionAgent.DeletePersonsAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISelectionAgent.DeleteSelectionEntityAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISelectionAgent.EditContactSelectionMemberDetailsAsync(System.Int32,SuperOffice.CRM.Services.SelectionMemberEditValues,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISelectionAgent.ExportSelectionMembersAsync(System.Int32,System.String,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISelectionAgent.ExportSelectionMembersWithOrderByAsync(System.Int32,System.String,System.Boolean,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISelectionAgent.GenerateFollowUpsAsync(System.Int32,SuperOffice.CRM.Services.AppointmentEntity,System.Int32,System.Boolean,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISelectionAgent.GetDuplicateRulesAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISelectionAgent.GetDuplicatesAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISelectionAgent.GetDynamicSelectionCriteriaAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISelectionAgent.GetDynamicSelectionCriteriaGroupsAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISelectionAgent.GetParentCombinedSelectionsAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatisticsAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatisticsFromContactPersonIdsAsync(SuperOffice.CRM.Services.ContactPersonId[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatisticsFromProjectMembersAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISelectionAgent.GetSelectionEntityAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISelectionAgent.GetSelectionForFindAsync(System.String,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISelectionAgent.GetSelectionMembersArchiveRowsAsync(System.Int32,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISelectionAgent.GetSelectionShadowMembersArchiveRowsAsync(System.Int32,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISelectionAgent.GetSelectionSummariesAsync(System.Int32[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembersAsync(System.Int32,SuperOffice.CRM.Services.ContactPersonId[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembersFromIdsAsync(System.Int32,System.Int32[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembersFromSearchAsync(System.Int32,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembersAsync(System.Int32,System.Int32[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembersByIdAsync(System.Int32,System.Int32[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembersFromSearchAsync(System.Int32,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISelectionAgent.SaveSelectionEntityAsync(SuperOffice.CRM.Services.SelectionEntity,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISelectionAgent.SetDuplicateRulesStatusAsync(SuperOffice.CRM.Services.DuplicateRule[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteria2Async(System.Int32,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteria3Async(System.Int32,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteriaAsync(System.Int32,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteriaGroupsAsync(System.Int32,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ISelectionAgent.UpdateTypicalSearchAsync(SuperOffice.CRM.Services.TypicalSearches,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: ISelectionAgent
  nameWithType: ISelectionAgent
  fullName: SuperOffice.CRM.Services.ISelectionAgent
  type: Interface
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nInterface for the Selection Agent\nSelections, entities, members and tasks\n"
  example:
  - "\n<pre><code>  using SuperOffice;\n  using SuperOffice.CRM.Services;\n\n  using (SoSession mySession = SoSession.Authenticate(&quot;user&quot;, &quot;pass&quot;))\n  {\n     using (SelectionAgent agent = new SelectionAgent())\n     {\n        // call methods on agent here...\n     }\n  }</code></pre>\n"
  syntax:
    content: >-
      [Agent("Selection Agent", "Interface for the Selection Agent. Selections, entities, members and tasks")]

      public interface ISelectionAgent : IAgent
    content.vb: >-
      <Agent("Selection Agent", "Interface for the Selection Agent. Selections, entities, members and tasks")>

      Public Interface ISelectionAgent
          Inherits IAgent
  attributes:
  - type: SuperOffice.CRM.Services.Reflection.AgentAttribute
    ctor: SuperOffice.CRM.Services.Reflection.AgentAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Selection Agent
    - type: System.String
      value: Interface for the Selection Agent. Selections, entities, members and tasks
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.CRM.Services.ISelectionAgent.CreateDefaultSelectionEntityAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.CreateDefaultSelectionEntityAsync(System.Threading.CancellationToken)
  id: CreateDefaultSelectionEntityAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultSelectionEntityAsync(CancellationToken)
  nameWithType: ISelectionAgent.CreateDefaultSelectionEntityAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CreateDefaultSelectionEntityAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nLoading default values into a new SelectionEntity.\nNetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance\n"
  syntax:
    content: Task<SelectionEntity> CreateDefaultSelectionEntityAsync(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.SelectionEntity}
      description: New SelectionEntity with default values
    content.vb: Function CreateDefaultSelectionEntityAsync(cancellationToken As CancellationToken = Nothing) As Task(Of SelectionEntity)
  overload: SuperOffice.CRM.Services.ISelectionAgent.CreateDefaultSelectionEntityAsync*
- uid: SuperOffice.CRM.Services.ISelectionAgent.SaveSelectionEntityAsync(SuperOffice.CRM.Services.SelectionEntity,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.SaveSelectionEntityAsync(SuperOffice.CRM.Services.SelectionEntity,System.Threading.CancellationToken)
  id: SaveSelectionEntityAsync(SuperOffice.CRM.Services.SelectionEntity,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: SaveSelectionEntityAsync(SelectionEntity, CancellationToken)
  nameWithType: ISelectionAgent.SaveSelectionEntityAsync(SelectionEntity, CancellationToken)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.SaveSelectionEntityAsync(SuperOffice.CRM.Services.SelectionEntity, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nUpdates the existing SelectionEntity or creates a new SelectionEntity if the id parameter is empty\n"
  syntax:
    content: Task<SelectionEntity> SaveSelectionEntityAsync(SelectionEntity selectionEntity, CancellationToken cancellationToken = null)
    parameters:
    - id: selectionEntity
      type: SuperOffice.CRM.Services.SelectionEntity
      description: The SelectionEntity that is saved.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.SelectionEntity}
      description: New or updated SelectionEntity
    content.vb: Function SaveSelectionEntityAsync(selectionEntity As SelectionEntity, cancellationToken As CancellationToken = Nothing) As Task(Of SelectionEntity)
  overload: SuperOffice.CRM.Services.ISelectionAgent.SaveSelectionEntityAsync*
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionEntityAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.GetSelectionEntityAsync(System.Int32,System.Threading.CancellationToken)
  id: GetSelectionEntityAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: GetSelectionEntityAsync(Int32, CancellationToken)
  nameWithType: ISelectionAgent.GetSelectionEntityAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionEntityAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGets a SelectionEntity object.                        \n"
  syntax:
    content: Task<SelectionEntity> GetSelectionEntityAsync(int selectionEntityId, CancellationToken cancellationToken = null)
    parameters:
    - id: selectionEntityId
      type: System.Int32
      description: The identifier of the SelectionEntity object
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.SelectionEntity}
      description: SelectionEntity
    content.vb: Function GetSelectionEntityAsync(selectionEntityId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of SelectionEntity)
  overload: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionEntityAsync*
- uid: SuperOffice.CRM.Services.ISelectionAgent.CreateSelectionEntityAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.CreateSelectionEntityAsync(System.String,System.Threading.CancellationToken)
  id: CreateSelectionEntityAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: CreateSelectionEntityAsync(String, CancellationToken)
  nameWithType: ISelectionAgent.CreateSelectionEntityAsync(String, CancellationToken)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CreateSelectionEntityAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCreate (but do not save) a new selection entity, for the current user and the given target table; other fields populated as by CreateDefaultSelectionEntity()\n"
  syntax:
    content: Task<SelectionEntity> CreateSelectionEntityAsync(string targetTableName, CancellationToken cancellationToken = null)
    parameters:
    - id: targetTableName
      type: System.String
      description: The name of the target table, such as &apos;contact&apos; or &apos;appointment&apos;; any table for which Selection functionality is enabled
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.SelectionEntity}
      description: The new SelectionEntity, which has not yet been saved
    content.vb: Function CreateSelectionEntityAsync(targetTableName As String, cancellationToken As CancellationToken = Nothing) As Task(Of SelectionEntity)
  overload: SuperOffice.CRM.Services.ISelectionAgent.CreateSelectionEntityAsync*
- uid: SuperOffice.CRM.Services.ISelectionAgent.CreateContactSelectionFromSelectionAsync(System.Int32,System.String,SuperOffice.Data.SelectionType,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.CreateContactSelectionFromSelectionAsync(System.Int32,System.String,SuperOffice.Data.SelectionType,System.Boolean,System.Threading.CancellationToken)
  id: CreateContactSelectionFromSelectionAsync(System.Int32,System.String,SuperOffice.Data.SelectionType,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: CreateContactSelectionFromSelectionAsync(Int32, String, SelectionType, Boolean, CancellationToken)
  nameWithType: ISelectionAgent.CreateContactSelectionFromSelectionAsync(Int32, String, SelectionType, Boolean, CancellationToken)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CreateContactSelectionFromSelectionAsync(System.Int32, System.String, SuperOffice.Data.SelectionType, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCreates a new selection based on selection members from an existing selection.\n"
  syntax:
    content: Task<SelectionEntity> CreateContactSelectionFromSelectionAsync(int selectionId, string name, SelectionType targetSelectionType, bool copyMembers, CancellationToken cancellationToken = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to copy members from.
    - id: name
      type: System.String
      description: The name of the new selection.
    - id: targetSelectionType
      type: SuperOffice.Data.SelectionType
      description: The type of ContactSelection to create. The type can be static or dynamic. If the original selection to copy from is static, the SelectionType can only be static. If the original selection is dynamic, both a static and dynamic selection can be created.
    - id: copyMembers
      type: System.Boolean
      description: If true, the members from the original selection will be added to the newly created selection.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.SelectionEntity}
      description: Returns the newly created SelectionEntity.
    content.vb: Function CreateContactSelectionFromSelectionAsync(selectionId As Integer, name As String, targetSelectionType As SelectionType, copyMembers As Boolean, cancellationToken As CancellationToken = Nothing) As Task(Of SelectionEntity)
  overload: SuperOffice.CRM.Services.ISelectionAgent.CreateContactSelectionFromSelectionAsync*
- uid: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionFromContactPersonIdsAsync(SuperOffice.CRM.Services.ContactPersonId[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionFromContactPersonIdsAsync(SuperOffice.CRM.Services.ContactPersonId[],System.Threading.CancellationToken)
  id: CreateTemporaryContactSelectionFromContactPersonIdsAsync(SuperOffice.CRM.Services.ContactPersonId[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: CreateTemporaryContactSelectionFromContactPersonIdsAsync(ContactPersonId[], CancellationToken)
  nameWithType: ISelectionAgent.CreateTemporaryContactSelectionFromContactPersonIdsAsync(ContactPersonId[], CancellationToken)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionFromContactPersonIdsAsync(SuperOffice.CRM.Services.ContactPersonId[], System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCreates a temporary selection with members from a collection of ContactPerson id&apos;s.\n"
  syntax:
    content: Task<SelectionEntity> CreateTemporaryContactSelectionFromContactPersonIdsAsync(ContactPersonId[] contactPersonIds, CancellationToken cancellationToken = null)
    parameters:
    - id: contactPersonIds
      type: SuperOffice.CRM.Services.ContactPersonId[]
      description: A collection of ContactPersonId to copy into the temporary contact selection as members.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.SelectionEntity}
      description: Returns the newly created SelectionEntity.
    content.vb: Function CreateTemporaryContactSelectionFromContactPersonIdsAsync(contactPersonIds As ContactPersonId(), cancellationToken As CancellationToken = Nothing) As Task(Of SelectionEntity)
  overload: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionFromContactPersonIdsAsync*
  nameWithType.vb: ISelectionAgent.CreateTemporaryContactSelectionFromContactPersonIdsAsync(ContactPersonId(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionFromContactPersonIdsAsync(SuperOffice.CRM.Services.ContactPersonId(), System.Threading.CancellationToken)
  name.vb: CreateTemporaryContactSelectionFromContactPersonIdsAsync(ContactPersonId(), CancellationToken)
- uid: SuperOffice.CRM.Services.ISelectionAgent.CopyContactSelectionMembersAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.CopyContactSelectionMembersAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  id: CopyContactSelectionMembersAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: CopyContactSelectionMembersAsync(Int32, Int32, CancellationToken)
  nameWithType: ISelectionAgent.CopyContactSelectionMembersAsync(Int32, Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CopyContactSelectionMembersAsync(System.Int32, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCopy contact selection members from selection into an existing selection.\n"
  syntax:
    content: Task CopyContactSelectionMembersAsync(int fromSelectionId, int toSelectionId, CancellationToken cancellationToken = null)
    parameters:
    - id: fromSelectionId
      type: System.Int32
      description: The id of the selection to copy members from.
    - id: toSelectionId
      type: System.Int32
      description: The id of the selection to copy members to.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function CopyContactSelectionMembersAsync(fromSelectionId As Integer, toSelectionId As Integer, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.ISelectionAgent.CopyContactSelectionMembersAsync*
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatisticsAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatisticsAsync(System.Int32,System.Threading.CancellationToken)
  id: GetRecipientStatisticsAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: GetRecipientStatisticsAsync(Int32, CancellationToken)
  nameWithType: ISelectionAgent.GetRecipientStatisticsAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatisticsAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nReturns a RecipientStatistics object with a count of addresses, emailaddresses and emailaddresses.\n"
  syntax:
    content: Task<RecipientStatistics> GetRecipientStatisticsAsync(int selectionId, CancellationToken cancellationToken = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to get the statistics for.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.RecipientStatistics}
      description: Returns a RecipientStatistics object.
    content.vb: Function GetRecipientStatisticsAsync(selectionId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of RecipientStatistics)
  overload: SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatisticsAsync*
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatisticsFromProjectMembersAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatisticsFromProjectMembersAsync(System.Int32,System.Threading.CancellationToken)
  id: GetRecipientStatisticsFromProjectMembersAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: GetRecipientStatisticsFromProjectMembersAsync(Int32, CancellationToken)
  nameWithType: ISelectionAgent.GetRecipientStatisticsFromProjectMembersAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatisticsFromProjectMembersAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nReturns a RecipientStatistics object with a count of addresses, emailaddresses and emailaddresses based on members in a project.\n"
  syntax:
    content: Task<RecipientStatistics> GetRecipientStatisticsFromProjectMembersAsync(int projectId, CancellationToken cancellationToken = null)
    parameters:
    - id: projectId
      type: System.Int32
      description: The id of the project to get the member statistics for.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.RecipientStatistics}
      description: Returns a RecipientStatistics object.
    content.vb: Function GetRecipientStatisticsFromProjectMembersAsync(projectId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of RecipientStatistics)
  overload: SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatisticsFromProjectMembersAsync*
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatisticsFromContactPersonIdsAsync(SuperOffice.CRM.Services.ContactPersonId[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatisticsFromContactPersonIdsAsync(SuperOffice.CRM.Services.ContactPersonId[],System.Threading.CancellationToken)
  id: GetRecipientStatisticsFromContactPersonIdsAsync(SuperOffice.CRM.Services.ContactPersonId[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: GetRecipientStatisticsFromContactPersonIdsAsync(ContactPersonId[], CancellationToken)
  nameWithType: ISelectionAgent.GetRecipientStatisticsFromContactPersonIdsAsync(ContactPersonId[], CancellationToken)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatisticsFromContactPersonIdsAsync(SuperOffice.CRM.Services.ContactPersonId[], System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nReturns a RecipientStatistics object with a count of addresses, emailaddresses and emailaddresses based on contact and persons in a collection of ContactPersonId.\n"
  syntax:
    content: Task<RecipientStatistics> GetRecipientStatisticsFromContactPersonIdsAsync(ContactPersonId[] contactPersonIds, CancellationToken cancellationToken = null)
    parameters:
    - id: contactPersonIds
      type: SuperOffice.CRM.Services.ContactPersonId[]
      description: A collection of ContactPersonId to get the statistics for.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.RecipientStatistics}
      description: Returns a RecipientStatistics object.
    content.vb: Function GetRecipientStatisticsFromContactPersonIdsAsync(contactPersonIds As ContactPersonId(), cancellationToken As CancellationToken = Nothing) As Task(Of RecipientStatistics)
  overload: SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatisticsFromContactPersonIdsAsync*
  nameWithType.vb: ISelectionAgent.GetRecipientStatisticsFromContactPersonIdsAsync(ContactPersonId(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatisticsFromContactPersonIdsAsync(SuperOffice.CRM.Services.ContactPersonId(), System.Threading.CancellationToken)
  name.vb: GetRecipientStatisticsFromContactPersonIdsAsync(ContactPersonId(), CancellationToken)
- uid: SuperOffice.CRM.Services.ISelectionAgent.AddContactSelectionMembersAsync(System.Int32,SuperOffice.CRM.Services.ContactPersonId[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.AddContactSelectionMembersAsync(System.Int32,SuperOffice.CRM.Services.ContactPersonId[],System.Threading.CancellationToken)
  id: AddContactSelectionMembersAsync(System.Int32,SuperOffice.CRM.Services.ContactPersonId[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: AddContactSelectionMembersAsync(Int32, ContactPersonId[], CancellationToken)
  nameWithType: ISelectionAgent.AddContactSelectionMembersAsync(Int32, ContactPersonId[], CancellationToken)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.AddContactSelectionMembersAsync(System.Int32, SuperOffice.CRM.Services.ContactPersonId[], System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nAdds the collection of ContactPersonId as members to the static selection\n"
  syntax:
    content: Task AddContactSelectionMembersAsync(int selectionId, ContactPersonId[] contactPersonIds, CancellationToken cancellationToken = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection where to members will be added to.
    - id: contactPersonIds
      type: SuperOffice.CRM.Services.ContactPersonId[]
      description: A collection of ContactPersonId to add to the selection.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function AddContactSelectionMembersAsync(selectionId As Integer, contactPersonIds As ContactPersonId(), cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.ISelectionAgent.AddContactSelectionMembersAsync*
  nameWithType.vb: ISelectionAgent.AddContactSelectionMembersAsync(Int32, ContactPersonId(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.AddContactSelectionMembersAsync(System.Int32, SuperOffice.CRM.Services.ContactPersonId(), System.Threading.CancellationToken)
  name.vb: AddContactSelectionMembersAsync(Int32, ContactPersonId(), CancellationToken)
- uid: SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembersAsync(System.Int32,SuperOffice.CRM.Services.ContactPersonId[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembersAsync(System.Int32,SuperOffice.CRM.Services.ContactPersonId[],System.Threading.CancellationToken)
  id: RemoveContactSelectionMembersAsync(System.Int32,SuperOffice.CRM.Services.ContactPersonId[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: RemoveContactSelectionMembersAsync(Int32, ContactPersonId[], CancellationToken)
  nameWithType: ISelectionAgent.RemoveContactSelectionMembersAsync(Int32, ContactPersonId[], CancellationToken)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembersAsync(System.Int32, SuperOffice.CRM.Services.ContactPersonId[], System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nRemoves members from the selection as  specified in the collection of ContactPersonId.\n"
  syntax:
    content: Task RemoveContactSelectionMembersAsync(int selectionId, ContactPersonId[] contactPersonIds, CancellationToken cancellationToken = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection where to members will be removed.
    - id: contactPersonIds
      type: SuperOffice.CRM.Services.ContactPersonId[]
      description: A collection of ContactPersonId to remove from the static selection.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function RemoveContactSelectionMembersAsync(selectionId As Integer, contactPersonIds As ContactPersonId(), cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembersAsync*
  nameWithType.vb: ISelectionAgent.RemoveContactSelectionMembersAsync(Int32, ContactPersonId(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembersAsync(System.Int32, SuperOffice.CRM.Services.ContactPersonId(), System.Threading.CancellationToken)
  name.vb: RemoveContactSelectionMembersAsync(Int32, ContactPersonId(), CancellationToken)
- uid: SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembersFromIdsAsync(System.Int32,System.Int32[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembersFromIdsAsync(System.Int32,System.Int32[],System.Threading.CancellationToken)
  id: RemoveContactSelectionMembersFromIdsAsync(System.Int32,System.Int32[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: RemoveContactSelectionMembersFromIdsAsync(Int32, Int32[], CancellationToken)
  nameWithType: ISelectionAgent.RemoveContactSelectionMembersFromIdsAsync(Int32, Int32[], CancellationToken)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembersFromIdsAsync(System.Int32, System.Int32[], System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nRemoves members from the selection using a collection a selectionmember id&apos;s. Members can only be removed from single selection.\n"
  syntax:
    content: Task RemoveContactSelectionMembersFromIdsAsync(int selectionId, int[] selectionMembersIds, CancellationToken cancellationToken = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection where to members will be removed.
    - id: selectionMembersIds
      type: System.Int32[]
      description: An array of selectionmember id&apos;s to remove from the selection.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function RemoveContactSelectionMembersFromIdsAsync(selectionId As Integer, selectionMembersIds As Integer(), cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembersFromIdsAsync*
  nameWithType.vb: ISelectionAgent.RemoveContactSelectionMembersFromIdsAsync(Int32, Int32(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembersFromIdsAsync(System.Int32, System.Int32(), System.Threading.CancellationToken)
  name.vb: RemoveContactSelectionMembersFromIdsAsync(Int32, Int32(), CancellationToken)
- uid: SuperOffice.CRM.Services.ISelectionAgent.AddContactSelectionMembersFromSearchAsync(System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.AddContactSelectionMembersFromSearchAsync(System.Int32,System.String,System.Threading.CancellationToken)
  id: AddContactSelectionMembersFromSearchAsync(System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: AddContactSelectionMembersFromSearchAsync(Int32, String, CancellationToken)
  nameWithType: ISelectionAgent.AddContactSelectionMembersFromSearchAsync(Int32, String, CancellationToken)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.AddContactSelectionMembersFromSearchAsync(System.Int32, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nAdds members to the selection from the search result.\n"
  syntax:
    content: Task<int> AddContactSelectionMembersFromSearchAsync(int selectionId, string storageKey, CancellationToken cancellationToken = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to add members
    - id: storageKey
      type: System.String
      description: Storage key to be interpreted by the restriction storage provider, when it fetches criteria for the search
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: Number of members added
    content.vb: Function AddContactSelectionMembersFromSearchAsync(selectionId As Integer, storageKey As String, cancellationToken As CancellationToken = Nothing) As Task(Of Integer)
  overload: SuperOffice.CRM.Services.ISelectionAgent.AddContactSelectionMembersFromSearchAsync*
- uid: SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembersFromSearchAsync(System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembersFromSearchAsync(System.Int32,System.String,System.Threading.CancellationToken)
  id: RemoveContactSelectionMembersFromSearchAsync(System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: RemoveContactSelectionMembersFromSearchAsync(Int32, String, CancellationToken)
  nameWithType: ISelectionAgent.RemoveContactSelectionMembersFromSearchAsync(Int32, String, CancellationToken)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembersFromSearchAsync(System.Int32, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nRemoves members from the selection using the search result.\n"
  syntax:
    content: Task<int> RemoveContactSelectionMembersFromSearchAsync(int selectionId, string storageKey, CancellationToken cancellationToken = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to remove members.
    - id: storageKey
      type: System.String
      description: Storage key to be interpreted by the restriction storage provider, when it fetches criteria for the search.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: Number of members removed
    content.vb: Function RemoveContactSelectionMembersFromSearchAsync(selectionId As Integer, storageKey As String, cancellationToken As CancellationToken = Nothing) As Task(Of Integer)
  overload: SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembersFromSearchAsync*
- uid: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionAsync(System.Threading.CancellationToken)
  id: CreateTemporaryContactSelectionAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: CreateTemporaryContactSelectionAsync(CancellationToken)
  nameWithType: ISelectionAgent.CreateTemporaryContactSelectionAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCreates a temporary selection.\n"
  syntax:
    content: Task<SelectionEntity> CreateTemporaryContactSelectionAsync(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.SelectionEntity}
      description: Returns the newly created SelectionEntity.
    content.vb: Function CreateTemporaryContactSelectionAsync(cancellationToken As CancellationToken = Nothing) As Task(Of SelectionEntity)
  overload: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionAsync*
- uid: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionFromSelectionMemberIdsAsync(System.Int32,System.Int32[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionFromSelectionMemberIdsAsync(System.Int32,System.Int32[],System.Threading.CancellationToken)
  id: CreateTemporaryContactSelectionFromSelectionMemberIdsAsync(System.Int32,System.Int32[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: CreateTemporaryContactSelectionFromSelectionMemberIdsAsync(Int32, Int32[], CancellationToken)
  nameWithType: ISelectionAgent.CreateTemporaryContactSelectionFromSelectionMemberIdsAsync(Int32, Int32[], CancellationToken)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionFromSelectionMemberIdsAsync(System.Int32, System.Int32[], System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCreates a temporary selection with members from a collection of selectionmember id&apos;s.\n"
  syntax:
    content: Task<SelectionEntity> CreateTemporaryContactSelectionFromSelectionMemberIdsAsync(int selectionId, int[] selectionMemberIds, CancellationToken cancellationToken = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The selectionId the selectionmembers is a part of.
    - id: selectionMemberIds
      type: System.Int32[]
      description: A collection of int ids to copy into the temporary contact selection as members.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.SelectionEntity}
      description: Returns the newly created SelectionEntity.
    content.vb: Function CreateTemporaryContactSelectionFromSelectionMemberIdsAsync(selectionId As Integer, selectionMemberIds As Integer(), cancellationToken As CancellationToken = Nothing) As Task(Of SelectionEntity)
  overload: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionFromSelectionMemberIdsAsync*
  nameWithType.vb: ISelectionAgent.CreateTemporaryContactSelectionFromSelectionMemberIdsAsync(Int32, Int32(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionFromSelectionMemberIdsAsync(System.Int32, System.Int32(), System.Threading.CancellationToken)
  name.vb: CreateTemporaryContactSelectionFromSelectionMemberIdsAsync(Int32, Int32(), CancellationToken)
- uid: SuperOffice.CRM.Services.ISelectionAgent.AddRemoveContactSelectionMemberInterestsAsync(System.Int32,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.AddRemoveContactSelectionMemberInterestsAsync(System.Int32,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Threading.CancellationToken)
  id: AddRemoveContactSelectionMemberInterestsAsync(System.Int32,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: AddRemoveContactSelectionMemberInterestsAsync(Int32, Int32[], Int32[], Int32[], Int32[], CancellationToken)
  nameWithType: ISelectionAgent.AddRemoveContactSelectionMemberInterestsAsync(Int32, Int32[], Int32[], Int32[], Int32[], CancellationToken)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.AddRemoveContactSelectionMemberInterestsAsync(System.Int32, System.Int32[], System.Int32[], System.Int32[], System.Int32[], System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nAdds or removes interests on companies and persons in a selection.\n"
  syntax:
    content: Task AddRemoveContactSelectionMemberInterestsAsync(int selectionId, int[] addCompanyInterests, int[] removeCompanyInterests, int[] addContactInterests, int[] removeContactInterests, CancellationToken cancellationToken = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to add or remove interests members from.
    - id: addCompanyInterests
      type: System.Int32[]
      description: Array of int containing the id&apos;s of the interests to add to the company.
    - id: removeCompanyInterests
      type: System.Int32[]
      description: Array of int containing the id&apos;s of the interests to remove from the company.
    - id: addContactInterests
      type: System.Int32[]
      description: Array of int containing the id&apos;s of the interests to add to the contact.
    - id: removeContactInterests
      type: System.Int32[]
      description: Array of int containing the id&apos;s of the interests to remove from the contact.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function AddRemoveContactSelectionMemberInterestsAsync(selectionId As Integer, addCompanyInterests As Integer(), removeCompanyInterests As Integer(), addContactInterests As Integer(), removeContactInterests As Integer(), cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.ISelectionAgent.AddRemoveContactSelectionMemberInterestsAsync*
  nameWithType.vb: ISelectionAgent.AddRemoveContactSelectionMemberInterestsAsync(Int32, Int32(), Int32(), Int32(), Int32(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.AddRemoveContactSelectionMemberInterestsAsync(System.Int32, System.Int32(), System.Int32(), System.Int32(), System.Int32(), System.Threading.CancellationToken)
  name.vb: AddRemoveContactSelectionMemberInterestsAsync(Int32, Int32(), Int32(), Int32(), Int32(), CancellationToken)
- uid: SuperOffice.CRM.Services.ISelectionAgent.EditContactSelectionMemberDetailsAsync(System.Int32,SuperOffice.CRM.Services.SelectionMemberEditValues,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.EditContactSelectionMemberDetailsAsync(System.Int32,SuperOffice.CRM.Services.SelectionMemberEditValues,System.Threading.CancellationToken)
  id: EditContactSelectionMemberDetailsAsync(System.Int32,SuperOffice.CRM.Services.SelectionMemberEditValues,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: EditContactSelectionMemberDetailsAsync(Int32, SelectionMemberEditValues, CancellationToken)
  nameWithType: ISelectionAgent.EditContactSelectionMemberDetailsAsync(Int32, SelectionMemberEditValues, CancellationToken)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.EditContactSelectionMemberDetailsAsync(System.Int32, SuperOffice.CRM.Services.SelectionMemberEditValues, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nEdit company and contact details in a selection based on contents in selectionMemberEditValues.\n"
  syntax:
    content: Task EditContactSelectionMemberDetailsAsync(int selectionId, SelectionMemberEditValues selectionMemberEditValues, CancellationToken cancellationToken = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to edit members from.
    - id: selectionMemberEditValues
      type: SuperOffice.CRM.Services.SelectionMemberEditValues
      description: An object of &lt;see cref=&quot;SelectionMemberEditValues&quot;/> describing what should be changed for companys and contacts.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function EditContactSelectionMemberDetailsAsync(selectionId As Integer, selectionMemberEditValues As SelectionMemberEditValues, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.ISelectionAgent.EditContactSelectionMemberDetailsAsync*
- uid: SuperOffice.CRM.Services.ISelectionAgent.GenerateFollowUpsAsync(System.Int32,SuperOffice.CRM.Services.AppointmentEntity,System.Int32,System.Boolean,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.GenerateFollowUpsAsync(System.Int32,SuperOffice.CRM.Services.AppointmentEntity,System.Int32,System.Boolean,System.Boolean,System.Threading.CancellationToken)
  id: GenerateFollowUpsAsync(System.Int32,SuperOffice.CRM.Services.AppointmentEntity,System.Int32,System.Boolean,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: GenerateFollowUpsAsync(Int32, AppointmentEntity, Int32, Boolean, Boolean, CancellationToken)
  nameWithType: ISelectionAgent.GenerateFollowUpsAsync(Int32, AppointmentEntity, Int32, Boolean, Boolean, CancellationToken)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GenerateFollowUpsAsync(System.Int32, SuperOffice.CRM.Services.AppointmentEntity, System.Int32, System.Boolean, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGenerate follow-ups for members in the selection.\n"
  syntax:
    content: Task GenerateFollowUpsAsync(int selectionId, AppointmentEntity appointmentEntity, int associateId, bool saveOnContactOwner, bool uniqueContact, CancellationToken cancellationToken = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to generate the follow-ups for.
    - id: appointmentEntity
      type: SuperOffice.CRM.Services.AppointmentEntity
      description: The AppointmentEntity with information about the appointment.
    - id: associateId
      type: System.Int32
      description: The associate to save the appointments on. If saveOnContactOwner is true, this id will be ignored. Appointments wil be saved on current user if associateId = 0.
    - id: saveOnContactOwner
      type: System.Boolean
      description: If true, the appointments will be saved on contact owner (Our contact). This parameter will override associateId if true.
    - id: uniqueContact
      type: System.Boolean
      description: If true, only one appointment will be created for each contact.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function GenerateFollowUpsAsync(selectionId As Integer, appointmentEntity As AppointmentEntity, associateId As Integer, saveOnContactOwner As Boolean, uniqueContact As Boolean, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.ISelectionAgent.GenerateFollowUpsAsync*
- uid: SuperOffice.CRM.Services.ISelectionAgent.ExportSelectionMembersAsync(System.Int32,System.String,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.ExportSelectionMembersAsync(System.Int32,System.String,System.Boolean,System.Threading.CancellationToken)
  id: ExportSelectionMembersAsync(System.Int32,System.String,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: ExportSelectionMembersAsync(Int32, String, Boolean, CancellationToken)
  nameWithType: ISelectionAgent.ExportSelectionMembersAsync(Int32, String, Boolean, CancellationToken)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.ExportSelectionMembersAsync(System.Int32, System.String, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nExportSelectionMembers will generate a string that is the result of substituting the template variables with values from selectionmembers.\n"
  syntax:
    content: Task<byte[]> ExportSelectionMembersAsync(int selectionId, string templateName, bool useContacts, CancellationToken cancellationToken = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to generate the exported file.
    - id: templateName
      type: System.String
      description: The templateName parameter is the relative path of a .sxf file template. The .sxf files can be found in \template or in the user folder of the so archive.
    - id: useContacts
      type: System.Boolean
      description: If the selection contains other members than contacts, setting this to true will export the contact archive of the selection.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Byte[]}
      description: Returns a unicode byte array with the file to export to the user.
    content.vb: Function ExportSelectionMembersAsync(selectionId As Integer, templateName As String, useContacts As Boolean, cancellationToken As CancellationToken = Nothing) As Task(Of Byte())
  overload: SuperOffice.CRM.Services.ISelectionAgent.ExportSelectionMembersAsync*
- uid: SuperOffice.CRM.Services.ISelectionAgent.ExportSelectionMembersWithOrderByAsync(System.Int32,System.String,System.Boolean,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.ExportSelectionMembersWithOrderByAsync(System.Int32,System.String,System.Boolean,System.String,System.Threading.CancellationToken)
  id: ExportSelectionMembersWithOrderByAsync(System.Int32,System.String,System.Boolean,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: ExportSelectionMembersWithOrderByAsync(Int32, String, Boolean, String, CancellationToken)
  nameWithType: ISelectionAgent.ExportSelectionMembersWithOrderByAsync(Int32, String, Boolean, String, CancellationToken)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.ExportSelectionMembersWithOrderByAsync(System.Int32, System.String, System.Boolean, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nExportSelectionMembers will generate a string that is the result of substituting the template variables with values from selectionmembers.\n"
  syntax:
    content: Task<byte[]> ExportSelectionMembersWithOrderByAsync(int selectionId, string templateName, bool useContacts, string orderBy, CancellationToken cancellationToken = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to generate the exported file.
    - id: templateName
      type: System.String
      description: The templateName parameter is the relative path of a .sxf file template. The .sxf files can be found in \template or in the user folder of the so archive.
    - id: useContacts
      type: System.Boolean
      description: If the selection contains other members than contacts, setting this to true will export the contact archive of the selection.
    - id: orderBy
      type: System.String
      description: OrderBy. &lt;Column,OrderBySortType>
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Byte[]}
      description: Returns a unicode byte array with the file to export to the user.
    content.vb: Function ExportSelectionMembersWithOrderByAsync(selectionId As Integer, templateName As String, useContacts As Boolean, orderBy As String, cancellationToken As CancellationToken = Nothing) As Task(Of Byte())
  overload: SuperOffice.CRM.Services.ISelectionAgent.ExportSelectionMembersWithOrderByAsync*
- uid: SuperOffice.CRM.Services.ISelectionAgent.SetDuplicateRulesStatusAsync(SuperOffice.CRM.Services.DuplicateRule[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.SetDuplicateRulesStatusAsync(SuperOffice.CRM.Services.DuplicateRule[],System.Threading.CancellationToken)
  id: SetDuplicateRulesStatusAsync(SuperOffice.CRM.Services.DuplicateRule[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: SetDuplicateRulesStatusAsync(DuplicateRule[], CancellationToken)
  nameWithType: ISelectionAgent.SetDuplicateRulesStatusAsync(DuplicateRule[], CancellationToken)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.SetDuplicateRulesStatusAsync(SuperOffice.CRM.Services.DuplicateRule[], System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nSet which duplicate rules should be active or not\n"
  syntax:
    content: Task SetDuplicateRulesStatusAsync(DuplicateRule[] rules, CancellationToken cancellationToken = null)
    parameters:
    - id: rules
      type: SuperOffice.CRM.Services.DuplicateRule[]
      description: Duplicate rules to update active status for
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function SetDuplicateRulesStatusAsync(rules As DuplicateRule(), cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.ISelectionAgent.SetDuplicateRulesStatusAsync*
  nameWithType.vb: ISelectionAgent.SetDuplicateRulesStatusAsync(DuplicateRule(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.SetDuplicateRulesStatusAsync(SuperOffice.CRM.Services.DuplicateRule(), System.Threading.CancellationToken)
  name.vb: SetDuplicateRulesStatusAsync(DuplicateRule(), CancellationToken)
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetDuplicatesAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.GetDuplicatesAsync(System.String,System.Threading.CancellationToken)
  id: GetDuplicatesAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: GetDuplicatesAsync(String, CancellationToken)
  nameWithType: ISelectionAgent.GetDuplicatesAsync(String, CancellationToken)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetDuplicatesAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet duplicates(exact or similar in the database) based on the name\n"
  syntax:
    content: Task<DuplicateEntry[]> GetDuplicatesAsync(string name, CancellationToken cancellationToken = null)
    parameters:
    - id: name
      type: System.String
      description: Name used for lookup
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.DuplicateEntry[]}
      description: Any records matching the specified name
    content.vb: Function GetDuplicatesAsync(name As String, cancellationToken As CancellationToken = Nothing) As Task(Of DuplicateEntry())
  overload: SuperOffice.CRM.Services.ISelectionAgent.GetDuplicatesAsync*
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetDuplicateRulesAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.GetDuplicateRulesAsync(System.Threading.CancellationToken)
  id: GetDuplicateRulesAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: GetDuplicateRulesAsync(CancellationToken)
  nameWithType: ISelectionAgent.GetDuplicateRulesAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetDuplicateRulesAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nRetrieve all available duplicate rules for selection\n"
  syntax:
    content: Task<DuplicateRule[]> GetDuplicateRulesAsync(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.DuplicateRule[]}
      description: All available duplicate rules
    content.vb: Function GetDuplicateRulesAsync(cancellationToken As CancellationToken = Nothing) As Task(Of DuplicateRule())
  overload: SuperOffice.CRM.Services.ISelectionAgent.GetDuplicateRulesAsync*
- uid: SuperOffice.CRM.Services.ISelectionAgent.CreateNewEntryAsync(SuperOffice.CRM.Services.DuplicateEntry,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.CreateNewEntryAsync(SuperOffice.CRM.Services.DuplicateEntry,System.Threading.CancellationToken)
  id: CreateNewEntryAsync(SuperOffice.CRM.Services.DuplicateEntry,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: CreateNewEntryAsync(DuplicateEntry, CancellationToken)
  nameWithType: ISelectionAgent.CreateNewEntryAsync(DuplicateEntry, CancellationToken)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CreateNewEntryAsync(SuperOffice.CRM.Services.DuplicateEntry, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCreates a new selection based on external duplicate\n"
  syntax:
    content: Task<int> CreateNewEntryAsync(DuplicateEntry duplicate, CancellationToken cancellationToken = null)
    parameters:
    - id: duplicate
      type: SuperOffice.CRM.Services.DuplicateEntry
      description: The duplicate to create a new entry based upon
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: The database identity of the newly created entry
    content.vb: Function CreateNewEntryAsync(duplicate As DuplicateEntry, cancellationToken As CancellationToken = Nothing) As Task(Of Integer)
  overload: SuperOffice.CRM.Services.ISelectionAgent.CreateNewEntryAsync*
- uid: SuperOffice.CRM.Services.ISelectionAgent.DeleteContactsAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.DeleteContactsAsync(System.Int32,System.Threading.CancellationToken)
  id: DeleteContactsAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: DeleteContactsAsync(Int32, CancellationToken)
  nameWithType: ISelectionAgent.DeleteContactsAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.DeleteContactsAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nDeletes all contacts from a selection. If a contact does not have delete rights, it will be skipped.\n"
  syntax:
    content: Task DeleteContactsAsync(int selectionId, CancellationToken cancellationToken = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: Id of the selection the delete operation will be performed.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function DeleteContactsAsync(selectionId As Integer, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.ISelectionAgent.DeleteContactsAsync*
- uid: SuperOffice.CRM.Services.ISelectionAgent.AddSelectionMembersAsync(System.Int32,System.Int32[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.AddSelectionMembersAsync(System.Int32,System.Int32[],System.Threading.CancellationToken)
  id: AddSelectionMembersAsync(System.Int32,System.Int32[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: AddSelectionMembersAsync(Int32, Int32[], CancellationToken)
  nameWithType: ISelectionAgent.AddSelectionMembersAsync(Int32, Int32[], CancellationToken)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.AddSelectionMembersAsync(System.Int32, System.Int32[], System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nAdd selection members to a static selection of type others than contacts.\n"
  syntax:
    content: Task<int> AddSelectionMembersAsync(int selectionId, int[] ids, CancellationToken cancellationToken = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The selection id to add the members to.
    - id: ids
      type: System.Int32[]
      description: Collection of ids to add to the selection.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: Returns number of members added to the selection.
    content.vb: Function AddSelectionMembersAsync(selectionId As Integer, ids As Integer(), cancellationToken As CancellationToken = Nothing) As Task(Of Integer)
  overload: SuperOffice.CRM.Services.ISelectionAgent.AddSelectionMembersAsync*
  nameWithType.vb: ISelectionAgent.AddSelectionMembersAsync(Int32, Int32(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.AddSelectionMembersAsync(System.Int32, System.Int32(), System.Threading.CancellationToken)
  name.vb: AddSelectionMembersAsync(Int32, Int32(), CancellationToken)
- uid: SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembersAsync(System.Int32,System.Int32[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembersAsync(System.Int32,System.Int32[],System.Threading.CancellationToken)
  id: RemoveSelectionMembersAsync(System.Int32,System.Int32[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: RemoveSelectionMembersAsync(Int32, Int32[], CancellationToken)
  nameWithType: ISelectionAgent.RemoveSelectionMembersAsync(Int32, Int32[], CancellationToken)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembersAsync(System.Int32, System.Int32[], System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nRemoves members from the selection as  specified in the collection of entity ids. The ids are selection member ids (selection member primary key)\n"
  syntax:
    content: Task RemoveSelectionMembersAsync(int selectionId, int[] selectionMemberIds, CancellationToken cancellationToken = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection where to members will be removed.
    - id: selectionMemberIds
      type: System.Int32[]
      description: Selection member primary keys
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function RemoveSelectionMembersAsync(selectionId As Integer, selectionMemberIds As Integer(), cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembersAsync*
  nameWithType.vb: ISelectionAgent.RemoveSelectionMembersAsync(Int32, Int32(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembersAsync(System.Int32, System.Int32(), System.Threading.CancellationToken)
  name.vb: RemoveSelectionMembersAsync(Int32, Int32(), CancellationToken)
- uid: SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembersByIdAsync(System.Int32,System.Int32[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembersByIdAsync(System.Int32,System.Int32[],System.Threading.CancellationToken)
  id: RemoveSelectionMembersByIdAsync(System.Int32,System.Int32[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: RemoveSelectionMembersByIdAsync(Int32, Int32[], CancellationToken)
  nameWithType: ISelectionAgent.RemoveSelectionMembersByIdAsync(Int32, Int32[], CancellationToken)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembersByIdAsync(System.Int32, System.Int32[], System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nRemoves members from the selection as specified in the collection of entity ids. The ids can be a collection of sale ids, or other supported types.\n"
  syntax:
    content: Task RemoveSelectionMembersByIdAsync(int selectionId, int[] ids, CancellationToken cancellationToken = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection where to members will be removed.
    - id: ids
      type: System.Int32[]
      description: A collection of sale/project/contact ids to remove from the selection. The ids can be a collection of sale ids, or other supported types.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function RemoveSelectionMembersByIdAsync(selectionId As Integer, ids As Integer(), cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembersByIdAsync*
  nameWithType.vb: ISelectionAgent.RemoveSelectionMembersByIdAsync(Int32, Int32(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembersByIdAsync(System.Int32, System.Int32(), System.Threading.CancellationToken)
  name.vb: RemoveSelectionMembersByIdAsync(Int32, Int32(), CancellationToken)
- uid: SuperOffice.CRM.Services.ISelectionAgent.AddSelectionMembersFromSearchAsync(System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.AddSelectionMembersFromSearchAsync(System.Int32,System.String,System.Threading.CancellationToken)
  id: AddSelectionMembersFromSearchAsync(System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: AddSelectionMembersFromSearchAsync(Int32, String, CancellationToken)
  nameWithType: ISelectionAgent.AddSelectionMembersFromSearchAsync(Int32, String, CancellationToken)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.AddSelectionMembersFromSearchAsync(System.Int32, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nAdds members from the selection using the search result.\n"
  syntax:
    content: Task<int> AddSelectionMembersFromSearchAsync(int selectionId, string storageKey, CancellationToken cancellationToken = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to add members
    - id: storageKey
      type: System.String
      description: Storage key to be interpreted by the restriction storage provider, when it fetches criteria for the search
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: Number of members added.
    content.vb: Function AddSelectionMembersFromSearchAsync(selectionId As Integer, storageKey As String, cancellationToken As CancellationToken = Nothing) As Task(Of Integer)
  overload: SuperOffice.CRM.Services.ISelectionAgent.AddSelectionMembersFromSearchAsync*
- uid: SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembersFromSearchAsync(System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembersFromSearchAsync(System.Int32,System.String,System.Threading.CancellationToken)
  id: RemoveSelectionMembersFromSearchAsync(System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: RemoveSelectionMembersFromSearchAsync(Int32, String, CancellationToken)
  nameWithType: ISelectionAgent.RemoveSelectionMembersFromSearchAsync(Int32, String, CancellationToken)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembersFromSearchAsync(System.Int32, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nRemoves members from the selection using the search result.\n"
  syntax:
    content: Task<int> RemoveSelectionMembersFromSearchAsync(int selectionId, string storageKey, CancellationToken cancellationToken = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to remove members.
    - id: storageKey
      type: System.String
      description: Storage key to be interpreted by the restriction storage provider, when it fetches criteria for the search.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: Number of members removed
    content.vb: Function RemoveSelectionMembersFromSearchAsync(selectionId As Integer, storageKey As String, cancellationToken As CancellationToken = Nothing) As Task(Of Integer)
  overload: SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembersFromSearchAsync*
- uid: SuperOffice.CRM.Services.ISelectionAgent.CopySelectionMembersAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.CopySelectionMembersAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  id: CopySelectionMembersAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: CopySelectionMembersAsync(Int32, Int32, CancellationToken)
  nameWithType: ISelectionAgent.CopySelectionMembersAsync(Int32, Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CopySelectionMembersAsync(System.Int32, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCopy selection members from selection into an existing selection.\n"
  syntax:
    content: Task CopySelectionMembersAsync(int fromSelectionId, int toSelectionId, CancellationToken cancellationToken = null)
    parameters:
    - id: fromSelectionId
      type: System.Int32
      description: The id of the selection to copy members from.
    - id: toSelectionId
      type: System.Int32
      description: The id of the selection to copy members to.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function CopySelectionMembersAsync(fromSelectionId As Integer, toSelectionId As Integer, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.ISelectionAgent.CopySelectionMembersAsync*
- uid: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporarySelectionFromIdsAsync(System.Int32[],System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.CreateTemporarySelectionFromIdsAsync(System.Int32[],System.Int32,System.Threading.CancellationToken)
  id: CreateTemporarySelectionFromIdsAsync(System.Int32[],System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: CreateTemporarySelectionFromIdsAsync(Int32[], Int32, CancellationToken)
  nameWithType: ISelectionAgent.CreateTemporarySelectionFromIdsAsync(Int32[], Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporarySelectionFromIdsAsync(System.Int32[], System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCreates a temporary selection with members from a collection of entity id&apos;s.\n"
  syntax:
    content: Task<SelectionEntity> CreateTemporarySelectionFromIdsAsync(int[] ids, int targetTableNumber, CancellationToken cancellationToken = null)
    parameters:
    - id: ids
      type: System.Int32[]
      description: A collection of Ids to copy into the temporary selection as members. The ids are primary keys of entities defined by the targetTableNumber parameter.
    - id: targetTableNumber
      type: System.Int32
      description: The type of selection to create.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.SelectionEntity}
      description: Returns the newly created SelectionEntity.
    content.vb: Function CreateTemporarySelectionFromIdsAsync(ids As Integer(), targetTableNumber As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of SelectionEntity)
  overload: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporarySelectionFromIdsAsync*
  nameWithType.vb: ISelectionAgent.CreateTemporarySelectionFromIdsAsync(Int32(), Int32, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporarySelectionFromIdsAsync(System.Int32(), System.Int32, System.Threading.CancellationToken)
  name.vb: CreateTemporarySelectionFromIdsAsync(Int32(), Int32, CancellationToken)
- uid: SuperOffice.CRM.Services.ISelectionAgent.CreateSelectionFromSelectionAsync(System.Int32,System.String,SuperOffice.Data.SelectionType,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.CreateSelectionFromSelectionAsync(System.Int32,System.String,SuperOffice.Data.SelectionType,System.Boolean,System.Threading.CancellationToken)
  id: CreateSelectionFromSelectionAsync(System.Int32,System.String,SuperOffice.Data.SelectionType,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: CreateSelectionFromSelectionAsync(Int32, String, SelectionType, Boolean, CancellationToken)
  nameWithType: ISelectionAgent.CreateSelectionFromSelectionAsync(Int32, String, SelectionType, Boolean, CancellationToken)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CreateSelectionFromSelectionAsync(System.Int32, System.String, SuperOffice.Data.SelectionType, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCreates a new selection based on selection members from an existing selection.\n"
  syntax:
    content: Task<SelectionEntity> CreateSelectionFromSelectionAsync(int selectionId, string name, SelectionType targetSelectionType, bool copyMembers, CancellationToken cancellationToken = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to copy members from.
    - id: name
      type: System.String
      description: The name of the new selection.
    - id: targetSelectionType
      type: SuperOffice.Data.SelectionType
      description: The type of Selection to create. The type can be static or dynamic. If the original selection to copy from is static, the SelectionType can only be static. If the original selection is dynamic, both a static and dynamic selection can be created.
    - id: copyMembers
      type: System.Boolean
      description: If true, the members from the original selection will be added to the newly created selection.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.SelectionEntity}
      description: Returns the newly created SelectionEntity.
    content.vb: Function CreateSelectionFromSelectionAsync(selectionId As Integer, name As String, targetSelectionType As SelectionType, copyMembers As Boolean, cancellationToken As CancellationToken = Nothing) As Task(Of SelectionEntity)
  overload: SuperOffice.CRM.Services.ISelectionAgent.CreateSelectionFromSelectionAsync*
- uid: SuperOffice.CRM.Services.ISelectionAgent.CreateContactSelectionFromShadowSelectionAsync(System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.CreateContactSelectionFromShadowSelectionAsync(System.Int32,System.String,System.Threading.CancellationToken)
  id: CreateContactSelectionFromShadowSelectionAsync(System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: CreateContactSelectionFromShadowSelectionAsync(Int32, String, CancellationToken)
  nameWithType: ISelectionAgent.CreateContactSelectionFromShadowSelectionAsync(Int32, String, CancellationToken)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CreateContactSelectionFromShadowSelectionAsync(System.Int32, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nCreates a new contact selection based on contact selection members from an existing shadow sale, appointment, project or document selection. The new selection will always be static even if the original selection is dynamic.\n"
  syntax:
    content: Task<SelectionEntity> CreateContactSelectionFromShadowSelectionAsync(int selectionId, string name, CancellationToken cancellationToken = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to copy members from.
    - id: name
      type: System.String
      description: The name of the new selection.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.SelectionEntity}
      description: Returns the newly created SelectionEntity.
    content.vb: Function CreateContactSelectionFromShadowSelectionAsync(selectionId As Integer, name As String, cancellationToken As CancellationToken = Nothing) As Task(Of SelectionEntity)
  overload: SuperOffice.CRM.Services.ISelectionAgent.CreateContactSelectionFromShadowSelectionAsync*
- uid: SuperOffice.CRM.Services.ISelectionAgent.DeleteEntitiesAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.DeleteEntitiesAsync(System.Int32,System.Threading.CancellationToken)
  id: DeleteEntitiesAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: DeleteEntitiesAsync(Int32, CancellationToken)
  nameWithType: ISelectionAgent.DeleteEntitiesAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.DeleteEntitiesAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nDeletes all entities from a selection. If an entity does not have delete rights, it will be skipped.\n"
  syntax:
    content: Task DeleteEntitiesAsync(int selectionId, CancellationToken cancellationToken = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: Id of the selection the delete operation will be performed.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function DeleteEntitiesAsync(selectionId As Integer, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.ISelectionAgent.DeleteEntitiesAsync*
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetParentCombinedSelectionsAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.GetParentCombinedSelectionsAsync(System.Int32,System.Threading.CancellationToken)
  id: GetParentCombinedSelectionsAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: GetParentCombinedSelectionsAsync(Int32, CancellationToken)
  nameWithType: ISelectionAgent.GetParentCombinedSelectionsAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetParentCombinedSelectionsAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet a list of all selection ids where the given selection is used to create a combined selection.\n"
  syntax:
    content: Task<int[]> GetParentCombinedSelectionsAsync(int selectionId, CancellationToken cancellationToken = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The selectionId to query for.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32[]}
      description: Array of selectionIds.
    content.vb: Function GetParentCombinedSelectionsAsync(selectionId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Integer())
  overload: SuperOffice.CRM.Services.ISelectionAgent.GetParentCombinedSelectionsAsync*
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionMembersArchiveRowsAsync(System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.GetSelectionMembersArchiveRowsAsync(System.Int32,System.String,System.Threading.CancellationToken)
  id: GetSelectionMembersArchiveRowsAsync(System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: GetSelectionMembersArchiveRowsAsync(Int32, String, CancellationToken)
  nameWithType: ISelectionAgent.GetSelectionMembersArchiveRowsAsync(Int32, String, CancellationToken)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionMembersArchiveRowsAsync(System.Int32, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet the list of members in this selection. The type of members depends on the target table of the selection.\n"
  syntax:
    content: Task<ArchiveListItem[]> GetSelectionMembersArchiveRowsAsync(int selectionId, string select, CancellationToken cancellationToken = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The selectionId we want selection members for.
    - id: select
      type: System.String
      description: (optional) Comma separated Column names to include in result. List of columns varies depending on the selection&apos;s TargetTable. e.g. &apos;name&apos;, &apos;firstname&apos;, &apos;startTime&apos;
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.ArchiveListItem[]}
      description: Array of archive rows, where each item represents one row of data (row level data + the requested columns). NULL if selection does not exist.
    content.vb: Function GetSelectionMembersArchiveRowsAsync(selectionId As Integer, select As String, cancellationToken As CancellationToken = Nothing) As Task(Of ArchiveListItem())
  overload: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionMembersArchiveRowsAsync*
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionShadowMembersArchiveRowsAsync(System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.GetSelectionShadowMembersArchiveRowsAsync(System.Int32,System.String,System.Threading.CancellationToken)
  id: GetSelectionShadowMembersArchiveRowsAsync(System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: GetSelectionShadowMembersArchiveRowsAsync(Int32, String, CancellationToken)
  nameWithType: ISelectionAgent.GetSelectionShadowMembersArchiveRowsAsync(Int32, String, CancellationToken)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionShadowMembersArchiveRowsAsync(System.Int32, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet the list of members in this selection&apos;s shadow (i.e. the list of contacts + persons referenced in the main selection).\n"
  syntax:
    content: Task<ArchiveListItem[]> GetSelectionShadowMembersArchiveRowsAsync(int selectionId, string select, CancellationToken cancellationToken = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The selectionId we want selection members for.
    - id: select
      type: System.String
      description: (optional) Comma separated Column names to include in result. List of columns varies depending on the selection&apos;s TargetTable. e.g. &apos;name&apos;, &apos;firstname,name&apos;, &apos;startTime,firstname,name&apos;
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.ArchiveListItem[]}
      description: Array of archive rows, where each item represents one row of data (row level data + the requested columns). NULL if selection does not exist.
    content.vb: Function GetSelectionShadowMembersArchiveRowsAsync(selectionId As Integer, select As String, cancellationToken As CancellationToken = Nothing) As Task(Of ArchiveListItem())
  overload: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionShadowMembersArchiveRowsAsync*
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetDynamicSelectionCriteriaAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.GetDynamicSelectionCriteriaAsync(System.Int32,System.Threading.CancellationToken)
  id: GetDynamicSelectionCriteriaAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: GetDynamicSelectionCriteriaAsync(Int32, CancellationToken)
  nameWithType: ISelectionAgent.GetDynamicSelectionCriteriaAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetDynamicSelectionCriteriaAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet the criteria for this dynamic selection.\n"
  syntax:
    content: Task<ArchiveRestrictionInfo[]> GetDynamicSelectionCriteriaAsync(int selectionId, CancellationToken cancellationToken = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to add members
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]}
      description: Criteria defining the selection result. NULL if selection does not exist, or if this is not a dynamic selection.
    content.vb: Function GetDynamicSelectionCriteriaAsync(selectionId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of ArchiveRestrictionInfo())
  overload: SuperOffice.CRM.Services.ISelectionAgent.GetDynamicSelectionCriteriaAsync*
- uid: SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteriaAsync(System.Int32,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteriaAsync(System.Int32,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.Threading.CancellationToken)
  id: SetDynamicSelectionCriteriaAsync(System.Int32,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: SetDynamicSelectionCriteriaAsync(Int32, ArchiveRestrictionInfo[], CancellationToken)
  nameWithType: ISelectionAgent.SetDynamicSelectionCriteriaAsync(Int32, ArchiveRestrictionInfo[], CancellationToken)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteriaAsync(System.Int32, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[], System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nUpdate the criteria for this dynamic selection. Replaces existing criteria with the new values.\n"
  example:
  - "\n<pre><code>&quot;name = &apos;SuperOffice AS&apos;&quot;\n&quot;name startsWith &apos;SuperOffice&apos;&quot;\n&quot;startsWith(name, &apos;SuperOffice&apos;)&quot;\n&quot;updatedDate after &apos;2000.12.30&apos;&quot;\n&quot;category = 10&quot;\n&quot;category in (10, 12, 53)&quot;\n&quot;category in (2,3,4) and name startswith &apos;super&apos;&quot;\n&quot;category in (2,3,4) or name startswith &apos;super&apos;&quot;\n&quot;(category = 2 or business = 3) and name contains &apos;super&apos;&quot;\n<p></p>\nvar agent = new FindAgent();\n<p></p>\nvar restrictions = new ArchiveRestrictionInfo[1];\nrestrictions[0] = new ArchiveRestrictionInfo(&quot;updatedBy&quot;, &quot;equals&quot;, &quot;2&quot;);\nvar res = _agent.FindFromRestrictions(restrictions, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res1.ArchiveRows)\n    (int)row.ColumnData[&quot;updatedBy&quot;].RawValue == 2\n<p></p>\nvar restrictions = new ArchiveRestrictionInfo[2];\nrestrictions[0] = new ArchiveRestrictionInfo(&quot;updatedBy&quot;, &quot;equals&quot;, &quot;2&quot;);\nrestrictions[1] = new ArchiveRestrictionInfo(&quot;updatedDate&quot;, &quot;after&quot;, &quot;2000.1.2&quot;);\nvar res = _agent.FindFromRestrictions(restrictions, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res2.ArchiveRows)\n    (int)row.ColumnData[&quot;updatedBy&quot;].RawValue != 6 &amp;&amp; \n    row.ColumnData[&quot;updatedDate&quot;].GetDateTimeValue() > new DateTime(2000, 1, 2);\n<p></p></code></pre>\n"
  syntax:
    content: Task<ArchiveRestrictionInfo[]> SetDynamicSelectionCriteriaAsync(int selectionId, ArchiveRestrictionInfo[] criteria, CancellationToken cancellationToken = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to add members
    - id: criteria
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
      description: Criteria defining the selection result.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]}
      description: Criteria defining the selection result. NULL if this is not a dynamic selection.
    content.vb: Function SetDynamicSelectionCriteriaAsync(selectionId As Integer, criteria As ArchiveRestrictionInfo(), cancellationToken As CancellationToken = Nothing) As Task(Of ArchiveRestrictionInfo())
  overload: SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteriaAsync*
  nameWithType.vb: ISelectionAgent.SetDynamicSelectionCriteriaAsync(Int32, ArchiveRestrictionInfo(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteriaAsync(System.Int32, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo(), System.Threading.CancellationToken)
  name.vb: SetDynamicSelectionCriteriaAsync(Int32, ArchiveRestrictionInfo(), CancellationToken)
- uid: SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteria2Async(System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteria2Async(System.Int32,System.String,System.Threading.CancellationToken)
  id: SetDynamicSelectionCriteria2Async(System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: SetDynamicSelectionCriteria2Async(Int32, String, CancellationToken)
  nameWithType: ISelectionAgent.SetDynamicSelectionCriteria2Async(Int32, String, CancellationToken)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteria2Async(System.Int32, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nUpdate the criteria for this dynamic selection using string. Criteria are parsed from the OData filter form: &apos;&apos;name startswith &apos;foo&apos; and category in (1,2,3)&apos;&apos;\n"
  example:
  - "\n<pre><code>&quot;name = &apos;SuperOffice AS&apos;&quot;\n&quot;name startsWith &apos;SuperOffice&apos;&quot;\n&quot;startsWith(name, &apos;SuperOffice&apos;)&quot;\n&quot;updatedDate after &apos;2000.12.30&apos;&quot;\n&quot;category = 10&quot;\n&quot;category in (10, 12, 53)&quot;\n&quot;category in (2,3,4) and name startswith &apos;super&apos;&quot;\n&quot;category in (2,3,4) or name startswith &apos;super&apos;&quot;\n&quot;(category = 2 or business = 3) and name contains &apos;super&apos;&quot;\n<p></p>\nvar agent = new FindAgent();\n<p></p>\nvar res1 = agent.FindFromRestrictions2(&quot;updatedBy = 2&quot;, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res1.ArchiveRows)\n    (int)row.ColumnData[&quot;updatedBy&quot;].RawValue == 2\n<p></p>\nvar res2 = agent.FindFromRestrictions2(&quot;updatedBy unequals 6 and updatedDate after &apos;2000.1.2&apos;&quot;, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res2.ArchiveRows)\n    (int)row.ColumnData[&quot;updatedBy&quot;].RawValue != 6 &amp;&amp; \n    row.ColumnData[&quot;updatedDate&quot;].GetDateTimeValue() > new DateTime(2000, 1, 2);\n<p></p>\nvar res3 = agent.FindFromRestrictions2(&quot;category in (2,3)&quot;, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res3.ArchiveRows)\n    (int)row.ColumnData[&quot;category&quot;].RawValue == 2 || (int)row.ColumnData[&quot;category&quot;].RawValue == 3;\n<p></p>\nvar res4 = agent.FindFromRestrictions2(&quot;sale/date after &apos;2000.1.2&apos;&quot;, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res4.ArchiveRows)\n    (row.ColumnData[&quot;sale/date&quot;].GetDateTimeValue().Year >= 2000 \n<p></p>\nvar res5 = _agent.FindFromRestrictionsColumns2(&quot;(category =2 or business = 3) and name contains &apos;e&apos;&quot;, \n         _provider, &quot;category,business,name&quot;, 100, 0);\nforeach (var row in res5.ArchiveRows)\n    ((int)x.ColumnData[&quot;category&quot;].RawValue == 2 || \n     (int)x.ColumnData[&quot;business&quot;].RawValue == 3) &amp;&amp; \n     (x.ColumnData[&quot;name&quot;].RawValue as string).Contains(&quot;e&quot;) );\n<p></p>\n<p></p></code></pre>\n"
  syntax:
    content: Task<ArchiveRestrictionInfo[]> SetDynamicSelectionCriteria2Async(int selectionId, string filter, CancellationToken cancellationToken = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to add members
    - id: filter
      type: System.String
      description: 'Criteria defining the selection result in OData filter form: `category in (1,2,3) and name = &apos;foo&apos;` '
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]}
      description: Criteria defining the selection result. NULL if this is not a dynamic selection.
    content.vb: Function SetDynamicSelectionCriteria2Async(selectionId As Integer, filter As String, cancellationToken As CancellationToken = Nothing) As Task(Of ArchiveRestrictionInfo())
  overload: SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteria2Async*
- uid: SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteria3Async(System.Int32,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteria3Async(System.Int32,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.String,System.Threading.CancellationToken)
  id: SetDynamicSelectionCriteria3Async(System.Int32,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: SetDynamicSelectionCriteria3Async(Int32, ArchiveRestrictionInfo[], String, CancellationToken)
  nameWithType: ISelectionAgent.SetDynamicSelectionCriteria3Async(Int32, ArchiveRestrictionInfo[], String, CancellationToken)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteria3Async(System.Int32, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[], System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nUpdate the criteria for this dynamic selection. Use criteria as either restriction objects or OData string format. Criteria are parsed from the OData filter form: &apos;&apos;name startswith &apos;foo&apos; and category in (1,2,3)&apos;&apos;\n"
  example:
  - "\n<pre><code>&quot;name = &apos;SuperOffice AS&apos;&quot;\n&quot;name startsWith &apos;SuperOffice&apos;&quot;\n&quot;startsWith(name, &apos;SuperOffice&apos;)&quot;\n&quot;updatedDate after &apos;2000.12.30&apos;&quot;\n&quot;category = 10&quot;\n&quot;category in (10, 12, 53)&quot;\n&quot;category in (2,3,4) and name startswith &apos;super&apos;&quot;\n&quot;category in (2,3,4) or name startswith &apos;super&apos;&quot;\n&quot;(category = 2 or business = 3) and name contains &apos;super&apos;&quot;\n<p></p>\nvar agent = new FindAgent();\n<p></p>\nvar restrictions = new ArchiveRestrictionInfo[1];\nrestrictions[0] = new ArchiveRestrictionInfo(&quot;updatedBy&quot;, &quot;equals&quot;, &quot;2&quot;);\nvar res = _agent.FindFromRestrictions(restrictions, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res1.ArchiveRows)\n    (int)row.ColumnData[&quot;updatedBy&quot;].RawValue == 2\n<p></p>\nvar restrictions = new ArchiveRestrictionInfo[2];\nrestrictions[0] = new ArchiveRestrictionInfo(&quot;updatedBy&quot;, &quot;equals&quot;, &quot;2&quot;);\nrestrictions[1] = new ArchiveRestrictionInfo(&quot;updatedDate&quot;, &quot;after&quot;, &quot;2000.1.2&quot;);\nvar res = _agent.FindFromRestrictions(restrictions, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res2.ArchiveRows)\n    (int)row.ColumnData[&quot;updatedBy&quot;].RawValue != 6 &amp;&amp; \n    row.ColumnData[&quot;updatedDate&quot;].GetDateTimeValue() > new DateTime(2000, 1, 2);\n<p></p>\n<p></p>\n&quot;name = &apos;SuperOffice AS&apos;&quot;\n&quot;name startsWith &apos;SuperOffice&apos;&quot;\n&quot;startsWith(name, &apos;SuperOffice&apos;)&quot;\n&quot;updatedDate after &apos;2000.12.30&apos;&quot;\n&quot;category = 10&quot;\n&quot;category in (10, 12, 53)&quot;\n&quot;category in (2,3,4) and name startswith &apos;super&apos;&quot;\n&quot;category in (2,3,4) or name startswith &apos;super&apos;&quot;\n&quot;(category = 2 or business = 3) and name contains &apos;super&apos;&quot;\n<p></p>\nvar agent = new FindAgent();\n<p></p>\nvar res1 = agent.FindFromRestrictions2(&quot;updatedBy = 2&quot;, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res1.ArchiveRows)\n    (int)row.ColumnData[&quot;updatedBy&quot;].RawValue == 2\n<p></p>\nvar res2 = agent.FindFromRestrictions2(&quot;updatedBy unequals 6 and updatedDate after &apos;2000.1.2&apos;&quot;, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res2.ArchiveRows)\n    (int)row.ColumnData[&quot;updatedBy&quot;].RawValue != 6 &amp;&amp; \n    row.ColumnData[&quot;updatedDate&quot;].GetDateTimeValue() > new DateTime(2000, 1, 2);\n<p></p>\nvar res3 = agent.FindFromRestrictions2(&quot;category in (2,3)&quot;, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res3.ArchiveRows)\n    (int)row.ColumnData[&quot;category&quot;].RawValue == 2 || (int)row.ColumnData[&quot;category&quot;].RawValue == 3;\n<p></p>\nvar res4 = agent.FindFromRestrictions2(&quot;sale/date after &apos;2000.1.2&apos;&quot;, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res4.ArchiveRows)\n    (row.ColumnData[&quot;sale/date&quot;].GetDateTimeValue().Year >= 2000 \n<p></p>\nvar res5 = _agent.FindFromRestrictionsColumns2(&quot;(category =2 or business = 3) and name contains &apos;e&apos;&quot;, \n         _provider, &quot;category,business,name&quot;, 100, 0);\nforeach (var row in res5.ArchiveRows)\n    ((int)x.ColumnData[&quot;category&quot;].RawValue == 2 || \n     (int)x.ColumnData[&quot;business&quot;].RawValue == 3) &amp;&amp; \n     (x.ColumnData[&quot;name&quot;].RawValue as string).Contains(&quot;e&quot;) );\n<p></p>\n<p></p></code></pre>\n"
  syntax:
    content: Task<ArchiveRestrictionInfo[]> SetDynamicSelectionCriteria3Async(int selectionId, ArchiveRestrictionInfo[] criteria, string filter, CancellationToken cancellationToken = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to add members
    - id: criteria
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
      description: Criteria defining the selection result. Pass NULL if using the filter string instead.
    - id: filter
      type: System.String
      description: 'Criteria defining the selection result in OData filter form: `category in (1,2,3) and name = &apos;foo&apos;`. Pass NULL or empty string &apos;&apos; if using the criteria objects.'
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]}
      description: Criteria defining the selection result. NULL if this is not a dynamic selection.
    content.vb: Function SetDynamicSelectionCriteria3Async(selectionId As Integer, criteria As ArchiveRestrictionInfo(), filter As String, cancellationToken As CancellationToken = Nothing) As Task(Of ArchiveRestrictionInfo())
  overload: SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteria3Async*
  nameWithType.vb: ISelectionAgent.SetDynamicSelectionCriteria3Async(Int32, ArchiveRestrictionInfo(), String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteria3Async(System.Int32, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo(), System.String, System.Threading.CancellationToken)
  name.vb: SetDynamicSelectionCriteria3Async(Int32, ArchiveRestrictionInfo(), String, CancellationToken)
- uid: SuperOffice.CRM.Services.ISelectionAgent.DeletePersonsAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.DeletePersonsAsync(System.Int32,System.Threading.CancellationToken)
  id: DeletePersonsAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: DeletePersonsAsync(Int32, CancellationToken)
  nameWithType: ISelectionAgent.DeletePersonsAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.DeletePersonsAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nDeletes all persons from a selection. If a person does not have delete rights, it will be skipped.\n"
  syntax:
    content: Task DeletePersonsAsync(int selectionId, CancellationToken cancellationToken = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: Id of the selection the delete operation will be performed.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function DeletePersonsAsync(selectionId As Integer, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.ISelectionAgent.DeletePersonsAsync*
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetDynamicSelectionCriteriaGroupsAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.GetDynamicSelectionCriteriaGroupsAsync(System.Int32,System.Threading.CancellationToken)
  id: GetDynamicSelectionCriteriaGroupsAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: GetDynamicSelectionCriteriaGroupsAsync(Int32, CancellationToken)
  nameWithType: ISelectionAgent.GetDynamicSelectionCriteriaGroupsAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetDynamicSelectionCriteriaGroupsAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet the criteria for this dynamic selection. This call supports multiple criteria groups.\n"
  syntax:
    content: Task<ArchiveRestrictionGroup[]> GetDynamicSelectionCriteriaGroupsAsync(int selectionId, CancellationToken cancellationToken = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to add members
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup[]}
      description: Criteria groups defining the selection result. NULL if selection does not exist, or if this is not a dynamic selection.
    content.vb: Function GetDynamicSelectionCriteriaGroupsAsync(selectionId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of ArchiveRestrictionGroup())
  overload: SuperOffice.CRM.Services.ISelectionAgent.GetDynamicSelectionCriteriaGroupsAsync*
- uid: SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteriaGroupsAsync(System.Int32,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteriaGroupsAsync(System.Int32,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup[],System.Threading.CancellationToken)
  id: SetDynamicSelectionCriteriaGroupsAsync(System.Int32,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: SetDynamicSelectionCriteriaGroupsAsync(Int32, ArchiveRestrictionGroup[], CancellationToken)
  nameWithType: ISelectionAgent.SetDynamicSelectionCriteriaGroupsAsync(Int32, ArchiveRestrictionGroup[], CancellationToken)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteriaGroupsAsync(System.Int32, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup[], System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nUpdate the criteria for this dynamic selection. Replaces existing criteria with the new values. This call supports multiple criteria groups.\n"
  example:
  - "\n<pre><code>&quot;name = &apos;SuperOffice AS&apos;&quot;\n&quot;name startsWith &apos;SuperOffice&apos;&quot;\n&quot;startsWith(name, &apos;SuperOffice&apos;)&quot;\n&quot;updatedDate after &apos;2000.12.30&apos;&quot;\n&quot;category = 10&quot;\n&quot;category in (10, 12, 53)&quot;\n&quot;category in (2,3,4) and name startswith &apos;super&apos;&quot;\n&quot;category in (2,3,4) or name startswith &apos;super&apos;&quot;\n&quot;(category = 2 or business = 3) and name contains &apos;super&apos;&quot;\n<p></p>\nvar agent = new FindAgent();\n<p></p>\nvar restrictions = new ArchiveRestrictionInfo[1];\nrestrictions[0] = new ArchiveRestrictionInfo(&quot;updatedBy&quot;, &quot;equals&quot;, &quot;2&quot;);\nvar res = _agent.FindFromRestrictions(restrictions, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res1.ArchiveRows)\n    (int)row.ColumnData[&quot;updatedBy&quot;].RawValue == 2\n<p></p>\nvar restrictions = new ArchiveRestrictionInfo[2];\nrestrictions[0] = new ArchiveRestrictionInfo(&quot;updatedBy&quot;, &quot;equals&quot;, &quot;2&quot;);\nrestrictions[1] = new ArchiveRestrictionInfo(&quot;updatedDate&quot;, &quot;after&quot;, &quot;2000.1.2&quot;);\nvar res = _agent.FindFromRestrictions(restrictions, &quot;FindContact&quot;, 100, 0);\nforeach (var row in res2.ArchiveRows)\n    (int)row.ColumnData[&quot;updatedBy&quot;].RawValue != 6 &amp;&amp; \n    row.ColumnData[&quot;updatedDate&quot;].GetDateTimeValue() > new DateTime(2000, 1, 2);\n<p></p></code></pre>\n"
  syntax:
    content: Task<ArchiveRestrictionGroup[]> SetDynamicSelectionCriteriaGroupsAsync(int selectionId, ArchiveRestrictionGroup[] criteria, CancellationToken cancellationToken = null)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to add members
    - id: criteria
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup[]
      description: Criteria groups defining the selection result. Empty array is legal, simply means no criteria have been set
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup[]}
      description: Criteria groups defining the selection result. NULL if this is not a dynamic selection.
    content.vb: Function SetDynamicSelectionCriteriaGroupsAsync(selectionId As Integer, criteria As ArchiveRestrictionGroup(), cancellationToken As CancellationToken = Nothing) As Task(Of ArchiveRestrictionGroup())
  overload: SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteriaGroupsAsync*
  nameWithType.vb: ISelectionAgent.SetDynamicSelectionCriteriaGroupsAsync(Int32, ArchiveRestrictionGroup(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteriaGroupsAsync(System.Int32, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup(), System.Threading.CancellationToken)
  name.vb: SetDynamicSelectionCriteriaGroupsAsync(Int32, ArchiveRestrictionGroup(), CancellationToken)
- uid: SuperOffice.CRM.Services.ISelectionAgent.DeleteSelectionEntityAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.DeleteSelectionEntityAsync(System.Int32,System.Threading.CancellationToken)
  id: DeleteSelectionEntityAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: DeleteSelectionEntityAsync(Int32, CancellationToken)
  nameWithType: ISelectionAgent.DeleteSelectionEntityAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.DeleteSelectionEntityAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nDeletes the SelectionEntity\n"
  syntax:
    content: Task DeleteSelectionEntityAsync(int selectionEntityId, CancellationToken cancellationToken = null)
    parameters:
    - id: selectionEntityId
      type: System.Int32
      description: The identity of the SelectionEntity
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: This method has no return value
    content.vb: Function DeleteSelectionEntityAsync(selectionEntityId As Integer, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.ISelectionAgent.DeleteSelectionEntityAsync*
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionForFindAsync(System.String,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.GetSelectionForFindAsync(System.String,System.Int32,System.Threading.CancellationToken)
  id: GetSelectionForFindAsync(System.String,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: GetSelectionForFindAsync(String, Int32, CancellationToken)
  nameWithType: ISelectionAgent.GetSelectionForFindAsync(String, Int32, CancellationToken)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionForFindAsync(System.String, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nObtain a selection for the given entity, for the current user, of type WorkingSetForFind. Optionally populate criteria from the TypicalSearches system\n"
  syntax:
    content: Task<SelectionForFind> GetSelectionForFindAsync(string entityName, int typicalSearchId, CancellationToken cancellationToken = null)
    parameters:
    - id: entityName
      type: System.String
      description: The name of the entity to make a selection for; examples &apos;sale&apos;, &apos;project&apos;, &apos;y_equipment&apos;
    - id: typicalSearchId
      type: System.Int32
      description: If 0, keep existing criteria; if -1, reset to entity default; > 0 get criteria from given TypicalSearch
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.SelectionForFind}
      description: Target selection id and provider name
    content.vb: Function GetSelectionForFindAsync(entityName As String, typicalSearchId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of SelectionForFind)
  overload: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionForFindAsync*
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionSummariesAsync(System.Int32[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.GetSelectionSummariesAsync(System.Int32[],System.Threading.CancellationToken)
  id: GetSelectionSummariesAsync(System.Int32[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: GetSelectionSummariesAsync(Int32[], CancellationToken)
  nameWithType: ISelectionAgent.GetSelectionSummariesAsync(Int32[], CancellationToken)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionSummariesAsync(System.Int32[], System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nGet an array of summaryitem for the given selections\n"
  syntax:
    content: Task<SelectionSummaryItem[]> GetSelectionSummariesAsync(int[] selectionIds, CancellationToken cancellationToken = null)
    parameters:
    - id: selectionIds
      type: System.Int32[]
      description: The selections to fetch summaries for
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.SelectionSummaryItem[]}
      description: Summary items for the given id&apos;s, in no particular order
    content.vb: Function GetSelectionSummariesAsync(selectionIds As Integer(), cancellationToken As CancellationToken = Nothing) As Task(Of SelectionSummaryItem())
  overload: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionSummariesAsync*
  nameWithType.vb: ISelectionAgent.GetSelectionSummariesAsync(Int32(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionSummariesAsync(System.Int32(), System.Threading.CancellationToken)
  name.vb: GetSelectionSummariesAsync(Int32(), CancellationToken)
- uid: SuperOffice.CRM.Services.ISelectionAgent.UpdateTypicalSearchAsync(SuperOffice.CRM.Services.TypicalSearches,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.UpdateTypicalSearchAsync(SuperOffice.CRM.Services.TypicalSearches,System.Threading.CancellationToken)
  id: UpdateTypicalSearchAsync(SuperOffice.CRM.Services.TypicalSearches,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: UpdateTypicalSearchAsync(TypicalSearches, CancellationToken)
  nameWithType: ISelectionAgent.UpdateTypicalSearchAsync(TypicalSearches, CancellationToken)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.UpdateTypicalSearchAsync(SuperOffice.CRM.Services.TypicalSearches, System.Threading.CancellationToken)
  type: Method
  source:
    path: SuperOffice.Services
    isExternal: true
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "\nUpdate (import) TypicalSearch information in the database\n"
  syntax:
    content: Task<string> UpdateTypicalSearchAsync(TypicalSearches searches, CancellationToken cancellationToken = null)
    parameters:
    - id: searches
      type: SuperOffice.CRM.Services.TypicalSearches
      description: TypicalSearch structures to import. If null, then the fileset is scanned for *TypicalSearch.json files and those are imported instead
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Message that can be shown to the user, summarizing what has been done, if anything.
    content.vb: Function UpdateTypicalSearchAsync(searches As TypicalSearches, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Services.ISelectionAgent.UpdateTypicalSearchAsync*
references:
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
- uid: SuperOffice.CRM.Services.ISelectionAgent.CreateDefaultSelectionEntityAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.CreateDefaultSelectionEntityAsync
  isExternal: true
  name: CreateDefaultSelectionEntityAsync
  nameWithType: ISelectionAgent.CreateDefaultSelectionEntityAsync
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CreateDefaultSelectionEntityAsync
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.SelectionEntity}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Services.SelectionEntity}'
  definition: System.Threading.Tasks.Task`1
  name: Task<SelectionEntity>
  nameWithType: Task<SelectionEntity>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.SelectionEntity>
  nameWithType.vb: Task(Of SelectionEntity)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.SelectionEntity)
  name.vb: Task(Of SelectionEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Services.SelectionEntity
    name: SelectionEntity
    nameWithType: SelectionEntity
    fullName: SuperOffice.CRM.Services.SelectionEntity
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Services.SelectionEntity
    name: SelectionEntity
    nameWithType: SelectionEntity
    fullName: SuperOffice.CRM.Services.SelectionEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.ISelectionAgent.SaveSelectionEntityAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.SaveSelectionEntityAsync
  isExternal: true
  name: SaveSelectionEntityAsync
  nameWithType: ISelectionAgent.SaveSelectionEntityAsync
  fullName: SuperOffice.CRM.Services.ISelectionAgent.SaveSelectionEntityAsync
- uid: SuperOffice.CRM.Services.SelectionEntity
  commentId: T:SuperOffice.CRM.Services.SelectionEntity
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: SelectionEntity
  nameWithType: SelectionEntity
  fullName: SuperOffice.CRM.Services.SelectionEntity
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionEntityAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.GetSelectionEntityAsync
  isExternal: true
  name: GetSelectionEntityAsync
  nameWithType: ISelectionAgent.GetSelectionEntityAsync
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionEntityAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Services.ISelectionAgent.CreateSelectionEntityAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.CreateSelectionEntityAsync
  isExternal: true
  name: CreateSelectionEntityAsync
  nameWithType: ISelectionAgent.CreateSelectionEntityAsync
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CreateSelectionEntityAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.Services.ISelectionAgent.CreateContactSelectionFromSelectionAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.CreateContactSelectionFromSelectionAsync
  isExternal: true
  name: CreateContactSelectionFromSelectionAsync
  nameWithType: ISelectionAgent.CreateContactSelectionFromSelectionAsync
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CreateContactSelectionFromSelectionAsync
- uid: SuperOffice.Data.SelectionType
  isExternal: true
  name: SelectionType
  nameWithType: SelectionType
  fullName: SuperOffice.Data.SelectionType
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionFromContactPersonIdsAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionFromContactPersonIdsAsync
  isExternal: true
  name: CreateTemporaryContactSelectionFromContactPersonIdsAsync
  nameWithType: ISelectionAgent.CreateTemporaryContactSelectionFromContactPersonIdsAsync
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionFromContactPersonIdsAsync
- uid: SuperOffice.CRM.Services.ContactPersonId[]
  isExternal: true
  name: ContactPersonId[]
  nameWithType: ContactPersonId[]
  fullName: SuperOffice.CRM.Services.ContactPersonId[]
  nameWithType.vb: ContactPersonId()
  fullName.vb: SuperOffice.CRM.Services.ContactPersonId()
  name.vb: ContactPersonId()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ContactPersonId
    name: ContactPersonId
    nameWithType: ContactPersonId
    fullName: SuperOffice.CRM.Services.ContactPersonId
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.Services.ContactPersonId
    name: ContactPersonId
    nameWithType: ContactPersonId
    fullName: SuperOffice.CRM.Services.ContactPersonId
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.ISelectionAgent.CopyContactSelectionMembersAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.CopyContactSelectionMembersAsync
  isExternal: true
  name: CopyContactSelectionMembersAsync
  nameWithType: ISelectionAgent.CopyContactSelectionMembersAsync
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CopyContactSelectionMembersAsync
- uid: System.Threading.Tasks.Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatisticsAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatisticsAsync
  isExternal: true
  name: GetRecipientStatisticsAsync
  nameWithType: ISelectionAgent.GetRecipientStatisticsAsync
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatisticsAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.RecipientStatistics}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Services.RecipientStatistics}'
  definition: System.Threading.Tasks.Task`1
  name: Task<RecipientStatistics>
  nameWithType: Task<RecipientStatistics>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.RecipientStatistics>
  nameWithType.vb: Task(Of RecipientStatistics)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.RecipientStatistics)
  name.vb: Task(Of RecipientStatistics)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Services.RecipientStatistics
    name: RecipientStatistics
    nameWithType: RecipientStatistics
    fullName: SuperOffice.CRM.Services.RecipientStatistics
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Services.RecipientStatistics
    name: RecipientStatistics
    nameWithType: RecipientStatistics
    fullName: SuperOffice.CRM.Services.RecipientStatistics
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatisticsFromProjectMembersAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatisticsFromProjectMembersAsync
  isExternal: true
  name: GetRecipientStatisticsFromProjectMembersAsync
  nameWithType: ISelectionAgent.GetRecipientStatisticsFromProjectMembersAsync
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatisticsFromProjectMembersAsync
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatisticsFromContactPersonIdsAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatisticsFromContactPersonIdsAsync
  isExternal: true
  name: GetRecipientStatisticsFromContactPersonIdsAsync
  nameWithType: ISelectionAgent.GetRecipientStatisticsFromContactPersonIdsAsync
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatisticsFromContactPersonIdsAsync
- uid: SuperOffice.CRM.Services.ISelectionAgent.AddContactSelectionMembersAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.AddContactSelectionMembersAsync
  isExternal: true
  name: AddContactSelectionMembersAsync
  nameWithType: ISelectionAgent.AddContactSelectionMembersAsync
  fullName: SuperOffice.CRM.Services.ISelectionAgent.AddContactSelectionMembersAsync
- uid: SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembersAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembersAsync
  isExternal: true
  name: RemoveContactSelectionMembersAsync
  nameWithType: ISelectionAgent.RemoveContactSelectionMembersAsync
  fullName: SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembersAsync
- uid: SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembersFromIdsAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembersFromIdsAsync
  isExternal: true
  name: RemoveContactSelectionMembersFromIdsAsync
  nameWithType: ISelectionAgent.RemoveContactSelectionMembersFromIdsAsync
  fullName: SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembersFromIdsAsync
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.ISelectionAgent.AddContactSelectionMembersFromSearchAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.AddContactSelectionMembersFromSearchAsync
  isExternal: true
  name: AddContactSelectionMembersFromSearchAsync
  nameWithType: ISelectionAgent.AddContactSelectionMembersFromSearchAsync
  fullName: SuperOffice.CRM.Services.ISelectionAgent.AddContactSelectionMembersFromSearchAsync
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: '!:System.Threading.Tasks.Task{System.Int32}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  nameWithType.vb: Task(Of Int32)
  fullName.vb: System.Threading.Tasks.Task(Of System.Int32)
  name.vb: Task(Of Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembersFromSearchAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembersFromSearchAsync
  isExternal: true
  name: RemoveContactSelectionMembersFromSearchAsync
  nameWithType: ISelectionAgent.RemoveContactSelectionMembersFromSearchAsync
  fullName: SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembersFromSearchAsync
- uid: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionAsync
  isExternal: true
  name: CreateTemporaryContactSelectionAsync
  nameWithType: ISelectionAgent.CreateTemporaryContactSelectionAsync
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionAsync
- uid: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionFromSelectionMemberIdsAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionFromSelectionMemberIdsAsync
  isExternal: true
  name: CreateTemporaryContactSelectionFromSelectionMemberIdsAsync
  nameWithType: ISelectionAgent.CreateTemporaryContactSelectionFromSelectionMemberIdsAsync
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionFromSelectionMemberIdsAsync
- uid: SuperOffice.CRM.Services.ISelectionAgent.AddRemoveContactSelectionMemberInterestsAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.AddRemoveContactSelectionMemberInterestsAsync
  isExternal: true
  name: AddRemoveContactSelectionMemberInterestsAsync
  nameWithType: ISelectionAgent.AddRemoveContactSelectionMemberInterestsAsync
  fullName: SuperOffice.CRM.Services.ISelectionAgent.AddRemoveContactSelectionMemberInterestsAsync
- uid: SuperOffice.CRM.Services.ISelectionAgent.EditContactSelectionMemberDetailsAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.EditContactSelectionMemberDetailsAsync
  isExternal: true
  name: EditContactSelectionMemberDetailsAsync
  nameWithType: ISelectionAgent.EditContactSelectionMemberDetailsAsync
  fullName: SuperOffice.CRM.Services.ISelectionAgent.EditContactSelectionMemberDetailsAsync
- uid: SuperOffice.CRM.Services.SelectionMemberEditValues
  commentId: T:SuperOffice.CRM.Services.SelectionMemberEditValues
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: SelectionMemberEditValues
  nameWithType: SelectionMemberEditValues
  fullName: SuperOffice.CRM.Services.SelectionMemberEditValues
- uid: SuperOffice.CRM.Services.ISelectionAgent.GenerateFollowUpsAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.GenerateFollowUpsAsync
  isExternal: true
  name: GenerateFollowUpsAsync
  nameWithType: ISelectionAgent.GenerateFollowUpsAsync
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GenerateFollowUpsAsync
- uid: SuperOffice.CRM.Services.AppointmentEntity
  commentId: T:SuperOffice.CRM.Services.AppointmentEntity
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: AppointmentEntity
  nameWithType: AppointmentEntity
  fullName: SuperOffice.CRM.Services.AppointmentEntity
- uid: SuperOffice.CRM.Services.ISelectionAgent.ExportSelectionMembersAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.ExportSelectionMembersAsync
  isExternal: true
  name: ExportSelectionMembersAsync
  nameWithType: ISelectionAgent.ExportSelectionMembersAsync
  fullName: SuperOffice.CRM.Services.ISelectionAgent.ExportSelectionMembersAsync
- uid: System.Threading.Tasks.Task{System.Byte[]}
  commentId: '!:System.Threading.Tasks.Task{System.Byte[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Byte[]>
  nameWithType: Task<Byte[]>
  fullName: System.Threading.Tasks.Task<System.Byte[]>
  nameWithType.vb: Task(Of Byte())
  fullName.vb: System.Threading.Tasks.Task(Of System.Byte())
  name.vb: Task(Of Byte())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.ISelectionAgent.ExportSelectionMembersWithOrderByAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.ExportSelectionMembersWithOrderByAsync
  isExternal: true
  name: ExportSelectionMembersWithOrderByAsync
  nameWithType: ISelectionAgent.ExportSelectionMembersWithOrderByAsync
  fullName: SuperOffice.CRM.Services.ISelectionAgent.ExportSelectionMembersWithOrderByAsync
- uid: SuperOffice.CRM.Services.ISelectionAgent.SetDuplicateRulesStatusAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.SetDuplicateRulesStatusAsync
  isExternal: true
  name: SetDuplicateRulesStatusAsync
  nameWithType: ISelectionAgent.SetDuplicateRulesStatusAsync
  fullName: SuperOffice.CRM.Services.ISelectionAgent.SetDuplicateRulesStatusAsync
- uid: SuperOffice.CRM.Services.DuplicateRule[]
  isExternal: true
  name: DuplicateRule[]
  nameWithType: DuplicateRule[]
  fullName: SuperOffice.CRM.Services.DuplicateRule[]
  nameWithType.vb: DuplicateRule()
  fullName.vb: SuperOffice.CRM.Services.DuplicateRule()
  name.vb: DuplicateRule()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.DuplicateRule
    name: DuplicateRule
    nameWithType: DuplicateRule
    fullName: SuperOffice.CRM.Services.DuplicateRule
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.Services.DuplicateRule
    name: DuplicateRule
    nameWithType: DuplicateRule
    fullName: SuperOffice.CRM.Services.DuplicateRule
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetDuplicatesAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.GetDuplicatesAsync
  isExternal: true
  name: GetDuplicatesAsync
  nameWithType: ISelectionAgent.GetDuplicatesAsync
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetDuplicatesAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.DuplicateEntry[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Services.DuplicateEntry[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<DuplicateEntry[]>
  nameWithType: Task<DuplicateEntry[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.DuplicateEntry[]>
  nameWithType.vb: Task(Of DuplicateEntry())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.DuplicateEntry())
  name.vb: Task(Of DuplicateEntry())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Services.DuplicateEntry
    name: DuplicateEntry
    nameWithType: DuplicateEntry
    fullName: SuperOffice.CRM.Services.DuplicateEntry
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Services.DuplicateEntry
    name: DuplicateEntry
    nameWithType: DuplicateEntry
    fullName: SuperOffice.CRM.Services.DuplicateEntry
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetDuplicateRulesAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.GetDuplicateRulesAsync
  isExternal: true
  name: GetDuplicateRulesAsync
  nameWithType: ISelectionAgent.GetDuplicateRulesAsync
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetDuplicateRulesAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.DuplicateRule[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Services.DuplicateRule[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<DuplicateRule[]>
  nameWithType: Task<DuplicateRule[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.DuplicateRule[]>
  nameWithType.vb: Task(Of DuplicateRule())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.DuplicateRule())
  name.vb: Task(Of DuplicateRule())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Services.DuplicateRule
    name: DuplicateRule
    nameWithType: DuplicateRule
    fullName: SuperOffice.CRM.Services.DuplicateRule
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Services.DuplicateRule
    name: DuplicateRule
    nameWithType: DuplicateRule
    fullName: SuperOffice.CRM.Services.DuplicateRule
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.ISelectionAgent.CreateNewEntryAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.CreateNewEntryAsync
  isExternal: true
  name: CreateNewEntryAsync
  nameWithType: ISelectionAgent.CreateNewEntryAsync
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CreateNewEntryAsync
- uid: SuperOffice.CRM.Services.DuplicateEntry
  commentId: T:SuperOffice.CRM.Services.DuplicateEntry
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: DuplicateEntry
  nameWithType: DuplicateEntry
  fullName: SuperOffice.CRM.Services.DuplicateEntry
- uid: SuperOffice.CRM.Services.ISelectionAgent.DeleteContactsAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.DeleteContactsAsync
  isExternal: true
  name: DeleteContactsAsync
  nameWithType: ISelectionAgent.DeleteContactsAsync
  fullName: SuperOffice.CRM.Services.ISelectionAgent.DeleteContactsAsync
- uid: SuperOffice.CRM.Services.ISelectionAgent.AddSelectionMembersAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.AddSelectionMembersAsync
  isExternal: true
  name: AddSelectionMembersAsync
  nameWithType: ISelectionAgent.AddSelectionMembersAsync
  fullName: SuperOffice.CRM.Services.ISelectionAgent.AddSelectionMembersAsync
- uid: SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembersAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembersAsync
  isExternal: true
  name: RemoveSelectionMembersAsync
  nameWithType: ISelectionAgent.RemoveSelectionMembersAsync
  fullName: SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembersAsync
- uid: SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembersByIdAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembersByIdAsync
  isExternal: true
  name: RemoveSelectionMembersByIdAsync
  nameWithType: ISelectionAgent.RemoveSelectionMembersByIdAsync
  fullName: SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembersByIdAsync
- uid: SuperOffice.CRM.Services.ISelectionAgent.AddSelectionMembersFromSearchAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.AddSelectionMembersFromSearchAsync
  isExternal: true
  name: AddSelectionMembersFromSearchAsync
  nameWithType: ISelectionAgent.AddSelectionMembersFromSearchAsync
  fullName: SuperOffice.CRM.Services.ISelectionAgent.AddSelectionMembersFromSearchAsync
- uid: SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembersFromSearchAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembersFromSearchAsync
  isExternal: true
  name: RemoveSelectionMembersFromSearchAsync
  nameWithType: ISelectionAgent.RemoveSelectionMembersFromSearchAsync
  fullName: SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembersFromSearchAsync
- uid: SuperOffice.CRM.Services.ISelectionAgent.CopySelectionMembersAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.CopySelectionMembersAsync
  isExternal: true
  name: CopySelectionMembersAsync
  nameWithType: ISelectionAgent.CopySelectionMembersAsync
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CopySelectionMembersAsync
- uid: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporarySelectionFromIdsAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.CreateTemporarySelectionFromIdsAsync
  isExternal: true
  name: CreateTemporarySelectionFromIdsAsync
  nameWithType: ISelectionAgent.CreateTemporarySelectionFromIdsAsync
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporarySelectionFromIdsAsync
- uid: SuperOffice.CRM.Services.ISelectionAgent.CreateSelectionFromSelectionAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.CreateSelectionFromSelectionAsync
  isExternal: true
  name: CreateSelectionFromSelectionAsync
  nameWithType: ISelectionAgent.CreateSelectionFromSelectionAsync
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CreateSelectionFromSelectionAsync
- uid: SuperOffice.CRM.Services.ISelectionAgent.CreateContactSelectionFromShadowSelectionAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.CreateContactSelectionFromShadowSelectionAsync
  isExternal: true
  name: CreateContactSelectionFromShadowSelectionAsync
  nameWithType: ISelectionAgent.CreateContactSelectionFromShadowSelectionAsync
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CreateContactSelectionFromShadowSelectionAsync
- uid: SuperOffice.CRM.Services.ISelectionAgent.DeleteEntitiesAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.DeleteEntitiesAsync
  isExternal: true
  name: DeleteEntitiesAsync
  nameWithType: ISelectionAgent.DeleteEntitiesAsync
  fullName: SuperOffice.CRM.Services.ISelectionAgent.DeleteEntitiesAsync
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetParentCombinedSelectionsAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.GetParentCombinedSelectionsAsync
  isExternal: true
  name: GetParentCombinedSelectionsAsync
  nameWithType: ISelectionAgent.GetParentCombinedSelectionsAsync
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetParentCombinedSelectionsAsync
- uid: System.Threading.Tasks.Task{System.Int32[]}
  commentId: '!:System.Threading.Tasks.Task{System.Int32[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Int32[]>
  nameWithType: Task<Int32[]>
  fullName: System.Threading.Tasks.Task<System.Int32[]>
  nameWithType.vb: Task(Of Int32())
  fullName.vb: System.Threading.Tasks.Task(Of System.Int32())
  name.vb: Task(Of Int32())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionMembersArchiveRowsAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.GetSelectionMembersArchiveRowsAsync
  isExternal: true
  name: GetSelectionMembersArchiveRowsAsync
  nameWithType: ISelectionAgent.GetSelectionMembersArchiveRowsAsync
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionMembersArchiveRowsAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.ArchiveListItem[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Services.ArchiveListItem[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ArchiveListItem[]>
  nameWithType: Task<ArchiveListItem[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.ArchiveListItem[]>
  nameWithType.vb: Task(Of ArchiveListItem())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.ArchiveListItem())
  name.vb: Task(Of ArchiveListItem())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Services.ArchiveListItem
    name: ArchiveListItem
    nameWithType: ArchiveListItem
    fullName: SuperOffice.CRM.Services.ArchiveListItem
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Services.ArchiveListItem
    name: ArchiveListItem
    nameWithType: ArchiveListItem
    fullName: SuperOffice.CRM.Services.ArchiveListItem
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionShadowMembersArchiveRowsAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.GetSelectionShadowMembersArchiveRowsAsync
  isExternal: true
  name: GetSelectionShadowMembersArchiveRowsAsync
  nameWithType: ISelectionAgent.GetSelectionShadowMembersArchiveRowsAsync
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionShadowMembersArchiveRowsAsync
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetDynamicSelectionCriteriaAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.GetDynamicSelectionCriteriaAsync
  isExternal: true
  name: GetDynamicSelectionCriteriaAsync
  nameWithType: ISelectionAgent.GetDynamicSelectionCriteriaAsync
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetDynamicSelectionCriteriaAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ArchiveRestrictionInfo[]>
  nameWithType: Task<ArchiveRestrictionInfo[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]>
  nameWithType.vb: Task(Of ArchiveRestrictionInfo())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo())
  name.vb: Task(Of ArchiveRestrictionInfo())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteriaAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteriaAsync
  isExternal: true
  name: SetDynamicSelectionCriteriaAsync
  nameWithType: ISelectionAgent.SetDynamicSelectionCriteriaAsync
  fullName: SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteriaAsync
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
  isExternal: true
  name: ArchiveRestrictionInfo[]
  nameWithType: ArchiveRestrictionInfo[]
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
  nameWithType.vb: ArchiveRestrictionInfo()
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo()
  name.vb: ArchiveRestrictionInfo()
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteria2Async*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteria2Async
  isExternal: true
  name: SetDynamicSelectionCriteria2Async
  nameWithType: ISelectionAgent.SetDynamicSelectionCriteria2Async
  fullName: SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteria2Async
- uid: SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteria3Async*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteria3Async
  isExternal: true
  name: SetDynamicSelectionCriteria3Async
  nameWithType: ISelectionAgent.SetDynamicSelectionCriteria3Async
  fullName: SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteria3Async
- uid: SuperOffice.CRM.Services.ISelectionAgent.DeletePersonsAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.DeletePersonsAsync
  isExternal: true
  name: DeletePersonsAsync
  nameWithType: ISelectionAgent.DeletePersonsAsync
  fullName: SuperOffice.CRM.Services.ISelectionAgent.DeletePersonsAsync
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetDynamicSelectionCriteriaGroupsAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.GetDynamicSelectionCriteriaGroupsAsync
  isExternal: true
  name: GetDynamicSelectionCriteriaGroupsAsync
  nameWithType: ISelectionAgent.GetDynamicSelectionCriteriaGroupsAsync
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetDynamicSelectionCriteriaGroupsAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ArchiveRestrictionGroup[]>
  nameWithType: Task<ArchiveRestrictionGroup[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup[]>
  nameWithType.vb: Task(Of ArchiveRestrictionGroup())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup())
  name.vb: Task(Of ArchiveRestrictionGroup())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup
    name: ArchiveRestrictionGroup
    nameWithType: ArchiveRestrictionGroup
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup
    name: ArchiveRestrictionGroup
    nameWithType: ArchiveRestrictionGroup
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteriaGroupsAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteriaGroupsAsync
  isExternal: true
  name: SetDynamicSelectionCriteriaGroupsAsync
  nameWithType: ISelectionAgent.SetDynamicSelectionCriteriaGroupsAsync
  fullName: SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteriaGroupsAsync
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup[]
  isExternal: true
  name: ArchiveRestrictionGroup[]
  nameWithType: ArchiveRestrictionGroup[]
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup[]
  nameWithType.vb: ArchiveRestrictionGroup()
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup()
  name.vb: ArchiveRestrictionGroup()
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup
    name: ArchiveRestrictionGroup
    nameWithType: ArchiveRestrictionGroup
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup
    name: ArchiveRestrictionGroup
    nameWithType: ArchiveRestrictionGroup
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.ISelectionAgent.DeleteSelectionEntityAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.DeleteSelectionEntityAsync
  isExternal: true
  name: DeleteSelectionEntityAsync
  nameWithType: ISelectionAgent.DeleteSelectionEntityAsync
  fullName: SuperOffice.CRM.Services.ISelectionAgent.DeleteSelectionEntityAsync
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionForFindAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.GetSelectionForFindAsync
  isExternal: true
  name: GetSelectionForFindAsync
  nameWithType: ISelectionAgent.GetSelectionForFindAsync
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionForFindAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.SelectionForFind}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Services.SelectionForFind}'
  definition: System.Threading.Tasks.Task`1
  name: Task<SelectionForFind>
  nameWithType: Task<SelectionForFind>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.SelectionForFind>
  nameWithType.vb: Task(Of SelectionForFind)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.SelectionForFind)
  name.vb: Task(Of SelectionForFind)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Services.SelectionForFind
    name: SelectionForFind
    nameWithType: SelectionForFind
    fullName: SuperOffice.CRM.Services.SelectionForFind
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Services.SelectionForFind
    name: SelectionForFind
    nameWithType: SelectionForFind
    fullName: SuperOffice.CRM.Services.SelectionForFind
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionSummariesAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.GetSelectionSummariesAsync
  isExternal: true
  name: GetSelectionSummariesAsync
  nameWithType: ISelectionAgent.GetSelectionSummariesAsync
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionSummariesAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.SelectionSummaryItem[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Services.SelectionSummaryItem[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<SelectionSummaryItem[]>
  nameWithType: Task<SelectionSummaryItem[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.SelectionSummaryItem[]>
  nameWithType.vb: Task(Of SelectionSummaryItem())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.SelectionSummaryItem())
  name.vb: Task(Of SelectionSummaryItem())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Services.SelectionSummaryItem
    name: SelectionSummaryItem
    nameWithType: SelectionSummaryItem
    fullName: SuperOffice.CRM.Services.SelectionSummaryItem
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Services.SelectionSummaryItem
    name: SelectionSummaryItem
    nameWithType: SelectionSummaryItem
    fullName: SuperOffice.CRM.Services.SelectionSummaryItem
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.ISelectionAgent.UpdateTypicalSearchAsync*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.UpdateTypicalSearchAsync
  isExternal: true
  name: UpdateTypicalSearchAsync
  nameWithType: ISelectionAgent.UpdateTypicalSearchAsync
  fullName: SuperOffice.CRM.Services.ISelectionAgent.UpdateTypicalSearchAsync
- uid: SuperOffice.CRM.Services.TypicalSearches
  commentId: T:SuperOffice.CRM.Services.TypicalSearches
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: TypicalSearches
  nameWithType: TypicalSearches
  fullName: SuperOffice.CRM.Services.TypicalSearches
- uid: System.Threading.Tasks.Task{System.String}
  commentId: '!:System.Threading.Tasks.Task{System.String}'
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
