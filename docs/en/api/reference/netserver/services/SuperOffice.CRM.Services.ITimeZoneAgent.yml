### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Services.ITimeZoneAgent
  commentId: T:SuperOffice.CRM.Services.ITimeZoneAgent
  id: ITimeZoneAgent
  parent: SuperOffice.CRM.Services
  children:
  - SuperOffice.CRM.Services.ITimeZoneAgent.CheckNewTimeZoneDataAvailableAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ITimeZoneAgent.DeleteTimeZonesAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ITimeZoneAgent.GetBaseTimeZoneIdAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ITimeZoneAgent.GetDefaultTimeZoneInformationAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ITimeZoneAgent.GetDefaultTimeZonePreferenceAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ITimeZoneAgent.InitializeTimeZoneDataAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ITimeZoneAgent.SetActiveTimeZoneRowAsync(System.Int32,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ITimeZoneAgent.SetActiveTimeZonesByFilterAsync(System.String,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ITimeZoneAgent.SetBaseTimeZoneIdAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ITimeZoneAgent.TimeOfLastTimeZoneUpdateAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ITimeZoneAgent.ToggleActiveTimeZoneRowAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.ITimeZoneAgent.UpdateTimeZoneDataAsync(System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: ITimeZoneAgent
  nameWithType: ITimeZoneAgent
  fullName: SuperOffice.CRM.Services.ITimeZoneAgent
  type: Interface
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Interface for the TimeZone Agent

    TimeZone maintenance
  example:
  - >-
    <pre><code class="lang-csharp">using SuperOffice;

    using SuperOffice.CRM.Services;


    using (SoSession mySession = SoSession.Authenticate("user", "pass"))

    {
       using (TimeZoneAgent agent = new TimeZoneAgent())
       {
          // call methods on agent here...
       }
    }</code></pre>
  syntax:
    content: >-
      [Agent("TimeZone Agent", "Interface for the TimeZone Agent. TimeZone maintenance")]

      public interface ITimeZoneAgent : IAgent
    content.vb: >-
      <Agent("TimeZone Agent", "Interface for the TimeZone Agent. TimeZone maintenance")>

      Public Interface ITimeZoneAgent Inherits IAgent
  attributes:
  - type: SuperOffice.CRM.Services.Reflection.AgentAttribute
    ctor: SuperOffice.CRM.Services.Reflection.AgentAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: TimeZone Agent
    - type: System.String
      value: Interface for the TimeZone Agent. TimeZone maintenance
- uid: SuperOffice.CRM.Services.ITimeZoneAgent.GetDefaultTimeZoneInformationAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ITimeZoneAgent.GetDefaultTimeZoneInformationAsync(System.Threading.CancellationToken)
  id: GetDefaultTimeZoneInformationAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ITimeZoneAgent
  langs:
  - csharp
  - vb
  name: GetDefaultTimeZoneInformationAsync(CancellationToken)
  nameWithType: ITimeZoneAgent.GetDefaultTimeZoneInformationAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.ITimeZoneAgent.GetDefaultTimeZoneInformationAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get information about the current, preferred timezone for the current user. If no such preference has been set, returns the correct fallback (and UserPreferenceId is 0)
  example: []
  syntax:
    content: Task<PreferredTimeZone> GetDefaultTimeZoneInformationAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.PreferredTimeZone}
      description: Get information about the current, preferred timezone for the current user.
    content.vb: Function GetDefaultTimeZoneInformationAsync(cancellationToken As CancellationToken = Nothing) As Task(Of PreferredTimeZone)
  overload: SuperOffice.CRM.Services.ITimeZoneAgent.GetDefaultTimeZoneInformationAsync*
- uid: SuperOffice.CRM.Services.ITimeZoneAgent.InitializeTimeZoneDataAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ITimeZoneAgent.InitializeTimeZoneDataAsync(System.Threading.CancellationToken)
  id: InitializeTimeZoneDataAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ITimeZoneAgent
  langs:
  - csharp
  - vb
  name: InitializeTimeZoneDataAsync(CancellationToken)
  nameWithType: ITimeZoneAgent.InitializeTimeZoneDataAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.ITimeZoneAgent.InitializeTimeZoneDataAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Initalizes the TimeZoneData
  example: []
  syntax:
    content: Task<TimeZoneData[]> InitializeTimeZoneDataAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.TimeZoneData[]}
      description: ''
    content.vb: Function InitializeTimeZoneDataAsync(cancellationToken As CancellationToken = Nothing) As Task(Of TimeZoneData())
  overload: SuperOffice.CRM.Services.ITimeZoneAgent.InitializeTimeZoneDataAsync*
- uid: SuperOffice.CRM.Services.ITimeZoneAgent.GetBaseTimeZoneIdAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ITimeZoneAgent.GetBaseTimeZoneIdAsync(System.Threading.CancellationToken)
  id: GetBaseTimeZoneIdAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ITimeZoneAgent
  langs:
  - csharp
  - vb
  name: GetBaseTimeZoneIdAsync(CancellationToken)
  nameWithType: ITimeZoneAgent.GetBaseTimeZoneIdAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.ITimeZoneAgent.GetBaseTimeZoneIdAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get the base timezone id.
  example: []
  syntax:
    content: Task<int> GetBaseTimeZoneIdAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: Returns the base timezone id. Returns 0 if not set.
    content.vb: Function GetBaseTimeZoneIdAsync(cancellationToken As CancellationToken = Nothing) As Task(Of Integer)
  overload: SuperOffice.CRM.Services.ITimeZoneAgent.GetBaseTimeZoneIdAsync*
- uid: SuperOffice.CRM.Services.ITimeZoneAgent.UpdateTimeZoneDataAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ITimeZoneAgent.UpdateTimeZoneDataAsync(System.Threading.CancellationToken)
  id: UpdateTimeZoneDataAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ITimeZoneAgent
  langs:
  - csharp
  - vb
  name: UpdateTimeZoneDataAsync(CancellationToken)
  nameWithType: ITimeZoneAgent.UpdateTimeZoneDataAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.ITimeZoneAgent.UpdateTimeZoneDataAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Retrieve time zone data from the SuperOffice server and update TimeZone data in the database
  example: []
  syntax:
    content: Task<bool> UpdateTimeZoneDataAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: Returns true if the operation succeeded
    content.vb: Function UpdateTimeZoneDataAsync(cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.Services.ITimeZoneAgent.UpdateTimeZoneDataAsync*
- uid: SuperOffice.CRM.Services.ITimeZoneAgent.CheckNewTimeZoneDataAvailableAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ITimeZoneAgent.CheckNewTimeZoneDataAvailableAsync(System.Threading.CancellationToken)
  id: CheckNewTimeZoneDataAvailableAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ITimeZoneAgent
  langs:
  - csharp
  - vb
  name: CheckNewTimeZoneDataAvailableAsync(CancellationToken)
  nameWithType: ITimeZoneAgent.CheckNewTimeZoneDataAvailableAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.ITimeZoneAgent.CheckNewTimeZoneDataAvailableAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Check to see if new timezone data is available
  example: []
  syntax:
    content: Task<bool> CheckNewTimeZoneDataAvailableAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: Returns true if new timezone info is found available, false otherwise
    content.vb: Function CheckNewTimeZoneDataAvailableAsync(cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.Services.ITimeZoneAgent.CheckNewTimeZoneDataAvailableAsync*
- uid: SuperOffice.CRM.Services.ITimeZoneAgent.ToggleActiveTimeZoneRowAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ITimeZoneAgent.ToggleActiveTimeZoneRowAsync(System.Int32,System.Threading.CancellationToken)
  id: ToggleActiveTimeZoneRowAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ITimeZoneAgent
  langs:
  - csharp
  - vb
  name: ToggleActiveTimeZoneRowAsync(int, CancellationToken)
  nameWithType: ITimeZoneAgent.ToggleActiveTimeZoneRowAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.ITimeZoneAgent.ToggleActiveTimeZoneRowAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Toggles active state of a single row in the TZLocation table
  example: []
  syntax:
    content: Task ToggleActiveTimeZoneRowAsync(int id, CancellationToken cancellationToken = default)
    parameters:
    - id: id
      type: System.Int32
      description: Id of row to toggle active state on
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function ToggleActiveTimeZoneRowAsync(id As Integer, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.ITimeZoneAgent.ToggleActiveTimeZoneRowAsync*
  nameWithType.vb: ITimeZoneAgent.ToggleActiveTimeZoneRowAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ITimeZoneAgent.ToggleActiveTimeZoneRowAsync(Integer, System.Threading.CancellationToken)
  name.vb: ToggleActiveTimeZoneRowAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.ITimeZoneAgent.SetActiveTimeZonesByFilterAsync(System.String,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ITimeZoneAgent.SetActiveTimeZonesByFilterAsync(System.String,System.Boolean,System.Threading.CancellationToken)
  id: SetActiveTimeZonesByFilterAsync(System.String,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ITimeZoneAgent
  langs:
  - csharp
  - vb
  name: SetActiveTimeZonesByFilterAsync(string, bool, CancellationToken)
  nameWithType: ITimeZoneAgent.SetActiveTimeZonesByFilterAsync(string, bool, CancellationToken)
  fullName: SuperOffice.CRM.Services.ITimeZoneAgent.SetActiveTimeZonesByFilterAsync(string, bool, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Toggles active state of a single row in the TZLocation table
  example: []
  syntax:
    content: Task SetActiveTimeZonesByFilterAsync(string filter, bool active, CancellationToken cancellationToken = default)
    parameters:
    - id: filter
      type: System.String
      description: Filter timezones
    - id: active
      type: System.Boolean
      description: Set active to true or false
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function SetActiveTimeZonesByFilterAsync(filter As String, active As Boolean, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.ITimeZoneAgent.SetActiveTimeZonesByFilterAsync*
  nameWithType.vb: ITimeZoneAgent.SetActiveTimeZonesByFilterAsync(String, Boolean, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ITimeZoneAgent.SetActiveTimeZonesByFilterAsync(String, Boolean, System.Threading.CancellationToken)
  name.vb: SetActiveTimeZonesByFilterAsync(String, Boolean, CancellationToken)
- uid: SuperOffice.CRM.Services.ITimeZoneAgent.TimeOfLastTimeZoneUpdateAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ITimeZoneAgent.TimeOfLastTimeZoneUpdateAsync(System.Threading.CancellationToken)
  id: TimeOfLastTimeZoneUpdateAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ITimeZoneAgent
  langs:
  - csharp
  - vb
  name: TimeOfLastTimeZoneUpdateAsync(CancellationToken)
  nameWithType: ITimeZoneAgent.TimeOfLastTimeZoneUpdateAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.ITimeZoneAgent.TimeOfLastTimeZoneUpdateAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get the time time zone data was last updated
  example: []
  syntax:
    content: Task<DateTime> TimeOfLastTimeZoneUpdateAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.DateTime}
      description: Time of last update
    content.vb: Function TimeOfLastTimeZoneUpdateAsync(cancellationToken As CancellationToken = Nothing) As Task(Of Date)
  overload: SuperOffice.CRM.Services.ITimeZoneAgent.TimeOfLastTimeZoneUpdateAsync*
- uid: SuperOffice.CRM.Services.ITimeZoneAgent.SetBaseTimeZoneIdAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ITimeZoneAgent.SetBaseTimeZoneIdAsync(System.Int32,System.Threading.CancellationToken)
  id: SetBaseTimeZoneIdAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ITimeZoneAgent
  langs:
  - csharp
  - vb
  name: SetBaseTimeZoneIdAsync(int, CancellationToken)
  nameWithType: ITimeZoneAgent.SetBaseTimeZoneIdAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Services.ITimeZoneAgent.SetBaseTimeZoneIdAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Set the base timezone id.
  example: []
  syntax:
    content: Task<bool> SetBaseTimeZoneIdAsync(int timezoneId, CancellationToken cancellationToken = default)
    parameters:
    - id: timezoneId
      type: System.Int32
      description: The timezone id to save
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: Returns true if setting of base timezone was done
    content.vb: Function SetBaseTimeZoneIdAsync(timezoneId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.Services.ITimeZoneAgent.SetBaseTimeZoneIdAsync*
  nameWithType.vb: ITimeZoneAgent.SetBaseTimeZoneIdAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ITimeZoneAgent.SetBaseTimeZoneIdAsync(Integer, System.Threading.CancellationToken)
  name.vb: SetBaseTimeZoneIdAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Services.ITimeZoneAgent.GetDefaultTimeZonePreferenceAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ITimeZoneAgent.GetDefaultTimeZonePreferenceAsync(System.Threading.CancellationToken)
  id: GetDefaultTimeZonePreferenceAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ITimeZoneAgent
  langs:
  - csharp
  - vb
  name: GetDefaultTimeZonePreferenceAsync(CancellationToken)
  nameWithType: ITimeZoneAgent.GetDefaultTimeZonePreferenceAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.ITimeZoneAgent.GetDefaultTimeZonePreferenceAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Returns the id of the default timezone preference with deflevel system wide
  example: []
  syntax:
    content: Task<int> GetDefaultTimeZonePreferenceAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: The id of the system wide default timezone preference
    content.vb: Function GetDefaultTimeZonePreferenceAsync(cancellationToken As CancellationToken = Nothing) As Task(Of Integer)
  overload: SuperOffice.CRM.Services.ITimeZoneAgent.GetDefaultTimeZonePreferenceAsync*
- uid: SuperOffice.CRM.Services.ITimeZoneAgent.DeleteTimeZonesAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ITimeZoneAgent.DeleteTimeZonesAsync(System.Threading.CancellationToken)
  id: DeleteTimeZonesAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ITimeZoneAgent
  langs:
  - csharp
  - vb
  name: DeleteTimeZonesAsync(CancellationToken)
  nameWithType: ITimeZoneAgent.DeleteTimeZonesAsync(CancellationToken)
  fullName: SuperOffice.CRM.Services.ITimeZoneAgent.DeleteTimeZonesAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Deletes all time zone data (locations and rules) from the database
  example: []
  syntax:
    content: Task DeleteTimeZonesAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function DeleteTimeZonesAsync(cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.ITimeZoneAgent.DeleteTimeZonesAsync*
- uid: SuperOffice.CRM.Services.ITimeZoneAgent.SetActiveTimeZoneRowAsync(System.Int32,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.ITimeZoneAgent.SetActiveTimeZoneRowAsync(System.Int32,System.Boolean,System.Threading.CancellationToken)
  id: SetActiveTimeZoneRowAsync(System.Int32,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.ITimeZoneAgent
  langs:
  - csharp
  - vb
  name: SetActiveTimeZoneRowAsync(int, bool, CancellationToken)
  nameWithType: ITimeZoneAgent.SetActiveTimeZoneRowAsync(int, bool, CancellationToken)
  fullName: SuperOffice.CRM.Services.ITimeZoneAgent.SetActiveTimeZoneRowAsync(int, bool, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Set active state of singe row in the TZLocation table
  example: []
  syntax:
    content: Task SetActiveTimeZoneRowAsync(int id, bool active, CancellationToken cancellationToken = default)
    parameters:
    - id: id
      type: System.Int32
      description: Id of row to set active state on
    - id: active
      type: System.Boolean
      description: Set active to true or false
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function SetActiveTimeZoneRowAsync(id As Integer, active As Boolean, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Services.ITimeZoneAgent.SetActiveTimeZoneRowAsync*
  nameWithType.vb: ITimeZoneAgent.SetActiveTimeZoneRowAsync(Integer, Boolean, CancellationToken)
  fullName.vb: SuperOffice.CRM.Services.ITimeZoneAgent.SetActiveTimeZoneRowAsync(Integer, Boolean, System.Threading.CancellationToken)
  name.vb: SetActiveTimeZoneRowAsync(Integer, Boolean, CancellationToken)
references:
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
- uid: SuperOffice.CRM.Services.ITimeZoneAgent.GetDefaultTimeZoneInformationAsync*
  commentId: Overload:SuperOffice.CRM.Services.ITimeZoneAgent.GetDefaultTimeZoneInformationAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ITimeZoneAgent.html#SuperOffice_CRM_Services_ITimeZoneAgent_GetDefaultTimeZoneInformationAsync_System_Threading_CancellationToken_
  name: GetDefaultTimeZoneInformationAsync
  nameWithType: ITimeZoneAgent.GetDefaultTimeZoneInformationAsync
  fullName: SuperOffice.CRM.Services.ITimeZoneAgent.GetDefaultTimeZoneInformationAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.PreferredTimeZone}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Services.PreferredTimeZone}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<PreferredTimeZone>
  nameWithType: Task<PreferredTimeZone>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.PreferredTimeZone>
  nameWithType.vb: Task(Of PreferredTimeZone)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.PreferredTimeZone)
  name.vb: Task(Of PreferredTimeZone)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Services.PreferredTimeZone
    name: PreferredTimeZone
    isExternal: true
    href: SuperOffice.CRM.Services.PreferredTimeZone.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.PreferredTimeZone
    name: PreferredTimeZone
    isExternal: true
    href: SuperOffice.CRM.Services.PreferredTimeZone.html
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: SuperOffice.CRM.Services.ITimeZoneAgent.InitializeTimeZoneDataAsync*
  commentId: Overload:SuperOffice.CRM.Services.ITimeZoneAgent.InitializeTimeZoneDataAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ITimeZoneAgent.html#SuperOffice_CRM_Services_ITimeZoneAgent_InitializeTimeZoneDataAsync_System_Threading_CancellationToken_
  name: InitializeTimeZoneDataAsync
  nameWithType: ITimeZoneAgent.InitializeTimeZoneDataAsync
  fullName: SuperOffice.CRM.Services.ITimeZoneAgent.InitializeTimeZoneDataAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.TimeZoneData[]}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.TimeZoneData[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TimeZoneData[]>
  nameWithType: Task<TimeZoneData[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.TimeZoneData[]>
  nameWithType.vb: Task(Of TimeZoneData())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.TimeZoneData())
  name.vb: Task(Of TimeZoneData())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.TimeZoneData
    name: TimeZoneData
    isExternal: true
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.TimeZoneData
    name: TimeZoneData
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.CRM.Services.ITimeZoneAgent.GetBaseTimeZoneIdAsync*
  commentId: Overload:SuperOffice.CRM.Services.ITimeZoneAgent.GetBaseTimeZoneIdAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ITimeZoneAgent.html#SuperOffice_CRM_Services_ITimeZoneAgent_GetBaseTimeZoneIdAsync_System_Threading_CancellationToken_
  name: GetBaseTimeZoneIdAsync
  nameWithType: ITimeZoneAgent.GetBaseTimeZoneIdAsync
  fullName: SuperOffice.CRM.Services.ITimeZoneAgent.GetBaseTimeZoneIdAsync
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: T:System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<int>
  nameWithType: Task<int>
  fullName: System.Threading.Tasks.Task<int>
  nameWithType.vb: Task(Of Integer)
  fullName.vb: System.Threading.Tasks.Task(Of Integer)
  name.vb: Task(Of Integer)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SuperOffice.CRM.Services.ITimeZoneAgent.UpdateTimeZoneDataAsync*
  commentId: Overload:SuperOffice.CRM.Services.ITimeZoneAgent.UpdateTimeZoneDataAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ITimeZoneAgent.html#SuperOffice_CRM_Services_ITimeZoneAgent_UpdateTimeZoneDataAsync_System_Threading_CancellationToken_
  name: UpdateTimeZoneDataAsync
  nameWithType: ITimeZoneAgent.UpdateTimeZoneDataAsync
  fullName: SuperOffice.CRM.Services.ITimeZoneAgent.UpdateTimeZoneDataAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: SuperOffice.CRM.Services.ITimeZoneAgent.CheckNewTimeZoneDataAvailableAsync*
  commentId: Overload:SuperOffice.CRM.Services.ITimeZoneAgent.CheckNewTimeZoneDataAvailableAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ITimeZoneAgent.html#SuperOffice_CRM_Services_ITimeZoneAgent_CheckNewTimeZoneDataAvailableAsync_System_Threading_CancellationToken_
  name: CheckNewTimeZoneDataAvailableAsync
  nameWithType: ITimeZoneAgent.CheckNewTimeZoneDataAvailableAsync
  fullName: SuperOffice.CRM.Services.ITimeZoneAgent.CheckNewTimeZoneDataAvailableAsync
- uid: SuperOffice.CRM.Services.ITimeZoneAgent.ToggleActiveTimeZoneRowAsync*
  commentId: Overload:SuperOffice.CRM.Services.ITimeZoneAgent.ToggleActiveTimeZoneRowAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ITimeZoneAgent.html#SuperOffice_CRM_Services_ITimeZoneAgent_ToggleActiveTimeZoneRowAsync_System_Int32_System_Threading_CancellationToken_
  name: ToggleActiveTimeZoneRowAsync
  nameWithType: ITimeZoneAgent.ToggleActiveTimeZoneRowAsync
  fullName: SuperOffice.CRM.Services.ITimeZoneAgent.ToggleActiveTimeZoneRowAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Services.ITimeZoneAgent.SetActiveTimeZonesByFilterAsync*
  commentId: Overload:SuperOffice.CRM.Services.ITimeZoneAgent.SetActiveTimeZonesByFilterAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ITimeZoneAgent.html#SuperOffice_CRM_Services_ITimeZoneAgent_SetActiveTimeZonesByFilterAsync_System_String_System_Boolean_System_Threading_CancellationToken_
  name: SetActiveTimeZonesByFilterAsync
  nameWithType: ITimeZoneAgent.SetActiveTimeZonesByFilterAsync
  fullName: SuperOffice.CRM.Services.ITimeZoneAgent.SetActiveTimeZonesByFilterAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SuperOffice.CRM.Services.ITimeZoneAgent.TimeOfLastTimeZoneUpdateAsync*
  commentId: Overload:SuperOffice.CRM.Services.ITimeZoneAgent.TimeOfLastTimeZoneUpdateAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ITimeZoneAgent.html#SuperOffice_CRM_Services_ITimeZoneAgent_TimeOfLastTimeZoneUpdateAsync_System_Threading_CancellationToken_
  name: TimeOfLastTimeZoneUpdateAsync
  nameWithType: ITimeZoneAgent.TimeOfLastTimeZoneUpdateAsync
  fullName: SuperOffice.CRM.Services.ITimeZoneAgent.TimeOfLastTimeZoneUpdateAsync
- uid: System.Threading.Tasks.Task{System.DateTime}
  commentId: T:System.Threading.Tasks.Task{System.DateTime}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<DateTime>
  nameWithType: Task<DateTime>
  fullName: System.Threading.Tasks.Task<System.DateTime>
  nameWithType.vb: Task(Of Date)
  fullName.vb: System.Threading.Tasks.Task(Of Date)
  name.vb: Task(Of Date)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.DateTime
    name: DateTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.DateTime
    name: Date
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: )
- uid: SuperOffice.CRM.Services.ITimeZoneAgent.SetBaseTimeZoneIdAsync*
  commentId: Overload:SuperOffice.CRM.Services.ITimeZoneAgent.SetBaseTimeZoneIdAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ITimeZoneAgent.html#SuperOffice_CRM_Services_ITimeZoneAgent_SetBaseTimeZoneIdAsync_System_Int32_System_Threading_CancellationToken_
  name: SetBaseTimeZoneIdAsync
  nameWithType: ITimeZoneAgent.SetBaseTimeZoneIdAsync
  fullName: SuperOffice.CRM.Services.ITimeZoneAgent.SetBaseTimeZoneIdAsync
- uid: SuperOffice.CRM.Services.ITimeZoneAgent.GetDefaultTimeZonePreferenceAsync*
  commentId: Overload:SuperOffice.CRM.Services.ITimeZoneAgent.GetDefaultTimeZonePreferenceAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ITimeZoneAgent.html#SuperOffice_CRM_Services_ITimeZoneAgent_GetDefaultTimeZonePreferenceAsync_System_Threading_CancellationToken_
  name: GetDefaultTimeZonePreferenceAsync
  nameWithType: ITimeZoneAgent.GetDefaultTimeZonePreferenceAsync
  fullName: SuperOffice.CRM.Services.ITimeZoneAgent.GetDefaultTimeZonePreferenceAsync
- uid: SuperOffice.CRM.Services.ITimeZoneAgent.DeleteTimeZonesAsync*
  commentId: Overload:SuperOffice.CRM.Services.ITimeZoneAgent.DeleteTimeZonesAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ITimeZoneAgent.html#SuperOffice_CRM_Services_ITimeZoneAgent_DeleteTimeZonesAsync_System_Threading_CancellationToken_
  name: DeleteTimeZonesAsync
  nameWithType: ITimeZoneAgent.DeleteTimeZonesAsync
  fullName: SuperOffice.CRM.Services.ITimeZoneAgent.DeleteTimeZonesAsync
- uid: SuperOffice.CRM.Services.ITimeZoneAgent.SetActiveTimeZoneRowAsync*
  commentId: Overload:SuperOffice.CRM.Services.ITimeZoneAgent.SetActiveTimeZoneRowAsync
  isExternal: true
  href: SuperOffice.CRM.Services.ITimeZoneAgent.html#SuperOffice_CRM_Services_ITimeZoneAgent_SetActiveTimeZoneRowAsync_System_Int32_System_Boolean_System_Threading_CancellationToken_
  name: SetActiveTimeZoneRowAsync
  nameWithType: ITimeZoneAgent.SetActiveTimeZoneRowAsync
  fullName: SuperOffice.CRM.Services.ITimeZoneAgent.SetActiveTimeZoneRowAsync
