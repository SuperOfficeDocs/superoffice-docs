### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Data.DBC.PasswordRulesFields
  commentId: T:SuperOffice.CRM.Data.DBC.PasswordRulesFields
  id: DBC.PasswordRulesFields
  parent: SuperOffice.CRM.Data
  children:
  - SuperOffice.CRM.Data.DBC.PasswordRulesFields.Flags
  - SuperOffice.CRM.Data.DBC.PasswordRulesFields.MinCharacters
  - SuperOffice.CRM.Data.DBC.PasswordRulesFields.MinLowercase
  - SuperOffice.CRM.Data.DBC.PasswordRulesFields.MinNumbers
  - SuperOffice.CRM.Data.DBC.PasswordRulesFields.MinSpecial
  - SuperOffice.CRM.Data.DBC.PasswordRulesFields.MinUppercase
  - SuperOffice.CRM.Data.DBC.PasswordRulesFields.PasswordRulesId
  langs:
  - csharp
  - vb
  name: DBC.PasswordRulesFields
  nameWithType: DBC.PasswordRulesFields
  fullName: SuperOffice.CRM.Data.DBC.PasswordRulesFields
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nFields for PasswordRules, This table may contain one entry specifying rules for passwords.\n"
  syntax:
    content: public static class PasswordRulesFields
    content.vb: Public Module PasswordRulesFields
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: SuperOffice.CRM.Data.DBC.PasswordRulesFields.PasswordRulesId
  commentId: F:SuperOffice.CRM.Data.DBC.PasswordRulesFields.PasswordRulesId
  id: PasswordRulesId
  parent: SuperOffice.CRM.Data.DBC.PasswordRulesFields
  langs:
  - csharp
  - vb
  name: PasswordRulesId
  nameWithType: DBC.PasswordRulesFields.PasswordRulesId
  fullName: SuperOffice.CRM.Data.DBC.PasswordRulesFields.PasswordRulesId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nPasswordRules.PasswordRulesId: The primary key (auto-incremented)\n"
  syntax:
    content: public const string PasswordRulesId = "id"
    return:
      type: System.String
    content.vb: Public Const PasswordRulesId As String = "id"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.Data.DBC.PasswordRulesFields.Flags
  commentId: F:SuperOffice.CRM.Data.DBC.PasswordRulesFields.Flags
  id: Flags
  parent: SuperOffice.CRM.Data.DBC.PasswordRulesFields
  langs:
  - csharp
  - vb
  name: Flags
  nameWithType: DBC.PasswordRulesFields.Flags
  fullName: SuperOffice.CRM.Data.DBC.PasswordRulesFields.Flags
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nPasswordRules.Flags: Bitmask for flags\n"
  syntax:
    content: public const string Flags = "flags"
    return:
      type: System.String
    content.vb: Public Const Flags As String = "flags"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.Data.DBC.PasswordRulesFields.MinCharacters
  commentId: F:SuperOffice.CRM.Data.DBC.PasswordRulesFields.MinCharacters
  id: MinCharacters
  parent: SuperOffice.CRM.Data.DBC.PasswordRulesFields
  langs:
  - csharp
  - vb
  name: MinCharacters
  nameWithType: DBC.PasswordRulesFields.MinCharacters
  fullName: SuperOffice.CRM.Data.DBC.PasswordRulesFields.MinCharacters
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nPasswordRules.MinCharacters: The minimum number of characters in the password in order to be valid.\n"
  syntax:
    content: public const string MinCharacters = "min_characters"
    return:
      type: System.String
    content.vb: Public Const MinCharacters As String = "min_characters"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.Data.DBC.PasswordRulesFields.MinNumbers
  commentId: F:SuperOffice.CRM.Data.DBC.PasswordRulesFields.MinNumbers
  id: MinNumbers
  parent: SuperOffice.CRM.Data.DBC.PasswordRulesFields
  langs:
  - csharp
  - vb
  name: MinNumbers
  nameWithType: DBC.PasswordRulesFields.MinNumbers
  fullName: SuperOffice.CRM.Data.DBC.PasswordRulesFields.MinNumbers
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nPasswordRules.MinNumbers: The minimum number of numbers in the password in order to be valid.\n"
  syntax:
    content: public const string MinNumbers = "min_numbers"
    return:
      type: System.String
    content.vb: Public Const MinNumbers As String = "min_numbers"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.Data.DBC.PasswordRulesFields.MinLowercase
  commentId: F:SuperOffice.CRM.Data.DBC.PasswordRulesFields.MinLowercase
  id: MinLowercase
  parent: SuperOffice.CRM.Data.DBC.PasswordRulesFields
  langs:
  - csharp
  - vb
  name: MinLowercase
  nameWithType: DBC.PasswordRulesFields.MinLowercase
  fullName: SuperOffice.CRM.Data.DBC.PasswordRulesFields.MinLowercase
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nPasswordRules.MinLowercase: The minimum number of lowercase characters in the password in order to be valid.\n"
  syntax:
    content: public const string MinLowercase = "min_lowercase"
    return:
      type: System.String
    content.vb: Public Const MinLowercase As String = "min_lowercase"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.Data.DBC.PasswordRulesFields.MinUppercase
  commentId: F:SuperOffice.CRM.Data.DBC.PasswordRulesFields.MinUppercase
  id: MinUppercase
  parent: SuperOffice.CRM.Data.DBC.PasswordRulesFields
  langs:
  - csharp
  - vb
  name: MinUppercase
  nameWithType: DBC.PasswordRulesFields.MinUppercase
  fullName: SuperOffice.CRM.Data.DBC.PasswordRulesFields.MinUppercase
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nPasswordRules.MinUppercase: The minimum number of uppercase characters in the password in order to be valid.\n"
  syntax:
    content: public const string MinUppercase = "min_uppercase"
    return:
      type: System.String
    content.vb: Public Const MinUppercase As String = "min_uppercase"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.Data.DBC.PasswordRulesFields.MinSpecial
  commentId: F:SuperOffice.CRM.Data.DBC.PasswordRulesFields.MinSpecial
  id: MinSpecial
  parent: SuperOffice.CRM.Data.DBC.PasswordRulesFields
  langs:
  - csharp
  - vb
  name: MinSpecial
  nameWithType: DBC.PasswordRulesFields.MinSpecial
  fullName: SuperOffice.CRM.Data.DBC.PasswordRulesFields.MinSpecial
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nPasswordRules.MinSpecial: The minimum number of special characters in the password in order to be valid.\n"
  syntax:
    content: public const string MinSpecial = "min_special"
    return:
      type: System.String
    content.vb: Public Const MinSpecial As String = "min_special"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: SuperOffice.CRM.Data
  commentId: N:SuperOffice.CRM.Data
  isExternal: true
  name: SuperOffice.CRM.Data
  nameWithType: SuperOffice.CRM.Data
  fullName: SuperOffice.CRM.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
