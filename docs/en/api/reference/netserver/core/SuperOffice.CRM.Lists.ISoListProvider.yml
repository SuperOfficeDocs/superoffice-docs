### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Lists.ISoListProvider
  commentId: T:SuperOffice.CRM.Lists.ISoListProvider
  id: ISoListProvider
  parent: SuperOffice.CRM.Lists
  children:
  - SuperOffice.CRM.Lists.ISoListProvider.Construct(System.String,System.String,System.Int32[],System.Boolean,System.String,System.Boolean)
  - SuperOffice.CRM.Lists.ISoListProvider.HistoryInfo
  langs:
  - csharp
  - vb
  name: ISoListProvider
  nameWithType: ISoListProvider
  fullName: SuperOffice.CRM.Lists.ISoListProvider
  type: Interface
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  summary: "\nInterface defining an MDO list provider, whose supported list (just one) is known\nat compile time. A class implementing this interface should also use the <xref href=\"SuperOffice.CRM.Lists.MDOProviderPluginAttribute\" data-throw-if-not-resolved=\"false\"></xref>\nto mark itself as a plugin, and it should implement the <xref href=\"SuperOffice.Factory.IPlugin\" data-throw-if-not-resolved=\"false\"></xref> interface for\nthe same reason. Note that the <xref href=\"SuperOffice.CRM.Lists.MDOProviderBase\" data-throw-if-not-resolved=\"false\"></xref> class implements all of these\ninterface, so that a derived class only needs the attribute: Interface implementation requirements\ncan be satisifed by base classes, while the attribute must be on the derived class.\n"
  syntax:
    content: 'public interface ISoListProvider : ISoList'
    content.vb: >-
      Public Interface ISoListProvider
          Inherits ISoList
  inheritedMembers:
  - SuperOffice.CRM.Lists.ISoList.HistoryItems
  - SuperOffice.CRM.Lists.ISoList.RootItems
  - SuperOffice.CRM.Lists.ISoList.HeadingItems
  extensionMethods:
  - SuperOffice.CRM.Lists.ISoListProvider.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Lists.ISoListProvider.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.CRM.Lists.ISoListProvider.Construct(System.String,System.String,System.Int32[],System.Boolean,System.String,System.Boolean)
  commentId: M:SuperOffice.CRM.Lists.ISoListProvider.Construct(System.String,System.String,System.Int32[],System.Boolean,System.String,System.Boolean)
  id: Construct(System.String,System.String,System.Int32[],System.Boolean,System.String,System.Boolean)
  parent: SuperOffice.CRM.Lists.ISoListProvider
  langs:
  - csharp
  - vb
  name: Construct(String, String, Int32[], Boolean, String, Boolean)
  nameWithType: ISoListProvider.Construct(String, String, Int32[], Boolean, String, Boolean)
  fullName: SuperOffice.CRM.Lists.ISoListProvider.Construct(System.String, System.String, System.Int32[], System.Boolean, System.String, System.Boolean)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  summary: "\nPhase two of two-stage list construction. To be called right after the constructor, at which point\nall constructors have run, and the class hierarchy is initialized.\n"
  syntax:
    content: void Construct(string listName, string additionalInfo, int[] historyIDs, bool onlyReadHistory, string searchValue, bool forceFlatList)
    parameters:
    - id: listName
      type: System.String
      description: >-
        List name (though note that as implemented by <xref href="SuperOffice.CRM.Lists.MDOProviderBase" data-throw-if-not-resolved="false"></xref>,

        this actually has to be a real table name, so subclasses should override and convert from

        their list name to a real table name) (yes it&apos;s a bit messy)
    - id: additionalInfo
      type: System.String
      description: Additional information to provider
    - id: historyIDs
      type: System.Int32[]
      description: >-
        Array of history ID&apos;s; if non-null, this will BE the history; a non-null but

        empty array will disable reading of history altogether; a null parameter will cause history to be

        read from the database.
    - id: onlyReadHistory
      type: System.Boolean
      description: if true, only history will be read.
    - id: searchValue
      type: System.String
      description: If non-null, the returned list will be flat and only consist of search matches
    - id: forceFlatList
      type: System.Boolean
      description: >-
        If true, the returned list will be flat, though it will still be filtered

        if grouping/filtering has been set up for the list
    content.vb: Sub Construct(listName As String, additionalInfo As String, historyIDs As Integer(), onlyReadHistory As Boolean, searchValue As String, forceFlatList As Boolean)
  overload: SuperOffice.CRM.Lists.ISoListProvider.Construct*
  nameWithType.vb: ISoListProvider.Construct(String, String, Int32(), Boolean, String, Boolean)
  fullName.vb: SuperOffice.CRM.Lists.ISoListProvider.Construct(System.String, System.String, System.Int32(), System.Boolean, System.String, System.Boolean)
  name.vb: Construct(String, String, Int32(), Boolean, String, Boolean)
- uid: SuperOffice.CRM.Lists.ISoListProvider.HistoryInfo
  commentId: P:SuperOffice.CRM.Lists.ISoListProvider.HistoryInfo
  id: HistoryInfo
  parent: SuperOffice.CRM.Lists.ISoListProvider
  langs:
  - csharp
  - vb
  name: HistoryInfo
  nameWithType: ISoListProvider.HistoryInfo
  fullName: SuperOffice.CRM.Lists.ISoListProvider.HistoryInfo
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  summary: "\nHistory information for the supported list\n"
  syntax:
    content: HistoryInfo HistoryInfo { get; }
    parameters: []
    return:
      type: SuperOffice.CRM.Lists.HistoryInfo
    content.vb: ReadOnly Property HistoryInfo As HistoryInfo
  overload: SuperOffice.CRM.Lists.ISoListProvider.HistoryInfo*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: SuperOffice.CRM.Lists
  commentId: N:SuperOffice.CRM.Lists
  isExternal: true
  name: SuperOffice.CRM.Lists
  nameWithType: SuperOffice.CRM.Lists
  fullName: SuperOffice.CRM.Lists
- uid: SuperOffice.CRM.Lists.ISoList.HistoryItems
  commentId: P:SuperOffice.CRM.Lists.ISoList.HistoryItems
  parent: SuperOffice.CRM.Lists.ISoList
  isExternal: true
  name: HistoryItems
  nameWithType: ISoList.HistoryItems
  fullName: SuperOffice.CRM.Lists.ISoList.HistoryItems
- uid: SuperOffice.CRM.Lists.ISoList.RootItems
  commentId: P:SuperOffice.CRM.Lists.ISoList.RootItems
  parent: SuperOffice.CRM.Lists.ISoList
  isExternal: true
  name: RootItems
  nameWithType: ISoList.RootItems
  fullName: SuperOffice.CRM.Lists.ISoList.RootItems
- uid: SuperOffice.CRM.Lists.ISoList.HeadingItems
  commentId: P:SuperOffice.CRM.Lists.ISoList.HeadingItems
  parent: SuperOffice.CRM.Lists.ISoList
  isExternal: true
  name: HeadingItems
  nameWithType: ISoList.HeadingItems
  fullName: SuperOffice.CRM.Lists.ISoList.HeadingItems
- uid: SuperOffice.CRM.Lists.ISoListProvider.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<ISoListProvider, To>()
  nameWithType: EnumUtil.MapEnums<ISoListProvider, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Lists.ISoListProvider, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of ISoListProvider, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Lists.ISoListProvider, To)()
  name.vb: MapEnums(Of ISoListProvider, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<ISoListProvider, To>
    nameWithType: EnumUtil.MapEnums<ISoListProvider, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Lists.ISoListProvider, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of ISoListProvider, To)
    nameWithType: EnumUtil.MapEnums(Of ISoListProvider, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Lists.ISoListProvider, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ISoListProvider.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<ISoListProvider, To>()
  nameWithType: Converters.MapEnums<ISoListProvider, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Lists.ISoListProvider, To>()
  nameWithType.vb: Converters.MapEnums(Of ISoListProvider, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Lists.ISoListProvider, To)()
  name.vb: MapEnums(Of ISoListProvider, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<ISoListProvider, To>
    nameWithType: Converters.MapEnums<ISoListProvider, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Lists.ISoListProvider, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of ISoListProvider, To)
    nameWithType: Converters.MapEnums(Of ISoListProvider, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Lists.ISoListProvider, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ISoList
  commentId: T:SuperOffice.CRM.Lists.ISoList
  parent: SuperOffice.CRM.Lists
  isExternal: true
  name: ISoList
  nameWithType: ISoList
  fullName: SuperOffice.CRM.Lists.ISoList
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Lists.ISoListProvider.Construct*
  commentId: Overload:SuperOffice.CRM.Lists.ISoListProvider.Construct
  isExternal: true
  name: Construct
  nameWithType: ISoListProvider.Construct
  fullName: SuperOffice.CRM.Lists.ISoListProvider.Construct
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Lists.ISoListProvider.HistoryInfo*
  commentId: Overload:SuperOffice.CRM.Lists.ISoListProvider.HistoryInfo
  isExternal: true
  name: HistoryInfo
  nameWithType: ISoListProvider.HistoryInfo
  fullName: SuperOffice.CRM.Lists.ISoListProvider.HistoryInfo
- uid: SuperOffice.CRM.Lists.HistoryInfo
  commentId: T:SuperOffice.CRM.Lists.HistoryInfo
  parent: SuperOffice.CRM.Lists
  isExternal: true
  name: HistoryInfo
  nameWithType: HistoryInfo
  fullName: SuperOffice.CRM.Lists.HistoryInfo
