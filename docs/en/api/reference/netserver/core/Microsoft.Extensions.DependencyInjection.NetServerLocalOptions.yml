### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.DependencyInjection.NetServerLocalOptions
  commentId: T:Microsoft.Extensions.DependencyInjection.NetServerLocalOptions
  id: NetServerLocalOptions
  parent: Microsoft.Extensions.DependencyInjection
  children:
  - Microsoft.Extensions.DependencyInjection.NetServerLocalOptions.#ctor
  - Microsoft.Extensions.DependencyInjection.NetServerLocalOptions.CustomerServiceUrlResolverType
  - Microsoft.Extensions.DependencyInjection.NetServerLocalOptions.ExcludeSoArc2DocumentPlugin
  - Microsoft.Extensions.DependencyInjection.NetServerLocalOptions.FlushCacheAndBroadcastPluginType
  - Microsoft.Extensions.DependencyInjection.NetServerLocalOptions.TempFileProviderType
  langs:
  - csharp
  - vb
  name: NetServerLocalOptions
  nameWithType: NetServerLocalOptions
  fullName: Microsoft.Extensions.DependencyInjection.NetServerLocalOptions
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: Microsoft.Extensions.DependencyInjection
  summary: "\nOptions for configuring SuperOffice Local (SoDataBase)\n"
  syntax:
    content: 'public class NetServerLocalOptions : Object'
    content.vb: >-
      Public Class NetServerLocalOptions
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - Microsoft.Extensions.DependencyInjection.NetServerLocalOptions.EnumUtil.MapEnums``2
  - Microsoft.Extensions.DependencyInjection.NetServerLocalOptions.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(Microsoft.Extensions.DependencyInjection.NetServerLocalOptions)
  - Microsoft.Extensions.DependencyInjection.NetServerLocalOptions.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - Microsoft.Extensions.DependencyInjection.NetServerLocalOptions.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.DependencyInjection.NetServerLocalOptions.#ctor
  commentId: M:Microsoft.Extensions.DependencyInjection.NetServerLocalOptions.#ctor
  id: '#ctor'
  parent: Microsoft.Extensions.DependencyInjection.NetServerLocalOptions
  langs:
  - csharp
  - vb
  name: NetServerLocalOptions()
  nameWithType: NetServerLocalOptions.NetServerLocalOptions()
  fullName: Microsoft.Extensions.DependencyInjection.NetServerLocalOptions.NetServerLocalOptions()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: public NetServerLocalOptions()
    content.vb: Public Sub New
  overload: Microsoft.Extensions.DependencyInjection.NetServerLocalOptions.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.DependencyInjection.NetServerLocalOptions.CustomerServiceUrlResolverType
  commentId: P:Microsoft.Extensions.DependencyInjection.NetServerLocalOptions.CustomerServiceUrlResolverType
  id: CustomerServiceUrlResolverType
  parent: Microsoft.Extensions.DependencyInjection.NetServerLocalOptions
  langs:
  - csharp
  - vb
  name: CustomerServiceUrlResolverType
  nameWithType: NetServerLocalOptions.CustomerServiceUrlResolverType
  fullName: Microsoft.Extensions.DependencyInjection.NetServerLocalOptions.CustomerServiceUrlResolverType
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: Microsoft.Extensions.DependencyInjection
  summary: "\nType of <xref href=\"SuperOffice.CRM.ICustomerServiceUrlResolver\" data-throw-if-not-resolved=\"false\"></xref> used to resolve Customer Service urls.\nDefault type is <xref href=\"SuperOffice.CRM.CustomerServiceUrlResolver\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: public Type CustomerServiceUrlResolverType { get; set; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public Property CustomerServiceUrlResolverType As Type
  overload: Microsoft.Extensions.DependencyInjection.NetServerLocalOptions.CustomerServiceUrlResolverType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.DependencyInjection.NetServerLocalOptions.TempFileProviderType
  commentId: P:Microsoft.Extensions.DependencyInjection.NetServerLocalOptions.TempFileProviderType
  id: TempFileProviderType
  parent: Microsoft.Extensions.DependencyInjection.NetServerLocalOptions
  langs:
  - csharp
  - vb
  name: TempFileProviderType
  nameWithType: NetServerLocalOptions.TempFileProviderType
  fullName: Microsoft.Extensions.DependencyInjection.NetServerLocalOptions.TempFileProviderType
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: public Type TempFileProviderType { get; set; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public Property TempFileProviderType As Type
  overload: Microsoft.Extensions.DependencyInjection.NetServerLocalOptions.TempFileProviderType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.DependencyInjection.NetServerLocalOptions.FlushCacheAndBroadcastPluginType
  commentId: P:Microsoft.Extensions.DependencyInjection.NetServerLocalOptions.FlushCacheAndBroadcastPluginType
  id: FlushCacheAndBroadcastPluginType
  parent: Microsoft.Extensions.DependencyInjection.NetServerLocalOptions
  langs:
  - csharp
  - vb
  name: FlushCacheAndBroadcastPluginType
  nameWithType: NetServerLocalOptions.FlushCacheAndBroadcastPluginType
  fullName: Microsoft.Extensions.DependencyInjection.NetServerLocalOptions.FlushCacheAndBroadcastPluginType
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: public Type FlushCacheAndBroadcastPluginType { get; set; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public Property FlushCacheAndBroadcastPluginType As Type
  overload: Microsoft.Extensions.DependencyInjection.NetServerLocalOptions.FlushCacheAndBroadcastPluginType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.DependencyInjection.NetServerLocalOptions.ExcludeSoArc2DocumentPlugin
  commentId: P:Microsoft.Extensions.DependencyInjection.NetServerLocalOptions.ExcludeSoArc2DocumentPlugin
  id: ExcludeSoArc2DocumentPlugin
  parent: Microsoft.Extensions.DependencyInjection.NetServerLocalOptions
  langs:
  - csharp
  - vb
  name: ExcludeSoArc2DocumentPlugin
  nameWithType: NetServerLocalOptions.ExcludeSoArc2DocumentPlugin
  fullName: Microsoft.Extensions.DependencyInjection.NetServerLocalOptions.ExcludeSoArc2DocumentPlugin
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: public bool ExcludeSoArc2DocumentPlugin { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ExcludeSoArc2DocumentPlugin As Boolean
  overload: Microsoft.Extensions.DependencyInjection.NetServerLocalOptions.ExcludeSoArc2DocumentPlugin*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Extensions.DependencyInjection.NetServerLocalOptions.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<NetServerLocalOptions, To>()
  nameWithType: EnumUtil.MapEnums<NetServerLocalOptions, To>()
  fullName: EnumUtil.MapEnums<Microsoft.Extensions.DependencyInjection.NetServerLocalOptions, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of NetServerLocalOptions, To)()
  fullName.vb: EnumUtil.MapEnums(Of Microsoft.Extensions.DependencyInjection.NetServerLocalOptions, To)()
  name.vb: MapEnums(Of NetServerLocalOptions, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<NetServerLocalOptions, To>
    nameWithType: EnumUtil.MapEnums<NetServerLocalOptions, To>
    fullName: EnumUtil.MapEnums<Microsoft.Extensions.DependencyInjection.NetServerLocalOptions, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of NetServerLocalOptions, To)
    nameWithType: EnumUtil.MapEnums(Of NetServerLocalOptions, To)
    fullName: EnumUtil.MapEnums(Of Microsoft.Extensions.DependencyInjection.NetServerLocalOptions, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.DependencyInjection.NetServerLocalOptions.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(Microsoft.Extensions.DependencyInjection.NetServerLocalOptions)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<NetServerLocalOptions>(NetServerLocalOptions)
  nameWithType: ObjectExtensions.AssignByReflection<NetServerLocalOptions>(NetServerLocalOptions)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<Microsoft.Extensions.DependencyInjection.NetServerLocalOptions>(Microsoft.Extensions.DependencyInjection.NetServerLocalOptions)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of NetServerLocalOptions)(NetServerLocalOptions)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of Microsoft.Extensions.DependencyInjection.NetServerLocalOptions)(Microsoft.Extensions.DependencyInjection.NetServerLocalOptions)
  name.vb: AssignByReflection(Of NetServerLocalOptions)(NetServerLocalOptions)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<NetServerLocalOptions>
    nameWithType: ObjectExtensions.AssignByReflection<NetServerLocalOptions>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<Microsoft.Extensions.DependencyInjection.NetServerLocalOptions>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.NetServerLocalOptions
    name: NetServerLocalOptions
    nameWithType: NetServerLocalOptions
    fullName: Microsoft.Extensions.DependencyInjection.NetServerLocalOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of NetServerLocalOptions)
    nameWithType: ObjectExtensions.AssignByReflection(Of NetServerLocalOptions)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of Microsoft.Extensions.DependencyInjection.NetServerLocalOptions)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.NetServerLocalOptions
    name: NetServerLocalOptions
    nameWithType: NetServerLocalOptions
    fullName: Microsoft.Extensions.DependencyInjection.NetServerLocalOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.DependencyInjection.NetServerLocalOptions.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<NetServerLocalOptions>()
  nameWithType: ObjectExtensions.GraphCopy<NetServerLocalOptions>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<Microsoft.Extensions.DependencyInjection.NetServerLocalOptions>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of NetServerLocalOptions)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of Microsoft.Extensions.DependencyInjection.NetServerLocalOptions)()
  name.vb: GraphCopy(Of NetServerLocalOptions)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<NetServerLocalOptions>
    nameWithType: ObjectExtensions.GraphCopy<NetServerLocalOptions>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<Microsoft.Extensions.DependencyInjection.NetServerLocalOptions>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of NetServerLocalOptions)
    nameWithType: ObjectExtensions.GraphCopy(Of NetServerLocalOptions)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of Microsoft.Extensions.DependencyInjection.NetServerLocalOptions)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.DependencyInjection.NetServerLocalOptions.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<NetServerLocalOptions, To>()
  nameWithType: Converters.MapEnums<NetServerLocalOptions, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<Microsoft.Extensions.DependencyInjection.NetServerLocalOptions, To>()
  nameWithType.vb: Converters.MapEnums(Of NetServerLocalOptions, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of Microsoft.Extensions.DependencyInjection.NetServerLocalOptions, To)()
  name.vb: MapEnums(Of NetServerLocalOptions, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<NetServerLocalOptions, To>
    nameWithType: Converters.MapEnums<NetServerLocalOptions, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<Microsoft.Extensions.DependencyInjection.NetServerLocalOptions, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of NetServerLocalOptions, To)
    nameWithType: Converters.MapEnums(Of NetServerLocalOptions, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of Microsoft.Extensions.DependencyInjection.NetServerLocalOptions, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: Microsoft.Extensions.DependencyInjection.NetServerLocalOptions.#ctor*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.NetServerLocalOptions.#ctor
  isExternal: true
  name: NetServerLocalOptions
  nameWithType: NetServerLocalOptions.NetServerLocalOptions
  fullName: Microsoft.Extensions.DependencyInjection.NetServerLocalOptions.NetServerLocalOptions
- uid: Microsoft.Extensions.DependencyInjection.NetServerLocalOptions.CustomerServiceUrlResolverType*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.NetServerLocalOptions.CustomerServiceUrlResolverType
  isExternal: true
  name: CustomerServiceUrlResolverType
  nameWithType: NetServerLocalOptions.CustomerServiceUrlResolverType
  fullName: Microsoft.Extensions.DependencyInjection.NetServerLocalOptions.CustomerServiceUrlResolverType
- uid: System.Type
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.Extensions.DependencyInjection.NetServerLocalOptions.TempFileProviderType*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.NetServerLocalOptions.TempFileProviderType
  isExternal: true
  name: TempFileProviderType
  nameWithType: NetServerLocalOptions.TempFileProviderType
  fullName: Microsoft.Extensions.DependencyInjection.NetServerLocalOptions.TempFileProviderType
- uid: Microsoft.Extensions.DependencyInjection.NetServerLocalOptions.FlushCacheAndBroadcastPluginType*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.NetServerLocalOptions.FlushCacheAndBroadcastPluginType
  isExternal: true
  name: FlushCacheAndBroadcastPluginType
  nameWithType: NetServerLocalOptions.FlushCacheAndBroadcastPluginType
  fullName: Microsoft.Extensions.DependencyInjection.NetServerLocalOptions.FlushCacheAndBroadcastPluginType
- uid: Microsoft.Extensions.DependencyInjection.NetServerLocalOptions.ExcludeSoArc2DocumentPlugin*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.NetServerLocalOptions.ExcludeSoArc2DocumentPlugin
  isExternal: true
  name: ExcludeSoArc2DocumentPlugin
  nameWithType: NetServerLocalOptions.ExcludeSoArc2DocumentPlugin
  fullName: Microsoft.Extensions.DependencyInjection.NetServerLocalOptions.ExcludeSoArc2DocumentPlugin
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
