### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Data.AppointmentTableInfo
  commentId: T:SuperOffice.CRM.Data.AppointmentTableInfo
  id: AppointmentTableInfo
  parent: SuperOffice.CRM.Data
  children:
  - SuperOffice.CRM.Data.AppointmentTableInfo.ActiveDate
  - SuperOffice.CRM.Data.AppointmentTableInfo.ActiveLinks
  - SuperOffice.CRM.Data.AppointmentTableInfo.Alarm
  - SuperOffice.CRM.Data.AppointmentTableInfo.AlldayEvent
  - SuperOffice.CRM.Data.AppointmentTableInfo.AppointmentId
  - SuperOffice.CRM.Data.AppointmentTableInfo.AssignedBy
  - SuperOffice.CRM.Data.AppointmentTableInfo.AssignedBy_InnerJoin_Associate
  - SuperOffice.CRM.Data.AppointmentTableInfo.AssociateId
  - SuperOffice.CRM.Data.AppointmentTableInfo.AssociateId_InnerJoin_Associate
  - SuperOffice.CRM.Data.AppointmentTableInfo.CautionWarning
  - SuperOffice.CRM.Data.AppointmentTableInfo.CentralserviceVideomeetId
  - SuperOffice.CRM.Data.AppointmentTableInfo.ColorIndex
  - SuperOffice.CRM.Data.AppointmentTableInfo.ContactId
  - SuperOffice.CRM.Data.AppointmentTableInfo.ContactId_InnerJoin_Contact
  - SuperOffice.CRM.Data.AppointmentTableInfo.Definition
  - SuperOffice.CRM.Data.AppointmentTableInfo.DictionaryTableName
  - SuperOffice.CRM.Data.AppointmentTableInfo.DictionaryTableNumber
  - SuperOffice.CRM.Data.AppointmentTableInfo.DoBy
  - SuperOffice.CRM.Data.AppointmentTableInfo.DocumentId
  - SuperOffice.CRM.Data.AppointmentTableInfo.DocumentId_InnerJoin_Document
  - SuperOffice.CRM.Data.AppointmentTableInfo.Done
  - SuperOffice.CRM.Data.AppointmentTableInfo.EmailId
  - SuperOffice.CRM.Data.AppointmentTableInfo.EmailId_InnerJoin_Email
  - SuperOffice.CRM.Data.AppointmentTableInfo.EndDate
  - SuperOffice.CRM.Data.AppointmentTableInfo.FreeBusy
  - SuperOffice.CRM.Data.AppointmentTableInfo.GroupIdx
  - SuperOffice.CRM.Data.AppointmentTableInfo.GroupIdx_InnerJoin_UserGroup
  - SuperOffice.CRM.Data.AppointmentTableInfo.HasAlarm
  - SuperOffice.CRM.Data.AppointmentTableInfo.IdxAssociateId(System.Int32)
  - SuperOffice.CRM.Data.AppointmentTableInfo.IdxAssociateIdActiveDate(System.Int32,System.DateTime)
  - SuperOffice.CRM.Data.AppointmentTableInfo.IdxAssociateIdActiveDateMotherId(System.Int32,System.DateTime,System.Int32)
  - SuperOffice.CRM.Data.AppointmentTableInfo.IdxAssociateIdType(System.Int32,SuperOffice.Data.AppointmentType)
  - SuperOffice.CRM.Data.AppointmentTableInfo.IdxAssociateIdTypeEndDate(System.Int32,SuperOffice.Data.AppointmentType,System.DateTime)
  - SuperOffice.CRM.Data.AppointmentTableInfo.IdxAssociateIdTypeStatus(System.Int32,SuperOffice.Data.AppointmentType,SuperOffice.Data.AppointmentStatus)
  - SuperOffice.CRM.Data.AppointmentTableInfo.IdxContactId(System.Int32)
  - SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherId(System.Int32)
  - SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatus(System.Int32,SuperOffice.Data.AppointmentStatus)
  - SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDate(System.Int32,SuperOffice.Data.AppointmentStatus,System.DateTime)
  - SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateId(System.Int32,SuperOffice.Data.AppointmentStatus,System.DateTime,System.Int32)
  - SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateIdRegistered(System.Int32,SuperOffice.Data.AppointmentStatus,System.DateTime,System.Int32,System.DateTime)
  - SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedBy(System.Int32,SuperOffice.Data.AppointmentStatus,System.DateTime,System.Int32,System.DateTime,System.Int32)
  - SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedByGroupIdx(System.Int32,SuperOffice.Data.AppointmentStatus,System.DateTime,System.Int32,System.DateTime,System.Int32,System.Int32)
  - SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedByGroupIdxType(System.Int32,SuperOffice.Data.AppointmentStatus,System.DateTime,System.Int32,System.DateTime,System.Int32,System.Int32,SuperOffice.Data.AppointmentType)
  - SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedByGroupIdxTypeAssociateId(System.Int32,SuperOffice.Data.AppointmentStatus,System.DateTime,System.Int32,System.DateTime,System.Int32,System.Int32,SuperOffice.Data.AppointmentType,System.Int32)
  - SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectId(System.Int32)
  - SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdType(System.Int32,SuperOffice.Data.AppointmentType)
  - SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDate(System.Int32,SuperOffice.Data.AppointmentType,System.DateTime)
  - SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentId(System.Int32,SuperOffice.Data.AppointmentType,System.DateTime,System.Int32)
  - SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateId(System.Int32,SuperOffice.Data.AppointmentType,System.DateTime,System.Int32,System.Int32)
  - SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdx(System.Int32,SuperOffice.Data.AppointmentType,System.DateTime,System.Int32,System.Int32,System.Int32)
  - SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherId(System.Int32,SuperOffice.Data.AppointmentType,System.DateTime,System.Int32,System.Int32,System.Int32,System.Int32)
  - SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherIdAssignedBy(System.Int32,SuperOffice.Data.AppointmentType,System.DateTime,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherIdAssignedByAppointmentId(System.Int32,SuperOffice.Data.AppointmentType,System.DateTime,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherIdAssignedByAppointmentIdRegistered(System.Int32,SuperOffice.Data.AppointmentType,System.DateTime,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTime)
  - SuperOffice.CRM.Data.AppointmentTableInfo.IdxRecurrenceRuleId(System.Int32)
  - SuperOffice.CRM.Data.AppointmentTableInfo.IdxRecurrenceRuleIdActiveDate(System.Int32,System.DateTime)
  - SuperOffice.CRM.Data.AppointmentTableInfo.InvitedPersonId
  - SuperOffice.CRM.Data.AppointmentTableInfo.InvitedPersonId_InnerJoin_Person
  - SuperOffice.CRM.Data.AppointmentTableInfo.IsMilestone
  - SuperOffice.CRM.Data.AppointmentTableInfo.JoinVideomeetUrl
  - SuperOffice.CRM.Data.AppointmentTableInfo.LagTime
  - SuperOffice.CRM.Data.AppointmentTableInfo.Leadtime
  - SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_Document_AppointmentId
  - SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_Email_AppointmentId
  - SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_EmailItem_AppointmentId
  - SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_Invitation_AppointmentId
  - SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_Project_NmdAppointmentId
  - SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_QuoteVersion_FollowupId
  - SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_Sale_AppointmentId
  - SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_Sale_NddAppointmentId
  - SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_SaleHist_AppointmentId
  - SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_SaleHist_NddAppointmentId
  - SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_VisibleFor_AppointmentId
  - SuperOffice.CRM.Data.AppointmentTableInfo.Location
  - SuperOffice.CRM.Data.AppointmentTableInfo.MotherAssociateId
  - SuperOffice.CRM.Data.AppointmentTableInfo.MotherAssociateId_InnerJoin_Associate
  - SuperOffice.CRM.Data.AppointmentTableInfo.MotherId
  - SuperOffice.CRM.Data.AppointmentTableInfo.MotherId_InnerJoin_Appointment
  - SuperOffice.CRM.Data.AppointmentTableInfo.OriginalStartDate
  - SuperOffice.CRM.Data.AppointmentTableInfo.PersonId
  - SuperOffice.CRM.Data.AppointmentTableInfo.PersonId_InnerJoin_Person
  - SuperOffice.CRM.Data.AppointmentTableInfo.PreferredTZLocation
  - SuperOffice.CRM.Data.AppointmentTableInfo.PreferredTZLocation_InnerJoin_TZLocation
  - SuperOffice.CRM.Data.AppointmentTableInfo.PriorityIdx
  - SuperOffice.CRM.Data.AppointmentTableInfo.PriorityIdx_InnerJoin_Priority
  - SuperOffice.CRM.Data.AppointmentTableInfo.Private
  - SuperOffice.CRM.Data.AppointmentTableInfo.ProjectId
  - SuperOffice.CRM.Data.AppointmentTableInfo.ProjectId_InnerJoin_Project
  - SuperOffice.CRM.Data.AppointmentTableInfo.RecurrenceRuleId
  - SuperOffice.CRM.Data.AppointmentTableInfo.RecurrenceRuleId_InnerJoin_RecurrenceRule
  - SuperOffice.CRM.Data.AppointmentTableInfo.Registered
  - SuperOffice.CRM.Data.AppointmentTableInfo.RegisteredAssociateId
  - SuperOffice.CRM.Data.AppointmentTableInfo.RegisteredAssociateId_InnerJoin_Associate
  - SuperOffice.CRM.Data.AppointmentTableInfo.RejectCounter
  - SuperOffice.CRM.Data.AppointmentTableInfo.RejectReason
  - SuperOffice.CRM.Data.AppointmentTableInfo.RuntimeDefinition
  - SuperOffice.CRM.Data.AppointmentTableInfo.SaleId
  - SuperOffice.CRM.Data.AppointmentTableInfo.SaleId_InnerJoin_Sale
  - SuperOffice.CRM.Data.AppointmentTableInfo.Source
  - SuperOffice.CRM.Data.AppointmentTableInfo.Status
  - SuperOffice.CRM.Data.AppointmentTableInfo.SuggestedAppointmentId
  - SuperOffice.CRM.Data.AppointmentTableInfo.SuggestedAppointmentId_InnerJoin_SuggestedAppointment
  - SuperOffice.CRM.Data.AppointmentTableInfo.SuggestedDocumentId
  - SuperOffice.CRM.Data.AppointmentTableInfo.SuggestedDocumentId_InnerJoin_SuggestedDocument
  - SuperOffice.CRM.Data.AppointmentTableInfo.TaskIdx
  - SuperOffice.CRM.Data.AppointmentTableInfo.TaskIdx_InnerJoin_Task
  - SuperOffice.CRM.Data.AppointmentTableInfo.TextId
  - SuperOffice.CRM.Data.AppointmentTableInfo.TextId_InnerJoin_Text
  - SuperOffice.CRM.Data.AppointmentTableInfo.Type
  - SuperOffice.CRM.Data.AppointmentTableInfo.Updated
  - SuperOffice.CRM.Data.AppointmentTableInfo.UpdatedAssociateId
  - SuperOffice.CRM.Data.AppointmentTableInfo.UpdatedAssociateId_InnerJoin_Associate
  - SuperOffice.CRM.Data.AppointmentTableInfo.UpdatedCount
  - SuperOffice.CRM.Data.AppointmentTableInfo.Userdef2Id
  - SuperOffice.CRM.Data.AppointmentTableInfo.Userdef2Id_InnerJoin_UDAppntLarge
  - SuperOffice.CRM.Data.AppointmentTableInfo.UserdefId
  - SuperOffice.CRM.Data.AppointmentTableInfo.UserdefId_InnerJoin_UDAppntSmall
  langs:
  - csharp
  - vb
  name: AppointmentTableInfo
  nameWithType: AppointmentTableInfo
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nTable &apos;appointment&apos;: Tasks, appointments, followups, phone calls; and documents (document_id != 0). An appointment always has a corresponding record in VisibleFor specifying who may see this. \n"
  remarks: "\nAn instance of this class represents one instance of this table in an SQL statement. In most\ncases each table appears only once in a SELECT, but in cases where you need to self-join, or\nthere are multiple occurrences for other reasons (typically additional restrictions in the joins),\nthen you will need multiple instances. <br />\nInstances of this class are created by calling <see cref=\"!:TablesInfo.GetAppointmentInfo()\"></see>.\n"
  syntax:
    content: >-
      [DatabaseTable("appointment")]

      public class AppointmentTableInfo : TableInfo, ICloneable
    content.vb: >-
      <DatabaseTable("appointment")>

      Public Class AppointmentTableInfo
          Inherits TableInfo
          Implements ICloneable
  inheritance:
  - System.Object
  - SuperOffice.Data.SQL.TableInfo
  implements:
  - System.ICloneable
  inheritedMembers:
  - SuperOffice.Data.SQL.TableInfo.ToString
  - SuperOffice.Data.SQL.TableInfo.RegisterFields(SuperOffice.Data.SQL.FieldInfo[])
  - SuperOffice.Data.SQL.TableInfo.FieldInfoFromSoField(SuperOffice.Data.Dictionary.SoField)
  - SuperOffice.Data.SQL.TableInfo.Clone
  - SuperOffice.Data.SQL.TableInfo.IsSameTable(SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.Data.SQL.TableInfo.FindField(System.String)
  - SuperOffice.Data.SQL.TableInfo.ProtAll
  - SuperOffice.Data.SQL.TableInfo.HashCheckFields
  - SuperOffice.Data.SQL.TableInfo.TableName
  - SuperOffice.Data.SQL.TableInfo.DbName
  - SuperOffice.Data.SQL.TableInfo.IsDictionaryTable
  - SuperOffice.Data.SQL.TableInfo.All
  - SuperOffice.Data.SQL.TableInfo.Item(System.String)
  - SuperOffice.Data.SQL.TableInfo.PrimaryKeyField
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.Data.AppointmentTableInfo.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Data.AppointmentTableInfo.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  attributes:
  - type: SuperOffice.Data.SQL.DatabaseTableAttribute
    ctor: SuperOffice.Data.SQL.DatabaseTableAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: appointment
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.DictionaryTableName
  commentId: F:SuperOffice.CRM.Data.AppointmentTableInfo.DictionaryTableName
  id: DictionaryTableName
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: DictionaryTableName
  nameWithType: AppointmentTableInfo.DictionaryTableName
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.DictionaryTableName
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nConceptual name of table Appointment in the database dictionary: appointment\n"
  syntax:
    content: public const string DictionaryTableName = "appointment"
    return:
      type: System.String
    content.vb: Public Const DictionaryTableName As String = "appointment"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectId(System.Int32)
  commentId: M:SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectId(System.Int32)
  id: IdxProjectId(System.Int32)
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: IdxProjectId(Int32)
  nameWithType: AppointmentTableInfo.IdxProjectId(Int32)
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectId(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nShortcut method for looking up using the database index ProjectId, which spans the following fields:\n<table><thead><tr><th>Field</th><th>Description</th></tr></thead><tbody><tr><td>ProjectId</td><td>ID of project referred to, may be 0</td></tr></tbody></table>\n"
  syntax:
    content: public Restriction IdxProjectId(int projectId)
    parameters:
    - id: projectId
      type: System.Int32
    return:
      type: SuperOffice.Data.SQL.Restriction
    content.vb: Public Function IdxProjectId(projectId As Integer) As Restriction
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxContactId(System.Int32)
  commentId: M:SuperOffice.CRM.Data.AppointmentTableInfo.IdxContactId(System.Int32)
  id: IdxContactId(System.Int32)
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: IdxContactId(Int32)
  nameWithType: AppointmentTableInfo.IdxContactId(Int32)
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxContactId(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nShortcut method for looking up using the database index ContactId, which spans the following fields:\n<table><thead><tr><th>Field</th><th>Description</th></tr></thead><tbody><tr><td>ContactId</td><td>Contact ID of owning contact, may be 0</td></tr></tbody></table>\n"
  syntax:
    content: public Restriction IdxContactId(int contactId)
    parameters:
    - id: contactId
      type: System.Int32
    return:
      type: SuperOffice.Data.SQL.Restriction
    content.vb: Public Function IdxContactId(contactId As Integer) As Restriction
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.IdxContactId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxAssociateId(System.Int32)
  commentId: M:SuperOffice.CRM.Data.AppointmentTableInfo.IdxAssociateId(System.Int32)
  id: IdxAssociateId(System.Int32)
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: IdxAssociateId(Int32)
  nameWithType: AppointmentTableInfo.IdxAssociateId(Int32)
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxAssociateId(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nShortcut method for looking up using the database index AssociateId, which spans the following fields:\n<table><thead><tr><th>Field</th><th>Description</th></tr></thead><tbody><tr><td>AssociateId</td><td>ID of associate whose diary the appointment is in, REQUIRED</td></tr></tbody></table>\n"
  syntax:
    content: public Restriction IdxAssociateId(int associateId)
    parameters:
    - id: associateId
      type: System.Int32
    return:
      type: SuperOffice.Data.SQL.Restriction
    content.vb: Public Function IdxAssociateId(associateId As Integer) As Restriction
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.IdxAssociateId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxAssociateIdType(System.Int32,SuperOffice.Data.AppointmentType)
  commentId: M:SuperOffice.CRM.Data.AppointmentTableInfo.IdxAssociateIdType(System.Int32,SuperOffice.Data.AppointmentType)
  id: IdxAssociateIdType(System.Int32,SuperOffice.Data.AppointmentType)
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: IdxAssociateIdType(Int32, AppointmentType)
  nameWithType: AppointmentTableInfo.IdxAssociateIdType(Int32, AppointmentType)
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxAssociateIdType(System.Int32, SuperOffice.Data.AppointmentType)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nShortcut method for looking up using the database index AssociateIdType, which spans the following fields:\n<table><thead><tr><th>Field</th><th>Description</th></tr></thead><tbody><tr><td>AssociateId</td><td>ID of associate whose diary the appointment is in, REQUIRED</td></tr><tr><td>Type</td><td>where=no start time,note,docin, docout </td></tr></tbody></table>\n"
  syntax:
    content: public Restriction IdxAssociateIdType(int associateId, AppointmentType type)
    parameters:
    - id: associateId
      type: System.Int32
    - id: type
      type: SuperOffice.Data.AppointmentType
    return:
      type: SuperOffice.Data.SQL.Restriction
    content.vb: Public Function IdxAssociateIdType(associateId As Integer, type As AppointmentType) As Restriction
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.IdxAssociateIdType*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxAssociateIdTypeStatus(System.Int32,SuperOffice.Data.AppointmentType,SuperOffice.Data.AppointmentStatus)
  commentId: M:SuperOffice.CRM.Data.AppointmentTableInfo.IdxAssociateIdTypeStatus(System.Int32,SuperOffice.Data.AppointmentType,SuperOffice.Data.AppointmentStatus)
  id: IdxAssociateIdTypeStatus(System.Int32,SuperOffice.Data.AppointmentType,SuperOffice.Data.AppointmentStatus)
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: IdxAssociateIdTypeStatus(Int32, AppointmentType, AppointmentStatus)
  nameWithType: AppointmentTableInfo.IdxAssociateIdTypeStatus(Int32, AppointmentType, AppointmentStatus)
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxAssociateIdTypeStatus(System.Int32, SuperOffice.Data.AppointmentType, SuperOffice.Data.AppointmentStatus)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nShortcut method for looking up using the database index AssociateIdTypeStatus, which spans the following fields:\n<table><thead><tr><th>Field</th><th>Description</th></tr></thead><tbody><tr><td>AssociateId</td><td>ID of associate whose diary the appointment is in, REQUIRED</td></tr><tr><td>Type</td><td>where=no start time,note,docin, docout </td></tr><tr><td>Status</td><td>status=done,started, not started, hidden</td></tr></tbody></table>\n"
  syntax:
    content: public Restriction IdxAssociateIdTypeStatus(int associateId, AppointmentType type, AppointmentStatus status)
    parameters:
    - id: associateId
      type: System.Int32
    - id: type
      type: SuperOffice.Data.AppointmentType
    - id: status
      type: SuperOffice.Data.AppointmentStatus
    return:
      type: SuperOffice.Data.SQL.Restriction
    content.vb: Public Function IdxAssociateIdTypeStatus(associateId As Integer, type As AppointmentType, status As AppointmentStatus) As Restriction
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.IdxAssociateIdTypeStatus*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxAssociateIdTypeEndDate(System.Int32,SuperOffice.Data.AppointmentType,System.DateTime)
  commentId: M:SuperOffice.CRM.Data.AppointmentTableInfo.IdxAssociateIdTypeEndDate(System.Int32,SuperOffice.Data.AppointmentType,System.DateTime)
  id: IdxAssociateIdTypeEndDate(System.Int32,SuperOffice.Data.AppointmentType,System.DateTime)
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: IdxAssociateIdTypeEndDate(Int32, AppointmentType, DateTime)
  nameWithType: AppointmentTableInfo.IdxAssociateIdTypeEndDate(Int32, AppointmentType, DateTime)
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxAssociateIdTypeEndDate(System.Int32, SuperOffice.Data.AppointmentType, System.DateTime)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nShortcut method for looking up using the database index AssociateIdTypeEndDate, which spans the following fields:\n<table><thead><tr><th>Field</th><th>Description</th></tr></thead><tbody><tr><td>AssociateId</td><td>ID of associate whose diary the appointment is in, REQUIRED</td></tr><tr><td>Type</td><td>where=no start time,note,docin, docout </td></tr><tr><td>EndDate</td><td>Date + end time planned</td></tr></tbody></table>\n"
  syntax:
    content: public Restriction IdxAssociateIdTypeEndDate(int associateId, AppointmentType type, DateTime endDate)
    parameters:
    - id: associateId
      type: System.Int32
    - id: type
      type: SuperOffice.Data.AppointmentType
    - id: endDate
      type: System.DateTime
    return:
      type: SuperOffice.Data.SQL.Restriction
    content.vb: Public Function IdxAssociateIdTypeEndDate(associateId As Integer, type As AppointmentType, endDate As Date) As Restriction
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.IdxAssociateIdTypeEndDate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxRecurrenceRuleId(System.Int32)
  commentId: M:SuperOffice.CRM.Data.AppointmentTableInfo.IdxRecurrenceRuleId(System.Int32)
  id: IdxRecurrenceRuleId(System.Int32)
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: IdxRecurrenceRuleId(Int32)
  nameWithType: AppointmentTableInfo.IdxRecurrenceRuleId(Int32)
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxRecurrenceRuleId(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nShortcut method for looking up using the database index RecurrenceRuleId, which spans the following fields:\n<table><thead><tr><th>Field</th><th>Description</th></tr></thead><tbody><tr><td>RecurrenceRuleId</td><td>Pointer to recurrence rule, for recurring appointments, otherwise 0</td></tr></tbody></table>\n"
  syntax:
    content: public Restriction IdxRecurrenceRuleId(int recurrenceRuleId)
    parameters:
    - id: recurrenceRuleId
      type: System.Int32
    return:
      type: SuperOffice.Data.SQL.Restriction
    content.vb: Public Function IdxRecurrenceRuleId(recurrenceRuleId As Integer) As Restriction
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.IdxRecurrenceRuleId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxRecurrenceRuleIdActiveDate(System.Int32,System.DateTime)
  commentId: M:SuperOffice.CRM.Data.AppointmentTableInfo.IdxRecurrenceRuleIdActiveDate(System.Int32,System.DateTime)
  id: IdxRecurrenceRuleIdActiveDate(System.Int32,System.DateTime)
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: IdxRecurrenceRuleIdActiveDate(Int32, DateTime)
  nameWithType: AppointmentTableInfo.IdxRecurrenceRuleIdActiveDate(Int32, DateTime)
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxRecurrenceRuleIdActiveDate(System.Int32, System.DateTime)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nShortcut method for looking up using the database index RecurrenceRuleIdActiveDate, which spans the following fields:\n<table><thead><tr><th>Field</th><th>Description</th></tr></thead><tbody><tr><td>RecurrenceRuleId</td><td>Pointer to recurrence rule, for recurring appointments, otherwise 0</td></tr><tr><td>ActiveDate</td><td>The date to be used for searching &amp; showing</td></tr></tbody></table>\n"
  syntax:
    content: public Restriction IdxRecurrenceRuleIdActiveDate(int recurrenceRuleId, DateTime activeDate)
    parameters:
    - id: recurrenceRuleId
      type: System.Int32
    - id: activeDate
      type: System.DateTime
    return:
      type: SuperOffice.Data.SQL.Restriction
    content.vb: Public Function IdxRecurrenceRuleIdActiveDate(recurrenceRuleId As Integer, activeDate As Date) As Restriction
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.IdxRecurrenceRuleIdActiveDate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxAssociateIdActiveDate(System.Int32,System.DateTime)
  commentId: M:SuperOffice.CRM.Data.AppointmentTableInfo.IdxAssociateIdActiveDate(System.Int32,System.DateTime)
  id: IdxAssociateIdActiveDate(System.Int32,System.DateTime)
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: IdxAssociateIdActiveDate(Int32, DateTime)
  nameWithType: AppointmentTableInfo.IdxAssociateIdActiveDate(Int32, DateTime)
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxAssociateIdActiveDate(System.Int32, System.DateTime)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nShortcut method for looking up using the database index AssociateIdActiveDate, which spans the following fields:\n<table><thead><tr><th>Field</th><th>Description</th></tr></thead><tbody><tr><td>AssociateId</td><td>ID of associate whose diary the appointment is in, REQUIRED</td></tr><tr><td>ActiveDate</td><td>The date to be used for searching &amp; showing</td></tr></tbody></table>\n"
  syntax:
    content: public Restriction IdxAssociateIdActiveDate(int associateId, DateTime activeDate)
    parameters:
    - id: associateId
      type: System.Int32
    - id: activeDate
      type: System.DateTime
    return:
      type: SuperOffice.Data.SQL.Restriction
    content.vb: Public Function IdxAssociateIdActiveDate(associateId As Integer, activeDate As Date) As Restriction
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.IdxAssociateIdActiveDate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxAssociateIdActiveDateMotherId(System.Int32,System.DateTime,System.Int32)
  commentId: M:SuperOffice.CRM.Data.AppointmentTableInfo.IdxAssociateIdActiveDateMotherId(System.Int32,System.DateTime,System.Int32)
  id: IdxAssociateIdActiveDateMotherId(System.Int32,System.DateTime,System.Int32)
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: IdxAssociateIdActiveDateMotherId(Int32, DateTime, Int32)
  nameWithType: AppointmentTableInfo.IdxAssociateIdActiveDateMotherId(Int32, DateTime, Int32)
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxAssociateIdActiveDateMotherId(System.Int32, System.DateTime, System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nShortcut method for looking up using the database index AssociateIdActiveDateMotherId, which spans the following fields:\n<table><thead><tr><th>Field</th><th>Description</th></tr></thead><tbody><tr><td>AssociateId</td><td>ID of associate whose diary the appointment is in, REQUIRED</td></tr><tr><td>ActiveDate</td><td>The date to be used for searching &amp; showing</td></tr><tr><td>MotherId</td><td>ID of mother appointment; self if booking master, master ID if booking slave, 0 if normal appointment. However, if 0 and assoc_id != reg_id then this is an assigned appointment, indicated vt type = kBooking</td></tr></tbody></table>\n"
  syntax:
    content: public Restriction IdxAssociateIdActiveDateMotherId(int associateId, DateTime activeDate, int motherId)
    parameters:
    - id: associateId
      type: System.Int32
    - id: activeDate
      type: System.DateTime
    - id: motherId
      type: System.Int32
    return:
      type: SuperOffice.Data.SQL.Restriction
    content.vb: Public Function IdxAssociateIdActiveDateMotherId(associateId As Integer, activeDate As Date, motherId As Integer) As Restriction
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.IdxAssociateIdActiveDateMotherId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherId(System.Int32)
  commentId: M:SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherId(System.Int32)
  id: IdxMotherId(System.Int32)
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: IdxMotherId(Int32)
  nameWithType: AppointmentTableInfo.IdxMotherId(Int32)
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherId(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nShortcut method for looking up using the database index MotherId, which spans the following fields:\n<table><thead><tr><th>Field</th><th>Description</th></tr></thead><tbody><tr><td>MotherId</td><td>ID of mother appointment; self if booking master, master ID if booking slave, 0 if normal appointment. However, if 0 and assoc_id != reg_id then this is an assigned appointment, indicated vt type = kBooking</td></tr></tbody></table>\n"
  syntax:
    content: public Restriction IdxMotherId(int motherId)
    parameters:
    - id: motherId
      type: System.Int32
    return:
      type: SuperOffice.Data.SQL.Restriction
    content.vb: Public Function IdxMotherId(motherId As Integer) As Restriction
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatus(System.Int32,SuperOffice.Data.AppointmentStatus)
  commentId: M:SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatus(System.Int32,SuperOffice.Data.AppointmentStatus)
  id: IdxMotherIdStatus(System.Int32,SuperOffice.Data.AppointmentStatus)
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: IdxMotherIdStatus(Int32, AppointmentStatus)
  nameWithType: AppointmentTableInfo.IdxMotherIdStatus(Int32, AppointmentStatus)
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatus(System.Int32, SuperOffice.Data.AppointmentStatus)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nShortcut method for looking up using the database index MotherIdStatus, which spans the following fields:\n<table><thead><tr><th>Field</th><th>Description</th></tr></thead><tbody><tr><td>MotherId</td><td>ID of mother appointment; self if booking master, master ID if booking slave, 0 if normal appointment. However, if 0 and assoc_id != reg_id then this is an assigned appointment, indicated vt type = kBooking</td></tr><tr><td>Status</td><td>status=done,started, not started, hidden</td></tr></tbody></table>\n"
  syntax:
    content: public Restriction IdxMotherIdStatus(int motherId, AppointmentStatus status)
    parameters:
    - id: motherId
      type: System.Int32
    - id: status
      type: SuperOffice.Data.AppointmentStatus
    return:
      type: SuperOffice.Data.SQL.Restriction
    content.vb: Public Function IdxMotherIdStatus(motherId As Integer, status As AppointmentStatus) As Restriction
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatus*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDate(System.Int32,SuperOffice.Data.AppointmentStatus,System.DateTime)
  commentId: M:SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDate(System.Int32,SuperOffice.Data.AppointmentStatus,System.DateTime)
  id: IdxMotherIdStatusActiveDate(System.Int32,SuperOffice.Data.AppointmentStatus,System.DateTime)
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: IdxMotherIdStatusActiveDate(Int32, AppointmentStatus, DateTime)
  nameWithType: AppointmentTableInfo.IdxMotherIdStatusActiveDate(Int32, AppointmentStatus, DateTime)
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDate(System.Int32, SuperOffice.Data.AppointmentStatus, System.DateTime)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nShortcut method for looking up using the database index MotherIdStatusActiveDate, which spans the following fields:\n<table><thead><tr><th>Field</th><th>Description</th></tr></thead><tbody><tr><td>MotherId</td><td>ID of mother appointment; self if booking master, master ID if booking slave, 0 if normal appointment. However, if 0 and assoc_id != reg_id then this is an assigned appointment, indicated vt type = kBooking</td></tr><tr><td>Status</td><td>status=done,started, not started, hidden</td></tr><tr><td>ActiveDate</td><td>The date to be used for searching &amp; showing</td></tr></tbody></table>\n"
  syntax:
    content: public Restriction IdxMotherIdStatusActiveDate(int motherId, AppointmentStatus status, DateTime activeDate)
    parameters:
    - id: motherId
      type: System.Int32
    - id: status
      type: SuperOffice.Data.AppointmentStatus
    - id: activeDate
      type: System.DateTime
    return:
      type: SuperOffice.Data.SQL.Restriction
    content.vb: Public Function IdxMotherIdStatusActiveDate(motherId As Integer, status As AppointmentStatus, activeDate As Date) As Restriction
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateId(System.Int32,SuperOffice.Data.AppointmentStatus,System.DateTime,System.Int32)
  commentId: M:SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateId(System.Int32,SuperOffice.Data.AppointmentStatus,System.DateTime,System.Int32)
  id: IdxMotherIdStatusActiveDateRegisteredAssociateId(System.Int32,SuperOffice.Data.AppointmentStatus,System.DateTime,System.Int32)
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: IdxMotherIdStatusActiveDateRegisteredAssociateId(Int32, AppointmentStatus, DateTime, Int32)
  nameWithType: AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateId(Int32, AppointmentStatus, DateTime, Int32)
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateId(System.Int32, SuperOffice.Data.AppointmentStatus, System.DateTime, System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nShortcut method for looking up using the database index MotherIdStatusActiveDateRegisteredAssociateId, which spans the following fields:\n<table><thead><tr><th>Field</th><th>Description</th></tr></thead><tbody><tr><td>MotherId</td><td>ID of mother appointment; self if booking master, master ID if booking slave, 0 if normal appointment. However, if 0 and assoc_id != reg_id then this is an assigned appointment, indicated vt type = kBooking</td></tr><tr><td>Status</td><td>status=done,started, not started, hidden</td></tr><tr><td>ActiveDate</td><td>The date to be used for searching &amp; showing</td></tr><tr><td>RegisteredAssociateId</td><td>Registered by whom</td></tr></tbody></table>\n"
  syntax:
    content: public Restriction IdxMotherIdStatusActiveDateRegisteredAssociateId(int motherId, AppointmentStatus status, DateTime activeDate, int registeredAssociateId)
    parameters:
    - id: motherId
      type: System.Int32
    - id: status
      type: SuperOffice.Data.AppointmentStatus
    - id: activeDate
      type: System.DateTime
    - id: registeredAssociateId
      type: System.Int32
    return:
      type: SuperOffice.Data.SQL.Restriction
    content.vb: Public Function IdxMotherIdStatusActiveDateRegisteredAssociateId(motherId As Integer, status As AppointmentStatus, activeDate As Date, registeredAssociateId As Integer) As Restriction
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateIdRegistered(System.Int32,SuperOffice.Data.AppointmentStatus,System.DateTime,System.Int32,System.DateTime)
  commentId: M:SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateIdRegistered(System.Int32,SuperOffice.Data.AppointmentStatus,System.DateTime,System.Int32,System.DateTime)
  id: IdxMotherIdStatusActiveDateRegisteredAssociateIdRegistered(System.Int32,SuperOffice.Data.AppointmentStatus,System.DateTime,System.Int32,System.DateTime)
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: IdxMotherIdStatusActiveDateRegisteredAssociateIdRegistered(Int32, AppointmentStatus, DateTime, Int32, DateTime)
  nameWithType: AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateIdRegistered(Int32, AppointmentStatus, DateTime, Int32, DateTime)
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateIdRegistered(System.Int32, SuperOffice.Data.AppointmentStatus, System.DateTime, System.Int32, System.DateTime)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nShortcut method for looking up using the database index MotherIdStatusActiveDateRegisteredAssociateIdRegistered, which spans the following fields:\n<table><thead><tr><th>Field</th><th>Description</th></tr></thead><tbody><tr><td>MotherId</td><td>ID of mother appointment; self if booking master, master ID if booking slave, 0 if normal appointment. However, if 0 and assoc_id != reg_id then this is an assigned appointment, indicated vt type = kBooking</td></tr><tr><td>Status</td><td>status=done,started, not started, hidden</td></tr><tr><td>ActiveDate</td><td>The date to be used for searching &amp; showing</td></tr><tr><td>RegisteredAssociateId</td><td>Registered by whom</td></tr><tr><td>Registered</td><td>Registered date</td></tr></tbody></table>\n"
  syntax:
    content: public Restriction IdxMotherIdStatusActiveDateRegisteredAssociateIdRegistered(int motherId, AppointmentStatus status, DateTime activeDate, int registeredAssociateId, DateTime registered)
    parameters:
    - id: motherId
      type: System.Int32
    - id: status
      type: SuperOffice.Data.AppointmentStatus
    - id: activeDate
      type: System.DateTime
    - id: registeredAssociateId
      type: System.Int32
    - id: registered
      type: System.DateTime
    return:
      type: SuperOffice.Data.SQL.Restriction
    content.vb: Public Function IdxMotherIdStatusActiveDateRegisteredAssociateIdRegistered(motherId As Integer, status As AppointmentStatus, activeDate As Date, registeredAssociateId As Integer, registered As Date) As Restriction
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateIdRegistered*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedBy(System.Int32,SuperOffice.Data.AppointmentStatus,System.DateTime,System.Int32,System.DateTime,System.Int32)
  commentId: M:SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedBy(System.Int32,SuperOffice.Data.AppointmentStatus,System.DateTime,System.Int32,System.DateTime,System.Int32)
  id: IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedBy(System.Int32,SuperOffice.Data.AppointmentStatus,System.DateTime,System.Int32,System.DateTime,System.Int32)
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedBy(Int32, AppointmentStatus, DateTime, Int32, DateTime, Int32)
  nameWithType: AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedBy(Int32, AppointmentStatus, DateTime, Int32, DateTime, Int32)
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedBy(System.Int32, SuperOffice.Data.AppointmentStatus, System.DateTime, System.Int32, System.DateTime, System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nShortcut method for looking up using the database index MotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedBy, which spans the following fields:\n<table><thead><tr><th>Field</th><th>Description</th></tr></thead><tbody><tr><td>MotherId</td><td>ID of mother appointment; self if booking master, master ID if booking slave, 0 if normal appointment. However, if 0 and assoc_id != reg_id then this is an assigned appointment, indicated vt type = kBooking</td></tr><tr><td>Status</td><td>status=done,started, not started, hidden</td></tr><tr><td>ActiveDate</td><td>The date to be used for searching &amp; showing</td></tr><tr><td>RegisteredAssociateId</td><td>Registered by whom</td></tr><tr><td>Registered</td><td>Registered date</td></tr><tr><td>AssignedBy</td><td>Who (last) assigned this appointment to associate_id?</td></tr></tbody></table>\n"
  syntax:
    content: public Restriction IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedBy(int motherId, AppointmentStatus status, DateTime activeDate, int registeredAssociateId, DateTime registered, int assignedBy)
    parameters:
    - id: motherId
      type: System.Int32
    - id: status
      type: SuperOffice.Data.AppointmentStatus
    - id: activeDate
      type: System.DateTime
    - id: registeredAssociateId
      type: System.Int32
    - id: registered
      type: System.DateTime
    - id: assignedBy
      type: System.Int32
    return:
      type: SuperOffice.Data.SQL.Restriction
    content.vb: Public Function IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedBy(motherId As Integer, status As AppointmentStatus, activeDate As Date, registeredAssociateId As Integer, registered As Date, assignedBy As Integer) As Restriction
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedBy*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedByGroupIdx(System.Int32,SuperOffice.Data.AppointmentStatus,System.DateTime,System.Int32,System.DateTime,System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedByGroupIdx(System.Int32,SuperOffice.Data.AppointmentStatus,System.DateTime,System.Int32,System.DateTime,System.Int32,System.Int32)
  id: IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedByGroupIdx(System.Int32,SuperOffice.Data.AppointmentStatus,System.DateTime,System.Int32,System.DateTime,System.Int32,System.Int32)
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedByGroupIdx(Int32, AppointmentStatus, DateTime, Int32, DateTime, Int32, Int32)
  nameWithType: AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedByGroupIdx(Int32, AppointmentStatus, DateTime, Int32, DateTime, Int32, Int32)
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedByGroupIdx(System.Int32, SuperOffice.Data.AppointmentStatus, System.DateTime, System.Int32, System.DateTime, System.Int32, System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nShortcut method for looking up using the database index MotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedByGroupIdx, which spans the following fields:\n<table><thead><tr><th>Field</th><th>Description</th></tr></thead><tbody><tr><td>MotherId</td><td>ID of mother appointment; self if booking master, master ID if booking slave, 0 if normal appointment. However, if 0 and assoc_id != reg_id then this is an assigned appointment, indicated vt type = kBooking</td></tr><tr><td>Status</td><td>status=done,started, not started, hidden</td></tr><tr><td>ActiveDate</td><td>The date to be used for searching &amp; showing</td></tr><tr><td>RegisteredAssociateId</td><td>Registered by whom</td></tr><tr><td>Registered</td><td>Registered date</td></tr><tr><td>AssignedBy</td><td>Who (last) assigned this appointment to associate_id?</td></tr><tr><td>GroupIdx</td><td>Group of owning associate at the time tha ppnt was created</td></tr></tbody></table>\n"
  syntax:
    content: public Restriction IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedByGroupIdx(int motherId, AppointmentStatus status, DateTime activeDate, int registeredAssociateId, DateTime registered, int assignedBy, int groupIdx)
    parameters:
    - id: motherId
      type: System.Int32
    - id: status
      type: SuperOffice.Data.AppointmentStatus
    - id: activeDate
      type: System.DateTime
    - id: registeredAssociateId
      type: System.Int32
    - id: registered
      type: System.DateTime
    - id: assignedBy
      type: System.Int32
    - id: groupIdx
      type: System.Int32
    return:
      type: SuperOffice.Data.SQL.Restriction
    content.vb: Public Function IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedByGroupIdx(motherId As Integer, status As AppointmentStatus, activeDate As Date, registeredAssociateId As Integer, registered As Date, assignedBy As Integer, groupIdx As Integer) As Restriction
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedByGroupIdx*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedByGroupIdxType(System.Int32,SuperOffice.Data.AppointmentStatus,System.DateTime,System.Int32,System.DateTime,System.Int32,System.Int32,SuperOffice.Data.AppointmentType)
  commentId: M:SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedByGroupIdxType(System.Int32,SuperOffice.Data.AppointmentStatus,System.DateTime,System.Int32,System.DateTime,System.Int32,System.Int32,SuperOffice.Data.AppointmentType)
  id: IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedByGroupIdxType(System.Int32,SuperOffice.Data.AppointmentStatus,System.DateTime,System.Int32,System.DateTime,System.Int32,System.Int32,SuperOffice.Data.AppointmentType)
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedByGroupIdxType(Int32, AppointmentStatus, DateTime, Int32, DateTime, Int32, Int32, AppointmentType)
  nameWithType: AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedByGroupIdxType(Int32, AppointmentStatus, DateTime, Int32, DateTime, Int32, Int32, AppointmentType)
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedByGroupIdxType(System.Int32, SuperOffice.Data.AppointmentStatus, System.DateTime, System.Int32, System.DateTime, System.Int32, System.Int32, SuperOffice.Data.AppointmentType)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nShortcut method for looking up using the database index MotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedByGroupIdxType, which spans the following fields:\n<table><thead><tr><th>Field</th><th>Description</th></tr></thead><tbody><tr><td>MotherId</td><td>ID of mother appointment; self if booking master, master ID if booking slave, 0 if normal appointment. However, if 0 and assoc_id != reg_id then this is an assigned appointment, indicated vt type = kBooking</td></tr><tr><td>Status</td><td>status=done,started, not started, hidden</td></tr><tr><td>ActiveDate</td><td>The date to be used for searching &amp; showing</td></tr><tr><td>RegisteredAssociateId</td><td>Registered by whom</td></tr><tr><td>Registered</td><td>Registered date</td></tr><tr><td>AssignedBy</td><td>Who (last) assigned this appointment to associate_id?</td></tr><tr><td>GroupIdx</td><td>Group of owning associate at the time tha ppnt was created</td></tr><tr><td>Type</td><td>where=no start time,note,docin, docout </td></tr></tbody></table>\n"
  syntax:
    content: public Restriction IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedByGroupIdxType(int motherId, AppointmentStatus status, DateTime activeDate, int registeredAssociateId, DateTime registered, int assignedBy, int groupIdx, AppointmentType type)
    parameters:
    - id: motherId
      type: System.Int32
    - id: status
      type: SuperOffice.Data.AppointmentStatus
    - id: activeDate
      type: System.DateTime
    - id: registeredAssociateId
      type: System.Int32
    - id: registered
      type: System.DateTime
    - id: assignedBy
      type: System.Int32
    - id: groupIdx
      type: System.Int32
    - id: type
      type: SuperOffice.Data.AppointmentType
    return:
      type: SuperOffice.Data.SQL.Restriction
    content.vb: Public Function IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedByGroupIdxType(motherId As Integer, status As AppointmentStatus, activeDate As Date, registeredAssociateId As Integer, registered As Date, assignedBy As Integer, groupIdx As Integer, type As AppointmentType) As Restriction
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedByGroupIdxType*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedByGroupIdxTypeAssociateId(System.Int32,SuperOffice.Data.AppointmentStatus,System.DateTime,System.Int32,System.DateTime,System.Int32,System.Int32,SuperOffice.Data.AppointmentType,System.Int32)
  commentId: M:SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedByGroupIdxTypeAssociateId(System.Int32,SuperOffice.Data.AppointmentStatus,System.DateTime,System.Int32,System.DateTime,System.Int32,System.Int32,SuperOffice.Data.AppointmentType,System.Int32)
  id: IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedByGroupIdxTypeAssociateId(System.Int32,SuperOffice.Data.AppointmentStatus,System.DateTime,System.Int32,System.DateTime,System.Int32,System.Int32,SuperOffice.Data.AppointmentType,System.Int32)
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedByGroupIdxTypeAssociateId(Int32, AppointmentStatus, DateTime, Int32, DateTime, Int32, Int32, AppointmentType, Int32)
  nameWithType: AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedByGroupIdxTypeAssociateId(Int32, AppointmentStatus, DateTime, Int32, DateTime, Int32, Int32, AppointmentType, Int32)
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedByGroupIdxTypeAssociateId(System.Int32, SuperOffice.Data.AppointmentStatus, System.DateTime, System.Int32, System.DateTime, System.Int32, System.Int32, SuperOffice.Data.AppointmentType, System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nShortcut method for looking up using the database index MotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedByGroupIdxTypeAssociateId, which spans the following fields:\n<table><thead><tr><th>Field</th><th>Description</th></tr></thead><tbody><tr><td>MotherId</td><td>ID of mother appointment; self if booking master, master ID if booking slave, 0 if normal appointment. However, if 0 and assoc_id != reg_id then this is an assigned appointment, indicated vt type = kBooking</td></tr><tr><td>Status</td><td>status=done,started, not started, hidden</td></tr><tr><td>ActiveDate</td><td>The date to be used for searching &amp; showing</td></tr><tr><td>RegisteredAssociateId</td><td>Registered by whom</td></tr><tr><td>Registered</td><td>Registered date</td></tr><tr><td>AssignedBy</td><td>Who (last) assigned this appointment to associate_id?</td></tr><tr><td>GroupIdx</td><td>Group of owning associate at the time tha ppnt was created</td></tr><tr><td>Type</td><td>where=no start time,note,docin, docout </td></tr><tr><td>AssociateId</td><td>ID of associate whose diary the appointment is in, REQUIRED</td></tr></tbody></table>\n"
  syntax:
    content: public Restriction IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedByGroupIdxTypeAssociateId(int motherId, AppointmentStatus status, DateTime activeDate, int registeredAssociateId, DateTime registered, int assignedBy, int groupIdx, AppointmentType type, int associateId)
    parameters:
    - id: motherId
      type: System.Int32
    - id: status
      type: SuperOffice.Data.AppointmentStatus
    - id: activeDate
      type: System.DateTime
    - id: registeredAssociateId
      type: System.Int32
    - id: registered
      type: System.DateTime
    - id: assignedBy
      type: System.Int32
    - id: groupIdx
      type: System.Int32
    - id: type
      type: SuperOffice.Data.AppointmentType
    - id: associateId
      type: System.Int32
    return:
      type: SuperOffice.Data.SQL.Restriction
    content.vb: Public Function IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedByGroupIdxTypeAssociateId(motherId As Integer, status As AppointmentStatus, activeDate As Date, registeredAssociateId As Integer, registered As Date, assignedBy As Integer, groupIdx As Integer, type As AppointmentType, associateId As Integer) As Restriction
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedByGroupIdxTypeAssociateId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdType(System.Int32,SuperOffice.Data.AppointmentType)
  commentId: M:SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdType(System.Int32,SuperOffice.Data.AppointmentType)
  id: IdxProjectIdType(System.Int32,SuperOffice.Data.AppointmentType)
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: IdxProjectIdType(Int32, AppointmentType)
  nameWithType: AppointmentTableInfo.IdxProjectIdType(Int32, AppointmentType)
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdType(System.Int32, SuperOffice.Data.AppointmentType)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nShortcut method for looking up using the database index ProjectIdType, which spans the following fields:\n<table><thead><tr><th>Field</th><th>Description</th></tr></thead><tbody><tr><td>ProjectId</td><td>ID of project referred to, may be 0</td></tr><tr><td>Type</td><td>where=no start time,note,docin, docout </td></tr></tbody></table>\n"
  syntax:
    content: public Restriction IdxProjectIdType(int projectId, AppointmentType type)
    parameters:
    - id: projectId
      type: System.Int32
    - id: type
      type: SuperOffice.Data.AppointmentType
    return:
      type: SuperOffice.Data.SQL.Restriction
    content.vb: Public Function IdxProjectIdType(projectId As Integer, type As AppointmentType) As Restriction
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdType*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDate(System.Int32,SuperOffice.Data.AppointmentType,System.DateTime)
  commentId: M:SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDate(System.Int32,SuperOffice.Data.AppointmentType,System.DateTime)
  id: IdxProjectIdTypeActiveDate(System.Int32,SuperOffice.Data.AppointmentType,System.DateTime)
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: IdxProjectIdTypeActiveDate(Int32, AppointmentType, DateTime)
  nameWithType: AppointmentTableInfo.IdxProjectIdTypeActiveDate(Int32, AppointmentType, DateTime)
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDate(System.Int32, SuperOffice.Data.AppointmentType, System.DateTime)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nShortcut method for looking up using the database index ProjectIdTypeActiveDate, which spans the following fields:\n<table><thead><tr><th>Field</th><th>Description</th></tr></thead><tbody><tr><td>ProjectId</td><td>ID of project referred to, may be 0</td></tr><tr><td>Type</td><td>where=no start time,note,docin, docout </td></tr><tr><td>ActiveDate</td><td>The date to be used for searching &amp; showing</td></tr></tbody></table>\n"
  syntax:
    content: public Restriction IdxProjectIdTypeActiveDate(int projectId, AppointmentType type, DateTime activeDate)
    parameters:
    - id: projectId
      type: System.Int32
    - id: type
      type: SuperOffice.Data.AppointmentType
    - id: activeDate
      type: System.DateTime
    return:
      type: SuperOffice.Data.SQL.Restriction
    content.vb: Public Function IdxProjectIdTypeActiveDate(projectId As Integer, type As AppointmentType, activeDate As Date) As Restriction
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentId(System.Int32,SuperOffice.Data.AppointmentType,System.DateTime,System.Int32)
  commentId: M:SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentId(System.Int32,SuperOffice.Data.AppointmentType,System.DateTime,System.Int32)
  id: IdxProjectIdTypeActiveDateDocumentId(System.Int32,SuperOffice.Data.AppointmentType,System.DateTime,System.Int32)
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: IdxProjectIdTypeActiveDateDocumentId(Int32, AppointmentType, DateTime, Int32)
  nameWithType: AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentId(Int32, AppointmentType, DateTime, Int32)
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentId(System.Int32, SuperOffice.Data.AppointmentType, System.DateTime, System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nShortcut method for looking up using the database index ProjectIdTypeActiveDateDocumentId, which spans the following fields:\n<table><thead><tr><th>Field</th><th>Description</th></tr></thead><tbody><tr><td>ProjectId</td><td>ID of project referred to, may be 0</td></tr><tr><td>Type</td><td>where=no start time,note,docin, docout </td></tr><tr><td>ActiveDate</td><td>The date to be used for searching &amp; showing</td></tr><tr><td>DocumentId</td><td>Points to document record; 0 for non-document appointments!</td></tr></tbody></table>\n"
  syntax:
    content: public Restriction IdxProjectIdTypeActiveDateDocumentId(int projectId, AppointmentType type, DateTime activeDate, int documentId)
    parameters:
    - id: projectId
      type: System.Int32
    - id: type
      type: SuperOffice.Data.AppointmentType
    - id: activeDate
      type: System.DateTime
    - id: documentId
      type: System.Int32
    return:
      type: SuperOffice.Data.SQL.Restriction
    content.vb: Public Function IdxProjectIdTypeActiveDateDocumentId(projectId As Integer, type As AppointmentType, activeDate As Date, documentId As Integer) As Restriction
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateId(System.Int32,SuperOffice.Data.AppointmentType,System.DateTime,System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateId(System.Int32,SuperOffice.Data.AppointmentType,System.DateTime,System.Int32,System.Int32)
  id: IdxProjectIdTypeActiveDateDocumentIdAssociateId(System.Int32,SuperOffice.Data.AppointmentType,System.DateTime,System.Int32,System.Int32)
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: IdxProjectIdTypeActiveDateDocumentIdAssociateId(Int32, AppointmentType, DateTime, Int32, Int32)
  nameWithType: AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateId(Int32, AppointmentType, DateTime, Int32, Int32)
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateId(System.Int32, SuperOffice.Data.AppointmentType, System.DateTime, System.Int32, System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nShortcut method for looking up using the database index ProjectIdTypeActiveDateDocumentIdAssociateId, which spans the following fields:\n<table><thead><tr><th>Field</th><th>Description</th></tr></thead><tbody><tr><td>ProjectId</td><td>ID of project referred to, may be 0</td></tr><tr><td>Type</td><td>where=no start time,note,docin, docout </td></tr><tr><td>ActiveDate</td><td>The date to be used for searching &amp; showing</td></tr><tr><td>DocumentId</td><td>Points to document record; 0 for non-document appointments!</td></tr><tr><td>AssociateId</td><td>ID of associate whose diary the appointment is in, REQUIRED</td></tr></tbody></table>\n"
  syntax:
    content: public Restriction IdxProjectIdTypeActiveDateDocumentIdAssociateId(int projectId, AppointmentType type, DateTime activeDate, int documentId, int associateId)
    parameters:
    - id: projectId
      type: System.Int32
    - id: type
      type: SuperOffice.Data.AppointmentType
    - id: activeDate
      type: System.DateTime
    - id: documentId
      type: System.Int32
    - id: associateId
      type: System.Int32
    return:
      type: SuperOffice.Data.SQL.Restriction
    content.vb: Public Function IdxProjectIdTypeActiveDateDocumentIdAssociateId(projectId As Integer, type As AppointmentType, activeDate As Date, documentId As Integer, associateId As Integer) As Restriction
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdx(System.Int32,SuperOffice.Data.AppointmentType,System.DateTime,System.Int32,System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdx(System.Int32,SuperOffice.Data.AppointmentType,System.DateTime,System.Int32,System.Int32,System.Int32)
  id: IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdx(System.Int32,SuperOffice.Data.AppointmentType,System.DateTime,System.Int32,System.Int32,System.Int32)
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdx(Int32, AppointmentType, DateTime, Int32, Int32, Int32)
  nameWithType: AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdx(Int32, AppointmentType, DateTime, Int32, Int32, Int32)
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdx(System.Int32, SuperOffice.Data.AppointmentType, System.DateTime, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nShortcut method for looking up using the database index ProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdx, which spans the following fields:\n<table><thead><tr><th>Field</th><th>Description</th></tr></thead><tbody><tr><td>ProjectId</td><td>ID of project referred to, may be 0</td></tr><tr><td>Type</td><td>where=no start time,note,docin, docout </td></tr><tr><td>ActiveDate</td><td>The date to be used for searching &amp; showing</td></tr><tr><td>DocumentId</td><td>Points to document record; 0 for non-document appointments!</td></tr><tr><td>AssociateId</td><td>ID of associate whose diary the appointment is in, REQUIRED</td></tr><tr><td>GroupIdx</td><td>Group of owning associate at the time tha ppnt was created</td></tr></tbody></table>\n"
  syntax:
    content: public Restriction IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdx(int projectId, AppointmentType type, DateTime activeDate, int documentId, int associateId, int groupIdx)
    parameters:
    - id: projectId
      type: System.Int32
    - id: type
      type: SuperOffice.Data.AppointmentType
    - id: activeDate
      type: System.DateTime
    - id: documentId
      type: System.Int32
    - id: associateId
      type: System.Int32
    - id: groupIdx
      type: System.Int32
    return:
      type: SuperOffice.Data.SQL.Restriction
    content.vb: Public Function IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdx(projectId As Integer, type As AppointmentType, activeDate As Date, documentId As Integer, associateId As Integer, groupIdx As Integer) As Restriction
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdx*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherId(System.Int32,SuperOffice.Data.AppointmentType,System.DateTime,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherId(System.Int32,SuperOffice.Data.AppointmentType,System.DateTime,System.Int32,System.Int32,System.Int32,System.Int32)
  id: IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherId(System.Int32,SuperOffice.Data.AppointmentType,System.DateTime,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherId(Int32, AppointmentType, DateTime, Int32, Int32, Int32, Int32)
  nameWithType: AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherId(Int32, AppointmentType, DateTime, Int32, Int32, Int32, Int32)
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherId(System.Int32, SuperOffice.Data.AppointmentType, System.DateTime, System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nShortcut method for looking up using the database index ProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherId, which spans the following fields:\n<table><thead><tr><th>Field</th><th>Description</th></tr></thead><tbody><tr><td>ProjectId</td><td>ID of project referred to, may be 0</td></tr><tr><td>Type</td><td>where=no start time,note,docin, docout </td></tr><tr><td>ActiveDate</td><td>The date to be used for searching &amp; showing</td></tr><tr><td>DocumentId</td><td>Points to document record; 0 for non-document appointments!</td></tr><tr><td>AssociateId</td><td>ID of associate whose diary the appointment is in, REQUIRED</td></tr><tr><td>GroupIdx</td><td>Group of owning associate at the time tha ppnt was created</td></tr><tr><td>MotherId</td><td>ID of mother appointment; self if booking master, master ID if booking slave, 0 if normal appointment. However, if 0 and assoc_id != reg_id then this is an assigned appointment, indicated vt type = kBooking</td></tr></tbody></table>\n"
  syntax:
    content: public Restriction IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherId(int projectId, AppointmentType type, DateTime activeDate, int documentId, int associateId, int groupIdx, int motherId)
    parameters:
    - id: projectId
      type: System.Int32
    - id: type
      type: SuperOffice.Data.AppointmentType
    - id: activeDate
      type: System.DateTime
    - id: documentId
      type: System.Int32
    - id: associateId
      type: System.Int32
    - id: groupIdx
      type: System.Int32
    - id: motherId
      type: System.Int32
    return:
      type: SuperOffice.Data.SQL.Restriction
    content.vb: Public Function IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherId(projectId As Integer, type As AppointmentType, activeDate As Date, documentId As Integer, associateId As Integer, groupIdx As Integer, motherId As Integer) As Restriction
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherIdAssignedBy(System.Int32,SuperOffice.Data.AppointmentType,System.DateTime,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherIdAssignedBy(System.Int32,SuperOffice.Data.AppointmentType,System.DateTime,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherIdAssignedBy(System.Int32,SuperOffice.Data.AppointmentType,System.DateTime,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherIdAssignedBy(Int32, AppointmentType, DateTime, Int32, Int32, Int32, Int32, Int32)
  nameWithType: AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherIdAssignedBy(Int32, AppointmentType, DateTime, Int32, Int32, Int32, Int32, Int32)
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherIdAssignedBy(System.Int32, SuperOffice.Data.AppointmentType, System.DateTime, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nShortcut method for looking up using the database index ProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherIdAssignedBy, which spans the following fields:\n<table><thead><tr><th>Field</th><th>Description</th></tr></thead><tbody><tr><td>ProjectId</td><td>ID of project referred to, may be 0</td></tr><tr><td>Type</td><td>where=no start time,note,docin, docout </td></tr><tr><td>ActiveDate</td><td>The date to be used for searching &amp; showing</td></tr><tr><td>DocumentId</td><td>Points to document record; 0 for non-document appointments!</td></tr><tr><td>AssociateId</td><td>ID of associate whose diary the appointment is in, REQUIRED</td></tr><tr><td>GroupIdx</td><td>Group of owning associate at the time tha ppnt was created</td></tr><tr><td>MotherId</td><td>ID of mother appointment; self if booking master, master ID if booking slave, 0 if normal appointment. However, if 0 and assoc_id != reg_id then this is an assigned appointment, indicated vt type = kBooking</td></tr><tr><td>AssignedBy</td><td>Who (last) assigned this appointment to associate_id?</td></tr></tbody></table>\n"
  syntax:
    content: public Restriction IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherIdAssignedBy(int projectId, AppointmentType type, DateTime activeDate, int documentId, int associateId, int groupIdx, int motherId, int assignedBy)
    parameters:
    - id: projectId
      type: System.Int32
    - id: type
      type: SuperOffice.Data.AppointmentType
    - id: activeDate
      type: System.DateTime
    - id: documentId
      type: System.Int32
    - id: associateId
      type: System.Int32
    - id: groupIdx
      type: System.Int32
    - id: motherId
      type: System.Int32
    - id: assignedBy
      type: System.Int32
    return:
      type: SuperOffice.Data.SQL.Restriction
    content.vb: Public Function IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherIdAssignedBy(projectId As Integer, type As AppointmentType, activeDate As Date, documentId As Integer, associateId As Integer, groupIdx As Integer, motherId As Integer, assignedBy As Integer) As Restriction
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherIdAssignedBy*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherIdAssignedByAppointmentId(System.Int32,SuperOffice.Data.AppointmentType,System.DateTime,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherIdAssignedByAppointmentId(System.Int32,SuperOffice.Data.AppointmentType,System.DateTime,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherIdAssignedByAppointmentId(System.Int32,SuperOffice.Data.AppointmentType,System.DateTime,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherIdAssignedByAppointmentId(Int32, AppointmentType, DateTime, Int32, Int32, Int32, Int32, Int32, Int32)
  nameWithType: AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherIdAssignedByAppointmentId(Int32, AppointmentType, DateTime, Int32, Int32, Int32, Int32, Int32, Int32)
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherIdAssignedByAppointmentId(System.Int32, SuperOffice.Data.AppointmentType, System.DateTime, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nShortcut method for looking up using the database index ProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherIdAssignedByAppointmentId, which spans the following fields:\n<table><thead><tr><th>Field</th><th>Description</th></tr></thead><tbody><tr><td>ProjectId</td><td>ID of project referred to, may be 0</td></tr><tr><td>Type</td><td>where=no start time,note,docin, docout </td></tr><tr><td>ActiveDate</td><td>The date to be used for searching &amp; showing</td></tr><tr><td>DocumentId</td><td>Points to document record; 0 for non-document appointments!</td></tr><tr><td>AssociateId</td><td>ID of associate whose diary the appointment is in, REQUIRED</td></tr><tr><td>GroupIdx</td><td>Group of owning associate at the time tha ppnt was created</td></tr><tr><td>MotherId</td><td>ID of mother appointment; self if booking master, master ID if booking slave, 0 if normal appointment. However, if 0 and assoc_id != reg_id then this is an assigned appointment, indicated vt type = kBooking</td></tr><tr><td>AssignedBy</td><td>Who (last) assigned this appointment to associate_id?</td></tr><tr><td>AppointmentId</td><td>Primary key</td></tr></tbody></table>\n"
  syntax:
    content: public Restriction IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherIdAssignedByAppointmentId(int projectId, AppointmentType type, DateTime activeDate, int documentId, int associateId, int groupIdx, int motherId, int assignedBy, int appointmentId)
    parameters:
    - id: projectId
      type: System.Int32
    - id: type
      type: SuperOffice.Data.AppointmentType
    - id: activeDate
      type: System.DateTime
    - id: documentId
      type: System.Int32
    - id: associateId
      type: System.Int32
    - id: groupIdx
      type: System.Int32
    - id: motherId
      type: System.Int32
    - id: assignedBy
      type: System.Int32
    - id: appointmentId
      type: System.Int32
    return:
      type: SuperOffice.Data.SQL.Restriction
    content.vb: Public Function IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherIdAssignedByAppointmentId(projectId As Integer, type As AppointmentType, activeDate As Date, documentId As Integer, associateId As Integer, groupIdx As Integer, motherId As Integer, assignedBy As Integer, appointmentId As Integer) As Restriction
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherIdAssignedByAppointmentId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherIdAssignedByAppointmentIdRegistered(System.Int32,SuperOffice.Data.AppointmentType,System.DateTime,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTime)
  commentId: M:SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherIdAssignedByAppointmentIdRegistered(System.Int32,SuperOffice.Data.AppointmentType,System.DateTime,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTime)
  id: IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherIdAssignedByAppointmentIdRegistered(System.Int32,SuperOffice.Data.AppointmentType,System.DateTime,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTime)
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherIdAssignedByAppointmentIdRegistered(Int32, AppointmentType, DateTime, Int32, Int32, Int32, Int32, Int32, Int32, DateTime)
  nameWithType: AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherIdAssignedByAppointmentIdRegistered(Int32, AppointmentType, DateTime, Int32, Int32, Int32, Int32, Int32, Int32, DateTime)
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherIdAssignedByAppointmentIdRegistered(System.Int32, SuperOffice.Data.AppointmentType, System.DateTime, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.DateTime)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nShortcut method for looking up using the database index ProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherIdAssignedByAppointmentIdRegistered, which spans the following fields:\n<table><thead><tr><th>Field</th><th>Description</th></tr></thead><tbody><tr><td>ProjectId</td><td>ID of project referred to, may be 0</td></tr><tr><td>Type</td><td>where=no start time,note,docin, docout </td></tr><tr><td>ActiveDate</td><td>The date to be used for searching &amp; showing</td></tr><tr><td>DocumentId</td><td>Points to document record; 0 for non-document appointments!</td></tr><tr><td>AssociateId</td><td>ID of associate whose diary the appointment is in, REQUIRED</td></tr><tr><td>GroupIdx</td><td>Group of owning associate at the time tha ppnt was created</td></tr><tr><td>MotherId</td><td>ID of mother appointment; self if booking master, master ID if booking slave, 0 if normal appointment. However, if 0 and assoc_id != reg_id then this is an assigned appointment, indicated vt type = kBooking</td></tr><tr><td>AssignedBy</td><td>Who (last) assigned this appointment to associate_id?</td></tr><tr><td>AppointmentId</td><td>Primary key</td></tr><tr><td>Registered</td><td>Registered date</td></tr></tbody></table>\n"
  syntax:
    content: public Restriction IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherIdAssignedByAppointmentIdRegistered(int projectId, AppointmentType type, DateTime activeDate, int documentId, int associateId, int groupIdx, int motherId, int assignedBy, int appointmentId, DateTime registered)
    parameters:
    - id: projectId
      type: System.Int32
    - id: type
      type: SuperOffice.Data.AppointmentType
    - id: activeDate
      type: System.DateTime
    - id: documentId
      type: System.Int32
    - id: associateId
      type: System.Int32
    - id: groupIdx
      type: System.Int32
    - id: motherId
      type: System.Int32
    - id: assignedBy
      type: System.Int32
    - id: appointmentId
      type: System.Int32
    - id: registered
      type: System.DateTime
    return:
      type: SuperOffice.Data.SQL.Restriction
    content.vb: Public Function IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherIdAssignedByAppointmentIdRegistered(projectId As Integer, type As AppointmentType, activeDate As Date, documentId As Integer, associateId As Integer, groupIdx As Integer, motherId As Integer, assignedBy As Integer, appointmentId As Integer, registered As Date) As Restriction
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherIdAssignedByAppointmentIdRegistered*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.DictionaryTableNumber
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.DictionaryTableNumber
  id: DictionaryTableNumber
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: DictionaryTableNumber
  nameWithType: AppointmentTableInfo.DictionaryTableNumber
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.DictionaryTableNumber
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nTable number for table Appointment in the database dictionary; potentially changes between databases, but\nalways the same over the lifetime of any single database\n"
  syntax:
    content: public int DictionaryTableNumber { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property DictionaryTableNumber As Integer
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.DictionaryTableNumber*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.RuntimeDefinition
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.RuntimeDefinition
  id: RuntimeDefinition
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: RuntimeDefinition
  nameWithType: AppointmentTableInfo.RuntimeDefinition
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.RuntimeDefinition
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nDefinition of the table as described in the deployed runtime dictionary\n"
  syntax:
    content: >-
      [Obsolete("Use instance property Definition or static member DictionaryTableNumber", true)]

      public static SoTable RuntimeDefinition { get; }
    parameters: []
    return:
      type: SuperOffice.Data.Dictionary.SoTable
    content.vb: >-
      <Obsolete("Use instance property Definition or static member DictionaryTableNumber", True)>

      Public Shared ReadOnly Property RuntimeDefinition As SoTable
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.RuntimeDefinition*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: Use instance property Definition or static member DictionaryTableNumber
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.Definition
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.Definition
  id: Definition
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: Definition
  nameWithType: AppointmentTableInfo.Definition
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.Definition
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nDefinition of the table as described in the deployed runtime dictionary\n"
  syntax:
    content: public override SoTable Definition { get; }
    parameters: []
    return:
      type: SuperOffice.Data.Dictionary.SoTable
    content.vb: Public Overrides ReadOnly Property Definition As SoTable
  overridden: SuperOffice.Data.SQL.TableInfo.Definition
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.Definition*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.AppointmentId
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.AppointmentId
  id: AppointmentId
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: AppointmentId
  nameWithType: AppointmentTableInfo.AppointmentId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.AppointmentId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;appointment_id&apos; in table &apos;appointment&apos;: Dictionary type PK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nPrimary key\n"
  syntax:
    content: public Int32FieldInfo AppointmentId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property AppointmentId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.AppointmentId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.ContactId
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.ContactId
  id: ContactId
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: ContactId
  nameWithType: AppointmentTableInfo.ContactId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.ContactId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;contact_id&apos; in table &apos;appointment&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nContact ID of owning contact, may be 0\n"
  syntax:
    content: public Int32FieldInfo ContactId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property ContactId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.ContactId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.PersonId
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.PersonId
  id: PersonId
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: PersonId
  nameWithType: AppointmentTableInfo.PersonId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.PersonId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;person_id&apos; in table &apos;appointment&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nPerson ID of person the appointment is with, may be 0\n"
  syntax:
    content: public Int32FieldInfo PersonId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property PersonId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.PersonId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.AssociateId
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.AssociateId
  id: AssociateId
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: AssociateId
  nameWithType: AppointmentTableInfo.AssociateId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.AssociateId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;associate_id&apos; in table &apos;appointment&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nID of associate whose diary the appointment is in, REQUIRED\n"
  syntax:
    content: public Int32FieldInfo AssociateId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property AssociateId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.AssociateId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.GroupIdx
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.GroupIdx
  id: GroupIdx
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: GroupIdx
  nameWithType: AppointmentTableInfo.GroupIdx
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.GroupIdx
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;group_idx&apos; in table &apos;appointment&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nGroup of owning associate at the time tha ppnt was created\n"
  syntax:
    content: public Int32FieldInfo GroupIdx { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property GroupIdx As Int32FieldInfo
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.GroupIdx*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.Registered
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.Registered
  id: Registered
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: Registered
  nameWithType: AppointmentTableInfo.Registered
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.Registered
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;registered&apos; in table &apos;appointment&apos;: Dictionary type UtcDateTime, .NET type: <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nRegistered date\n"
  syntax:
    content: public DateTimeFieldInfo Registered { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.DateTimeFieldInfo
    content.vb: Public ReadOnly Property Registered As DateTimeFieldInfo
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.Registered*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.RegisteredAssociateId
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.RegisteredAssociateId
  id: RegisteredAssociateId
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: RegisteredAssociateId
  nameWithType: AppointmentTableInfo.RegisteredAssociateId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.RegisteredAssociateId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;registered_associate_id&apos; in table &apos;appointment&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nRegistered by whom\n"
  syntax:
    content: public Int32FieldInfo RegisteredAssociateId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property RegisteredAssociateId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.RegisteredAssociateId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.Done
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.Done
  id: Done
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: Done
  nameWithType: AppointmentTableInfo.Done
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.Done
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;done&apos; in table &apos;appointment&apos;: Dictionary type DateTime, .NET type: <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref><p></p>\ndate + start time this task was done\n"
  syntax:
    content: public DateTimeFieldInfo Done { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.DateTimeFieldInfo
    content.vb: Public ReadOnly Property Done As DateTimeFieldInfo
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.Done*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.DoBy
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.DoBy
  id: DoBy
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: DoBy
  nameWithType: AppointmentTableInfo.DoBy
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.DoBy
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;do_by&apos; in table &apos;appointment&apos;: Dictionary type DateTime, .NET type: <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref><p></p>\ndate + start time planned\n"
  syntax:
    content: public DateTimeFieldInfo DoBy { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.DateTimeFieldInfo
    content.vb: Public ReadOnly Property DoBy As DateTimeFieldInfo
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.DoBy*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.Leadtime
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.Leadtime
  id: Leadtime
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: Leadtime
  nameWithType: AppointmentTableInfo.Leadtime
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.Leadtime
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;leadtime&apos; in table &apos;appointment&apos;: Dictionary type UShort, .NET type: <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nTime blocked (minutes) BEFORE starttime\n"
  syntax:
    content: public UInt16FieldInfo Leadtime { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.UInt16FieldInfo
    content.vb: Public ReadOnly Property Leadtime As UInt16FieldInfo
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.Leadtime*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.TaskIdx
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.TaskIdx
  id: TaskIdx
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: TaskIdx
  nameWithType: AppointmentTableInfo.TaskIdx
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.TaskIdx
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;task_idx&apos; in table &apos;appointment&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nLink to Task list, OR to DocTmpl list, if this is a document\n"
  syntax:
    content: public Int32FieldInfo TaskIdx { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property TaskIdx As Int32FieldInfo
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.TaskIdx*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.PriorityIdx
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.PriorityIdx
  id: PriorityIdx
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: PriorityIdx
  nameWithType: AppointmentTableInfo.PriorityIdx
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.PriorityIdx
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;priority_idx&apos; in table &apos;appointment&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nLink to priority list\n"
  syntax:
    content: public Int32FieldInfo PriorityIdx { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property PriorityIdx As Int32FieldInfo
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.PriorityIdx*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.Type
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.Type
  id: Type
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: AppointmentTableInfo.Type
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.Type
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;type&apos; in table &apos;appointment&apos;: Dictionary type Enum, .NET type: <xref href=\"SuperOffice.Data.AppointmentType\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nwhere=no start time,note,docin, docout \n"
  syntax:
    content: public AppointmentTypeFieldInfo Type { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.AppointmentTypeFieldInfo
    content.vb: Public ReadOnly Property Type As AppointmentTypeFieldInfo
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.Type*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.Status
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.Status
  id: Status
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: AppointmentTableInfo.Status
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.Status
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;status&apos; in table &apos;appointment&apos;: Dictionary type Enum, .NET type: <xref href=\"SuperOffice.Data.AppointmentStatus\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nstatus=done,started, not started, hidden\n"
  syntax:
    content: public AppointmentStatusFieldInfo Status { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.AppointmentStatusFieldInfo
    content.vb: Public ReadOnly Property Status As AppointmentStatusFieldInfo
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.Status*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.Private
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.Private
  id: Private
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: Private
  nameWithType: AppointmentTableInfo.Private
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.Private
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;private&apos; in table &apos;appointment&apos;: Dictionary type Enum, .NET type: <xref href=\"SuperOffice.Data.AppointmentPrivate\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nObsolete, but still maintained field for appointment privacy; denormalization of visiblefor status\n"
  syntax:
    content: public AppointmentPrivateFieldInfo Private { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.AppointmentPrivateFieldInfo
    content.vb: Public ReadOnly Property Private As AppointmentPrivateFieldInfo
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.Private*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.Alarm
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.Alarm
  id: Alarm
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: Alarm
  nameWithType: AppointmentTableInfo.Alarm
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.Alarm
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;alarm&apos; in table &apos;appointment&apos;: Dictionary type UShort, .NET type: <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nAlarm leadtime, the alarm flag has moved to hasAlarm\n"
  syntax:
    content: public UInt16FieldInfo Alarm { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.UInt16FieldInfo
    content.vb: Public ReadOnly Property Alarm As UInt16FieldInfo
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.Alarm*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.TextId
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.TextId
  id: TextId
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: TextId
  nameWithType: AppointmentTableInfo.TextId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.TextId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;text_id&apos; in table &apos;appointment&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nID of record containing appointment text\n"
  syntax:
    content: public Int32FieldInfo TextId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property TextId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.TextId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.ProjectId
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.ProjectId
  id: ProjectId
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: ProjectId
  nameWithType: AppointmentTableInfo.ProjectId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.ProjectId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;project_id&apos; in table &apos;appointment&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nID of project referred to, may be 0\n"
  syntax:
    content: public Int32FieldInfo ProjectId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property ProjectId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.ProjectId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.MotherId
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.MotherId
  id: MotherId
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: MotherId
  nameWithType: AppointmentTableInfo.MotherId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.MotherId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;mother_id&apos; in table &apos;appointment&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nID of mother appointment; self if booking master, master ID if booking slave, 0 if normal appointment. However, if 0 and assoc_id != reg_id then this is an assigned appointment, indicated vt type = kBooking\n"
  syntax:
    content: public Int32FieldInfo MotherId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property MotherId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.MotherId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.DocumentId
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.DocumentId
  id: DocumentId
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: DocumentId
  nameWithType: AppointmentTableInfo.DocumentId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.DocumentId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;document_id&apos; in table &apos;appointment&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nPoints to document record; 0 for non-document appointments!\n"
  syntax:
    content: public Int32FieldInfo DocumentId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property DocumentId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.DocumentId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.ColorIndex
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.ColorIndex
  id: ColorIndex
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: ColorIndex
  nameWithType: AppointmentTableInfo.ColorIndex
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.ColorIndex
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;color_index&apos; in table &apos;appointment&apos;: Dictionary type UShort, .NET type: <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nAppointment colour, used only in Japanese versions. Western versions take colour from Task\n"
  syntax:
    content: public UInt16FieldInfo ColorIndex { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.UInt16FieldInfo
    content.vb: Public ReadOnly Property ColorIndex As UInt16FieldInfo
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.ColorIndex*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.InvitedPersonId
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.InvitedPersonId
  id: InvitedPersonId
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: InvitedPersonId
  nameWithType: AppointmentTableInfo.InvitedPersonId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.InvitedPersonId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;invitedPersonId&apos; in table &apos;appointment&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nValid when mother_id != 0 &amp;&amp; mother_id != id\n"
  syntax:
    content: public Int32FieldInfo InvitedPersonId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property InvitedPersonId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.InvitedPersonId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.ActiveDate
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.ActiveDate
  id: ActiveDate
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: ActiveDate
  nameWithType: AppointmentTableInfo.ActiveDate
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.ActiveDate
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;activeDate&apos; in table &apos;appointment&apos;: Dictionary type DateTime, .NET type: <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nThe date to be used for searching &amp; showing\n"
  syntax:
    content: public DateTimeFieldInfo ActiveDate { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.DateTimeFieldInfo
    content.vb: Public ReadOnly Property ActiveDate As DateTimeFieldInfo
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.ActiveDate*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.EndDate
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.EndDate
  id: EndDate
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: EndDate
  nameWithType: AppointmentTableInfo.EndDate
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.EndDate
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;endDate&apos; in table &apos;appointment&apos;: Dictionary type DateTime, .NET type: <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nDate + end time planned\n"
  syntax:
    content: public DateTimeFieldInfo EndDate { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.DateTimeFieldInfo
    content.vb: Public ReadOnly Property EndDate As DateTimeFieldInfo
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.EndDate*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.LagTime
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.LagTime
  id: LagTime
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: LagTime
  nameWithType: AppointmentTableInfo.LagTime
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.LagTime
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;lagTime&apos; in table &apos;appointment&apos;: Dictionary type UShort, .NET type: <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nas leadtime, but after the end - time blocked for travel etc.\n"
  syntax:
    content: public UInt16FieldInfo LagTime { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.UInt16FieldInfo
    content.vb: Public ReadOnly Property LagTime As UInt16FieldInfo
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.LagTime*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.Source
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.Source
  id: Source
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: AppointmentTableInfo.Source
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.Source
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;source&apos; in table &apos;appointment&apos;: Dictionary type UShort, .NET type: <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nFor future integration use; source of record\n"
  syntax:
    content: public UInt16FieldInfo Source { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.UInt16FieldInfo
    content.vb: Public ReadOnly Property Source As UInt16FieldInfo
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.Source*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.UserdefId
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.UserdefId
  id: UserdefId
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: UserdefId
  nameWithType: AppointmentTableInfo.UserdefId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.UserdefId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;userdef_id&apos; in table &apos;appointment&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nUser defined table record 1 (for future use)\n"
  syntax:
    content: public Int32FieldInfo UserdefId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property UserdefId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.UserdefId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.Userdef2Id
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.Userdef2Id
  id: Userdef2Id
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: Userdef2Id
  nameWithType: AppointmentTableInfo.Userdef2Id
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.Userdef2Id
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;userdef2_id&apos; in table &apos;appointment&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nUser defined table record 2 (for future use)\n"
  syntax:
    content: public Int32FieldInfo Userdef2Id { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property Userdef2Id As Int32FieldInfo
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.Userdef2Id*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.Updated
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.Updated
  id: Updated
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: Updated
  nameWithType: AppointmentTableInfo.Updated
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.Updated
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;updated&apos; in table &apos;appointment&apos;: Dictionary type UtcDateTime, .NET type: <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nUpdated date\n"
  syntax:
    content: public DateTimeFieldInfo Updated { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.DateTimeFieldInfo
    content.vb: Public ReadOnly Property Updated As DateTimeFieldInfo
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.Updated*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.UpdatedAssociateId
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.UpdatedAssociateId
  id: UpdatedAssociateId
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: UpdatedAssociateId
  nameWithType: AppointmentTableInfo.UpdatedAssociateId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.UpdatedAssociateId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;updated_associate_id&apos; in table &apos;appointment&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nUpdated by who\n"
  syntax:
    content: public Int32FieldInfo UpdatedAssociateId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property UpdatedAssociateId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.UpdatedAssociateId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.UpdatedCount
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.UpdatedCount
  id: UpdatedCount
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: UpdatedCount
  nameWithType: AppointmentTableInfo.UpdatedCount
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.UpdatedCount
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;updatedCount&apos; in table &apos;appointment&apos;: Dictionary type UShort, .NET type: <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nNumber of updates made to this record\n"
  syntax:
    content: public UInt16FieldInfo UpdatedCount { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.UInt16FieldInfo
    content.vb: Public ReadOnly Property UpdatedCount As UInt16FieldInfo
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.UpdatedCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.ActiveLinks
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.ActiveLinks
  id: ActiveLinks
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: ActiveLinks
  nameWithType: AppointmentTableInfo.ActiveLinks
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.ActiveLinks
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;activeLinks&apos; in table &apos;appointment&apos;: Dictionary type UInt, .NET type: <xref href=\"System.UInt32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nNumber of active links to documents, other appointments, and such\n"
  syntax:
    content: public FieldInfo ActiveLinks { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.FieldInfo
    content.vb: Public ReadOnly Property ActiveLinks As FieldInfo
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.ActiveLinks*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.RecurrenceRuleId
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.RecurrenceRuleId
  id: RecurrenceRuleId
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: RecurrenceRuleId
  nameWithType: AppointmentTableInfo.RecurrenceRuleId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.RecurrenceRuleId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;recurrenceRuleId&apos; in table &apos;appointment&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nPointer to recurrence rule, for recurring appointments, otherwise 0\n"
  syntax:
    content: public Int32FieldInfo RecurrenceRuleId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property RecurrenceRuleId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.RecurrenceRuleId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.Location
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.Location
  id: Location
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: Location
  nameWithType: AppointmentTableInfo.Location
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.Location
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;location&apos; in table &apos;appointment&apos;: Dictionary type String[255], .NET type: <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nLocation for appointment, defaulted from invited resource of type place and other rules, but you can write anything you want here\n"
  syntax:
    content: public StringFieldInfo Location { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.StringFieldInfo
    content.vb: Public ReadOnly Property Location As StringFieldInfo
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.Location*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.AlldayEvent
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.AlldayEvent
  id: AlldayEvent
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: AlldayEvent
  nameWithType: AppointmentTableInfo.AlldayEvent
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.AlldayEvent
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;alldayEvent&apos; in table &apos;appointment&apos;: Dictionary type Enum, .NET type: <xref href=\"SuperOffice.Data.AllDayEvent\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nIs this an all day event: 0 = No, 1 = Yes\n"
  syntax:
    content: public AllDayEventFieldInfo AlldayEvent { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.AllDayEventFieldInfo
    content.vb: Public ReadOnly Property AlldayEvent As AllDayEventFieldInfo
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.AlldayEvent*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.FreeBusy
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.FreeBusy
  id: FreeBusy
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: FreeBusy
  nameWithType: AppointmentTableInfo.FreeBusy
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.FreeBusy
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;freeBusy&apos; in table &apos;appointment&apos;: Dictionary type Enum, .NET type: <xref href=\"SuperOffice.CRM.Data.AppointmentTableInfo.FreeBusy\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nWhat kind of time is this: 0 = Busy, 1 = Free\n"
  syntax:
    content: public FreeBusyFieldInfo FreeBusy { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.FreeBusyFieldInfo
    content.vb: Public ReadOnly Property FreeBusy As FreeBusyFieldInfo
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.FreeBusy*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.RejectCounter
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.RejectCounter
  id: RejectCounter
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: RejectCounter
  nameWithType: AppointmentTableInfo.RejectCounter
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.RejectCounter
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;rejectCounter&apos; in table &apos;appointment&apos;: Dictionary type UShort, .NET type: <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nHow many invitees have rejected this appointment\n"
  syntax:
    content: public UInt16FieldInfo RejectCounter { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.UInt16FieldInfo
    content.vb: Public ReadOnly Property RejectCounter As UInt16FieldInfo
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.RejectCounter*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.EmailId
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.EmailId
  id: EmailId
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: EmailId
  nameWithType: AppointmentTableInfo.EmailId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.EmailId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;emailId&apos; in table &apos;appointment&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nIf invitation and status changes should be mailed, this is the ID of the email address used\n"
  syntax:
    content: public Int32FieldInfo EmailId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property EmailId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.EmailId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.RejectReason
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.RejectReason
  id: RejectReason
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: RejectReason
  nameWithType: AppointmentTableInfo.RejectReason
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.RejectReason
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;rejectReason&apos; in table &apos;appointment&apos;: Dictionary type String[255], .NET type: <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nWhy was this booking or assignment rejected, the RejectReason list is a source of suggestions but you can write anything here\n"
  syntax:
    content: public StringFieldInfo RejectReason { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.StringFieldInfo
    content.vb: Public ReadOnly Property RejectReason As StringFieldInfo
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.RejectReason*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.HasAlarm
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.HasAlarm
  id: HasAlarm
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: HasAlarm
  nameWithType: AppointmentTableInfo.HasAlarm
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.HasAlarm
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;hasAlarm&apos; in table &apos;appointment&apos;: Dictionary type Bool, .NET type: <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nDoes this appointment have an alarm\n"
  syntax:
    content: public UInt16FieldInfo HasAlarm { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.UInt16FieldInfo
    content.vb: Public ReadOnly Property HasAlarm As UInt16FieldInfo
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.HasAlarm*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.AssignedBy
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.AssignedBy
  id: AssignedBy
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: AssignedBy
  nameWithType: AppointmentTableInfo.AssignedBy
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.AssignedBy
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;assignedBy&apos; in table &apos;appointment&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nWho (last) assigned this appointment to associate_id?\n"
  syntax:
    content: public Int32FieldInfo AssignedBy { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property AssignedBy As Int32FieldInfo
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.AssignedBy*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.PreferredTZLocation
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.PreferredTZLocation
  id: PreferredTZLocation
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: PreferredTZLocation
  nameWithType: AppointmentTableInfo.PreferredTZLocation
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.PreferredTZLocation
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;preferredTZLocation&apos; in table &apos;appointment&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nPreferred timezone location to use when displaying/editing this appointment\n"
  syntax:
    content: public Int32FieldInfo PreferredTZLocation { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property PreferredTZLocation As Int32FieldInfo
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.PreferredTZLocation*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.SaleId
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.SaleId
  id: SaleId
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: SaleId
  nameWithType: AppointmentTableInfo.SaleId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.SaleId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;sale_id&apos; in table &apos;appointment&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nOwning sale, if any (may be 0)\n"
  syntax:
    content: public Int32FieldInfo SaleId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property SaleId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.SaleId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.SuggestedAppointmentId
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.SuggestedAppointmentId
  id: SuggestedAppointmentId
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: SuggestedAppointmentId
  nameWithType: AppointmentTableInfo.SuggestedAppointmentId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.SuggestedAppointmentId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;suggestedAppointmentId&apos; in table &apos;appointment&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nSuggested guide item that this appointment is an instance of (Note: NOT VALID for document-type appointments, they have their own link)\n"
  syntax:
    content: public Int32FieldInfo SuggestedAppointmentId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property SuggestedAppointmentId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.SuggestedAppointmentId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.SuggestedDocumentId
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.SuggestedDocumentId
  id: SuggestedDocumentId
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: SuggestedDocumentId
  nameWithType: AppointmentTableInfo.SuggestedDocumentId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.SuggestedDocumentId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;suggestedDocumentId&apos; in table &apos;appointment&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nSuggested guide item that this document is an instance of (Note: NOT valid for appointments, they have their own link)\n"
  syntax:
    content: public Int32FieldInfo SuggestedDocumentId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property SuggestedDocumentId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.SuggestedDocumentId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IsMilestone
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.IsMilestone
  id: IsMilestone
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: IsMilestone
  nameWithType: AppointmentTableInfo.IsMilestone
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IsMilestone
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;isMilestone&apos; in table &apos;appointment&apos;: Dictionary type Bool, .NET type: <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nIs this appointment a milestone?\n"
  syntax:
    content: public UInt16FieldInfo IsMilestone { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.UInt16FieldInfo
    content.vb: Public ReadOnly Property IsMilestone As UInt16FieldInfo
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.IsMilestone*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.JoinVideomeetUrl
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.JoinVideomeetUrl
  id: JoinVideomeetUrl
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: JoinVideomeetUrl
  nameWithType: AppointmentTableInfo.JoinVideomeetUrl
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.JoinVideomeetUrl
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;join_videomeet_url&apos; in table &apos;appointment&apos;: Dictionary type String[2001], .NET type: <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nBlank when not a video meeting. Filled with Join Meeting URL when created.\n"
  syntax:
    content: public StringFieldInfo JoinVideomeetUrl { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.StringFieldInfo
    content.vb: Public ReadOnly Property JoinVideomeetUrl As StringFieldInfo
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.JoinVideomeetUrl*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.CentralserviceVideomeetId
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.CentralserviceVideomeetId
  id: CentralserviceVideomeetId
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: CentralserviceVideomeetId
  nameWithType: AppointmentTableInfo.CentralserviceVideomeetId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.CentralserviceVideomeetId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;centralservice_videomeet_id&apos; in table &apos;appointment&apos;: Dictionary type String[101], .NET type: <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nGUID for video meeting in central services – this is set when we create meetings from SuperOffice. It is blank for incoming meetings created from inbox.\n"
  syntax:
    content: public StringFieldInfo CentralserviceVideomeetId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.StringFieldInfo
    content.vb: Public ReadOnly Property CentralserviceVideomeetId As StringFieldInfo
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.CentralserviceVideomeetId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.OriginalStartDate
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.OriginalStartDate
  id: OriginalStartDate
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: OriginalStartDate
  nameWithType: AppointmentTableInfo.OriginalStartDate
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.OriginalStartDate
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;original_start_date&apos; in table &apos;appointment&apos;: Dictionary type DateTime, .NET type: <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nThe original start date for an appointment in a recurring series\n"
  syntax:
    content: public DateTimeFieldInfo OriginalStartDate { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.DateTimeFieldInfo
    content.vb: Public ReadOnly Property OriginalStartDate As DateTimeFieldInfo
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.OriginalStartDate*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.CautionWarning
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.CautionWarning
  id: CautionWarning
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: CautionWarning
  nameWithType: AppointmentTableInfo.CautionWarning
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.CautionWarning
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;cautionWarning&apos; in table &apos;appointment&apos;: Dictionary type Enum, .NET type: <xref href=\"SuperOffice.Data.AppointmentCautionWarning\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nStatus field to indicate appointments that have some sort of problem\n"
  syntax:
    content: public AppointmentCautionWarningFieldInfo CautionWarning { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.AppointmentCautionWarningFieldInfo
    content.vb: Public ReadOnly Property CautionWarning As AppointmentCautionWarningFieldInfo
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.CautionWarning*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.MotherAssociateId
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.MotherAssociateId
  id: MotherAssociateId
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: MotherAssociateId
  nameWithType: AppointmentTableInfo.MotherAssociateId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.MotherAssociateId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;mother_associate_id&apos; in table &apos;appointment&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nAssociate/owner of the mother appointment\n"
  syntax:
    content: public Int32FieldInfo MotherAssociateId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property MotherAssociateId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.MotherAssociateId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.ContactId_InnerJoin_Contact
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.ContactId_InnerJoin_Contact
  id: ContactId_InnerJoin_Contact
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: ContactId_InnerJoin_Contact
  nameWithType: AppointmentTableInfo.ContactId_InnerJoin_Contact
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.ContactId_InnerJoin_Contact
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key ContactId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.ContactTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<ContactTableInfo> ContactId_InnerJoin_Contact { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.ContactTableInfo}
    content.vb: Public ReadOnly Property ContactId_InnerJoin_Contact As TargetedInnerJoin(Of ContactTableInfo)
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.ContactId_InnerJoin_Contact*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.PersonId_InnerJoin_Person
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.PersonId_InnerJoin_Person
  id: PersonId_InnerJoin_Person
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: PersonId_InnerJoin_Person
  nameWithType: AppointmentTableInfo.PersonId_InnerJoin_Person
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.PersonId_InnerJoin_Person
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key PersonId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.PersonTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<PersonTableInfo> PersonId_InnerJoin_Person { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.PersonTableInfo}
    content.vb: Public ReadOnly Property PersonId_InnerJoin_Person As TargetedInnerJoin(Of PersonTableInfo)
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.PersonId_InnerJoin_Person*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.AssociateId_InnerJoin_Associate
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.AssociateId_InnerJoin_Associate
  id: AssociateId_InnerJoin_Associate
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: AssociateId_InnerJoin_Associate
  nameWithType: AppointmentTableInfo.AssociateId_InnerJoin_Associate
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.AssociateId_InnerJoin_Associate
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key AssociateId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.AssociateTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<AssociateTableInfo> AssociateId_InnerJoin_Associate { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.AssociateTableInfo}
    content.vb: Public ReadOnly Property AssociateId_InnerJoin_Associate As TargetedInnerJoin(Of AssociateTableInfo)
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.AssociateId_InnerJoin_Associate*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.GroupIdx_InnerJoin_UserGroup
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.GroupIdx_InnerJoin_UserGroup
  id: GroupIdx_InnerJoin_UserGroup
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: GroupIdx_InnerJoin_UserGroup
  nameWithType: AppointmentTableInfo.GroupIdx_InnerJoin_UserGroup
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.GroupIdx_InnerJoin_UserGroup
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key GroupIdx in this table, to its target table <xref href=\"SuperOffice.CRM.Data.UserGroupTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<UserGroupTableInfo> GroupIdx_InnerJoin_UserGroup { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.UserGroupTableInfo}
    content.vb: Public ReadOnly Property GroupIdx_InnerJoin_UserGroup As TargetedInnerJoin(Of UserGroupTableInfo)
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.GroupIdx_InnerJoin_UserGroup*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.RegisteredAssociateId_InnerJoin_Associate
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.RegisteredAssociateId_InnerJoin_Associate
  id: RegisteredAssociateId_InnerJoin_Associate
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: RegisteredAssociateId_InnerJoin_Associate
  nameWithType: AppointmentTableInfo.RegisteredAssociateId_InnerJoin_Associate
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.RegisteredAssociateId_InnerJoin_Associate
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key RegisteredAssociateId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.AssociateTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<AssociateTableInfo> RegisteredAssociateId_InnerJoin_Associate { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.AssociateTableInfo}
    content.vb: Public ReadOnly Property RegisteredAssociateId_InnerJoin_Associate As TargetedInnerJoin(Of AssociateTableInfo)
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.RegisteredAssociateId_InnerJoin_Associate*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.TaskIdx_InnerJoin_Task
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.TaskIdx_InnerJoin_Task
  id: TaskIdx_InnerJoin_Task
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: TaskIdx_InnerJoin_Task
  nameWithType: AppointmentTableInfo.TaskIdx_InnerJoin_Task
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.TaskIdx_InnerJoin_Task
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key TaskIdx in this table, to its target table <xref href=\"SuperOffice.CRM.Data.TaskTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<TaskTableInfo> TaskIdx_InnerJoin_Task { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.TaskTableInfo}
    content.vb: Public ReadOnly Property TaskIdx_InnerJoin_Task As TargetedInnerJoin(Of TaskTableInfo)
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.TaskIdx_InnerJoin_Task*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.PriorityIdx_InnerJoin_Priority
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.PriorityIdx_InnerJoin_Priority
  id: PriorityIdx_InnerJoin_Priority
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: PriorityIdx_InnerJoin_Priority
  nameWithType: AppointmentTableInfo.PriorityIdx_InnerJoin_Priority
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.PriorityIdx_InnerJoin_Priority
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key PriorityIdx in this table, to its target table <xref href=\"SuperOffice.CRM.Data.PriorityTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<PriorityTableInfo> PriorityIdx_InnerJoin_Priority { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.PriorityTableInfo}
    content.vb: Public ReadOnly Property PriorityIdx_InnerJoin_Priority As TargetedInnerJoin(Of PriorityTableInfo)
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.PriorityIdx_InnerJoin_Priority*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.TextId_InnerJoin_Text
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.TextId_InnerJoin_Text
  id: TextId_InnerJoin_Text
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: TextId_InnerJoin_Text
  nameWithType: AppointmentTableInfo.TextId_InnerJoin_Text
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.TextId_InnerJoin_Text
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key TextId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.TextTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<TextTableInfo> TextId_InnerJoin_Text { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.TextTableInfo}
    content.vb: Public ReadOnly Property TextId_InnerJoin_Text As TargetedInnerJoin(Of TextTableInfo)
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.TextId_InnerJoin_Text*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.ProjectId_InnerJoin_Project
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.ProjectId_InnerJoin_Project
  id: ProjectId_InnerJoin_Project
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: ProjectId_InnerJoin_Project
  nameWithType: AppointmentTableInfo.ProjectId_InnerJoin_Project
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.ProjectId_InnerJoin_Project
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key ProjectId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.ProjectTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<ProjectTableInfo> ProjectId_InnerJoin_Project { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.ProjectTableInfo}
    content.vb: Public ReadOnly Property ProjectId_InnerJoin_Project As TargetedInnerJoin(Of ProjectTableInfo)
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.ProjectId_InnerJoin_Project*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.MotherId_InnerJoin_Appointment
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.MotherId_InnerJoin_Appointment
  id: MotherId_InnerJoin_Appointment
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: MotherId_InnerJoin_Appointment
  nameWithType: AppointmentTableInfo.MotherId_InnerJoin_Appointment
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.MotherId_InnerJoin_Appointment
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key MotherId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.AppointmentTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<AppointmentTableInfo> MotherId_InnerJoin_Appointment { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.AppointmentTableInfo}
    content.vb: Public ReadOnly Property MotherId_InnerJoin_Appointment As TargetedInnerJoin(Of AppointmentTableInfo)
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.MotherId_InnerJoin_Appointment*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.DocumentId_InnerJoin_Document
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.DocumentId_InnerJoin_Document
  id: DocumentId_InnerJoin_Document
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: DocumentId_InnerJoin_Document
  nameWithType: AppointmentTableInfo.DocumentId_InnerJoin_Document
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.DocumentId_InnerJoin_Document
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key DocumentId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.DocumentTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<DocumentTableInfo> DocumentId_InnerJoin_Document { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.DocumentTableInfo}
    content.vb: Public ReadOnly Property DocumentId_InnerJoin_Document As TargetedInnerJoin(Of DocumentTableInfo)
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.DocumentId_InnerJoin_Document*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.InvitedPersonId_InnerJoin_Person
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.InvitedPersonId_InnerJoin_Person
  id: InvitedPersonId_InnerJoin_Person
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: InvitedPersonId_InnerJoin_Person
  nameWithType: AppointmentTableInfo.InvitedPersonId_InnerJoin_Person
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.InvitedPersonId_InnerJoin_Person
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key InvitedPersonId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.PersonTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<PersonTableInfo> InvitedPersonId_InnerJoin_Person { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.PersonTableInfo}
    content.vb: Public ReadOnly Property InvitedPersonId_InnerJoin_Person As TargetedInnerJoin(Of PersonTableInfo)
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.InvitedPersonId_InnerJoin_Person*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.UserdefId_InnerJoin_UDAppntSmall
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.UserdefId_InnerJoin_UDAppntSmall
  id: UserdefId_InnerJoin_UDAppntSmall
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: UserdefId_InnerJoin_UDAppntSmall
  nameWithType: AppointmentTableInfo.UserdefId_InnerJoin_UDAppntSmall
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.UserdefId_InnerJoin_UDAppntSmall
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key UserdefId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.UDAppntSmallTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<UDAppntSmallTableInfo> UserdefId_InnerJoin_UDAppntSmall { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.UDAppntSmallTableInfo}
    content.vb: Public ReadOnly Property UserdefId_InnerJoin_UDAppntSmall As TargetedInnerJoin(Of UDAppntSmallTableInfo)
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.UserdefId_InnerJoin_UDAppntSmall*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.Userdef2Id_InnerJoin_UDAppntLarge
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.Userdef2Id_InnerJoin_UDAppntLarge
  id: Userdef2Id_InnerJoin_UDAppntLarge
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: Userdef2Id_InnerJoin_UDAppntLarge
  nameWithType: AppointmentTableInfo.Userdef2Id_InnerJoin_UDAppntLarge
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.Userdef2Id_InnerJoin_UDAppntLarge
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key Userdef2Id in this table, to its target table <xref href=\"SuperOffice.CRM.Data.UDAppntLargeTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<UDAppntLargeTableInfo> Userdef2Id_InnerJoin_UDAppntLarge { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.UDAppntLargeTableInfo}
    content.vb: Public ReadOnly Property Userdef2Id_InnerJoin_UDAppntLarge As TargetedInnerJoin(Of UDAppntLargeTableInfo)
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.Userdef2Id_InnerJoin_UDAppntLarge*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.UpdatedAssociateId_InnerJoin_Associate
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.UpdatedAssociateId_InnerJoin_Associate
  id: UpdatedAssociateId_InnerJoin_Associate
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: UpdatedAssociateId_InnerJoin_Associate
  nameWithType: AppointmentTableInfo.UpdatedAssociateId_InnerJoin_Associate
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.UpdatedAssociateId_InnerJoin_Associate
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key UpdatedAssociateId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.AssociateTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<AssociateTableInfo> UpdatedAssociateId_InnerJoin_Associate { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.AssociateTableInfo}
    content.vb: Public ReadOnly Property UpdatedAssociateId_InnerJoin_Associate As TargetedInnerJoin(Of AssociateTableInfo)
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.UpdatedAssociateId_InnerJoin_Associate*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.RecurrenceRuleId_InnerJoin_RecurrenceRule
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.RecurrenceRuleId_InnerJoin_RecurrenceRule
  id: RecurrenceRuleId_InnerJoin_RecurrenceRule
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: RecurrenceRuleId_InnerJoin_RecurrenceRule
  nameWithType: AppointmentTableInfo.RecurrenceRuleId_InnerJoin_RecurrenceRule
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.RecurrenceRuleId_InnerJoin_RecurrenceRule
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key RecurrenceRuleId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.RecurrenceRuleTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<RecurrenceRuleTableInfo> RecurrenceRuleId_InnerJoin_RecurrenceRule { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.RecurrenceRuleTableInfo}
    content.vb: Public ReadOnly Property RecurrenceRuleId_InnerJoin_RecurrenceRule As TargetedInnerJoin(Of RecurrenceRuleTableInfo)
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.RecurrenceRuleId_InnerJoin_RecurrenceRule*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.EmailId_InnerJoin_Email
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.EmailId_InnerJoin_Email
  id: EmailId_InnerJoin_Email
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: EmailId_InnerJoin_Email
  nameWithType: AppointmentTableInfo.EmailId_InnerJoin_Email
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.EmailId_InnerJoin_Email
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key EmailId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.EmailTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<EmailTableInfo> EmailId_InnerJoin_Email { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.EmailTableInfo}
    content.vb: Public ReadOnly Property EmailId_InnerJoin_Email As TargetedInnerJoin(Of EmailTableInfo)
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.EmailId_InnerJoin_Email*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.AssignedBy_InnerJoin_Associate
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.AssignedBy_InnerJoin_Associate
  id: AssignedBy_InnerJoin_Associate
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: AssignedBy_InnerJoin_Associate
  nameWithType: AppointmentTableInfo.AssignedBy_InnerJoin_Associate
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.AssignedBy_InnerJoin_Associate
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key AssignedBy in this table, to its target table <xref href=\"SuperOffice.CRM.Data.AssociateTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<AssociateTableInfo> AssignedBy_InnerJoin_Associate { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.AssociateTableInfo}
    content.vb: Public ReadOnly Property AssignedBy_InnerJoin_Associate As TargetedInnerJoin(Of AssociateTableInfo)
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.AssignedBy_InnerJoin_Associate*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.PreferredTZLocation_InnerJoin_TZLocation
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.PreferredTZLocation_InnerJoin_TZLocation
  id: PreferredTZLocation_InnerJoin_TZLocation
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: PreferredTZLocation_InnerJoin_TZLocation
  nameWithType: AppointmentTableInfo.PreferredTZLocation_InnerJoin_TZLocation
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.PreferredTZLocation_InnerJoin_TZLocation
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key PreferredTZLocation in this table, to its target table <xref href=\"SuperOffice.CRM.Data.TZLocationTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<TZLocationTableInfo> PreferredTZLocation_InnerJoin_TZLocation { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.TZLocationTableInfo}
    content.vb: Public ReadOnly Property PreferredTZLocation_InnerJoin_TZLocation As TargetedInnerJoin(Of TZLocationTableInfo)
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.PreferredTZLocation_InnerJoin_TZLocation*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.SaleId_InnerJoin_Sale
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.SaleId_InnerJoin_Sale
  id: SaleId_InnerJoin_Sale
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: SaleId_InnerJoin_Sale
  nameWithType: AppointmentTableInfo.SaleId_InnerJoin_Sale
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.SaleId_InnerJoin_Sale
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key SaleId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.SaleTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<SaleTableInfo> SaleId_InnerJoin_Sale { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.SaleTableInfo}
    content.vb: Public ReadOnly Property SaleId_InnerJoin_Sale As TargetedInnerJoin(Of SaleTableInfo)
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.SaleId_InnerJoin_Sale*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.SuggestedAppointmentId_InnerJoin_SuggestedAppointment
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.SuggestedAppointmentId_InnerJoin_SuggestedAppointment
  id: SuggestedAppointmentId_InnerJoin_SuggestedAppointment
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: SuggestedAppointmentId_InnerJoin_SuggestedAppointment
  nameWithType: AppointmentTableInfo.SuggestedAppointmentId_InnerJoin_SuggestedAppointment
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.SuggestedAppointmentId_InnerJoin_SuggestedAppointment
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key SuggestedAppointmentId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.SuggestedAppointmentTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<SuggestedAppointmentTableInfo> SuggestedAppointmentId_InnerJoin_SuggestedAppointment { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.SuggestedAppointmentTableInfo}
    content.vb: Public ReadOnly Property SuggestedAppointmentId_InnerJoin_SuggestedAppointment As TargetedInnerJoin(Of SuggestedAppointmentTableInfo)
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.SuggestedAppointmentId_InnerJoin_SuggestedAppointment*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.SuggestedDocumentId_InnerJoin_SuggestedDocument
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.SuggestedDocumentId_InnerJoin_SuggestedDocument
  id: SuggestedDocumentId_InnerJoin_SuggestedDocument
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: SuggestedDocumentId_InnerJoin_SuggestedDocument
  nameWithType: AppointmentTableInfo.SuggestedDocumentId_InnerJoin_SuggestedDocument
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.SuggestedDocumentId_InnerJoin_SuggestedDocument
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key SuggestedDocumentId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.SuggestedDocumentTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<SuggestedDocumentTableInfo> SuggestedDocumentId_InnerJoin_SuggestedDocument { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.SuggestedDocumentTableInfo}
    content.vb: Public ReadOnly Property SuggestedDocumentId_InnerJoin_SuggestedDocument As TargetedInnerJoin(Of SuggestedDocumentTableInfo)
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.SuggestedDocumentId_InnerJoin_SuggestedDocument*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.MotherAssociateId_InnerJoin_Associate
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.MotherAssociateId_InnerJoin_Associate
  id: MotherAssociateId_InnerJoin_Associate
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: MotherAssociateId_InnerJoin_Associate
  nameWithType: AppointmentTableInfo.MotherAssociateId_InnerJoin_Associate
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.MotherAssociateId_InnerJoin_Associate
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key MotherAssociateId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.AssociateTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<AssociateTableInfo> MotherAssociateId_InnerJoin_Associate { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.AssociateTableInfo}
    content.vb: Public ReadOnly Property MotherAssociateId_InnerJoin_Associate As TargetedInnerJoin(Of AssociateTableInfo)
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.MotherAssociateId_InnerJoin_Associate*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_Document_AppointmentId
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_Document_AppointmentId
  id: LeftOuterJoin_Document_AppointmentId
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: LeftOuterJoin_Document_AppointmentId
  nameWithType: AppointmentTableInfo.LeftOuterJoin_Document_AppointmentId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_Document_AppointmentId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated left outer join from the primary key AppointmentId on this table, to Document.<xref href=\"SuperOffice.CRM.Data.DocumentTableInfo.AppointmentId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedLeftOuterJoin<DocumentTableInfo> LeftOuterJoin_Document_AppointmentId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.DocumentTableInfo}
    content.vb: Public ReadOnly Property LeftOuterJoin_Document_AppointmentId As TargetedLeftOuterJoin(Of DocumentTableInfo)
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_Document_AppointmentId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_Project_NmdAppointmentId
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_Project_NmdAppointmentId
  id: LeftOuterJoin_Project_NmdAppointmentId
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: LeftOuterJoin_Project_NmdAppointmentId
  nameWithType: AppointmentTableInfo.LeftOuterJoin_Project_NmdAppointmentId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_Project_NmdAppointmentId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated left outer join from the primary key AppointmentId on this table, to Project.<xref href=\"SuperOffice.CRM.Data.ProjectTableInfo.NmdAppointmentId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedLeftOuterJoin<ProjectTableInfo> LeftOuterJoin_Project_NmdAppointmentId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.ProjectTableInfo}
    content.vb: Public ReadOnly Property LeftOuterJoin_Project_NmdAppointmentId As TargetedLeftOuterJoin(Of ProjectTableInfo)
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_Project_NmdAppointmentId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_Sale_AppointmentId
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_Sale_AppointmentId
  id: LeftOuterJoin_Sale_AppointmentId
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: LeftOuterJoin_Sale_AppointmentId
  nameWithType: AppointmentTableInfo.LeftOuterJoin_Sale_AppointmentId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_Sale_AppointmentId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated left outer join from the primary key AppointmentId on this table, to Sale.<xref href=\"SuperOffice.CRM.Data.SaleTableInfo.AppointmentId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedLeftOuterJoin<SaleTableInfo> LeftOuterJoin_Sale_AppointmentId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.SaleTableInfo}
    content.vb: Public ReadOnly Property LeftOuterJoin_Sale_AppointmentId As TargetedLeftOuterJoin(Of SaleTableInfo)
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_Sale_AppointmentId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_Sale_NddAppointmentId
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_Sale_NddAppointmentId
  id: LeftOuterJoin_Sale_NddAppointmentId
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: LeftOuterJoin_Sale_NddAppointmentId
  nameWithType: AppointmentTableInfo.LeftOuterJoin_Sale_NddAppointmentId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_Sale_NddAppointmentId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated left outer join from the primary key AppointmentId on this table, to Sale.<xref href=\"SuperOffice.CRM.Data.SaleTableInfo.NddAppointmentId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedLeftOuterJoin<SaleTableInfo> LeftOuterJoin_Sale_NddAppointmentId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.SaleTableInfo}
    content.vb: Public ReadOnly Property LeftOuterJoin_Sale_NddAppointmentId As TargetedLeftOuterJoin(Of SaleTableInfo)
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_Sale_NddAppointmentId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_QuoteVersion_FollowupId
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_QuoteVersion_FollowupId
  id: LeftOuterJoin_QuoteVersion_FollowupId
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: LeftOuterJoin_QuoteVersion_FollowupId
  nameWithType: AppointmentTableInfo.LeftOuterJoin_QuoteVersion_FollowupId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_QuoteVersion_FollowupId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated left outer join from the primary key AppointmentId on this table, to QuoteVersion.<xref href=\"SuperOffice.CRM.Data.QuoteVersionTableInfo.FollowupId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedLeftOuterJoin<QuoteVersionTableInfo> LeftOuterJoin_QuoteVersion_FollowupId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.QuoteVersionTableInfo}
    content.vb: Public ReadOnly Property LeftOuterJoin_QuoteVersion_FollowupId As TargetedLeftOuterJoin(Of QuoteVersionTableInfo)
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_QuoteVersion_FollowupId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_Email_AppointmentId
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_Email_AppointmentId
  id: LeftOuterJoin_Email_AppointmentId
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: LeftOuterJoin_Email_AppointmentId
  nameWithType: AppointmentTableInfo.LeftOuterJoin_Email_AppointmentId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_Email_AppointmentId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated left outer join from the primary key AppointmentId on this table, to Email.<xref href=\"SuperOffice.CRM.Data.EmailTableInfo.AppointmentId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedLeftOuterJoin<EmailTableInfo> LeftOuterJoin_Email_AppointmentId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.EmailTableInfo}
    content.vb: Public ReadOnly Property LeftOuterJoin_Email_AppointmentId As TargetedLeftOuterJoin(Of EmailTableInfo)
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_Email_AppointmentId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_SaleHist_AppointmentId
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_SaleHist_AppointmentId
  id: LeftOuterJoin_SaleHist_AppointmentId
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: LeftOuterJoin_SaleHist_AppointmentId
  nameWithType: AppointmentTableInfo.LeftOuterJoin_SaleHist_AppointmentId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_SaleHist_AppointmentId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated left outer join from the primary key AppointmentId on this table, to SaleHist.<xref href=\"SuperOffice.CRM.Data.SaleHistTableInfo.AppointmentId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedLeftOuterJoin<SaleHistTableInfo> LeftOuterJoin_SaleHist_AppointmentId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.SaleHistTableInfo}
    content.vb: Public ReadOnly Property LeftOuterJoin_SaleHist_AppointmentId As TargetedLeftOuterJoin(Of SaleHistTableInfo)
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_SaleHist_AppointmentId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_SaleHist_NddAppointmentId
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_SaleHist_NddAppointmentId
  id: LeftOuterJoin_SaleHist_NddAppointmentId
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: LeftOuterJoin_SaleHist_NddAppointmentId
  nameWithType: AppointmentTableInfo.LeftOuterJoin_SaleHist_NddAppointmentId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_SaleHist_NddAppointmentId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated left outer join from the primary key AppointmentId on this table, to SaleHist.<xref href=\"SuperOffice.CRM.Data.SaleHistTableInfo.NddAppointmentId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedLeftOuterJoin<SaleHistTableInfo> LeftOuterJoin_SaleHist_NddAppointmentId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.SaleHistTableInfo}
    content.vb: Public ReadOnly Property LeftOuterJoin_SaleHist_NddAppointmentId As TargetedLeftOuterJoin(Of SaleHistTableInfo)
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_SaleHist_NddAppointmentId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_VisibleFor_AppointmentId
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_VisibleFor_AppointmentId
  id: LeftOuterJoin_VisibleFor_AppointmentId
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: LeftOuterJoin_VisibleFor_AppointmentId
  nameWithType: AppointmentTableInfo.LeftOuterJoin_VisibleFor_AppointmentId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_VisibleFor_AppointmentId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated left outer join from the primary key AppointmentId on this table, to VisibleFor.<xref href=\"SuperOffice.CRM.Data.VisibleForTableInfo.AppointmentId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedLeftOuterJoin<VisibleForTableInfo> LeftOuterJoin_VisibleFor_AppointmentId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.VisibleForTableInfo}
    content.vb: Public ReadOnly Property LeftOuterJoin_VisibleFor_AppointmentId As TargetedLeftOuterJoin(Of VisibleForTableInfo)
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_VisibleFor_AppointmentId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_EmailItem_AppointmentId
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_EmailItem_AppointmentId
  id: LeftOuterJoin_EmailItem_AppointmentId
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: LeftOuterJoin_EmailItem_AppointmentId
  nameWithType: AppointmentTableInfo.LeftOuterJoin_EmailItem_AppointmentId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_EmailItem_AppointmentId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated left outer join from the primary key AppointmentId on this table, to EmailItem.<xref href=\"SuperOffice.CRM.Data.EmailItemTableInfo.AppointmentId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedLeftOuterJoin<EmailItemTableInfo> LeftOuterJoin_EmailItem_AppointmentId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.EmailItemTableInfo}
    content.vb: Public ReadOnly Property LeftOuterJoin_EmailItem_AppointmentId As TargetedLeftOuterJoin(Of EmailItemTableInfo)
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_EmailItem_AppointmentId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_Invitation_AppointmentId
  commentId: P:SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_Invitation_AppointmentId
  id: LeftOuterJoin_Invitation_AppointmentId
  parent: SuperOffice.CRM.Data.AppointmentTableInfo
  langs:
  - csharp
  - vb
  name: LeftOuterJoin_Invitation_AppointmentId
  nameWithType: AppointmentTableInfo.LeftOuterJoin_Invitation_AppointmentId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_Invitation_AppointmentId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated left outer join from the primary key AppointmentId on this table, to Invitation.<xref href=\"SuperOffice.CRM.Data.InvitationTableInfo.AppointmentId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedLeftOuterJoin<InvitationTableInfo> LeftOuterJoin_Invitation_AppointmentId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.InvitationTableInfo}
    content.vb: Public ReadOnly Property LeftOuterJoin_Invitation_AppointmentId As TargetedLeftOuterJoin(Of InvitationTableInfo)
  overload: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_Invitation_AppointmentId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: SuperOffice.CRM.Data
  commentId: N:SuperOffice.CRM.Data
  isExternal: true
  name: SuperOffice.CRM.Data
  nameWithType: SuperOffice.CRM.Data
  fullName: SuperOffice.CRM.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Data.SQL.TableInfo
  commentId: T:SuperOffice.Data.SQL.TableInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: TableInfo
  nameWithType: TableInfo
  fullName: SuperOffice.Data.SQL.TableInfo
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: SuperOffice.Data.SQL.TableInfo.ToString
  commentId: M:SuperOffice.Data.SQL.TableInfo.ToString
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: ToString()
  nameWithType: TableInfo.ToString()
  fullName: SuperOffice.Data.SQL.TableInfo.ToString()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TableInfo.ToString
    name: ToString
    nameWithType: TableInfo.ToString
    fullName: SuperOffice.Data.SQL.TableInfo.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.TableInfo.ToString
    name: ToString
    nameWithType: TableInfo.ToString
    fullName: SuperOffice.Data.SQL.TableInfo.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.TableInfo.RegisterFields(SuperOffice.Data.SQL.FieldInfo[])
  commentId: M:SuperOffice.Data.SQL.TableInfo.RegisterFields(SuperOffice.Data.SQL.FieldInfo[])
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: RegisterFields(FieldInfo[])
  nameWithType: TableInfo.RegisterFields(FieldInfo[])
  fullName: SuperOffice.Data.SQL.TableInfo.RegisterFields(SuperOffice.Data.SQL.FieldInfo[])
  nameWithType.vb: TableInfo.RegisterFields(FieldInfo())
  fullName.vb: SuperOffice.Data.SQL.TableInfo.RegisterFields(SuperOffice.Data.SQL.FieldInfo())
  name.vb: RegisterFields(FieldInfo())
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TableInfo.RegisterFields(SuperOffice.Data.SQL.FieldInfo[])
    name: RegisterFields
    nameWithType: TableInfo.RegisterFields
    fullName: SuperOffice.Data.SQL.TableInfo.RegisterFields
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.TableInfo.RegisterFields(SuperOffice.Data.SQL.FieldInfo[])
    name: RegisterFields
    nameWithType: TableInfo.RegisterFields
    fullName: SuperOffice.Data.SQL.TableInfo.RegisterFields
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.TableInfo.FieldInfoFromSoField(SuperOffice.Data.Dictionary.SoField)
  commentId: M:SuperOffice.Data.SQL.TableInfo.FieldInfoFromSoField(SuperOffice.Data.Dictionary.SoField)
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: FieldInfoFromSoField(SoField)
  nameWithType: TableInfo.FieldInfoFromSoField(SoField)
  fullName: SuperOffice.Data.SQL.TableInfo.FieldInfoFromSoField(SuperOffice.Data.Dictionary.SoField)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TableInfo.FieldInfoFromSoField(SuperOffice.Data.Dictionary.SoField)
    name: FieldInfoFromSoField
    nameWithType: TableInfo.FieldInfoFromSoField
    fullName: SuperOffice.Data.SQL.TableInfo.FieldInfoFromSoField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.Dictionary.SoField
    name: SoField
    nameWithType: SoField
    fullName: SuperOffice.Data.Dictionary.SoField
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.TableInfo.FieldInfoFromSoField(SuperOffice.Data.Dictionary.SoField)
    name: FieldInfoFromSoField
    nameWithType: TableInfo.FieldInfoFromSoField
    fullName: SuperOffice.Data.SQL.TableInfo.FieldInfoFromSoField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.Dictionary.SoField
    name: SoField
    nameWithType: SoField
    fullName: SuperOffice.Data.Dictionary.SoField
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.TableInfo.Clone
  commentId: M:SuperOffice.Data.SQL.TableInfo.Clone
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: Clone()
  nameWithType: TableInfo.Clone()
  fullName: SuperOffice.Data.SQL.TableInfo.Clone()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TableInfo.Clone
    name: Clone
    nameWithType: TableInfo.Clone
    fullName: SuperOffice.Data.SQL.TableInfo.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.TableInfo.Clone
    name: Clone
    nameWithType: TableInfo.Clone
    fullName: SuperOffice.Data.SQL.TableInfo.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.TableInfo.IsSameTable(SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.Data.SQL.TableInfo.IsSameTable(SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: IsSameTable(TableInfo)
  nameWithType: TableInfo.IsSameTable(TableInfo)
  fullName: SuperOffice.Data.SQL.TableInfo.IsSameTable(SuperOffice.Data.SQL.TableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TableInfo.IsSameTable(SuperOffice.Data.SQL.TableInfo)
    name: IsSameTable
    nameWithType: TableInfo.IsSameTable
    fullName: SuperOffice.Data.SQL.TableInfo.IsSameTable
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.TableInfo.IsSameTable(SuperOffice.Data.SQL.TableInfo)
    name: IsSameTable
    nameWithType: TableInfo.IsSameTable
    fullName: SuperOffice.Data.SQL.TableInfo.IsSameTable
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.TableInfo.FindField(System.String)
  commentId: M:SuperOffice.Data.SQL.TableInfo.FindField(System.String)
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: FindField(String)
  nameWithType: TableInfo.FindField(String)
  fullName: SuperOffice.Data.SQL.TableInfo.FindField(System.String)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TableInfo.FindField(System.String)
    name: FindField
    nameWithType: TableInfo.FindField
    fullName: SuperOffice.Data.SQL.TableInfo.FindField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.TableInfo.FindField(System.String)
    name: FindField
    nameWithType: TableInfo.FindField
    fullName: SuperOffice.Data.SQL.TableInfo.FindField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.TableInfo.ProtAll
  commentId: P:SuperOffice.Data.SQL.TableInfo.ProtAll
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: ProtAll
  nameWithType: TableInfo.ProtAll
  fullName: SuperOffice.Data.SQL.TableInfo.ProtAll
- uid: SuperOffice.Data.SQL.TableInfo.HashCheckFields
  commentId: P:SuperOffice.Data.SQL.TableInfo.HashCheckFields
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: HashCheckFields
  nameWithType: TableInfo.HashCheckFields
  fullName: SuperOffice.Data.SQL.TableInfo.HashCheckFields
- uid: SuperOffice.Data.SQL.TableInfo.TableName
  commentId: P:SuperOffice.Data.SQL.TableInfo.TableName
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: TableName
  nameWithType: TableInfo.TableName
  fullName: SuperOffice.Data.SQL.TableInfo.TableName
- uid: SuperOffice.Data.SQL.TableInfo.DbName
  commentId: P:SuperOffice.Data.SQL.TableInfo.DbName
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: DbName
  nameWithType: TableInfo.DbName
  fullName: SuperOffice.Data.SQL.TableInfo.DbName
- uid: SuperOffice.Data.SQL.TableInfo.IsDictionaryTable
  commentId: P:SuperOffice.Data.SQL.TableInfo.IsDictionaryTable
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: IsDictionaryTable
  nameWithType: TableInfo.IsDictionaryTable
  fullName: SuperOffice.Data.SQL.TableInfo.IsDictionaryTable
- uid: SuperOffice.Data.SQL.TableInfo.All
  commentId: P:SuperOffice.Data.SQL.TableInfo.All
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: All
  nameWithType: TableInfo.All
  fullName: SuperOffice.Data.SQL.TableInfo.All
- uid: SuperOffice.Data.SQL.TableInfo.Item(System.String)
  commentId: P:SuperOffice.Data.SQL.TableInfo.Item(System.String)
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: Item[String]
  nameWithType: TableInfo.Item[String]
  fullName: SuperOffice.Data.SQL.TableInfo.Item[System.String]
  nameWithType.vb: TableInfo.Item(String)
  fullName.vb: SuperOffice.Data.SQL.TableInfo.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TableInfo.Item(System.String)
    name: Item
    nameWithType: TableInfo.Item
    fullName: SuperOffice.Data.SQL.TableInfo.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TableInfo.Item(System.String)
    name: Item
    nameWithType: TableInfo.Item
    fullName: SuperOffice.Data.SQL.TableInfo.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.TableInfo.PrimaryKeyField
  commentId: P:SuperOffice.Data.SQL.TableInfo.PrimaryKeyField
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: PrimaryKeyField
  nameWithType: TableInfo.PrimaryKeyField
  fullName: SuperOffice.Data.SQL.TableInfo.PrimaryKeyField
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<AppointmentTableInfo, To>()
  nameWithType: EnumUtil.MapEnums<AppointmentTableInfo, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Data.AppointmentTableInfo, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of AppointmentTableInfo, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Data.AppointmentTableInfo, To)()
  name.vb: MapEnums(Of AppointmentTableInfo, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<AppointmentTableInfo, To>
    nameWithType: EnumUtil.MapEnums<AppointmentTableInfo, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Data.AppointmentTableInfo, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of AppointmentTableInfo, To)
    nameWithType: EnumUtil.MapEnums(Of AppointmentTableInfo, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Data.AppointmentTableInfo, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<AppointmentTableInfo, To>()
  nameWithType: Converters.MapEnums<AppointmentTableInfo, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Data.AppointmentTableInfo, To>()
  nameWithType.vb: Converters.MapEnums(Of AppointmentTableInfo, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Data.AppointmentTableInfo, To)()
  name.vb: MapEnums(Of AppointmentTableInfo, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<AppointmentTableInfo, To>
    nameWithType: Converters.MapEnums<AppointmentTableInfo, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Data.AppointmentTableInfo, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of AppointmentTableInfo, To)
    nameWithType: Converters.MapEnums(Of AppointmentTableInfo, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Data.AppointmentTableInfo, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Data.SQL
  commentId: N:SuperOffice.Data.SQL
  isExternal: true
  name: SuperOffice.Data.SQL
  nameWithType: SuperOffice.Data.SQL
  fullName: SuperOffice.Data.SQL
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectId*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectId
  isExternal: true
  name: IdxProjectId
  nameWithType: AppointmentTableInfo.IdxProjectId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.Data.SQL.Restriction
  commentId: T:SuperOffice.Data.SQL.Restriction
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: Restriction
  nameWithType: Restriction
  fullName: SuperOffice.Data.SQL.Restriction
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxContactId*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.IdxContactId
  isExternal: true
  name: IdxContactId
  nameWithType: AppointmentTableInfo.IdxContactId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxContactId
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxAssociateId*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.IdxAssociateId
  isExternal: true
  name: IdxAssociateId
  nameWithType: AppointmentTableInfo.IdxAssociateId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxAssociateId
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxAssociateIdType*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.IdxAssociateIdType
  isExternal: true
  name: IdxAssociateIdType
  nameWithType: AppointmentTableInfo.IdxAssociateIdType
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxAssociateIdType
- uid: SuperOffice.Data.AppointmentType
  commentId: T:SuperOffice.Data.AppointmentType
  parent: SuperOffice.Data
  isExternal: true
  name: AppointmentType
  nameWithType: AppointmentType
  fullName: SuperOffice.Data.AppointmentType
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxAssociateIdTypeStatus*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.IdxAssociateIdTypeStatus
  isExternal: true
  name: IdxAssociateIdTypeStatus
  nameWithType: AppointmentTableInfo.IdxAssociateIdTypeStatus
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxAssociateIdTypeStatus
- uid: SuperOffice.Data.AppointmentStatus
  commentId: T:SuperOffice.Data.AppointmentStatus
  parent: SuperOffice.Data
  isExternal: true
  name: AppointmentStatus
  nameWithType: AppointmentStatus
  fullName: SuperOffice.Data.AppointmentStatus
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxAssociateIdTypeEndDate*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.IdxAssociateIdTypeEndDate
  isExternal: true
  name: IdxAssociateIdTypeEndDate
  nameWithType: AppointmentTableInfo.IdxAssociateIdTypeEndDate
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxAssociateIdTypeEndDate
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxRecurrenceRuleId*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.IdxRecurrenceRuleId
  isExternal: true
  name: IdxRecurrenceRuleId
  nameWithType: AppointmentTableInfo.IdxRecurrenceRuleId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxRecurrenceRuleId
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxRecurrenceRuleIdActiveDate*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.IdxRecurrenceRuleIdActiveDate
  isExternal: true
  name: IdxRecurrenceRuleIdActiveDate
  nameWithType: AppointmentTableInfo.IdxRecurrenceRuleIdActiveDate
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxRecurrenceRuleIdActiveDate
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxAssociateIdActiveDate*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.IdxAssociateIdActiveDate
  isExternal: true
  name: IdxAssociateIdActiveDate
  nameWithType: AppointmentTableInfo.IdxAssociateIdActiveDate
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxAssociateIdActiveDate
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxAssociateIdActiveDateMotherId*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.IdxAssociateIdActiveDateMotherId
  isExternal: true
  name: IdxAssociateIdActiveDateMotherId
  nameWithType: AppointmentTableInfo.IdxAssociateIdActiveDateMotherId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxAssociateIdActiveDateMotherId
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherId*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherId
  isExternal: true
  name: IdxMotherId
  nameWithType: AppointmentTableInfo.IdxMotherId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherId
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatus*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatus
  isExternal: true
  name: IdxMotherIdStatus
  nameWithType: AppointmentTableInfo.IdxMotherIdStatus
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatus
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDate*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDate
  isExternal: true
  name: IdxMotherIdStatusActiveDate
  nameWithType: AppointmentTableInfo.IdxMotherIdStatusActiveDate
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDate
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateId*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateId
  isExternal: true
  name: IdxMotherIdStatusActiveDateRegisteredAssociateId
  nameWithType: AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateId
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateIdRegistered*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateIdRegistered
  isExternal: true
  name: IdxMotherIdStatusActiveDateRegisteredAssociateIdRegistered
  nameWithType: AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateIdRegistered
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateIdRegistered
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedBy*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedBy
  isExternal: true
  name: IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedBy
  nameWithType: AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedBy
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedBy
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedByGroupIdx*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedByGroupIdx
  isExternal: true
  name: IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedByGroupIdx
  nameWithType: AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedByGroupIdx
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedByGroupIdx
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedByGroupIdxType*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedByGroupIdxType
  isExternal: true
  name: IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedByGroupIdxType
  nameWithType: AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedByGroupIdxType
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedByGroupIdxType
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedByGroupIdxTypeAssociateId*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedByGroupIdxTypeAssociateId
  isExternal: true
  name: IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedByGroupIdxTypeAssociateId
  nameWithType: AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedByGroupIdxTypeAssociateId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxMotherIdStatusActiveDateRegisteredAssociateIdRegisteredAssignedByGroupIdxTypeAssociateId
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdType*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdType
  isExternal: true
  name: IdxProjectIdType
  nameWithType: AppointmentTableInfo.IdxProjectIdType
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdType
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDate*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDate
  isExternal: true
  name: IdxProjectIdTypeActiveDate
  nameWithType: AppointmentTableInfo.IdxProjectIdTypeActiveDate
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDate
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentId*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentId
  isExternal: true
  name: IdxProjectIdTypeActiveDateDocumentId
  nameWithType: AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentId
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateId*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateId
  isExternal: true
  name: IdxProjectIdTypeActiveDateDocumentIdAssociateId
  nameWithType: AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateId
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdx*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdx
  isExternal: true
  name: IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdx
  nameWithType: AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdx
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdx
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherId*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherId
  isExternal: true
  name: IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherId
  nameWithType: AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherId
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherIdAssignedBy*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherIdAssignedBy
  isExternal: true
  name: IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherIdAssignedBy
  nameWithType: AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherIdAssignedBy
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherIdAssignedBy
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherIdAssignedByAppointmentId*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherIdAssignedByAppointmentId
  isExternal: true
  name: IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherIdAssignedByAppointmentId
  nameWithType: AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherIdAssignedByAppointmentId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherIdAssignedByAppointmentId
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherIdAssignedByAppointmentIdRegistered*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherIdAssignedByAppointmentIdRegistered
  isExternal: true
  name: IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherIdAssignedByAppointmentIdRegistered
  nameWithType: AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherIdAssignedByAppointmentIdRegistered
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IdxProjectIdTypeActiveDateDocumentIdAssociateIdGroupIdxMotherIdAssignedByAppointmentIdRegistered
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.DictionaryTableNumber*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.DictionaryTableNumber
  isExternal: true
  name: DictionaryTableNumber
  nameWithType: AppointmentTableInfo.DictionaryTableNumber
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.DictionaryTableNumber
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.RuntimeDefinition*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.RuntimeDefinition
  isExternal: true
  name: RuntimeDefinition
  nameWithType: AppointmentTableInfo.RuntimeDefinition
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.RuntimeDefinition
- uid: SuperOffice.Data.Dictionary.SoTable
  commentId: T:SuperOffice.Data.Dictionary.SoTable
  parent: SuperOffice.Data.Dictionary
  isExternal: true
  name: SoTable
  nameWithType: SoTable
  fullName: SuperOffice.Data.Dictionary.SoTable
- uid: SuperOffice.Data.Dictionary
  commentId: N:SuperOffice.Data.Dictionary
  isExternal: true
  name: SuperOffice.Data.Dictionary
  nameWithType: SuperOffice.Data.Dictionary
  fullName: SuperOffice.Data.Dictionary
- uid: SuperOffice.Data.SQL.TableInfo.Definition
  commentId: P:SuperOffice.Data.SQL.TableInfo.Definition
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: Definition
  nameWithType: TableInfo.Definition
  fullName: SuperOffice.Data.SQL.TableInfo.Definition
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.Definition*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.Definition
  isExternal: true
  name: Definition
  nameWithType: AppointmentTableInfo.Definition
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.Definition
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.AppointmentId*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.AppointmentId
  isExternal: true
  name: AppointmentId
  nameWithType: AppointmentTableInfo.AppointmentId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.AppointmentId
- uid: SuperOffice.Data.SQL.Int32FieldInfo
  commentId: T:SuperOffice.Data.SQL.Int32FieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: Int32FieldInfo
  nameWithType: Int32FieldInfo
  fullName: SuperOffice.Data.SQL.Int32FieldInfo
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.ContactId*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.ContactId
  isExternal: true
  name: ContactId
  nameWithType: AppointmentTableInfo.ContactId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.ContactId
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.PersonId*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.PersonId
  isExternal: true
  name: PersonId
  nameWithType: AppointmentTableInfo.PersonId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.PersonId
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.AssociateId*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.AssociateId
  isExternal: true
  name: AssociateId
  nameWithType: AppointmentTableInfo.AssociateId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.AssociateId
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.GroupIdx*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.GroupIdx
  isExternal: true
  name: GroupIdx
  nameWithType: AppointmentTableInfo.GroupIdx
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.GroupIdx
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.Registered*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.Registered
  isExternal: true
  name: Registered
  nameWithType: AppointmentTableInfo.Registered
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.Registered
- uid: SuperOffice.Data.SQL.DateTimeFieldInfo
  commentId: T:SuperOffice.Data.SQL.DateTimeFieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: DateTimeFieldInfo
  nameWithType: DateTimeFieldInfo
  fullName: SuperOffice.Data.SQL.DateTimeFieldInfo
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.RegisteredAssociateId*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.RegisteredAssociateId
  isExternal: true
  name: RegisteredAssociateId
  nameWithType: AppointmentTableInfo.RegisteredAssociateId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.RegisteredAssociateId
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.Done*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.Done
  isExternal: true
  name: Done
  nameWithType: AppointmentTableInfo.Done
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.Done
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.DoBy*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.DoBy
  isExternal: true
  name: DoBy
  nameWithType: AppointmentTableInfo.DoBy
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.DoBy
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.Leadtime*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.Leadtime
  isExternal: true
  name: Leadtime
  nameWithType: AppointmentTableInfo.Leadtime
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.Leadtime
- uid: SuperOffice.Data.SQL.UInt16FieldInfo
  commentId: T:SuperOffice.Data.SQL.UInt16FieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: UInt16FieldInfo
  nameWithType: UInt16FieldInfo
  fullName: SuperOffice.Data.SQL.UInt16FieldInfo
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.TaskIdx*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.TaskIdx
  isExternal: true
  name: TaskIdx
  nameWithType: AppointmentTableInfo.TaskIdx
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.TaskIdx
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.PriorityIdx*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.PriorityIdx
  isExternal: true
  name: PriorityIdx
  nameWithType: AppointmentTableInfo.PriorityIdx
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.PriorityIdx
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.Type*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.Type
  isExternal: true
  name: Type
  nameWithType: AppointmentTableInfo.Type
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.Type
- uid: SuperOffice.Data.SQL.AppointmentTypeFieldInfo
  commentId: T:SuperOffice.Data.SQL.AppointmentTypeFieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: AppointmentTypeFieldInfo
  nameWithType: AppointmentTypeFieldInfo
  fullName: SuperOffice.Data.SQL.AppointmentTypeFieldInfo
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.Status*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.Status
  isExternal: true
  name: Status
  nameWithType: AppointmentTableInfo.Status
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.Status
- uid: SuperOffice.Data.SQL.AppointmentStatusFieldInfo
  commentId: T:SuperOffice.Data.SQL.AppointmentStatusFieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: AppointmentStatusFieldInfo
  nameWithType: AppointmentStatusFieldInfo
  fullName: SuperOffice.Data.SQL.AppointmentStatusFieldInfo
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.Private*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.Private
  isExternal: true
  name: Private
  nameWithType: AppointmentTableInfo.Private
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.Private
- uid: SuperOffice.Data.SQL.AppointmentPrivateFieldInfo
  commentId: T:SuperOffice.Data.SQL.AppointmentPrivateFieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: AppointmentPrivateFieldInfo
  nameWithType: AppointmentPrivateFieldInfo
  fullName: SuperOffice.Data.SQL.AppointmentPrivateFieldInfo
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.Alarm*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.Alarm
  isExternal: true
  name: Alarm
  nameWithType: AppointmentTableInfo.Alarm
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.Alarm
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.TextId*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.TextId
  isExternal: true
  name: TextId
  nameWithType: AppointmentTableInfo.TextId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.TextId
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.ProjectId*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.ProjectId
  isExternal: true
  name: ProjectId
  nameWithType: AppointmentTableInfo.ProjectId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.ProjectId
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.MotherId*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.MotherId
  isExternal: true
  name: MotherId
  nameWithType: AppointmentTableInfo.MotherId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.MotherId
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.DocumentId*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.DocumentId
  isExternal: true
  name: DocumentId
  nameWithType: AppointmentTableInfo.DocumentId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.DocumentId
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.ColorIndex*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.ColorIndex
  isExternal: true
  name: ColorIndex
  nameWithType: AppointmentTableInfo.ColorIndex
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.ColorIndex
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.InvitedPersonId*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.InvitedPersonId
  isExternal: true
  name: InvitedPersonId
  nameWithType: AppointmentTableInfo.InvitedPersonId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.InvitedPersonId
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.ActiveDate*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.ActiveDate
  isExternal: true
  name: ActiveDate
  nameWithType: AppointmentTableInfo.ActiveDate
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.ActiveDate
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.EndDate*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.EndDate
  isExternal: true
  name: EndDate
  nameWithType: AppointmentTableInfo.EndDate
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.EndDate
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.LagTime*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.LagTime
  isExternal: true
  name: LagTime
  nameWithType: AppointmentTableInfo.LagTime
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.LagTime
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.Source*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.Source
  isExternal: true
  name: Source
  nameWithType: AppointmentTableInfo.Source
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.Source
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.UserdefId*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.UserdefId
  isExternal: true
  name: UserdefId
  nameWithType: AppointmentTableInfo.UserdefId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.UserdefId
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.Userdef2Id*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.Userdef2Id
  isExternal: true
  name: Userdef2Id
  nameWithType: AppointmentTableInfo.Userdef2Id
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.Userdef2Id
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.Updated*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.Updated
  isExternal: true
  name: Updated
  nameWithType: AppointmentTableInfo.Updated
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.Updated
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.UpdatedAssociateId*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.UpdatedAssociateId
  isExternal: true
  name: UpdatedAssociateId
  nameWithType: AppointmentTableInfo.UpdatedAssociateId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.UpdatedAssociateId
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.UpdatedCount*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.UpdatedCount
  isExternal: true
  name: UpdatedCount
  nameWithType: AppointmentTableInfo.UpdatedCount
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.UpdatedCount
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.ActiveLinks*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.ActiveLinks
  isExternal: true
  name: ActiveLinks
  nameWithType: AppointmentTableInfo.ActiveLinks
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.ActiveLinks
- uid: SuperOffice.Data.SQL.FieldInfo
  commentId: T:SuperOffice.Data.SQL.FieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: SuperOffice.Data.SQL.FieldInfo
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.RecurrenceRuleId*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.RecurrenceRuleId
  isExternal: true
  name: RecurrenceRuleId
  nameWithType: AppointmentTableInfo.RecurrenceRuleId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.RecurrenceRuleId
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.Location*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.Location
  isExternal: true
  name: Location
  nameWithType: AppointmentTableInfo.Location
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.Location
- uid: SuperOffice.Data.SQL.StringFieldInfo
  commentId: T:SuperOffice.Data.SQL.StringFieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: StringFieldInfo
  nameWithType: StringFieldInfo
  fullName: SuperOffice.Data.SQL.StringFieldInfo
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.AlldayEvent*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.AlldayEvent
  isExternal: true
  name: AlldayEvent
  nameWithType: AppointmentTableInfo.AlldayEvent
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.AlldayEvent
- uid: SuperOffice.Data.SQL.AllDayEventFieldInfo
  commentId: T:SuperOffice.Data.SQL.AllDayEventFieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: AllDayEventFieldInfo
  nameWithType: AllDayEventFieldInfo
  fullName: SuperOffice.Data.SQL.AllDayEventFieldInfo
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.FreeBusy*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.FreeBusy
  isExternal: true
  name: FreeBusy
  nameWithType: AppointmentTableInfo.FreeBusy
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.FreeBusy
- uid: SuperOffice.Data.SQL.FreeBusyFieldInfo
  commentId: T:SuperOffice.Data.SQL.FreeBusyFieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: FreeBusyFieldInfo
  nameWithType: FreeBusyFieldInfo
  fullName: SuperOffice.Data.SQL.FreeBusyFieldInfo
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.RejectCounter*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.RejectCounter
  isExternal: true
  name: RejectCounter
  nameWithType: AppointmentTableInfo.RejectCounter
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.RejectCounter
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.EmailId*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.EmailId
  isExternal: true
  name: EmailId
  nameWithType: AppointmentTableInfo.EmailId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.EmailId
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.RejectReason*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.RejectReason
  isExternal: true
  name: RejectReason
  nameWithType: AppointmentTableInfo.RejectReason
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.RejectReason
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.HasAlarm*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.HasAlarm
  isExternal: true
  name: HasAlarm
  nameWithType: AppointmentTableInfo.HasAlarm
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.HasAlarm
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.AssignedBy*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.AssignedBy
  isExternal: true
  name: AssignedBy
  nameWithType: AppointmentTableInfo.AssignedBy
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.AssignedBy
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.PreferredTZLocation*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.PreferredTZLocation
  isExternal: true
  name: PreferredTZLocation
  nameWithType: AppointmentTableInfo.PreferredTZLocation
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.PreferredTZLocation
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.SaleId*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.SaleId
  isExternal: true
  name: SaleId
  nameWithType: AppointmentTableInfo.SaleId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.SaleId
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.SuggestedAppointmentId*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.SuggestedAppointmentId
  isExternal: true
  name: SuggestedAppointmentId
  nameWithType: AppointmentTableInfo.SuggestedAppointmentId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.SuggestedAppointmentId
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.SuggestedDocumentId*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.SuggestedDocumentId
  isExternal: true
  name: SuggestedDocumentId
  nameWithType: AppointmentTableInfo.SuggestedDocumentId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.SuggestedDocumentId
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.IsMilestone*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.IsMilestone
  isExternal: true
  name: IsMilestone
  nameWithType: AppointmentTableInfo.IsMilestone
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.IsMilestone
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.JoinVideomeetUrl*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.JoinVideomeetUrl
  isExternal: true
  name: JoinVideomeetUrl
  nameWithType: AppointmentTableInfo.JoinVideomeetUrl
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.JoinVideomeetUrl
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.CentralserviceVideomeetId*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.CentralserviceVideomeetId
  isExternal: true
  name: CentralserviceVideomeetId
  nameWithType: AppointmentTableInfo.CentralserviceVideomeetId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.CentralserviceVideomeetId
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.OriginalStartDate*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.OriginalStartDate
  isExternal: true
  name: OriginalStartDate
  nameWithType: AppointmentTableInfo.OriginalStartDate
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.OriginalStartDate
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.CautionWarning*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.CautionWarning
  isExternal: true
  name: CautionWarning
  nameWithType: AppointmentTableInfo.CautionWarning
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.CautionWarning
- uid: SuperOffice.Data.SQL.AppointmentCautionWarningFieldInfo
  commentId: T:SuperOffice.Data.SQL.AppointmentCautionWarningFieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: AppointmentCautionWarningFieldInfo
  nameWithType: AppointmentCautionWarningFieldInfo
  fullName: SuperOffice.Data.SQL.AppointmentCautionWarningFieldInfo
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.MotherAssociateId*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.MotherAssociateId
  isExternal: true
  name: MotherAssociateId
  nameWithType: AppointmentTableInfo.MotherAssociateId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.MotherAssociateId
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.ContactId_InnerJoin_Contact*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.ContactId_InnerJoin_Contact
  isExternal: true
  name: ContactId_InnerJoin_Contact
  nameWithType: AppointmentTableInfo.ContactId_InnerJoin_Contact
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.ContactId_InnerJoin_Contact
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.ContactTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.ContactTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<ContactTableInfo>
  nameWithType: TargetedInnerJoin<ContactTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.ContactTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of ContactTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.ContactTableInfo)
  name.vb: TargetedInnerJoin(Of ContactTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.ContactTableInfo
    name: ContactTableInfo
    nameWithType: ContactTableInfo
    fullName: SuperOffice.CRM.Data.ContactTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.ContactTableInfo
    name: ContactTableInfo
    nameWithType: ContactTableInfo
    fullName: SuperOffice.CRM.Data.ContactTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin`1
  isExternal: true
  name: TargetedInnerJoin<TargetTableInfo>
  nameWithType: TargetedInnerJoin<TargetTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<TargetTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of TargetTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of TargetTableInfo)
  name.vb: TargetedInnerJoin(Of TargetTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TargetTableInfo
    nameWithType: TargetTableInfo
    fullName: TargetTableInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TargetTableInfo
    nameWithType: TargetTableInfo
    fullName: TargetTableInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.PersonId_InnerJoin_Person*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.PersonId_InnerJoin_Person
  isExternal: true
  name: PersonId_InnerJoin_Person
  nameWithType: AppointmentTableInfo.PersonId_InnerJoin_Person
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.PersonId_InnerJoin_Person
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.PersonTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.PersonTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<PersonTableInfo>
  nameWithType: TargetedInnerJoin<PersonTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.PersonTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of PersonTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.PersonTableInfo)
  name.vb: TargetedInnerJoin(Of PersonTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.PersonTableInfo
    name: PersonTableInfo
    nameWithType: PersonTableInfo
    fullName: SuperOffice.CRM.Data.PersonTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.PersonTableInfo
    name: PersonTableInfo
    nameWithType: PersonTableInfo
    fullName: SuperOffice.CRM.Data.PersonTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.AssociateId_InnerJoin_Associate*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.AssociateId_InnerJoin_Associate
  isExternal: true
  name: AssociateId_InnerJoin_Associate
  nameWithType: AppointmentTableInfo.AssociateId_InnerJoin_Associate
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.AssociateId_InnerJoin_Associate
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.AssociateTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.AssociateTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<AssociateTableInfo>
  nameWithType: TargetedInnerJoin<AssociateTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.AssociateTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of AssociateTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.AssociateTableInfo)
  name.vb: TargetedInnerJoin(Of AssociateTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.AssociateTableInfo
    name: AssociateTableInfo
    nameWithType: AssociateTableInfo
    fullName: SuperOffice.CRM.Data.AssociateTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.AssociateTableInfo
    name: AssociateTableInfo
    nameWithType: AssociateTableInfo
    fullName: SuperOffice.CRM.Data.AssociateTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.GroupIdx_InnerJoin_UserGroup*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.GroupIdx_InnerJoin_UserGroup
  isExternal: true
  name: GroupIdx_InnerJoin_UserGroup
  nameWithType: AppointmentTableInfo.GroupIdx_InnerJoin_UserGroup
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.GroupIdx_InnerJoin_UserGroup
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.UserGroupTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.UserGroupTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<UserGroupTableInfo>
  nameWithType: TargetedInnerJoin<UserGroupTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.UserGroupTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of UserGroupTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.UserGroupTableInfo)
  name.vb: TargetedInnerJoin(Of UserGroupTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.UserGroupTableInfo
    name: UserGroupTableInfo
    nameWithType: UserGroupTableInfo
    fullName: SuperOffice.CRM.Data.UserGroupTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.UserGroupTableInfo
    name: UserGroupTableInfo
    nameWithType: UserGroupTableInfo
    fullName: SuperOffice.CRM.Data.UserGroupTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.RegisteredAssociateId_InnerJoin_Associate*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.RegisteredAssociateId_InnerJoin_Associate
  isExternal: true
  name: RegisteredAssociateId_InnerJoin_Associate
  nameWithType: AppointmentTableInfo.RegisteredAssociateId_InnerJoin_Associate
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.RegisteredAssociateId_InnerJoin_Associate
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.TaskIdx_InnerJoin_Task*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.TaskIdx_InnerJoin_Task
  isExternal: true
  name: TaskIdx_InnerJoin_Task
  nameWithType: AppointmentTableInfo.TaskIdx_InnerJoin_Task
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.TaskIdx_InnerJoin_Task
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.TaskTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.TaskTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<TaskTableInfo>
  nameWithType: TargetedInnerJoin<TaskTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.TaskTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of TaskTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.TaskTableInfo)
  name.vb: TargetedInnerJoin(Of TaskTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.TaskTableInfo
    name: TaskTableInfo
    nameWithType: TaskTableInfo
    fullName: SuperOffice.CRM.Data.TaskTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.TaskTableInfo
    name: TaskTableInfo
    nameWithType: TaskTableInfo
    fullName: SuperOffice.CRM.Data.TaskTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.PriorityIdx_InnerJoin_Priority*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.PriorityIdx_InnerJoin_Priority
  isExternal: true
  name: PriorityIdx_InnerJoin_Priority
  nameWithType: AppointmentTableInfo.PriorityIdx_InnerJoin_Priority
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.PriorityIdx_InnerJoin_Priority
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.PriorityTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.PriorityTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<PriorityTableInfo>
  nameWithType: TargetedInnerJoin<PriorityTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.PriorityTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of PriorityTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.PriorityTableInfo)
  name.vb: TargetedInnerJoin(Of PriorityTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.PriorityTableInfo
    name: PriorityTableInfo
    nameWithType: PriorityTableInfo
    fullName: SuperOffice.CRM.Data.PriorityTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.PriorityTableInfo
    name: PriorityTableInfo
    nameWithType: PriorityTableInfo
    fullName: SuperOffice.CRM.Data.PriorityTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.TextId_InnerJoin_Text*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.TextId_InnerJoin_Text
  isExternal: true
  name: TextId_InnerJoin_Text
  nameWithType: AppointmentTableInfo.TextId_InnerJoin_Text
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.TextId_InnerJoin_Text
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.TextTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.TextTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<TextTableInfo>
  nameWithType: TargetedInnerJoin<TextTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.TextTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of TextTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.TextTableInfo)
  name.vb: TargetedInnerJoin(Of TextTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.TextTableInfo
    name: TextTableInfo
    nameWithType: TextTableInfo
    fullName: SuperOffice.CRM.Data.TextTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.TextTableInfo
    name: TextTableInfo
    nameWithType: TextTableInfo
    fullName: SuperOffice.CRM.Data.TextTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.ProjectId_InnerJoin_Project*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.ProjectId_InnerJoin_Project
  isExternal: true
  name: ProjectId_InnerJoin_Project
  nameWithType: AppointmentTableInfo.ProjectId_InnerJoin_Project
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.ProjectId_InnerJoin_Project
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.ProjectTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.ProjectTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<ProjectTableInfo>
  nameWithType: TargetedInnerJoin<ProjectTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.ProjectTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of ProjectTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.ProjectTableInfo)
  name.vb: TargetedInnerJoin(Of ProjectTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.ProjectTableInfo
    name: ProjectTableInfo
    nameWithType: ProjectTableInfo
    fullName: SuperOffice.CRM.Data.ProjectTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.ProjectTableInfo
    name: ProjectTableInfo
    nameWithType: ProjectTableInfo
    fullName: SuperOffice.CRM.Data.ProjectTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.MotherId_InnerJoin_Appointment*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.MotherId_InnerJoin_Appointment
  isExternal: true
  name: MotherId_InnerJoin_Appointment
  nameWithType: AppointmentTableInfo.MotherId_InnerJoin_Appointment
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.MotherId_InnerJoin_Appointment
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.AppointmentTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.AppointmentTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<AppointmentTableInfo>
  nameWithType: TargetedInnerJoin<AppointmentTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.AppointmentTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of AppointmentTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.AppointmentTableInfo)
  name.vb: TargetedInnerJoin(Of AppointmentTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.AppointmentTableInfo
    name: AppointmentTableInfo
    nameWithType: AppointmentTableInfo
    fullName: SuperOffice.CRM.Data.AppointmentTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.AppointmentTableInfo
    name: AppointmentTableInfo
    nameWithType: AppointmentTableInfo
    fullName: SuperOffice.CRM.Data.AppointmentTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.DocumentId_InnerJoin_Document*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.DocumentId_InnerJoin_Document
  isExternal: true
  name: DocumentId_InnerJoin_Document
  nameWithType: AppointmentTableInfo.DocumentId_InnerJoin_Document
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.DocumentId_InnerJoin_Document
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.DocumentTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.DocumentTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<DocumentTableInfo>
  nameWithType: TargetedInnerJoin<DocumentTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.DocumentTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of DocumentTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.DocumentTableInfo)
  name.vb: TargetedInnerJoin(Of DocumentTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.DocumentTableInfo
    name: DocumentTableInfo
    nameWithType: DocumentTableInfo
    fullName: SuperOffice.CRM.Data.DocumentTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.DocumentTableInfo
    name: DocumentTableInfo
    nameWithType: DocumentTableInfo
    fullName: SuperOffice.CRM.Data.DocumentTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.InvitedPersonId_InnerJoin_Person*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.InvitedPersonId_InnerJoin_Person
  isExternal: true
  name: InvitedPersonId_InnerJoin_Person
  nameWithType: AppointmentTableInfo.InvitedPersonId_InnerJoin_Person
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.InvitedPersonId_InnerJoin_Person
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.UserdefId_InnerJoin_UDAppntSmall*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.UserdefId_InnerJoin_UDAppntSmall
  isExternal: true
  name: UserdefId_InnerJoin_UDAppntSmall
  nameWithType: AppointmentTableInfo.UserdefId_InnerJoin_UDAppntSmall
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.UserdefId_InnerJoin_UDAppntSmall
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.UDAppntSmallTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.UDAppntSmallTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<UDAppntSmallTableInfo>
  nameWithType: TargetedInnerJoin<UDAppntSmallTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.UDAppntSmallTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of UDAppntSmallTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.UDAppntSmallTableInfo)
  name.vb: TargetedInnerJoin(Of UDAppntSmallTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.UDAppntSmallTableInfo
    name: UDAppntSmallTableInfo
    nameWithType: UDAppntSmallTableInfo
    fullName: SuperOffice.CRM.Data.UDAppntSmallTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.UDAppntSmallTableInfo
    name: UDAppntSmallTableInfo
    nameWithType: UDAppntSmallTableInfo
    fullName: SuperOffice.CRM.Data.UDAppntSmallTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.Userdef2Id_InnerJoin_UDAppntLarge*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.Userdef2Id_InnerJoin_UDAppntLarge
  isExternal: true
  name: Userdef2Id_InnerJoin_UDAppntLarge
  nameWithType: AppointmentTableInfo.Userdef2Id_InnerJoin_UDAppntLarge
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.Userdef2Id_InnerJoin_UDAppntLarge
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.UDAppntLargeTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.UDAppntLargeTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<UDAppntLargeTableInfo>
  nameWithType: TargetedInnerJoin<UDAppntLargeTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.UDAppntLargeTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of UDAppntLargeTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.UDAppntLargeTableInfo)
  name.vb: TargetedInnerJoin(Of UDAppntLargeTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.UDAppntLargeTableInfo
    name: UDAppntLargeTableInfo
    nameWithType: UDAppntLargeTableInfo
    fullName: SuperOffice.CRM.Data.UDAppntLargeTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.UDAppntLargeTableInfo
    name: UDAppntLargeTableInfo
    nameWithType: UDAppntLargeTableInfo
    fullName: SuperOffice.CRM.Data.UDAppntLargeTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.UpdatedAssociateId_InnerJoin_Associate*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.UpdatedAssociateId_InnerJoin_Associate
  isExternal: true
  name: UpdatedAssociateId_InnerJoin_Associate
  nameWithType: AppointmentTableInfo.UpdatedAssociateId_InnerJoin_Associate
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.UpdatedAssociateId_InnerJoin_Associate
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.RecurrenceRuleId_InnerJoin_RecurrenceRule*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.RecurrenceRuleId_InnerJoin_RecurrenceRule
  isExternal: true
  name: RecurrenceRuleId_InnerJoin_RecurrenceRule
  nameWithType: AppointmentTableInfo.RecurrenceRuleId_InnerJoin_RecurrenceRule
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.RecurrenceRuleId_InnerJoin_RecurrenceRule
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.RecurrenceRuleTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.RecurrenceRuleTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<RecurrenceRuleTableInfo>
  nameWithType: TargetedInnerJoin<RecurrenceRuleTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.RecurrenceRuleTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of RecurrenceRuleTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.RecurrenceRuleTableInfo)
  name.vb: TargetedInnerJoin(Of RecurrenceRuleTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.RecurrenceRuleTableInfo
    name: RecurrenceRuleTableInfo
    nameWithType: RecurrenceRuleTableInfo
    fullName: SuperOffice.CRM.Data.RecurrenceRuleTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.RecurrenceRuleTableInfo
    name: RecurrenceRuleTableInfo
    nameWithType: RecurrenceRuleTableInfo
    fullName: SuperOffice.CRM.Data.RecurrenceRuleTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.EmailId_InnerJoin_Email*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.EmailId_InnerJoin_Email
  isExternal: true
  name: EmailId_InnerJoin_Email
  nameWithType: AppointmentTableInfo.EmailId_InnerJoin_Email
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.EmailId_InnerJoin_Email
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.EmailTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.EmailTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<EmailTableInfo>
  nameWithType: TargetedInnerJoin<EmailTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.EmailTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of EmailTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.EmailTableInfo)
  name.vb: TargetedInnerJoin(Of EmailTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.EmailTableInfo
    name: EmailTableInfo
    nameWithType: EmailTableInfo
    fullName: SuperOffice.CRM.Data.EmailTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.EmailTableInfo
    name: EmailTableInfo
    nameWithType: EmailTableInfo
    fullName: SuperOffice.CRM.Data.EmailTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.AssignedBy_InnerJoin_Associate*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.AssignedBy_InnerJoin_Associate
  isExternal: true
  name: AssignedBy_InnerJoin_Associate
  nameWithType: AppointmentTableInfo.AssignedBy_InnerJoin_Associate
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.AssignedBy_InnerJoin_Associate
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.PreferredTZLocation_InnerJoin_TZLocation*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.PreferredTZLocation_InnerJoin_TZLocation
  isExternal: true
  name: PreferredTZLocation_InnerJoin_TZLocation
  nameWithType: AppointmentTableInfo.PreferredTZLocation_InnerJoin_TZLocation
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.PreferredTZLocation_InnerJoin_TZLocation
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.TZLocationTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.TZLocationTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<TZLocationTableInfo>
  nameWithType: TargetedInnerJoin<TZLocationTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.TZLocationTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of TZLocationTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.TZLocationTableInfo)
  name.vb: TargetedInnerJoin(Of TZLocationTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.TZLocationTableInfo
    name: TZLocationTableInfo
    nameWithType: TZLocationTableInfo
    fullName: SuperOffice.CRM.Data.TZLocationTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.TZLocationTableInfo
    name: TZLocationTableInfo
    nameWithType: TZLocationTableInfo
    fullName: SuperOffice.CRM.Data.TZLocationTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.SaleId_InnerJoin_Sale*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.SaleId_InnerJoin_Sale
  isExternal: true
  name: SaleId_InnerJoin_Sale
  nameWithType: AppointmentTableInfo.SaleId_InnerJoin_Sale
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.SaleId_InnerJoin_Sale
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.SaleTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.SaleTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<SaleTableInfo>
  nameWithType: TargetedInnerJoin<SaleTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.SaleTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of SaleTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.SaleTableInfo)
  name.vb: TargetedInnerJoin(Of SaleTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.SaleTableInfo
    name: SaleTableInfo
    nameWithType: SaleTableInfo
    fullName: SuperOffice.CRM.Data.SaleTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.SaleTableInfo
    name: SaleTableInfo
    nameWithType: SaleTableInfo
    fullName: SuperOffice.CRM.Data.SaleTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.SuggestedAppointmentId_InnerJoin_SuggestedAppointment*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.SuggestedAppointmentId_InnerJoin_SuggestedAppointment
  isExternal: true
  name: SuggestedAppointmentId_InnerJoin_SuggestedAppointment
  nameWithType: AppointmentTableInfo.SuggestedAppointmentId_InnerJoin_SuggestedAppointment
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.SuggestedAppointmentId_InnerJoin_SuggestedAppointment
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.SuggestedAppointmentTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.SuggestedAppointmentTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<SuggestedAppointmentTableInfo>
  nameWithType: TargetedInnerJoin<SuggestedAppointmentTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.SuggestedAppointmentTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of SuggestedAppointmentTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.SuggestedAppointmentTableInfo)
  name.vb: TargetedInnerJoin(Of SuggestedAppointmentTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.SuggestedAppointmentTableInfo
    name: SuggestedAppointmentTableInfo
    nameWithType: SuggestedAppointmentTableInfo
    fullName: SuperOffice.CRM.Data.SuggestedAppointmentTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.SuggestedAppointmentTableInfo
    name: SuggestedAppointmentTableInfo
    nameWithType: SuggestedAppointmentTableInfo
    fullName: SuperOffice.CRM.Data.SuggestedAppointmentTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.SuggestedDocumentId_InnerJoin_SuggestedDocument*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.SuggestedDocumentId_InnerJoin_SuggestedDocument
  isExternal: true
  name: SuggestedDocumentId_InnerJoin_SuggestedDocument
  nameWithType: AppointmentTableInfo.SuggestedDocumentId_InnerJoin_SuggestedDocument
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.SuggestedDocumentId_InnerJoin_SuggestedDocument
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.SuggestedDocumentTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.SuggestedDocumentTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<SuggestedDocumentTableInfo>
  nameWithType: TargetedInnerJoin<SuggestedDocumentTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.SuggestedDocumentTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of SuggestedDocumentTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.SuggestedDocumentTableInfo)
  name.vb: TargetedInnerJoin(Of SuggestedDocumentTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.SuggestedDocumentTableInfo
    name: SuggestedDocumentTableInfo
    nameWithType: SuggestedDocumentTableInfo
    fullName: SuperOffice.CRM.Data.SuggestedDocumentTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.SuggestedDocumentTableInfo
    name: SuggestedDocumentTableInfo
    nameWithType: SuggestedDocumentTableInfo
    fullName: SuperOffice.CRM.Data.SuggestedDocumentTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.MotherAssociateId_InnerJoin_Associate*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.MotherAssociateId_InnerJoin_Associate
  isExternal: true
  name: MotherAssociateId_InnerJoin_Associate
  nameWithType: AppointmentTableInfo.MotherAssociateId_InnerJoin_Associate
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.MotherAssociateId_InnerJoin_Associate
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_Document_AppointmentId*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_Document_AppointmentId
  isExternal: true
  name: LeftOuterJoin_Document_AppointmentId
  nameWithType: AppointmentTableInfo.LeftOuterJoin_Document_AppointmentId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_Document_AppointmentId
- uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.DocumentTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.DocumentTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
  name: TargetedLeftOuterJoin<DocumentTableInfo>
  nameWithType: TargetedLeftOuterJoin<DocumentTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin<SuperOffice.CRM.Data.DocumentTableInfo>
  nameWithType.vb: TargetedLeftOuterJoin(Of DocumentTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedLeftOuterJoin(Of SuperOffice.CRM.Data.DocumentTableInfo)
  name.vb: TargetedLeftOuterJoin(Of DocumentTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.DocumentTableInfo
    name: DocumentTableInfo
    nameWithType: DocumentTableInfo
    fullName: SuperOffice.CRM.Data.DocumentTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.DocumentTableInfo
    name: DocumentTableInfo
    nameWithType: DocumentTableInfo
    fullName: SuperOffice.CRM.Data.DocumentTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
  commentId: T:SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
  isExternal: true
  name: TargetedLeftOuterJoin<TargetTableInfo>
  nameWithType: TargetedLeftOuterJoin<TargetTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin<TargetTableInfo>
  nameWithType.vb: TargetedLeftOuterJoin(Of TargetTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedLeftOuterJoin(Of TargetTableInfo)
  name.vb: TargetedLeftOuterJoin(Of TargetTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TargetTableInfo
    nameWithType: TargetTableInfo
    fullName: TargetTableInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TargetTableInfo
    nameWithType: TargetTableInfo
    fullName: TargetTableInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_Project_NmdAppointmentId*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_Project_NmdAppointmentId
  isExternal: true
  name: LeftOuterJoin_Project_NmdAppointmentId
  nameWithType: AppointmentTableInfo.LeftOuterJoin_Project_NmdAppointmentId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_Project_NmdAppointmentId
- uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.ProjectTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.ProjectTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
  name: TargetedLeftOuterJoin<ProjectTableInfo>
  nameWithType: TargetedLeftOuterJoin<ProjectTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin<SuperOffice.CRM.Data.ProjectTableInfo>
  nameWithType.vb: TargetedLeftOuterJoin(Of ProjectTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedLeftOuterJoin(Of SuperOffice.CRM.Data.ProjectTableInfo)
  name.vb: TargetedLeftOuterJoin(Of ProjectTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.ProjectTableInfo
    name: ProjectTableInfo
    nameWithType: ProjectTableInfo
    fullName: SuperOffice.CRM.Data.ProjectTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.ProjectTableInfo
    name: ProjectTableInfo
    nameWithType: ProjectTableInfo
    fullName: SuperOffice.CRM.Data.ProjectTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_Sale_AppointmentId*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_Sale_AppointmentId
  isExternal: true
  name: LeftOuterJoin_Sale_AppointmentId
  nameWithType: AppointmentTableInfo.LeftOuterJoin_Sale_AppointmentId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_Sale_AppointmentId
- uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.SaleTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.SaleTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
  name: TargetedLeftOuterJoin<SaleTableInfo>
  nameWithType: TargetedLeftOuterJoin<SaleTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin<SuperOffice.CRM.Data.SaleTableInfo>
  nameWithType.vb: TargetedLeftOuterJoin(Of SaleTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedLeftOuterJoin(Of SuperOffice.CRM.Data.SaleTableInfo)
  name.vb: TargetedLeftOuterJoin(Of SaleTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.SaleTableInfo
    name: SaleTableInfo
    nameWithType: SaleTableInfo
    fullName: SuperOffice.CRM.Data.SaleTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.SaleTableInfo
    name: SaleTableInfo
    nameWithType: SaleTableInfo
    fullName: SuperOffice.CRM.Data.SaleTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_Sale_NddAppointmentId*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_Sale_NddAppointmentId
  isExternal: true
  name: LeftOuterJoin_Sale_NddAppointmentId
  nameWithType: AppointmentTableInfo.LeftOuterJoin_Sale_NddAppointmentId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_Sale_NddAppointmentId
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_QuoteVersion_FollowupId*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_QuoteVersion_FollowupId
  isExternal: true
  name: LeftOuterJoin_QuoteVersion_FollowupId
  nameWithType: AppointmentTableInfo.LeftOuterJoin_QuoteVersion_FollowupId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_QuoteVersion_FollowupId
- uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.QuoteVersionTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.QuoteVersionTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
  name: TargetedLeftOuterJoin<QuoteVersionTableInfo>
  nameWithType: TargetedLeftOuterJoin<QuoteVersionTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin<SuperOffice.CRM.Data.QuoteVersionTableInfo>
  nameWithType.vb: TargetedLeftOuterJoin(Of QuoteVersionTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedLeftOuterJoin(Of SuperOffice.CRM.Data.QuoteVersionTableInfo)
  name.vb: TargetedLeftOuterJoin(Of QuoteVersionTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.QuoteVersionTableInfo
    name: QuoteVersionTableInfo
    nameWithType: QuoteVersionTableInfo
    fullName: SuperOffice.CRM.Data.QuoteVersionTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.QuoteVersionTableInfo
    name: QuoteVersionTableInfo
    nameWithType: QuoteVersionTableInfo
    fullName: SuperOffice.CRM.Data.QuoteVersionTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_Email_AppointmentId*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_Email_AppointmentId
  isExternal: true
  name: LeftOuterJoin_Email_AppointmentId
  nameWithType: AppointmentTableInfo.LeftOuterJoin_Email_AppointmentId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_Email_AppointmentId
- uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.EmailTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.EmailTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
  name: TargetedLeftOuterJoin<EmailTableInfo>
  nameWithType: TargetedLeftOuterJoin<EmailTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin<SuperOffice.CRM.Data.EmailTableInfo>
  nameWithType.vb: TargetedLeftOuterJoin(Of EmailTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedLeftOuterJoin(Of SuperOffice.CRM.Data.EmailTableInfo)
  name.vb: TargetedLeftOuterJoin(Of EmailTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.EmailTableInfo
    name: EmailTableInfo
    nameWithType: EmailTableInfo
    fullName: SuperOffice.CRM.Data.EmailTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.EmailTableInfo
    name: EmailTableInfo
    nameWithType: EmailTableInfo
    fullName: SuperOffice.CRM.Data.EmailTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_SaleHist_AppointmentId*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_SaleHist_AppointmentId
  isExternal: true
  name: LeftOuterJoin_SaleHist_AppointmentId
  nameWithType: AppointmentTableInfo.LeftOuterJoin_SaleHist_AppointmentId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_SaleHist_AppointmentId
- uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.SaleHistTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.SaleHistTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
  name: TargetedLeftOuterJoin<SaleHistTableInfo>
  nameWithType: TargetedLeftOuterJoin<SaleHistTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin<SuperOffice.CRM.Data.SaleHistTableInfo>
  nameWithType.vb: TargetedLeftOuterJoin(Of SaleHistTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedLeftOuterJoin(Of SuperOffice.CRM.Data.SaleHistTableInfo)
  name.vb: TargetedLeftOuterJoin(Of SaleHistTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.SaleHistTableInfo
    name: SaleHistTableInfo
    nameWithType: SaleHistTableInfo
    fullName: SuperOffice.CRM.Data.SaleHistTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.SaleHistTableInfo
    name: SaleHistTableInfo
    nameWithType: SaleHistTableInfo
    fullName: SuperOffice.CRM.Data.SaleHistTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_SaleHist_NddAppointmentId*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_SaleHist_NddAppointmentId
  isExternal: true
  name: LeftOuterJoin_SaleHist_NddAppointmentId
  nameWithType: AppointmentTableInfo.LeftOuterJoin_SaleHist_NddAppointmentId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_SaleHist_NddAppointmentId
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_VisibleFor_AppointmentId*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_VisibleFor_AppointmentId
  isExternal: true
  name: LeftOuterJoin_VisibleFor_AppointmentId
  nameWithType: AppointmentTableInfo.LeftOuterJoin_VisibleFor_AppointmentId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_VisibleFor_AppointmentId
- uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.VisibleForTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.VisibleForTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
  name: TargetedLeftOuterJoin<VisibleForTableInfo>
  nameWithType: TargetedLeftOuterJoin<VisibleForTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin<SuperOffice.CRM.Data.VisibleForTableInfo>
  nameWithType.vb: TargetedLeftOuterJoin(Of VisibleForTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedLeftOuterJoin(Of SuperOffice.CRM.Data.VisibleForTableInfo)
  name.vb: TargetedLeftOuterJoin(Of VisibleForTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.VisibleForTableInfo
    name: VisibleForTableInfo
    nameWithType: VisibleForTableInfo
    fullName: SuperOffice.CRM.Data.VisibleForTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.VisibleForTableInfo
    name: VisibleForTableInfo
    nameWithType: VisibleForTableInfo
    fullName: SuperOffice.CRM.Data.VisibleForTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_EmailItem_AppointmentId*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_EmailItem_AppointmentId
  isExternal: true
  name: LeftOuterJoin_EmailItem_AppointmentId
  nameWithType: AppointmentTableInfo.LeftOuterJoin_EmailItem_AppointmentId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_EmailItem_AppointmentId
- uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.EmailItemTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.EmailItemTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
  name: TargetedLeftOuterJoin<EmailItemTableInfo>
  nameWithType: TargetedLeftOuterJoin<EmailItemTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin<SuperOffice.CRM.Data.EmailItemTableInfo>
  nameWithType.vb: TargetedLeftOuterJoin(Of EmailItemTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedLeftOuterJoin(Of SuperOffice.CRM.Data.EmailItemTableInfo)
  name.vb: TargetedLeftOuterJoin(Of EmailItemTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.EmailItemTableInfo
    name: EmailItemTableInfo
    nameWithType: EmailItemTableInfo
    fullName: SuperOffice.CRM.Data.EmailItemTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.EmailItemTableInfo
    name: EmailItemTableInfo
    nameWithType: EmailItemTableInfo
    fullName: SuperOffice.CRM.Data.EmailItemTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_Invitation_AppointmentId*
  commentId: Overload:SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_Invitation_AppointmentId
  isExternal: true
  name: LeftOuterJoin_Invitation_AppointmentId
  nameWithType: AppointmentTableInfo.LeftOuterJoin_Invitation_AppointmentId
  fullName: SuperOffice.CRM.Data.AppointmentTableInfo.LeftOuterJoin_Invitation_AppointmentId
- uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.InvitationTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.InvitationTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
  name: TargetedLeftOuterJoin<InvitationTableInfo>
  nameWithType: TargetedLeftOuterJoin<InvitationTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin<SuperOffice.CRM.Data.InvitationTableInfo>
  nameWithType.vb: TargetedLeftOuterJoin(Of InvitationTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedLeftOuterJoin(Of SuperOffice.CRM.Data.InvitationTableInfo)
  name.vb: TargetedLeftOuterJoin(Of InvitationTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.InvitationTableInfo
    name: InvitationTableInfo
    nameWithType: InvitationTableInfo
    fullName: SuperOffice.CRM.Data.InvitationTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.InvitationTableInfo
    name: InvitationTableInfo
    nameWithType: InvitationTableInfo
    fullName: SuperOffice.CRM.Data.InvitationTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
