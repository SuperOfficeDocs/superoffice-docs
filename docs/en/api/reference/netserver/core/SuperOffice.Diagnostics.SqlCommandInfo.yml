### YamlMime:ManagedReference
items:
- uid: SuperOffice.Diagnostics.SqlCommandInfo
  commentId: T:SuperOffice.Diagnostics.SqlCommandInfo
  id: SqlCommandInfo
  parent: SuperOffice.Diagnostics
  children:
  - SuperOffice.Diagnostics.SqlCommandInfo.#ctor
  - SuperOffice.Diagnostics.SqlCommandInfo.CommandText
  - SuperOffice.Diagnostics.SqlCommandInfo.Comment
  - SuperOffice.Diagnostics.SqlCommandInfo.ExecptionMessage
  - SuperOffice.Diagnostics.SqlCommandInfo.ExecutionTime
  - SuperOffice.Diagnostics.SqlCommandInfo.Origin
  - SuperOffice.Diagnostics.SqlCommandInfo.Parameters
  - SuperOffice.Diagnostics.SqlCommandInfo.RowsAffected
  - SuperOffice.Diagnostics.SqlCommandInfo.SqlType
  langs:
  - csharp
  - vb
  name: SqlCommandInfo
  nameWithType: SqlCommandInfo
  fullName: SuperOffice.Diagnostics.SqlCommandInfo
  type: Class
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Diagnostics
  syntax:
    content: public class SqlCommandInfo
    content.vb: Public Class SqlCommandInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.Diagnostics.SqlCommandInfo.EnumUtil.MapEnums``2
  - SuperOffice.Diagnostics.SqlCommandInfo.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Diagnostics.SqlCommandInfo)
  - SuperOffice.Diagnostics.SqlCommandInfo.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.Diagnostics.SqlCommandInfo.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.Diagnostics.SqlCommandInfo.#ctor
  commentId: M:SuperOffice.Diagnostics.SqlCommandInfo.#ctor
  id: '#ctor'
  parent: SuperOffice.Diagnostics.SqlCommandInfo
  langs:
  - csharp
  - vb
  name: SqlCommandInfo()
  nameWithType: SqlCommandInfo.SqlCommandInfo()
  fullName: SuperOffice.Diagnostics.SqlCommandInfo.SqlCommandInfo()
  type: Constructor
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Diagnostics
  syntax:
    content: public SqlCommandInfo()
    content.vb: Public Sub New
  overload: SuperOffice.Diagnostics.SqlCommandInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Diagnostics.SqlCommandInfo.CommandText
  commentId: P:SuperOffice.Diagnostics.SqlCommandInfo.CommandText
  id: CommandText
  parent: SuperOffice.Diagnostics.SqlCommandInfo
  langs:
  - csharp
  - vb
  name: CommandText
  nameWithType: SqlCommandInfo.CommandText
  fullName: SuperOffice.Diagnostics.SqlCommandInfo.CommandText
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Diagnostics
  syntax:
    content: public string CommandText { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CommandText As String
  overload: SuperOffice.Diagnostics.SqlCommandInfo.CommandText*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.Diagnostics.SqlCommandInfo.Comment
  commentId: P:SuperOffice.Diagnostics.SqlCommandInfo.Comment
  id: Comment
  parent: SuperOffice.Diagnostics.SqlCommandInfo
  langs:
  - csharp
  - vb
  name: Comment
  nameWithType: SqlCommandInfo.Comment
  fullName: SuperOffice.Diagnostics.SqlCommandInfo.Comment
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Diagnostics
  syntax:
    content: public string Comment { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Comment As String
  overload: SuperOffice.Diagnostics.SqlCommandInfo.Comment*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.Diagnostics.SqlCommandInfo.Origin
  commentId: P:SuperOffice.Diagnostics.SqlCommandInfo.Origin
  id: Origin
  parent: SuperOffice.Diagnostics.SqlCommandInfo
  langs:
  - csharp
  - vb
  name: Origin
  nameWithType: SqlCommandInfo.Origin
  fullName: SuperOffice.Diagnostics.SqlCommandInfo.Origin
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Diagnostics
  syntax:
    content: public string Origin { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Origin As String
  overload: SuperOffice.Diagnostics.SqlCommandInfo.Origin*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.Diagnostics.SqlCommandInfo.SqlType
  commentId: P:SuperOffice.Diagnostics.SqlCommandInfo.SqlType
  id: SqlType
  parent: SuperOffice.Diagnostics.SqlCommandInfo
  langs:
  - csharp
  - vb
  name: SqlType
  nameWithType: SqlCommandInfo.SqlType
  fullName: SuperOffice.Diagnostics.SqlCommandInfo.SqlType
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Diagnostics
  syntax:
    content: public string SqlType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SqlType As String
  overload: SuperOffice.Diagnostics.SqlCommandInfo.SqlType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.Diagnostics.SqlCommandInfo.ExecutionTime
  commentId: P:SuperOffice.Diagnostics.SqlCommandInfo.ExecutionTime
  id: ExecutionTime
  parent: SuperOffice.Diagnostics.SqlCommandInfo
  langs:
  - csharp
  - vb
  name: ExecutionTime
  nameWithType: SqlCommandInfo.ExecutionTime
  fullName: SuperOffice.Diagnostics.SqlCommandInfo.ExecutionTime
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Diagnostics
  syntax:
    content: public TimeSpan ExecutionTime { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public Property ExecutionTime As TimeSpan
  overload: SuperOffice.Diagnostics.SqlCommandInfo.ExecutionTime*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.Diagnostics.SqlCommandInfo.RowsAffected
  commentId: P:SuperOffice.Diagnostics.SqlCommandInfo.RowsAffected
  id: RowsAffected
  parent: SuperOffice.Diagnostics.SqlCommandInfo
  langs:
  - csharp
  - vb
  name: RowsAffected
  nameWithType: SqlCommandInfo.RowsAffected
  fullName: SuperOffice.Diagnostics.SqlCommandInfo.RowsAffected
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Diagnostics
  syntax:
    content: public int RowsAffected { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property RowsAffected As Integer
  overload: SuperOffice.Diagnostics.SqlCommandInfo.RowsAffected*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.Diagnostics.SqlCommandInfo.Parameters
  commentId: P:SuperOffice.Diagnostics.SqlCommandInfo.Parameters
  id: Parameters
  parent: SuperOffice.Diagnostics.SqlCommandInfo
  langs:
  - csharp
  - vb
  name: Parameters
  nameWithType: SqlCommandInfo.Parameters
  fullName: SuperOffice.Diagnostics.SqlCommandInfo.Parameters
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Diagnostics
  syntax:
    content: public SqlCommandParameterInfo[] Parameters { get; set; }
    parameters: []
    return:
      type: SuperOffice.Diagnostics.SqlCommandParameterInfo[]
    content.vb: Public Property Parameters As SqlCommandParameterInfo()
  overload: SuperOffice.Diagnostics.SqlCommandInfo.Parameters*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.Diagnostics.SqlCommandInfo.ExecptionMessage
  commentId: P:SuperOffice.Diagnostics.SqlCommandInfo.ExecptionMessage
  id: ExecptionMessage
  parent: SuperOffice.Diagnostics.SqlCommandInfo
  langs:
  - csharp
  - vb
  name: ExecptionMessage
  nameWithType: SqlCommandInfo.ExecptionMessage
  fullName: SuperOffice.Diagnostics.SqlCommandInfo.ExecptionMessage
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Diagnostics
  syntax:
    content: public string ExecptionMessage { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ExecptionMessage As String
  overload: SuperOffice.Diagnostics.SqlCommandInfo.ExecptionMessage*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.Diagnostics
  commentId: N:SuperOffice.Diagnostics
  isExternal: true
  name: SuperOffice.Diagnostics
  nameWithType: SuperOffice.Diagnostics
  fullName: SuperOffice.Diagnostics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Diagnostics.SqlCommandInfo.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<SqlCommandInfo, To>()
  nameWithType: EnumUtil.MapEnums<SqlCommandInfo, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Diagnostics.SqlCommandInfo, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of SqlCommandInfo, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Diagnostics.SqlCommandInfo, To)()
  name.vb: MapEnums(Of SqlCommandInfo, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<SqlCommandInfo, To>
    nameWithType: EnumUtil.MapEnums<SqlCommandInfo, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Diagnostics.SqlCommandInfo, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of SqlCommandInfo, To)
    nameWithType: EnumUtil.MapEnums(Of SqlCommandInfo, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Diagnostics.SqlCommandInfo, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Diagnostics.SqlCommandInfo.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Diagnostics.SqlCommandInfo)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<SqlCommandInfo>(SqlCommandInfo)
  nameWithType: ObjectExtensions.AssignByReflection<SqlCommandInfo>(SqlCommandInfo)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Diagnostics.SqlCommandInfo>(SuperOffice.Diagnostics.SqlCommandInfo)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of SqlCommandInfo)(SqlCommandInfo)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Diagnostics.SqlCommandInfo)(SuperOffice.Diagnostics.SqlCommandInfo)
  name.vb: AssignByReflection(Of SqlCommandInfo)(SqlCommandInfo)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<SqlCommandInfo>
    nameWithType: ObjectExtensions.AssignByReflection<SqlCommandInfo>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Diagnostics.SqlCommandInfo>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Diagnostics.SqlCommandInfo
    name: SqlCommandInfo
    nameWithType: SqlCommandInfo
    fullName: SuperOffice.Diagnostics.SqlCommandInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of SqlCommandInfo)
    nameWithType: ObjectExtensions.AssignByReflection(Of SqlCommandInfo)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Diagnostics.SqlCommandInfo)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Diagnostics.SqlCommandInfo
    name: SqlCommandInfo
    nameWithType: SqlCommandInfo
    fullName: SuperOffice.Diagnostics.SqlCommandInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Diagnostics.SqlCommandInfo.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<SqlCommandInfo>()
  nameWithType: ObjectExtensions.GraphCopy<SqlCommandInfo>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Diagnostics.SqlCommandInfo>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of SqlCommandInfo)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Diagnostics.SqlCommandInfo)()
  name.vb: GraphCopy(Of SqlCommandInfo)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<SqlCommandInfo>
    nameWithType: ObjectExtensions.GraphCopy<SqlCommandInfo>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Diagnostics.SqlCommandInfo>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of SqlCommandInfo)
    nameWithType: ObjectExtensions.GraphCopy(Of SqlCommandInfo)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Diagnostics.SqlCommandInfo)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Diagnostics.SqlCommandInfo.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<SqlCommandInfo, To>()
  nameWithType: Converters.MapEnums<SqlCommandInfo, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Diagnostics.SqlCommandInfo, To>()
  nameWithType.vb: Converters.MapEnums(Of SqlCommandInfo, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Diagnostics.SqlCommandInfo, To)()
  name.vb: MapEnums(Of SqlCommandInfo, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<SqlCommandInfo, To>
    nameWithType: Converters.MapEnums<SqlCommandInfo, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Diagnostics.SqlCommandInfo, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of SqlCommandInfo, To)
    nameWithType: Converters.MapEnums(Of SqlCommandInfo, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Diagnostics.SqlCommandInfo, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Diagnostics.SqlCommandInfo.#ctor*
  commentId: Overload:SuperOffice.Diagnostics.SqlCommandInfo.#ctor
  isExternal: true
  name: SqlCommandInfo
  nameWithType: SqlCommandInfo.SqlCommandInfo
  fullName: SuperOffice.Diagnostics.SqlCommandInfo.SqlCommandInfo
- uid: SuperOffice.Diagnostics.SqlCommandInfo.CommandText*
  commentId: Overload:SuperOffice.Diagnostics.SqlCommandInfo.CommandText
  isExternal: true
  name: CommandText
  nameWithType: SqlCommandInfo.CommandText
  fullName: SuperOffice.Diagnostics.SqlCommandInfo.CommandText
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.Diagnostics.SqlCommandInfo.Comment*
  commentId: Overload:SuperOffice.Diagnostics.SqlCommandInfo.Comment
  isExternal: true
  name: Comment
  nameWithType: SqlCommandInfo.Comment
  fullName: SuperOffice.Diagnostics.SqlCommandInfo.Comment
- uid: SuperOffice.Diagnostics.SqlCommandInfo.Origin*
  commentId: Overload:SuperOffice.Diagnostics.SqlCommandInfo.Origin
  isExternal: true
  name: Origin
  nameWithType: SqlCommandInfo.Origin
  fullName: SuperOffice.Diagnostics.SqlCommandInfo.Origin
- uid: SuperOffice.Diagnostics.SqlCommandInfo.SqlType*
  commentId: Overload:SuperOffice.Diagnostics.SqlCommandInfo.SqlType
  isExternal: true
  name: SqlType
  nameWithType: SqlCommandInfo.SqlType
  fullName: SuperOffice.Diagnostics.SqlCommandInfo.SqlType
- uid: SuperOffice.Diagnostics.SqlCommandInfo.ExecutionTime*
  commentId: Overload:SuperOffice.Diagnostics.SqlCommandInfo.ExecutionTime
  isExternal: true
  name: ExecutionTime
  nameWithType: SqlCommandInfo.ExecutionTime
  fullName: SuperOffice.Diagnostics.SqlCommandInfo.ExecutionTime
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: SuperOffice.Diagnostics.SqlCommandInfo.RowsAffected*
  commentId: Overload:SuperOffice.Diagnostics.SqlCommandInfo.RowsAffected
  isExternal: true
  name: RowsAffected
  nameWithType: SqlCommandInfo.RowsAffected
  fullName: SuperOffice.Diagnostics.SqlCommandInfo.RowsAffected
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.Diagnostics.SqlCommandInfo.Parameters*
  commentId: Overload:SuperOffice.Diagnostics.SqlCommandInfo.Parameters
  isExternal: true
  name: Parameters
  nameWithType: SqlCommandInfo.Parameters
  fullName: SuperOffice.Diagnostics.SqlCommandInfo.Parameters
- uid: SuperOffice.Diagnostics.SqlCommandParameterInfo[]
  isExternal: true
  name: SqlCommandParameterInfo[]
  nameWithType: SqlCommandParameterInfo[]
  fullName: SuperOffice.Diagnostics.SqlCommandParameterInfo[]
  nameWithType.vb: SqlCommandParameterInfo()
  fullName.vb: SuperOffice.Diagnostics.SqlCommandParameterInfo()
  name.vb: SqlCommandParameterInfo()
  spec.csharp:
  - uid: SuperOffice.Diagnostics.SqlCommandParameterInfo
    name: SqlCommandParameterInfo
    nameWithType: SqlCommandParameterInfo
    fullName: SuperOffice.Diagnostics.SqlCommandParameterInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.Diagnostics.SqlCommandParameterInfo
    name: SqlCommandParameterInfo
    nameWithType: SqlCommandParameterInfo
    fullName: SuperOffice.Diagnostics.SqlCommandParameterInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.Diagnostics.SqlCommandInfo.ExecptionMessage*
  commentId: Overload:SuperOffice.Diagnostics.SqlCommandInfo.ExecptionMessage
  isExternal: true
  name: ExecptionMessage
  nameWithType: SqlCommandInfo.ExecptionMessage
  fullName: SuperOffice.Diagnostics.SqlCommandInfo.ExecptionMessage
