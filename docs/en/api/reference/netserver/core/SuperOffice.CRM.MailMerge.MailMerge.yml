### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.MailMerge.MailMerge
  commentId: T:SuperOffice.CRM.MailMerge.MailMerge
  id: MailMerge
  parent: SuperOffice.CRM.MailMerge
  children:
  - SuperOffice.CRM.MailMerge.MailMerge.#ctor(SuperOffice.CRM.MailMerge.MailMergeSettings)
  - SuperOffice.CRM.MailMerge.MailMerge.Start
  langs:
  - csharp
  - vb
  name: MailMerge
  nameWithType: MailMerge
  fullName: SuperOffice.CRM.MailMerge.MailMerge
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.MailMerge
  summary: "\nThis class implements logic for creating, merging and delivering merge documents to recipients\n"
  syntax:
    content: 'public class MailMerge : Object'
    content.vb: >-
      Public Class MailMerge
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - SuperOffice.CRM.MailMerge.MailMerge.EnumUtil.MapEnums``2
  - SuperOffice.CRM.MailMerge.MailMerge.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.MailMerge.MailMerge.#ctor(SuperOffice.CRM.MailMerge.MailMergeSettings)
  commentId: M:SuperOffice.CRM.MailMerge.MailMerge.#ctor(SuperOffice.CRM.MailMerge.MailMergeSettings)
  id: '#ctor(SuperOffice.CRM.MailMerge.MailMergeSettings)'
  parent: SuperOffice.CRM.MailMerge.MailMerge
  langs:
  - csharp
  - vb
  name: MailMerge(MailMergeSettings)
  nameWithType: MailMerge.MailMerge(MailMergeSettings)
  fullName: SuperOffice.CRM.MailMerge.MailMerge.MailMerge(SuperOffice.CRM.MailMerge.MailMergeSettings)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.MailMerge
  summary: "\nConstructor\n"
  syntax:
    content: public MailMerge(MailMergeSettings settings)
    parameters:
    - id: settings
      type: SuperOffice.CRM.MailMerge.MailMergeSettings
      description: All configuration settings needed to perform the merge task
    content.vb: Public Sub New(settings As MailMergeSettings)
  overload: SuperOffice.CRM.MailMerge.MailMerge.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.MailMerge.MailMerge.Start
  commentId: M:SuperOffice.CRM.MailMerge.MailMerge.Start
  id: Start
  parent: SuperOffice.CRM.MailMerge.MailMerge
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: MailMerge.Start()
  fullName: SuperOffice.CRM.MailMerge.MailMerge.Start()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.MailMerge
  summary: "\nStart the merge operation\n"
  syntax:
    content: public void Start()
    content.vb: Public Sub Start
  overload: SuperOffice.CRM.MailMerge.MailMerge.Start*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.CRM.MailMerge
  commentId: N:SuperOffice.CRM.MailMerge
  isExternal: true
  name: SuperOffice.CRM.MailMerge
  nameWithType: SuperOffice.CRM.MailMerge
  fullName: SuperOffice.CRM.MailMerge
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.CRM.MailMerge.MailMerge.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<MailMerge, To>()
  nameWithType: EnumUtil.MapEnums<MailMerge, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.MailMerge.MailMerge, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of MailMerge, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.MailMerge.MailMerge, To)()
  name.vb: MapEnums(Of MailMerge, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<MailMerge, To>
    nameWithType: EnumUtil.MapEnums<MailMerge, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.MailMerge.MailMerge, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of MailMerge, To)
    nameWithType: EnumUtil.MapEnums(Of MailMerge, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.MailMerge.MailMerge, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.MailMerge.MailMerge.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<MailMerge, To>()
  nameWithType: Converters.MapEnums<MailMerge, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.MailMerge.MailMerge, To>()
  nameWithType.vb: Converters.MapEnums(Of MailMerge, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.MailMerge.MailMerge, To)()
  name.vb: MapEnums(Of MailMerge, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<MailMerge, To>
    nameWithType: Converters.MapEnums<MailMerge, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.MailMerge.MailMerge, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of MailMerge, To)
    nameWithType: Converters.MapEnums(Of MailMerge, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.MailMerge.MailMerge, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.MailMerge.MailMerge.#ctor*
  commentId: Overload:SuperOffice.CRM.MailMerge.MailMerge.#ctor
  isExternal: true
  name: MailMerge
  nameWithType: MailMerge.MailMerge
  fullName: SuperOffice.CRM.MailMerge.MailMerge.MailMerge
- uid: SuperOffice.CRM.MailMerge.MailMergeSettings
  commentId: T:SuperOffice.CRM.MailMerge.MailMergeSettings
  parent: SuperOffice.CRM.MailMerge
  isExternal: true
  name: MailMergeSettings
  nameWithType: MailMergeSettings
  fullName: SuperOffice.CRM.MailMerge.MailMergeSettings
- uid: SuperOffice.CRM.MailMerge.MailMerge.Start*
  commentId: Overload:SuperOffice.CRM.MailMerge.MailMerge.Start
  isExternal: true
  name: Start
  nameWithType: MailMerge.Start
  fullName: SuperOffice.CRM.MailMerge.MailMerge.Start
