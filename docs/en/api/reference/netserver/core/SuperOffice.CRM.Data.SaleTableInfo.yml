### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Data.SaleTableInfo
  commentId: T:SuperOffice.CRM.Data.SaleTableInfo
  id: SaleTableInfo
  parent: SuperOffice.CRM.Data
  children:
  - SuperOffice.CRM.Data.SaleTableInfo.ActiveErpLinks
  - SuperOffice.CRM.Data.SaleTableInfo.ActiveLinks
  - SuperOffice.CRM.Data.SaleTableInfo.Amount
  - SuperOffice.CRM.Data.SaleTableInfo.AppointmentId
  - SuperOffice.CRM.Data.SaleTableInfo.AppointmentId_InnerJoin_Appointment
  - SuperOffice.CRM.Data.SaleTableInfo.AssociateId
  - SuperOffice.CRM.Data.SaleTableInfo.AssociateId_InnerJoin_Associate
  - SuperOffice.CRM.Data.SaleTableInfo.ComptrId
  - SuperOffice.CRM.Data.SaleTableInfo.ComptrId_InnerJoin_Comptr
  - SuperOffice.CRM.Data.SaleTableInfo.ContactId
  - SuperOffice.CRM.Data.SaleTableInfo.ContactId_InnerJoin_Contact
  - SuperOffice.CRM.Data.SaleTableInfo.CreditedId
  - SuperOffice.CRM.Data.SaleTableInfo.CreditedId_InnerJoin_Credited
  - SuperOffice.CRM.Data.SaleTableInfo.CurrencyId
  - SuperOffice.CRM.Data.SaleTableInfo.CurrencyId_InnerJoin_Currency
  - SuperOffice.CRM.Data.SaleTableInfo.Definition
  - SuperOffice.CRM.Data.SaleTableInfo.DictionaryTableName
  - SuperOffice.CRM.Data.SaleTableInfo.DictionaryTableNumber
  - SuperOffice.CRM.Data.SaleTableInfo.Done
  - SuperOffice.CRM.Data.SaleTableInfo.Earning
  - SuperOffice.CRM.Data.SaleTableInfo.EarningPercent
  - SuperOffice.CRM.Data.SaleTableInfo.GroupIdx
  - SuperOffice.CRM.Data.SaleTableInfo.GroupIdx_InnerJoin_UserGroup
  - SuperOffice.CRM.Data.SaleTableInfo.Heading
  - SuperOffice.CRM.Data.SaleTableInfo.IdxAssociateId(System.Int32)
  - SuperOffice.CRM.Data.SaleTableInfo.IdxAssociateIdDone(System.Int32,SuperOffice.Data.SaleDone)
  - SuperOffice.CRM.Data.SaleTableInfo.IdxContactId(System.Int32)
  - SuperOffice.CRM.Data.SaleTableInfo.IdxContactIdSaledate(System.Int32,System.DateTime)
  - SuperOffice.CRM.Data.SaleTableInfo.IdxProjectId(System.Int32)
  - SuperOffice.CRM.Data.SaleTableInfo.IdxProjectIdSaledate(System.Int32,System.DateTime)
  - SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_Appointment_SaleId
  - SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_ChatSession_SaleId
  - SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_EmailItem_SaleId
  - SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_Quote_SaleId
  - SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_SaleHist_SaleId
  - SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_SaleStakeholder_SaleId
  - SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_VisibleFor_SaleId
  - SuperOffice.CRM.Data.SaleTableInfo.NddAppointmentId
  - SuperOffice.CRM.Data.SaleTableInfo.NddAppointmentId_InnerJoin_Appointment
  - SuperOffice.CRM.Data.SaleTableInfo.NextDueDate
  - SuperOffice.CRM.Data.SaleTableInfo.Number1
  - SuperOffice.CRM.Data.SaleTableInfo.PersonId
  - SuperOffice.CRM.Data.SaleTableInfo.PersonId_InnerJoin_Person
  - SuperOffice.CRM.Data.SaleTableInfo.PostitTextId
  - SuperOffice.CRM.Data.SaleTableInfo.PostitTextId_InnerJoin_Text
  - SuperOffice.CRM.Data.SaleTableInfo.Probability
  - SuperOffice.CRM.Data.SaleTableInfo.ProbabilityIdx
  - SuperOffice.CRM.Data.SaleTableInfo.ProbabilityIdx_InnerJoin_Prob
  - SuperOffice.CRM.Data.SaleTableInfo.ProjectId
  - SuperOffice.CRM.Data.SaleTableInfo.ProjectId_InnerJoin_Project
  - SuperOffice.CRM.Data.SaleTableInfo.ReasonId
  - SuperOffice.CRM.Data.SaleTableInfo.ReasonId_InnerJoin_Reason
  - SuperOffice.CRM.Data.SaleTableInfo.ReasonSoldId
  - SuperOffice.CRM.Data.SaleTableInfo.ReasonSoldId_InnerJoin_ReasonSold
  - SuperOffice.CRM.Data.SaleTableInfo.ReasonStalledId
  - SuperOffice.CRM.Data.SaleTableInfo.ReasonStalledId_InnerJoin_ReasonStalled
  - SuperOffice.CRM.Data.SaleTableInfo.Registered
  - SuperOffice.CRM.Data.SaleTableInfo.RegisteredAssociateId
  - SuperOffice.CRM.Data.SaleTableInfo.RegisteredAssociateId_InnerJoin_Associate
  - SuperOffice.CRM.Data.SaleTableInfo.ReopenDate
  - SuperOffice.CRM.Data.SaleTableInfo.RuntimeDefinition
  - SuperOffice.CRM.Data.SaleTableInfo.Saledate
  - SuperOffice.CRM.Data.SaleTableInfo.SaleId
  - SuperOffice.CRM.Data.SaleTableInfo.SaleTypeCatId
  - SuperOffice.CRM.Data.SaleTableInfo.SaleTypeCatId_InnerJoin_SaleTypeCat
  - SuperOffice.CRM.Data.SaleTableInfo.SaleTypeId
  - SuperOffice.CRM.Data.SaleTableInfo.SaleTypeId_InnerJoin_SaleType
  - SuperOffice.CRM.Data.SaleTableInfo.Source
  - SuperOffice.CRM.Data.SaleTableInfo.SourceId
  - SuperOffice.CRM.Data.SaleTableInfo.SourceId_InnerJoin_Source
  - SuperOffice.CRM.Data.SaleTableInfo.Status
  - SuperOffice.CRM.Data.SaleTableInfo.TextId
  - SuperOffice.CRM.Data.SaleTableInfo.TextId_InnerJoin_Text
  - SuperOffice.CRM.Data.SaleTableInfo.Updated
  - SuperOffice.CRM.Data.SaleTableInfo.UpdatedAssociateId
  - SuperOffice.CRM.Data.SaleTableInfo.UpdatedAssociateId_InnerJoin_Associate
  - SuperOffice.CRM.Data.SaleTableInfo.UpdatedCount
  - SuperOffice.CRM.Data.SaleTableInfo.Userdef2Id
  - SuperOffice.CRM.Data.SaleTableInfo.Userdef2Id_InnerJoin_UDSaleLarge
  - SuperOffice.CRM.Data.SaleTableInfo.UserdefId
  - SuperOffice.CRM.Data.SaleTableInfo.UserdefId_InnerJoin_UDSaleSmall
  - SuperOffice.CRM.Data.SaleTableInfo.Visibility
  langs:
  - csharp
  - vb
  name: SaleTableInfo
  nameWithType: SaleTableInfo
  fullName: SuperOffice.CRM.Data.SaleTableInfo
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nTable &apos;sale&apos;: Sales  For every Sale record edited through the SuperOffice GUI, a copy of the previous version of the record will be saved in the SaleHist table. This also applies to editing done through the SaleModel COM interface, but not to editing done through the OLE DB Provider or other channels.  \n"
  remarks: "\nAn instance of this class represents one instance of this table in an SQL statement. In most\ncases each table appears only once in a SELECT, but in cases where you need to self-join, or\nthere are multiple occurrences for other reasons (typically additional restrictions in the joins),\nthen you will need multiple instances. <br />\nInstances of this class are created by calling <see cref=\"!:TablesInfo.GetSaleInfo()\"></see>.\n"
  syntax:
    content: >-
      [DatabaseTable("sale")]

      public class SaleTableInfo : TableInfo, ICloneable
    content.vb: >-
      <DatabaseTable("sale")>

      Public Class SaleTableInfo
          Inherits TableInfo
          Implements ICloneable
  inheritance:
  - System.Object
  - SuperOffice.Data.SQL.TableInfo
  implements:
  - System.ICloneable
  inheritedMembers:
  - SuperOffice.Data.SQL.TableInfo.ToString
  - SuperOffice.Data.SQL.TableInfo.RegisterFields(SuperOffice.Data.SQL.FieldInfo[])
  - SuperOffice.Data.SQL.TableInfo.FieldInfoFromSoField(SuperOffice.Data.Dictionary.SoField)
  - SuperOffice.Data.SQL.TableInfo.Clone
  - SuperOffice.Data.SQL.TableInfo.IsSameTable(SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.Data.SQL.TableInfo.FindField(System.String)
  - SuperOffice.Data.SQL.TableInfo.ProtAll
  - SuperOffice.Data.SQL.TableInfo.HashCheckFields
  - SuperOffice.Data.SQL.TableInfo.TableName
  - SuperOffice.Data.SQL.TableInfo.DbName
  - SuperOffice.Data.SQL.TableInfo.IsDictionaryTable
  - SuperOffice.Data.SQL.TableInfo.All
  - SuperOffice.Data.SQL.TableInfo.Item(System.String)
  - SuperOffice.Data.SQL.TableInfo.PrimaryKeyField
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.Data.SaleTableInfo.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Data.SaleTableInfo.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  attributes:
  - type: SuperOffice.Data.SQL.DatabaseTableAttribute
    ctor: SuperOffice.Data.SQL.DatabaseTableAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: sale
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Data.SaleTableInfo.DictionaryTableName
  commentId: F:SuperOffice.CRM.Data.SaleTableInfo.DictionaryTableName
  id: DictionaryTableName
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: DictionaryTableName
  nameWithType: SaleTableInfo.DictionaryTableName
  fullName: SuperOffice.CRM.Data.SaleTableInfo.DictionaryTableName
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nConceptual name of table Sale in the database dictionary: sale\n"
  syntax:
    content: public const string DictionaryTableName = "sale"
    return:
      type: System.String
    content.vb: Public Const DictionaryTableName As String = "sale"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.Data.SaleTableInfo.IdxAssociateId(System.Int32)
  commentId: M:SuperOffice.CRM.Data.SaleTableInfo.IdxAssociateId(System.Int32)
  id: IdxAssociateId(System.Int32)
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: IdxAssociateId(Int32)
  nameWithType: SaleTableInfo.IdxAssociateId(Int32)
  fullName: SuperOffice.CRM.Data.SaleTableInfo.IdxAssociateId(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nShortcut method for looking up using the database index AssociateId, which spans the following fields:\n<table><thead><tr><th>Field</th><th>Description</th></tr></thead><tbody><tr><td>AssociateId</td><td>Owning associate</td></tr></tbody></table>\n"
  syntax:
    content: public Restriction IdxAssociateId(int associateId)
    parameters:
    - id: associateId
      type: System.Int32
    return:
      type: SuperOffice.Data.SQL.Restriction
    content.vb: Public Function IdxAssociateId(associateId As Integer) As Restriction
  overload: SuperOffice.CRM.Data.SaleTableInfo.IdxAssociateId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Data.SaleTableInfo.IdxAssociateIdDone(System.Int32,SuperOffice.Data.SaleDone)
  commentId: M:SuperOffice.CRM.Data.SaleTableInfo.IdxAssociateIdDone(System.Int32,SuperOffice.Data.SaleDone)
  id: IdxAssociateIdDone(System.Int32,SuperOffice.Data.SaleDone)
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: IdxAssociateIdDone(Int32, SaleDone)
  nameWithType: SaleTableInfo.IdxAssociateIdDone(Int32, SaleDone)
  fullName: SuperOffice.CRM.Data.SaleTableInfo.IdxAssociateIdDone(System.Int32, SuperOffice.Data.SaleDone)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nShortcut method for looking up using the database index AssociateIdDone, which spans the following fields:\n<table><thead><tr><th>Field</th><th>Description</th></tr></thead><tbody><tr><td>AssociateId</td><td>Owning associate</td></tr><tr><td>Done</td><td>Done (0=don&apos;t know, 1 = No, 2=Yes)</td></tr></tbody></table>\n"
  syntax:
    content: public Restriction IdxAssociateIdDone(int associateId, SaleDone done)
    parameters:
    - id: associateId
      type: System.Int32
    - id: done
      type: SuperOffice.Data.SaleDone
    return:
      type: SuperOffice.Data.SQL.Restriction
    content.vb: Public Function IdxAssociateIdDone(associateId As Integer, done As SaleDone) As Restriction
  overload: SuperOffice.CRM.Data.SaleTableInfo.IdxAssociateIdDone*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Data.SaleTableInfo.IdxContactId(System.Int32)
  commentId: M:SuperOffice.CRM.Data.SaleTableInfo.IdxContactId(System.Int32)
  id: IdxContactId(System.Int32)
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: IdxContactId(Int32)
  nameWithType: SaleTableInfo.IdxContactId(Int32)
  fullName: SuperOffice.CRM.Data.SaleTableInfo.IdxContactId(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nShortcut method for looking up using the database index ContactId, which spans the following fields:\n<table><thead><tr><th>Field</th><th>Description</th></tr></thead><tbody><tr><td>ContactId</td><td>Optional contact reference</td></tr></tbody></table>\n"
  syntax:
    content: public Restriction IdxContactId(int contactId)
    parameters:
    - id: contactId
      type: System.Int32
    return:
      type: SuperOffice.Data.SQL.Restriction
    content.vb: Public Function IdxContactId(contactId As Integer) As Restriction
  overload: SuperOffice.CRM.Data.SaleTableInfo.IdxContactId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Data.SaleTableInfo.IdxContactIdSaledate(System.Int32,System.DateTime)
  commentId: M:SuperOffice.CRM.Data.SaleTableInfo.IdxContactIdSaledate(System.Int32,System.DateTime)
  id: IdxContactIdSaledate(System.Int32,System.DateTime)
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: IdxContactIdSaledate(Int32, DateTime)
  nameWithType: SaleTableInfo.IdxContactIdSaledate(Int32, DateTime)
  fullName: SuperOffice.CRM.Data.SaleTableInfo.IdxContactIdSaledate(System.Int32, System.DateTime)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nShortcut method for looking up using the database index ContactIdSaledate, which spans the following fields:\n<table><thead><tr><th>Field</th><th>Description</th></tr></thead><tbody><tr><td>ContactId</td><td>Optional contact reference</td></tr><tr><td>Saledate</td><td>(expected / lost / won) sales date</td></tr></tbody></table>\n"
  syntax:
    content: public Restriction IdxContactIdSaledate(int contactId, DateTime saledate)
    parameters:
    - id: contactId
      type: System.Int32
    - id: saledate
      type: System.DateTime
    return:
      type: SuperOffice.Data.SQL.Restriction
    content.vb: Public Function IdxContactIdSaledate(contactId As Integer, saledate As Date) As Restriction
  overload: SuperOffice.CRM.Data.SaleTableInfo.IdxContactIdSaledate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Data.SaleTableInfo.IdxProjectId(System.Int32)
  commentId: M:SuperOffice.CRM.Data.SaleTableInfo.IdxProjectId(System.Int32)
  id: IdxProjectId(System.Int32)
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: IdxProjectId(Int32)
  nameWithType: SaleTableInfo.IdxProjectId(Int32)
  fullName: SuperOffice.CRM.Data.SaleTableInfo.IdxProjectId(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nShortcut method for looking up using the database index ProjectId, which spans the following fields:\n<table><thead><tr><th>Field</th><th>Description</th></tr></thead><tbody><tr><td>ProjectId</td><td>Optional project reference</td></tr></tbody></table>\n"
  syntax:
    content: public Restriction IdxProjectId(int projectId)
    parameters:
    - id: projectId
      type: System.Int32
    return:
      type: SuperOffice.Data.SQL.Restriction
    content.vb: Public Function IdxProjectId(projectId As Integer) As Restriction
  overload: SuperOffice.CRM.Data.SaleTableInfo.IdxProjectId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Data.SaleTableInfo.IdxProjectIdSaledate(System.Int32,System.DateTime)
  commentId: M:SuperOffice.CRM.Data.SaleTableInfo.IdxProjectIdSaledate(System.Int32,System.DateTime)
  id: IdxProjectIdSaledate(System.Int32,System.DateTime)
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: IdxProjectIdSaledate(Int32, DateTime)
  nameWithType: SaleTableInfo.IdxProjectIdSaledate(Int32, DateTime)
  fullName: SuperOffice.CRM.Data.SaleTableInfo.IdxProjectIdSaledate(System.Int32, System.DateTime)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nShortcut method for looking up using the database index ProjectIdSaledate, which spans the following fields:\n<table><thead><tr><th>Field</th><th>Description</th></tr></thead><tbody><tr><td>ProjectId</td><td>Optional project reference</td></tr><tr><td>Saledate</td><td>(expected / lost / won) sales date</td></tr></tbody></table>\n"
  syntax:
    content: public Restriction IdxProjectIdSaledate(int projectId, DateTime saledate)
    parameters:
    - id: projectId
      type: System.Int32
    - id: saledate
      type: System.DateTime
    return:
      type: SuperOffice.Data.SQL.Restriction
    content.vb: Public Function IdxProjectIdSaledate(projectId As Integer, saledate As Date) As Restriction
  overload: SuperOffice.CRM.Data.SaleTableInfo.IdxProjectIdSaledate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Data.SaleTableInfo.DictionaryTableNumber
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.DictionaryTableNumber
  id: DictionaryTableNumber
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: DictionaryTableNumber
  nameWithType: SaleTableInfo.DictionaryTableNumber
  fullName: SuperOffice.CRM.Data.SaleTableInfo.DictionaryTableNumber
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nTable number for table Sale in the database dictionary; potentially changes between databases, but\nalways the same over the lifetime of any single database\n"
  syntax:
    content: public int DictionaryTableNumber { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property DictionaryTableNumber As Integer
  overload: SuperOffice.CRM.Data.SaleTableInfo.DictionaryTableNumber*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.RuntimeDefinition
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.RuntimeDefinition
  id: RuntimeDefinition
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: RuntimeDefinition
  nameWithType: SaleTableInfo.RuntimeDefinition
  fullName: SuperOffice.CRM.Data.SaleTableInfo.RuntimeDefinition
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nDefinition of the table as described in the deployed runtime dictionary\n"
  syntax:
    content: >-
      [Obsolete("Use instance property Definition or static member DictionaryTableNumber", true)]

      public static SoTable RuntimeDefinition { get; }
    parameters: []
    return:
      type: SuperOffice.Data.Dictionary.SoTable
    content.vb: >-
      <Obsolete("Use instance property Definition or static member DictionaryTableNumber", True)>

      Public Shared ReadOnly Property RuntimeDefinition As SoTable
  overload: SuperOffice.CRM.Data.SaleTableInfo.RuntimeDefinition*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: Use instance property Definition or static member DictionaryTableNumber
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.Definition
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.Definition
  id: Definition
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: Definition
  nameWithType: SaleTableInfo.Definition
  fullName: SuperOffice.CRM.Data.SaleTableInfo.Definition
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nDefinition of the table as described in the deployed runtime dictionary\n"
  syntax:
    content: public override SoTable Definition { get; }
    parameters: []
    return:
      type: SuperOffice.Data.Dictionary.SoTable
    content.vb: Public Overrides ReadOnly Property Definition As SoTable
  overridden: SuperOffice.Data.SQL.TableInfo.Definition
  overload: SuperOffice.CRM.Data.SaleTableInfo.Definition*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.SaleId
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.SaleId
  id: SaleId
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: SaleId
  nameWithType: SaleTableInfo.SaleId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.SaleId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;sale_id&apos; in table &apos;sale&apos;: Dictionary type PK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nPrimary key\n"
  syntax:
    content: public Int32FieldInfo SaleId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property SaleId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.SaleTableInfo.SaleId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.AssociateId
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.AssociateId
  id: AssociateId
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: AssociateId
  nameWithType: SaleTableInfo.AssociateId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.AssociateId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;associate_id&apos; in table &apos;sale&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nOwning associate\n"
  syntax:
    content: public Int32FieldInfo AssociateId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property AssociateId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.SaleTableInfo.AssociateId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.GroupIdx
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.GroupIdx
  id: GroupIdx
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: GroupIdx
  nameWithType: SaleTableInfo.GroupIdx
  fullName: SuperOffice.CRM.Data.SaleTableInfo.GroupIdx
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;group_idx&apos; in table &apos;sale&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nOwner&apos;s group whn sale was created\n"
  syntax:
    content: public Int32FieldInfo GroupIdx { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property GroupIdx As Int32FieldInfo
  overload: SuperOffice.CRM.Data.SaleTableInfo.GroupIdx*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.ContactId
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.ContactId
  id: ContactId
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: ContactId
  nameWithType: SaleTableInfo.ContactId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.ContactId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;contact_id&apos; in table &apos;sale&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nOptional contact reference\n"
  syntax:
    content: public Int32FieldInfo ContactId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property ContactId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.SaleTableInfo.ContactId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.PersonId
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.PersonId
  id: PersonId
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: PersonId
  nameWithType: SaleTableInfo.PersonId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.PersonId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;person_id&apos; in table &apos;sale&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nOptional person reference\n"
  syntax:
    content: public Int32FieldInfo PersonId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property PersonId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.SaleTableInfo.PersonId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.Registered
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.Registered
  id: Registered
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: Registered
  nameWithType: SaleTableInfo.Registered
  fullName: SuperOffice.CRM.Data.SaleTableInfo.Registered
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;registered&apos; in table &apos;sale&apos;: Dictionary type UtcDateTime, .NET type: <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nRegistered date\n"
  syntax:
    content: public DateTimeFieldInfo Registered { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.DateTimeFieldInfo
    content.vb: Public ReadOnly Property Registered As DateTimeFieldInfo
  overload: SuperOffice.CRM.Data.SaleTableInfo.Registered*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.Saledate
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.Saledate
  id: Saledate
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: Saledate
  nameWithType: SaleTableInfo.Saledate
  fullName: SuperOffice.CRM.Data.SaleTableInfo.Saledate
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;saledate&apos; in table &apos;sale&apos;: Dictionary type DateTime, .NET type: <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref><p></p>\n(expected / lost / won) sales date\n"
  syntax:
    content: public DateTimeFieldInfo Saledate { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.DateTimeFieldInfo
    content.vb: Public ReadOnly Property Saledate As DateTimeFieldInfo
  overload: SuperOffice.CRM.Data.SaleTableInfo.Saledate*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.Amount
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.Amount
  id: Amount
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: Amount
  nameWithType: SaleTableInfo.Amount
  fullName: SuperOffice.CRM.Data.SaleTableInfo.Amount
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;amount&apos; in table &apos;sale&apos;: Dictionary type Double, .NET type: <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nTotal sale amount\n"
  syntax:
    content: public DoubleFieldInfo Amount { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.DoubleFieldInfo
    content.vb: Public ReadOnly Property Amount As DoubleFieldInfo
  overload: SuperOffice.CRM.Data.SaleTableInfo.Amount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.ProbabilityIdx
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.ProbabilityIdx
  id: ProbabilityIdx
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: ProbabilityIdx
  nameWithType: SaleTableInfo.ProbabilityIdx
  fullName: SuperOffice.CRM.Data.SaleTableInfo.ProbabilityIdx
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;probability_idx&apos; in table &apos;sale&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nPointer to probability list value\n"
  syntax:
    content: public Int32FieldInfo ProbabilityIdx { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property ProbabilityIdx As Int32FieldInfo
  overload: SuperOffice.CRM.Data.SaleTableInfo.ProbabilityIdx*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.AppointmentId
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.AppointmentId
  id: AppointmentId
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: AppointmentId
  nameWithType: SaleTableInfo.AppointmentId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.AppointmentId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;appointment_id&apos; in table &apos;sale&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nFor future use\n"
  syntax:
    content: public Int32FieldInfo AppointmentId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property AppointmentId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.SaleTableInfo.AppointmentId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.TextId
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.TextId
  id: TextId
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: TextId
  nameWithType: SaleTableInfo.TextId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.TextId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;text_id&apos; in table &apos;sale&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nOptional long description\n"
  syntax:
    content: public Int32FieldInfo TextId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property TextId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.SaleTableInfo.TextId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.ProjectId
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.ProjectId
  id: ProjectId
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: ProjectId
  nameWithType: SaleTableInfo.ProjectId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.ProjectId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;project_id&apos; in table &apos;sale&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nOptional project reference\n"
  syntax:
    content: public Int32FieldInfo ProjectId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property ProjectId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.SaleTableInfo.ProjectId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.Earning
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.Earning
  id: Earning
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: Earning
  nameWithType: SaleTableInfo.Earning
  fullName: SuperOffice.CRM.Data.SaleTableInfo.Earning
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;earning&apos; in table &apos;sale&apos;: Dictionary type Double, .NET type: <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nEarning on sale\n"
  syntax:
    content: public DoubleFieldInfo Earning { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.DoubleFieldInfo
    content.vb: Public ReadOnly Property Earning As DoubleFieldInfo
  overload: SuperOffice.CRM.Data.SaleTableInfo.Earning*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.EarningPercent
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.EarningPercent
  id: EarningPercent
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: EarningPercent
  nameWithType: SaleTableInfo.EarningPercent
  fullName: SuperOffice.CRM.Data.SaleTableInfo.EarningPercent
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;earning_percent&apos; in table &apos;sale&apos;: Dictionary type Double, .NET type: <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nEarning as percent of total\n"
  syntax:
    content: public DoubleFieldInfo EarningPercent { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.DoubleFieldInfo
    content.vb: Public ReadOnly Property EarningPercent As DoubleFieldInfo
  overload: SuperOffice.CRM.Data.SaleTableInfo.EarningPercent*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.UserdefId
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.UserdefId
  id: UserdefId
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: UserdefId
  nameWithType: SaleTableInfo.UserdefId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.UserdefId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;userdef_id&apos; in table &apos;sale&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nUser-defined fields reference\n"
  syntax:
    content: public Int32FieldInfo UserdefId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property UserdefId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.SaleTableInfo.UserdefId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.Userdef2Id
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.Userdef2Id
  id: Userdef2Id
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: Userdef2Id
  nameWithType: SaleTableInfo.Userdef2Id
  fullName: SuperOffice.CRM.Data.SaleTableInfo.Userdef2Id
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;userdef2_id&apos; in table &apos;sale&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nUser-defined fields reference\n"
  syntax:
    content: public Int32FieldInfo Userdef2Id { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property Userdef2Id As Int32FieldInfo
  overload: SuperOffice.CRM.Data.SaleTableInfo.Userdef2Id*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.Heading
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.Heading
  id: Heading
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: Heading
  nameWithType: SaleTableInfo.Heading
  fullName: SuperOffice.CRM.Data.SaleTableInfo.Heading
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;heading&apos; in table &apos;sale&apos;: Dictionary type String[220], .NET type: <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nSale heading (short description?)\n"
  syntax:
    content: public StringFieldInfo Heading { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.StringFieldInfo
    content.vb: Public ReadOnly Property Heading As StringFieldInfo
  overload: SuperOffice.CRM.Data.SaleTableInfo.Heading*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.CreditedId
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.CreditedId
  id: CreditedId
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: CreditedId
  nameWithType: SaleTableInfo.CreditedId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.CreditedId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;credited_id&apos; in table &apos;sale&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nWho is to be credited for the sale\n"
  syntax:
    content: public Int32FieldInfo CreditedId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property CreditedId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.SaleTableInfo.CreditedId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.SourceId
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.SourceId
  id: SourceId
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: SourceId
  nameWithType: SaleTableInfo.SourceId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.SourceId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;source_id&apos; in table &apos;sale&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nSource of order\n"
  syntax:
    content: public Int32FieldInfo SourceId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property SourceId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.SaleTableInfo.SourceId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.ReasonId
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.ReasonId
  id: ReasonId
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: ReasonId
  nameWithType: SaleTableInfo.ReasonId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.ReasonId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;reason_id&apos; in table &apos;sale&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nWhy we lost it\n"
  syntax:
    content: public Int32FieldInfo ReasonId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property ReasonId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.SaleTableInfo.ReasonId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.ComptrId
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.ComptrId
  id: ComptrId
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: ComptrId
  nameWithType: SaleTableInfo.ComptrId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.ComptrId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;comptr_id&apos; in table &apos;sale&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nCompetitor\n"
  syntax:
    content: public Int32FieldInfo ComptrId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property ComptrId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.SaleTableInfo.ComptrId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.CurrencyId
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.CurrencyId
  id: CurrencyId
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: CurrencyId
  nameWithType: SaleTableInfo.CurrencyId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.CurrencyId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;currency_id&apos; in table &apos;sale&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nCurrency of sale\n"
  syntax:
    content: public Int32FieldInfo CurrencyId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property CurrencyId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.SaleTableInfo.CurrencyId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.Probability
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.Probability
  id: Probability
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: Probability
  nameWithType: SaleTableInfo.Probability
  fullName: SuperOffice.CRM.Data.SaleTableInfo.Probability
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;probability&apos; in table &apos;sale&apos;: Dictionary type UShort, .NET type: <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nActual probability, may differ from the one in the list\n"
  syntax:
    content: public UInt16FieldInfo Probability { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.UInt16FieldInfo
    content.vb: Public ReadOnly Property Probability As UInt16FieldInfo
  overload: SuperOffice.CRM.Data.SaleTableInfo.Probability*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.Status
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.Status
  id: Status
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: SaleTableInfo.Status
  fullName: SuperOffice.CRM.Data.SaleTableInfo.Status
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;status&apos; in table &apos;sale&apos;: Dictionary type Enum, .NET type: <xref href=\"SuperOffice.Data.SaleStatus\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nStatus: 1 = open, 2 = sold, 3 = lost, 4 = stalled\n"
  syntax:
    content: public SaleStatusFieldInfo Status { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.SaleStatusFieldInfo
    content.vb: Public ReadOnly Property Status As SaleStatusFieldInfo
  overload: SuperOffice.CRM.Data.SaleTableInfo.Status*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.Done
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.Done
  id: Done
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: Done
  nameWithType: SaleTableInfo.Done
  fullName: SuperOffice.CRM.Data.SaleTableInfo.Done
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;done&apos; in table &apos;sale&apos;: Dictionary type Enum, .NET type: <xref href=\"SuperOffice.Data.SaleDone\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nDone (0=don&apos;t know, 1 = No, 2=Yes)\n"
  syntax:
    content: public SaleDoneFieldInfo Done { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.SaleDoneFieldInfo
    content.vb: Public ReadOnly Property Done As SaleDoneFieldInfo
  overload: SuperOffice.CRM.Data.SaleTableInfo.Done*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.Number1
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.Number1
  id: Number1
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: Number1
  nameWithType: SaleTableInfo.Number1
  fullName: SuperOffice.CRM.Data.SaleTableInfo.Number1
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;number1&apos; in table &apos;sale&apos;: Dictionary type String[50], .NET type: <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nAlphanumeric user field\n"
  syntax:
    content: public StringFieldInfo Number1 { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.StringFieldInfo
    content.vb: Public ReadOnly Property Number1 As StringFieldInfo
  overload: SuperOffice.CRM.Data.SaleTableInfo.Number1*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.Visibility
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.Visibility
  id: Visibility
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: Visibility
  nameWithType: SaleTableInfo.Visibility
  fullName: SuperOffice.CRM.Data.SaleTableInfo.Visibility
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;visibility&apos; in table &apos;sale&apos;: Dictionary type UShort, .NET type: <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nObsolete, but still maintained denormalization of visiblefor\n"
  syntax:
    content: public UInt16FieldInfo Visibility { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.UInt16FieldInfo
    content.vb: Public ReadOnly Property Visibility As UInt16FieldInfo
  overload: SuperOffice.CRM.Data.SaleTableInfo.Visibility*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.Source
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.Source
  id: Source
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: SaleTableInfo.Source
  fullName: SuperOffice.CRM.Data.SaleTableInfo.Source
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;source&apos; in table &apos;sale&apos;: Dictionary type UShort, .NET type: <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nFor future integration use; source of record\n"
  syntax:
    content: public UInt16FieldInfo Source { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.UInt16FieldInfo
    content.vb: Public ReadOnly Property Source As UInt16FieldInfo
  overload: SuperOffice.CRM.Data.SaleTableInfo.Source*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.RegisteredAssociateId
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.RegisteredAssociateId
  id: RegisteredAssociateId
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: RegisteredAssociateId
  nameWithType: SaleTableInfo.RegisteredAssociateId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.RegisteredAssociateId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;registered_associate_id&apos; in table &apos;sale&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nRegistered by whom\n"
  syntax:
    content: public Int32FieldInfo RegisteredAssociateId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property RegisteredAssociateId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.SaleTableInfo.RegisteredAssociateId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.Updated
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.Updated
  id: Updated
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: Updated
  nameWithType: SaleTableInfo.Updated
  fullName: SuperOffice.CRM.Data.SaleTableInfo.Updated
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;updated&apos; in table &apos;sale&apos;: Dictionary type UtcDateTime, .NET type: <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nLast updated\n"
  syntax:
    content: public DateTimeFieldInfo Updated { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.DateTimeFieldInfo
    content.vb: Public ReadOnly Property Updated As DateTimeFieldInfo
  overload: SuperOffice.CRM.Data.SaleTableInfo.Updated*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.UpdatedAssociateId
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.UpdatedAssociateId
  id: UpdatedAssociateId
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: UpdatedAssociateId
  nameWithType: SaleTableInfo.UpdatedAssociateId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.UpdatedAssociateId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;updated_associate_id&apos; in table &apos;sale&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nLast updated by whom\n"
  syntax:
    content: public Int32FieldInfo UpdatedAssociateId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property UpdatedAssociateId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.SaleTableInfo.UpdatedAssociateId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.UpdatedCount
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.UpdatedCount
  id: UpdatedCount
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: UpdatedCount
  nameWithType: SaleTableInfo.UpdatedCount
  fullName: SuperOffice.CRM.Data.SaleTableInfo.UpdatedCount
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;updatedCount&apos; in table &apos;sale&apos;: Dictionary type UShort, .NET type: <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nNumber of updates made to this record\n"
  syntax:
    content: public UInt16FieldInfo UpdatedCount { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.UInt16FieldInfo
    content.vb: Public ReadOnly Property UpdatedCount As UInt16FieldInfo
  overload: SuperOffice.CRM.Data.SaleTableInfo.UpdatedCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.ActiveLinks
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.ActiveLinks
  id: ActiveLinks
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: ActiveLinks
  nameWithType: SaleTableInfo.ActiveLinks
  fullName: SuperOffice.CRM.Data.SaleTableInfo.ActiveLinks
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;activeLinks&apos; in table &apos;sale&apos;: Dictionary type UInt, .NET type: <xref href=\"System.UInt32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nNumber of active links to documents and such\n"
  syntax:
    content: public FieldInfo ActiveLinks { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.FieldInfo
    content.vb: Public ReadOnly Property ActiveLinks As FieldInfo
  overload: SuperOffice.CRM.Data.SaleTableInfo.ActiveLinks*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.SaleTypeId
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.SaleTypeId
  id: SaleTypeId
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: SaleTypeId
  nameWithType: SaleTableInfo.SaleTypeId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.SaleTypeId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;saleType_id&apos; in table &apos;sale&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nLink to list, sale type (big sale, small sale, no-process sale, ...)\n"
  syntax:
    content: public Int32FieldInfo SaleTypeId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property SaleTypeId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.SaleTableInfo.SaleTypeId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.PostitTextId
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.PostitTextId
  id: PostitTextId
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: PostitTextId
  nameWithType: SaleTableInfo.PostitTextId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.PostitTextId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;postitText_id&apos; in table &apos;sale&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nPaperclip text\n"
  syntax:
    content: public Int32FieldInfo PostitTextId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property PostitTextId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.SaleTableInfo.PostitTextId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.ReasonStalledId
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.ReasonStalledId
  id: ReasonStalledId
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: ReasonStalledId
  nameWithType: SaleTableInfo.ReasonStalledId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.ReasonStalledId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;reasonStalled_id&apos; in table &apos;sale&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nIf the status is stalled, it should be commented here\n"
  syntax:
    content: public Int32FieldInfo ReasonStalledId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property ReasonStalledId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.SaleTableInfo.ReasonStalledId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.ReopenDate
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.ReopenDate
  id: ReopenDate
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: ReopenDate
  nameWithType: SaleTableInfo.ReopenDate
  fullName: SuperOffice.CRM.Data.SaleTableInfo.ReopenDate
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;reopenDate&apos; in table &apos;sale&apos;: Dictionary type DateTime, .NET type: <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nDate the sale is to be reopened; valid only for status=stalled. Not necessarily the same as the nextDueDate.\n"
  syntax:
    content: public DateTimeFieldInfo ReopenDate { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.DateTimeFieldInfo
    content.vb: Public ReadOnly Property ReopenDate As DateTimeFieldInfo
  overload: SuperOffice.CRM.Data.SaleTableInfo.ReopenDate*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.NextDueDate
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.NextDueDate
  id: NextDueDate
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: NextDueDate
  nameWithType: SaleTableInfo.NextDueDate
  fullName: SuperOffice.CRM.Data.SaleTableInfo.NextDueDate
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;nextDueDate&apos; in table &apos;sale&apos;: Dictionary type DateTime, .NET type: <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nNext due date, this is a denormalization of &apos;closest future activity date, or most recent if no future activities&apos;. Maintained by the system, but very convenient for searching.\n"
  syntax:
    content: public DateTimeFieldInfo NextDueDate { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.DateTimeFieldInfo
    content.vb: Public ReadOnly Property NextDueDate As DateTimeFieldInfo
  overload: SuperOffice.CRM.Data.SaleTableInfo.NextDueDate*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.NddAppointmentId
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.NddAppointmentId
  id: NddAppointmentId
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: NddAppointmentId
  nameWithType: SaleTableInfo.NddAppointmentId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.NddAppointmentId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;nddAppointment_id&apos; in table &apos;sale&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nID, can be 0, of the appointment that &quot;caused&quot; the nextDueDate\n"
  syntax:
    content: public Int32FieldInfo NddAppointmentId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property NddAppointmentId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.SaleTableInfo.NddAppointmentId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.ReasonSoldId
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.ReasonSoldId
  id: ReasonSoldId
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: ReasonSoldId
  nameWithType: SaleTableInfo.ReasonSoldId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.ReasonSoldId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;reasonSold_id&apos; in table &apos;sale&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nReason why we made the sale\n"
  syntax:
    content: public Int32FieldInfo ReasonSoldId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property ReasonSoldId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.SaleTableInfo.ReasonSoldId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.SaleTypeCatId
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.SaleTypeCatId
  id: SaleTypeCatId
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: SaleTypeCatId
  nameWithType: SaleTableInfo.SaleTypeCatId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.SaleTypeCatId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;saleTypeCat_id&apos; in table &apos;sale&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nCategory of sale type, slaved from saletype\n"
  syntax:
    content: public Int32FieldInfo SaleTypeCatId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property SaleTypeCatId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.SaleTableInfo.SaleTypeCatId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.ActiveErpLinks
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.ActiveErpLinks
  id: ActiveErpLinks
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: ActiveErpLinks
  nameWithType: SaleTableInfo.ActiveErpLinks
  fullName: SuperOffice.CRM.Data.SaleTableInfo.ActiveErpLinks
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;activeErpLinks&apos; in table &apos;sale&apos;: Dictionary type Int, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nThe number of Erp Sync connections this record is synced with; count of the ErpExternalKey+ErpInternalKey relations\n"
  syntax:
    content: public Int32FieldInfo ActiveErpLinks { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property ActiveErpLinks As Int32FieldInfo
  overload: SuperOffice.CRM.Data.SaleTableInfo.ActiveErpLinks*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.AssociateId_InnerJoin_Associate
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.AssociateId_InnerJoin_Associate
  id: AssociateId_InnerJoin_Associate
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: AssociateId_InnerJoin_Associate
  nameWithType: SaleTableInfo.AssociateId_InnerJoin_Associate
  fullName: SuperOffice.CRM.Data.SaleTableInfo.AssociateId_InnerJoin_Associate
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key AssociateId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.AssociateTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<AssociateTableInfo> AssociateId_InnerJoin_Associate { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.AssociateTableInfo}
    content.vb: Public ReadOnly Property AssociateId_InnerJoin_Associate As TargetedInnerJoin(Of AssociateTableInfo)
  overload: SuperOffice.CRM.Data.SaleTableInfo.AssociateId_InnerJoin_Associate*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.GroupIdx_InnerJoin_UserGroup
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.GroupIdx_InnerJoin_UserGroup
  id: GroupIdx_InnerJoin_UserGroup
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: GroupIdx_InnerJoin_UserGroup
  nameWithType: SaleTableInfo.GroupIdx_InnerJoin_UserGroup
  fullName: SuperOffice.CRM.Data.SaleTableInfo.GroupIdx_InnerJoin_UserGroup
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key GroupIdx in this table, to its target table <xref href=\"SuperOffice.CRM.Data.UserGroupTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<UserGroupTableInfo> GroupIdx_InnerJoin_UserGroup { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.UserGroupTableInfo}
    content.vb: Public ReadOnly Property GroupIdx_InnerJoin_UserGroup As TargetedInnerJoin(Of UserGroupTableInfo)
  overload: SuperOffice.CRM.Data.SaleTableInfo.GroupIdx_InnerJoin_UserGroup*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.ContactId_InnerJoin_Contact
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.ContactId_InnerJoin_Contact
  id: ContactId_InnerJoin_Contact
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: ContactId_InnerJoin_Contact
  nameWithType: SaleTableInfo.ContactId_InnerJoin_Contact
  fullName: SuperOffice.CRM.Data.SaleTableInfo.ContactId_InnerJoin_Contact
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key ContactId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.ContactTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<ContactTableInfo> ContactId_InnerJoin_Contact { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.ContactTableInfo}
    content.vb: Public ReadOnly Property ContactId_InnerJoin_Contact As TargetedInnerJoin(Of ContactTableInfo)
  overload: SuperOffice.CRM.Data.SaleTableInfo.ContactId_InnerJoin_Contact*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.PersonId_InnerJoin_Person
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.PersonId_InnerJoin_Person
  id: PersonId_InnerJoin_Person
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: PersonId_InnerJoin_Person
  nameWithType: SaleTableInfo.PersonId_InnerJoin_Person
  fullName: SuperOffice.CRM.Data.SaleTableInfo.PersonId_InnerJoin_Person
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key PersonId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.PersonTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<PersonTableInfo> PersonId_InnerJoin_Person { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.PersonTableInfo}
    content.vb: Public ReadOnly Property PersonId_InnerJoin_Person As TargetedInnerJoin(Of PersonTableInfo)
  overload: SuperOffice.CRM.Data.SaleTableInfo.PersonId_InnerJoin_Person*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.ProbabilityIdx_InnerJoin_Prob
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.ProbabilityIdx_InnerJoin_Prob
  id: ProbabilityIdx_InnerJoin_Prob
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: ProbabilityIdx_InnerJoin_Prob
  nameWithType: SaleTableInfo.ProbabilityIdx_InnerJoin_Prob
  fullName: SuperOffice.CRM.Data.SaleTableInfo.ProbabilityIdx_InnerJoin_Prob
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key ProbabilityIdx in this table, to its target table <xref href=\"SuperOffice.CRM.Data.ProbTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<ProbTableInfo> ProbabilityIdx_InnerJoin_Prob { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.ProbTableInfo}
    content.vb: Public ReadOnly Property ProbabilityIdx_InnerJoin_Prob As TargetedInnerJoin(Of ProbTableInfo)
  overload: SuperOffice.CRM.Data.SaleTableInfo.ProbabilityIdx_InnerJoin_Prob*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.AppointmentId_InnerJoin_Appointment
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.AppointmentId_InnerJoin_Appointment
  id: AppointmentId_InnerJoin_Appointment
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: AppointmentId_InnerJoin_Appointment
  nameWithType: SaleTableInfo.AppointmentId_InnerJoin_Appointment
  fullName: SuperOffice.CRM.Data.SaleTableInfo.AppointmentId_InnerJoin_Appointment
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key AppointmentId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.AppointmentTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<AppointmentTableInfo> AppointmentId_InnerJoin_Appointment { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.AppointmentTableInfo}
    content.vb: Public ReadOnly Property AppointmentId_InnerJoin_Appointment As TargetedInnerJoin(Of AppointmentTableInfo)
  overload: SuperOffice.CRM.Data.SaleTableInfo.AppointmentId_InnerJoin_Appointment*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.TextId_InnerJoin_Text
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.TextId_InnerJoin_Text
  id: TextId_InnerJoin_Text
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: TextId_InnerJoin_Text
  nameWithType: SaleTableInfo.TextId_InnerJoin_Text
  fullName: SuperOffice.CRM.Data.SaleTableInfo.TextId_InnerJoin_Text
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key TextId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.TextTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<TextTableInfo> TextId_InnerJoin_Text { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.TextTableInfo}
    content.vb: Public ReadOnly Property TextId_InnerJoin_Text As TargetedInnerJoin(Of TextTableInfo)
  overload: SuperOffice.CRM.Data.SaleTableInfo.TextId_InnerJoin_Text*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.ProjectId_InnerJoin_Project
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.ProjectId_InnerJoin_Project
  id: ProjectId_InnerJoin_Project
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: ProjectId_InnerJoin_Project
  nameWithType: SaleTableInfo.ProjectId_InnerJoin_Project
  fullName: SuperOffice.CRM.Data.SaleTableInfo.ProjectId_InnerJoin_Project
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key ProjectId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.ProjectTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<ProjectTableInfo> ProjectId_InnerJoin_Project { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.ProjectTableInfo}
    content.vb: Public ReadOnly Property ProjectId_InnerJoin_Project As TargetedInnerJoin(Of ProjectTableInfo)
  overload: SuperOffice.CRM.Data.SaleTableInfo.ProjectId_InnerJoin_Project*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.UserdefId_InnerJoin_UDSaleSmall
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.UserdefId_InnerJoin_UDSaleSmall
  id: UserdefId_InnerJoin_UDSaleSmall
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: UserdefId_InnerJoin_UDSaleSmall
  nameWithType: SaleTableInfo.UserdefId_InnerJoin_UDSaleSmall
  fullName: SuperOffice.CRM.Data.SaleTableInfo.UserdefId_InnerJoin_UDSaleSmall
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key UserdefId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.UDSaleSmallTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<UDSaleSmallTableInfo> UserdefId_InnerJoin_UDSaleSmall { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.UDSaleSmallTableInfo}
    content.vb: Public ReadOnly Property UserdefId_InnerJoin_UDSaleSmall As TargetedInnerJoin(Of UDSaleSmallTableInfo)
  overload: SuperOffice.CRM.Data.SaleTableInfo.UserdefId_InnerJoin_UDSaleSmall*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.Userdef2Id_InnerJoin_UDSaleLarge
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.Userdef2Id_InnerJoin_UDSaleLarge
  id: Userdef2Id_InnerJoin_UDSaleLarge
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: Userdef2Id_InnerJoin_UDSaleLarge
  nameWithType: SaleTableInfo.Userdef2Id_InnerJoin_UDSaleLarge
  fullName: SuperOffice.CRM.Data.SaleTableInfo.Userdef2Id_InnerJoin_UDSaleLarge
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key Userdef2Id in this table, to its target table <xref href=\"SuperOffice.CRM.Data.UDSaleLargeTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<UDSaleLargeTableInfo> Userdef2Id_InnerJoin_UDSaleLarge { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.UDSaleLargeTableInfo}
    content.vb: Public ReadOnly Property Userdef2Id_InnerJoin_UDSaleLarge As TargetedInnerJoin(Of UDSaleLargeTableInfo)
  overload: SuperOffice.CRM.Data.SaleTableInfo.Userdef2Id_InnerJoin_UDSaleLarge*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.CreditedId_InnerJoin_Credited
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.CreditedId_InnerJoin_Credited
  id: CreditedId_InnerJoin_Credited
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: CreditedId_InnerJoin_Credited
  nameWithType: SaleTableInfo.CreditedId_InnerJoin_Credited
  fullName: SuperOffice.CRM.Data.SaleTableInfo.CreditedId_InnerJoin_Credited
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key CreditedId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.CreditedTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<CreditedTableInfo> CreditedId_InnerJoin_Credited { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.CreditedTableInfo}
    content.vb: Public ReadOnly Property CreditedId_InnerJoin_Credited As TargetedInnerJoin(Of CreditedTableInfo)
  overload: SuperOffice.CRM.Data.SaleTableInfo.CreditedId_InnerJoin_Credited*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.SourceId_InnerJoin_Source
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.SourceId_InnerJoin_Source
  id: SourceId_InnerJoin_Source
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: SourceId_InnerJoin_Source
  nameWithType: SaleTableInfo.SourceId_InnerJoin_Source
  fullName: SuperOffice.CRM.Data.SaleTableInfo.SourceId_InnerJoin_Source
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key SourceId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.SourceTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<SourceTableInfo> SourceId_InnerJoin_Source { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.SourceTableInfo}
    content.vb: Public ReadOnly Property SourceId_InnerJoin_Source As TargetedInnerJoin(Of SourceTableInfo)
  overload: SuperOffice.CRM.Data.SaleTableInfo.SourceId_InnerJoin_Source*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.ReasonId_InnerJoin_Reason
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.ReasonId_InnerJoin_Reason
  id: ReasonId_InnerJoin_Reason
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: ReasonId_InnerJoin_Reason
  nameWithType: SaleTableInfo.ReasonId_InnerJoin_Reason
  fullName: SuperOffice.CRM.Data.SaleTableInfo.ReasonId_InnerJoin_Reason
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key ReasonId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.ReasonTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<ReasonTableInfo> ReasonId_InnerJoin_Reason { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.ReasonTableInfo}
    content.vb: Public ReadOnly Property ReasonId_InnerJoin_Reason As TargetedInnerJoin(Of ReasonTableInfo)
  overload: SuperOffice.CRM.Data.SaleTableInfo.ReasonId_InnerJoin_Reason*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.ComptrId_InnerJoin_Comptr
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.ComptrId_InnerJoin_Comptr
  id: ComptrId_InnerJoin_Comptr
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: ComptrId_InnerJoin_Comptr
  nameWithType: SaleTableInfo.ComptrId_InnerJoin_Comptr
  fullName: SuperOffice.CRM.Data.SaleTableInfo.ComptrId_InnerJoin_Comptr
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key ComptrId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.ComptrTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<ComptrTableInfo> ComptrId_InnerJoin_Comptr { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.ComptrTableInfo}
    content.vb: Public ReadOnly Property ComptrId_InnerJoin_Comptr As TargetedInnerJoin(Of ComptrTableInfo)
  overload: SuperOffice.CRM.Data.SaleTableInfo.ComptrId_InnerJoin_Comptr*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.CurrencyId_InnerJoin_Currency
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.CurrencyId_InnerJoin_Currency
  id: CurrencyId_InnerJoin_Currency
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: CurrencyId_InnerJoin_Currency
  nameWithType: SaleTableInfo.CurrencyId_InnerJoin_Currency
  fullName: SuperOffice.CRM.Data.SaleTableInfo.CurrencyId_InnerJoin_Currency
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key CurrencyId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.CurrencyTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<CurrencyTableInfo> CurrencyId_InnerJoin_Currency { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.CurrencyTableInfo}
    content.vb: Public ReadOnly Property CurrencyId_InnerJoin_Currency As TargetedInnerJoin(Of CurrencyTableInfo)
  overload: SuperOffice.CRM.Data.SaleTableInfo.CurrencyId_InnerJoin_Currency*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.RegisteredAssociateId_InnerJoin_Associate
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.RegisteredAssociateId_InnerJoin_Associate
  id: RegisteredAssociateId_InnerJoin_Associate
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: RegisteredAssociateId_InnerJoin_Associate
  nameWithType: SaleTableInfo.RegisteredAssociateId_InnerJoin_Associate
  fullName: SuperOffice.CRM.Data.SaleTableInfo.RegisteredAssociateId_InnerJoin_Associate
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key RegisteredAssociateId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.AssociateTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<AssociateTableInfo> RegisteredAssociateId_InnerJoin_Associate { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.AssociateTableInfo}
    content.vb: Public ReadOnly Property RegisteredAssociateId_InnerJoin_Associate As TargetedInnerJoin(Of AssociateTableInfo)
  overload: SuperOffice.CRM.Data.SaleTableInfo.RegisteredAssociateId_InnerJoin_Associate*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.UpdatedAssociateId_InnerJoin_Associate
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.UpdatedAssociateId_InnerJoin_Associate
  id: UpdatedAssociateId_InnerJoin_Associate
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: UpdatedAssociateId_InnerJoin_Associate
  nameWithType: SaleTableInfo.UpdatedAssociateId_InnerJoin_Associate
  fullName: SuperOffice.CRM.Data.SaleTableInfo.UpdatedAssociateId_InnerJoin_Associate
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key UpdatedAssociateId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.AssociateTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<AssociateTableInfo> UpdatedAssociateId_InnerJoin_Associate { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.AssociateTableInfo}
    content.vb: Public ReadOnly Property UpdatedAssociateId_InnerJoin_Associate As TargetedInnerJoin(Of AssociateTableInfo)
  overload: SuperOffice.CRM.Data.SaleTableInfo.UpdatedAssociateId_InnerJoin_Associate*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.SaleTypeId_InnerJoin_SaleType
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.SaleTypeId_InnerJoin_SaleType
  id: SaleTypeId_InnerJoin_SaleType
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: SaleTypeId_InnerJoin_SaleType
  nameWithType: SaleTableInfo.SaleTypeId_InnerJoin_SaleType
  fullName: SuperOffice.CRM.Data.SaleTableInfo.SaleTypeId_InnerJoin_SaleType
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key SaleTypeId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.SaleTypeTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<SaleTypeTableInfo> SaleTypeId_InnerJoin_SaleType { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.SaleTypeTableInfo}
    content.vb: Public ReadOnly Property SaleTypeId_InnerJoin_SaleType As TargetedInnerJoin(Of SaleTypeTableInfo)
  overload: SuperOffice.CRM.Data.SaleTableInfo.SaleTypeId_InnerJoin_SaleType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.PostitTextId_InnerJoin_Text
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.PostitTextId_InnerJoin_Text
  id: PostitTextId_InnerJoin_Text
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: PostitTextId_InnerJoin_Text
  nameWithType: SaleTableInfo.PostitTextId_InnerJoin_Text
  fullName: SuperOffice.CRM.Data.SaleTableInfo.PostitTextId_InnerJoin_Text
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key PostitTextId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.TextTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<TextTableInfo> PostitTextId_InnerJoin_Text { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.TextTableInfo}
    content.vb: Public ReadOnly Property PostitTextId_InnerJoin_Text As TargetedInnerJoin(Of TextTableInfo)
  overload: SuperOffice.CRM.Data.SaleTableInfo.PostitTextId_InnerJoin_Text*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.ReasonStalledId_InnerJoin_ReasonStalled
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.ReasonStalledId_InnerJoin_ReasonStalled
  id: ReasonStalledId_InnerJoin_ReasonStalled
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: ReasonStalledId_InnerJoin_ReasonStalled
  nameWithType: SaleTableInfo.ReasonStalledId_InnerJoin_ReasonStalled
  fullName: SuperOffice.CRM.Data.SaleTableInfo.ReasonStalledId_InnerJoin_ReasonStalled
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key ReasonStalledId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.ReasonStalledTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<ReasonStalledTableInfo> ReasonStalledId_InnerJoin_ReasonStalled { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.ReasonStalledTableInfo}
    content.vb: Public ReadOnly Property ReasonStalledId_InnerJoin_ReasonStalled As TargetedInnerJoin(Of ReasonStalledTableInfo)
  overload: SuperOffice.CRM.Data.SaleTableInfo.ReasonStalledId_InnerJoin_ReasonStalled*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.NddAppointmentId_InnerJoin_Appointment
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.NddAppointmentId_InnerJoin_Appointment
  id: NddAppointmentId_InnerJoin_Appointment
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: NddAppointmentId_InnerJoin_Appointment
  nameWithType: SaleTableInfo.NddAppointmentId_InnerJoin_Appointment
  fullName: SuperOffice.CRM.Data.SaleTableInfo.NddAppointmentId_InnerJoin_Appointment
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key NddAppointmentId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.AppointmentTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<AppointmentTableInfo> NddAppointmentId_InnerJoin_Appointment { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.AppointmentTableInfo}
    content.vb: Public ReadOnly Property NddAppointmentId_InnerJoin_Appointment As TargetedInnerJoin(Of AppointmentTableInfo)
  overload: SuperOffice.CRM.Data.SaleTableInfo.NddAppointmentId_InnerJoin_Appointment*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.ReasonSoldId_InnerJoin_ReasonSold
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.ReasonSoldId_InnerJoin_ReasonSold
  id: ReasonSoldId_InnerJoin_ReasonSold
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: ReasonSoldId_InnerJoin_ReasonSold
  nameWithType: SaleTableInfo.ReasonSoldId_InnerJoin_ReasonSold
  fullName: SuperOffice.CRM.Data.SaleTableInfo.ReasonSoldId_InnerJoin_ReasonSold
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key ReasonSoldId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.ReasonSoldTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<ReasonSoldTableInfo> ReasonSoldId_InnerJoin_ReasonSold { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.ReasonSoldTableInfo}
    content.vb: Public ReadOnly Property ReasonSoldId_InnerJoin_ReasonSold As TargetedInnerJoin(Of ReasonSoldTableInfo)
  overload: SuperOffice.CRM.Data.SaleTableInfo.ReasonSoldId_InnerJoin_ReasonSold*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.SaleTypeCatId_InnerJoin_SaleTypeCat
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.SaleTypeCatId_InnerJoin_SaleTypeCat
  id: SaleTypeCatId_InnerJoin_SaleTypeCat
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: SaleTypeCatId_InnerJoin_SaleTypeCat
  nameWithType: SaleTableInfo.SaleTypeCatId_InnerJoin_SaleTypeCat
  fullName: SuperOffice.CRM.Data.SaleTableInfo.SaleTypeCatId_InnerJoin_SaleTypeCat
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key SaleTypeCatId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.SaleTypeCatTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<SaleTypeCatTableInfo> SaleTypeCatId_InnerJoin_SaleTypeCat { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.SaleTypeCatTableInfo}
    content.vb: Public ReadOnly Property SaleTypeCatId_InnerJoin_SaleTypeCat As TargetedInnerJoin(Of SaleTypeCatTableInfo)
  overload: SuperOffice.CRM.Data.SaleTableInfo.SaleTypeCatId_InnerJoin_SaleTypeCat*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_Appointment_SaleId
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_Appointment_SaleId
  id: LeftOuterJoin_Appointment_SaleId
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: LeftOuterJoin_Appointment_SaleId
  nameWithType: SaleTableInfo.LeftOuterJoin_Appointment_SaleId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_Appointment_SaleId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated left outer join from the primary key SaleId on this table, to Appointment.<xref href=\"SuperOffice.CRM.Data.AppointmentTableInfo.SaleId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedLeftOuterJoin<AppointmentTableInfo> LeftOuterJoin_Appointment_SaleId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.AppointmentTableInfo}
    content.vb: Public ReadOnly Property LeftOuterJoin_Appointment_SaleId As TargetedLeftOuterJoin(Of AppointmentTableInfo)
  overload: SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_Appointment_SaleId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_Quote_SaleId
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_Quote_SaleId
  id: LeftOuterJoin_Quote_SaleId
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: LeftOuterJoin_Quote_SaleId
  nameWithType: SaleTableInfo.LeftOuterJoin_Quote_SaleId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_Quote_SaleId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated left outer join from the primary key SaleId on this table, to Quote.<xref href=\"SuperOffice.CRM.Data.QuoteTableInfo.SaleId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedLeftOuterJoin<QuoteTableInfo> LeftOuterJoin_Quote_SaleId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.QuoteTableInfo}
    content.vb: Public ReadOnly Property LeftOuterJoin_Quote_SaleId As TargetedLeftOuterJoin(Of QuoteTableInfo)
  overload: SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_Quote_SaleId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_SaleStakeholder_SaleId
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_SaleStakeholder_SaleId
  id: LeftOuterJoin_SaleStakeholder_SaleId
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: LeftOuterJoin_SaleStakeholder_SaleId
  nameWithType: SaleTableInfo.LeftOuterJoin_SaleStakeholder_SaleId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_SaleStakeholder_SaleId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated left outer join from the primary key SaleId on this table, to SaleStakeholder.<xref href=\"SuperOffice.CRM.Data.SaleStakeholderTableInfo.SaleId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedLeftOuterJoin<SaleStakeholderTableInfo> LeftOuterJoin_SaleStakeholder_SaleId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.SaleStakeholderTableInfo}
    content.vb: Public ReadOnly Property LeftOuterJoin_SaleStakeholder_SaleId As TargetedLeftOuterJoin(Of SaleStakeholderTableInfo)
  overload: SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_SaleStakeholder_SaleId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_SaleHist_SaleId
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_SaleHist_SaleId
  id: LeftOuterJoin_SaleHist_SaleId
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: LeftOuterJoin_SaleHist_SaleId
  nameWithType: SaleTableInfo.LeftOuterJoin_SaleHist_SaleId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_SaleHist_SaleId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated left outer join from the primary key SaleId on this table, to SaleHist.<xref href=\"SuperOffice.CRM.Data.SaleHistTableInfo.SaleId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedLeftOuterJoin<SaleHistTableInfo> LeftOuterJoin_SaleHist_SaleId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.SaleHistTableInfo}
    content.vb: Public ReadOnly Property LeftOuterJoin_SaleHist_SaleId As TargetedLeftOuterJoin(Of SaleHistTableInfo)
  overload: SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_SaleHist_SaleId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_VisibleFor_SaleId
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_VisibleFor_SaleId
  id: LeftOuterJoin_VisibleFor_SaleId
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: LeftOuterJoin_VisibleFor_SaleId
  nameWithType: SaleTableInfo.LeftOuterJoin_VisibleFor_SaleId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_VisibleFor_SaleId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated left outer join from the primary key SaleId on this table, to VisibleFor.<xref href=\"SuperOffice.CRM.Data.VisibleForTableInfo.SaleId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedLeftOuterJoin<VisibleForTableInfo> LeftOuterJoin_VisibleFor_SaleId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.VisibleForTableInfo}
    content.vb: Public ReadOnly Property LeftOuterJoin_VisibleFor_SaleId As TargetedLeftOuterJoin(Of VisibleForTableInfo)
  overload: SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_VisibleFor_SaleId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_ChatSession_SaleId
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_ChatSession_SaleId
  id: LeftOuterJoin_ChatSession_SaleId
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: LeftOuterJoin_ChatSession_SaleId
  nameWithType: SaleTableInfo.LeftOuterJoin_ChatSession_SaleId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_ChatSession_SaleId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated left outer join from the primary key SaleId on this table, to ChatSession.<xref href=\"SuperOffice.CRM.Data.ChatSessionTableInfo.SaleId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedLeftOuterJoin<ChatSessionTableInfo> LeftOuterJoin_ChatSession_SaleId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.ChatSessionTableInfo}
    content.vb: Public ReadOnly Property LeftOuterJoin_ChatSession_SaleId As TargetedLeftOuterJoin(Of ChatSessionTableInfo)
  overload: SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_ChatSession_SaleId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_EmailItem_SaleId
  commentId: P:SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_EmailItem_SaleId
  id: LeftOuterJoin_EmailItem_SaleId
  parent: SuperOffice.CRM.Data.SaleTableInfo
  langs:
  - csharp
  - vb
  name: LeftOuterJoin_EmailItem_SaleId
  nameWithType: SaleTableInfo.LeftOuterJoin_EmailItem_SaleId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_EmailItem_SaleId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated left outer join from the primary key SaleId on this table, to EmailItem.<xref href=\"SuperOffice.CRM.Data.EmailItemTableInfo.SaleId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedLeftOuterJoin<EmailItemTableInfo> LeftOuterJoin_EmailItem_SaleId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.EmailItemTableInfo}
    content.vb: Public ReadOnly Property LeftOuterJoin_EmailItem_SaleId As TargetedLeftOuterJoin(Of EmailItemTableInfo)
  overload: SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_EmailItem_SaleId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: SuperOffice.CRM.Data
  commentId: N:SuperOffice.CRM.Data
  isExternal: true
  name: SuperOffice.CRM.Data
  nameWithType: SuperOffice.CRM.Data
  fullName: SuperOffice.CRM.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Data.SQL.TableInfo
  commentId: T:SuperOffice.Data.SQL.TableInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: TableInfo
  nameWithType: TableInfo
  fullName: SuperOffice.Data.SQL.TableInfo
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: SuperOffice.Data.SQL.TableInfo.ToString
  commentId: M:SuperOffice.Data.SQL.TableInfo.ToString
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: ToString()
  nameWithType: TableInfo.ToString()
  fullName: SuperOffice.Data.SQL.TableInfo.ToString()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TableInfo.ToString
    name: ToString
    nameWithType: TableInfo.ToString
    fullName: SuperOffice.Data.SQL.TableInfo.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.TableInfo.ToString
    name: ToString
    nameWithType: TableInfo.ToString
    fullName: SuperOffice.Data.SQL.TableInfo.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.TableInfo.RegisterFields(SuperOffice.Data.SQL.FieldInfo[])
  commentId: M:SuperOffice.Data.SQL.TableInfo.RegisterFields(SuperOffice.Data.SQL.FieldInfo[])
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: RegisterFields(FieldInfo[])
  nameWithType: TableInfo.RegisterFields(FieldInfo[])
  fullName: SuperOffice.Data.SQL.TableInfo.RegisterFields(SuperOffice.Data.SQL.FieldInfo[])
  nameWithType.vb: TableInfo.RegisterFields(FieldInfo())
  fullName.vb: SuperOffice.Data.SQL.TableInfo.RegisterFields(SuperOffice.Data.SQL.FieldInfo())
  name.vb: RegisterFields(FieldInfo())
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TableInfo.RegisterFields(SuperOffice.Data.SQL.FieldInfo[])
    name: RegisterFields
    nameWithType: TableInfo.RegisterFields
    fullName: SuperOffice.Data.SQL.TableInfo.RegisterFields
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.TableInfo.RegisterFields(SuperOffice.Data.SQL.FieldInfo[])
    name: RegisterFields
    nameWithType: TableInfo.RegisterFields
    fullName: SuperOffice.Data.SQL.TableInfo.RegisterFields
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.TableInfo.FieldInfoFromSoField(SuperOffice.Data.Dictionary.SoField)
  commentId: M:SuperOffice.Data.SQL.TableInfo.FieldInfoFromSoField(SuperOffice.Data.Dictionary.SoField)
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: FieldInfoFromSoField(SoField)
  nameWithType: TableInfo.FieldInfoFromSoField(SoField)
  fullName: SuperOffice.Data.SQL.TableInfo.FieldInfoFromSoField(SuperOffice.Data.Dictionary.SoField)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TableInfo.FieldInfoFromSoField(SuperOffice.Data.Dictionary.SoField)
    name: FieldInfoFromSoField
    nameWithType: TableInfo.FieldInfoFromSoField
    fullName: SuperOffice.Data.SQL.TableInfo.FieldInfoFromSoField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.Dictionary.SoField
    name: SoField
    nameWithType: SoField
    fullName: SuperOffice.Data.Dictionary.SoField
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.TableInfo.FieldInfoFromSoField(SuperOffice.Data.Dictionary.SoField)
    name: FieldInfoFromSoField
    nameWithType: TableInfo.FieldInfoFromSoField
    fullName: SuperOffice.Data.SQL.TableInfo.FieldInfoFromSoField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.Dictionary.SoField
    name: SoField
    nameWithType: SoField
    fullName: SuperOffice.Data.Dictionary.SoField
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.TableInfo.Clone
  commentId: M:SuperOffice.Data.SQL.TableInfo.Clone
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: Clone()
  nameWithType: TableInfo.Clone()
  fullName: SuperOffice.Data.SQL.TableInfo.Clone()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TableInfo.Clone
    name: Clone
    nameWithType: TableInfo.Clone
    fullName: SuperOffice.Data.SQL.TableInfo.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.TableInfo.Clone
    name: Clone
    nameWithType: TableInfo.Clone
    fullName: SuperOffice.Data.SQL.TableInfo.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.TableInfo.IsSameTable(SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.Data.SQL.TableInfo.IsSameTable(SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: IsSameTable(TableInfo)
  nameWithType: TableInfo.IsSameTable(TableInfo)
  fullName: SuperOffice.Data.SQL.TableInfo.IsSameTable(SuperOffice.Data.SQL.TableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TableInfo.IsSameTable(SuperOffice.Data.SQL.TableInfo)
    name: IsSameTable
    nameWithType: TableInfo.IsSameTable
    fullName: SuperOffice.Data.SQL.TableInfo.IsSameTable
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.TableInfo.IsSameTable(SuperOffice.Data.SQL.TableInfo)
    name: IsSameTable
    nameWithType: TableInfo.IsSameTable
    fullName: SuperOffice.Data.SQL.TableInfo.IsSameTable
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.TableInfo.FindField(System.String)
  commentId: M:SuperOffice.Data.SQL.TableInfo.FindField(System.String)
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: FindField(String)
  nameWithType: TableInfo.FindField(String)
  fullName: SuperOffice.Data.SQL.TableInfo.FindField(System.String)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TableInfo.FindField(System.String)
    name: FindField
    nameWithType: TableInfo.FindField
    fullName: SuperOffice.Data.SQL.TableInfo.FindField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.TableInfo.FindField(System.String)
    name: FindField
    nameWithType: TableInfo.FindField
    fullName: SuperOffice.Data.SQL.TableInfo.FindField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.TableInfo.ProtAll
  commentId: P:SuperOffice.Data.SQL.TableInfo.ProtAll
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: ProtAll
  nameWithType: TableInfo.ProtAll
  fullName: SuperOffice.Data.SQL.TableInfo.ProtAll
- uid: SuperOffice.Data.SQL.TableInfo.HashCheckFields
  commentId: P:SuperOffice.Data.SQL.TableInfo.HashCheckFields
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: HashCheckFields
  nameWithType: TableInfo.HashCheckFields
  fullName: SuperOffice.Data.SQL.TableInfo.HashCheckFields
- uid: SuperOffice.Data.SQL.TableInfo.TableName
  commentId: P:SuperOffice.Data.SQL.TableInfo.TableName
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: TableName
  nameWithType: TableInfo.TableName
  fullName: SuperOffice.Data.SQL.TableInfo.TableName
- uid: SuperOffice.Data.SQL.TableInfo.DbName
  commentId: P:SuperOffice.Data.SQL.TableInfo.DbName
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: DbName
  nameWithType: TableInfo.DbName
  fullName: SuperOffice.Data.SQL.TableInfo.DbName
- uid: SuperOffice.Data.SQL.TableInfo.IsDictionaryTable
  commentId: P:SuperOffice.Data.SQL.TableInfo.IsDictionaryTable
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: IsDictionaryTable
  nameWithType: TableInfo.IsDictionaryTable
  fullName: SuperOffice.Data.SQL.TableInfo.IsDictionaryTable
- uid: SuperOffice.Data.SQL.TableInfo.All
  commentId: P:SuperOffice.Data.SQL.TableInfo.All
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: All
  nameWithType: TableInfo.All
  fullName: SuperOffice.Data.SQL.TableInfo.All
- uid: SuperOffice.Data.SQL.TableInfo.Item(System.String)
  commentId: P:SuperOffice.Data.SQL.TableInfo.Item(System.String)
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: Item[String]
  nameWithType: TableInfo.Item[String]
  fullName: SuperOffice.Data.SQL.TableInfo.Item[System.String]
  nameWithType.vb: TableInfo.Item(String)
  fullName.vb: SuperOffice.Data.SQL.TableInfo.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TableInfo.Item(System.String)
    name: Item
    nameWithType: TableInfo.Item
    fullName: SuperOffice.Data.SQL.TableInfo.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TableInfo.Item(System.String)
    name: Item
    nameWithType: TableInfo.Item
    fullName: SuperOffice.Data.SQL.TableInfo.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.TableInfo.PrimaryKeyField
  commentId: P:SuperOffice.Data.SQL.TableInfo.PrimaryKeyField
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: PrimaryKeyField
  nameWithType: TableInfo.PrimaryKeyField
  fullName: SuperOffice.Data.SQL.TableInfo.PrimaryKeyField
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.SaleTableInfo.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<SaleTableInfo, To>()
  nameWithType: EnumUtil.MapEnums<SaleTableInfo, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Data.SaleTableInfo, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of SaleTableInfo, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Data.SaleTableInfo, To)()
  name.vb: MapEnums(Of SaleTableInfo, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<SaleTableInfo, To>
    nameWithType: EnumUtil.MapEnums<SaleTableInfo, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Data.SaleTableInfo, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of SaleTableInfo, To)
    nameWithType: EnumUtil.MapEnums(Of SaleTableInfo, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Data.SaleTableInfo, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.SaleTableInfo.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<SaleTableInfo, To>()
  nameWithType: Converters.MapEnums<SaleTableInfo, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Data.SaleTableInfo, To>()
  nameWithType.vb: Converters.MapEnums(Of SaleTableInfo, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Data.SaleTableInfo, To)()
  name.vb: MapEnums(Of SaleTableInfo, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<SaleTableInfo, To>
    nameWithType: Converters.MapEnums<SaleTableInfo, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Data.SaleTableInfo, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of SaleTableInfo, To)
    nameWithType: Converters.MapEnums(Of SaleTableInfo, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Data.SaleTableInfo, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Data.SQL
  commentId: N:SuperOffice.Data.SQL
  isExternal: true
  name: SuperOffice.Data.SQL
  nameWithType: SuperOffice.Data.SQL
  fullName: SuperOffice.Data.SQL
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.Data.SaleTableInfo.IdxAssociateId*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.IdxAssociateId
  isExternal: true
  name: IdxAssociateId
  nameWithType: SaleTableInfo.IdxAssociateId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.IdxAssociateId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.Data.SQL.Restriction
  commentId: T:SuperOffice.Data.SQL.Restriction
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: Restriction
  nameWithType: Restriction
  fullName: SuperOffice.Data.SQL.Restriction
- uid: SuperOffice.CRM.Data.SaleTableInfo.IdxAssociateIdDone*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.IdxAssociateIdDone
  isExternal: true
  name: IdxAssociateIdDone
  nameWithType: SaleTableInfo.IdxAssociateIdDone
  fullName: SuperOffice.CRM.Data.SaleTableInfo.IdxAssociateIdDone
- uid: SuperOffice.Data.SaleDone
  commentId: T:SuperOffice.Data.SaleDone
  parent: SuperOffice.Data
  isExternal: true
  name: SaleDone
  nameWithType: SaleDone
  fullName: SuperOffice.Data.SaleDone
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.CRM.Data.SaleTableInfo.IdxContactId*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.IdxContactId
  isExternal: true
  name: IdxContactId
  nameWithType: SaleTableInfo.IdxContactId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.IdxContactId
- uid: SuperOffice.CRM.Data.SaleTableInfo.IdxContactIdSaledate*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.IdxContactIdSaledate
  isExternal: true
  name: IdxContactIdSaledate
  nameWithType: SaleTableInfo.IdxContactIdSaledate
  fullName: SuperOffice.CRM.Data.SaleTableInfo.IdxContactIdSaledate
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: SuperOffice.CRM.Data.SaleTableInfo.IdxProjectId*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.IdxProjectId
  isExternal: true
  name: IdxProjectId
  nameWithType: SaleTableInfo.IdxProjectId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.IdxProjectId
- uid: SuperOffice.CRM.Data.SaleTableInfo.IdxProjectIdSaledate*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.IdxProjectIdSaledate
  isExternal: true
  name: IdxProjectIdSaledate
  nameWithType: SaleTableInfo.IdxProjectIdSaledate
  fullName: SuperOffice.CRM.Data.SaleTableInfo.IdxProjectIdSaledate
- uid: SuperOffice.CRM.Data.SaleTableInfo.DictionaryTableNumber*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.DictionaryTableNumber
  isExternal: true
  name: DictionaryTableNumber
  nameWithType: SaleTableInfo.DictionaryTableNumber
  fullName: SuperOffice.CRM.Data.SaleTableInfo.DictionaryTableNumber
- uid: SuperOffice.CRM.Data.SaleTableInfo.RuntimeDefinition*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.RuntimeDefinition
  isExternal: true
  name: RuntimeDefinition
  nameWithType: SaleTableInfo.RuntimeDefinition
  fullName: SuperOffice.CRM.Data.SaleTableInfo.RuntimeDefinition
- uid: SuperOffice.Data.Dictionary.SoTable
  commentId: T:SuperOffice.Data.Dictionary.SoTable
  parent: SuperOffice.Data.Dictionary
  isExternal: true
  name: SoTable
  nameWithType: SoTable
  fullName: SuperOffice.Data.Dictionary.SoTable
- uid: SuperOffice.Data.Dictionary
  commentId: N:SuperOffice.Data.Dictionary
  isExternal: true
  name: SuperOffice.Data.Dictionary
  nameWithType: SuperOffice.Data.Dictionary
  fullName: SuperOffice.Data.Dictionary
- uid: SuperOffice.Data.SQL.TableInfo.Definition
  commentId: P:SuperOffice.Data.SQL.TableInfo.Definition
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: Definition
  nameWithType: TableInfo.Definition
  fullName: SuperOffice.Data.SQL.TableInfo.Definition
- uid: SuperOffice.CRM.Data.SaleTableInfo.Definition*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.Definition
  isExternal: true
  name: Definition
  nameWithType: SaleTableInfo.Definition
  fullName: SuperOffice.CRM.Data.SaleTableInfo.Definition
- uid: SuperOffice.CRM.Data.SaleTableInfo.SaleId*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.SaleId
  isExternal: true
  name: SaleId
  nameWithType: SaleTableInfo.SaleId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.SaleId
- uid: SuperOffice.Data.SQL.Int32FieldInfo
  commentId: T:SuperOffice.Data.SQL.Int32FieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: Int32FieldInfo
  nameWithType: Int32FieldInfo
  fullName: SuperOffice.Data.SQL.Int32FieldInfo
- uid: SuperOffice.CRM.Data.SaleTableInfo.AssociateId*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.AssociateId
  isExternal: true
  name: AssociateId
  nameWithType: SaleTableInfo.AssociateId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.AssociateId
- uid: SuperOffice.CRM.Data.SaleTableInfo.GroupIdx*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.GroupIdx
  isExternal: true
  name: GroupIdx
  nameWithType: SaleTableInfo.GroupIdx
  fullName: SuperOffice.CRM.Data.SaleTableInfo.GroupIdx
- uid: SuperOffice.CRM.Data.SaleTableInfo.ContactId*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.ContactId
  isExternal: true
  name: ContactId
  nameWithType: SaleTableInfo.ContactId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.ContactId
- uid: SuperOffice.CRM.Data.SaleTableInfo.PersonId*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.PersonId
  isExternal: true
  name: PersonId
  nameWithType: SaleTableInfo.PersonId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.PersonId
- uid: SuperOffice.CRM.Data.SaleTableInfo.Registered*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.Registered
  isExternal: true
  name: Registered
  nameWithType: SaleTableInfo.Registered
  fullName: SuperOffice.CRM.Data.SaleTableInfo.Registered
- uid: SuperOffice.Data.SQL.DateTimeFieldInfo
  commentId: T:SuperOffice.Data.SQL.DateTimeFieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: DateTimeFieldInfo
  nameWithType: DateTimeFieldInfo
  fullName: SuperOffice.Data.SQL.DateTimeFieldInfo
- uid: SuperOffice.CRM.Data.SaleTableInfo.Saledate*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.Saledate
  isExternal: true
  name: Saledate
  nameWithType: SaleTableInfo.Saledate
  fullName: SuperOffice.CRM.Data.SaleTableInfo.Saledate
- uid: SuperOffice.CRM.Data.SaleTableInfo.Amount*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.Amount
  isExternal: true
  name: Amount
  nameWithType: SaleTableInfo.Amount
  fullName: SuperOffice.CRM.Data.SaleTableInfo.Amount
- uid: SuperOffice.Data.SQL.DoubleFieldInfo
  commentId: T:SuperOffice.Data.SQL.DoubleFieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: DoubleFieldInfo
  nameWithType: DoubleFieldInfo
  fullName: SuperOffice.Data.SQL.DoubleFieldInfo
- uid: SuperOffice.CRM.Data.SaleTableInfo.ProbabilityIdx*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.ProbabilityIdx
  isExternal: true
  name: ProbabilityIdx
  nameWithType: SaleTableInfo.ProbabilityIdx
  fullName: SuperOffice.CRM.Data.SaleTableInfo.ProbabilityIdx
- uid: SuperOffice.CRM.Data.SaleTableInfo.AppointmentId*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.AppointmentId
  isExternal: true
  name: AppointmentId
  nameWithType: SaleTableInfo.AppointmentId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.AppointmentId
- uid: SuperOffice.CRM.Data.SaleTableInfo.TextId*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.TextId
  isExternal: true
  name: TextId
  nameWithType: SaleTableInfo.TextId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.TextId
- uid: SuperOffice.CRM.Data.SaleTableInfo.ProjectId*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.ProjectId
  isExternal: true
  name: ProjectId
  nameWithType: SaleTableInfo.ProjectId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.ProjectId
- uid: SuperOffice.CRM.Data.SaleTableInfo.Earning*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.Earning
  isExternal: true
  name: Earning
  nameWithType: SaleTableInfo.Earning
  fullName: SuperOffice.CRM.Data.SaleTableInfo.Earning
- uid: SuperOffice.CRM.Data.SaleTableInfo.EarningPercent*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.EarningPercent
  isExternal: true
  name: EarningPercent
  nameWithType: SaleTableInfo.EarningPercent
  fullName: SuperOffice.CRM.Data.SaleTableInfo.EarningPercent
- uid: SuperOffice.CRM.Data.SaleTableInfo.UserdefId*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.UserdefId
  isExternal: true
  name: UserdefId
  nameWithType: SaleTableInfo.UserdefId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.UserdefId
- uid: SuperOffice.CRM.Data.SaleTableInfo.Userdef2Id*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.Userdef2Id
  isExternal: true
  name: Userdef2Id
  nameWithType: SaleTableInfo.Userdef2Id
  fullName: SuperOffice.CRM.Data.SaleTableInfo.Userdef2Id
- uid: SuperOffice.CRM.Data.SaleTableInfo.Heading*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.Heading
  isExternal: true
  name: Heading
  nameWithType: SaleTableInfo.Heading
  fullName: SuperOffice.CRM.Data.SaleTableInfo.Heading
- uid: SuperOffice.Data.SQL.StringFieldInfo
  commentId: T:SuperOffice.Data.SQL.StringFieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: StringFieldInfo
  nameWithType: StringFieldInfo
  fullName: SuperOffice.Data.SQL.StringFieldInfo
- uid: SuperOffice.CRM.Data.SaleTableInfo.CreditedId*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.CreditedId
  isExternal: true
  name: CreditedId
  nameWithType: SaleTableInfo.CreditedId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.CreditedId
- uid: SuperOffice.CRM.Data.SaleTableInfo.SourceId*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.SourceId
  isExternal: true
  name: SourceId
  nameWithType: SaleTableInfo.SourceId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.SourceId
- uid: SuperOffice.CRM.Data.SaleTableInfo.ReasonId*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.ReasonId
  isExternal: true
  name: ReasonId
  nameWithType: SaleTableInfo.ReasonId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.ReasonId
- uid: SuperOffice.CRM.Data.SaleTableInfo.ComptrId*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.ComptrId
  isExternal: true
  name: ComptrId
  nameWithType: SaleTableInfo.ComptrId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.ComptrId
- uid: SuperOffice.CRM.Data.SaleTableInfo.CurrencyId*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.CurrencyId
  isExternal: true
  name: CurrencyId
  nameWithType: SaleTableInfo.CurrencyId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.CurrencyId
- uid: SuperOffice.CRM.Data.SaleTableInfo.Probability*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.Probability
  isExternal: true
  name: Probability
  nameWithType: SaleTableInfo.Probability
  fullName: SuperOffice.CRM.Data.SaleTableInfo.Probability
- uid: SuperOffice.Data.SQL.UInt16FieldInfo
  commentId: T:SuperOffice.Data.SQL.UInt16FieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: UInt16FieldInfo
  nameWithType: UInt16FieldInfo
  fullName: SuperOffice.Data.SQL.UInt16FieldInfo
- uid: SuperOffice.CRM.Data.SaleTableInfo.Status*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.Status
  isExternal: true
  name: Status
  nameWithType: SaleTableInfo.Status
  fullName: SuperOffice.CRM.Data.SaleTableInfo.Status
- uid: SuperOffice.Data.SQL.SaleStatusFieldInfo
  commentId: T:SuperOffice.Data.SQL.SaleStatusFieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: SaleStatusFieldInfo
  nameWithType: SaleStatusFieldInfo
  fullName: SuperOffice.Data.SQL.SaleStatusFieldInfo
- uid: SuperOffice.CRM.Data.SaleTableInfo.Done*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.Done
  isExternal: true
  name: Done
  nameWithType: SaleTableInfo.Done
  fullName: SuperOffice.CRM.Data.SaleTableInfo.Done
- uid: SuperOffice.Data.SQL.SaleDoneFieldInfo
  commentId: T:SuperOffice.Data.SQL.SaleDoneFieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: SaleDoneFieldInfo
  nameWithType: SaleDoneFieldInfo
  fullName: SuperOffice.Data.SQL.SaleDoneFieldInfo
- uid: SuperOffice.CRM.Data.SaleTableInfo.Number1*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.Number1
  isExternal: true
  name: Number1
  nameWithType: SaleTableInfo.Number1
  fullName: SuperOffice.CRM.Data.SaleTableInfo.Number1
- uid: SuperOffice.CRM.Data.SaleTableInfo.Visibility*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.Visibility
  isExternal: true
  name: Visibility
  nameWithType: SaleTableInfo.Visibility
  fullName: SuperOffice.CRM.Data.SaleTableInfo.Visibility
- uid: SuperOffice.CRM.Data.SaleTableInfo.Source*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.Source
  isExternal: true
  name: Source
  nameWithType: SaleTableInfo.Source
  fullName: SuperOffice.CRM.Data.SaleTableInfo.Source
- uid: SuperOffice.CRM.Data.SaleTableInfo.RegisteredAssociateId*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.RegisteredAssociateId
  isExternal: true
  name: RegisteredAssociateId
  nameWithType: SaleTableInfo.RegisteredAssociateId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.RegisteredAssociateId
- uid: SuperOffice.CRM.Data.SaleTableInfo.Updated*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.Updated
  isExternal: true
  name: Updated
  nameWithType: SaleTableInfo.Updated
  fullName: SuperOffice.CRM.Data.SaleTableInfo.Updated
- uid: SuperOffice.CRM.Data.SaleTableInfo.UpdatedAssociateId*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.UpdatedAssociateId
  isExternal: true
  name: UpdatedAssociateId
  nameWithType: SaleTableInfo.UpdatedAssociateId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.UpdatedAssociateId
- uid: SuperOffice.CRM.Data.SaleTableInfo.UpdatedCount*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.UpdatedCount
  isExternal: true
  name: UpdatedCount
  nameWithType: SaleTableInfo.UpdatedCount
  fullName: SuperOffice.CRM.Data.SaleTableInfo.UpdatedCount
- uid: SuperOffice.CRM.Data.SaleTableInfo.ActiveLinks*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.ActiveLinks
  isExternal: true
  name: ActiveLinks
  nameWithType: SaleTableInfo.ActiveLinks
  fullName: SuperOffice.CRM.Data.SaleTableInfo.ActiveLinks
- uid: SuperOffice.Data.SQL.FieldInfo
  commentId: T:SuperOffice.Data.SQL.FieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: SuperOffice.Data.SQL.FieldInfo
- uid: SuperOffice.CRM.Data.SaleTableInfo.SaleTypeId*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.SaleTypeId
  isExternal: true
  name: SaleTypeId
  nameWithType: SaleTableInfo.SaleTypeId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.SaleTypeId
- uid: SuperOffice.CRM.Data.SaleTableInfo.PostitTextId*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.PostitTextId
  isExternal: true
  name: PostitTextId
  nameWithType: SaleTableInfo.PostitTextId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.PostitTextId
- uid: SuperOffice.CRM.Data.SaleTableInfo.ReasonStalledId*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.ReasonStalledId
  isExternal: true
  name: ReasonStalledId
  nameWithType: SaleTableInfo.ReasonStalledId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.ReasonStalledId
- uid: SuperOffice.CRM.Data.SaleTableInfo.ReopenDate*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.ReopenDate
  isExternal: true
  name: ReopenDate
  nameWithType: SaleTableInfo.ReopenDate
  fullName: SuperOffice.CRM.Data.SaleTableInfo.ReopenDate
- uid: SuperOffice.CRM.Data.SaleTableInfo.NextDueDate*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.NextDueDate
  isExternal: true
  name: NextDueDate
  nameWithType: SaleTableInfo.NextDueDate
  fullName: SuperOffice.CRM.Data.SaleTableInfo.NextDueDate
- uid: SuperOffice.CRM.Data.SaleTableInfo.NddAppointmentId*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.NddAppointmentId
  isExternal: true
  name: NddAppointmentId
  nameWithType: SaleTableInfo.NddAppointmentId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.NddAppointmentId
- uid: SuperOffice.CRM.Data.SaleTableInfo.ReasonSoldId*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.ReasonSoldId
  isExternal: true
  name: ReasonSoldId
  nameWithType: SaleTableInfo.ReasonSoldId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.ReasonSoldId
- uid: SuperOffice.CRM.Data.SaleTableInfo.SaleTypeCatId*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.SaleTypeCatId
  isExternal: true
  name: SaleTypeCatId
  nameWithType: SaleTableInfo.SaleTypeCatId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.SaleTypeCatId
- uid: SuperOffice.CRM.Data.SaleTableInfo.ActiveErpLinks*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.ActiveErpLinks
  isExternal: true
  name: ActiveErpLinks
  nameWithType: SaleTableInfo.ActiveErpLinks
  fullName: SuperOffice.CRM.Data.SaleTableInfo.ActiveErpLinks
- uid: SuperOffice.CRM.Data.SaleTableInfo.AssociateId_InnerJoin_Associate*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.AssociateId_InnerJoin_Associate
  isExternal: true
  name: AssociateId_InnerJoin_Associate
  nameWithType: SaleTableInfo.AssociateId_InnerJoin_Associate
  fullName: SuperOffice.CRM.Data.SaleTableInfo.AssociateId_InnerJoin_Associate
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.AssociateTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.AssociateTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<AssociateTableInfo>
  nameWithType: TargetedInnerJoin<AssociateTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.AssociateTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of AssociateTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.AssociateTableInfo)
  name.vb: TargetedInnerJoin(Of AssociateTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.AssociateTableInfo
    name: AssociateTableInfo
    nameWithType: AssociateTableInfo
    fullName: SuperOffice.CRM.Data.AssociateTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.AssociateTableInfo
    name: AssociateTableInfo
    nameWithType: AssociateTableInfo
    fullName: SuperOffice.CRM.Data.AssociateTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin`1
  isExternal: true
  name: TargetedInnerJoin<TargetTableInfo>
  nameWithType: TargetedInnerJoin<TargetTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<TargetTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of TargetTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of TargetTableInfo)
  name.vb: TargetedInnerJoin(Of TargetTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TargetTableInfo
    nameWithType: TargetTableInfo
    fullName: TargetTableInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TargetTableInfo
    nameWithType: TargetTableInfo
    fullName: TargetTableInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.SaleTableInfo.GroupIdx_InnerJoin_UserGroup*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.GroupIdx_InnerJoin_UserGroup
  isExternal: true
  name: GroupIdx_InnerJoin_UserGroup
  nameWithType: SaleTableInfo.GroupIdx_InnerJoin_UserGroup
  fullName: SuperOffice.CRM.Data.SaleTableInfo.GroupIdx_InnerJoin_UserGroup
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.UserGroupTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.UserGroupTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<UserGroupTableInfo>
  nameWithType: TargetedInnerJoin<UserGroupTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.UserGroupTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of UserGroupTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.UserGroupTableInfo)
  name.vb: TargetedInnerJoin(Of UserGroupTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.UserGroupTableInfo
    name: UserGroupTableInfo
    nameWithType: UserGroupTableInfo
    fullName: SuperOffice.CRM.Data.UserGroupTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.UserGroupTableInfo
    name: UserGroupTableInfo
    nameWithType: UserGroupTableInfo
    fullName: SuperOffice.CRM.Data.UserGroupTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.SaleTableInfo.ContactId_InnerJoin_Contact*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.ContactId_InnerJoin_Contact
  isExternal: true
  name: ContactId_InnerJoin_Contact
  nameWithType: SaleTableInfo.ContactId_InnerJoin_Contact
  fullName: SuperOffice.CRM.Data.SaleTableInfo.ContactId_InnerJoin_Contact
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.ContactTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.ContactTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<ContactTableInfo>
  nameWithType: TargetedInnerJoin<ContactTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.ContactTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of ContactTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.ContactTableInfo)
  name.vb: TargetedInnerJoin(Of ContactTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.ContactTableInfo
    name: ContactTableInfo
    nameWithType: ContactTableInfo
    fullName: SuperOffice.CRM.Data.ContactTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.ContactTableInfo
    name: ContactTableInfo
    nameWithType: ContactTableInfo
    fullName: SuperOffice.CRM.Data.ContactTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.SaleTableInfo.PersonId_InnerJoin_Person*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.PersonId_InnerJoin_Person
  isExternal: true
  name: PersonId_InnerJoin_Person
  nameWithType: SaleTableInfo.PersonId_InnerJoin_Person
  fullName: SuperOffice.CRM.Data.SaleTableInfo.PersonId_InnerJoin_Person
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.PersonTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.PersonTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<PersonTableInfo>
  nameWithType: TargetedInnerJoin<PersonTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.PersonTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of PersonTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.PersonTableInfo)
  name.vb: TargetedInnerJoin(Of PersonTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.PersonTableInfo
    name: PersonTableInfo
    nameWithType: PersonTableInfo
    fullName: SuperOffice.CRM.Data.PersonTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.PersonTableInfo
    name: PersonTableInfo
    nameWithType: PersonTableInfo
    fullName: SuperOffice.CRM.Data.PersonTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.SaleTableInfo.ProbabilityIdx_InnerJoin_Prob*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.ProbabilityIdx_InnerJoin_Prob
  isExternal: true
  name: ProbabilityIdx_InnerJoin_Prob
  nameWithType: SaleTableInfo.ProbabilityIdx_InnerJoin_Prob
  fullName: SuperOffice.CRM.Data.SaleTableInfo.ProbabilityIdx_InnerJoin_Prob
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.ProbTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.ProbTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<ProbTableInfo>
  nameWithType: TargetedInnerJoin<ProbTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.ProbTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of ProbTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.ProbTableInfo)
  name.vb: TargetedInnerJoin(Of ProbTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.ProbTableInfo
    name: ProbTableInfo
    nameWithType: ProbTableInfo
    fullName: SuperOffice.CRM.Data.ProbTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.ProbTableInfo
    name: ProbTableInfo
    nameWithType: ProbTableInfo
    fullName: SuperOffice.CRM.Data.ProbTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.SaleTableInfo.AppointmentId_InnerJoin_Appointment*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.AppointmentId_InnerJoin_Appointment
  isExternal: true
  name: AppointmentId_InnerJoin_Appointment
  nameWithType: SaleTableInfo.AppointmentId_InnerJoin_Appointment
  fullName: SuperOffice.CRM.Data.SaleTableInfo.AppointmentId_InnerJoin_Appointment
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.AppointmentTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.AppointmentTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<AppointmentTableInfo>
  nameWithType: TargetedInnerJoin<AppointmentTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.AppointmentTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of AppointmentTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.AppointmentTableInfo)
  name.vb: TargetedInnerJoin(Of AppointmentTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.AppointmentTableInfo
    name: AppointmentTableInfo
    nameWithType: AppointmentTableInfo
    fullName: SuperOffice.CRM.Data.AppointmentTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.AppointmentTableInfo
    name: AppointmentTableInfo
    nameWithType: AppointmentTableInfo
    fullName: SuperOffice.CRM.Data.AppointmentTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.SaleTableInfo.TextId_InnerJoin_Text*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.TextId_InnerJoin_Text
  isExternal: true
  name: TextId_InnerJoin_Text
  nameWithType: SaleTableInfo.TextId_InnerJoin_Text
  fullName: SuperOffice.CRM.Data.SaleTableInfo.TextId_InnerJoin_Text
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.TextTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.TextTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<TextTableInfo>
  nameWithType: TargetedInnerJoin<TextTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.TextTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of TextTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.TextTableInfo)
  name.vb: TargetedInnerJoin(Of TextTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.TextTableInfo
    name: TextTableInfo
    nameWithType: TextTableInfo
    fullName: SuperOffice.CRM.Data.TextTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.TextTableInfo
    name: TextTableInfo
    nameWithType: TextTableInfo
    fullName: SuperOffice.CRM.Data.TextTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.SaleTableInfo.ProjectId_InnerJoin_Project*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.ProjectId_InnerJoin_Project
  isExternal: true
  name: ProjectId_InnerJoin_Project
  nameWithType: SaleTableInfo.ProjectId_InnerJoin_Project
  fullName: SuperOffice.CRM.Data.SaleTableInfo.ProjectId_InnerJoin_Project
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.ProjectTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.ProjectTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<ProjectTableInfo>
  nameWithType: TargetedInnerJoin<ProjectTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.ProjectTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of ProjectTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.ProjectTableInfo)
  name.vb: TargetedInnerJoin(Of ProjectTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.ProjectTableInfo
    name: ProjectTableInfo
    nameWithType: ProjectTableInfo
    fullName: SuperOffice.CRM.Data.ProjectTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.ProjectTableInfo
    name: ProjectTableInfo
    nameWithType: ProjectTableInfo
    fullName: SuperOffice.CRM.Data.ProjectTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.SaleTableInfo.UserdefId_InnerJoin_UDSaleSmall*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.UserdefId_InnerJoin_UDSaleSmall
  isExternal: true
  name: UserdefId_InnerJoin_UDSaleSmall
  nameWithType: SaleTableInfo.UserdefId_InnerJoin_UDSaleSmall
  fullName: SuperOffice.CRM.Data.SaleTableInfo.UserdefId_InnerJoin_UDSaleSmall
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.UDSaleSmallTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.UDSaleSmallTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<UDSaleSmallTableInfo>
  nameWithType: TargetedInnerJoin<UDSaleSmallTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.UDSaleSmallTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of UDSaleSmallTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.UDSaleSmallTableInfo)
  name.vb: TargetedInnerJoin(Of UDSaleSmallTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.UDSaleSmallTableInfo
    name: UDSaleSmallTableInfo
    nameWithType: UDSaleSmallTableInfo
    fullName: SuperOffice.CRM.Data.UDSaleSmallTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.UDSaleSmallTableInfo
    name: UDSaleSmallTableInfo
    nameWithType: UDSaleSmallTableInfo
    fullName: SuperOffice.CRM.Data.UDSaleSmallTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.SaleTableInfo.Userdef2Id_InnerJoin_UDSaleLarge*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.Userdef2Id_InnerJoin_UDSaleLarge
  isExternal: true
  name: Userdef2Id_InnerJoin_UDSaleLarge
  nameWithType: SaleTableInfo.Userdef2Id_InnerJoin_UDSaleLarge
  fullName: SuperOffice.CRM.Data.SaleTableInfo.Userdef2Id_InnerJoin_UDSaleLarge
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.UDSaleLargeTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.UDSaleLargeTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<UDSaleLargeTableInfo>
  nameWithType: TargetedInnerJoin<UDSaleLargeTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.UDSaleLargeTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of UDSaleLargeTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.UDSaleLargeTableInfo)
  name.vb: TargetedInnerJoin(Of UDSaleLargeTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.UDSaleLargeTableInfo
    name: UDSaleLargeTableInfo
    nameWithType: UDSaleLargeTableInfo
    fullName: SuperOffice.CRM.Data.UDSaleLargeTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.UDSaleLargeTableInfo
    name: UDSaleLargeTableInfo
    nameWithType: UDSaleLargeTableInfo
    fullName: SuperOffice.CRM.Data.UDSaleLargeTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.SaleTableInfo.CreditedId_InnerJoin_Credited*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.CreditedId_InnerJoin_Credited
  isExternal: true
  name: CreditedId_InnerJoin_Credited
  nameWithType: SaleTableInfo.CreditedId_InnerJoin_Credited
  fullName: SuperOffice.CRM.Data.SaleTableInfo.CreditedId_InnerJoin_Credited
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.CreditedTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.CreditedTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<CreditedTableInfo>
  nameWithType: TargetedInnerJoin<CreditedTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.CreditedTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of CreditedTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.CreditedTableInfo)
  name.vb: TargetedInnerJoin(Of CreditedTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.CreditedTableInfo
    name: CreditedTableInfo
    nameWithType: CreditedTableInfo
    fullName: SuperOffice.CRM.Data.CreditedTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.CreditedTableInfo
    name: CreditedTableInfo
    nameWithType: CreditedTableInfo
    fullName: SuperOffice.CRM.Data.CreditedTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.SaleTableInfo.SourceId_InnerJoin_Source*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.SourceId_InnerJoin_Source
  isExternal: true
  name: SourceId_InnerJoin_Source
  nameWithType: SaleTableInfo.SourceId_InnerJoin_Source
  fullName: SuperOffice.CRM.Data.SaleTableInfo.SourceId_InnerJoin_Source
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.SourceTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.SourceTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<SourceTableInfo>
  nameWithType: TargetedInnerJoin<SourceTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.SourceTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of SourceTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.SourceTableInfo)
  name.vb: TargetedInnerJoin(Of SourceTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.SourceTableInfo
    name: SourceTableInfo
    nameWithType: SourceTableInfo
    fullName: SuperOffice.CRM.Data.SourceTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.SourceTableInfo
    name: SourceTableInfo
    nameWithType: SourceTableInfo
    fullName: SuperOffice.CRM.Data.SourceTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.SaleTableInfo.ReasonId_InnerJoin_Reason*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.ReasonId_InnerJoin_Reason
  isExternal: true
  name: ReasonId_InnerJoin_Reason
  nameWithType: SaleTableInfo.ReasonId_InnerJoin_Reason
  fullName: SuperOffice.CRM.Data.SaleTableInfo.ReasonId_InnerJoin_Reason
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.ReasonTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.ReasonTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<ReasonTableInfo>
  nameWithType: TargetedInnerJoin<ReasonTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.ReasonTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of ReasonTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.ReasonTableInfo)
  name.vb: TargetedInnerJoin(Of ReasonTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.ReasonTableInfo
    name: ReasonTableInfo
    nameWithType: ReasonTableInfo
    fullName: SuperOffice.CRM.Data.ReasonTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.ReasonTableInfo
    name: ReasonTableInfo
    nameWithType: ReasonTableInfo
    fullName: SuperOffice.CRM.Data.ReasonTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.SaleTableInfo.ComptrId_InnerJoin_Comptr*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.ComptrId_InnerJoin_Comptr
  isExternal: true
  name: ComptrId_InnerJoin_Comptr
  nameWithType: SaleTableInfo.ComptrId_InnerJoin_Comptr
  fullName: SuperOffice.CRM.Data.SaleTableInfo.ComptrId_InnerJoin_Comptr
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.ComptrTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.ComptrTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<ComptrTableInfo>
  nameWithType: TargetedInnerJoin<ComptrTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.ComptrTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of ComptrTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.ComptrTableInfo)
  name.vb: TargetedInnerJoin(Of ComptrTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.ComptrTableInfo
    name: ComptrTableInfo
    nameWithType: ComptrTableInfo
    fullName: SuperOffice.CRM.Data.ComptrTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.ComptrTableInfo
    name: ComptrTableInfo
    nameWithType: ComptrTableInfo
    fullName: SuperOffice.CRM.Data.ComptrTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.SaleTableInfo.CurrencyId_InnerJoin_Currency*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.CurrencyId_InnerJoin_Currency
  isExternal: true
  name: CurrencyId_InnerJoin_Currency
  nameWithType: SaleTableInfo.CurrencyId_InnerJoin_Currency
  fullName: SuperOffice.CRM.Data.SaleTableInfo.CurrencyId_InnerJoin_Currency
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.CurrencyTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.CurrencyTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<CurrencyTableInfo>
  nameWithType: TargetedInnerJoin<CurrencyTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.CurrencyTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of CurrencyTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.CurrencyTableInfo)
  name.vb: TargetedInnerJoin(Of CurrencyTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.CurrencyTableInfo
    name: CurrencyTableInfo
    nameWithType: CurrencyTableInfo
    fullName: SuperOffice.CRM.Data.CurrencyTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.CurrencyTableInfo
    name: CurrencyTableInfo
    nameWithType: CurrencyTableInfo
    fullName: SuperOffice.CRM.Data.CurrencyTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.SaleTableInfo.RegisteredAssociateId_InnerJoin_Associate*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.RegisteredAssociateId_InnerJoin_Associate
  isExternal: true
  name: RegisteredAssociateId_InnerJoin_Associate
  nameWithType: SaleTableInfo.RegisteredAssociateId_InnerJoin_Associate
  fullName: SuperOffice.CRM.Data.SaleTableInfo.RegisteredAssociateId_InnerJoin_Associate
- uid: SuperOffice.CRM.Data.SaleTableInfo.UpdatedAssociateId_InnerJoin_Associate*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.UpdatedAssociateId_InnerJoin_Associate
  isExternal: true
  name: UpdatedAssociateId_InnerJoin_Associate
  nameWithType: SaleTableInfo.UpdatedAssociateId_InnerJoin_Associate
  fullName: SuperOffice.CRM.Data.SaleTableInfo.UpdatedAssociateId_InnerJoin_Associate
- uid: SuperOffice.CRM.Data.SaleTableInfo.SaleTypeId_InnerJoin_SaleType*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.SaleTypeId_InnerJoin_SaleType
  isExternal: true
  name: SaleTypeId_InnerJoin_SaleType
  nameWithType: SaleTableInfo.SaleTypeId_InnerJoin_SaleType
  fullName: SuperOffice.CRM.Data.SaleTableInfo.SaleTypeId_InnerJoin_SaleType
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.SaleTypeTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.SaleTypeTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<SaleTypeTableInfo>
  nameWithType: TargetedInnerJoin<SaleTypeTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.SaleTypeTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of SaleTypeTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.SaleTypeTableInfo)
  name.vb: TargetedInnerJoin(Of SaleTypeTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.SaleTypeTableInfo
    name: SaleTypeTableInfo
    nameWithType: SaleTypeTableInfo
    fullName: SuperOffice.CRM.Data.SaleTypeTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.SaleTypeTableInfo
    name: SaleTypeTableInfo
    nameWithType: SaleTypeTableInfo
    fullName: SuperOffice.CRM.Data.SaleTypeTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.SaleTableInfo.PostitTextId_InnerJoin_Text*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.PostitTextId_InnerJoin_Text
  isExternal: true
  name: PostitTextId_InnerJoin_Text
  nameWithType: SaleTableInfo.PostitTextId_InnerJoin_Text
  fullName: SuperOffice.CRM.Data.SaleTableInfo.PostitTextId_InnerJoin_Text
- uid: SuperOffice.CRM.Data.SaleTableInfo.ReasonStalledId_InnerJoin_ReasonStalled*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.ReasonStalledId_InnerJoin_ReasonStalled
  isExternal: true
  name: ReasonStalledId_InnerJoin_ReasonStalled
  nameWithType: SaleTableInfo.ReasonStalledId_InnerJoin_ReasonStalled
  fullName: SuperOffice.CRM.Data.SaleTableInfo.ReasonStalledId_InnerJoin_ReasonStalled
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.ReasonStalledTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.ReasonStalledTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<ReasonStalledTableInfo>
  nameWithType: TargetedInnerJoin<ReasonStalledTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.ReasonStalledTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of ReasonStalledTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.ReasonStalledTableInfo)
  name.vb: TargetedInnerJoin(Of ReasonStalledTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.ReasonStalledTableInfo
    name: ReasonStalledTableInfo
    nameWithType: ReasonStalledTableInfo
    fullName: SuperOffice.CRM.Data.ReasonStalledTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.ReasonStalledTableInfo
    name: ReasonStalledTableInfo
    nameWithType: ReasonStalledTableInfo
    fullName: SuperOffice.CRM.Data.ReasonStalledTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.SaleTableInfo.NddAppointmentId_InnerJoin_Appointment*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.NddAppointmentId_InnerJoin_Appointment
  isExternal: true
  name: NddAppointmentId_InnerJoin_Appointment
  nameWithType: SaleTableInfo.NddAppointmentId_InnerJoin_Appointment
  fullName: SuperOffice.CRM.Data.SaleTableInfo.NddAppointmentId_InnerJoin_Appointment
- uid: SuperOffice.CRM.Data.SaleTableInfo.ReasonSoldId_InnerJoin_ReasonSold*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.ReasonSoldId_InnerJoin_ReasonSold
  isExternal: true
  name: ReasonSoldId_InnerJoin_ReasonSold
  nameWithType: SaleTableInfo.ReasonSoldId_InnerJoin_ReasonSold
  fullName: SuperOffice.CRM.Data.SaleTableInfo.ReasonSoldId_InnerJoin_ReasonSold
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.ReasonSoldTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.ReasonSoldTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<ReasonSoldTableInfo>
  nameWithType: TargetedInnerJoin<ReasonSoldTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.ReasonSoldTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of ReasonSoldTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.ReasonSoldTableInfo)
  name.vb: TargetedInnerJoin(Of ReasonSoldTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.ReasonSoldTableInfo
    name: ReasonSoldTableInfo
    nameWithType: ReasonSoldTableInfo
    fullName: SuperOffice.CRM.Data.ReasonSoldTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.ReasonSoldTableInfo
    name: ReasonSoldTableInfo
    nameWithType: ReasonSoldTableInfo
    fullName: SuperOffice.CRM.Data.ReasonSoldTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.SaleTableInfo.SaleTypeCatId_InnerJoin_SaleTypeCat*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.SaleTypeCatId_InnerJoin_SaleTypeCat
  isExternal: true
  name: SaleTypeCatId_InnerJoin_SaleTypeCat
  nameWithType: SaleTableInfo.SaleTypeCatId_InnerJoin_SaleTypeCat
  fullName: SuperOffice.CRM.Data.SaleTableInfo.SaleTypeCatId_InnerJoin_SaleTypeCat
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.SaleTypeCatTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.SaleTypeCatTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<SaleTypeCatTableInfo>
  nameWithType: TargetedInnerJoin<SaleTypeCatTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.SaleTypeCatTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of SaleTypeCatTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.SaleTypeCatTableInfo)
  name.vb: TargetedInnerJoin(Of SaleTypeCatTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.SaleTypeCatTableInfo
    name: SaleTypeCatTableInfo
    nameWithType: SaleTypeCatTableInfo
    fullName: SuperOffice.CRM.Data.SaleTypeCatTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.SaleTypeCatTableInfo
    name: SaleTypeCatTableInfo
    nameWithType: SaleTypeCatTableInfo
    fullName: SuperOffice.CRM.Data.SaleTypeCatTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_Appointment_SaleId*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_Appointment_SaleId
  isExternal: true
  name: LeftOuterJoin_Appointment_SaleId
  nameWithType: SaleTableInfo.LeftOuterJoin_Appointment_SaleId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_Appointment_SaleId
- uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.AppointmentTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.AppointmentTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
  name: TargetedLeftOuterJoin<AppointmentTableInfo>
  nameWithType: TargetedLeftOuterJoin<AppointmentTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin<SuperOffice.CRM.Data.AppointmentTableInfo>
  nameWithType.vb: TargetedLeftOuterJoin(Of AppointmentTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedLeftOuterJoin(Of SuperOffice.CRM.Data.AppointmentTableInfo)
  name.vb: TargetedLeftOuterJoin(Of AppointmentTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.AppointmentTableInfo
    name: AppointmentTableInfo
    nameWithType: AppointmentTableInfo
    fullName: SuperOffice.CRM.Data.AppointmentTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.AppointmentTableInfo
    name: AppointmentTableInfo
    nameWithType: AppointmentTableInfo
    fullName: SuperOffice.CRM.Data.AppointmentTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
  commentId: T:SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
  isExternal: true
  name: TargetedLeftOuterJoin<TargetTableInfo>
  nameWithType: TargetedLeftOuterJoin<TargetTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin<TargetTableInfo>
  nameWithType.vb: TargetedLeftOuterJoin(Of TargetTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedLeftOuterJoin(Of TargetTableInfo)
  name.vb: TargetedLeftOuterJoin(Of TargetTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TargetTableInfo
    nameWithType: TargetTableInfo
    fullName: TargetTableInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TargetTableInfo
    nameWithType: TargetTableInfo
    fullName: TargetTableInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_Quote_SaleId*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_Quote_SaleId
  isExternal: true
  name: LeftOuterJoin_Quote_SaleId
  nameWithType: SaleTableInfo.LeftOuterJoin_Quote_SaleId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_Quote_SaleId
- uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.QuoteTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.QuoteTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
  name: TargetedLeftOuterJoin<QuoteTableInfo>
  nameWithType: TargetedLeftOuterJoin<QuoteTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin<SuperOffice.CRM.Data.QuoteTableInfo>
  nameWithType.vb: TargetedLeftOuterJoin(Of QuoteTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedLeftOuterJoin(Of SuperOffice.CRM.Data.QuoteTableInfo)
  name.vb: TargetedLeftOuterJoin(Of QuoteTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.QuoteTableInfo
    name: QuoteTableInfo
    nameWithType: QuoteTableInfo
    fullName: SuperOffice.CRM.Data.QuoteTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.QuoteTableInfo
    name: QuoteTableInfo
    nameWithType: QuoteTableInfo
    fullName: SuperOffice.CRM.Data.QuoteTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_SaleStakeholder_SaleId*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_SaleStakeholder_SaleId
  isExternal: true
  name: LeftOuterJoin_SaleStakeholder_SaleId
  nameWithType: SaleTableInfo.LeftOuterJoin_SaleStakeholder_SaleId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_SaleStakeholder_SaleId
- uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.SaleStakeholderTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.SaleStakeholderTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
  name: TargetedLeftOuterJoin<SaleStakeholderTableInfo>
  nameWithType: TargetedLeftOuterJoin<SaleStakeholderTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin<SuperOffice.CRM.Data.SaleStakeholderTableInfo>
  nameWithType.vb: TargetedLeftOuterJoin(Of SaleStakeholderTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedLeftOuterJoin(Of SuperOffice.CRM.Data.SaleStakeholderTableInfo)
  name.vb: TargetedLeftOuterJoin(Of SaleStakeholderTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.SaleStakeholderTableInfo
    name: SaleStakeholderTableInfo
    nameWithType: SaleStakeholderTableInfo
    fullName: SuperOffice.CRM.Data.SaleStakeholderTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.SaleStakeholderTableInfo
    name: SaleStakeholderTableInfo
    nameWithType: SaleStakeholderTableInfo
    fullName: SuperOffice.CRM.Data.SaleStakeholderTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_SaleHist_SaleId*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_SaleHist_SaleId
  isExternal: true
  name: LeftOuterJoin_SaleHist_SaleId
  nameWithType: SaleTableInfo.LeftOuterJoin_SaleHist_SaleId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_SaleHist_SaleId
- uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.SaleHistTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.SaleHistTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
  name: TargetedLeftOuterJoin<SaleHistTableInfo>
  nameWithType: TargetedLeftOuterJoin<SaleHistTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin<SuperOffice.CRM.Data.SaleHistTableInfo>
  nameWithType.vb: TargetedLeftOuterJoin(Of SaleHistTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedLeftOuterJoin(Of SuperOffice.CRM.Data.SaleHistTableInfo)
  name.vb: TargetedLeftOuterJoin(Of SaleHistTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.SaleHistTableInfo
    name: SaleHistTableInfo
    nameWithType: SaleHistTableInfo
    fullName: SuperOffice.CRM.Data.SaleHistTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.SaleHistTableInfo
    name: SaleHistTableInfo
    nameWithType: SaleHistTableInfo
    fullName: SuperOffice.CRM.Data.SaleHistTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_VisibleFor_SaleId*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_VisibleFor_SaleId
  isExternal: true
  name: LeftOuterJoin_VisibleFor_SaleId
  nameWithType: SaleTableInfo.LeftOuterJoin_VisibleFor_SaleId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_VisibleFor_SaleId
- uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.VisibleForTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.VisibleForTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
  name: TargetedLeftOuterJoin<VisibleForTableInfo>
  nameWithType: TargetedLeftOuterJoin<VisibleForTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin<SuperOffice.CRM.Data.VisibleForTableInfo>
  nameWithType.vb: TargetedLeftOuterJoin(Of VisibleForTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedLeftOuterJoin(Of SuperOffice.CRM.Data.VisibleForTableInfo)
  name.vb: TargetedLeftOuterJoin(Of VisibleForTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.VisibleForTableInfo
    name: VisibleForTableInfo
    nameWithType: VisibleForTableInfo
    fullName: SuperOffice.CRM.Data.VisibleForTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.VisibleForTableInfo
    name: VisibleForTableInfo
    nameWithType: VisibleForTableInfo
    fullName: SuperOffice.CRM.Data.VisibleForTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_ChatSession_SaleId*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_ChatSession_SaleId
  isExternal: true
  name: LeftOuterJoin_ChatSession_SaleId
  nameWithType: SaleTableInfo.LeftOuterJoin_ChatSession_SaleId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_ChatSession_SaleId
- uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.ChatSessionTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.ChatSessionTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
  name: TargetedLeftOuterJoin<ChatSessionTableInfo>
  nameWithType: TargetedLeftOuterJoin<ChatSessionTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin<SuperOffice.CRM.Data.ChatSessionTableInfo>
  nameWithType.vb: TargetedLeftOuterJoin(Of ChatSessionTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedLeftOuterJoin(Of SuperOffice.CRM.Data.ChatSessionTableInfo)
  name.vb: TargetedLeftOuterJoin(Of ChatSessionTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.ChatSessionTableInfo
    name: ChatSessionTableInfo
    nameWithType: ChatSessionTableInfo
    fullName: SuperOffice.CRM.Data.ChatSessionTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.ChatSessionTableInfo
    name: ChatSessionTableInfo
    nameWithType: ChatSessionTableInfo
    fullName: SuperOffice.CRM.Data.ChatSessionTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_EmailItem_SaleId*
  commentId: Overload:SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_EmailItem_SaleId
  isExternal: true
  name: LeftOuterJoin_EmailItem_SaleId
  nameWithType: SaleTableInfo.LeftOuterJoin_EmailItem_SaleId
  fullName: SuperOffice.CRM.Data.SaleTableInfo.LeftOuterJoin_EmailItem_SaleId
- uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.EmailItemTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.EmailItemTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
  name: TargetedLeftOuterJoin<EmailItemTableInfo>
  nameWithType: TargetedLeftOuterJoin<EmailItemTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin<SuperOffice.CRM.Data.EmailItemTableInfo>
  nameWithType.vb: TargetedLeftOuterJoin(Of EmailItemTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedLeftOuterJoin(Of SuperOffice.CRM.Data.EmailItemTableInfo)
  name.vb: TargetedLeftOuterJoin(Of EmailItemTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.EmailItemTableInfo
    name: EmailItemTableInfo
    nameWithType: EmailItemTableInfo
    fullName: SuperOffice.CRM.Data.EmailItemTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.EmailItemTableInfo
    name: EmailItemTableInfo
    nameWithType: EmailItemTableInfo
    fullName: SuperOffice.CRM.Data.EmailItemTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
