### YamlMime:ManagedReference
items:
- uid: SuperOffice.Security.Principal.SoCredentialsIdentityResolver
  commentId: T:SuperOffice.Security.Principal.SoCredentialsIdentityResolver
  id: SoCredentialsIdentityResolver
  parent: SuperOffice.Security.Principal
  children:
  - SuperOffice.Security.Principal.SoCredentialsIdentityResolver.#ctor
  - SuperOffice.Security.Principal.SoCredentialsIdentityResolver.BlockCleanupDuringTestRuns
  - SuperOffice.Security.Principal.SoCredentialsIdentityResolver.CreateSoCredentials(SuperOffice.CRM.Services.ProvidedCredential[],System.Int32,System.Int32,System.Int32@)
  - SuperOffice.Security.Principal.SoCredentialsIdentityResolver.DbCredentialType
  - SuperOffice.Security.Principal.SoCredentialsIdentityResolver.RenewSoCredentials(System.Int32)
  - SuperOffice.Security.Principal.SoCredentialsIdentityResolver.RenewSoCredentials(System.Int32,System.String)
  - SuperOffice.Security.Principal.SoCredentialsIdentityResolver.RenewSoCredentials(System.Int32,System.String,System.DateTime)
  - SuperOffice.Security.Principal.SoCredentialsIdentityResolver.ResolveIdentity(System.Collections.Generic.IList{System.IdentityModel.Tokens.SecurityToken},SuperOffice.Data.SoConnection)
  - SuperOffice.Security.Principal.SoCredentialsIdentityResolver.ResolveTicketDatabaseContextidentifier(System.String)
  - SuperOffice.Security.Principal.SoCredentialsIdentityResolver.ResolveTicketToName(System.String)
  - SuperOffice.Security.Principal.SoCredentialsIdentityResolver.TicketDuration
  - SuperOffice.Security.Principal.SoCredentialsIdentityResolver.TicketSecretPrefix
  - SuperOffice.Security.Principal.SoCredentialsIdentityResolver.TicketStringPrefix
  langs:
  - csharp
  - vb
  name: SoCredentialsIdentityResolver
  nameWithType: SoCredentialsIdentityResolver
  fullName: SuperOffice.Security.Principal.SoCredentialsIdentityResolver
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  summary: "\nResolver for credentials representing a NetServer session ticket; success results in an\n<xref href=\"SuperOffice.Security.Principal.SoCredentialsIdentity\" data-throw-if-not-resolved=\"false\"></xref> being returned. Details are described in the Identity class.\n"
  remarks: "\nTicket format: GUID-as-string;Random-as-int  --> base64. Counterpart in db has searchName == GUID-as-string,\nwhile the secret field is a base64-encoded hash of the whole ticket, with arbitrary primarykey = 1234.\n"
  syntax:
    content: >-
      [SoIdentityResolver("SoCredentialsIdentityResolver", 1000)]

      public sealed class SoCredentialsIdentityResolver : AssociateResolver<SoCredentialsSecurityToken>, ISoIdentityResolver, IPlugin
    content.vb: >-
      <SoIdentityResolver("SoCredentialsIdentityResolver", 1000)>

      Public NotInheritable Class SoCredentialsIdentityResolver
          Inherits AssociateResolver(Of SoCredentialsSecurityToken)
          Implements ISoIdentityResolver, IPlugin
  inheritance:
  - System.Object
  - SuperOffice.Security.Principal.AssociateResolver{SuperOffice.Security.Principal.SoCredentialsSecurityToken}
  implements:
  - SuperOffice.Security.ISoIdentityResolver
  inheritedMembers:
  - SuperOffice.Security.Principal.AssociateResolver{SuperOffice.Security.Principal.SoCredentialsSecurityToken}.GetInfoAboutUser
  - SuperOffice.Security.Principal.AssociateResolver{SuperOffice.Security.Principal.SoCredentialsSecurityToken}.UpdateCredentialsLastUsed(SuperOffice.CRM.Data.CredentialsTableInfo,System.Int32,SuperOffice.Data.SoConnection,System.DateTime)
  - SuperOffice.Security.Principal.AssociateResolver{SuperOffice.Security.Principal.SoCredentialsSecurityToken}.UpdateRoleId(System.Int32,System.Int32)
  - SuperOffice.Security.Principal.AssociateResolver{SuperOffice.Security.Principal.SoCredentialsSecurityToken}.ResolveFromUsernamePassword(System.String@,System.String,SuperOffice.Data.SoConnection,System.String,System.Int32@)
  - SuperOffice.Security.Principal.AssociateResolver{SuperOffice.Security.Principal.SoCredentialsSecurityToken}.ResolveAssociateFromName(System.String@,SuperOffice.Data.AssociateType@,SuperOffice.Data.SoConnection)
  - SuperOffice.Security.Principal.AssociateResolver{SuperOffice.Security.Principal.SoCredentialsSecurityToken}.IsPasswordValid(System.Int32,System.String,System.String)
  - SuperOffice.Security.Principal.AssociateResolver{SuperOffice.Security.Principal.SoCredentialsSecurityToken}.SecretFromPassword(System.Int32,System.String)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.Security.Principal.SoCredentialsIdentityResolver.EnumUtil.MapEnums``2
  - SuperOffice.Security.Principal.SoCredentialsIdentityResolver.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Security.Principal.SoCredentialsIdentityResolver)
  - SuperOffice.Security.Principal.SoCredentialsIdentityResolver.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.Security.Principal.SoCredentialsIdentityResolver.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  attributes:
  - type: SuperOffice.Security.SoIdentityResolverAttribute
    ctor: SuperOffice.Security.SoIdentityResolverAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: SoCredentialsIdentityResolver
    - type: System.Int32
      value: 1000
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.BlockCleanupDuringTestRuns
  commentId: F:SuperOffice.Security.Principal.SoCredentialsIdentityResolver.BlockCleanupDuringTestRuns
  id: BlockCleanupDuringTestRuns
  parent: SuperOffice.Security.Principal.SoCredentialsIdentityResolver
  langs:
  - csharp
  - vb
  name: BlockCleanupDuringTestRuns
  nameWithType: SoCredentialsIdentityResolver.BlockCleanupDuringTestRuns
  fullName: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.BlockCleanupDuringTestRuns
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  summary: "\n<strong>DO NOT</strong> use this property outside of testing - it blocks the periodic cleanup task, to avoid extra authentications and other noise\n"
  syntax:
    content: public static bool BlockCleanupDuringTestRuns
    return:
      type: System.Boolean
    content.vb: Public Shared BlockCleanupDuringTestRuns As Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.DbCredentialType
  commentId: F:SuperOffice.Security.Principal.SoCredentialsIdentityResolver.DbCredentialType
  id: DbCredentialType
  parent: SuperOffice.Security.Principal.SoCredentialsIdentityResolver
  langs:
  - csharp
  - vb
  name: DbCredentialType
  nameWithType: SoCredentialsIdentityResolver.DbCredentialType
  fullName: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.DbCredentialType
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  summary: "\nCredential type string in Credentials table\n"
  syntax:
    content: public const string DbCredentialType = "Ticket"
    return:
      type: System.String
    content.vb: Public Const DbCredentialType As String = "Ticket"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.TicketDuration
  commentId: F:SuperOffice.Security.Principal.SoCredentialsIdentityResolver.TicketDuration
  id: TicketDuration
  parent: SuperOffice.Security.Principal.SoCredentialsIdentityResolver
  langs:
  - csharp
  - vb
  name: TicketDuration
  nameWithType: SoCredentialsIdentityResolver.TicketDuration
  fullName: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.TicketDuration
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  summary: "\nTicket lifetime, with auto-extension whenever it is used\n"
  syntax:
    content: public const int TicketDuration = 360
    return:
      type: System.Int32
    content.vb: Public Const TicketDuration As Integer = 360
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.TicketStringPrefix
  commentId: F:SuperOffice.Security.Principal.SoCredentialsIdentityResolver.TicketStringPrefix
  id: TicketStringPrefix
  parent: SuperOffice.Security.Principal.SoCredentialsIdentityResolver
  langs:
  - csharp
  - vb
  name: TicketStringPrefix
  nameWithType: SoCredentialsIdentityResolver.TicketStringPrefix
  fullName: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.TicketStringPrefix
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  summary: "\nMagic string at start of ticket, so we can recognize it\n"
  syntax:
    content: >-
      [Obsolete("Use SoCredentialsSecurityToken.TicketStringPrefix")]

      public const string TicketStringPrefix = "7T:"
    return:
      type: System.String
    content.vb: >-
      <Obsolete("Use SoCredentialsSecurityToken.TicketStringPrefix")>

      Public Const TicketStringPrefix As String = "7T:"
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use SoCredentialsSecurityToken.TicketStringPrefix
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.TicketSecretPrefix
  commentId: F:SuperOffice.Security.Principal.SoCredentialsIdentityResolver.TicketSecretPrefix
  id: TicketSecretPrefix
  parent: SuperOffice.Security.Principal.SoCredentialsIdentityResolver
  langs:
  - csharp
  - vb
  name: TicketSecretPrefix
  nameWithType: SoCredentialsIdentityResolver.TicketSecretPrefix
  fullName: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.TicketSecretPrefix
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  syntax:
    content: >-
      [Obsolete("Use SoCredentialsSecurityToken.TicketSecretPrefix")]

      public const string TicketSecretPrefix = "7S:"
    return:
      type: System.String
    content.vb: >-
      <Obsolete("Use SoCredentialsSecurityToken.TicketSecretPrefix")>

      Public Const TicketSecretPrefix As String = "7S:"
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use SoCredentialsSecurityToken.TicketSecretPrefix
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.CreateSoCredentials(SuperOffice.CRM.Services.ProvidedCredential[],System.Int32,System.Int32,System.Int32@)
  commentId: M:SuperOffice.Security.Principal.SoCredentialsIdentityResolver.CreateSoCredentials(SuperOffice.CRM.Services.ProvidedCredential[],System.Int32,System.Int32,System.Int32@)
  id: CreateSoCredentials(SuperOffice.CRM.Services.ProvidedCredential[],System.Int32,System.Int32,System.Int32@)
  parent: SuperOffice.Security.Principal.SoCredentialsIdentityResolver
  langs:
  - csharp
  - vb
  name: CreateSoCredentials(ProvidedCredential[], Int32, Int32, ref Int32)
  nameWithType: SoCredentialsIdentityResolver.CreateSoCredentials(ProvidedCredential[], Int32, Int32, ref Int32)
  fullName: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.CreateSoCredentials(SuperOffice.CRM.Services.ProvidedCredential[], System.Int32, System.Int32, ref System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  summary: "\nCreate a session ticket, and its counterpart in the database. Clean out any leftover, invalid tickets at the same time\n"
  remarks: "\nNOTE: To call this method you have to be properly authenticated; it <strong>cannot</strong> be called during authentication.\n"
  syntax:
    content: public static SoCredentials CreateSoCredentials(ProvidedCredential[] providedCredentials, int associateId, int personId, ref int credentialsRowId)
    parameters:
    - id: providedCredentials
      type: SuperOffice.CRM.Services.ProvidedCredential[]
    - id: associateId
      type: System.Int32
    - id: personId
      type: System.Int32
    - id: credentialsRowId
      type: System.Int32
    return:
      type: SuperOffice.Security.Principal.SoCredentials
    content.vb: Public Shared Function CreateSoCredentials(providedCredentials As ProvidedCredential(), associateId As Integer, personId As Integer, ByRef credentialsRowId As Integer) As SoCredentials
  overload: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.CreateSoCredentials*
  nameWithType.vb: SoCredentialsIdentityResolver.CreateSoCredentials(ProvidedCredential(), Int32, Int32, ByRef Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.CreateSoCredentials(SuperOffice.CRM.Services.ProvidedCredential(), System.Int32, System.Int32, ByRef System.Int32)
  name.vb: CreateSoCredentials(ProvidedCredential(), Int32, Int32, ByRef Int32)
- uid: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.RenewSoCredentials(System.Int32,System.String)
  commentId: M:SuperOffice.Security.Principal.SoCredentialsIdentityResolver.RenewSoCredentials(System.Int32,System.String)
  id: RenewSoCredentials(System.Int32,System.String)
  parent: SuperOffice.Security.Principal.SoCredentialsIdentityResolver
  langs:
  - csharp
  - vb
  name: RenewSoCredentials(Int32, String)
  nameWithType: SoCredentialsIdentityResolver.RenewSoCredentials(Int32, String)
  fullName: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.RenewSoCredentials(System.Int32, System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  summary: "\nTry to renew credentials; report if the row did not exist\n"
  syntax:
    content: public static bool RenewSoCredentials(int credentialsRowId, string info)
    parameters:
    - id: credentialsRowId
      type: System.Int32
    - id: info
      type: System.String
    return:
      type: System.Boolean
      description: true if the row exists, otherwise false
    content.vb: Public Shared Function RenewSoCredentials(credentialsRowId As Integer, info As String) As Boolean
  overload: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.RenewSoCredentials*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.RenewSoCredentials(System.Int32)
  commentId: M:SuperOffice.Security.Principal.SoCredentialsIdentityResolver.RenewSoCredentials(System.Int32)
  id: RenewSoCredentials(System.Int32)
  parent: SuperOffice.Security.Principal.SoCredentialsIdentityResolver
  langs:
  - csharp
  - vb
  name: RenewSoCredentials(Int32)
  nameWithType: SoCredentialsIdentityResolver.RenewSoCredentials(Int32)
  fullName: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.RenewSoCredentials(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  summary: "\nTry to renew credentials; report if the row did not exist\n"
  syntax:
    content: public static bool RenewSoCredentials(int credentialsRowId)
    parameters:
    - id: credentialsRowId
      type: System.Int32
    return:
      type: System.Boolean
      description: true if the row exists, otherwise false
    content.vb: Public Shared Function RenewSoCredentials(credentialsRowId As Integer) As Boolean
  overload: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.RenewSoCredentials*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.RenewSoCredentials(System.Int32,System.String,System.DateTime)
  commentId: M:SuperOffice.Security.Principal.SoCredentialsIdentityResolver.RenewSoCredentials(System.Int32,System.String,System.DateTime)
  id: RenewSoCredentials(System.Int32,System.String,System.DateTime)
  parent: SuperOffice.Security.Principal.SoCredentialsIdentityResolver
  langs:
  - csharp
  - vb
  name: RenewSoCredentials(Int32, String, DateTime)
  nameWithType: SoCredentialsIdentityResolver.RenewSoCredentials(Int32, String, DateTime)
  fullName: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.RenewSoCredentials(System.Int32, System.String, System.DateTime)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  summary: "\nTry to renew credentials; report if the row did not exist\n"
  syntax:
    content: public static bool RenewSoCredentials(int credentialsRowId, string info, DateTime validTo)
    parameters:
    - id: credentialsRowId
      type: System.Int32
    - id: info
      type: System.String
    - id: validTo
      type: System.DateTime
    return:
      type: System.Boolean
      description: true if the row exists, otherwise false
    content.vb: Public Shared Function RenewSoCredentials(credentialsRowId As Integer, info As String, validTo As Date) As Boolean
  overload: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.RenewSoCredentials*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.ResolveTicketToName(System.String)
  commentId: M:SuperOffice.Security.Principal.SoCredentialsIdentityResolver.ResolveTicketToName(System.String)
  id: ResolveTicketToName(System.String)
  parent: SuperOffice.Security.Principal.SoCredentialsIdentityResolver
  langs:
  - csharp
  - vb
  name: ResolveTicketToName(String)
  nameWithType: SoCredentialsIdentityResolver.ResolveTicketToName(String)
  fullName: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.ResolveTicketToName(System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  summary: "\nResolve a ticket into an associate name, if possible. This method only works if you are in the Authenticated state\n"
  syntax:
    content: public static string ResolveTicketToName(string ticket)
    parameters:
    - id: ticket
      type: System.String
      description: 'Complete ticket string including 7T: prefix'
    return:
      type: System.String
      description: Associate name, or blank string
    content.vb: Public Shared Function ResolveTicketToName(ticket As String) As String
  overload: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.ResolveTicketToName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.ResolveTicketDatabaseContextidentifier(System.String)
  commentId: M:SuperOffice.Security.Principal.SoCredentialsIdentityResolver.ResolveTicketDatabaseContextidentifier(System.String)
  id: ResolveTicketDatabaseContextidentifier(System.String)
  parent: SuperOffice.Security.Principal.SoCredentialsIdentityResolver
  langs:
  - csharp
  - vb
  name: ResolveTicketDatabaseContextidentifier(String)
  nameWithType: SoCredentialsIdentityResolver.ResolveTicketDatabaseContextidentifier(String)
  fullName: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.ResolveTicketDatabaseContextidentifier(System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  summary: "\nResolve the database contect identifier from a ticket.\n"
  syntax:
    content: public static string ResolveTicketDatabaseContextidentifier(string ticket)
    parameters:
    - id: ticket
      type: System.String
      description: Ticket to resolve database contect identifier from.
    return:
      type: System.String
      description: Database context identifier.
    content.vb: Public Shared Function ResolveTicketDatabaseContextidentifier(ticket As String) As String
  overload: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.ResolveTicketDatabaseContextidentifier*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.ResolveIdentity(System.Collections.Generic.IList{System.IdentityModel.Tokens.SecurityToken},SuperOffice.Data.SoConnection)
  commentId: M:SuperOffice.Security.Principal.SoCredentialsIdentityResolver.ResolveIdentity(System.Collections.Generic.IList{System.IdentityModel.Tokens.SecurityToken},SuperOffice.Data.SoConnection)
  id: ResolveIdentity(System.Collections.Generic.IList{System.IdentityModel.Tokens.SecurityToken},SuperOffice.Data.SoConnection)
  parent: SuperOffice.Security.Principal.SoCredentialsIdentityResolver
  langs:
  - csharp
  - vb
  name: ResolveIdentity(IList<SecurityToken>, SoConnection)
  nameWithType: SoCredentialsIdentityResolver.ResolveIdentity(IList<SecurityToken>, SoConnection)
  fullName: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.ResolveIdentity(System.Collections.Generic.IList<System.IdentityModel.Tokens.SecurityToken>, SuperOffice.Data.SoConnection)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  summary: "\nResolve an identity based on an <xref href=\"SuperOffice.Security.Principal.SoCredentialsSecurityToken\" data-throw-if-not-resolved=\"false\"></xref>, i.e., a NetServer\nsession ticket.\n"
  syntax:
    content: public override ISoIdentity ResolveIdentity(IList<SecurityToken> tokens, SoConnection dbConnection)
    parameters:
    - id: tokens
      type: System.Collections.Generic.IList{System.IdentityModel.Tokens.SecurityToken}
    - id: dbConnection
      type: SuperOffice.Data.SoConnection
    return:
      type: SuperOffice.Security.Principal.ISoIdentity
    content.vb: Public Overrides Function ResolveIdentity(tokens As IList(Of SecurityToken), dbConnection As SoConnection) As ISoIdentity
  overridden: SuperOffice.Security.Principal.AssociateResolver{SuperOffice.Security.Principal.SoCredentialsSecurityToken}.ResolveIdentity(System.Collections.Generic.IList{System.IdentityModel.Tokens.SecurityToken},SuperOffice.Data.SoConnection)
  overload: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.ResolveIdentity*
  nameWithType.vb: SoCredentialsIdentityResolver.ResolveIdentity(IList(Of SecurityToken), SoConnection)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.ResolveIdentity(System.Collections.Generic.IList(Of System.IdentityModel.Tokens.SecurityToken), SuperOffice.Data.SoConnection)
  name.vb: ResolveIdentity(IList(Of SecurityToken), SoConnection)
- uid: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.#ctor
  commentId: M:SuperOffice.Security.Principal.SoCredentialsIdentityResolver.#ctor
  id: '#ctor'
  parent: SuperOffice.Security.Principal.SoCredentialsIdentityResolver
  langs:
  - csharp
  - vb
  name: SoCredentialsIdentityResolver()
  nameWithType: SoCredentialsIdentityResolver.SoCredentialsIdentityResolver()
  fullName: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.SoCredentialsIdentityResolver()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  syntax:
    content: public SoCredentialsIdentityResolver()
    content.vb: Public Sub New
  overload: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.Security.Principal
  commentId: N:SuperOffice.Security.Principal
  isExternal: true
  name: SuperOffice.Security.Principal
  nameWithType: SuperOffice.Security.Principal
  fullName: SuperOffice.Security.Principal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Security.Principal.AssociateResolver{SuperOffice.Security.Principal.SoCredentialsSecurityToken}
  commentId: T:SuperOffice.Security.Principal.AssociateResolver{SuperOffice.Security.Principal.SoCredentialsSecurityToken}
  parent: SuperOffice.Security.Principal
  definition: SuperOffice.Security.Principal.AssociateResolver`1
  name: AssociateResolver<SoCredentialsSecurityToken>
  nameWithType: AssociateResolver<SoCredentialsSecurityToken>
  fullName: SuperOffice.Security.Principal.AssociateResolver<SuperOffice.Security.Principal.SoCredentialsSecurityToken>
  nameWithType.vb: AssociateResolver(Of SoCredentialsSecurityToken)
  fullName.vb: SuperOffice.Security.Principal.AssociateResolver(Of SuperOffice.Security.Principal.SoCredentialsSecurityToken)
  name.vb: AssociateResolver(Of SoCredentialsSecurityToken)
  spec.csharp:
  - uid: SuperOffice.Security.Principal.AssociateResolver`1
    name: AssociateResolver
    nameWithType: AssociateResolver
    fullName: SuperOffice.Security.Principal.AssociateResolver
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Security.Principal.SoCredentialsSecurityToken
    name: SoCredentialsSecurityToken
    nameWithType: SoCredentialsSecurityToken
    fullName: SuperOffice.Security.Principal.SoCredentialsSecurityToken
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Security.Principal.AssociateResolver`1
    name: AssociateResolver
    nameWithType: AssociateResolver
    fullName: SuperOffice.Security.Principal.AssociateResolver
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Security.Principal.SoCredentialsSecurityToken
    name: SoCredentialsSecurityToken
    nameWithType: SoCredentialsSecurityToken
    fullName: SuperOffice.Security.Principal.SoCredentialsSecurityToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Security.ISoIdentityResolver
  commentId: T:SuperOffice.Security.ISoIdentityResolver
  parent: SuperOffice.Security
  isExternal: true
  name: ISoIdentityResolver
  nameWithType: ISoIdentityResolver
  fullName: SuperOffice.Security.ISoIdentityResolver
- uid: SuperOffice.Security.Principal.AssociateResolver{SuperOffice.Security.Principal.SoCredentialsSecurityToken}.GetInfoAboutUser
  commentId: M:SuperOffice.Security.Principal.AssociateResolver{SuperOffice.Security.Principal.SoCredentialsSecurityToken}.GetInfoAboutUser
  parent: SuperOffice.Security.Principal.AssociateResolver{SuperOffice.Security.Principal.SoCredentialsSecurityToken}
  definition: SuperOffice.Security.Principal.AssociateResolver`1.GetInfoAboutUser
  name: GetInfoAboutUser()
  nameWithType: AssociateResolver<SoCredentialsSecurityToken>.GetInfoAboutUser()
  fullName: SuperOffice.Security.Principal.AssociateResolver<SuperOffice.Security.Principal.SoCredentialsSecurityToken>.GetInfoAboutUser()
  nameWithType.vb: AssociateResolver(Of SoCredentialsSecurityToken).GetInfoAboutUser()
  fullName.vb: SuperOffice.Security.Principal.AssociateResolver(Of SuperOffice.Security.Principal.SoCredentialsSecurityToken).GetInfoAboutUser()
  spec.csharp:
  - uid: SuperOffice.Security.Principal.AssociateResolver`1.GetInfoAboutUser
    name: GetInfoAboutUser
    nameWithType: AssociateResolver<SoCredentialsSecurityToken>.GetInfoAboutUser
    fullName: SuperOffice.Security.Principal.AssociateResolver<SuperOffice.Security.Principal.SoCredentialsSecurityToken>.GetInfoAboutUser
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Security.Principal.AssociateResolver`1.GetInfoAboutUser
    name: GetInfoAboutUser
    nameWithType: AssociateResolver(Of SoCredentialsSecurityToken).GetInfoAboutUser
    fullName: SuperOffice.Security.Principal.AssociateResolver(Of SuperOffice.Security.Principal.SoCredentialsSecurityToken).GetInfoAboutUser
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Security.Principal.AssociateResolver{SuperOffice.Security.Principal.SoCredentialsSecurityToken}.UpdateCredentialsLastUsed(SuperOffice.CRM.Data.CredentialsTableInfo,System.Int32,SuperOffice.Data.SoConnection,System.DateTime)
  commentId: M:SuperOffice.Security.Principal.AssociateResolver{SuperOffice.Security.Principal.SoCredentialsSecurityToken}.UpdateCredentialsLastUsed(SuperOffice.CRM.Data.CredentialsTableInfo,System.Int32,SuperOffice.Data.SoConnection,System.DateTime)
  parent: SuperOffice.Security.Principal.AssociateResolver{SuperOffice.Security.Principal.SoCredentialsSecurityToken}
  definition: SuperOffice.Security.Principal.AssociateResolver`1.UpdateCredentialsLastUsed(SuperOffice.CRM.Data.CredentialsTableInfo,System.Int32,SuperOffice.Data.SoConnection,System.DateTime)
  name: UpdateCredentialsLastUsed(CredentialsTableInfo, Int32, SoConnection, DateTime)
  nameWithType: AssociateResolver<SoCredentialsSecurityToken>.UpdateCredentialsLastUsed(CredentialsTableInfo, Int32, SoConnection, DateTime)
  fullName: SuperOffice.Security.Principal.AssociateResolver<SuperOffice.Security.Principal.SoCredentialsSecurityToken>.UpdateCredentialsLastUsed(SuperOffice.CRM.Data.CredentialsTableInfo, System.Int32, SuperOffice.Data.SoConnection, System.DateTime)
  nameWithType.vb: AssociateResolver(Of SoCredentialsSecurityToken).UpdateCredentialsLastUsed(CredentialsTableInfo, Int32, SoConnection, DateTime)
  fullName.vb: SuperOffice.Security.Principal.AssociateResolver(Of SuperOffice.Security.Principal.SoCredentialsSecurityToken).UpdateCredentialsLastUsed(SuperOffice.CRM.Data.CredentialsTableInfo, System.Int32, SuperOffice.Data.SoConnection, System.DateTime)
  spec.csharp:
  - uid: SuperOffice.Security.Principal.AssociateResolver`1.UpdateCredentialsLastUsed(SuperOffice.CRM.Data.CredentialsTableInfo,System.Int32,SuperOffice.Data.SoConnection,System.DateTime)
    name: UpdateCredentialsLastUsed
    nameWithType: AssociateResolver<SoCredentialsSecurityToken>.UpdateCredentialsLastUsed
    fullName: SuperOffice.Security.Principal.AssociateResolver<SuperOffice.Security.Principal.SoCredentialsSecurityToken>.UpdateCredentialsLastUsed
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Data.CredentialsTableInfo
    name: CredentialsTableInfo
    nameWithType: CredentialsTableInfo
    fullName: SuperOffice.CRM.Data.CredentialsTableInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoConnection
    name: SoConnection
    nameWithType: SoConnection
    fullName: SuperOffice.Data.SoConnection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Security.Principal.AssociateResolver`1.UpdateCredentialsLastUsed(SuperOffice.CRM.Data.CredentialsTableInfo,System.Int32,SuperOffice.Data.SoConnection,System.DateTime)
    name: UpdateCredentialsLastUsed
    nameWithType: AssociateResolver(Of SoCredentialsSecurityToken).UpdateCredentialsLastUsed
    fullName: SuperOffice.Security.Principal.AssociateResolver(Of SuperOffice.Security.Principal.SoCredentialsSecurityToken).UpdateCredentialsLastUsed
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Data.CredentialsTableInfo
    name: CredentialsTableInfo
    nameWithType: CredentialsTableInfo
    fullName: SuperOffice.CRM.Data.CredentialsTableInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoConnection
    name: SoConnection
    nameWithType: SoConnection
    fullName: SuperOffice.Data.SoConnection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Security.Principal.AssociateResolver{SuperOffice.Security.Principal.SoCredentialsSecurityToken}.UpdateRoleId(System.Int32,System.Int32)
  commentId: M:SuperOffice.Security.Principal.AssociateResolver{SuperOffice.Security.Principal.SoCredentialsSecurityToken}.UpdateRoleId(System.Int32,System.Int32)
  parent: SuperOffice.Security.Principal.AssociateResolver{SuperOffice.Security.Principal.SoCredentialsSecurityToken}
  definition: SuperOffice.Security.Principal.AssociateResolver`1.UpdateRoleId(System.Int32,System.Int32)
  name: UpdateRoleId(Int32, Int32)
  nameWithType: AssociateResolver<SoCredentialsSecurityToken>.UpdateRoleId(Int32, Int32)
  fullName: SuperOffice.Security.Principal.AssociateResolver<SuperOffice.Security.Principal.SoCredentialsSecurityToken>.UpdateRoleId(System.Int32, System.Int32)
  nameWithType.vb: AssociateResolver(Of SoCredentialsSecurityToken).UpdateRoleId(Int32, Int32)
  fullName.vb: SuperOffice.Security.Principal.AssociateResolver(Of SuperOffice.Security.Principal.SoCredentialsSecurityToken).UpdateRoleId(System.Int32, System.Int32)
  spec.csharp:
  - uid: SuperOffice.Security.Principal.AssociateResolver`1.UpdateRoleId(System.Int32,System.Int32)
    name: UpdateRoleId
    nameWithType: AssociateResolver<SoCredentialsSecurityToken>.UpdateRoleId
    fullName: SuperOffice.Security.Principal.AssociateResolver<SuperOffice.Security.Principal.SoCredentialsSecurityToken>.UpdateRoleId
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Security.Principal.AssociateResolver`1.UpdateRoleId(System.Int32,System.Int32)
    name: UpdateRoleId
    nameWithType: AssociateResolver(Of SoCredentialsSecurityToken).UpdateRoleId
    fullName: SuperOffice.Security.Principal.AssociateResolver(Of SuperOffice.Security.Principal.SoCredentialsSecurityToken).UpdateRoleId
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Security.Principal.AssociateResolver{SuperOffice.Security.Principal.SoCredentialsSecurityToken}.ResolveFromUsernamePassword(System.String@,System.String,SuperOffice.Data.SoConnection,System.String,System.Int32@)
  commentId: M:SuperOffice.Security.Principal.AssociateResolver{SuperOffice.Security.Principal.SoCredentialsSecurityToken}.ResolveFromUsernamePassword(System.String@,System.String,SuperOffice.Data.SoConnection,System.String,System.Int32@)
  parent: SuperOffice.Security.Principal.AssociateResolver{SuperOffice.Security.Principal.SoCredentialsSecurityToken}
  definition: SuperOffice.Security.Principal.AssociateResolver`1.ResolveFromUsernamePassword(System.String@,System.String,SuperOffice.Data.SoConnection,System.String,System.Int32@)
  name: ResolveFromUsernamePassword(String, String, SoConnection, String, Int32)
  nameWithType: AssociateResolver<SoCredentialsSecurityToken>.ResolveFromUsernamePassword(String, String, SoConnection, String, Int32)
  fullName: SuperOffice.Security.Principal.AssociateResolver<SuperOffice.Security.Principal.SoCredentialsSecurityToken>.ResolveFromUsernamePassword(System.String, System.String, SuperOffice.Data.SoConnection, System.String, System.Int32)
  nameWithType.vb: AssociateResolver(Of SoCredentialsSecurityToken).ResolveFromUsernamePassword(String, String, SoConnection, String, Int32)
  fullName.vb: SuperOffice.Security.Principal.AssociateResolver(Of SuperOffice.Security.Principal.SoCredentialsSecurityToken).ResolveFromUsernamePassword(System.String, System.String, SuperOffice.Data.SoConnection, System.String, System.Int32)
  spec.csharp:
  - uid: SuperOffice.Security.Principal.AssociateResolver`1.ResolveFromUsernamePassword(System.String@,System.String,SuperOffice.Data.SoConnection,System.String,System.Int32@)
    name: ResolveFromUsernamePassword
    nameWithType: AssociateResolver<SoCredentialsSecurityToken>.ResolveFromUsernamePassword
    fullName: SuperOffice.Security.Principal.AssociateResolver<SuperOffice.Security.Principal.SoCredentialsSecurityToken>.ResolveFromUsernamePassword
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoConnection
    name: SoConnection
    nameWithType: SoConnection
    fullName: SuperOffice.Data.SoConnection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Security.Principal.AssociateResolver`1.ResolveFromUsernamePassword(System.String@,System.String,SuperOffice.Data.SoConnection,System.String,System.Int32@)
    name: ResolveFromUsernamePassword
    nameWithType: AssociateResolver(Of SoCredentialsSecurityToken).ResolveFromUsernamePassword
    fullName: SuperOffice.Security.Principal.AssociateResolver(Of SuperOffice.Security.Principal.SoCredentialsSecurityToken).ResolveFromUsernamePassword
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoConnection
    name: SoConnection
    nameWithType: SoConnection
    fullName: SuperOffice.Data.SoConnection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Security.Principal.AssociateResolver{SuperOffice.Security.Principal.SoCredentialsSecurityToken}.ResolveAssociateFromName(System.String@,SuperOffice.Data.AssociateType@,SuperOffice.Data.SoConnection)
  commentId: M:SuperOffice.Security.Principal.AssociateResolver{SuperOffice.Security.Principal.SoCredentialsSecurityToken}.ResolveAssociateFromName(System.String@,SuperOffice.Data.AssociateType@,SuperOffice.Data.SoConnection)
  parent: SuperOffice.Security.Principal.AssociateResolver{SuperOffice.Security.Principal.SoCredentialsSecurityToken}
  definition: SuperOffice.Security.Principal.AssociateResolver`1.ResolveAssociateFromName(System.String@,SuperOffice.Data.AssociateType@,SuperOffice.Data.SoConnection)
  name: ResolveAssociateFromName(String, AssociateType, SoConnection)
  nameWithType: AssociateResolver<SoCredentialsSecurityToken>.ResolveAssociateFromName(String, AssociateType, SoConnection)
  fullName: SuperOffice.Security.Principal.AssociateResolver<SuperOffice.Security.Principal.SoCredentialsSecurityToken>.ResolveAssociateFromName(System.String, SuperOffice.Data.AssociateType, SuperOffice.Data.SoConnection)
  nameWithType.vb: AssociateResolver(Of SoCredentialsSecurityToken).ResolveAssociateFromName(String, AssociateType, SoConnection)
  fullName.vb: SuperOffice.Security.Principal.AssociateResolver(Of SuperOffice.Security.Principal.SoCredentialsSecurityToken).ResolveAssociateFromName(System.String, SuperOffice.Data.AssociateType, SuperOffice.Data.SoConnection)
  spec.csharp:
  - uid: SuperOffice.Security.Principal.AssociateResolver`1.ResolveAssociateFromName(System.String@,SuperOffice.Data.AssociateType@,SuperOffice.Data.SoConnection)
    name: ResolveAssociateFromName
    nameWithType: AssociateResolver<SoCredentialsSecurityToken>.ResolveAssociateFromName
    fullName: SuperOffice.Security.Principal.AssociateResolver<SuperOffice.Security.Principal.SoCredentialsSecurityToken>.ResolveAssociateFromName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.AssociateType
    name: AssociateType
    nameWithType: AssociateType
    fullName: SuperOffice.Data.AssociateType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoConnection
    name: SoConnection
    nameWithType: SoConnection
    fullName: SuperOffice.Data.SoConnection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Security.Principal.AssociateResolver`1.ResolveAssociateFromName(System.String@,SuperOffice.Data.AssociateType@,SuperOffice.Data.SoConnection)
    name: ResolveAssociateFromName
    nameWithType: AssociateResolver(Of SoCredentialsSecurityToken).ResolveAssociateFromName
    fullName: SuperOffice.Security.Principal.AssociateResolver(Of SuperOffice.Security.Principal.SoCredentialsSecurityToken).ResolveAssociateFromName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.AssociateType
    name: AssociateType
    nameWithType: AssociateType
    fullName: SuperOffice.Data.AssociateType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoConnection
    name: SoConnection
    nameWithType: SoConnection
    fullName: SuperOffice.Data.SoConnection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Security.Principal.AssociateResolver{SuperOffice.Security.Principal.SoCredentialsSecurityToken}.IsPasswordValid(System.Int32,System.String,System.String)
  commentId: M:SuperOffice.Security.Principal.AssociateResolver{SuperOffice.Security.Principal.SoCredentialsSecurityToken}.IsPasswordValid(System.Int32,System.String,System.String)
  parent: SuperOffice.Security.Principal.AssociateResolver{SuperOffice.Security.Principal.SoCredentialsSecurityToken}
  definition: SuperOffice.Security.Principal.AssociateResolver`1.IsPasswordValid(System.Int32,System.String,System.String)
  name: IsPasswordValid(Int32, String, String)
  nameWithType: AssociateResolver<SoCredentialsSecurityToken>.IsPasswordValid(Int32, String, String)
  fullName: SuperOffice.Security.Principal.AssociateResolver<SuperOffice.Security.Principal.SoCredentialsSecurityToken>.IsPasswordValid(System.Int32, System.String, System.String)
  nameWithType.vb: AssociateResolver(Of SoCredentialsSecurityToken).IsPasswordValid(Int32, String, String)
  fullName.vb: SuperOffice.Security.Principal.AssociateResolver(Of SuperOffice.Security.Principal.SoCredentialsSecurityToken).IsPasswordValid(System.Int32, System.String, System.String)
  spec.csharp:
  - uid: SuperOffice.Security.Principal.AssociateResolver`1.IsPasswordValid(System.Int32,System.String,System.String)
    name: IsPasswordValid
    nameWithType: AssociateResolver<SoCredentialsSecurityToken>.IsPasswordValid
    fullName: SuperOffice.Security.Principal.AssociateResolver<SuperOffice.Security.Principal.SoCredentialsSecurityToken>.IsPasswordValid
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Security.Principal.AssociateResolver`1.IsPasswordValid(System.Int32,System.String,System.String)
    name: IsPasswordValid
    nameWithType: AssociateResolver(Of SoCredentialsSecurityToken).IsPasswordValid
    fullName: SuperOffice.Security.Principal.AssociateResolver(Of SuperOffice.Security.Principal.SoCredentialsSecurityToken).IsPasswordValid
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Security.Principal.AssociateResolver{SuperOffice.Security.Principal.SoCredentialsSecurityToken}.SecretFromPassword(System.Int32,System.String)
  commentId: M:SuperOffice.Security.Principal.AssociateResolver{SuperOffice.Security.Principal.SoCredentialsSecurityToken}.SecretFromPassword(System.Int32,System.String)
  parent: SuperOffice.Security.Principal.AssociateResolver{SuperOffice.Security.Principal.SoCredentialsSecurityToken}
  definition: SuperOffice.Security.Principal.AssociateResolver`1.SecretFromPassword(System.Int32,System.String)
  name: SecretFromPassword(Int32, String)
  nameWithType: AssociateResolver<SoCredentialsSecurityToken>.SecretFromPassword(Int32, String)
  fullName: SuperOffice.Security.Principal.AssociateResolver<SuperOffice.Security.Principal.SoCredentialsSecurityToken>.SecretFromPassword(System.Int32, System.String)
  nameWithType.vb: AssociateResolver(Of SoCredentialsSecurityToken).SecretFromPassword(Int32, String)
  fullName.vb: SuperOffice.Security.Principal.AssociateResolver(Of SuperOffice.Security.Principal.SoCredentialsSecurityToken).SecretFromPassword(System.Int32, System.String)
  spec.csharp:
  - uid: SuperOffice.Security.Principal.AssociateResolver`1.SecretFromPassword(System.Int32,System.String)
    name: SecretFromPassword
    nameWithType: AssociateResolver<SoCredentialsSecurityToken>.SecretFromPassword
    fullName: SuperOffice.Security.Principal.AssociateResolver<SuperOffice.Security.Principal.SoCredentialsSecurityToken>.SecretFromPassword
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Security.Principal.AssociateResolver`1.SecretFromPassword(System.Int32,System.String)
    name: SecretFromPassword
    nameWithType: AssociateResolver(Of SoCredentialsSecurityToken).SecretFromPassword
    fullName: SuperOffice.Security.Principal.AssociateResolver(Of SuperOffice.Security.Principal.SoCredentialsSecurityToken).SecretFromPassword
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<SoCredentialsIdentityResolver, To>()
  nameWithType: EnumUtil.MapEnums<SoCredentialsIdentityResolver, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Security.Principal.SoCredentialsIdentityResolver, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of SoCredentialsIdentityResolver, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Security.Principal.SoCredentialsIdentityResolver, To)()
  name.vb: MapEnums(Of SoCredentialsIdentityResolver, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<SoCredentialsIdentityResolver, To>
    nameWithType: EnumUtil.MapEnums<SoCredentialsIdentityResolver, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Security.Principal.SoCredentialsIdentityResolver, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of SoCredentialsIdentityResolver, To)
    nameWithType: EnumUtil.MapEnums(Of SoCredentialsIdentityResolver, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Security.Principal.SoCredentialsIdentityResolver, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Security.Principal.SoCredentialsIdentityResolver)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<SoCredentialsIdentityResolver>(SoCredentialsIdentityResolver)
  nameWithType: ObjectExtensions.AssignByReflection<SoCredentialsIdentityResolver>(SoCredentialsIdentityResolver)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Security.Principal.SoCredentialsIdentityResolver>(SuperOffice.Security.Principal.SoCredentialsIdentityResolver)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of SoCredentialsIdentityResolver)(SoCredentialsIdentityResolver)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Security.Principal.SoCredentialsIdentityResolver)(SuperOffice.Security.Principal.SoCredentialsIdentityResolver)
  name.vb: AssignByReflection(Of SoCredentialsIdentityResolver)(SoCredentialsIdentityResolver)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<SoCredentialsIdentityResolver>
    nameWithType: ObjectExtensions.AssignByReflection<SoCredentialsIdentityResolver>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Security.Principal.SoCredentialsIdentityResolver>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Security.Principal.SoCredentialsIdentityResolver
    name: SoCredentialsIdentityResolver
    nameWithType: SoCredentialsIdentityResolver
    fullName: SuperOffice.Security.Principal.SoCredentialsIdentityResolver
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of SoCredentialsIdentityResolver)
    nameWithType: ObjectExtensions.AssignByReflection(Of SoCredentialsIdentityResolver)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Security.Principal.SoCredentialsIdentityResolver)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Security.Principal.SoCredentialsIdentityResolver
    name: SoCredentialsIdentityResolver
    nameWithType: SoCredentialsIdentityResolver
    fullName: SuperOffice.Security.Principal.SoCredentialsIdentityResolver
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<SoCredentialsIdentityResolver>()
  nameWithType: ObjectExtensions.GraphCopy<SoCredentialsIdentityResolver>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Security.Principal.SoCredentialsIdentityResolver>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of SoCredentialsIdentityResolver)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Security.Principal.SoCredentialsIdentityResolver)()
  name.vb: GraphCopy(Of SoCredentialsIdentityResolver)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<SoCredentialsIdentityResolver>
    nameWithType: ObjectExtensions.GraphCopy<SoCredentialsIdentityResolver>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Security.Principal.SoCredentialsIdentityResolver>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of SoCredentialsIdentityResolver)
    nameWithType: ObjectExtensions.GraphCopy(Of SoCredentialsIdentityResolver)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Security.Principal.SoCredentialsIdentityResolver)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<SoCredentialsIdentityResolver, To>()
  nameWithType: Converters.MapEnums<SoCredentialsIdentityResolver, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Security.Principal.SoCredentialsIdentityResolver, To>()
  nameWithType.vb: Converters.MapEnums(Of SoCredentialsIdentityResolver, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Security.Principal.SoCredentialsIdentityResolver, To)()
  name.vb: MapEnums(Of SoCredentialsIdentityResolver, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<SoCredentialsIdentityResolver, To>
    nameWithType: Converters.MapEnums<SoCredentialsIdentityResolver, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Security.Principal.SoCredentialsIdentityResolver, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of SoCredentialsIdentityResolver, To)
    nameWithType: Converters.MapEnums(Of SoCredentialsIdentityResolver, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Security.Principal.SoCredentialsIdentityResolver, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Security.Principal.AssociateResolver`1
  commentId: T:SuperOffice.Security.Principal.AssociateResolver`1
  isExternal: true
  name: AssociateResolver<TToken>
  nameWithType: AssociateResolver<TToken>
  fullName: SuperOffice.Security.Principal.AssociateResolver<TToken>
  nameWithType.vb: AssociateResolver(Of TToken)
  fullName.vb: SuperOffice.Security.Principal.AssociateResolver(Of TToken)
  name.vb: AssociateResolver(Of TToken)
  spec.csharp:
  - uid: SuperOffice.Security.Principal.AssociateResolver`1
    name: AssociateResolver
    nameWithType: AssociateResolver
    fullName: SuperOffice.Security.Principal.AssociateResolver
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TToken
    nameWithType: TToken
    fullName: TToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Security.Principal.AssociateResolver`1
    name: AssociateResolver
    nameWithType: AssociateResolver
    fullName: SuperOffice.Security.Principal.AssociateResolver
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TToken
    nameWithType: TToken
    fullName: TToken
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Security
  commentId: N:SuperOffice.Security
  isExternal: true
  name: SuperOffice.Security
  nameWithType: SuperOffice.Security
  fullName: SuperOffice.Security
- uid: SuperOffice.Security.Principal.AssociateResolver`1.GetInfoAboutUser
  commentId: M:SuperOffice.Security.Principal.AssociateResolver`1.GetInfoAboutUser
  isExternal: true
  name: GetInfoAboutUser()
  nameWithType: AssociateResolver<TToken>.GetInfoAboutUser()
  fullName: SuperOffice.Security.Principal.AssociateResolver<TToken>.GetInfoAboutUser()
  nameWithType.vb: AssociateResolver(Of TToken).GetInfoAboutUser()
  fullName.vb: SuperOffice.Security.Principal.AssociateResolver(Of TToken).GetInfoAboutUser()
  spec.csharp:
  - uid: SuperOffice.Security.Principal.AssociateResolver`1.GetInfoAboutUser
    name: GetInfoAboutUser
    nameWithType: AssociateResolver<TToken>.GetInfoAboutUser
    fullName: SuperOffice.Security.Principal.AssociateResolver<TToken>.GetInfoAboutUser
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Security.Principal.AssociateResolver`1.GetInfoAboutUser
    name: GetInfoAboutUser
    nameWithType: AssociateResolver(Of TToken).GetInfoAboutUser
    fullName: SuperOffice.Security.Principal.AssociateResolver(Of TToken).GetInfoAboutUser
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Security.Principal.AssociateResolver`1.UpdateCredentialsLastUsed(SuperOffice.CRM.Data.CredentialsTableInfo,System.Int32,SuperOffice.Data.SoConnection,System.DateTime)
  commentId: M:SuperOffice.Security.Principal.AssociateResolver`1.UpdateCredentialsLastUsed(SuperOffice.CRM.Data.CredentialsTableInfo,System.Int32,SuperOffice.Data.SoConnection,System.DateTime)
  isExternal: true
  name: UpdateCredentialsLastUsed(CredentialsTableInfo, Int32, SoConnection, DateTime)
  nameWithType: AssociateResolver<TToken>.UpdateCredentialsLastUsed(CredentialsTableInfo, Int32, SoConnection, DateTime)
  fullName: SuperOffice.Security.Principal.AssociateResolver<TToken>.UpdateCredentialsLastUsed(SuperOffice.CRM.Data.CredentialsTableInfo, System.Int32, SuperOffice.Data.SoConnection, System.DateTime)
  nameWithType.vb: AssociateResolver(Of TToken).UpdateCredentialsLastUsed(CredentialsTableInfo, Int32, SoConnection, DateTime)
  fullName.vb: SuperOffice.Security.Principal.AssociateResolver(Of TToken).UpdateCredentialsLastUsed(SuperOffice.CRM.Data.CredentialsTableInfo, System.Int32, SuperOffice.Data.SoConnection, System.DateTime)
  spec.csharp:
  - uid: SuperOffice.Security.Principal.AssociateResolver`1.UpdateCredentialsLastUsed(SuperOffice.CRM.Data.CredentialsTableInfo,System.Int32,SuperOffice.Data.SoConnection,System.DateTime)
    name: UpdateCredentialsLastUsed
    nameWithType: AssociateResolver<TToken>.UpdateCredentialsLastUsed
    fullName: SuperOffice.Security.Principal.AssociateResolver<TToken>.UpdateCredentialsLastUsed
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Data.CredentialsTableInfo
    name: CredentialsTableInfo
    nameWithType: CredentialsTableInfo
    fullName: SuperOffice.CRM.Data.CredentialsTableInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoConnection
    name: SoConnection
    nameWithType: SoConnection
    fullName: SuperOffice.Data.SoConnection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Security.Principal.AssociateResolver`1.UpdateCredentialsLastUsed(SuperOffice.CRM.Data.CredentialsTableInfo,System.Int32,SuperOffice.Data.SoConnection,System.DateTime)
    name: UpdateCredentialsLastUsed
    nameWithType: AssociateResolver(Of TToken).UpdateCredentialsLastUsed
    fullName: SuperOffice.Security.Principal.AssociateResolver(Of TToken).UpdateCredentialsLastUsed
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Data.CredentialsTableInfo
    name: CredentialsTableInfo
    nameWithType: CredentialsTableInfo
    fullName: SuperOffice.CRM.Data.CredentialsTableInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoConnection
    name: SoConnection
    nameWithType: SoConnection
    fullName: SuperOffice.Data.SoConnection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Security.Principal.AssociateResolver`1.UpdateRoleId(System.Int32,System.Int32)
  commentId: M:SuperOffice.Security.Principal.AssociateResolver`1.UpdateRoleId(System.Int32,System.Int32)
  isExternal: true
  name: UpdateRoleId(Int32, Int32)
  nameWithType: AssociateResolver<TToken>.UpdateRoleId(Int32, Int32)
  fullName: SuperOffice.Security.Principal.AssociateResolver<TToken>.UpdateRoleId(System.Int32, System.Int32)
  nameWithType.vb: AssociateResolver(Of TToken).UpdateRoleId(Int32, Int32)
  fullName.vb: SuperOffice.Security.Principal.AssociateResolver(Of TToken).UpdateRoleId(System.Int32, System.Int32)
  spec.csharp:
  - uid: SuperOffice.Security.Principal.AssociateResolver`1.UpdateRoleId(System.Int32,System.Int32)
    name: UpdateRoleId
    nameWithType: AssociateResolver<TToken>.UpdateRoleId
    fullName: SuperOffice.Security.Principal.AssociateResolver<TToken>.UpdateRoleId
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Security.Principal.AssociateResolver`1.UpdateRoleId(System.Int32,System.Int32)
    name: UpdateRoleId
    nameWithType: AssociateResolver(Of TToken).UpdateRoleId
    fullName: SuperOffice.Security.Principal.AssociateResolver(Of TToken).UpdateRoleId
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Security.Principal.AssociateResolver`1.ResolveFromUsernamePassword(System.String@,System.String,SuperOffice.Data.SoConnection,System.String,System.Int32@)
  commentId: M:SuperOffice.Security.Principal.AssociateResolver`1.ResolveFromUsernamePassword(System.String@,System.String,SuperOffice.Data.SoConnection,System.String,System.Int32@)
  isExternal: true
  name: ResolveFromUsernamePassword(String, String, SoConnection, String, Int32)
  nameWithType: AssociateResolver<TToken>.ResolveFromUsernamePassword(String, String, SoConnection, String, Int32)
  fullName: SuperOffice.Security.Principal.AssociateResolver<TToken>.ResolveFromUsernamePassword(System.String, System.String, SuperOffice.Data.SoConnection, System.String, System.Int32)
  nameWithType.vb: AssociateResolver(Of TToken).ResolveFromUsernamePassword(String, String, SoConnection, String, Int32)
  fullName.vb: SuperOffice.Security.Principal.AssociateResolver(Of TToken).ResolveFromUsernamePassword(System.String, System.String, SuperOffice.Data.SoConnection, System.String, System.Int32)
  spec.csharp:
  - uid: SuperOffice.Security.Principal.AssociateResolver`1.ResolveFromUsernamePassword(System.String@,System.String,SuperOffice.Data.SoConnection,System.String,System.Int32@)
    name: ResolveFromUsernamePassword
    nameWithType: AssociateResolver<TToken>.ResolveFromUsernamePassword
    fullName: SuperOffice.Security.Principal.AssociateResolver<TToken>.ResolveFromUsernamePassword
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoConnection
    name: SoConnection
    nameWithType: SoConnection
    fullName: SuperOffice.Data.SoConnection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Security.Principal.AssociateResolver`1.ResolveFromUsernamePassword(System.String@,System.String,SuperOffice.Data.SoConnection,System.String,System.Int32@)
    name: ResolveFromUsernamePassword
    nameWithType: AssociateResolver(Of TToken).ResolveFromUsernamePassword
    fullName: SuperOffice.Security.Principal.AssociateResolver(Of TToken).ResolveFromUsernamePassword
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoConnection
    name: SoConnection
    nameWithType: SoConnection
    fullName: SuperOffice.Data.SoConnection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Security.Principal.AssociateResolver`1.ResolveAssociateFromName(System.String@,SuperOffice.Data.AssociateType@,SuperOffice.Data.SoConnection)
  commentId: M:SuperOffice.Security.Principal.AssociateResolver`1.ResolveAssociateFromName(System.String@,SuperOffice.Data.AssociateType@,SuperOffice.Data.SoConnection)
  isExternal: true
  name: ResolveAssociateFromName(String, AssociateType, SoConnection)
  nameWithType: AssociateResolver<TToken>.ResolveAssociateFromName(String, AssociateType, SoConnection)
  fullName: SuperOffice.Security.Principal.AssociateResolver<TToken>.ResolveAssociateFromName(System.String, SuperOffice.Data.AssociateType, SuperOffice.Data.SoConnection)
  nameWithType.vb: AssociateResolver(Of TToken).ResolveAssociateFromName(String, AssociateType, SoConnection)
  fullName.vb: SuperOffice.Security.Principal.AssociateResolver(Of TToken).ResolveAssociateFromName(System.String, SuperOffice.Data.AssociateType, SuperOffice.Data.SoConnection)
  spec.csharp:
  - uid: SuperOffice.Security.Principal.AssociateResolver`1.ResolveAssociateFromName(System.String@,SuperOffice.Data.AssociateType@,SuperOffice.Data.SoConnection)
    name: ResolveAssociateFromName
    nameWithType: AssociateResolver<TToken>.ResolveAssociateFromName
    fullName: SuperOffice.Security.Principal.AssociateResolver<TToken>.ResolveAssociateFromName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.AssociateType
    name: AssociateType
    nameWithType: AssociateType
    fullName: SuperOffice.Data.AssociateType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoConnection
    name: SoConnection
    nameWithType: SoConnection
    fullName: SuperOffice.Data.SoConnection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Security.Principal.AssociateResolver`1.ResolveAssociateFromName(System.String@,SuperOffice.Data.AssociateType@,SuperOffice.Data.SoConnection)
    name: ResolveAssociateFromName
    nameWithType: AssociateResolver(Of TToken).ResolveAssociateFromName
    fullName: SuperOffice.Security.Principal.AssociateResolver(Of TToken).ResolveAssociateFromName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.AssociateType
    name: AssociateType
    nameWithType: AssociateType
    fullName: SuperOffice.Data.AssociateType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoConnection
    name: SoConnection
    nameWithType: SoConnection
    fullName: SuperOffice.Data.SoConnection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Security.Principal.AssociateResolver`1.IsPasswordValid(System.Int32,System.String,System.String)
  commentId: M:SuperOffice.Security.Principal.AssociateResolver`1.IsPasswordValid(System.Int32,System.String,System.String)
  isExternal: true
  name: IsPasswordValid(Int32, String, String)
  nameWithType: AssociateResolver<TToken>.IsPasswordValid(Int32, String, String)
  fullName: SuperOffice.Security.Principal.AssociateResolver<TToken>.IsPasswordValid(System.Int32, System.String, System.String)
  nameWithType.vb: AssociateResolver(Of TToken).IsPasswordValid(Int32, String, String)
  fullName.vb: SuperOffice.Security.Principal.AssociateResolver(Of TToken).IsPasswordValid(System.Int32, System.String, System.String)
  spec.csharp:
  - uid: SuperOffice.Security.Principal.AssociateResolver`1.IsPasswordValid(System.Int32,System.String,System.String)
    name: IsPasswordValid
    nameWithType: AssociateResolver<TToken>.IsPasswordValid
    fullName: SuperOffice.Security.Principal.AssociateResolver<TToken>.IsPasswordValid
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Security.Principal.AssociateResolver`1.IsPasswordValid(System.Int32,System.String,System.String)
    name: IsPasswordValid
    nameWithType: AssociateResolver(Of TToken).IsPasswordValid
    fullName: SuperOffice.Security.Principal.AssociateResolver(Of TToken).IsPasswordValid
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Security.Principal.AssociateResolver`1.SecretFromPassword(System.Int32,System.String)
  commentId: M:SuperOffice.Security.Principal.AssociateResolver`1.SecretFromPassword(System.Int32,System.String)
  isExternal: true
  name: SecretFromPassword(Int32, String)
  nameWithType: AssociateResolver<TToken>.SecretFromPassword(Int32, String)
  fullName: SuperOffice.Security.Principal.AssociateResolver<TToken>.SecretFromPassword(System.Int32, System.String)
  nameWithType.vb: AssociateResolver(Of TToken).SecretFromPassword(Int32, String)
  fullName.vb: SuperOffice.Security.Principal.AssociateResolver(Of TToken).SecretFromPassword(System.Int32, System.String)
  spec.csharp:
  - uid: SuperOffice.Security.Principal.AssociateResolver`1.SecretFromPassword(System.Int32,System.String)
    name: SecretFromPassword
    nameWithType: AssociateResolver<TToken>.SecretFromPassword
    fullName: SuperOffice.Security.Principal.AssociateResolver<TToken>.SecretFromPassword
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Security.Principal.AssociateResolver`1.SecretFromPassword(System.Int32,System.String)
    name: SecretFromPassword
    nameWithType: AssociateResolver(Of TToken).SecretFromPassword
    fullName: SuperOffice.Security.Principal.AssociateResolver(Of TToken).SecretFromPassword
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.CreateSoCredentials*
  commentId: Overload:SuperOffice.Security.Principal.SoCredentialsIdentityResolver.CreateSoCredentials
  isExternal: true
  name: CreateSoCredentials
  nameWithType: SoCredentialsIdentityResolver.CreateSoCredentials
  fullName: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.CreateSoCredentials
- uid: SuperOffice.CRM.Services.ProvidedCredential[]
  isExternal: true
  name: ProvidedCredential[]
  nameWithType: ProvidedCredential[]
  fullName: SuperOffice.CRM.Services.ProvidedCredential[]
  nameWithType.vb: ProvidedCredential()
  fullName.vb: SuperOffice.CRM.Services.ProvidedCredential()
  name.vb: ProvidedCredential()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ProvidedCredential
    name: ProvidedCredential
    nameWithType: ProvidedCredential
    fullName: SuperOffice.CRM.Services.ProvidedCredential
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.Services.ProvidedCredential
    name: ProvidedCredential
    nameWithType: ProvidedCredential
    fullName: SuperOffice.CRM.Services.ProvidedCredential
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.Security.Principal.SoCredentials
  commentId: T:SuperOffice.Security.Principal.SoCredentials
  parent: SuperOffice.Security.Principal
  isExternal: true
  name: SoCredentials
  nameWithType: SoCredentials
  fullName: SuperOffice.Security.Principal.SoCredentials
- uid: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.RenewSoCredentials*
  commentId: Overload:SuperOffice.Security.Principal.SoCredentialsIdentityResolver.RenewSoCredentials
  isExternal: true
  name: RenewSoCredentials
  nameWithType: SoCredentialsIdentityResolver.RenewSoCredentials
  fullName: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.RenewSoCredentials
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.ResolveTicketToName*
  commentId: Overload:SuperOffice.Security.Principal.SoCredentialsIdentityResolver.ResolveTicketToName
  isExternal: true
  name: ResolveTicketToName
  nameWithType: SoCredentialsIdentityResolver.ResolveTicketToName
  fullName: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.ResolveTicketToName
- uid: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.ResolveTicketDatabaseContextidentifier*
  commentId: Overload:SuperOffice.Security.Principal.SoCredentialsIdentityResolver.ResolveTicketDatabaseContextidentifier
  isExternal: true
  name: ResolveTicketDatabaseContextidentifier
  nameWithType: SoCredentialsIdentityResolver.ResolveTicketDatabaseContextidentifier
  fullName: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.ResolveTicketDatabaseContextidentifier
- uid: SuperOffice.Security.Principal.AssociateResolver{SuperOffice.Security.Principal.SoCredentialsSecurityToken}.ResolveIdentity(System.Collections.Generic.IList{System.IdentityModel.Tokens.SecurityToken},SuperOffice.Data.SoConnection)
  commentId: M:SuperOffice.Security.Principal.AssociateResolver{SuperOffice.Security.Principal.SoCredentialsSecurityToken}.ResolveIdentity(System.Collections.Generic.IList{System.IdentityModel.Tokens.SecurityToken},SuperOffice.Data.SoConnection)
  parent: SuperOffice.Security.Principal.AssociateResolver{SuperOffice.Security.Principal.SoCredentialsSecurityToken}
  definition: SuperOffice.Security.Principal.AssociateResolver`1.ResolveIdentity(System.Collections.Generic.IList{System.IdentityModel.Tokens.SecurityToken},SuperOffice.Data.SoConnection)
  name: ResolveIdentity(IList<SecurityToken>, SoConnection)
  nameWithType: AssociateResolver<SoCredentialsSecurityToken>.ResolveIdentity(IList<SecurityToken>, SoConnection)
  fullName: SuperOffice.Security.Principal.AssociateResolver<SuperOffice.Security.Principal.SoCredentialsSecurityToken>.ResolveIdentity(System.Collections.Generic.IList<System.IdentityModel.Tokens.SecurityToken>, SuperOffice.Data.SoConnection)
  nameWithType.vb: AssociateResolver(Of SoCredentialsSecurityToken).ResolveIdentity(IList(Of SecurityToken), SoConnection)
  fullName.vb: SuperOffice.Security.Principal.AssociateResolver(Of SuperOffice.Security.Principal.SoCredentialsSecurityToken).ResolveIdentity(System.Collections.Generic.IList(Of System.IdentityModel.Tokens.SecurityToken), SuperOffice.Data.SoConnection)
  name.vb: ResolveIdentity(IList(Of SecurityToken), SoConnection)
  spec.csharp:
  - uid: SuperOffice.Security.Principal.AssociateResolver`1.ResolveIdentity(System.Collections.Generic.IList{System.IdentityModel.Tokens.SecurityToken},SuperOffice.Data.SoConnection)
    name: ResolveIdentity
    nameWithType: AssociateResolver<SoCredentialsSecurityToken>.ResolveIdentity
    fullName: SuperOffice.Security.Principal.AssociateResolver<SuperOffice.Security.Principal.SoCredentialsSecurityToken>.ResolveIdentity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: System.IdentityModel.Tokens.SecurityToken
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoConnection
    name: SoConnection
    nameWithType: SoConnection
    fullName: SuperOffice.Data.SoConnection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Security.Principal.AssociateResolver`1.ResolveIdentity(System.Collections.Generic.IList{System.IdentityModel.Tokens.SecurityToken},SuperOffice.Data.SoConnection)
    name: ResolveIdentity
    nameWithType: AssociateResolver(Of SoCredentialsSecurityToken).ResolveIdentity
    fullName: SuperOffice.Security.Principal.AssociateResolver(Of SuperOffice.Security.Principal.SoCredentialsSecurityToken).ResolveIdentity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IdentityModel.Tokens.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: System.IdentityModel.Tokens.SecurityToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoConnection
    name: SoConnection
    nameWithType: SoConnection
    fullName: SuperOffice.Data.SoConnection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.ResolveIdentity*
  commentId: Overload:SuperOffice.Security.Principal.SoCredentialsIdentityResolver.ResolveIdentity
  isExternal: true
  name: ResolveIdentity
  nameWithType: SoCredentialsIdentityResolver.ResolveIdentity
  fullName: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.ResolveIdentity
- uid: System.Collections.Generic.IList{System.IdentityModel.Tokens.SecurityToken}
  commentId: T:System.Collections.Generic.IList{System.IdentityModel.Tokens.SecurityToken}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<SecurityToken>
  nameWithType: IList<SecurityToken>
  fullName: System.Collections.Generic.IList<System.IdentityModel.Tokens.SecurityToken>
  nameWithType.vb: IList(Of SecurityToken)
  fullName.vb: System.Collections.Generic.IList(Of System.IdentityModel.Tokens.SecurityToken)
  name.vb: IList(Of SecurityToken)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: System.IdentityModel.Tokens.SecurityToken
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IdentityModel.Tokens.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: System.IdentityModel.Tokens.SecurityToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SoConnection
  commentId: T:SuperOffice.Data.SoConnection
  parent: SuperOffice.Data
  isExternal: true
  name: SoConnection
  nameWithType: SoConnection
  fullName: SuperOffice.Data.SoConnection
- uid: SuperOffice.Security.Principal.ISoIdentity
  commentId: T:SuperOffice.Security.Principal.ISoIdentity
  parent: SuperOffice.Security.Principal
  isExternal: true
  name: ISoIdentity
  nameWithType: ISoIdentity
  fullName: SuperOffice.Security.Principal.ISoIdentity
- uid: SuperOffice.Security.Principal.AssociateResolver`1.ResolveIdentity(System.Collections.Generic.IList{System.IdentityModel.Tokens.SecurityToken},SuperOffice.Data.SoConnection)
  commentId: M:SuperOffice.Security.Principal.AssociateResolver`1.ResolveIdentity(System.Collections.Generic.IList{System.IdentityModel.Tokens.SecurityToken},SuperOffice.Data.SoConnection)
  isExternal: true
  name: ResolveIdentity(IList<SecurityToken>, SoConnection)
  nameWithType: AssociateResolver<TToken>.ResolveIdentity(IList<SecurityToken>, SoConnection)
  fullName: SuperOffice.Security.Principal.AssociateResolver<TToken>.ResolveIdentity(System.Collections.Generic.IList<System.IdentityModel.Tokens.SecurityToken>, SuperOffice.Data.SoConnection)
  nameWithType.vb: AssociateResolver(Of TToken).ResolveIdentity(IList(Of SecurityToken), SoConnection)
  fullName.vb: SuperOffice.Security.Principal.AssociateResolver(Of TToken).ResolveIdentity(System.Collections.Generic.IList(Of System.IdentityModel.Tokens.SecurityToken), SuperOffice.Data.SoConnection)
  name.vb: ResolveIdentity(IList(Of SecurityToken), SoConnection)
  spec.csharp:
  - uid: SuperOffice.Security.Principal.AssociateResolver`1.ResolveIdentity(System.Collections.Generic.IList{System.IdentityModel.Tokens.SecurityToken},SuperOffice.Data.SoConnection)
    name: ResolveIdentity
    nameWithType: AssociateResolver<TToken>.ResolveIdentity
    fullName: SuperOffice.Security.Principal.AssociateResolver<TToken>.ResolveIdentity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: System.IdentityModel.Tokens.SecurityToken
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoConnection
    name: SoConnection
    nameWithType: SoConnection
    fullName: SuperOffice.Data.SoConnection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Security.Principal.AssociateResolver`1.ResolveIdentity(System.Collections.Generic.IList{System.IdentityModel.Tokens.SecurityToken},SuperOffice.Data.SoConnection)
    name: ResolveIdentity
    nameWithType: AssociateResolver(Of TToken).ResolveIdentity
    fullName: SuperOffice.Security.Principal.AssociateResolver(Of TToken).ResolveIdentity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IdentityModel.Tokens.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: System.IdentityModel.Tokens.SecurityToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoConnection
    name: SoConnection
    nameWithType: SoConnection
    fullName: SuperOffice.Data.SoConnection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.#ctor*
  commentId: Overload:SuperOffice.Security.Principal.SoCredentialsIdentityResolver.#ctor
  isExternal: true
  name: SoCredentialsIdentityResolver
  nameWithType: SoCredentialsIdentityResolver.SoCredentialsIdentityResolver
  fullName: SuperOffice.Security.Principal.SoCredentialsIdentityResolver.SoCredentialsIdentityResolver
