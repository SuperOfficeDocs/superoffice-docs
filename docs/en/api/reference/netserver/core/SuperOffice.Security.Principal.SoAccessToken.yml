### YamlMime:ManagedReference
items:
- uid: SuperOffice.Security.Principal.SoAccessToken
  commentId: T:SuperOffice.Security.Principal.SoAccessToken
  id: SoAccessToken
  parent: SuperOffice.Security.Principal
  children:
  - SuperOffice.Security.Principal.SoAccessToken.#ctor
  - SuperOffice.Security.Principal.SoAccessToken.AccessTokenPrefix
  - SuperOffice.Security.Principal.SoAccessToken.ApplicationToken
  - SuperOffice.Security.Principal.SoAccessToken.AssociateId
  - SuperOffice.Security.Principal.SoAccessToken.ClaimType
  - SuperOffice.Security.Principal.SoAccessToken.ContextIdentifier
  - SuperOffice.Security.Principal.SoAccessToken.CreateDefault(System.String,System.UInt32)
  - SuperOffice.Security.Principal.SoAccessToken.CreateNonce
  - SuperOffice.Security.Principal.SoAccessToken.GetUntrustedContextIdentifier(System.String)
  - SuperOffice.Security.Principal.SoAccessToken.IsAccessTokenPrefix(System.String)
  - SuperOffice.Security.Principal.SoAccessToken.LoginId
  - SuperOffice.Security.Principal.SoAccessToken.Nonce
  - SuperOffice.Security.Principal.SoAccessToken.SessionKey
  - SuperOffice.Security.Principal.SoAccessToken.TryParse(System.String,System.String@,System.String@)
  - SuperOffice.Security.Principal.SoAccessToken.UserId
  - SuperOffice.Security.Principal.SoAccessToken.ValidFrom
  - SuperOffice.Security.Principal.SoAccessToken.ValidTo
  langs:
  - csharp
  - vb
  name: SoAccessToken
  nameWithType: SoAccessToken
  fullName: SuperOffice.Security.Principal.SoAccessToken
  type: Class
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: >-
    Class representing Access Tokens which are an alternative to Tickets. The access tokens are valid for a shorter time-period than tickets.

    AccessTokens restrict access to the installation by multiple criterias. The access is restricted to the permissions of the partner application and the associate. 

    Compared to SoCredentials, the access tokens are more short-lived (1 hour).
  example: []
  syntax:
    content: public sealed class SoAccessToken
    content.vb: Public NotInheritable Class SoAccessToken
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  extensionMethods:
  - SuperOffice.Security.Principal.SoAccessToken.EnumUtil.MapEnums``2
  - SuperOffice.Security.Principal.SoAccessToken.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  - SuperOffice.Security.Principal.SoAccessToken.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Security.Principal.SoAccessToken)
  - SuperOffice.Security.Principal.SoAccessToken.SuperOffice.Util.ObjectExtensions.GraphCopy``1
- uid: SuperOffice.Security.Principal.SoAccessToken.AccessTokenPrefix
  commentId: F:SuperOffice.Security.Principal.SoAccessToken.AccessTokenPrefix
  id: AccessTokenPrefix
  parent: SuperOffice.Security.Principal.SoAccessToken
  langs:
  - csharp
  - vb
  name: AccessTokenPrefix
  nameWithType: SoAccessToken.AccessTokenPrefix
  fullName: SuperOffice.Security.Principal.SoAccessToken.AccessTokenPrefix
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  syntax:
    content: public const string AccessTokenPrefix = "8A:"
    return:
      type: System.String
    content.vb: Public Const AccessTokenPrefix As String = "8A:"
- uid: SuperOffice.Security.Principal.SoAccessToken.ClaimType
  commentId: F:SuperOffice.Security.Principal.SoAccessToken.ClaimType
  id: ClaimType
  parent: SuperOffice.Security.Principal.SoAccessToken
  langs:
  - csharp
  - vb
  name: ClaimType
  nameWithType: SoAccessToken.ClaimType
  fullName: SuperOffice.Security.Principal.SoAccessToken.ClaimType
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  syntax:
    content: public const string ClaimType = "http://schemes.superoffice.net/identity/8t_access_token"
    return:
      type: System.String
    content.vb: Public Const ClaimType As String = "http://schemes.superoffice.net/identity/8t_access_token"
- uid: SuperOffice.Security.Principal.SoAccessToken.CreateDefault(System.String,System.UInt32)
  commentId: M:SuperOffice.Security.Principal.SoAccessToken.CreateDefault(System.String,System.UInt32)
  id: CreateDefault(System.String,System.UInt32)
  parent: SuperOffice.Security.Principal.SoAccessToken
  langs:
  - csharp
  - vb
  name: CreateDefault(string, uint)
  nameWithType: SoAccessToken.CreateDefault(string, uint)
  fullName: SuperOffice.Security.Principal.SoAccessToken.CreateDefault(string, uint)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  syntax:
    content: public static SoAccessToken CreateDefault(string applicationToken, uint expiresIn)
    parameters:
    - id: applicationToken
      type: System.String
    - id: expiresIn
      type: System.UInt32
    return:
      type: SuperOffice.Security.Principal.SoAccessToken
    content.vb: Public Shared Function CreateDefault(applicationToken As String, expiresIn As UInteger) As SoAccessToken
  overload: SuperOffice.Security.Principal.SoAccessToken.CreateDefault*
  nameWithType.vb: SoAccessToken.CreateDefault(String, UInteger)
  fullName.vb: SuperOffice.Security.Principal.SoAccessToken.CreateDefault(String, UInteger)
  name.vb: CreateDefault(String, UInteger)
- uid: SuperOffice.Security.Principal.SoAccessToken.CreateNonce
  commentId: M:SuperOffice.Security.Principal.SoAccessToken.CreateNonce
  id: CreateNonce
  parent: SuperOffice.Security.Principal.SoAccessToken
  langs:
  - csharp
  - vb
  name: CreateNonce()
  nameWithType: SoAccessToken.CreateNonce()
  fullName: SuperOffice.Security.Principal.SoAccessToken.CreateNonce()
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  syntax:
    content: public static string CreateNonce()
    return:
      type: System.String
    content.vb: Public Shared Function CreateNonce() As String
  overload: SuperOffice.Security.Principal.SoAccessToken.CreateNonce*
- uid: SuperOffice.Security.Principal.SoAccessToken.TryParse(System.String,System.String@,System.String@)
  commentId: M:SuperOffice.Security.Principal.SoAccessToken.TryParse(System.String,System.String@,System.String@)
  id: TryParse(System.String,System.String@,System.String@)
  parent: SuperOffice.Security.Principal.SoAccessToken
  langs:
  - csharp
  - vb
  name: TryParse(string, out string, out string)
  nameWithType: SoAccessToken.TryParse(string, out string, out string)
  fullName: SuperOffice.Security.Principal.SoAccessToken.TryParse(string, out string, out string)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: Try parse the encrypted version of the access token into the contextIdentifier and the encrypted data.
  example: []
  syntax:
    content: public static bool TryParse(string accessToken, out string contextIdentifier, out string tokenData)
    parameters:
    - id: accessToken
      type: System.String
      description: The encrypted and encoded version of the access token.
    - id: contextIdentifier
      type: System.String
      description: The contextIdentifier found in the access token
    - id: tokenData
      type: System.String
      description: The encrypted oayload in the token.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function TryParse(accessToken As String, contextIdentifier As String, tokenData As String) As Boolean
  overload: SuperOffice.Security.Principal.SoAccessToken.TryParse*
  nameWithType.vb: SoAccessToken.TryParse(String, String, String)
  fullName.vb: SuperOffice.Security.Principal.SoAccessToken.TryParse(String, String, String)
  name.vb: TryParse(String, String, String)
- uid: SuperOffice.Security.Principal.SoAccessToken.GetUntrustedContextIdentifier(System.String)
  commentId: M:SuperOffice.Security.Principal.SoAccessToken.GetUntrustedContextIdentifier(System.String)
  id: GetUntrustedContextIdentifier(System.String)
  parent: SuperOffice.Security.Principal.SoAccessToken
  langs:
  - csharp
  - vb
  name: GetUntrustedContextIdentifier(string)
  nameWithType: SoAccessToken.GetUntrustedContextIdentifier(string)
  fullName: SuperOffice.Security.Principal.SoAccessToken.GetUntrustedContextIdentifier(string)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: Get the untrusted contextIdentifier. The value of the contextIdentifier can be changed without detection.
  example: []
  syntax:
    content: public static string GetUntrustedContextIdentifier(string accessToken)
    parameters:
    - id: accessToken
      type: System.String
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function GetUntrustedContextIdentifier(accessToken As String) As String
  overload: SuperOffice.Security.Principal.SoAccessToken.GetUntrustedContextIdentifier*
  nameWithType.vb: SoAccessToken.GetUntrustedContextIdentifier(String)
  fullName.vb: SuperOffice.Security.Principal.SoAccessToken.GetUntrustedContextIdentifier(String)
  name.vb: GetUntrustedContextIdentifier(String)
- uid: SuperOffice.Security.Principal.SoAccessToken.IsAccessTokenPrefix(System.String)
  commentId: M:SuperOffice.Security.Principal.SoAccessToken.IsAccessTokenPrefix(System.String)
  id: IsAccessTokenPrefix(System.String)
  parent: SuperOffice.Security.Principal.SoAccessToken
  langs:
  - csharp
  - vb
  name: IsAccessTokenPrefix(string)
  nameWithType: SoAccessToken.IsAccessTokenPrefix(string)
  fullName: SuperOffice.Security.Principal.SoAccessToken.IsAccessTokenPrefix(string)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: Check if a user name is an access token. See if it starts with the <xref href="SuperOffice.Security.Principal.SoAccessToken.AccessTokenPrefix" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool IsAccessTokenPrefix(string userName)
    parameters:
    - id: userName
      type: System.String
      description: 8A:base64-encoded-encrypted-signed-value
    return:
      type: System.Boolean
      description: True if the user name is an access token
    content.vb: Public Shared Function IsAccessTokenPrefix(userName As String) As Boolean
  overload: SuperOffice.Security.Principal.SoAccessToken.IsAccessTokenPrefix*
  nameWithType.vb: SoAccessToken.IsAccessTokenPrefix(String)
  fullName.vb: SuperOffice.Security.Principal.SoAccessToken.IsAccessTokenPrefix(String)
  name.vb: IsAccessTokenPrefix(String)
- uid: SuperOffice.Security.Principal.SoAccessToken.#ctor
  commentId: M:SuperOffice.Security.Principal.SoAccessToken.#ctor
  id: '#ctor'
  parent: SuperOffice.Security.Principal.SoAccessToken
  langs:
  - csharp
  - vb
  name: SoAccessToken()
  nameWithType: SoAccessToken.SoAccessToken()
  fullName: SuperOffice.Security.Principal.SoAccessToken.SoAccessToken()
  type: Constructor
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  syntax:
    content: public SoAccessToken()
    content.vb: Public Sub New()
  overload: SuperOffice.Security.Principal.SoAccessToken.#ctor*
  nameWithType.vb: SoAccessToken.New()
  fullName.vb: SuperOffice.Security.Principal.SoAccessToken.New()
  name.vb: New()
- uid: SuperOffice.Security.Principal.SoAccessToken.ApplicationToken
  commentId: P:SuperOffice.Security.Principal.SoAccessToken.ApplicationToken
  id: ApplicationToken
  parent: SuperOffice.Security.Principal.SoAccessToken
  langs:
  - csharp
  - vb
  name: ApplicationToken
  nameWithType: SoAccessToken.ApplicationToken
  fullName: SuperOffice.Security.Principal.SoAccessToken.ApplicationToken
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: Application Token identifiying the partner application.
  example: []
  syntax:
    content: public string ApplicationToken { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ApplicationToken As String
  overload: SuperOffice.Security.Principal.SoAccessToken.ApplicationToken*
- uid: SuperOffice.Security.Principal.SoAccessToken.ValidFrom
  commentId: P:SuperOffice.Security.Principal.SoAccessToken.ValidFrom
  id: ValidFrom
  parent: SuperOffice.Security.Principal.SoAccessToken
  langs:
  - csharp
  - vb
  name: ValidFrom
  nameWithType: SoAccessToken.ValidFrom
  fullName: SuperOffice.Security.Principal.SoAccessToken.ValidFrom
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: ValidFrom and ValidTo restrict the period when the access token is valid.
  example: []
  syntax:
    content: public DateTime ValidFrom { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property ValidFrom As Date
  overload: SuperOffice.Security.Principal.SoAccessToken.ValidFrom*
- uid: SuperOffice.Security.Principal.SoAccessToken.ValidTo
  commentId: P:SuperOffice.Security.Principal.SoAccessToken.ValidTo
  id: ValidTo
  parent: SuperOffice.Security.Principal.SoAccessToken
  langs:
  - csharp
  - vb
  name: ValidTo
  nameWithType: SoAccessToken.ValidTo
  fullName: SuperOffice.Security.Principal.SoAccessToken.ValidTo
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: ValidFrom and ValidTo restrict the period when the access token is valid.
  example: []
  syntax:
    content: public DateTime ValidTo { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property ValidTo As Date
  overload: SuperOffice.Security.Principal.SoAccessToken.ValidTo*
- uid: SuperOffice.Security.Principal.SoAccessToken.AssociateId
  commentId: P:SuperOffice.Security.Principal.SoAccessToken.AssociateId
  id: AssociateId
  parent: SuperOffice.Security.Principal.SoAccessToken
  langs:
  - csharp
  - vb
  name: AssociateId
  nameWithType: SoAccessToken.AssociateId
  fullName: SuperOffice.Security.Principal.SoAccessToken.AssociateId
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: The identifier of the associate used when creating the access token.
  example: []
  syntax:
    content: public int AssociateId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property AssociateId As Integer
  overload: SuperOffice.Security.Principal.SoAccessToken.AssociateId*
- uid: SuperOffice.Security.Principal.SoAccessToken.ContextIdentifier
  commentId: P:SuperOffice.Security.Principal.SoAccessToken.ContextIdentifier
  id: ContextIdentifier
  parent: SuperOffice.Security.Principal.SoAccessToken
  langs:
  - csharp
  - vb
  name: ContextIdentifier
  nameWithType: SoAccessToken.ContextIdentifier
  fullName: SuperOffice.Security.Principal.SoAccessToken.ContextIdentifier
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: The contextIdentifier in the access token.
  example: []
  syntax:
    content: public string ContextIdentifier { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ContextIdentifier As String
  overload: SuperOffice.Security.Principal.SoAccessToken.ContextIdentifier*
- uid: SuperOffice.Security.Principal.SoAccessToken.Nonce
  commentId: P:SuperOffice.Security.Principal.SoAccessToken.Nonce
  id: Nonce
  parent: SuperOffice.Security.Principal.SoAccessToken
  langs:
  - csharp
  - vb
  name: Nonce
  nameWithType: SoAccessToken.Nonce
  fullName: SuperOffice.Security.Principal.SoAccessToken.Nonce
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  example: []
  syntax:
    content: public string Nonce { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Nonce As String
  overload: SuperOffice.Security.Principal.SoAccessToken.Nonce*
- uid: SuperOffice.Security.Principal.SoAccessToken.LoginId
  commentId: P:SuperOffice.Security.Principal.SoAccessToken.LoginId
  id: LoginId
  parent: SuperOffice.Security.Principal.SoAccessToken
  langs:
  - csharp
  - vb
  name: LoginId
  nameWithType: SoAccessToken.LoginId
  fullName: SuperOffice.Security.Principal.SoAccessToken.LoginId
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  syntax:
    content: public int LoginId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property LoginId As Integer
  overload: SuperOffice.Security.Principal.SoAccessToken.LoginId*
- uid: SuperOffice.Security.Principal.SoAccessToken.SessionKey
  commentId: P:SuperOffice.Security.Principal.SoAccessToken.SessionKey
  id: SessionKey
  parent: SuperOffice.Security.Principal.SoAccessToken
  langs:
  - csharp
  - vb
  name: SessionKey
  nameWithType: SoAccessToken.SessionKey
  fullName: SuperOffice.Security.Principal.SoAccessToken.SessionKey
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  syntax:
    content: public string SessionKey { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SessionKey As String
  overload: SuperOffice.Security.Principal.SoAccessToken.SessionKey*
- uid: SuperOffice.Security.Principal.SoAccessToken.UserId
  commentId: P:SuperOffice.Security.Principal.SoAccessToken.UserId
  id: UserId
  parent: SuperOffice.Security.Principal.SoAccessToken
  langs:
  - csharp
  - vb
  name: UserId
  nameWithType: SoAccessToken.UserId
  fullName: SuperOffice.Security.Principal.SoAccessToken.UserId
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  syntax:
    content: public int UserId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property UserId As Integer
  overload: SuperOffice.Security.Principal.SoAccessToken.UserId*
references:
- uid: SuperOffice.Security.Principal
  commentId: N:SuperOffice.Security.Principal
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Security.Principal
  nameWithType: SuperOffice.Security.Principal
  fullName: SuperOffice.Security.Principal
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Security
    name: Security
    isExternal: true
    href: SuperOffice.Security.html
  - name: .
  - uid: SuperOffice.Security.Principal
    name: Principal
    isExternal: true
    href: SuperOffice.Security.Principal.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Security
    name: Security
    isExternal: true
    href: SuperOffice.Security.html
  - name: .
  - uid: SuperOffice.Security.Principal
    name: Principal
    isExternal: true
    href: SuperOffice.Security.Principal.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: SuperOffice.Security.Principal.SoAccessToken.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<SoAccessToken, To>(SoAccessToken)
  nameWithType: EnumUtil.MapEnums<SoAccessToken, To>(SoAccessToken)
  fullName: EnumUtil.MapEnums<SuperOffice.Security.Principal.SoAccessToken, To>(SuperOffice.Security.Principal.SoAccessToken)
  nameWithType.vb: EnumUtil.MapEnums(Of SoAccessToken, To)(SoAccessToken)
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Security.Principal.SoAccessToken, To)(SuperOffice.Security.Principal.SoAccessToken)
  name.vb: MapEnums(Of SoAccessToken, To)(SoAccessToken)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(SuperOffice.Security.Principal.SoAccessToken)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.Security.Principal.SoAccessToken
    name: SoAccessToken
    isExternal: true
    href: SuperOffice.Security.Principal.SoAccessToken.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.Security.Principal.SoAccessToken
    name: SoAccessToken
    isExternal: true
    href: SuperOffice.Security.Principal.SoAccessToken.html
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(SuperOffice.Security.Principal.SoAccessToken)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Security.Principal.SoAccessToken
    name: SoAccessToken
    isExternal: true
    href: SuperOffice.Security.Principal.SoAccessToken.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.Security.Principal.SoAccessToken
    name: SoAccessToken
    isExternal: true
    href: SuperOffice.Security.Principal.SoAccessToken.html
  - name: )
- uid: SuperOffice.Security.Principal.SoAccessToken.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<SoAccessToken, To>(SoAccessToken)
  nameWithType: Converters.MapEnums<SoAccessToken, To>(SoAccessToken)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Security.Principal.SoAccessToken, To>(SuperOffice.Security.Principal.SoAccessToken)
  nameWithType.vb: Converters.MapEnums(Of SoAccessToken, To)(SoAccessToken)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Security.Principal.SoAccessToken, To)(SuperOffice.Security.Principal.SoAccessToken)
  name.vb: MapEnums(Of SoAccessToken, To)(SoAccessToken)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.Security.Principal.SoAccessToken)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.Security.Principal.SoAccessToken
    name: SoAccessToken
    isExternal: true
    href: SuperOffice.Security.Principal.SoAccessToken.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.Security.Principal.SoAccessToken
    name: SoAccessToken
    isExternal: true
    href: SuperOffice.Security.Principal.SoAccessToken.html
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.Security.Principal.SoAccessToken)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Security.Principal.SoAccessToken
    name: SoAccessToken
    isExternal: true
    href: SuperOffice.Security.Principal.SoAccessToken.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.Security.Principal.SoAccessToken
    name: SoAccessToken
    isExternal: true
    href: SuperOffice.Security.Principal.SoAccessToken.html
  - name: )
- uid: SuperOffice.Security.Principal.SoAccessToken.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Security.Principal.SoAccessToken)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  name: AssignByReflection<SoAccessToken>(SoAccessToken, SoAccessToken)
  nameWithType: ObjectExtensions.AssignByReflection<SoAccessToken>(SoAccessToken, SoAccessToken)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Security.Principal.SoAccessToken>(SuperOffice.Security.Principal.SoAccessToken, SuperOffice.Security.Principal.SoAccessToken)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of SoAccessToken)(SoAccessToken, SoAccessToken)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Security.Principal.SoAccessToken)(SuperOffice.Security.Principal.SoAccessToken, SuperOffice.Security.Principal.SoAccessToken)
  name.vb: AssignByReflection(Of SoAccessToken)(SoAccessToken, SoAccessToken)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Security.Principal.SoAccessToken,SuperOffice.Security.Principal.SoAccessToken)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: <
  - uid: SuperOffice.Security.Principal.SoAccessToken
    name: SoAccessToken
    isExternal: true
    href: SuperOffice.Security.Principal.SoAccessToken.html
  - name: '>'
  - name: (
  - uid: SuperOffice.Security.Principal.SoAccessToken
    name: SoAccessToken
    isExternal: true
    href: SuperOffice.Security.Principal.SoAccessToken.html
  - name: ','
  - name: " "
  - uid: SuperOffice.Security.Principal.SoAccessToken
    name: SoAccessToken
    isExternal: true
    href: SuperOffice.Security.Principal.SoAccessToken.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Security.Principal.SoAccessToken,SuperOffice.Security.Principal.SoAccessToken)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Security.Principal.SoAccessToken
    name: SoAccessToken
    isExternal: true
    href: SuperOffice.Security.Principal.SoAccessToken.html
  - name: )
  - name: (
  - uid: SuperOffice.Security.Principal.SoAccessToken
    name: SoAccessToken
    isExternal: true
    href: SuperOffice.Security.Principal.SoAccessToken.html
  - name: ','
  - name: " "
  - uid: SuperOffice.Security.Principal.SoAccessToken
    name: SoAccessToken
    isExternal: true
    href: SuperOffice.Security.Principal.SoAccessToken.html
  - name: )
- uid: SuperOffice.Security.Principal.SoAccessToken.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  name: GraphCopy<SoAccessToken>(SoAccessToken)
  nameWithType: ObjectExtensions.GraphCopy<SoAccessToken>(SoAccessToken)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Security.Principal.SoAccessToken>(SuperOffice.Security.Principal.SoAccessToken)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of SoAccessToken)(SoAccessToken)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Security.Principal.SoAccessToken)(SuperOffice.Security.Principal.SoAccessToken)
  name.vb: GraphCopy(Of SoAccessToken)(SoAccessToken)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(SuperOffice.Security.Principal.SoAccessToken)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: <
  - uid: SuperOffice.Security.Principal.SoAccessToken
    name: SoAccessToken
    isExternal: true
    href: SuperOffice.Security.Principal.SoAccessToken.html
  - name: '>'
  - name: (
  - uid: SuperOffice.Security.Principal.SoAccessToken
    name: SoAccessToken
    isExternal: true
    href: SuperOffice.Security.Principal.SoAccessToken.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(SuperOffice.Security.Principal.SoAccessToken)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Security.Principal.SoAccessToken
    name: SoAccessToken
    isExternal: true
    href: SuperOffice.Security.Principal.SoAccessToken.html
  - name: )
  - name: (
  - uid: SuperOffice.Security.Principal.SoAccessToken
    name: SoAccessToken
    isExternal: true
    href: SuperOffice.Security.Principal.SoAccessToken.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  href: EnumUtil.html
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  href: SuperOffice.Util.ObjectExtensions.html
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Util
    name: Util
    isExternal: true
    href: SuperOffice.Util.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Util
    name: Util
    isExternal: true
    href: SuperOffice.Util.html
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SuperOffice.Security.Principal.SoAccessToken.CreateDefault*
  commentId: Overload:SuperOffice.Security.Principal.SoAccessToken.CreateDefault
  isExternal: true
  href: SuperOffice.Security.Principal.SoAccessToken.html#SuperOffice_Security_Principal_SoAccessToken_CreateDefault_System_String_System_UInt32_
  name: CreateDefault
  nameWithType: SoAccessToken.CreateDefault
  fullName: SuperOffice.Security.Principal.SoAccessToken.CreateDefault
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: SuperOffice.Security.Principal.SoAccessToken
  commentId: T:SuperOffice.Security.Principal.SoAccessToken
  parent: SuperOffice.Security.Principal
  isExternal: true
  href: SuperOffice.Security.Principal.SoAccessToken.html
  name: SoAccessToken
  nameWithType: SoAccessToken
  fullName: SuperOffice.Security.Principal.SoAccessToken
- uid: SuperOffice.Security.Principal.SoAccessToken.CreateNonce*
  commentId: Overload:SuperOffice.Security.Principal.SoAccessToken.CreateNonce
  isExternal: true
  href: SuperOffice.Security.Principal.SoAccessToken.html#SuperOffice_Security_Principal_SoAccessToken_CreateNonce
  name: CreateNonce
  nameWithType: SoAccessToken.CreateNonce
  fullName: SuperOffice.Security.Principal.SoAccessToken.CreateNonce
- uid: SuperOffice.Security.Principal.SoAccessToken.TryParse*
  commentId: Overload:SuperOffice.Security.Principal.SoAccessToken.TryParse
  isExternal: true
  href: SuperOffice.Security.Principal.SoAccessToken.html#SuperOffice_Security_Principal_SoAccessToken_TryParse_System_String_System_String__System_String__
  name: TryParse
  nameWithType: SoAccessToken.TryParse
  fullName: SuperOffice.Security.Principal.SoAccessToken.TryParse
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SuperOffice.Security.Principal.SoAccessToken.GetUntrustedContextIdentifier*
  commentId: Overload:SuperOffice.Security.Principal.SoAccessToken.GetUntrustedContextIdentifier
  isExternal: true
  href: SuperOffice.Security.Principal.SoAccessToken.html#SuperOffice_Security_Principal_SoAccessToken_GetUntrustedContextIdentifier_System_String_
  name: GetUntrustedContextIdentifier
  nameWithType: SoAccessToken.GetUntrustedContextIdentifier
  fullName: SuperOffice.Security.Principal.SoAccessToken.GetUntrustedContextIdentifier
- uid: SuperOffice.Security.Principal.SoAccessToken.AccessTokenPrefix
  commentId: F:SuperOffice.Security.Principal.SoAccessToken.AccessTokenPrefix
  isExternal: true
  href: SuperOffice.Security.Principal.SoAccessToken.html#SuperOffice_Security_Principal_SoAccessToken_AccessTokenPrefix
  name: AccessTokenPrefix
  nameWithType: SoAccessToken.AccessTokenPrefix
  fullName: SuperOffice.Security.Principal.SoAccessToken.AccessTokenPrefix
- uid: SuperOffice.Security.Principal.SoAccessToken.IsAccessTokenPrefix*
  commentId: Overload:SuperOffice.Security.Principal.SoAccessToken.IsAccessTokenPrefix
  isExternal: true
  href: SuperOffice.Security.Principal.SoAccessToken.html#SuperOffice_Security_Principal_SoAccessToken_IsAccessTokenPrefix_System_String_
  name: IsAccessTokenPrefix
  nameWithType: SoAccessToken.IsAccessTokenPrefix
  fullName: SuperOffice.Security.Principal.SoAccessToken.IsAccessTokenPrefix
- uid: SuperOffice.Security.Principal.SoAccessToken.#ctor*
  commentId: Overload:SuperOffice.Security.Principal.SoAccessToken.#ctor
  isExternal: true
  href: SuperOffice.Security.Principal.SoAccessToken.html#SuperOffice_Security_Principal_SoAccessToken__ctor
  name: SoAccessToken
  nameWithType: SoAccessToken.SoAccessToken
  fullName: SuperOffice.Security.Principal.SoAccessToken.SoAccessToken
  nameWithType.vb: SoAccessToken.New
  fullName.vb: SuperOffice.Security.Principal.SoAccessToken.New
  name.vb: New
- uid: SuperOffice.Security.Principal.SoAccessToken.ApplicationToken*
  commentId: Overload:SuperOffice.Security.Principal.SoAccessToken.ApplicationToken
  isExternal: true
  href: SuperOffice.Security.Principal.SoAccessToken.html#SuperOffice_Security_Principal_SoAccessToken_ApplicationToken
  name: ApplicationToken
  nameWithType: SoAccessToken.ApplicationToken
  fullName: SuperOffice.Security.Principal.SoAccessToken.ApplicationToken
- uid: SuperOffice.Security.Principal.SoAccessToken.ValidFrom*
  commentId: Overload:SuperOffice.Security.Principal.SoAccessToken.ValidFrom
  isExternal: true
  href: SuperOffice.Security.Principal.SoAccessToken.html#SuperOffice_Security_Principal_SoAccessToken_ValidFrom
  name: ValidFrom
  nameWithType: SoAccessToken.ValidFrom
  fullName: SuperOffice.Security.Principal.SoAccessToken.ValidFrom
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: SuperOffice.Security.Principal.SoAccessToken.ValidTo*
  commentId: Overload:SuperOffice.Security.Principal.SoAccessToken.ValidTo
  isExternal: true
  href: SuperOffice.Security.Principal.SoAccessToken.html#SuperOffice_Security_Principal_SoAccessToken_ValidTo
  name: ValidTo
  nameWithType: SoAccessToken.ValidTo
  fullName: SuperOffice.Security.Principal.SoAccessToken.ValidTo
- uid: SuperOffice.Security.Principal.SoAccessToken.AssociateId*
  commentId: Overload:SuperOffice.Security.Principal.SoAccessToken.AssociateId
  isExternal: true
  href: SuperOffice.Security.Principal.SoAccessToken.html#SuperOffice_Security_Principal_SoAccessToken_AssociateId
  name: AssociateId
  nameWithType: SoAccessToken.AssociateId
  fullName: SuperOffice.Security.Principal.SoAccessToken.AssociateId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: SuperOffice.Security.Principal.SoAccessToken.ContextIdentifier*
  commentId: Overload:SuperOffice.Security.Principal.SoAccessToken.ContextIdentifier
  isExternal: true
  href: SuperOffice.Security.Principal.SoAccessToken.html#SuperOffice_Security_Principal_SoAccessToken_ContextIdentifier
  name: ContextIdentifier
  nameWithType: SoAccessToken.ContextIdentifier
  fullName: SuperOffice.Security.Principal.SoAccessToken.ContextIdentifier
- uid: SuperOffice.Security.Principal.SoAccessToken.Nonce*
  commentId: Overload:SuperOffice.Security.Principal.SoAccessToken.Nonce
  isExternal: true
  href: SuperOffice.Security.Principal.SoAccessToken.html#SuperOffice_Security_Principal_SoAccessToken_Nonce
  name: Nonce
  nameWithType: SoAccessToken.Nonce
  fullName: SuperOffice.Security.Principal.SoAccessToken.Nonce
- uid: SuperOffice.Security.Principal.SoAccessToken.LoginId*
  commentId: Overload:SuperOffice.Security.Principal.SoAccessToken.LoginId
  isExternal: true
  href: SuperOffice.Security.Principal.SoAccessToken.html#SuperOffice_Security_Principal_SoAccessToken_LoginId
  name: LoginId
  nameWithType: SoAccessToken.LoginId
  fullName: SuperOffice.Security.Principal.SoAccessToken.LoginId
- uid: SuperOffice.Security.Principal.SoAccessToken.SessionKey*
  commentId: Overload:SuperOffice.Security.Principal.SoAccessToken.SessionKey
  isExternal: true
  href: SuperOffice.Security.Principal.SoAccessToken.html#SuperOffice_Security_Principal_SoAccessToken_SessionKey
  name: SessionKey
  nameWithType: SoAccessToken.SessionKey
  fullName: SuperOffice.Security.Principal.SoAccessToken.SessionKey
- uid: SuperOffice.Security.Principal.SoAccessToken.UserId*
  commentId: Overload:SuperOffice.Security.Principal.SoAccessToken.UserId
  isExternal: true
  href: SuperOffice.Security.Principal.SoAccessToken.html#SuperOffice_Security_Principal_SoAccessToken_UserId
  name: UserId
  nameWithType: SoAccessToken.UserId
  fullName: SuperOffice.Security.Principal.SoAccessToken.UserId
