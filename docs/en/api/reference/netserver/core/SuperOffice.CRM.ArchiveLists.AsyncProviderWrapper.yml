### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper
  commentId: T:SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper
  id: AsyncProviderWrapper
  parent: SuperOffice.CRM.ArchiveLists
  children:
  - SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.#ctor(SuperOffice.CRM.ArchiveLists.IArchiveProvider)
  - SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.Close
  - SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.GetAvailableColumns
  - SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.GetAvailableEntities
  - SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.GetReader(System.String)
  - SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.GetResultInformation
  - SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.GetRows(System.String)
  - SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.SetDesiredColumns(System.String[])
  - SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.SetDesiredEntities(System.String[])
  - SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.SetOrderBy(SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[])
  - SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.SetPagingInfo(System.Int32,System.Int32)
  - SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.SetRestriction(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  langs:
  - csharp
  - vb
  name: AsyncProviderWrapper
  nameWithType: AsyncProviderWrapper
  fullName: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nWrapper class to run Archive Providers asynchronously; read remarks on <xref href=\"SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.GetRows(System.String)\" data-throw-if-not-resolved=\"false\"></xref> for special processing information\n"
  remarks: "\nClients that perform heavy (GUI?) processing on archive rows may consider using this wrapper (constructed\nby the <xref href=\"SuperOffice.CRM.ArchiveLists.ArchiveProviderFactory.CreateAsyncWrapped(System.String%2cSystem.String)\" data-throw-if-not-resolved=\"false\"></xref> factory method). By doing so,\nthe actual calls to GetRows - which can be time-consuming, especially the first one - will be run in an\nasynchronous manner\n"
  syntax:
    content: 'public class AsyncProviderWrapper : IArchiveProvider, IArchiveProviderHasRows, IArchiveProviderHasColumns, IArchiveProviderHasEntities, IPlugin'
    content.vb: >-
      Public Class AsyncProviderWrapper
          Implements IArchiveProvider, IArchiveProviderHasRows, IArchiveProviderHasColumns, IArchiveProviderHasEntities, IPlugin
  inheritance:
  - System.Object
  implements:
  - SuperOffice.CRM.ArchiveLists.IArchiveProvider
  - SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows
  - SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns
  - SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.EnumUtil.MapEnums``2
  - SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.#ctor(SuperOffice.CRM.ArchiveLists.IArchiveProvider)
  commentId: M:SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.#ctor(SuperOffice.CRM.ArchiveLists.IArchiveProvider)
  id: '#ctor(SuperOffice.CRM.ArchiveLists.IArchiveProvider)'
  parent: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper
  langs:
  - csharp
  - vb
  name: AsyncProviderWrapper(IArchiveProvider)
  nameWithType: AsyncProviderWrapper.AsyncProviderWrapper(IArchiveProvider)
  fullName: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.AsyncProviderWrapper(SuperOffice.CRM.ArchiveLists.IArchiveProvider)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public AsyncProviderWrapper(IArchiveProvider innerProvider)
    parameters:
    - id: innerProvider
      type: SuperOffice.CRM.ArchiveLists.IArchiveProvider
    content.vb: Public Sub New(innerProvider As IArchiveProvider)
  overload: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.GetReader(System.String)
  commentId: M:SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.GetReader(System.String)
  id: GetReader(System.String)
  parent: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper
  langs:
  - csharp
  - vb
  name: GetReader(String)
  nameWithType: AsyncProviderWrapper.GetReader(String)
  fullName: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.GetReader(System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nStart the provider, returning an IDataReader compatible object to the client for row enumeration and data access\n"
  syntax:
    content: public virtual IDataReader GetReader(string options)
    parameters:
    - id: options
      type: System.String
      description: Options, passed to the internal GetRows method
    return:
      type: System.Data.IDataReader
      description: IDataReader primed to provide results
    content.vb: Public Overridable Function GetReader(options As String) As IDataReader
  overload: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.GetReader*
  implements:
  - SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetReader(System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.GetRows(System.String)
  commentId: M:SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.GetRows(System.String)
  id: GetRows(System.String)
  parent: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper
  langs:
  - csharp
  - vb
  name: GetRows(String)
  nameWithType: AsyncProviderWrapper.GetRows(String)
  fullName: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.GetRows(System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nGet rows, asynchronously. This method <strong>may return null rows</strong> while waiting for &quot;real&quot; data; the client <strong>must</strong> handle this\n"
  remarks: "\nThe inner provider&apos;s GetRows is run in a loop in another thread. This method will pick results from a queue, using a blocking\nsemaphore to do so efficiently. While waiting for a result to become available, there is a timeout of 50ms; if no data are forthcoming then\na <strong>null</strong> row is returned. <p></p>\nThe client should react to this dummy row by letting the GUI/command/message loop run; and then call the GetRows().MoveNext iterator\nagain (or just keep going in a foreach loop). It is legal to call <xref href=\"SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.Close\" data-throw-if-not-resolved=\"false\"></xref> if the user decides to cancel/not wait for the\nresults.\n"
  syntax:
    content: public IEnumerable<ArchiveRow> GetRows(string options)
    parameters:
    - id: options
      type: System.String
    return:
      type: System.Collections.Generic.IEnumerable{SuperOffice.CRM.ArchiveLists.ArchiveRow}
    content.vb: Public Function GetRows(options As String) As IEnumerable(Of ArchiveRow)
  overload: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.GetRows*
  implements:
  - SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetRows(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.Close
  commentId: M:SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.Close
  id: Close
  parent: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper
  langs:
  - csharp
  - vb
  name: Close()
  nameWithType: AsyncProviderWrapper.Close()
  fullName: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.Close()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nClose the archive provider; can be called at any time and will return immediately\n"
  syntax:
    content: public void Close()
    content.vb: Public Sub Close
  overload: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.Close*
  implements:
  - SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.Close
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.GetResultInformation
  commentId: M:SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.GetResultInformation
  id: GetResultInformation
  parent: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper
  langs:
  - csharp
  - vb
  name: GetResultInformation()
  nameWithType: AsyncProviderWrapper.GetResultInformation()
  fullName: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.GetResultInformation()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public ArchiveResultInformation GetResultInformation()
    return:
      type: SuperOffice.CRM.ArchiveLists.ArchiveResultInformation
    content.vb: Public Function GetResultInformation As ArchiveResultInformation
  overload: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.GetResultInformation*
  implements:
  - SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetResultInformation
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.SetPagingInfo(System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.SetPagingInfo(System.Int32,System.Int32)
  id: SetPagingInfo(System.Int32,System.Int32)
  parent: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper
  langs:
  - csharp
  - vb
  name: SetPagingInfo(Int32, Int32)
  nameWithType: AsyncProviderWrapper.SetPagingInfo(Int32, Int32)
  fullName: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.SetPagingInfo(System.Int32, System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public void SetPagingInfo(int pageSize, int pageNumber)
    parameters:
    - id: pageSize
      type: System.Int32
    - id: pageNumber
      type: System.Int32
    content.vb: Public Sub SetPagingInfo(pageSize As Integer, pageNumber As Integer)
  overload: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.SetPagingInfo*
  implements:
  - SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.SetPagingInfo(System.Int32,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.GetAvailableColumns
  commentId: M:SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.GetAvailableColumns
  id: GetAvailableColumns
  parent: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper
  langs:
  - csharp
  - vb
  name: GetAvailableColumns()
  nameWithType: AsyncProviderWrapper.GetAvailableColumns()
  fullName: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.GetAvailableColumns()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public List<ArchiveColumnInfo> GetAvailableColumns()
    return:
      type: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo}
    content.vb: Public Function GetAvailableColumns As List(Of ArchiveColumnInfo)
  overload: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.GetAvailableColumns*
  implements:
  - SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.GetAvailableColumns
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.SetDesiredColumns(System.String[])
  commentId: M:SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.SetDesiredColumns(System.String[])
  id: SetDesiredColumns(System.String[])
  parent: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper
  langs:
  - csharp
  - vb
  name: SetDesiredColumns(String[])
  nameWithType: AsyncProviderWrapper.SetDesiredColumns(String[])
  fullName: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.SetDesiredColumns(System.String[])
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public void SetDesiredColumns(params string[] columnIds)
    parameters:
    - id: columnIds
      type: System.String[]
    content.vb: Public Sub SetDesiredColumns(ParamArray columnIds As String())
  overload: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.SetDesiredColumns*
  implements:
  - SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetDesiredColumns(System.String[])
  nameWithType.vb: AsyncProviderWrapper.SetDesiredColumns(String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.SetDesiredColumns(System.String())
  name.vb: SetDesiredColumns(String())
- uid: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.SetOrderBy(SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[])
  commentId: M:SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.SetOrderBy(SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[])
  id: SetOrderBy(SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[])
  parent: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper
  langs:
  - csharp
  - vb
  name: SetOrderBy(ArchiveOrderByInfo[])
  nameWithType: AsyncProviderWrapper.SetOrderBy(ArchiveOrderByInfo[])
  fullName: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.SetOrderBy(SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[])
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public void SetOrderBy(params ArchiveOrderByInfo[] orderBy)
    parameters:
    - id: orderBy
      type: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[]
    content.vb: Public Sub SetOrderBy(ParamArray orderBy As ArchiveOrderByInfo())
  overload: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.SetOrderBy*
  implements:
  - SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetOrderBy(SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[])
  nameWithType.vb: AsyncProviderWrapper.SetOrderBy(ArchiveOrderByInfo())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.SetOrderBy(SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo())
  name.vb: SetOrderBy(ArchiveOrderByInfo())
- uid: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.SetRestriction(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  commentId: M:SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.SetRestriction(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  id: SetRestriction(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  parent: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper
  langs:
  - csharp
  - vb
  name: SetRestriction(ArchiveRestrictionInfo[])
  nameWithType: AsyncProviderWrapper.SetRestriction(ArchiveRestrictionInfo[])
  fullName: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.SetRestriction(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public bool SetRestriction(params ArchiveRestrictionInfo[] restrictions)
    parameters:
    - id: restrictions
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
    return:
      type: System.Boolean
    content.vb: Public Function SetRestriction(ParamArray restrictions As ArchiveRestrictionInfo()) As Boolean
  overload: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.SetRestriction*
  implements:
  - SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetRestriction(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  nameWithType.vb: AsyncProviderWrapper.SetRestriction(ArchiveRestrictionInfo())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.SetRestriction(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo())
  name.vb: SetRestriction(ArchiveRestrictionInfo())
- uid: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.GetAvailableEntities
  commentId: M:SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.GetAvailableEntities
  id: GetAvailableEntities
  parent: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper
  langs:
  - csharp
  - vb
  name: GetAvailableEntities()
  nameWithType: AsyncProviderWrapper.GetAvailableEntities()
  fullName: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.GetAvailableEntities()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public List<ArchiveRowTypeInfo> GetAvailableEntities()
    return:
      type: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo}
    content.vb: Public Function GetAvailableEntities As List(Of ArchiveRowTypeInfo)
  overload: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.GetAvailableEntities*
  implements:
  - SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities.GetAvailableEntities
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.SetDesiredEntities(System.String[])
  commentId: M:SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.SetDesiredEntities(System.String[])
  id: SetDesiredEntities(System.String[])
  parent: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper
  langs:
  - csharp
  - vb
  name: SetDesiredEntities(String[])
  nameWithType: AsyncProviderWrapper.SetDesiredEntities(String[])
  fullName: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.SetDesiredEntities(System.String[])
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public void SetDesiredEntities(params string[] entities)
    parameters:
    - id: entities
      type: System.String[]
    content.vb: Public Sub SetDesiredEntities(ParamArray entities As String())
  overload: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.SetDesiredEntities*
  implements:
  - SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities.SetDesiredEntities(System.String[])
  nameWithType.vb: AsyncProviderWrapper.SetDesiredEntities(String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.SetDesiredEntities(System.String())
  name.vb: SetDesiredEntities(String())
references:
- uid: SuperOffice.CRM.ArchiveLists
  commentId: N:SuperOffice.CRM.ArchiveLists
  isExternal: true
  name: SuperOffice.CRM.ArchiveLists
  nameWithType: SuperOffice.CRM.ArchiveLists
  fullName: SuperOffice.CRM.ArchiveLists
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.CRM.ArchiveLists.IArchiveProvider
  commentId: T:SuperOffice.CRM.ArchiveLists.IArchiveProvider
  parent: SuperOffice.CRM.ArchiveLists
  isExternal: true
  name: IArchiveProvider
  nameWithType: IArchiveProvider
  fullName: SuperOffice.CRM.ArchiveLists.IArchiveProvider
- uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows
  commentId: T:SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows
  parent: SuperOffice.CRM.ArchiveLists
  isExternal: true
  name: IArchiveProviderHasRows
  nameWithType: IArchiveProviderHasRows
  fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows
- uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns
  commentId: T:SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns
  parent: SuperOffice.CRM.ArchiveLists
  isExternal: true
  name: IArchiveProviderHasColumns
  nameWithType: IArchiveProviderHasColumns
  fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns
- uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities
  commentId: T:SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities
  parent: SuperOffice.CRM.ArchiveLists
  isExternal: true
  name: IArchiveProviderHasEntities
  nameWithType: IArchiveProviderHasEntities
  fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<AsyncProviderWrapper, To>()
  nameWithType: EnumUtil.MapEnums<AsyncProviderWrapper, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of AsyncProviderWrapper, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper, To)()
  name.vb: MapEnums(Of AsyncProviderWrapper, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<AsyncProviderWrapper, To>
    nameWithType: EnumUtil.MapEnums<AsyncProviderWrapper, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of AsyncProviderWrapper, To)
    nameWithType: EnumUtil.MapEnums(Of AsyncProviderWrapper, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<AsyncProviderWrapper, To>()
  nameWithType: Converters.MapEnums<AsyncProviderWrapper, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper, To>()
  nameWithType.vb: Converters.MapEnums(Of AsyncProviderWrapper, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper, To)()
  name.vb: MapEnums(Of AsyncProviderWrapper, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<AsyncProviderWrapper, To>
    nameWithType: Converters.MapEnums<AsyncProviderWrapper, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of AsyncProviderWrapper, To)
    nameWithType: Converters.MapEnums(Of AsyncProviderWrapper, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.#ctor*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.#ctor
  isExternal: true
  name: AsyncProviderWrapper
  nameWithType: AsyncProviderWrapper.AsyncProviderWrapper
  fullName: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.AsyncProviderWrapper
- uid: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.GetReader*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.GetReader
  isExternal: true
  name: GetReader
  nameWithType: AsyncProviderWrapper.GetReader
  fullName: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.GetReader
- uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetReader(System.String)
  commentId: M:SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetReader(System.String)
  parent: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows
  isExternal: true
  name: GetReader(String)
  nameWithType: IArchiveProviderHasRows.GetReader(String)
  fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetReader(System.String)
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetReader(System.String)
    name: GetReader
    nameWithType: IArchiveProviderHasRows.GetReader
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetReader(System.String)
    name: GetReader
    nameWithType: IArchiveProviderHasRows.GetReader
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.IDataReader
  isExternal: true
  name: IDataReader
  nameWithType: IDataReader
  fullName: System.Data.IDataReader
- uid: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.GetRows*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.GetRows
  isExternal: true
  name: GetRows
  nameWithType: AsyncProviderWrapper.GetRows
  fullName: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.GetRows
- uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetRows(System.String)
  commentId: M:SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetRows(System.String)
  parent: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows
  isExternal: true
  name: GetRows(String)
  nameWithType: IArchiveProviderHasRows.GetRows(String)
  fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetRows(System.String)
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetRows(System.String)
    name: GetRows
    nameWithType: IArchiveProviderHasRows.GetRows
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetRows
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetRows(System.String)
    name: GetRows
    nameWithType: IArchiveProviderHasRows.GetRows
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetRows
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{SuperOffice.CRM.ArchiveLists.ArchiveRow}
  commentId: T:System.Collections.Generic.IEnumerable{SuperOffice.CRM.ArchiveLists.ArchiveRow}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ArchiveRow>
  nameWithType: IEnumerable<ArchiveRow>
  fullName: System.Collections.Generic.IEnumerable<SuperOffice.CRM.ArchiveLists.ArchiveRow>
  nameWithType.vb: IEnumerable(Of ArchiveRow)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SuperOffice.CRM.ArchiveLists.ArchiveRow)
  name.vb: IEnumerable(Of ArchiveRow)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRow
    name: ArchiveRow
    nameWithType: ArchiveRow
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRow
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRow
    name: ArchiveRow
    nameWithType: ArchiveRow
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRow
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.Close*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.Close
  isExternal: true
  name: Close
  nameWithType: AsyncProviderWrapper.Close
  fullName: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.Close
- uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.Close
  commentId: M:SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.Close
  parent: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows
  isExternal: true
  name: Close()
  nameWithType: IArchiveProviderHasRows.Close()
  fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.Close()
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.Close
    name: Close
    nameWithType: IArchiveProviderHasRows.Close
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.Close
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.Close
    name: Close
    nameWithType: IArchiveProviderHasRows.Close
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.Close
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.GetResultInformation*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.GetResultInformation
  isExternal: true
  name: GetResultInformation
  nameWithType: AsyncProviderWrapper.GetResultInformation
  fullName: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.GetResultInformation
- uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetResultInformation
  commentId: M:SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetResultInformation
  parent: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows
  isExternal: true
  name: GetResultInformation()
  nameWithType: IArchiveProviderHasRows.GetResultInformation()
  fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetResultInformation()
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetResultInformation
    name: GetResultInformation
    nameWithType: IArchiveProviderHasRows.GetResultInformation
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetResultInformation
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetResultInformation
    name: GetResultInformation
    nameWithType: IArchiveProviderHasRows.GetResultInformation
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetResultInformation
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.ArchiveResultInformation
  commentId: T:SuperOffice.CRM.ArchiveLists.ArchiveResultInformation
  parent: SuperOffice.CRM.ArchiveLists
  isExternal: true
  name: ArchiveResultInformation
  nameWithType: ArchiveResultInformation
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveResultInformation
- uid: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.SetPagingInfo*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.SetPagingInfo
  isExternal: true
  name: SetPagingInfo
  nameWithType: AsyncProviderWrapper.SetPagingInfo
  fullName: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.SetPagingInfo
- uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.SetPagingInfo(System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.SetPagingInfo(System.Int32,System.Int32)
  parent: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows
  isExternal: true
  name: SetPagingInfo(Int32, Int32)
  nameWithType: IArchiveProviderHasRows.SetPagingInfo(Int32, Int32)
  fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.SetPagingInfo(System.Int32, System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.SetPagingInfo(System.Int32,System.Int32)
    name: SetPagingInfo
    nameWithType: IArchiveProviderHasRows.SetPagingInfo
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.SetPagingInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.SetPagingInfo(System.Int32,System.Int32)
    name: SetPagingInfo
    nameWithType: IArchiveProviderHasRows.SetPagingInfo
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.SetPagingInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.GetAvailableColumns*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.GetAvailableColumns
  isExternal: true
  name: GetAvailableColumns
  nameWithType: AsyncProviderWrapper.GetAvailableColumns
  fullName: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.GetAvailableColumns
- uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.GetAvailableColumns
  commentId: M:SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.GetAvailableColumns
  parent: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns
  isExternal: true
  name: GetAvailableColumns()
  nameWithType: IArchiveProviderHasColumns.GetAvailableColumns()
  fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.GetAvailableColumns()
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.GetAvailableColumns
    name: GetAvailableColumns
    nameWithType: IArchiveProviderHasColumns.GetAvailableColumns
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.GetAvailableColumns
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.GetAvailableColumns
    name: GetAvailableColumns
    nameWithType: IArchiveProviderHasColumns.GetAvailableColumns
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.GetAvailableColumns
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo}
  commentId: T:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ArchiveColumnInfo>
  nameWithType: List<ArchiveColumnInfo>
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo>
  nameWithType.vb: List(Of ArchiveColumnInfo)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo)
  name.vb: List(Of ArchiveColumnInfo)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo
    name: ArchiveColumnInfo
    nameWithType: ArchiveColumnInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo
    name: ArchiveColumnInfo
    nameWithType: ArchiveColumnInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.SetDesiredColumns*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.SetDesiredColumns
  isExternal: true
  name: SetDesiredColumns
  nameWithType: AsyncProviderWrapper.SetDesiredColumns
  fullName: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.SetDesiredColumns
- uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetDesiredColumns(System.String[])
  commentId: M:SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetDesiredColumns(System.String[])
  parent: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns
  isExternal: true
  name: SetDesiredColumns(String[])
  nameWithType: IArchiveProviderHasColumns.SetDesiredColumns(String[])
  fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetDesiredColumns(System.String[])
  nameWithType.vb: IArchiveProviderHasColumns.SetDesiredColumns(String())
  fullName.vb: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetDesiredColumns(System.String())
  name.vb: SetDesiredColumns(String())
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetDesiredColumns(System.String[])
    name: SetDesiredColumns
    nameWithType: IArchiveProviderHasColumns.SetDesiredColumns
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetDesiredColumns
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetDesiredColumns(System.String[])
    name: SetDesiredColumns
    nameWithType: IArchiveProviderHasColumns.SetDesiredColumns
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetDesiredColumns
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.SetOrderBy*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.SetOrderBy
  isExternal: true
  name: SetOrderBy
  nameWithType: AsyncProviderWrapper.SetOrderBy
  fullName: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.SetOrderBy
- uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetOrderBy(SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[])
  commentId: M:SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetOrderBy(SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[])
  parent: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns
  isExternal: true
  name: SetOrderBy(ArchiveOrderByInfo[])
  nameWithType: IArchiveProviderHasColumns.SetOrderBy(ArchiveOrderByInfo[])
  fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetOrderBy(SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[])
  nameWithType.vb: IArchiveProviderHasColumns.SetOrderBy(ArchiveOrderByInfo())
  fullName.vb: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetOrderBy(SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo())
  name.vb: SetOrderBy(ArchiveOrderByInfo())
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetOrderBy(SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[])
    name: SetOrderBy
    nameWithType: IArchiveProviderHasColumns.SetOrderBy
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetOrderBy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo
    name: ArchiveOrderByInfo
    nameWithType: ArchiveOrderByInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetOrderBy(SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[])
    name: SetOrderBy
    nameWithType: IArchiveProviderHasColumns.SetOrderBy
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetOrderBy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo
    name: ArchiveOrderByInfo
    nameWithType: ArchiveOrderByInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[]
  isExternal: true
  name: ArchiveOrderByInfo[]
  nameWithType: ArchiveOrderByInfo[]
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[]
  nameWithType.vb: ArchiveOrderByInfo()
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo()
  name.vb: ArchiveOrderByInfo()
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo
    name: ArchiveOrderByInfo
    nameWithType: ArchiveOrderByInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo
    name: ArchiveOrderByInfo
    nameWithType: ArchiveOrderByInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.SetRestriction*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.SetRestriction
  isExternal: true
  name: SetRestriction
  nameWithType: AsyncProviderWrapper.SetRestriction
  fullName: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.SetRestriction
- uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetRestriction(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  commentId: M:SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetRestriction(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  parent: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns
  isExternal: true
  name: SetRestriction(ArchiveRestrictionInfo[])
  nameWithType: IArchiveProviderHasColumns.SetRestriction(ArchiveRestrictionInfo[])
  fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetRestriction(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  nameWithType.vb: IArchiveProviderHasColumns.SetRestriction(ArchiveRestrictionInfo())
  fullName.vb: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetRestriction(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo())
  name.vb: SetRestriction(ArchiveRestrictionInfo())
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetRestriction(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
    name: SetRestriction
    nameWithType: IArchiveProviderHasColumns.SetRestriction
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetRestriction
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetRestriction(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
    name: SetRestriction
    nameWithType: IArchiveProviderHasColumns.SetRestriction
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetRestriction
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
  isExternal: true
  name: ArchiveRestrictionInfo[]
  nameWithType: ArchiveRestrictionInfo[]
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
  nameWithType.vb: ArchiveRestrictionInfo()
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo()
  name.vb: ArchiveRestrictionInfo()
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.GetAvailableEntities*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.GetAvailableEntities
  isExternal: true
  name: GetAvailableEntities
  nameWithType: AsyncProviderWrapper.GetAvailableEntities
  fullName: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.GetAvailableEntities
- uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities.GetAvailableEntities
  commentId: M:SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities.GetAvailableEntities
  parent: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities
  isExternal: true
  name: GetAvailableEntities()
  nameWithType: IArchiveProviderHasEntities.GetAvailableEntities()
  fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities.GetAvailableEntities()
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities.GetAvailableEntities
    name: GetAvailableEntities
    nameWithType: IArchiveProviderHasEntities.GetAvailableEntities
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities.GetAvailableEntities
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities.GetAvailableEntities
    name: GetAvailableEntities
    nameWithType: IArchiveProviderHasEntities.GetAvailableEntities
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities.GetAvailableEntities
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo}
  commentId: T:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ArchiveRowTypeInfo>
  nameWithType: List<ArchiveRowTypeInfo>
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo>
  nameWithType.vb: List(Of ArchiveRowTypeInfo)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo)
  name.vb: List(Of ArchiveRowTypeInfo)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
    name: ArchiveRowTypeInfo
    nameWithType: ArchiveRowTypeInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
    name: ArchiveRowTypeInfo
    nameWithType: ArchiveRowTypeInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.SetDesiredEntities*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.SetDesiredEntities
  isExternal: true
  name: SetDesiredEntities
  nameWithType: AsyncProviderWrapper.SetDesiredEntities
  fullName: SuperOffice.CRM.ArchiveLists.AsyncProviderWrapper.SetDesiredEntities
- uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities.SetDesiredEntities(System.String[])
  commentId: M:SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities.SetDesiredEntities(System.String[])
  parent: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities
  isExternal: true
  name: SetDesiredEntities(String[])
  nameWithType: IArchiveProviderHasEntities.SetDesiredEntities(String[])
  fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities.SetDesiredEntities(System.String[])
  nameWithType.vb: IArchiveProviderHasEntities.SetDesiredEntities(String())
  fullName.vb: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities.SetDesiredEntities(System.String())
  name.vb: SetDesiredEntities(String())
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities.SetDesiredEntities(System.String[])
    name: SetDesiredEntities
    nameWithType: IArchiveProviderHasEntities.SetDesiredEntities
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities.SetDesiredEntities
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities.SetDesiredEntities(System.String[])
    name: SetDesiredEntities
    nameWithType: IArchiveProviderHasEntities.SetDesiredEntities
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities.SetDesiredEntities
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
