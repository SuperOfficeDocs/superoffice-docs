### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Webhooks.ICustomWebhookPlugin
  commentId: T:SuperOffice.CRM.Webhooks.ICustomWebhookPlugin
  id: ICustomWebhookPlugin
  parent: SuperOffice.CRM.Webhooks
  children:
  - SuperOffice.CRM.Webhooks.ICustomWebhookPlugin.Notify(SuperOffice.CRM.Webhooks.Webhook,SuperOffice.CRM.Webhooks.WebhookPayload)
  langs:
  - csharp
  - vb
  name: ICustomWebhookPlugin
  nameWithType: ICustomWebhookPlugin
  fullName: SuperOffice.CRM.Webhooks.ICustomWebhookPlugin
  type: Interface
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Webhooks
  summary: "\nWebhooks for custom systems. There may be several of these per system - these are not prioritized.\nAll of them are instantiated and processed by the webhook dispatcher <xref href=\"SuperOffice.CRM.Webhooks.WebhookManager\" data-throw-if-not-resolved=\"false\"></xref>.\nPlugins must be marked with the <xref href=\"SuperOffice.CRM.Webhooks.CustomWebhookPluginAttribute\" data-throw-if-not-resolved=\"false\"></xref> to be found by the class factory.\n"
  syntax:
    content: 'public interface ICustomWebhookPlugin : IPlugin'
    content.vb: >-
      Public Interface ICustomWebhookPlugin
          Inherits IPlugin
  extensionMethods:
  - SuperOffice.CRM.Webhooks.ICustomWebhookPlugin.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Webhooks.ICustomWebhookPlugin.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.CRM.Webhooks.ICustomWebhookPlugin.Notify(SuperOffice.CRM.Webhooks.Webhook,SuperOffice.CRM.Webhooks.WebhookPayload)
  commentId: M:SuperOffice.CRM.Webhooks.ICustomWebhookPlugin.Notify(SuperOffice.CRM.Webhooks.Webhook,SuperOffice.CRM.Webhooks.WebhookPayload)
  id: Notify(SuperOffice.CRM.Webhooks.Webhook,SuperOffice.CRM.Webhooks.WebhookPayload)
  parent: SuperOffice.CRM.Webhooks.ICustomWebhookPlugin
  langs:
  - csharp
  - vb
  name: Notify(Webhook, WebhookPayload)
  nameWithType: ICustomWebhookPlugin.Notify(Webhook, WebhookPayload)
  fullName: SuperOffice.CRM.Webhooks.ICustomWebhookPlugin.Notify(SuperOffice.CRM.Webhooks.Webhook, SuperOffice.CRM.Webhooks.WebhookPayload)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Webhooks
  summary: "\nBroadcast the event to all subscribers, and mark failures/success status on the passed webhook objects.\n"
  syntax:
    content: WebhookResponse Notify(Webhook webhook, WebhookPayload eventInfo)
    parameters:
    - id: webhook
      type: SuperOffice.CRM.Webhooks.Webhook
      description: Inform the given webhook that the event has occurred.
    - id: eventInfo
      type: SuperOffice.CRM.Webhooks.WebhookPayload
      description: Event name, unique id and details
    return:
      type: SuperOffice.CRM.Webhooks.WebhookResponse
      description: Success/Failure information. NULL is taken as SUCCESS
    content.vb: Function Notify(webhook As Webhook, eventInfo As WebhookPayload) As WebhookResponse
  overload: SuperOffice.CRM.Webhooks.ICustomWebhookPlugin.Notify*
references:
- uid: SuperOffice.CRM.Webhooks
  commentId: N:SuperOffice.CRM.Webhooks
  isExternal: true
  name: SuperOffice.CRM.Webhooks
  nameWithType: SuperOffice.CRM.Webhooks
  fullName: SuperOffice.CRM.Webhooks
- uid: SuperOffice.CRM.Webhooks.ICustomWebhookPlugin.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<ICustomWebhookPlugin, To>()
  nameWithType: EnumUtil.MapEnums<ICustomWebhookPlugin, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Webhooks.ICustomWebhookPlugin, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of ICustomWebhookPlugin, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Webhooks.ICustomWebhookPlugin, To)()
  name.vb: MapEnums(Of ICustomWebhookPlugin, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<ICustomWebhookPlugin, To>
    nameWithType: EnumUtil.MapEnums<ICustomWebhookPlugin, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Webhooks.ICustomWebhookPlugin, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of ICustomWebhookPlugin, To)
    nameWithType: EnumUtil.MapEnums(Of ICustomWebhookPlugin, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Webhooks.ICustomWebhookPlugin, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Webhooks.ICustomWebhookPlugin.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<ICustomWebhookPlugin, To>()
  nameWithType: Converters.MapEnums<ICustomWebhookPlugin, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Webhooks.ICustomWebhookPlugin, To>()
  nameWithType.vb: Converters.MapEnums(Of ICustomWebhookPlugin, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Webhooks.ICustomWebhookPlugin, To)()
  name.vb: MapEnums(Of ICustomWebhookPlugin, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<ICustomWebhookPlugin, To>
    nameWithType: Converters.MapEnums<ICustomWebhookPlugin, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Webhooks.ICustomWebhookPlugin, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of ICustomWebhookPlugin, To)
    nameWithType: Converters.MapEnums(Of ICustomWebhookPlugin, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Webhooks.ICustomWebhookPlugin, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Webhooks.ICustomWebhookPlugin.Notify*
  commentId: Overload:SuperOffice.CRM.Webhooks.ICustomWebhookPlugin.Notify
  isExternal: true
  name: Notify
  nameWithType: ICustomWebhookPlugin.Notify
  fullName: SuperOffice.CRM.Webhooks.ICustomWebhookPlugin.Notify
- uid: SuperOffice.CRM.Webhooks.Webhook
  commentId: T:SuperOffice.CRM.Webhooks.Webhook
  parent: SuperOffice.CRM.Webhooks
  isExternal: true
  name: Webhook
  nameWithType: Webhook
  fullName: SuperOffice.CRM.Webhooks.Webhook
- uid: SuperOffice.CRM.Webhooks.WebhookPayload
  commentId: T:SuperOffice.CRM.Webhooks.WebhookPayload
  parent: SuperOffice.CRM.Webhooks
  isExternal: true
  name: WebhookPayload
  nameWithType: WebhookPayload
  fullName: SuperOffice.CRM.Webhooks.WebhookPayload
- uid: SuperOffice.CRM.Webhooks.WebhookResponse
  commentId: T:SuperOffice.CRM.Webhooks.WebhookResponse
  parent: SuperOffice.CRM.Webhooks
  isExternal: true
  name: WebhookResponse
  nameWithType: WebhookResponse
  fullName: SuperOffice.CRM.Webhooks.WebhookResponse
