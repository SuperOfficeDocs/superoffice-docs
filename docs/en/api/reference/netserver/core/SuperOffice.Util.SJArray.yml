### YamlMime:ManagedReference
items:
- uid: SuperOffice.Util.SJArray
  commentId: T:SuperOffice.Util.SJArray
  id: SJArray
  parent: SuperOffice.Util
  children:
  - SuperOffice.Util.SJArray.#ctor(SuperOffice.Util.SJElement[])
  - SuperOffice.Util.SJArray.#ctor(System.Collections.Generic.IEnumerable{SuperOffice.Util.SJElement})
  - SuperOffice.Util.SJArray.Add(SuperOffice.Util.SJElement[])
  - SuperOffice.Util.SJArray.Add(System.Collections.Generic.IEnumerable{SuperOffice.Util.SJElement})
  - SuperOffice.Util.SJArray.ToString
  langs:
  - csharp
  - vb
  name: SJArray
  nameWithType: SJArray
  fullName: SuperOffice.Util.SJArray
  type: Class
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  syntax:
    content: public class SJArray
    content.vb: Public Class SJArray
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.Util.SJArray.EnumUtil.MapEnums``2
  - SuperOffice.Util.SJArray.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.Util.SJArray.#ctor(SuperOffice.Util.SJElement[])
  commentId: M:SuperOffice.Util.SJArray.#ctor(SuperOffice.Util.SJElement[])
  id: '#ctor(SuperOffice.Util.SJElement[])'
  parent: SuperOffice.Util.SJArray
  langs:
  - csharp
  - vb
  name: SJArray(SJElement[])
  nameWithType: SJArray.SJArray(SJElement[])
  fullName: SuperOffice.Util.SJArray.SJArray(SuperOffice.Util.SJElement[])
  type: Constructor
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  syntax:
    content: public SJArray(params SJElement[] items)
    parameters:
    - id: items
      type: SuperOffice.Util.SJElement[]
    content.vb: Public Sub New(ParamArray items As SJElement())
  overload: SuperOffice.Util.SJArray.#ctor*
  nameWithType.vb: SJArray.SJArray(SJElement())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.Util.SJArray.SJArray(SuperOffice.Util.SJElement())
  name.vb: SJArray(SJElement())
- uid: SuperOffice.Util.SJArray.#ctor(System.Collections.Generic.IEnumerable{SuperOffice.Util.SJElement})
  commentId: M:SuperOffice.Util.SJArray.#ctor(System.Collections.Generic.IEnumerable{SuperOffice.Util.SJElement})
  id: '#ctor(System.Collections.Generic.IEnumerable{SuperOffice.Util.SJElement})'
  parent: SuperOffice.Util.SJArray
  langs:
  - csharp
  - vb
  name: SJArray(IEnumerable<SJElement>)
  nameWithType: SJArray.SJArray(IEnumerable<SJElement>)
  fullName: SuperOffice.Util.SJArray.SJArray(System.Collections.Generic.IEnumerable<SuperOffice.Util.SJElement>)
  type: Constructor
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  syntax:
    content: public SJArray(IEnumerable<SJElement> items)
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable{SuperOffice.Util.SJElement}
    content.vb: Public Sub New(items As IEnumerable(Of SJElement))
  overload: SuperOffice.Util.SJArray.#ctor*
  nameWithType.vb: SJArray.SJArray(IEnumerable(Of SJElement))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.Util.SJArray.SJArray(System.Collections.Generic.IEnumerable(Of SuperOffice.Util.SJElement))
  name.vb: SJArray(IEnumerable(Of SJElement))
- uid: SuperOffice.Util.SJArray.Add(SuperOffice.Util.SJElement[])
  commentId: M:SuperOffice.Util.SJArray.Add(SuperOffice.Util.SJElement[])
  id: Add(SuperOffice.Util.SJElement[])
  parent: SuperOffice.Util.SJArray
  langs:
  - csharp
  - vb
  name: Add(SJElement[])
  nameWithType: SJArray.Add(SJElement[])
  fullName: SuperOffice.Util.SJArray.Add(SuperOffice.Util.SJElement[])
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  syntax:
    content: public void Add(params SJElement[] items)
    parameters:
    - id: items
      type: SuperOffice.Util.SJElement[]
    content.vb: Public Sub Add(ParamArray items As SJElement())
  overload: SuperOffice.Util.SJArray.Add*
  nameWithType.vb: SJArray.Add(SJElement())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.Util.SJArray.Add(SuperOffice.Util.SJElement())
  name.vb: Add(SJElement())
- uid: SuperOffice.Util.SJArray.Add(System.Collections.Generic.IEnumerable{SuperOffice.Util.SJElement})
  commentId: M:SuperOffice.Util.SJArray.Add(System.Collections.Generic.IEnumerable{SuperOffice.Util.SJElement})
  id: Add(System.Collections.Generic.IEnumerable{SuperOffice.Util.SJElement})
  parent: SuperOffice.Util.SJArray
  langs:
  - csharp
  - vb
  name: Add(IEnumerable<SJElement>)
  nameWithType: SJArray.Add(IEnumerable<SJElement>)
  fullName: SuperOffice.Util.SJArray.Add(System.Collections.Generic.IEnumerable<SuperOffice.Util.SJElement>)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  syntax:
    content: public void Add(IEnumerable<SJElement> items)
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable{SuperOffice.Util.SJElement}
    content.vb: Public Sub Add(items As IEnumerable(Of SJElement))
  overload: SuperOffice.Util.SJArray.Add*
  nameWithType.vb: SJArray.Add(IEnumerable(Of SJElement))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.Util.SJArray.Add(System.Collections.Generic.IEnumerable(Of SuperOffice.Util.SJElement))
  name.vb: Add(IEnumerable(Of SJElement))
- uid: SuperOffice.Util.SJArray.ToString
  commentId: M:SuperOffice.Util.SJArray.ToString
  id: ToString
  parent: SuperOffice.Util.SJArray
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SJArray.ToString()
  fullName: SuperOffice.Util.SJArray.ToString()
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: SuperOffice.Util.SJArray.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.SJArray.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<SJArray, To>()
  nameWithType: EnumUtil.MapEnums<SJArray, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Util.SJArray, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of SJArray, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Util.SJArray, To)()
  name.vb: MapEnums(Of SJArray, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<SJArray, To>
    nameWithType: EnumUtil.MapEnums<SJArray, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Util.SJArray, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of SJArray, To)
    nameWithType: EnumUtil.MapEnums(Of SJArray, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Util.SJArray, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.SJArray.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<SJArray, To>()
  nameWithType: Converters.MapEnums<SJArray, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Util.SJArray, To>()
  nameWithType.vb: Converters.MapEnums(Of SJArray, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Util.SJArray, To)()
  name.vb: MapEnums(Of SJArray, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<SJArray, To>
    nameWithType: Converters.MapEnums<SJArray, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Util.SJArray, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of SJArray, To)
    nameWithType: Converters.MapEnums(Of SJArray, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Util.SJArray, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Util.SJArray.#ctor*
  commentId: Overload:SuperOffice.Util.SJArray.#ctor
  isExternal: true
  name: SJArray
  nameWithType: SJArray.SJArray
  fullName: SuperOffice.Util.SJArray.SJArray
- uid: SuperOffice.Util.SJElement[]
  isExternal: true
  name: SJElement[]
  nameWithType: SJElement[]
  fullName: SuperOffice.Util.SJElement[]
  nameWithType.vb: SJElement()
  fullName.vb: SuperOffice.Util.SJElement()
  name.vb: SJElement()
  spec.csharp:
  - uid: SuperOffice.Util.SJElement
    name: SJElement
    nameWithType: SJElement
    fullName: SuperOffice.Util.SJElement
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.Util.SJElement
    name: SJElement
    nameWithType: SJElement
    fullName: SuperOffice.Util.SJElement
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.IEnumerable{SuperOffice.Util.SJElement}
  commentId: T:System.Collections.Generic.IEnumerable{SuperOffice.Util.SJElement}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<SJElement>
  nameWithType: IEnumerable<SJElement>
  fullName: System.Collections.Generic.IEnumerable<SuperOffice.Util.SJElement>
  nameWithType.vb: IEnumerable(Of SJElement)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SuperOffice.Util.SJElement)
  name.vb: IEnumerable(Of SJElement)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Util.SJElement
    name: SJElement
    nameWithType: SJElement
    fullName: SuperOffice.Util.SJElement
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Util.SJElement
    name: SJElement
    nameWithType: SJElement
    fullName: SuperOffice.Util.SJElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: SuperOffice.Util.SJArray.Add*
  commentId: Overload:SuperOffice.Util.SJArray.Add
  isExternal: true
  name: Add
  nameWithType: SJArray.Add
  fullName: SuperOffice.Util.SJArray.Add
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.SJArray.ToString*
  commentId: Overload:SuperOffice.Util.SJArray.ToString
  isExternal: true
  name: ToString
  nameWithType: SJArray.ToString
  fullName: SuperOffice.Util.SJArray.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
