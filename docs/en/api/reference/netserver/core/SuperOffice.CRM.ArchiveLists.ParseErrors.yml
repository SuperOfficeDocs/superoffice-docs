### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.ArchiveLists.ParseErrors
  commentId: T:SuperOffice.CRM.ArchiveLists.ParseErrors
  id: ParseErrors
  parent: SuperOffice.CRM.ArchiveLists
  children:
  - SuperOffice.CRM.ArchiveLists.ParseErrors.#ctor
  langs:
  - csharp
  - vb
  name: ParseErrors
  nameWithType: ParseErrors
  fullName: SuperOffice.CRM.ArchiveLists.ParseErrors
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: 'public class ParseErrors : List<ParseError>, IList<ParseError>, ICollection<ParseError>, IList, ICollection, IReadOnlyList<ParseError>, IReadOnlyCollection<ParseError>, IEnumerable<ParseError>, IEnumerable'
    content.vb: >-
      Public Class ParseErrors
          Inherits List(Of ParseError)
          Implements IList(Of ParseError), ICollection(Of ParseError), IList, ICollection, IReadOnlyList(Of ParseError), IReadOnlyCollection(Of ParseError), IEnumerable(Of ParseError), IEnumerable
  inheritance:
  - System.Object
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  implements:
  - System.Collections.Generic.IList{SuperOffice.CRM.ArchiveLists.ParseError}
  - System.Collections.Generic.ICollection{SuperOffice.CRM.ArchiveLists.ParseError}
  - System.Collections.IList
  - System.Collections.ICollection
  - System.Collections.Generic.IReadOnlyList{SuperOffice.CRM.ArchiveLists.ParseError}
  - System.Collections.Generic.IReadOnlyCollection{SuperOffice.CRM.ArchiveLists.ParseError}
  - System.Collections.Generic.IEnumerable{SuperOffice.CRM.ArchiveLists.ParseError}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.System#Collections#IList#get_Item(System.Int32)
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.System#Collections#IList#set_Item(System.Int32,System.Object)
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.Add(SuperOffice.CRM.ArchiveLists.ParseError)
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.System#Collections#IList#Add(System.Object)
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.AddRange(System.Collections.Generic.IEnumerable{SuperOffice.CRM.ArchiveLists.ParseError})
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.AsReadOnly
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.BinarySearch(System.Int32,System.Int32,SuperOffice.CRM.ArchiveLists.ParseError,System.Collections.Generic.IComparer{SuperOffice.CRM.ArchiveLists.ParseError})
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.BinarySearch(SuperOffice.CRM.ArchiveLists.ParseError)
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.BinarySearch(SuperOffice.CRM.ArchiveLists.ParseError,System.Collections.Generic.IComparer{SuperOffice.CRM.ArchiveLists.ParseError})
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.Clear
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.Contains(SuperOffice.CRM.ArchiveLists.ParseError)
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.System#Collections#IList#Contains(System.Object)
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.ConvertAll``1(System.Converter{SuperOffice.CRM.ArchiveLists.ParseError,{TOutput}})
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.CopyTo(SuperOffice.CRM.ArchiveLists.ParseError[])
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.CopyTo(System.Int32,SuperOffice.CRM.ArchiveLists.ParseError[],System.Int32,System.Int32)
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.CopyTo(SuperOffice.CRM.ArchiveLists.ParseError[],System.Int32)
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.Exists(System.Predicate{SuperOffice.CRM.ArchiveLists.ParseError})
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.Find(System.Predicate{SuperOffice.CRM.ArchiveLists.ParseError})
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.FindAll(System.Predicate{SuperOffice.CRM.ArchiveLists.ParseError})
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.FindIndex(System.Predicate{SuperOffice.CRM.ArchiveLists.ParseError})
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.FindIndex(System.Int32,System.Predicate{SuperOffice.CRM.ArchiveLists.ParseError})
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.FindIndex(System.Int32,System.Int32,System.Predicate{SuperOffice.CRM.ArchiveLists.ParseError})
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.FindLast(System.Predicate{SuperOffice.CRM.ArchiveLists.ParseError})
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.FindLastIndex(System.Predicate{SuperOffice.CRM.ArchiveLists.ParseError})
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.FindLastIndex(System.Int32,System.Predicate{SuperOffice.CRM.ArchiveLists.ParseError})
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.FindLastIndex(System.Int32,System.Int32,System.Predicate{SuperOffice.CRM.ArchiveLists.ParseError})
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.ForEach(System.Action{SuperOffice.CRM.ArchiveLists.ParseError})
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.GetEnumerator
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.GetRange(System.Int32,System.Int32)
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.IndexOf(SuperOffice.CRM.ArchiveLists.ParseError)
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.System#Collections#IList#IndexOf(System.Object)
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.IndexOf(SuperOffice.CRM.ArchiveLists.ParseError,System.Int32)
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.IndexOf(SuperOffice.CRM.ArchiveLists.ParseError,System.Int32,System.Int32)
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.Insert(System.Int32,SuperOffice.CRM.ArchiveLists.ParseError)
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{SuperOffice.CRM.ArchiveLists.ParseError})
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.LastIndexOf(SuperOffice.CRM.ArchiveLists.ParseError)
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.LastIndexOf(SuperOffice.CRM.ArchiveLists.ParseError,System.Int32)
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.LastIndexOf(SuperOffice.CRM.ArchiveLists.ParseError,System.Int32,System.Int32)
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.Remove(SuperOffice.CRM.ArchiveLists.ParseError)
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.System#Collections#IList#Remove(System.Object)
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.RemoveAll(System.Predicate{SuperOffice.CRM.ArchiveLists.ParseError})
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.RemoveAt(System.Int32)
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.RemoveRange(System.Int32,System.Int32)
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.Reverse
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.Reverse(System.Int32,System.Int32)
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.Sort
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.Sort(System.Collections.Generic.IComparer{SuperOffice.CRM.ArchiveLists.ParseError})
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{SuperOffice.CRM.ArchiveLists.ParseError})
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.Sort(System.Comparison{SuperOffice.CRM.ArchiveLists.ParseError})
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.ToArray
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.TrimExcess
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.TrueForAll(System.Predicate{SuperOffice.CRM.ArchiveLists.ParseError})
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.Capacity
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.Count
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.System#Collections#IList#IsFixedSize
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.System#Collections#Generic#ICollection{T}#IsReadOnly
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.System#Collections#IList#IsReadOnly
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.System#Collections#ICollection#IsSynchronized
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.System#Collections#ICollection#SyncRoot
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.Item(System.Int32)
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.System#Collections#IList#Item(System.Int32)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.ArchiveLists.ParseErrors.EnumUtil.MapEnums``2
  - System.Collections.Generic.IEnumerable{SuperOffice.CRM.ArchiveLists.ParseError}.IEnumerableExtensions.ForEach``1(System.Action{SuperOffice.CRM.ArchiveLists.ParseError})
  - System.Collections.Generic.IEnumerable{SuperOffice.CRM.ArchiveLists.ParseError}.IEnumerableExtensions.ContainsAny``1(System.Collections.Generic.IEnumerable{SuperOffice.CRM.ArchiveLists.ParseError})
  - System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.IEnumerableExtensions.SplitList``1(System.Int32)
  - System.Collections.Generic.IEnumerable{SuperOffice.CRM.ArchiveLists.ParseError}.IEnumerableExtensions.Batch``1(System.Int32)
  - System.Collections.Generic.IEnumerable{SuperOffice.CRM.ArchiveLists.ParseError}.IEnumerableExtensions.IndexOf``1(SuperOffice.CRM.ArchiveLists.ParseError,System.Int32)
  - System.Collections.Generic.IEnumerable{SuperOffice.CRM.ArchiveLists.ParseError}.IEnumerableExtensions.IndexOf``1(System.Func{SuperOffice.CRM.ArchiveLists.ParseError,System.Boolean},System.Int32)
  - System.Collections.Generic.IEnumerable{SuperOffice.CRM.ArchiveLists.ParseError}.IEnumerableExtensions.Permute``1(System.Int32)
  - System.Collections.Generic.IEnumerable{SuperOffice.CRM.ArchiveLists.ParseError}.IEnumerableExtensions.PermissiveToDictionary``3(System.Func{SuperOffice.CRM.ArchiveLists.ParseError,{K}},System.Func{SuperOffice.CRM.ArchiveLists.ParseError,{V}})
  - System.Collections.Generic.IEnumerable{SuperOffice.CRM.ArchiveLists.ParseError}.IEnumerableExtensions.PermissiveToDictionary``3(System.Func{SuperOffice.CRM.ArchiveLists.ParseError,{K}},System.Func{SuperOffice.CRM.ArchiveLists.ParseError,{V}},System.Collections.Generic.IEqualityComparer{{K}})
  - System.Collections.Generic.IEnumerable{SuperOffice.CRM.ArchiveLists.ParseError}.IEnumerableExtensions.GetDifferentCombinations``1(System.Int32)
  - System.Collections.Generic.IEnumerable{SuperOffice.CRM.ArchiveLists.ParseError}.SuperOffice.Util.CollectionOps.AtLeastOne``1
  - SuperOffice.CRM.ArchiveLists.ParseErrors.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.ArchiveLists.ParseErrors)
  - SuperOffice.CRM.ArchiveLists.ParseErrors.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.CRM.ArchiveLists.ParseErrors.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.ArchiveLists.ParseErrors.#ctor
  commentId: M:SuperOffice.CRM.ArchiveLists.ParseErrors.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.ArchiveLists.ParseErrors
  langs:
  - csharp
  - vb
  name: ParseErrors()
  nameWithType: ParseErrors.ParseErrors()
  fullName: SuperOffice.CRM.ArchiveLists.ParseErrors.ParseErrors()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public ParseErrors()
    content.vb: Public Sub New
  overload: SuperOffice.CRM.ArchiveLists.ParseErrors.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.CRM.ArchiveLists
  commentId: N:SuperOffice.CRM.ArchiveLists
  isExternal: true
  name: SuperOffice.CRM.ArchiveLists
  nameWithType: SuperOffice.CRM.ArchiveLists
  fullName: SuperOffice.CRM.ArchiveLists
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  commentId: T:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ParseError>
  nameWithType: List<ParseError>
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>
  nameWithType.vb: List(Of ParseError)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError)
  name.vb: List(Of ParseError)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{SuperOffice.CRM.ArchiveLists.ParseError}
  commentId: T:System.Collections.Generic.IList{SuperOffice.CRM.ArchiveLists.ParseError}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ParseError>
  nameWithType: IList<ParseError>
  fullName: System.Collections.Generic.IList<SuperOffice.CRM.ArchiveLists.ParseError>
  nameWithType.vb: IList(Of ParseError)
  fullName.vb: System.Collections.Generic.IList(Of SuperOffice.CRM.ArchiveLists.ParseError)
  name.vb: IList(Of ParseError)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{SuperOffice.CRM.ArchiveLists.ParseError}
  commentId: T:System.Collections.Generic.ICollection{SuperOffice.CRM.ArchiveLists.ParseError}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<ParseError>
  nameWithType: ICollection<ParseError>
  fullName: System.Collections.Generic.ICollection<SuperOffice.CRM.ArchiveLists.ParseError>
  nameWithType.vb: ICollection(Of ParseError)
  fullName.vb: System.Collections.Generic.ICollection(Of SuperOffice.CRM.ArchiveLists.ParseError)
  name.vb: ICollection(Of ParseError)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections.ICollection
  commentId: T:System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.Generic.IReadOnlyList{SuperOffice.CRM.ArchiveLists.ParseError}
  commentId: T:System.Collections.Generic.IReadOnlyList{SuperOffice.CRM.ArchiveLists.ParseError}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<ParseError>
  nameWithType: IReadOnlyList<ParseError>
  fullName: System.Collections.Generic.IReadOnlyList<SuperOffice.CRM.ArchiveLists.ParseError>
  nameWithType.vb: IReadOnlyList(Of ParseError)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of SuperOffice.CRM.ArchiveLists.ParseError)
  name.vb: IReadOnlyList(Of ParseError)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection{SuperOffice.CRM.ArchiveLists.ParseError}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{SuperOffice.CRM.ArchiveLists.ParseError}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<ParseError>
  nameWithType: IReadOnlyCollection<ParseError>
  fullName: System.Collections.Generic.IReadOnlyCollection<SuperOffice.CRM.ArchiveLists.ParseError>
  nameWithType.vb: IReadOnlyCollection(Of ParseError)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of SuperOffice.CRM.ArchiveLists.ParseError)
  name.vb: IReadOnlyCollection(Of ParseError)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{SuperOffice.CRM.ArchiveLists.ParseError}
  commentId: T:System.Collections.Generic.IEnumerable{SuperOffice.CRM.ArchiveLists.ParseError}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ParseError>
  nameWithType: IEnumerable<ParseError>
  fullName: System.Collections.Generic.IEnumerable<SuperOffice.CRM.ArchiveLists.ParseError>
  nameWithType.vb: IEnumerable(Of ParseError)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SuperOffice.CRM.ArchiveLists.ParseError)
  name.vb: IEnumerable(Of ParseError)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.System#Collections#IList#get_Item(System.Int32)
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.System#Collections#IList#get_Item(System.Int32)
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.System#Collections#IList#get_Item(System.Int32)
  name: IList.get_Item(Int32)
  nameWithType: List<ParseError>.IList.get_Item(Int32)
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.System.Collections.IList.get_Item(System.Int32)
  nameWithType.vb: List(Of ParseError).System.Collections.IList.get_Item(Int32)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).System.Collections.IList.get_Item(System.Int32)
  name.vb: System.Collections.IList.get_Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#get_Item(System.Int32)
    name: IList.get_Item
    nameWithType: List<ParseError>.IList.get_Item
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#get_Item(System.Int32)
    name: System.Collections.IList.get_Item
    nameWithType: List(Of ParseError).System.Collections.IList.get_Item
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.System#Collections#IList#set_Item(System.Int32,System.Object)
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.System#Collections#IList#set_Item(System.Int32,System.Object)
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  name: IList.set_Item(Int32, Object)
  nameWithType: List<ParseError>.IList.set_Item(Int32, Object)
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.System.Collections.IList.set_Item(System.Int32, System.Object)
  nameWithType.vb: List(Of ParseError).System.Collections.IList.set_Item(Int32, Object)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).System.Collections.IList.set_Item(System.Int32, System.Object)
  name.vb: System.Collections.IList.set_Item(Int32, Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: IList.set_Item
    nameWithType: List<ParseError>.IList.set_Item
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: System.Collections.IList.set_Item
    nameWithType: List(Of ParseError).System.Collections.IList.set_Item
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.Add(SuperOffice.CRM.ArchiveLists.ParseError)
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.Add(SuperOffice.CRM.ArchiveLists.ParseError)
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.Add(`0)
  name: Add(ParseError)
  nameWithType: List<ParseError>.Add(ParseError)
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.Add(SuperOffice.CRM.ArchiveLists.ParseError)
  nameWithType.vb: List(Of ParseError).Add(ParseError)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).Add(SuperOffice.CRM.ArchiveLists.ParseError)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Add(`0)
    name: Add
    nameWithType: List<ParseError>.Add
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Add(`0)
    name: Add
    nameWithType: List(Of ParseError).Add
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.System#Collections#IList#Add(System.Object)
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.System#Collections#IList#Add(System.Object)
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)
  name: IList.Add(Object)
  nameWithType: List<ParseError>.IList.Add(Object)
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.System.Collections.IList.Add(System.Object)
  nameWithType.vb: List(Of ParseError).System.Collections.IList.Add(Object)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).System.Collections.IList.Add(System.Object)
  name.vb: System.Collections.IList.Add(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)
    name: IList.Add
    nameWithType: List<ParseError>.IList.Add
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)
    name: System.Collections.IList.Add
    nameWithType: List(Of ParseError).System.Collections.IList.Add
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.AddRange(System.Collections.Generic.IEnumerable{SuperOffice.CRM.ArchiveLists.ParseError})
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.AddRange(System.Collections.Generic.IEnumerable{SuperOffice.CRM.ArchiveLists.ParseError})
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  name: AddRange(IEnumerable<ParseError>)
  nameWithType: List<ParseError>.AddRange(IEnumerable<ParseError>)
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.AddRange(System.Collections.Generic.IEnumerable<SuperOffice.CRM.ArchiveLists.ParseError>)
  nameWithType.vb: List(Of ParseError).AddRange(IEnumerable(Of ParseError))
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).AddRange(System.Collections.Generic.IEnumerable(Of SuperOffice.CRM.ArchiveLists.ParseError))
  name.vb: AddRange(IEnumerable(Of ParseError))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    nameWithType: List<ParseError>.AddRange
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.AddRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    nameWithType: List(Of ParseError).AddRange
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).AddRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.AsReadOnly
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.AsReadOnly
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.AsReadOnly
  name: AsReadOnly()
  nameWithType: List<ParseError>.AsReadOnly()
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.AsReadOnly()
  nameWithType.vb: List(Of ParseError).AsReadOnly()
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).AsReadOnly()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.AsReadOnly
    name: AsReadOnly
    nameWithType: List<ParseError>.AsReadOnly
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.AsReadOnly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.AsReadOnly
    name: AsReadOnly
    nameWithType: List(Of ParseError).AsReadOnly
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).AsReadOnly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.BinarySearch(System.Int32,System.Int32,SuperOffice.CRM.ArchiveLists.ParseError,System.Collections.Generic.IComparer{SuperOffice.CRM.ArchiveLists.ParseError})
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.BinarySearch(System.Int32,System.Int32,SuperOffice.CRM.ArchiveLists.ParseError,System.Collections.Generic.IComparer{SuperOffice.CRM.ArchiveLists.ParseError})
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
  name: BinarySearch(Int32, Int32, ParseError, IComparer<ParseError>)
  nameWithType: List<ParseError>.BinarySearch(Int32, Int32, ParseError, IComparer<ParseError>)
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.BinarySearch(System.Int32, System.Int32, SuperOffice.CRM.ArchiveLists.ParseError, System.Collections.Generic.IComparer<SuperOffice.CRM.ArchiveLists.ParseError>)
  nameWithType.vb: List(Of ParseError).BinarySearch(Int32, Int32, ParseError, IComparer(Of ParseError))
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).BinarySearch(System.Int32, System.Int32, SuperOffice.CRM.ArchiveLists.ParseError, System.Collections.Generic.IComparer(Of SuperOffice.CRM.ArchiveLists.ParseError))
  name.vb: BinarySearch(Int32, Int32, ParseError, IComparer(Of ParseError))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List<ParseError>.BinarySearch
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List(Of ParseError).BinarySearch
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.BinarySearch(SuperOffice.CRM.ArchiveLists.ParseError)
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.BinarySearch(SuperOffice.CRM.ArchiveLists.ParseError)
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.BinarySearch(`0)
  name: BinarySearch(ParseError)
  nameWithType: List<ParseError>.BinarySearch(ParseError)
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.BinarySearch(SuperOffice.CRM.ArchiveLists.ParseError)
  nameWithType.vb: List(Of ParseError).BinarySearch(ParseError)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).BinarySearch(SuperOffice.CRM.ArchiveLists.ParseError)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0)
    name: BinarySearch
    nameWithType: List<ParseError>.BinarySearch
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0)
    name: BinarySearch
    nameWithType: List(Of ParseError).BinarySearch
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.BinarySearch(SuperOffice.CRM.ArchiveLists.ParseError,System.Collections.Generic.IComparer{SuperOffice.CRM.ArchiveLists.ParseError})
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.BinarySearch(SuperOffice.CRM.ArchiveLists.ParseError,System.Collections.Generic.IComparer{SuperOffice.CRM.ArchiveLists.ParseError})
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
  name: BinarySearch(ParseError, IComparer<ParseError>)
  nameWithType: List<ParseError>.BinarySearch(ParseError, IComparer<ParseError>)
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.BinarySearch(SuperOffice.CRM.ArchiveLists.ParseError, System.Collections.Generic.IComparer<SuperOffice.CRM.ArchiveLists.ParseError>)
  nameWithType.vb: List(Of ParseError).BinarySearch(ParseError, IComparer(Of ParseError))
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).BinarySearch(SuperOffice.CRM.ArchiveLists.ParseError, System.Collections.Generic.IComparer(Of SuperOffice.CRM.ArchiveLists.ParseError))
  name.vb: BinarySearch(ParseError, IComparer(Of ParseError))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List<ParseError>.BinarySearch
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List(Of ParseError).BinarySearch
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.Clear
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.Clear
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.Clear
  name: Clear()
  nameWithType: List<ParseError>.Clear()
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.Clear()
  nameWithType.vb: List(Of ParseError).Clear()
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Clear
    name: Clear
    nameWithType: List<ParseError>.Clear
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Clear
    name: Clear
    nameWithType: List(Of ParseError).Clear
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.Contains(SuperOffice.CRM.ArchiveLists.ParseError)
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.Contains(SuperOffice.CRM.ArchiveLists.ParseError)
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.Contains(`0)
  name: Contains(ParseError)
  nameWithType: List<ParseError>.Contains(ParseError)
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.Contains(SuperOffice.CRM.ArchiveLists.ParseError)
  nameWithType.vb: List(Of ParseError).Contains(ParseError)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).Contains(SuperOffice.CRM.ArchiveLists.ParseError)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Contains(`0)
    name: Contains
    nameWithType: List<ParseError>.Contains
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Contains(`0)
    name: Contains
    nameWithType: List(Of ParseError).Contains
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.System#Collections#IList#Contains(System.Object)
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.System#Collections#IList#Contains(System.Object)
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)
  name: IList.Contains(Object)
  nameWithType: List<ParseError>.IList.Contains(Object)
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.System.Collections.IList.Contains(System.Object)
  nameWithType.vb: List(Of ParseError).System.Collections.IList.Contains(Object)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).System.Collections.IList.Contains(System.Object)
  name.vb: System.Collections.IList.Contains(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)
    name: IList.Contains
    nameWithType: List<ParseError>.IList.Contains
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)
    name: System.Collections.IList.Contains
    nameWithType: List(Of ParseError).System.Collections.IList.Contains
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.ConvertAll``1(System.Converter{SuperOffice.CRM.ArchiveLists.ParseError,{TOutput}})
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.ConvertAll``1(System.Converter{SuperOffice.CRM.ArchiveLists.ParseError,``0})
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
  name: ConvertAll<TOutput>(Converter<ParseError, TOutput>)
  nameWithType: List<ParseError>.ConvertAll<TOutput>(Converter<ParseError, TOutput>)
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.ConvertAll<TOutput>(System.Converter<SuperOffice.CRM.ArchiveLists.ParseError, TOutput>)
  nameWithType.vb: List(Of ParseError).ConvertAll(Of TOutput)(Converter(Of ParseError, TOutput))
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).ConvertAll(Of TOutput)(System.Converter(Of SuperOffice.CRM.ArchiveLists.ParseError, TOutput))
  name.vb: ConvertAll(Of TOutput)(Converter(Of ParseError, TOutput))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
    name: ConvertAll<TOutput>
    nameWithType: List<ParseError>.ConvertAll<TOutput>
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.ConvertAll<TOutput>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Converter`2
    name: Converter
    nameWithType: Converter
    fullName: System.Converter
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOutput
    nameWithType: TOutput
    fullName: TOutput
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
    name: ConvertAll(Of TOutput)
    nameWithType: List(Of ParseError).ConvertAll(Of TOutput)
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).ConvertAll(Of TOutput)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Converter`2
    name: Converter
    nameWithType: Converter
    fullName: System.Converter
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOutput
    nameWithType: TOutput
    fullName: TOutput
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.CopyTo(SuperOffice.CRM.ArchiveLists.ParseError[])
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.CopyTo(SuperOffice.CRM.ArchiveLists.ParseError[])
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.CopyTo(`0[])
  name: CopyTo(ParseError[])
  nameWithType: List<ParseError>.CopyTo(ParseError[])
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.CopyTo(SuperOffice.CRM.ArchiveLists.ParseError[])
  nameWithType.vb: List(Of ParseError).CopyTo(ParseError())
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).CopyTo(SuperOffice.CRM.ArchiveLists.ParseError())
  name.vb: CopyTo(ParseError())
  spec.csharp:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[])
    name: CopyTo
    nameWithType: List<ParseError>.CopyTo
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[])
    name: CopyTo
    nameWithType: List(Of ParseError).CopyTo
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: List<ParseError>.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: List(Of ParseError).System.Collections.ICollection.CopyTo(Array, Int32)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: List<ParseError>.ICollection.CopyTo
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: List(Of ParseError).System.Collections.ICollection.CopyTo
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.CopyTo(System.Int32,SuperOffice.CRM.ArchiveLists.ParseError[],System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.CopyTo(System.Int32,SuperOffice.CRM.ArchiveLists.ParseError[],System.Int32,System.Int32)
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
  name: CopyTo(Int32, ParseError[], Int32, Int32)
  nameWithType: List<ParseError>.CopyTo(Int32, ParseError[], Int32, Int32)
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.CopyTo(System.Int32, SuperOffice.CRM.ArchiveLists.ParseError[], System.Int32, System.Int32)
  nameWithType.vb: List(Of ParseError).CopyTo(Int32, ParseError(), Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).CopyTo(System.Int32, SuperOffice.CRM.ArchiveLists.ParseError(), System.Int32, System.Int32)
  name.vb: CopyTo(Int32, ParseError(), Int32, Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
    name: CopyTo
    nameWithType: List<ParseError>.CopyTo
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
    name: CopyTo
    nameWithType: List(Of ParseError).CopyTo
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.CopyTo(SuperOffice.CRM.ArchiveLists.ParseError[],System.Int32)
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.CopyTo(SuperOffice.CRM.ArchiveLists.ParseError[],System.Int32)
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
  name: CopyTo(ParseError[], Int32)
  nameWithType: List<ParseError>.CopyTo(ParseError[], Int32)
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.CopyTo(SuperOffice.CRM.ArchiveLists.ParseError[], System.Int32)
  nameWithType.vb: List(Of ParseError).CopyTo(ParseError(), Int32)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).CopyTo(SuperOffice.CRM.ArchiveLists.ParseError(), System.Int32)
  name.vb: CopyTo(ParseError(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: List<ParseError>.CopyTo
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: List(Of ParseError).CopyTo
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.Exists(System.Predicate{SuperOffice.CRM.ArchiveLists.ParseError})
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.Exists(System.Predicate{SuperOffice.CRM.ArchiveLists.ParseError})
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.Exists(System.Predicate{`0})
  name: Exists(Predicate<ParseError>)
  nameWithType: List<ParseError>.Exists(Predicate<ParseError>)
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.Exists(System.Predicate<SuperOffice.CRM.ArchiveLists.ParseError>)
  nameWithType.vb: List(Of ParseError).Exists(Predicate(Of ParseError))
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).Exists(System.Predicate(Of SuperOffice.CRM.ArchiveLists.ParseError))
  name.vb: Exists(Predicate(Of ParseError))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Exists(System.Predicate{`0})
    name: Exists
    nameWithType: List<ParseError>.Exists
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.Exists
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Exists(System.Predicate{`0})
    name: Exists
    nameWithType: List(Of ParseError).Exists
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).Exists
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.Find(System.Predicate{SuperOffice.CRM.ArchiveLists.ParseError})
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.Find(System.Predicate{SuperOffice.CRM.ArchiveLists.ParseError})
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.Find(System.Predicate{`0})
  name: Find(Predicate<ParseError>)
  nameWithType: List<ParseError>.Find(Predicate<ParseError>)
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.Find(System.Predicate<SuperOffice.CRM.ArchiveLists.ParseError>)
  nameWithType.vb: List(Of ParseError).Find(Predicate(Of ParseError))
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).Find(System.Predicate(Of SuperOffice.CRM.ArchiveLists.ParseError))
  name.vb: Find(Predicate(Of ParseError))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Find(System.Predicate{`0})
    name: Find
    nameWithType: List<ParseError>.Find
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.Find
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Find(System.Predicate{`0})
    name: Find
    nameWithType: List(Of ParseError).Find
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).Find
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.FindAll(System.Predicate{SuperOffice.CRM.ArchiveLists.ParseError})
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.FindAll(System.Predicate{SuperOffice.CRM.ArchiveLists.ParseError})
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
  name: FindAll(Predicate<ParseError>)
  nameWithType: List<ParseError>.FindAll(Predicate<ParseError>)
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.FindAll(System.Predicate<SuperOffice.CRM.ArchiveLists.ParseError>)
  nameWithType.vb: List(Of ParseError).FindAll(Predicate(Of ParseError))
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).FindAll(System.Predicate(Of SuperOffice.CRM.ArchiveLists.ParseError))
  name.vb: FindAll(Predicate(Of ParseError))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
    name: FindAll
    nameWithType: List<ParseError>.FindAll
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.FindAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
    name: FindAll
    nameWithType: List(Of ParseError).FindAll
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).FindAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.FindIndex(System.Predicate{SuperOffice.CRM.ArchiveLists.ParseError})
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.FindIndex(System.Predicate{SuperOffice.CRM.ArchiveLists.ParseError})
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
  name: FindIndex(Predicate<ParseError>)
  nameWithType: List<ParseError>.FindIndex(Predicate<ParseError>)
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.FindIndex(System.Predicate<SuperOffice.CRM.ArchiveLists.ParseError>)
  nameWithType.vb: List(Of ParseError).FindIndex(Predicate(Of ParseError))
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).FindIndex(System.Predicate(Of SuperOffice.CRM.ArchiveLists.ParseError))
  name.vb: FindIndex(Predicate(Of ParseError))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
    name: FindIndex
    nameWithType: List<ParseError>.FindIndex
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
    name: FindIndex
    nameWithType: List(Of ParseError).FindIndex
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.FindIndex(System.Int32,System.Predicate{SuperOffice.CRM.ArchiveLists.ParseError})
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.FindIndex(System.Int32,System.Predicate{SuperOffice.CRM.ArchiveLists.ParseError})
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
  name: FindIndex(Int32, Predicate<ParseError>)
  nameWithType: List<ParseError>.FindIndex(Int32, Predicate<ParseError>)
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.FindIndex(System.Int32, System.Predicate<SuperOffice.CRM.ArchiveLists.ParseError>)
  nameWithType.vb: List(Of ParseError).FindIndex(Int32, Predicate(Of ParseError))
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).FindIndex(System.Int32, System.Predicate(Of SuperOffice.CRM.ArchiveLists.ParseError))
  name.vb: FindIndex(Int32, Predicate(Of ParseError))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List<ParseError>.FindIndex
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List(Of ParseError).FindIndex
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.FindIndex(System.Int32,System.Int32,System.Predicate{SuperOffice.CRM.ArchiveLists.ParseError})
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.FindIndex(System.Int32,System.Int32,System.Predicate{SuperOffice.CRM.ArchiveLists.ParseError})
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
  name: FindIndex(Int32, Int32, Predicate<ParseError>)
  nameWithType: List<ParseError>.FindIndex(Int32, Int32, Predicate<ParseError>)
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.FindIndex(System.Int32, System.Int32, System.Predicate<SuperOffice.CRM.ArchiveLists.ParseError>)
  nameWithType.vb: List(Of ParseError).FindIndex(Int32, Int32, Predicate(Of ParseError))
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).FindIndex(System.Int32, System.Int32, System.Predicate(Of SuperOffice.CRM.ArchiveLists.ParseError))
  name.vb: FindIndex(Int32, Int32, Predicate(Of ParseError))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List<ParseError>.FindIndex
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List(Of ParseError).FindIndex
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.FindLast(System.Predicate{SuperOffice.CRM.ArchiveLists.ParseError})
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.FindLast(System.Predicate{SuperOffice.CRM.ArchiveLists.ParseError})
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
  name: FindLast(Predicate<ParseError>)
  nameWithType: List<ParseError>.FindLast(Predicate<ParseError>)
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.FindLast(System.Predicate<SuperOffice.CRM.ArchiveLists.ParseError>)
  nameWithType.vb: List(Of ParseError).FindLast(Predicate(Of ParseError))
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).FindLast(System.Predicate(Of SuperOffice.CRM.ArchiveLists.ParseError))
  name.vb: FindLast(Predicate(Of ParseError))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
    name: FindLast
    nameWithType: List<ParseError>.FindLast
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.FindLast
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
    name: FindLast
    nameWithType: List(Of ParseError).FindLast
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).FindLast
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.FindLastIndex(System.Predicate{SuperOffice.CRM.ArchiveLists.ParseError})
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.FindLastIndex(System.Predicate{SuperOffice.CRM.ArchiveLists.ParseError})
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
  name: FindLastIndex(Predicate<ParseError>)
  nameWithType: List<ParseError>.FindLastIndex(Predicate<ParseError>)
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.FindLastIndex(System.Predicate<SuperOffice.CRM.ArchiveLists.ParseError>)
  nameWithType.vb: List(Of ParseError).FindLastIndex(Predicate(Of ParseError))
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).FindLastIndex(System.Predicate(Of SuperOffice.CRM.ArchiveLists.ParseError))
  name.vb: FindLastIndex(Predicate(Of ParseError))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List<ParseError>.FindLastIndex
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List(Of ParseError).FindLastIndex
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.FindLastIndex(System.Int32,System.Predicate{SuperOffice.CRM.ArchiveLists.ParseError})
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.FindLastIndex(System.Int32,System.Predicate{SuperOffice.CRM.ArchiveLists.ParseError})
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
  name: FindLastIndex(Int32, Predicate<ParseError>)
  nameWithType: List<ParseError>.FindLastIndex(Int32, Predicate<ParseError>)
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.FindLastIndex(System.Int32, System.Predicate<SuperOffice.CRM.ArchiveLists.ParseError>)
  nameWithType.vb: List(Of ParseError).FindLastIndex(Int32, Predicate(Of ParseError))
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).FindLastIndex(System.Int32, System.Predicate(Of SuperOffice.CRM.ArchiveLists.ParseError))
  name.vb: FindLastIndex(Int32, Predicate(Of ParseError))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List<ParseError>.FindLastIndex
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List(Of ParseError).FindLastIndex
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.FindLastIndex(System.Int32,System.Int32,System.Predicate{SuperOffice.CRM.ArchiveLists.ParseError})
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.FindLastIndex(System.Int32,System.Int32,System.Predicate{SuperOffice.CRM.ArchiveLists.ParseError})
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
  name: FindLastIndex(Int32, Int32, Predicate<ParseError>)
  nameWithType: List<ParseError>.FindLastIndex(Int32, Int32, Predicate<ParseError>)
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.FindLastIndex(System.Int32, System.Int32, System.Predicate<SuperOffice.CRM.ArchiveLists.ParseError>)
  nameWithType.vb: List(Of ParseError).FindLastIndex(Int32, Int32, Predicate(Of ParseError))
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).FindLastIndex(System.Int32, System.Int32, System.Predicate(Of SuperOffice.CRM.ArchiveLists.ParseError))
  name.vb: FindLastIndex(Int32, Int32, Predicate(Of ParseError))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List<ParseError>.FindLastIndex
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List(Of ParseError).FindLastIndex
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.ForEach(System.Action{SuperOffice.CRM.ArchiveLists.ParseError})
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.ForEach(System.Action{SuperOffice.CRM.ArchiveLists.ParseError})
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.ForEach(System.Action{`0})
  name: ForEach(Action<ParseError>)
  nameWithType: List<ParseError>.ForEach(Action<ParseError>)
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.ForEach(System.Action<SuperOffice.CRM.ArchiveLists.ParseError>)
  nameWithType.vb: List(Of ParseError).ForEach(Action(Of ParseError))
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).ForEach(System.Action(Of SuperOffice.CRM.ArchiveLists.ParseError))
  name.vb: ForEach(Action(Of ParseError))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.ForEach(System.Action{`0})
    name: ForEach
    nameWithType: List<ParseError>.ForEach
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.ForEach
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.ForEach(System.Action{`0})
    name: ForEach
    nameWithType: List(Of ParseError).ForEach
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).ForEach
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.GetEnumerator
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.GetEnumerator
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: List<ParseError>.GetEnumerator()
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.GetEnumerator()
  nameWithType.vb: List(Of ParseError).GetEnumerator()
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.GetEnumerator
    name: GetEnumerator
    nameWithType: List<ParseError>.GetEnumerator
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.GetEnumerator
    name: GetEnumerator
    nameWithType: List(Of ParseError).GetEnumerator
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  name: IEnumerable<ParseError>.GetEnumerator()
  nameWithType: List<ParseError>.IEnumerable<ParseError>.GetEnumerator()
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.System.Collections.Generic.IEnumerable<SuperOffice.CRM.ArchiveLists.ParseError>.GetEnumerator()
  nameWithType.vb: List(Of ParseError).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
    name: IEnumerable<ParseError>.GetEnumerator
    nameWithType: List<ParseError>.IEnumerable<ParseError>.GetEnumerator
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.System.Collections.Generic.IEnumerable<SuperOffice.CRM.ArchiveLists.ParseError>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
    name: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    nameWithType: List(Of ParseError).System.Collections.Generic.IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  nameWithType: List<ParseError>.IEnumerable.GetEnumerator()
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: List(Of ParseError).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: List<ParseError>.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: List(Of ParseError).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.GetRange(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.GetRange(System.Int32,System.Int32)
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
  name: GetRange(Int32, Int32)
  nameWithType: List<ParseError>.GetRange(Int32, Int32)
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.GetRange(System.Int32, System.Int32)
  nameWithType.vb: List(Of ParseError).GetRange(Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).GetRange(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
    name: GetRange
    nameWithType: List<ParseError>.GetRange
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.GetRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
    name: GetRange
    nameWithType: List(Of ParseError).GetRange
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).GetRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.IndexOf(SuperOffice.CRM.ArchiveLists.ParseError)
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.IndexOf(SuperOffice.CRM.ArchiveLists.ParseError)
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.IndexOf(`0)
  name: IndexOf(ParseError)
  nameWithType: List<ParseError>.IndexOf(ParseError)
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.IndexOf(SuperOffice.CRM.ArchiveLists.ParseError)
  nameWithType.vb: List(Of ParseError).IndexOf(ParseError)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).IndexOf(SuperOffice.CRM.ArchiveLists.ParseError)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.IndexOf(`0)
    name: IndexOf
    nameWithType: List<ParseError>.IndexOf
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.IndexOf(`0)
    name: IndexOf
    nameWithType: List(Of ParseError).IndexOf
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.System#Collections#IList#IndexOf(System.Object)
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.System#Collections#IList#IndexOf(System.Object)
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)
  name: IList.IndexOf(Object)
  nameWithType: List<ParseError>.IList.IndexOf(Object)
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.System.Collections.IList.IndexOf(System.Object)
  nameWithType.vb: List(Of ParseError).System.Collections.IList.IndexOf(Object)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).System.Collections.IList.IndexOf(System.Object)
  name.vb: System.Collections.IList.IndexOf(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)
    name: IList.IndexOf
    nameWithType: List<ParseError>.IList.IndexOf
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)
    name: System.Collections.IList.IndexOf
    nameWithType: List(Of ParseError).System.Collections.IList.IndexOf
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.IndexOf(SuperOffice.CRM.ArchiveLists.ParseError,System.Int32)
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.IndexOf(SuperOffice.CRM.ArchiveLists.ParseError,System.Int32)
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
  name: IndexOf(ParseError, Int32)
  nameWithType: List<ParseError>.IndexOf(ParseError, Int32)
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.IndexOf(SuperOffice.CRM.ArchiveLists.ParseError, System.Int32)
  nameWithType.vb: List(Of ParseError).IndexOf(ParseError, Int32)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).IndexOf(SuperOffice.CRM.ArchiveLists.ParseError, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
    name: IndexOf
    nameWithType: List<ParseError>.IndexOf
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
    name: IndexOf
    nameWithType: List(Of ParseError).IndexOf
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.IndexOf(SuperOffice.CRM.ArchiveLists.ParseError,System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.IndexOf(SuperOffice.CRM.ArchiveLists.ParseError,System.Int32,System.Int32)
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
  name: IndexOf(ParseError, Int32, Int32)
  nameWithType: List<ParseError>.IndexOf(ParseError, Int32, Int32)
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.IndexOf(SuperOffice.CRM.ArchiveLists.ParseError, System.Int32, System.Int32)
  nameWithType.vb: List(Of ParseError).IndexOf(ParseError, Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).IndexOf(SuperOffice.CRM.ArchiveLists.ParseError, System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
    name: IndexOf
    nameWithType: List<ParseError>.IndexOf
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
    name: IndexOf
    nameWithType: List(Of ParseError).IndexOf
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.Insert(System.Int32,SuperOffice.CRM.ArchiveLists.ParseError)
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.Insert(System.Int32,SuperOffice.CRM.ArchiveLists.ParseError)
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.Insert(System.Int32,`0)
  name: Insert(Int32, ParseError)
  nameWithType: List<ParseError>.Insert(Int32, ParseError)
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.Insert(System.Int32, SuperOffice.CRM.ArchiveLists.ParseError)
  nameWithType.vb: List(Of ParseError).Insert(Int32, ParseError)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).Insert(System.Int32, SuperOffice.CRM.ArchiveLists.ParseError)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: List<ParseError>.Insert
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: List(Of ParseError).Insert
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.System#Collections#IList#Insert(System.Int32,System.Object)
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)
  name: IList.Insert(Int32, Object)
  nameWithType: List<ParseError>.IList.Insert(Int32, Object)
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.System.Collections.IList.Insert(System.Int32, System.Object)
  nameWithType.vb: List(Of ParseError).System.Collections.IList.Insert(Int32, Object)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).System.Collections.IList.Insert(System.Int32, System.Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: IList.Insert
    nameWithType: List<ParseError>.IList.Insert
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: System.Collections.IList.Insert
    nameWithType: List(Of ParseError).System.Collections.IList.Insert
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{SuperOffice.CRM.ArchiveLists.ParseError})
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{SuperOffice.CRM.ArchiveLists.ParseError})
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
  name: InsertRange(Int32, IEnumerable<ParseError>)
  nameWithType: List<ParseError>.InsertRange(Int32, IEnumerable<ParseError>)
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.InsertRange(System.Int32, System.Collections.Generic.IEnumerable<SuperOffice.CRM.ArchiveLists.ParseError>)
  nameWithType.vb: List(Of ParseError).InsertRange(Int32, IEnumerable(Of ParseError))
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).InsertRange(System.Int32, System.Collections.Generic.IEnumerable(Of SuperOffice.CRM.ArchiveLists.ParseError))
  name.vb: InsertRange(Int32, IEnumerable(Of ParseError))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
    name: InsertRange
    nameWithType: List<ParseError>.InsertRange
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.InsertRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
    name: InsertRange
    nameWithType: List(Of ParseError).InsertRange
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).InsertRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.LastIndexOf(SuperOffice.CRM.ArchiveLists.ParseError)
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.LastIndexOf(SuperOffice.CRM.ArchiveLists.ParseError)
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.LastIndexOf(`0)
  name: LastIndexOf(ParseError)
  nameWithType: List<ParseError>.LastIndexOf(ParseError)
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.LastIndexOf(SuperOffice.CRM.ArchiveLists.ParseError)
  nameWithType.vb: List(Of ParseError).LastIndexOf(ParseError)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).LastIndexOf(SuperOffice.CRM.ArchiveLists.ParseError)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0)
    name: LastIndexOf
    nameWithType: List<ParseError>.LastIndexOf
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0)
    name: LastIndexOf
    nameWithType: List(Of ParseError).LastIndexOf
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.LastIndexOf(SuperOffice.CRM.ArchiveLists.ParseError,System.Int32)
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.LastIndexOf(SuperOffice.CRM.ArchiveLists.ParseError,System.Int32)
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
  name: LastIndexOf(ParseError, Int32)
  nameWithType: List<ParseError>.LastIndexOf(ParseError, Int32)
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.LastIndexOf(SuperOffice.CRM.ArchiveLists.ParseError, System.Int32)
  nameWithType.vb: List(Of ParseError).LastIndexOf(ParseError, Int32)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).LastIndexOf(SuperOffice.CRM.ArchiveLists.ParseError, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
    name: LastIndexOf
    nameWithType: List<ParseError>.LastIndexOf
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
    name: LastIndexOf
    nameWithType: List(Of ParseError).LastIndexOf
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.LastIndexOf(SuperOffice.CRM.ArchiveLists.ParseError,System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.LastIndexOf(SuperOffice.CRM.ArchiveLists.ParseError,System.Int32,System.Int32)
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
  name: LastIndexOf(ParseError, Int32, Int32)
  nameWithType: List<ParseError>.LastIndexOf(ParseError, Int32, Int32)
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.LastIndexOf(SuperOffice.CRM.ArchiveLists.ParseError, System.Int32, System.Int32)
  nameWithType.vb: List(Of ParseError).LastIndexOf(ParseError, Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).LastIndexOf(SuperOffice.CRM.ArchiveLists.ParseError, System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
    name: LastIndexOf
    nameWithType: List<ParseError>.LastIndexOf
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
    name: LastIndexOf
    nameWithType: List(Of ParseError).LastIndexOf
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.Remove(SuperOffice.CRM.ArchiveLists.ParseError)
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.Remove(SuperOffice.CRM.ArchiveLists.ParseError)
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.Remove(`0)
  name: Remove(ParseError)
  nameWithType: List<ParseError>.Remove(ParseError)
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.Remove(SuperOffice.CRM.ArchiveLists.ParseError)
  nameWithType.vb: List(Of ParseError).Remove(ParseError)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).Remove(SuperOffice.CRM.ArchiveLists.ParseError)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Remove(`0)
    name: Remove
    nameWithType: List<ParseError>.Remove
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Remove(`0)
    name: Remove
    nameWithType: List(Of ParseError).Remove
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.System#Collections#IList#Remove(System.Object)
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.System#Collections#IList#Remove(System.Object)
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)
  name: IList.Remove(Object)
  nameWithType: List<ParseError>.IList.Remove(Object)
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.System.Collections.IList.Remove(System.Object)
  nameWithType.vb: List(Of ParseError).System.Collections.IList.Remove(Object)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).System.Collections.IList.Remove(System.Object)
  name.vb: System.Collections.IList.Remove(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)
    name: IList.Remove
    nameWithType: List<ParseError>.IList.Remove
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)
    name: System.Collections.IList.Remove
    nameWithType: List(Of ParseError).System.Collections.IList.Remove
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.RemoveAll(System.Predicate{SuperOffice.CRM.ArchiveLists.ParseError})
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.RemoveAll(System.Predicate{SuperOffice.CRM.ArchiveLists.ParseError})
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
  name: RemoveAll(Predicate<ParseError>)
  nameWithType: List<ParseError>.RemoveAll(Predicate<ParseError>)
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.RemoveAll(System.Predicate<SuperOffice.CRM.ArchiveLists.ParseError>)
  nameWithType.vb: List(Of ParseError).RemoveAll(Predicate(Of ParseError))
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).RemoveAll(System.Predicate(Of SuperOffice.CRM.ArchiveLists.ParseError))
  name.vb: RemoveAll(Predicate(Of ParseError))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
    name: RemoveAll
    nameWithType: List<ParseError>.RemoveAll
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.RemoveAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
    name: RemoveAll
    nameWithType: List(Of ParseError).RemoveAll
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).RemoveAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.RemoveAt(System.Int32)
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.RemoveAt(System.Int32)
  name: RemoveAt(Int32)
  nameWithType: List<ParseError>.RemoveAt(Int32)
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.RemoveAt(System.Int32)
  nameWithType.vb: List(Of ParseError).RemoveAt(Int32)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: List<ParseError>.RemoveAt
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: List(Of ParseError).RemoveAt
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.RemoveRange(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.RemoveRange(System.Int32,System.Int32)
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
  name: RemoveRange(Int32, Int32)
  nameWithType: List<ParseError>.RemoveRange(Int32, Int32)
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.RemoveRange(System.Int32, System.Int32)
  nameWithType.vb: List(Of ParseError).RemoveRange(Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).RemoveRange(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
    name: RemoveRange
    nameWithType: List<ParseError>.RemoveRange
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.RemoveRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
    name: RemoveRange
    nameWithType: List(Of ParseError).RemoveRange
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).RemoveRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.Reverse
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.Reverse
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.Reverse
  name: Reverse()
  nameWithType: List<ParseError>.Reverse()
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.Reverse()
  nameWithType.vb: List(Of ParseError).Reverse()
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).Reverse()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Reverse
    name: Reverse
    nameWithType: List<ParseError>.Reverse
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Reverse
    name: Reverse
    nameWithType: List(Of ParseError).Reverse
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.Reverse(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.Reverse(System.Int32,System.Int32)
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
  name: Reverse(Int32, Int32)
  nameWithType: List<ParseError>.Reverse(Int32, Int32)
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.Reverse(System.Int32, System.Int32)
  nameWithType.vb: List(Of ParseError).Reverse(Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).Reverse(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
    name: Reverse
    nameWithType: List<ParseError>.Reverse
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
    name: Reverse
    nameWithType: List(Of ParseError).Reverse
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.Sort
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.Sort
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.Sort
  name: Sort()
  nameWithType: List<ParseError>.Sort()
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.Sort()
  nameWithType.vb: List(Of ParseError).Sort()
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).Sort()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort
    name: Sort
    nameWithType: List<ParseError>.Sort
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort
    name: Sort
    nameWithType: List(Of ParseError).Sort
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.Sort(System.Collections.Generic.IComparer{SuperOffice.CRM.ArchiveLists.ParseError})
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.Sort(System.Collections.Generic.IComparer{SuperOffice.CRM.ArchiveLists.ParseError})
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
  name: Sort(IComparer<ParseError>)
  nameWithType: List<ParseError>.Sort(IComparer<ParseError>)
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.Sort(System.Collections.Generic.IComparer<SuperOffice.CRM.ArchiveLists.ParseError>)
  nameWithType.vb: List(Of ParseError).Sort(IComparer(Of ParseError))
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).Sort(System.Collections.Generic.IComparer(Of SuperOffice.CRM.ArchiveLists.ParseError))
  name.vb: Sort(IComparer(Of ParseError))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List<ParseError>.Sort
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List(Of ParseError).Sort
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{SuperOffice.CRM.ArchiveLists.ParseError})
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{SuperOffice.CRM.ArchiveLists.ParseError})
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
  name: Sort(Int32, Int32, IComparer<ParseError>)
  nameWithType: List<ParseError>.Sort(Int32, Int32, IComparer<ParseError>)
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.Sort(System.Int32, System.Int32, System.Collections.Generic.IComparer<SuperOffice.CRM.ArchiveLists.ParseError>)
  nameWithType.vb: List(Of ParseError).Sort(Int32, Int32, IComparer(Of ParseError))
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).Sort(System.Int32, System.Int32, System.Collections.Generic.IComparer(Of SuperOffice.CRM.ArchiveLists.ParseError))
  name.vb: Sort(Int32, Int32, IComparer(Of ParseError))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List<ParseError>.Sort
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List(Of ParseError).Sort
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.Sort(System.Comparison{SuperOffice.CRM.ArchiveLists.ParseError})
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.Sort(System.Comparison{SuperOffice.CRM.ArchiveLists.ParseError})
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.Sort(System.Comparison{`0})
  name: Sort(Comparison<ParseError>)
  nameWithType: List<ParseError>.Sort(Comparison<ParseError>)
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.Sort(System.Comparison<SuperOffice.CRM.ArchiveLists.ParseError>)
  nameWithType.vb: List(Of ParseError).Sort(Comparison(Of ParseError))
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).Sort(System.Comparison(Of SuperOffice.CRM.ArchiveLists.ParseError))
  name.vb: Sort(Comparison(Of ParseError))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort(System.Comparison{`0})
    name: Sort
    nameWithType: List<ParseError>.Sort
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Comparison`1
    name: Comparison
    nameWithType: Comparison
    fullName: System.Comparison
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort(System.Comparison{`0})
    name: Sort
    nameWithType: List(Of ParseError).Sort
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Comparison`1
    name: Comparison
    nameWithType: Comparison
    fullName: System.Comparison
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.ToArray
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.ToArray
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.ToArray
  name: ToArray()
  nameWithType: List<ParseError>.ToArray()
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.ToArray()
  nameWithType.vb: List(Of ParseError).ToArray()
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).ToArray()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.ToArray
    name: ToArray
    nameWithType: List<ParseError>.ToArray
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.ToArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.ToArray
    name: ToArray
    nameWithType: List(Of ParseError).ToArray
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).ToArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.TrimExcess
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.TrimExcess
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.TrimExcess
  name: TrimExcess()
  nameWithType: List<ParseError>.TrimExcess()
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.TrimExcess()
  nameWithType.vb: List(Of ParseError).TrimExcess()
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).TrimExcess()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.TrimExcess
    name: TrimExcess
    nameWithType: List<ParseError>.TrimExcess
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.TrimExcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.TrimExcess
    name: TrimExcess
    nameWithType: List(Of ParseError).TrimExcess
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).TrimExcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.TrueForAll(System.Predicate{SuperOffice.CRM.ArchiveLists.ParseError})
  commentId: M:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.TrueForAll(System.Predicate{SuperOffice.CRM.ArchiveLists.ParseError})
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
  name: TrueForAll(Predicate<ParseError>)
  nameWithType: List<ParseError>.TrueForAll(Predicate<ParseError>)
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.TrueForAll(System.Predicate<SuperOffice.CRM.ArchiveLists.ParseError>)
  nameWithType.vb: List(Of ParseError).TrueForAll(Predicate(Of ParseError))
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).TrueForAll(System.Predicate(Of SuperOffice.CRM.ArchiveLists.ParseError))
  name.vb: TrueForAll(Predicate(Of ParseError))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
    name: TrueForAll
    nameWithType: List<ParseError>.TrueForAll
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.TrueForAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
    name: TrueForAll
    nameWithType: List(Of ParseError).TrueForAll
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).TrueForAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.Capacity
  commentId: P:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.Capacity
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.Capacity
  name: Capacity
  nameWithType: List<ParseError>.Capacity
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.Capacity
  nameWithType.vb: List(Of ParseError).Capacity
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).Capacity
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.Count
  commentId: P:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.Count
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.Count
  name: Count
  nameWithType: List<ParseError>.Count
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.Count
  nameWithType.vb: List(Of ParseError).Count
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).Count
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.System#Collections#IList#IsFixedSize
  commentId: P:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.System#Collections#IList#IsFixedSize
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.System#Collections#IList#IsFixedSize
  name: IList.IsFixedSize
  nameWithType: List<ParseError>.IList.IsFixedSize
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.System.Collections.IList.IsFixedSize
  nameWithType.vb: List(Of ParseError).System.Collections.IList.IsFixedSize
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).System.Collections.IList.IsFixedSize
  name.vb: System.Collections.IList.IsFixedSize
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.System#Collections#Generic#ICollection{T}#IsReadOnly
  commentId: P:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.System#Collections#Generic#ICollection{T}#IsReadOnly
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  name: ICollection<ParseError>.IsReadOnly
  nameWithType: List<ParseError>.ICollection<ParseError>.IsReadOnly
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.System.Collections.Generic.ICollection<SuperOffice.CRM.ArchiveLists.ParseError>.IsReadOnly
  nameWithType.vb: List(Of ParseError).System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).System.Collections.Generic.ICollection<T>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.System#Collections#IList#IsReadOnly
  commentId: P:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.System#Collections#IList#IsReadOnly
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.System#Collections#IList#IsReadOnly
  name: IList.IsReadOnly
  nameWithType: List<ParseError>.IList.IsReadOnly
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.System.Collections.IList.IsReadOnly
  nameWithType.vb: List(Of ParseError).System.Collections.IList.IsReadOnly
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).System.Collections.IList.IsReadOnly
  name.vb: System.Collections.IList.IsReadOnly
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.System#Collections#ICollection#IsSynchronized
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized
  name: ICollection.IsSynchronized
  nameWithType: List<ParseError>.ICollection.IsSynchronized
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: List(Of ParseError).System.Collections.ICollection.IsSynchronized
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.System#Collections#ICollection#SyncRoot
  commentId: P:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.System#Collections#ICollection#SyncRoot
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot
  name: ICollection.SyncRoot
  nameWithType: List<ParseError>.ICollection.SyncRoot
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: List(Of ParseError).System.Collections.ICollection.SyncRoot
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.Item(System.Int32)
  commentId: P:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.Item(System.Int32)
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.Item(System.Int32)
  name: Item[Int32]
  nameWithType: List<ParseError>.Item[Int32]
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.Item[System.Int32]
  nameWithType.vb: List(Of ParseError).Item(Int32)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Item(System.Int32)
    name: Item
    nameWithType: List<ParseError>.Item
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.List`1.Item(System.Int32)
    name: Item
    nameWithType: List(Of ParseError).Item
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.System#Collections#IList#Item(System.Int32)
  commentId: P:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.System#Collections#IList#Item(System.Int32)
  parent: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}
  definition: System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)
  name: IList.Item[Int32]
  nameWithType: List<ParseError>.IList.Item[Int32]
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.System.Collections.IList.Item[System.Int32]
  nameWithType.vb: List(Of ParseError).System.Collections.IList.Item(Int32)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).System.Collections.IList.Item(System.Int32)
  name.vb: System.Collections.IList.Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)
    name: IList.Item
    nameWithType: List<ParseError>.IList.Item
    fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseError>.System.Collections.IList.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)
    name: System.Collections.IList.Item
    nameWithType: List(Of ParseError).System.Collections.IList.Item
    fullName: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseError).System.Collections.IList.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.ParseErrors.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<ParseErrors, To>()
  nameWithType: EnumUtil.MapEnums<ParseErrors, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.ArchiveLists.ParseErrors, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of ParseErrors, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.ArchiveLists.ParseErrors, To)()
  name.vb: MapEnums(Of ParseErrors, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<ParseErrors, To>
    nameWithType: EnumUtil.MapEnums<ParseErrors, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.ArchiveLists.ParseErrors, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of ParseErrors, To)
    nameWithType: EnumUtil.MapEnums(Of ParseErrors, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.ArchiveLists.ParseErrors, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{SuperOffice.CRM.ArchiveLists.ParseError}.IEnumerableExtensions.ForEach``1(System.Action{SuperOffice.CRM.ArchiveLists.ParseError})
  commentId: M:IEnumerableExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
  parent: IEnumerableExtensions
  definition: IEnumerableExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
  name: ForEach<ParseError>(Action<ParseError>)
  nameWithType: IEnumerableExtensions.ForEach<ParseError>(Action<ParseError>)
  fullName: IEnumerableExtensions.ForEach<SuperOffice.CRM.ArchiveLists.ParseError>(System.Action<SuperOffice.CRM.ArchiveLists.ParseError>)
  nameWithType.vb: IEnumerableExtensions.ForEach(Of ParseError)(Action(Of ParseError))
  fullName.vb: IEnumerableExtensions.ForEach(Of SuperOffice.CRM.ArchiveLists.ParseError)(System.Action(Of SuperOffice.CRM.ArchiveLists.ParseError))
  name.vb: ForEach(Of ParseError)(Action(Of ParseError))
  spec.csharp:
  - uid: IEnumerableExtensions.ForEach``1(System.Action{``0})
    name: ForEach<ParseError>
    nameWithType: IEnumerableExtensions.ForEach<ParseError>
    fullName: IEnumerableExtensions.ForEach<SuperOffice.CRM.ArchiveLists.ParseError>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.ForEach``1(System.Action{``0})
    name: ForEach(Of ParseError)
    nameWithType: IEnumerableExtensions.ForEach(Of ParseError)
    fullName: IEnumerableExtensions.ForEach(Of SuperOffice.CRM.ArchiveLists.ParseError)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{SuperOffice.CRM.ArchiveLists.ParseError}.IEnumerableExtensions.ContainsAny``1(System.Collections.Generic.IEnumerable{SuperOffice.CRM.ArchiveLists.ParseError})
  commentId: M:IEnumerableExtensions.ContainsAny``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  parent: IEnumerableExtensions
  definition: IEnumerableExtensions.ContainsAny``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: ContainsAny<ParseError>(IEnumerable<ParseError>)
  nameWithType: IEnumerableExtensions.ContainsAny<ParseError>(IEnumerable<ParseError>)
  fullName: IEnumerableExtensions.ContainsAny<SuperOffice.CRM.ArchiveLists.ParseError>(System.Collections.Generic.IEnumerable<SuperOffice.CRM.ArchiveLists.ParseError>)
  nameWithType.vb: IEnumerableExtensions.ContainsAny(Of ParseError)(IEnumerable(Of ParseError))
  fullName.vb: IEnumerableExtensions.ContainsAny(Of SuperOffice.CRM.ArchiveLists.ParseError)(System.Collections.Generic.IEnumerable(Of SuperOffice.CRM.ArchiveLists.ParseError))
  name.vb: ContainsAny(Of ParseError)(IEnumerable(Of ParseError))
  spec.csharp:
  - uid: IEnumerableExtensions.ContainsAny``1(System.Collections.Generic.IEnumerable{``0})
    name: ContainsAny<ParseError>
    nameWithType: IEnumerableExtensions.ContainsAny<ParseError>
    fullName: IEnumerableExtensions.ContainsAny<SuperOffice.CRM.ArchiveLists.ParseError>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.ContainsAny``1(System.Collections.Generic.IEnumerable{``0})
    name: ContainsAny(Of ParseError)
    nameWithType: IEnumerableExtensions.ContainsAny(Of ParseError)
    fullName: IEnumerableExtensions.ContainsAny(Of SuperOffice.CRM.ArchiveLists.ParseError)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseError}.IEnumerableExtensions.SplitList``1(System.Int32)
  commentId: M:IEnumerableExtensions.SplitList``1(System.Collections.Generic.List{``0},System.Int32)
  parent: IEnumerableExtensions
  definition: IEnumerableExtensions.SplitList``1(System.Collections.Generic.List{``0},System.Int32)
  name: SplitList<ParseError>(Int32)
  nameWithType: IEnumerableExtensions.SplitList<ParseError>(Int32)
  fullName: IEnumerableExtensions.SplitList<SuperOffice.CRM.ArchiveLists.ParseError>(System.Int32)
  nameWithType.vb: IEnumerableExtensions.SplitList(Of ParseError)(Int32)
  fullName.vb: IEnumerableExtensions.SplitList(Of SuperOffice.CRM.ArchiveLists.ParseError)(System.Int32)
  name.vb: SplitList(Of ParseError)(Int32)
  spec.csharp:
  - uid: IEnumerableExtensions.SplitList``1(System.Int32)
    name: SplitList<ParseError>
    nameWithType: IEnumerableExtensions.SplitList<ParseError>
    fullName: IEnumerableExtensions.SplitList<SuperOffice.CRM.ArchiveLists.ParseError>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.SplitList``1(System.Int32)
    name: SplitList(Of ParseError)
    nameWithType: IEnumerableExtensions.SplitList(Of ParseError)
    fullName: IEnumerableExtensions.SplitList(Of SuperOffice.CRM.ArchiveLists.ParseError)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{SuperOffice.CRM.ArchiveLists.ParseError}.IEnumerableExtensions.Batch``1(System.Int32)
  commentId: M:IEnumerableExtensions.Batch``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  parent: IEnumerableExtensions
  definition: IEnumerableExtensions.Batch``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  name: Batch<ParseError>(Int32)
  nameWithType: IEnumerableExtensions.Batch<ParseError>(Int32)
  fullName: IEnumerableExtensions.Batch<SuperOffice.CRM.ArchiveLists.ParseError>(System.Int32)
  nameWithType.vb: IEnumerableExtensions.Batch(Of ParseError)(Int32)
  fullName.vb: IEnumerableExtensions.Batch(Of SuperOffice.CRM.ArchiveLists.ParseError)(System.Int32)
  name.vb: Batch(Of ParseError)(Int32)
  spec.csharp:
  - uid: IEnumerableExtensions.Batch``1(System.Int32)
    name: Batch<ParseError>
    nameWithType: IEnumerableExtensions.Batch<ParseError>
    fullName: IEnumerableExtensions.Batch<SuperOffice.CRM.ArchiveLists.ParseError>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.Batch``1(System.Int32)
    name: Batch(Of ParseError)
    nameWithType: IEnumerableExtensions.Batch(Of ParseError)
    fullName: IEnumerableExtensions.Batch(Of SuperOffice.CRM.ArchiveLists.ParseError)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{SuperOffice.CRM.ArchiveLists.ParseError}.IEnumerableExtensions.IndexOf``1(SuperOffice.CRM.ArchiveLists.ParseError,System.Int32)
  commentId: M:IEnumerableExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},``0,System.Int32)
  parent: IEnumerableExtensions
  definition: IEnumerableExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},``0,System.Int32)
  name: IndexOf<ParseError>(ParseError, Int32)
  nameWithType: IEnumerableExtensions.IndexOf<ParseError>(ParseError, Int32)
  fullName: IEnumerableExtensions.IndexOf<SuperOffice.CRM.ArchiveLists.ParseError>(SuperOffice.CRM.ArchiveLists.ParseError, System.Int32)
  nameWithType.vb: IEnumerableExtensions.IndexOf(Of ParseError)(ParseError, Int32)
  fullName.vb: IEnumerableExtensions.IndexOf(Of SuperOffice.CRM.ArchiveLists.ParseError)(SuperOffice.CRM.ArchiveLists.ParseError, System.Int32)
  name.vb: IndexOf(Of ParseError)(ParseError, Int32)
  spec.csharp:
  - uid: IEnumerableExtensions.IndexOf``1(``0,System.Int32)
    name: IndexOf<ParseError>
    nameWithType: IEnumerableExtensions.IndexOf<ParseError>
    fullName: IEnumerableExtensions.IndexOf<SuperOffice.CRM.ArchiveLists.ParseError>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.IndexOf``1(``0,System.Int32)
    name: IndexOf(Of ParseError)
    nameWithType: IEnumerableExtensions.IndexOf(Of ParseError)
    fullName: IEnumerableExtensions.IndexOf(Of SuperOffice.CRM.ArchiveLists.ParseError)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{SuperOffice.CRM.ArchiveLists.ParseError}.IEnumerableExtensions.IndexOf``1(System.Func{SuperOffice.CRM.ArchiveLists.ParseError,System.Boolean},System.Int32)
  commentId: M:IEnumerableExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Int32)
  parent: IEnumerableExtensions
  definition: IEnumerableExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Int32)
  name: IndexOf<ParseError>(Func<ParseError, Boolean>, Int32)
  nameWithType: IEnumerableExtensions.IndexOf<ParseError>(Func<ParseError, Boolean>, Int32)
  fullName: IEnumerableExtensions.IndexOf<SuperOffice.CRM.ArchiveLists.ParseError>(System.Func<SuperOffice.CRM.ArchiveLists.ParseError, System.Boolean>, System.Int32)
  nameWithType.vb: IEnumerableExtensions.IndexOf(Of ParseError)(Func(Of ParseError, Boolean), Int32)
  fullName.vb: IEnumerableExtensions.IndexOf(Of SuperOffice.CRM.ArchiveLists.ParseError)(System.Func(Of SuperOffice.CRM.ArchiveLists.ParseError, System.Boolean), System.Int32)
  name.vb: IndexOf(Of ParseError)(Func(Of ParseError, Boolean), Int32)
  spec.csharp:
  - uid: IEnumerableExtensions.IndexOf``1(System.Func{``0,System.Boolean},System.Int32)
    name: IndexOf<ParseError>
    nameWithType: IEnumerableExtensions.IndexOf<ParseError>
    fullName: IEnumerableExtensions.IndexOf<SuperOffice.CRM.ArchiveLists.ParseError>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.IndexOf``1(System.Func{``0,System.Boolean},System.Int32)
    name: IndexOf(Of ParseError)
    nameWithType: IEnumerableExtensions.IndexOf(Of ParseError)
    fullName: IEnumerableExtensions.IndexOf(Of SuperOffice.CRM.ArchiveLists.ParseError)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{SuperOffice.CRM.ArchiveLists.ParseError}.IEnumerableExtensions.Permute``1(System.Int32)
  commentId: M:IEnumerableExtensions.Permute``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  parent: IEnumerableExtensions
  definition: IEnumerableExtensions.Permute``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  name: Permute<ParseError>(Int32)
  nameWithType: IEnumerableExtensions.Permute<ParseError>(Int32)
  fullName: IEnumerableExtensions.Permute<SuperOffice.CRM.ArchiveLists.ParseError>(System.Int32)
  nameWithType.vb: IEnumerableExtensions.Permute(Of ParseError)(Int32)
  fullName.vb: IEnumerableExtensions.Permute(Of SuperOffice.CRM.ArchiveLists.ParseError)(System.Int32)
  name.vb: Permute(Of ParseError)(Int32)
  spec.csharp:
  - uid: IEnumerableExtensions.Permute``1(System.Int32)
    name: Permute<ParseError>
    nameWithType: IEnumerableExtensions.Permute<ParseError>
    fullName: IEnumerableExtensions.Permute<SuperOffice.CRM.ArchiveLists.ParseError>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.Permute``1(System.Int32)
    name: Permute(Of ParseError)
    nameWithType: IEnumerableExtensions.Permute(Of ParseError)
    fullName: IEnumerableExtensions.Permute(Of SuperOffice.CRM.ArchiveLists.ParseError)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{SuperOffice.CRM.ArchiveLists.ParseError}.IEnumerableExtensions.PermissiveToDictionary``3(System.Func{SuperOffice.CRM.ArchiveLists.ParseError,{K}},System.Func{SuperOffice.CRM.ArchiveLists.ParseError,{V}})
  commentId: M:IEnumerableExtensions.PermissiveToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  parent: IEnumerableExtensions
  definition: IEnumerableExtensions.PermissiveToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  name: PermissiveToDictionary<ParseError, K, V>(Func<ParseError, K>, Func<ParseError, V>)
  nameWithType: IEnumerableExtensions.PermissiveToDictionary<ParseError, K, V>(Func<ParseError, K>, Func<ParseError, V>)
  fullName: IEnumerableExtensions.PermissiveToDictionary<SuperOffice.CRM.ArchiveLists.ParseError, K, V>(System.Func<SuperOffice.CRM.ArchiveLists.ParseError, K>, System.Func<SuperOffice.CRM.ArchiveLists.ParseError, V>)
  nameWithType.vb: IEnumerableExtensions.PermissiveToDictionary(Of ParseError, K, V)(Func(Of ParseError, K), Func(Of ParseError, V))
  fullName.vb: IEnumerableExtensions.PermissiveToDictionary(Of SuperOffice.CRM.ArchiveLists.ParseError, K, V)(System.Func(Of SuperOffice.CRM.ArchiveLists.ParseError, K), System.Func(Of SuperOffice.CRM.ArchiveLists.ParseError, V))
  name.vb: PermissiveToDictionary(Of ParseError, K, V)(Func(Of ParseError, K), Func(Of ParseError, V))
  spec.csharp:
  - uid: IEnumerableExtensions.PermissiveToDictionary``3(System.Func{``0,``1},System.Func{``0,``2})
    name: PermissiveToDictionary<ParseError, K, V>
    nameWithType: IEnumerableExtensions.PermissiveToDictionary<ParseError, K, V>
    fullName: IEnumerableExtensions.PermissiveToDictionary<SuperOffice.CRM.ArchiveLists.ParseError, K, V>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: K
    nameWithType: K
    fullName: K
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.PermissiveToDictionary``3(System.Func{``0,``1},System.Func{``0,``2})
    name: PermissiveToDictionary(Of ParseError, K, V)
    nameWithType: IEnumerableExtensions.PermissiveToDictionary(Of ParseError, K, V)
    fullName: IEnumerableExtensions.PermissiveToDictionary(Of SuperOffice.CRM.ArchiveLists.ParseError, K, V)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: K
    nameWithType: K
    fullName: K
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{SuperOffice.CRM.ArchiveLists.ParseError}.IEnumerableExtensions.PermissiveToDictionary``3(System.Func{SuperOffice.CRM.ArchiveLists.ParseError,{K}},System.Func{SuperOffice.CRM.ArchiveLists.ParseError,{V}},System.Collections.Generic.IEqualityComparer{{K}})
  commentId: M:IEnumerableExtensions.PermissiveToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  parent: IEnumerableExtensions
  definition: IEnumerableExtensions.PermissiveToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  name: PermissiveToDictionary<ParseError, K, V>(Func<ParseError, K>, Func<ParseError, V>, IEqualityComparer<K>)
  nameWithType: IEnumerableExtensions.PermissiveToDictionary<ParseError, K, V>(Func<ParseError, K>, Func<ParseError, V>, IEqualityComparer<K>)
  fullName: IEnumerableExtensions.PermissiveToDictionary<SuperOffice.CRM.ArchiveLists.ParseError, K, V>(System.Func<SuperOffice.CRM.ArchiveLists.ParseError, K>, System.Func<SuperOffice.CRM.ArchiveLists.ParseError, V>, System.Collections.Generic.IEqualityComparer<K>)
  nameWithType.vb: IEnumerableExtensions.PermissiveToDictionary(Of ParseError, K, V)(Func(Of ParseError, K), Func(Of ParseError, V), IEqualityComparer(Of K))
  fullName.vb: IEnumerableExtensions.PermissiveToDictionary(Of SuperOffice.CRM.ArchiveLists.ParseError, K, V)(System.Func(Of SuperOffice.CRM.ArchiveLists.ParseError, K), System.Func(Of SuperOffice.CRM.ArchiveLists.ParseError, V), System.Collections.Generic.IEqualityComparer(Of K))
  name.vb: PermissiveToDictionary(Of ParseError, K, V)(Func(Of ParseError, K), Func(Of ParseError, V), IEqualityComparer(Of K))
  spec.csharp:
  - uid: IEnumerableExtensions.PermissiveToDictionary``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: PermissiveToDictionary<ParseError, K, V>
    nameWithType: IEnumerableExtensions.PermissiveToDictionary<ParseError, K, V>
    fullName: IEnumerableExtensions.PermissiveToDictionary<SuperOffice.CRM.ArchiveLists.ParseError, K, V>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: K
    nameWithType: K
    fullName: K
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: K
    nameWithType: K
    fullName: K
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.PermissiveToDictionary``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: PermissiveToDictionary(Of ParseError, K, V)
    nameWithType: IEnumerableExtensions.PermissiveToDictionary(Of ParseError, K, V)
    fullName: IEnumerableExtensions.PermissiveToDictionary(Of SuperOffice.CRM.ArchiveLists.ParseError, K, V)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: K
    nameWithType: K
    fullName: K
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.ParseError
    name: ParseError
    nameWithType: ParseError
    fullName: SuperOffice.CRM.ArchiveLists.ParseError
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: K
    nameWithType: K
    fullName: K
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{SuperOffice.CRM.ArchiveLists.ParseError}.IEnumerableExtensions.GetDifferentCombinations``1(System.Int32)
  commentId: M:IEnumerableExtensions.GetDifferentCombinations``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  parent: IEnumerableExtensions
  definition: IEnumerableExtensions.GetDifferentCombinations``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  name: GetDifferentCombinations<ParseError>(Int32)
  nameWithType: IEnumerableExtensions.GetDifferentCombinations<ParseError>(Int32)
  fullName: IEnumerableExtensions.GetDifferentCombinations<SuperOffice.CRM.ArchiveLists.ParseError>(System.Int32)
  nameWithType.vb: IEnumerableExtensions.GetDifferentCombinations(Of ParseError)(Int32)
  fullName.vb: IEnumerableExtensions.GetDifferentCombinations(Of SuperOffice.CRM.ArchiveLists.ParseError)(System.Int32)
  name.vb: GetDifferentCombinations(Of ParseError)(Int32)
  spec.csharp:
  - uid: IEnumerableExtensions.GetDifferentCombinations``1(System.Int32)
    name: GetDifferentCombinations<ParseError>
    nameWithType: IEnumerableExtensions.GetDifferentCombinations<ParseError>
    fullName: IEnumerableExtensions.GetDifferentCombinations<SuperOffice.CRM.ArchiveLists.ParseError>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.GetDifferentCombinations``1(System.Int32)
    name: GetDifferentCombinations(Of ParseError)
    nameWithType: IEnumerableExtensions.GetDifferentCombinations(Of ParseError)
    fullName: IEnumerableExtensions.GetDifferentCombinations(Of SuperOffice.CRM.ArchiveLists.ParseError)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{SuperOffice.CRM.ArchiveLists.ParseError}.SuperOffice.Util.CollectionOps.AtLeastOne``1
  commentId: M:SuperOffice.Util.CollectionOps.AtLeastOne``1(System.Collections.Generic.IEnumerable{``0})
  parent: SuperOffice.Util.CollectionOps
  definition: SuperOffice.Util.CollectionOps.AtLeastOne``1(System.Collections.Generic.IEnumerable{``0})
  name: AtLeastOne<ParseError>()
  nameWithType: CollectionOps.AtLeastOne<ParseError>()
  fullName: SuperOffice.Util.CollectionOps.AtLeastOne<SuperOffice.CRM.ArchiveLists.ParseError>()
  nameWithType.vb: CollectionOps.AtLeastOne(Of ParseError)()
  fullName.vb: SuperOffice.Util.CollectionOps.AtLeastOne(Of SuperOffice.CRM.ArchiveLists.ParseError)()
  name.vb: AtLeastOne(Of ParseError)()
  spec.csharp:
  - uid: SuperOffice.Util.CollectionOps.AtLeastOne``1
    name: AtLeastOne<ParseError>
    nameWithType: CollectionOps.AtLeastOne<ParseError>
    fullName: SuperOffice.Util.CollectionOps.AtLeastOne<SuperOffice.CRM.ArchiveLists.ParseError>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.CollectionOps.AtLeastOne``1
    name: AtLeastOne(Of ParseError)
    nameWithType: CollectionOps.AtLeastOne(Of ParseError)
    fullName: SuperOffice.Util.CollectionOps.AtLeastOne(Of SuperOffice.CRM.ArchiveLists.ParseError)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.ParseErrors.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.ArchiveLists.ParseErrors)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<ParseErrors>(ParseErrors)
  nameWithType: ObjectExtensions.AssignByReflection<ParseErrors>(ParseErrors)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.ArchiveLists.ParseErrors>(SuperOffice.CRM.ArchiveLists.ParseErrors)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of ParseErrors)(ParseErrors)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.ArchiveLists.ParseErrors)(SuperOffice.CRM.ArchiveLists.ParseErrors)
  name.vb: AssignByReflection(Of ParseErrors)(ParseErrors)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<ParseErrors>
    nameWithType: ObjectExtensions.AssignByReflection<ParseErrors>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.ArchiveLists.ParseErrors>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ParseErrors
    name: ParseErrors
    nameWithType: ParseErrors
    fullName: SuperOffice.CRM.ArchiveLists.ParseErrors
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of ParseErrors)
    nameWithType: ObjectExtensions.AssignByReflection(Of ParseErrors)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.ArchiveLists.ParseErrors)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ParseErrors
    name: ParseErrors
    nameWithType: ParseErrors
    fullName: SuperOffice.CRM.ArchiveLists.ParseErrors
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.ParseErrors.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<ParseErrors>()
  nameWithType: ObjectExtensions.GraphCopy<ParseErrors>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.ArchiveLists.ParseErrors>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of ParseErrors)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.ArchiveLists.ParseErrors)()
  name.vb: GraphCopy(Of ParseErrors)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<ParseErrors>
    nameWithType: ObjectExtensions.GraphCopy<ParseErrors>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.ArchiveLists.ParseErrors>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of ParseErrors)
    nameWithType: ObjectExtensions.GraphCopy(Of ParseErrors)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.ArchiveLists.ParseErrors)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.ParseErrors.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<ParseErrors, To>()
  nameWithType: Converters.MapEnums<ParseErrors, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.ArchiveLists.ParseErrors, To>()
  nameWithType.vb: Converters.MapEnums(Of ParseErrors, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.ArchiveLists.ParseErrors, To)()
  name.vb: MapEnums(Of ParseErrors, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<ParseErrors, To>
    nameWithType: Converters.MapEnums<ParseErrors, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.ArchiveLists.ParseErrors, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of ParseErrors, To)
    nameWithType: Converters.MapEnums(Of ParseErrors, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.ArchiveLists.ParseErrors, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IList#get_Item(System.Int32)
  commentId: M:System.Collections.Generic.List`1.System#Collections#IList#get_Item(System.Int32)
  isExternal: true
  name: IList.get_Item(Int32)
  nameWithType: List<T>.IList.get_Item(Int32)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.get_Item(System.Int32)
  nameWithType.vb: List(Of T).System.Collections.IList.get_Item(Int32)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.get_Item(System.Int32)
  name.vb: System.Collections.IList.get_Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#get_Item(System.Int32)
    name: IList.get_Item
    nameWithType: List<T>.IList.get_Item
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#get_Item(System.Int32)
    name: System.Collections.IList.get_Item
    nameWithType: List(Of T).System.Collections.IList.get_Item
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  commentId: M:System.Collections.Generic.List`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  isExternal: true
  name: IList.set_Item(Int32, Object)
  nameWithType: List<T>.IList.set_Item(Int32, Object)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.set_Item(System.Int32, System.Object)
  nameWithType.vb: List(Of T).System.Collections.IList.set_Item(Int32, Object)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.set_Item(System.Int32, System.Object)
  name.vb: System.Collections.IList.set_Item(Int32, Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: IList.set_Item
    nameWithType: List<T>.IList.set_Item
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: System.Collections.IList.set_Item
    nameWithType: List(Of T).System.Collections.IList.set_Item
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Add(`0)
  commentId: M:System.Collections.Generic.List`1.Add(`0)
  isExternal: true
  name: Add(T)
  nameWithType: List<T>.Add(T)
  fullName: System.Collections.Generic.List<T>.Add(T)
  nameWithType.vb: List(Of T).Add(T)
  fullName.vb: System.Collections.Generic.List(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Add(`0)
    name: Add
    nameWithType: List<T>.Add
    fullName: System.Collections.Generic.List<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Add(`0)
    name: Add
    nameWithType: List(Of T).Add
    fullName: System.Collections.Generic.List(Of T).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)
  commentId: M:System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)
  isExternal: true
  name: IList.Add(Object)
  nameWithType: List<T>.IList.Add(Object)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.Add(System.Object)
  nameWithType.vb: List(Of T).System.Collections.IList.Add(Object)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.Add(System.Object)
  name.vb: System.Collections.IList.Add(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)
    name: IList.Add
    nameWithType: List<T>.IList.Add
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)
    name: System.Collections.IList.Add
    nameWithType: List(Of T).System.Collections.IList.Add
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: AddRange(IEnumerable<T>)
  nameWithType: List<T>.AddRange(IEnumerable<T>)
  fullName: System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: List(Of T).AddRange(IEnumerable(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).AddRange(System.Collections.Generic.IEnumerable(Of T))
  name.vb: AddRange(IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    nameWithType: List<T>.AddRange
    fullName: System.Collections.Generic.List<T>.AddRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    nameWithType: List(Of T).AddRange
    fullName: System.Collections.Generic.List(Of T).AddRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.AsReadOnly
  commentId: M:System.Collections.Generic.List`1.AsReadOnly
  isExternal: true
  name: AsReadOnly()
  nameWithType: List<T>.AsReadOnly()
  fullName: System.Collections.Generic.List<T>.AsReadOnly()
  nameWithType.vb: List(Of T).AsReadOnly()
  fullName.vb: System.Collections.Generic.List(Of T).AsReadOnly()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.AsReadOnly
    name: AsReadOnly
    nameWithType: List<T>.AsReadOnly
    fullName: System.Collections.Generic.List<T>.AsReadOnly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.AsReadOnly
    name: AsReadOnly
    nameWithType: List(Of T).AsReadOnly
    fullName: System.Collections.Generic.List(Of T).AsReadOnly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
  commentId: M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
  isExternal: true
  name: BinarySearch(Int32, Int32, T, IComparer<T>)
  nameWithType: List<T>.BinarySearch(Int32, Int32, T, IComparer<T>)
  fullName: System.Collections.Generic.List<T>.BinarySearch(System.Int32, System.Int32, T, System.Collections.Generic.IComparer<T>)
  nameWithType.vb: List(Of T).BinarySearch(Int32, Int32, T, IComparer(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).BinarySearch(System.Int32, System.Int32, T, System.Collections.Generic.IComparer(Of T))
  name.vb: BinarySearch(Int32, Int32, T, IComparer(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List<T>.BinarySearch
    fullName: System.Collections.Generic.List<T>.BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List(Of T).BinarySearch
    fullName: System.Collections.Generic.List(Of T).BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.BinarySearch(`0)
  commentId: M:System.Collections.Generic.List`1.BinarySearch(`0)
  isExternal: true
  name: BinarySearch(T)
  nameWithType: List<T>.BinarySearch(T)
  fullName: System.Collections.Generic.List<T>.BinarySearch(T)
  nameWithType.vb: List(Of T).BinarySearch(T)
  fullName.vb: System.Collections.Generic.List(Of T).BinarySearch(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0)
    name: BinarySearch
    nameWithType: List<T>.BinarySearch
    fullName: System.Collections.Generic.List<T>.BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0)
    name: BinarySearch
    nameWithType: List(Of T).BinarySearch
    fullName: System.Collections.Generic.List(Of T).BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
  commentId: M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
  isExternal: true
  name: BinarySearch(T, IComparer<T>)
  nameWithType: List<T>.BinarySearch(T, IComparer<T>)
  fullName: System.Collections.Generic.List<T>.BinarySearch(T, System.Collections.Generic.IComparer<T>)
  nameWithType.vb: List(Of T).BinarySearch(T, IComparer(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).BinarySearch(T, System.Collections.Generic.IComparer(Of T))
  name.vb: BinarySearch(T, IComparer(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List<T>.BinarySearch
    fullName: System.Collections.Generic.List<T>.BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List(Of T).BinarySearch
    fullName: System.Collections.Generic.List(Of T).BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Clear
  commentId: M:System.Collections.Generic.List`1.Clear
  isExternal: true
  name: Clear()
  nameWithType: List<T>.Clear()
  fullName: System.Collections.Generic.List<T>.Clear()
  nameWithType.vb: List(Of T).Clear()
  fullName.vb: System.Collections.Generic.List(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Clear
    name: Clear
    nameWithType: List<T>.Clear
    fullName: System.Collections.Generic.List<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Clear
    name: Clear
    nameWithType: List(Of T).Clear
    fullName: System.Collections.Generic.List(Of T).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Contains(`0)
  commentId: M:System.Collections.Generic.List`1.Contains(`0)
  isExternal: true
  name: Contains(T)
  nameWithType: List<T>.Contains(T)
  fullName: System.Collections.Generic.List<T>.Contains(T)
  nameWithType.vb: List(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.List(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Contains(`0)
    name: Contains
    nameWithType: List<T>.Contains
    fullName: System.Collections.Generic.List<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Contains(`0)
    name: Contains
    nameWithType: List(Of T).Contains
    fullName: System.Collections.Generic.List(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)
  commentId: M:System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)
  isExternal: true
  name: IList.Contains(Object)
  nameWithType: List<T>.IList.Contains(Object)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.Contains(System.Object)
  nameWithType.vb: List(Of T).System.Collections.IList.Contains(Object)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.Contains(System.Object)
  name.vb: System.Collections.IList.Contains(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)
    name: IList.Contains
    nameWithType: List<T>.IList.Contains
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)
    name: System.Collections.IList.Contains
    nameWithType: List(Of T).System.Collections.IList.Contains
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
  commentId: M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
  isExternal: true
  name: ConvertAll<TOutput>(Converter<T, TOutput>)
  nameWithType: List<T>.ConvertAll<TOutput>(Converter<T, TOutput>)
  fullName: System.Collections.Generic.List<T>.ConvertAll<TOutput>(System.Converter<T, TOutput>)
  nameWithType.vb: List(Of T).ConvertAll(Of TOutput)(Converter(Of T, TOutput))
  fullName.vb: System.Collections.Generic.List(Of T).ConvertAll(Of TOutput)(System.Converter(Of T, TOutput))
  name.vb: ConvertAll(Of TOutput)(Converter(Of T, TOutput))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
    name: ConvertAll<TOutput>
    nameWithType: List<T>.ConvertAll<TOutput>
    fullName: System.Collections.Generic.List<T>.ConvertAll<TOutput>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Converter`2
    name: Converter
    nameWithType: Converter
    fullName: System.Converter
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOutput
    nameWithType: TOutput
    fullName: TOutput
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
    name: ConvertAll(Of TOutput)
    nameWithType: List(Of T).ConvertAll(Of TOutput)
    fullName: System.Collections.Generic.List(Of T).ConvertAll(Of TOutput)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Converter`2
    name: Converter
    nameWithType: Converter
    fullName: System.Converter
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOutput
    nameWithType: TOutput
    fullName: TOutput
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.CopyTo(`0[])
  commentId: M:System.Collections.Generic.List`1.CopyTo(`0[])
  isExternal: true
  name: CopyTo(T[])
  nameWithType: List<T>.CopyTo(T[])
  fullName: System.Collections.Generic.List<T>.CopyTo(T[])
  nameWithType.vb: List(Of T).CopyTo(T())
  fullName.vb: System.Collections.Generic.List(Of T).CopyTo(T())
  name.vb: CopyTo(T())
  spec.csharp:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[])
    name: CopyTo
    nameWithType: List<T>.CopyTo
    fullName: System.Collections.Generic.List<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[])
    name: CopyTo
    nameWithType: List(Of T).CopyTo
    fullName: System.Collections.Generic.List(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isExternal: true
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: List<T>.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.Generic.List<T>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: List(Of T).System.Collections.ICollection.CopyTo(Array, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: List<T>.ICollection.CopyTo
    fullName: System.Collections.Generic.List<T>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: List(Of T).System.Collections.ICollection.CopyTo
    fullName: System.Collections.Generic.List(Of T).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
  isExternal: true
  name: CopyTo(Int32, T[], Int32, Int32)
  nameWithType: List<T>.CopyTo(Int32, T[], Int32, Int32)
  fullName: System.Collections.Generic.List<T>.CopyTo(System.Int32, T[], System.Int32, System.Int32)
  nameWithType.vb: List(Of T).CopyTo(Int32, T(), Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).CopyTo(System.Int32, T(), System.Int32, System.Int32)
  name.vb: CopyTo(Int32, T(), Int32, Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
    name: CopyTo
    nameWithType: List<T>.CopyTo
    fullName: System.Collections.Generic.List<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
    name: CopyTo
    nameWithType: List(Of T).CopyTo
    fullName: System.Collections.Generic.List(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  nameWithType: List<T>.CopyTo(T[], Int32)
  fullName: System.Collections.Generic.List<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: List(Of T).CopyTo(T(), Int32)
  fullName.vb: System.Collections.Generic.List(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: List<T>.CopyTo
    fullName: System.Collections.Generic.List<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: List(Of T).CopyTo
    fullName: System.Collections.Generic.List(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Exists(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})
  isExternal: true
  name: Exists(Predicate<T>)
  nameWithType: List<T>.Exists(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.Exists(System.Predicate<T>)
  nameWithType.vb: List(Of T).Exists(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).Exists(System.Predicate(Of T))
  name.vb: Exists(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Exists(System.Predicate{`0})
    name: Exists
    nameWithType: List<T>.Exists
    fullName: System.Collections.Generic.List<T>.Exists
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Exists(System.Predicate{`0})
    name: Exists
    nameWithType: List(Of T).Exists
    fullName: System.Collections.Generic.List(Of T).Exists
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Find(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.Find(System.Predicate{`0})
  isExternal: true
  name: Find(Predicate<T>)
  nameWithType: List<T>.Find(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.Find(System.Predicate<T>)
  nameWithType.vb: List(Of T).Find(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).Find(System.Predicate(Of T))
  name.vb: Find(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Find(System.Predicate{`0})
    name: Find
    nameWithType: List<T>.Find
    fullName: System.Collections.Generic.List<T>.Find
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Find(System.Predicate{`0})
    name: Find
    nameWithType: List(Of T).Find
    fullName: System.Collections.Generic.List(Of T).Find
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
  isExternal: true
  name: FindAll(Predicate<T>)
  nameWithType: List<T>.FindAll(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindAll(System.Predicate<T>)
  nameWithType.vb: List(Of T).FindAll(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindAll(System.Predicate(Of T))
  name.vb: FindAll(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
    name: FindAll
    nameWithType: List<T>.FindAll
    fullName: System.Collections.Generic.List<T>.FindAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
    name: FindAll
    nameWithType: List(Of T).FindAll
    fullName: System.Collections.Generic.List(Of T).FindAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
  isExternal: true
  name: FindIndex(Predicate<T>)
  nameWithType: List<T>.FindIndex(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindIndex(System.Predicate<T>)
  nameWithType.vb: List(Of T).FindIndex(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindIndex(System.Predicate(Of T))
  name.vb: FindIndex(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
    name: FindIndex
    nameWithType: List<T>.FindIndex
    fullName: System.Collections.Generic.List<T>.FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
    name: FindIndex
    nameWithType: List(Of T).FindIndex
    fullName: System.Collections.Generic.List(Of T).FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
  isExternal: true
  name: FindIndex(Int32, Predicate<T>)
  nameWithType: List<T>.FindIndex(Int32, Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindIndex(System.Int32, System.Predicate<T>)
  nameWithType.vb: List(Of T).FindIndex(Int32, Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindIndex(System.Int32, System.Predicate(Of T))
  name.vb: FindIndex(Int32, Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List<T>.FindIndex
    fullName: System.Collections.Generic.List<T>.FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List(Of T).FindIndex
    fullName: System.Collections.Generic.List(Of T).FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
  isExternal: true
  name: FindIndex(Int32, Int32, Predicate<T>)
  nameWithType: List<T>.FindIndex(Int32, Int32, Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindIndex(System.Int32, System.Int32, System.Predicate<T>)
  nameWithType.vb: List(Of T).FindIndex(Int32, Int32, Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindIndex(System.Int32, System.Int32, System.Predicate(Of T))
  name.vb: FindIndex(Int32, Int32, Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List<T>.FindIndex
    fullName: System.Collections.Generic.List<T>.FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List(Of T).FindIndex
    fullName: System.Collections.Generic.List(Of T).FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
  isExternal: true
  name: FindLast(Predicate<T>)
  nameWithType: List<T>.FindLast(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindLast(System.Predicate<T>)
  nameWithType.vb: List(Of T).FindLast(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindLast(System.Predicate(Of T))
  name.vb: FindLast(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
    name: FindLast
    nameWithType: List<T>.FindLast
    fullName: System.Collections.Generic.List<T>.FindLast
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
    name: FindLast
    nameWithType: List(Of T).FindLast
    fullName: System.Collections.Generic.List(Of T).FindLast
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
  isExternal: true
  name: FindLastIndex(Predicate<T>)
  nameWithType: List<T>.FindLastIndex(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindLastIndex(System.Predicate<T>)
  nameWithType.vb: List(Of T).FindLastIndex(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindLastIndex(System.Predicate(Of T))
  name.vb: FindLastIndex(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List<T>.FindLastIndex
    fullName: System.Collections.Generic.List<T>.FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List(Of T).FindLastIndex
    fullName: System.Collections.Generic.List(Of T).FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
  isExternal: true
  name: FindLastIndex(Int32, Predicate<T>)
  nameWithType: List<T>.FindLastIndex(Int32, Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindLastIndex(System.Int32, System.Predicate<T>)
  nameWithType.vb: List(Of T).FindLastIndex(Int32, Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindLastIndex(System.Int32, System.Predicate(Of T))
  name.vb: FindLastIndex(Int32, Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List<T>.FindLastIndex
    fullName: System.Collections.Generic.List<T>.FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List(Of T).FindLastIndex
    fullName: System.Collections.Generic.List(Of T).FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
  isExternal: true
  name: FindLastIndex(Int32, Int32, Predicate<T>)
  nameWithType: List<T>.FindLastIndex(Int32, Int32, Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindLastIndex(System.Int32, System.Int32, System.Predicate<T>)
  nameWithType.vb: List(Of T).FindLastIndex(Int32, Int32, Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindLastIndex(System.Int32, System.Int32, System.Predicate(Of T))
  name.vb: FindLastIndex(Int32, Int32, Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List<T>.FindLastIndex
    fullName: System.Collections.Generic.List<T>.FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List(Of T).FindLastIndex
    fullName: System.Collections.Generic.List(Of T).FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.ForEach(System.Action{`0})
  commentId: M:System.Collections.Generic.List`1.ForEach(System.Action{`0})
  isExternal: true
  name: ForEach(Action<T>)
  nameWithType: List<T>.ForEach(Action<T>)
  fullName: System.Collections.Generic.List<T>.ForEach(System.Action<T>)
  nameWithType.vb: List(Of T).ForEach(Action(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).ForEach(System.Action(Of T))
  name.vb: ForEach(Action(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.ForEach(System.Action{`0})
    name: ForEach
    nameWithType: List<T>.ForEach
    fullName: System.Collections.Generic.List<T>.ForEach
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.ForEach(System.Action{`0})
    name: ForEach
    nameWithType: List(Of T).ForEach
    fullName: System.Collections.Generic.List(Of T).ForEach
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.GetEnumerator
  commentId: M:System.Collections.Generic.List`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: List<T>.GetEnumerator()
  fullName: System.Collections.Generic.List<T>.GetEnumerator()
  nameWithType.vb: List(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.List(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.GetEnumerator
    name: GetEnumerator
    nameWithType: List<T>.GetEnumerator
    fullName: System.Collections.Generic.List<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.GetEnumerator
    name: GetEnumerator
    nameWithType: List(Of T).GetEnumerator
    fullName: System.Collections.Generic.List(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  commentId: M:System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  isExternal: true
  name: IEnumerable<T>.GetEnumerator()
  nameWithType: List<T>.IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.List<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: List(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
    name: IEnumerable<T>.GetEnumerator
    nameWithType: List<T>.IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.List<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
    name: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    nameWithType: List(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.List(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator
  isExternal: true
  name: IEnumerable.GetEnumerator()
  nameWithType: List<T>.IEnumerable.GetEnumerator()
  fullName: System.Collections.Generic.List<T>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: List(Of T).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: List<T>.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.List<T>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: List(Of T).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.List(Of T).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
  isExternal: true
  name: GetRange(Int32, Int32)
  nameWithType: List<T>.GetRange(Int32, Int32)
  fullName: System.Collections.Generic.List<T>.GetRange(System.Int32, System.Int32)
  nameWithType.vb: List(Of T).GetRange(Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).GetRange(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
    name: GetRange
    nameWithType: List<T>.GetRange
    fullName: System.Collections.Generic.List<T>.GetRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
    name: GetRange
    nameWithType: List(Of T).GetRange
    fullName: System.Collections.Generic.List(Of T).GetRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.IndexOf(`0)
  commentId: M:System.Collections.Generic.List`1.IndexOf(`0)
  isExternal: true
  name: IndexOf(T)
  nameWithType: List<T>.IndexOf(T)
  fullName: System.Collections.Generic.List<T>.IndexOf(T)
  nameWithType.vb: List(Of T).IndexOf(T)
  fullName.vb: System.Collections.Generic.List(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.IndexOf(`0)
    name: IndexOf
    nameWithType: List<T>.IndexOf
    fullName: System.Collections.Generic.List<T>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.IndexOf(`0)
    name: IndexOf
    nameWithType: List(Of T).IndexOf
    fullName: System.Collections.Generic.List(Of T).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)
  commentId: M:System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)
  isExternal: true
  name: IList.IndexOf(Object)
  nameWithType: List<T>.IList.IndexOf(Object)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.IndexOf(System.Object)
  nameWithType.vb: List(Of T).System.Collections.IList.IndexOf(Object)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.IndexOf(System.Object)
  name.vb: System.Collections.IList.IndexOf(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)
    name: IList.IndexOf
    nameWithType: List<T>.IList.IndexOf
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)
    name: System.Collections.IList.IndexOf
    nameWithType: List(Of T).System.Collections.IList.IndexOf
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
  commentId: M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
  isExternal: true
  name: IndexOf(T, Int32)
  nameWithType: List<T>.IndexOf(T, Int32)
  fullName: System.Collections.Generic.List<T>.IndexOf(T, System.Int32)
  nameWithType.vb: List(Of T).IndexOf(T, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).IndexOf(T, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
    name: IndexOf
    nameWithType: List<T>.IndexOf
    fullName: System.Collections.Generic.List<T>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
    name: IndexOf
    nameWithType: List(Of T).IndexOf
    fullName: System.Collections.Generic.List(Of T).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
  isExternal: true
  name: IndexOf(T, Int32, Int32)
  nameWithType: List<T>.IndexOf(T, Int32, Int32)
  fullName: System.Collections.Generic.List<T>.IndexOf(T, System.Int32, System.Int32)
  nameWithType.vb: List(Of T).IndexOf(T, Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).IndexOf(T, System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
    name: IndexOf
    nameWithType: List<T>.IndexOf
    fullName: System.Collections.Generic.List<T>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
    name: IndexOf
    nameWithType: List(Of T).IndexOf
    fullName: System.Collections.Generic.List(Of T).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Insert(System.Int32,`0)
  commentId: M:System.Collections.Generic.List`1.Insert(System.Int32,`0)
  isExternal: true
  name: Insert(Int32, T)
  nameWithType: List<T>.Insert(Int32, T)
  fullName: System.Collections.Generic.List<T>.Insert(System.Int32, T)
  nameWithType.vb: List(Of T).Insert(Int32, T)
  fullName.vb: System.Collections.Generic.List(Of T).Insert(System.Int32, T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: List<T>.Insert
    fullName: System.Collections.Generic.List<T>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: List(Of T).Insert
    fullName: System.Collections.Generic.List(Of T).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)
  commentId: M:System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)
  isExternal: true
  name: IList.Insert(Int32, Object)
  nameWithType: List<T>.IList.Insert(Int32, Object)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.Insert(System.Int32, System.Object)
  nameWithType.vb: List(Of T).System.Collections.IList.Insert(Int32, Object)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.Insert(System.Int32, System.Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: IList.Insert
    nameWithType: List<T>.IList.Insert
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: System.Collections.IList.Insert
    nameWithType: List(Of T).System.Collections.IList.Insert
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: InsertRange(Int32, IEnumerable<T>)
  nameWithType: List<T>.InsertRange(Int32, IEnumerable<T>)
  fullName: System.Collections.Generic.List<T>.InsertRange(System.Int32, System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: List(Of T).InsertRange(Int32, IEnumerable(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).InsertRange(System.Int32, System.Collections.Generic.IEnumerable(Of T))
  name.vb: InsertRange(Int32, IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
    name: InsertRange
    nameWithType: List<T>.InsertRange
    fullName: System.Collections.Generic.List<T>.InsertRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
    name: InsertRange
    nameWithType: List(Of T).InsertRange
    fullName: System.Collections.Generic.List(Of T).InsertRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.LastIndexOf(`0)
  commentId: M:System.Collections.Generic.List`1.LastIndexOf(`0)
  isExternal: true
  name: LastIndexOf(T)
  nameWithType: List<T>.LastIndexOf(T)
  fullName: System.Collections.Generic.List<T>.LastIndexOf(T)
  nameWithType.vb: List(Of T).LastIndexOf(T)
  fullName.vb: System.Collections.Generic.List(Of T).LastIndexOf(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0)
    name: LastIndexOf
    nameWithType: List<T>.LastIndexOf
    fullName: System.Collections.Generic.List<T>.LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0)
    name: LastIndexOf
    nameWithType: List(Of T).LastIndexOf
    fullName: System.Collections.Generic.List(Of T).LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
  commentId: M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
  isExternal: true
  name: LastIndexOf(T, Int32)
  nameWithType: List<T>.LastIndexOf(T, Int32)
  fullName: System.Collections.Generic.List<T>.LastIndexOf(T, System.Int32)
  nameWithType.vb: List(Of T).LastIndexOf(T, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).LastIndexOf(T, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
    name: LastIndexOf
    nameWithType: List<T>.LastIndexOf
    fullName: System.Collections.Generic.List<T>.LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
    name: LastIndexOf
    nameWithType: List(Of T).LastIndexOf
    fullName: System.Collections.Generic.List(Of T).LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
  isExternal: true
  name: LastIndexOf(T, Int32, Int32)
  nameWithType: List<T>.LastIndexOf(T, Int32, Int32)
  fullName: System.Collections.Generic.List<T>.LastIndexOf(T, System.Int32, System.Int32)
  nameWithType.vb: List(Of T).LastIndexOf(T, Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).LastIndexOf(T, System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
    name: LastIndexOf
    nameWithType: List<T>.LastIndexOf
    fullName: System.Collections.Generic.List<T>.LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
    name: LastIndexOf
    nameWithType: List(Of T).LastIndexOf
    fullName: System.Collections.Generic.List(Of T).LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Remove(`0)
  commentId: M:System.Collections.Generic.List`1.Remove(`0)
  isExternal: true
  name: Remove(T)
  nameWithType: List<T>.Remove(T)
  fullName: System.Collections.Generic.List<T>.Remove(T)
  nameWithType.vb: List(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.List(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Remove(`0)
    name: Remove
    nameWithType: List<T>.Remove
    fullName: System.Collections.Generic.List<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Remove(`0)
    name: Remove
    nameWithType: List(Of T).Remove
    fullName: System.Collections.Generic.List(Of T).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)
  commentId: M:System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)
  isExternal: true
  name: IList.Remove(Object)
  nameWithType: List<T>.IList.Remove(Object)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.Remove(System.Object)
  nameWithType.vb: List(Of T).System.Collections.IList.Remove(Object)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.Remove(System.Object)
  name.vb: System.Collections.IList.Remove(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)
    name: IList.Remove
    nameWithType: List<T>.IList.Remove
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)
    name: System.Collections.IList.Remove
    nameWithType: List(Of T).System.Collections.IList.Remove
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
  isExternal: true
  name: RemoveAll(Predicate<T>)
  nameWithType: List<T>.RemoveAll(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.RemoveAll(System.Predicate<T>)
  nameWithType.vb: List(Of T).RemoveAll(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).RemoveAll(System.Predicate(Of T))
  name.vb: RemoveAll(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
    name: RemoveAll
    nameWithType: List<T>.RemoveAll
    fullName: System.Collections.Generic.List<T>.RemoveAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
    name: RemoveAll
    nameWithType: List(Of T).RemoveAll
    fullName: System.Collections.Generic.List(Of T).RemoveAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.List`1.RemoveAt(System.Int32)
  isExternal: true
  name: RemoveAt(Int32)
  nameWithType: List<T>.RemoveAt(Int32)
  fullName: System.Collections.Generic.List<T>.RemoveAt(System.Int32)
  nameWithType.vb: List(Of T).RemoveAt(Int32)
  fullName.vb: System.Collections.Generic.List(Of T).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: List<T>.RemoveAt
    fullName: System.Collections.Generic.List<T>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: List(Of T).RemoveAt
    fullName: System.Collections.Generic.List(Of T).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
  isExternal: true
  name: RemoveRange(Int32, Int32)
  nameWithType: List<T>.RemoveRange(Int32, Int32)
  fullName: System.Collections.Generic.List<T>.RemoveRange(System.Int32, System.Int32)
  nameWithType.vb: List(Of T).RemoveRange(Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).RemoveRange(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
    name: RemoveRange
    nameWithType: List<T>.RemoveRange
    fullName: System.Collections.Generic.List<T>.RemoveRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
    name: RemoveRange
    nameWithType: List(Of T).RemoveRange
    fullName: System.Collections.Generic.List(Of T).RemoveRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Reverse
  commentId: M:System.Collections.Generic.List`1.Reverse
  isExternal: true
  name: Reverse()
  nameWithType: List<T>.Reverse()
  fullName: System.Collections.Generic.List<T>.Reverse()
  nameWithType.vb: List(Of T).Reverse()
  fullName.vb: System.Collections.Generic.List(Of T).Reverse()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Reverse
    name: Reverse
    nameWithType: List<T>.Reverse
    fullName: System.Collections.Generic.List<T>.Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Reverse
    name: Reverse
    nameWithType: List(Of T).Reverse
    fullName: System.Collections.Generic.List(Of T).Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
  isExternal: true
  name: Reverse(Int32, Int32)
  nameWithType: List<T>.Reverse(Int32, Int32)
  fullName: System.Collections.Generic.List<T>.Reverse(System.Int32, System.Int32)
  nameWithType.vb: List(Of T).Reverse(Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).Reverse(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
    name: Reverse
    nameWithType: List<T>.Reverse
    fullName: System.Collections.Generic.List<T>.Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
    name: Reverse
    nameWithType: List(Of T).Reverse
    fullName: System.Collections.Generic.List(Of T).Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Sort
  commentId: M:System.Collections.Generic.List`1.Sort
  isExternal: true
  name: Sort()
  nameWithType: List<T>.Sort()
  fullName: System.Collections.Generic.List<T>.Sort()
  nameWithType.vb: List(Of T).Sort()
  fullName.vb: System.Collections.Generic.List(Of T).Sort()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort
    name: Sort
    nameWithType: List<T>.Sort
    fullName: System.Collections.Generic.List<T>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort
    name: Sort
    nameWithType: List(Of T).Sort
    fullName: System.Collections.Generic.List(Of T).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
  commentId: M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
  isExternal: true
  name: Sort(IComparer<T>)
  nameWithType: List<T>.Sort(IComparer<T>)
  fullName: System.Collections.Generic.List<T>.Sort(System.Collections.Generic.IComparer<T>)
  nameWithType.vb: List(Of T).Sort(IComparer(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).Sort(System.Collections.Generic.IComparer(Of T))
  name.vb: Sort(IComparer(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List<T>.Sort
    fullName: System.Collections.Generic.List<T>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List(Of T).Sort
    fullName: System.Collections.Generic.List(Of T).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
  commentId: M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
  isExternal: true
  name: Sort(Int32, Int32, IComparer<T>)
  nameWithType: List<T>.Sort(Int32, Int32, IComparer<T>)
  fullName: System.Collections.Generic.List<T>.Sort(System.Int32, System.Int32, System.Collections.Generic.IComparer<T>)
  nameWithType.vb: List(Of T).Sort(Int32, Int32, IComparer(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).Sort(System.Int32, System.Int32, System.Collections.Generic.IComparer(Of T))
  name.vb: Sort(Int32, Int32, IComparer(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List<T>.Sort
    fullName: System.Collections.Generic.List<T>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List(Of T).Sort
    fullName: System.Collections.Generic.List(Of T).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Sort(System.Comparison{`0})
  commentId: M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})
  isExternal: true
  name: Sort(Comparison<T>)
  nameWithType: List<T>.Sort(Comparison<T>)
  fullName: System.Collections.Generic.List<T>.Sort(System.Comparison<T>)
  nameWithType.vb: List(Of T).Sort(Comparison(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).Sort(System.Comparison(Of T))
  name.vb: Sort(Comparison(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort(System.Comparison{`0})
    name: Sort
    nameWithType: List<T>.Sort
    fullName: System.Collections.Generic.List<T>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Comparison`1
    name: Comparison
    nameWithType: Comparison
    fullName: System.Comparison
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort(System.Comparison{`0})
    name: Sort
    nameWithType: List(Of T).Sort
    fullName: System.Collections.Generic.List(Of T).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Comparison`1
    name: Comparison
    nameWithType: Comparison
    fullName: System.Comparison
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.ToArray
  commentId: M:System.Collections.Generic.List`1.ToArray
  isExternal: true
  name: ToArray()
  nameWithType: List<T>.ToArray()
  fullName: System.Collections.Generic.List<T>.ToArray()
  nameWithType.vb: List(Of T).ToArray()
  fullName.vb: System.Collections.Generic.List(Of T).ToArray()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.ToArray
    name: ToArray
    nameWithType: List<T>.ToArray
    fullName: System.Collections.Generic.List<T>.ToArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.ToArray
    name: ToArray
    nameWithType: List(Of T).ToArray
    fullName: System.Collections.Generic.List(Of T).ToArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.TrimExcess
  commentId: M:System.Collections.Generic.List`1.TrimExcess
  isExternal: true
  name: TrimExcess()
  nameWithType: List<T>.TrimExcess()
  fullName: System.Collections.Generic.List<T>.TrimExcess()
  nameWithType.vb: List(Of T).TrimExcess()
  fullName.vb: System.Collections.Generic.List(Of T).TrimExcess()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.TrimExcess
    name: TrimExcess
    nameWithType: List<T>.TrimExcess
    fullName: System.Collections.Generic.List<T>.TrimExcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.TrimExcess
    name: TrimExcess
    nameWithType: List(Of T).TrimExcess
    fullName: System.Collections.Generic.List(Of T).TrimExcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
  isExternal: true
  name: TrueForAll(Predicate<T>)
  nameWithType: List<T>.TrueForAll(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.TrueForAll(System.Predicate<T>)
  nameWithType.vb: List(Of T).TrueForAll(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).TrueForAll(System.Predicate(Of T))
  name.vb: TrueForAll(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
    name: TrueForAll
    nameWithType: List<T>.TrueForAll
    fullName: System.Collections.Generic.List<T>.TrueForAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
    name: TrueForAll
    nameWithType: List(Of T).TrueForAll
    fullName: System.Collections.Generic.List(Of T).TrueForAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Capacity
  commentId: P:System.Collections.Generic.List`1.Capacity
  isExternal: true
  name: Capacity
  nameWithType: List<T>.Capacity
  fullName: System.Collections.Generic.List<T>.Capacity
  nameWithType.vb: List(Of T).Capacity
  fullName.vb: System.Collections.Generic.List(Of T).Capacity
- uid: System.Collections.Generic.List`1.Count
  commentId: P:System.Collections.Generic.List`1.Count
  isExternal: true
  name: Count
  nameWithType: List<T>.Count
  fullName: System.Collections.Generic.List<T>.Count
  nameWithType.vb: List(Of T).Count
  fullName.vb: System.Collections.Generic.List(Of T).Count
- uid: System.Collections.Generic.List`1.System#Collections#IList#IsFixedSize
  commentId: P:System.Collections.Generic.List`1.System#Collections#IList#IsFixedSize
  isExternal: true
  name: IList.IsFixedSize
  nameWithType: List<T>.IList.IsFixedSize
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.IsFixedSize
  nameWithType.vb: List(Of T).System.Collections.IList.IsFixedSize
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.IsFixedSize
  name.vb: System.Collections.IList.IsFixedSize
- uid: System.Collections.Generic.List`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  commentId: P:System.Collections.Generic.List`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  isExternal: true
  name: ICollection<T>.IsReadOnly
  nameWithType: List<T>.ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.List<T>.System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: List(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: System.Collections.Generic.List`1.System#Collections#IList#IsReadOnly
  commentId: P:System.Collections.Generic.List`1.System#Collections#IList#IsReadOnly
  isExternal: true
  name: IList.IsReadOnly
  nameWithType: List<T>.IList.IsReadOnly
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.IsReadOnly
  nameWithType.vb: List(Of T).System.Collections.IList.IsReadOnly
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.IsReadOnly
  name.vb: System.Collections.IList.IsReadOnly
- uid: System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized
  isExternal: true
  name: ICollection.IsSynchronized
  nameWithType: List<T>.ICollection.IsSynchronized
  fullName: System.Collections.Generic.List<T>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: List(Of T).System.Collections.ICollection.IsSynchronized
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot
  commentId: P:System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot
  isExternal: true
  name: ICollection.SyncRoot
  nameWithType: List<T>.ICollection.SyncRoot
  fullName: System.Collections.Generic.List<T>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: List(Of T).System.Collections.ICollection.SyncRoot
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Collections.Generic.List`1.Item(System.Int32)
  commentId: P:System.Collections.Generic.List`1.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: List<T>.Item[Int32]
  fullName: System.Collections.Generic.List<T>.Item[System.Int32]
  nameWithType.vb: List(Of T).Item(Int32)
  fullName.vb: System.Collections.Generic.List(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Item(System.Int32)
    name: Item
    nameWithType: List<T>.Item
    fullName: System.Collections.Generic.List<T>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.List`1.Item(System.Int32)
    name: Item
    nameWithType: List(Of T).Item
    fullName: System.Collections.Generic.List(Of T).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)
  commentId: P:System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)
  isExternal: true
  name: IList.Item[Int32]
  nameWithType: List<T>.IList.Item[Int32]
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.Item[System.Int32]
  nameWithType.vb: List(Of T).System.Collections.IList.Item(Int32)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.Item(System.Int32)
  name.vb: System.Collections.IList.Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)
    name: IList.Item
    nameWithType: List<T>.IList.Item
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)
    name: System.Collections.IList.Item
    nameWithType: List(Of T).System.Collections.IList.Item
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: IEnumerableExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
  commentId: M:IEnumerableExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
  isExternal: true
  name: ForEach<T>(IEnumerable<T>, Action<T>)
  nameWithType: IEnumerableExtensions.ForEach<T>(IEnumerable<T>, Action<T>)
  fullName: IEnumerableExtensions.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)
  nameWithType.vb: IEnumerableExtensions.ForEach(Of T)(IEnumerable(Of T), Action(Of T))
  fullName.vb: IEnumerableExtensions.ForEach(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Action(Of T))
  name.vb: ForEach(Of T)(IEnumerable(Of T), Action(Of T))
  spec.csharp:
  - uid: IEnumerableExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
    name: ForEach<T>
    nameWithType: IEnumerableExtensions.ForEach<T>
    fullName: IEnumerableExtensions.ForEach<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
    name: ForEach(Of T)
    nameWithType: IEnumerableExtensions.ForEach(Of T)
    fullName: IEnumerableExtensions.ForEach(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerableExtensions
  commentId: T:IEnumerableExtensions
  isExternal: true
  name: IEnumerableExtensions
  nameWithType: IEnumerableExtensions
  fullName: IEnumerableExtensions
- uid: IEnumerableExtensions.ContainsAny``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  commentId: M:IEnumerableExtensions.ContainsAny``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: ContainsAny<T>(IEnumerable<T>, IEnumerable<T>)
  nameWithType: IEnumerableExtensions.ContainsAny<T>(IEnumerable<T>, IEnumerable<T>)
  fullName: IEnumerableExtensions.ContainsAny<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: IEnumerableExtensions.ContainsAny(Of T)(IEnumerable(Of T), IEnumerable(Of T))
  fullName.vb: IEnumerableExtensions.ContainsAny(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T))
  name.vb: ContainsAny(Of T)(IEnumerable(Of T), IEnumerable(Of T))
  spec.csharp:
  - uid: IEnumerableExtensions.ContainsAny``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: ContainsAny<T>
    nameWithType: IEnumerableExtensions.ContainsAny<T>
    fullName: IEnumerableExtensions.ContainsAny<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.ContainsAny``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: ContainsAny(Of T)
    nameWithType: IEnumerableExtensions.ContainsAny(Of T)
    fullName: IEnumerableExtensions.ContainsAny(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerableExtensions.SplitList``1(System.Collections.Generic.List{``0},System.Int32)
  commentId: M:IEnumerableExtensions.SplitList``1(System.Collections.Generic.List{``0},System.Int32)
  isExternal: true
  name: SplitList<T>(List<T>, Int32)
  nameWithType: IEnumerableExtensions.SplitList<T>(List<T>, Int32)
  fullName: IEnumerableExtensions.SplitList<T>(System.Collections.Generic.List<T>, System.Int32)
  nameWithType.vb: IEnumerableExtensions.SplitList(Of T)(List(Of T), Int32)
  fullName.vb: IEnumerableExtensions.SplitList(Of T)(System.Collections.Generic.List(Of T), System.Int32)
  name.vb: SplitList(Of T)(List(Of T), Int32)
  spec.csharp:
  - uid: IEnumerableExtensions.SplitList``1(System.Collections.Generic.List{``0},System.Int32)
    name: SplitList<T>
    nameWithType: IEnumerableExtensions.SplitList<T>
    fullName: IEnumerableExtensions.SplitList<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.SplitList``1(System.Collections.Generic.List{``0},System.Int32)
    name: SplitList(Of T)
    nameWithType: IEnumerableExtensions.SplitList(Of T)
    fullName: IEnumerableExtensions.SplitList(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerableExtensions.Batch``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  commentId: M:IEnumerableExtensions.Batch``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  isExternal: true
  name: Batch<T>(IEnumerable<T>, Int32)
  nameWithType: IEnumerableExtensions.Batch<T>(IEnumerable<T>, Int32)
  fullName: IEnumerableExtensions.Batch<T>(System.Collections.Generic.IEnumerable<T>, System.Int32)
  nameWithType.vb: IEnumerableExtensions.Batch(Of T)(IEnumerable(Of T), Int32)
  fullName.vb: IEnumerableExtensions.Batch(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Int32)
  name.vb: Batch(Of T)(IEnumerable(Of T), Int32)
  spec.csharp:
  - uid: IEnumerableExtensions.Batch``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: Batch<T>
    nameWithType: IEnumerableExtensions.Batch<T>
    fullName: IEnumerableExtensions.Batch<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.Batch``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: Batch(Of T)
    nameWithType: IEnumerableExtensions.Batch(Of T)
    fullName: IEnumerableExtensions.Batch(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerableExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},``0,System.Int32)
  commentId: M:IEnumerableExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},``0,System.Int32)
  isExternal: true
  name: IndexOf<T>(IEnumerable<T>, T, Int32)
  nameWithType: IEnumerableExtensions.IndexOf<T>(IEnumerable<T>, T, Int32)
  fullName: IEnumerableExtensions.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, T, System.Int32)
  nameWithType.vb: IEnumerableExtensions.IndexOf(Of T)(IEnumerable(Of T), T, Int32)
  fullName.vb: IEnumerableExtensions.IndexOf(Of T)(System.Collections.Generic.IEnumerable(Of T), T, System.Int32)
  name.vb: IndexOf(Of T)(IEnumerable(Of T), T, Int32)
  spec.csharp:
  - uid: IEnumerableExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},``0,System.Int32)
    name: IndexOf<T>
    nameWithType: IEnumerableExtensions.IndexOf<T>
    fullName: IEnumerableExtensions.IndexOf<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},``0,System.Int32)
    name: IndexOf(Of T)
    nameWithType: IEnumerableExtensions.IndexOf(Of T)
    fullName: IEnumerableExtensions.IndexOf(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerableExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Int32)
  commentId: M:IEnumerableExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Int32)
  isExternal: true
  name: IndexOf<T>(IEnumerable<T>, Func<T, Boolean>, Int32)
  nameWithType: IEnumerableExtensions.IndexOf<T>(IEnumerable<T>, Func<T, Boolean>, Int32)
  fullName: IEnumerableExtensions.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, System.Boolean>, System.Int32)
  nameWithType.vb: IEnumerableExtensions.IndexOf(Of T)(IEnumerable(Of T), Func(Of T, Boolean), Int32)
  fullName.vb: IEnumerableExtensions.IndexOf(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, System.Boolean), System.Int32)
  name.vb: IndexOf(Of T)(IEnumerable(Of T), Func(Of T, Boolean), Int32)
  spec.csharp:
  - uid: IEnumerableExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Int32)
    name: IndexOf<T>
    nameWithType: IEnumerableExtensions.IndexOf<T>
    fullName: IEnumerableExtensions.IndexOf<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Int32)
    name: IndexOf(Of T)
    nameWithType: IEnumerableExtensions.IndexOf(Of T)
    fullName: IEnumerableExtensions.IndexOf(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerableExtensions.Permute``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  commentId: M:IEnumerableExtensions.Permute``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  isExternal: true
  name: Permute<T>(IEnumerable<T>, Int32)
  nameWithType: IEnumerableExtensions.Permute<T>(IEnumerable<T>, Int32)
  fullName: IEnumerableExtensions.Permute<T>(System.Collections.Generic.IEnumerable<T>, System.Int32)
  nameWithType.vb: IEnumerableExtensions.Permute(Of T)(IEnumerable(Of T), Int32)
  fullName.vb: IEnumerableExtensions.Permute(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Int32)
  name.vb: Permute(Of T)(IEnumerable(Of T), Int32)
  spec.csharp:
  - uid: IEnumerableExtensions.Permute``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: Permute<T>
    nameWithType: IEnumerableExtensions.Permute<T>
    fullName: IEnumerableExtensions.Permute<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.Permute``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: Permute(Of T)
    nameWithType: IEnumerableExtensions.Permute(Of T)
    fullName: IEnumerableExtensions.Permute(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerableExtensions.PermissiveToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  commentId: M:IEnumerableExtensions.PermissiveToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  isExternal: true
  name: PermissiveToDictionary<T, K, V>(IEnumerable<T>, Func<T, K>, Func<T, V>)
  nameWithType: IEnumerableExtensions.PermissiveToDictionary<T, K, V>(IEnumerable<T>, Func<T, K>, Func<T, V>)
  fullName: IEnumerableExtensions.PermissiveToDictionary<T, K, V>(System.Collections.Generic.IEnumerable<T>, System.Func<T, K>, System.Func<T, V>)
  nameWithType.vb: IEnumerableExtensions.PermissiveToDictionary(Of T, K, V)(IEnumerable(Of T), Func(Of T, K), Func(Of T, V))
  fullName.vb: IEnumerableExtensions.PermissiveToDictionary(Of T, K, V)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, K), System.Func(Of T, V))
  name.vb: PermissiveToDictionary(Of T, K, V)(IEnumerable(Of T), Func(Of T, K), Func(Of T, V))
  spec.csharp:
  - uid: IEnumerableExtensions.PermissiveToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
    name: PermissiveToDictionary<T, K, V>
    nameWithType: IEnumerableExtensions.PermissiveToDictionary<T, K, V>
    fullName: IEnumerableExtensions.PermissiveToDictionary<T, K, V>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: K
    nameWithType: K
    fullName: K
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.PermissiveToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
    name: PermissiveToDictionary(Of T, K, V)
    nameWithType: IEnumerableExtensions.PermissiveToDictionary(Of T, K, V)
    fullName: IEnumerableExtensions.PermissiveToDictionary(Of T, K, V)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: K
    nameWithType: K
    fullName: K
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerableExtensions.PermissiveToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  commentId: M:IEnumerableExtensions.PermissiveToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  isExternal: true
  name: PermissiveToDictionary<T, K, V>(IEnumerable<T>, Func<T, K>, Func<T, V>, IEqualityComparer<K>)
  nameWithType: IEnumerableExtensions.PermissiveToDictionary<T, K, V>(IEnumerable<T>, Func<T, K>, Func<T, V>, IEqualityComparer<K>)
  fullName: IEnumerableExtensions.PermissiveToDictionary<T, K, V>(System.Collections.Generic.IEnumerable<T>, System.Func<T, K>, System.Func<T, V>, System.Collections.Generic.IEqualityComparer<K>)
  nameWithType.vb: IEnumerableExtensions.PermissiveToDictionary(Of T, K, V)(IEnumerable(Of T), Func(Of T, K), Func(Of T, V), IEqualityComparer(Of K))
  fullName.vb: IEnumerableExtensions.PermissiveToDictionary(Of T, K, V)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, K), System.Func(Of T, V), System.Collections.Generic.IEqualityComparer(Of K))
  name.vb: PermissiveToDictionary(Of T, K, V)(IEnumerable(Of T), Func(Of T, K), Func(Of T, V), IEqualityComparer(Of K))
  spec.csharp:
  - uid: IEnumerableExtensions.PermissiveToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: PermissiveToDictionary<T, K, V>
    nameWithType: IEnumerableExtensions.PermissiveToDictionary<T, K, V>
    fullName: IEnumerableExtensions.PermissiveToDictionary<T, K, V>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: K
    nameWithType: K
    fullName: K
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: K
    nameWithType: K
    fullName: K
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.PermissiveToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: PermissiveToDictionary(Of T, K, V)
    nameWithType: IEnumerableExtensions.PermissiveToDictionary(Of T, K, V)
    fullName: IEnumerableExtensions.PermissiveToDictionary(Of T, K, V)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: K
    nameWithType: K
    fullName: K
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: K
    nameWithType: K
    fullName: K
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerableExtensions.GetDifferentCombinations``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  commentId: M:IEnumerableExtensions.GetDifferentCombinations``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  isExternal: true
  name: GetDifferentCombinations<T>(IEnumerable<T>, Int32)
  nameWithType: IEnumerableExtensions.GetDifferentCombinations<T>(IEnumerable<T>, Int32)
  fullName: IEnumerableExtensions.GetDifferentCombinations<T>(System.Collections.Generic.IEnumerable<T>, System.Int32)
  nameWithType.vb: IEnumerableExtensions.GetDifferentCombinations(Of T)(IEnumerable(Of T), Int32)
  fullName.vb: IEnumerableExtensions.GetDifferentCombinations(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Int32)
  name.vb: GetDifferentCombinations(Of T)(IEnumerable(Of T), Int32)
  spec.csharp:
  - uid: IEnumerableExtensions.GetDifferentCombinations``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: GetDifferentCombinations<T>
    nameWithType: IEnumerableExtensions.GetDifferentCombinations<T>
    fullName: IEnumerableExtensions.GetDifferentCombinations<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.GetDifferentCombinations``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: GetDifferentCombinations(Of T)
    nameWithType: IEnumerableExtensions.GetDifferentCombinations(Of T)
    fullName: IEnumerableExtensions.GetDifferentCombinations(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.CollectionOps.AtLeastOne``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:SuperOffice.Util.CollectionOps.AtLeastOne``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: AtLeastOne<T>(IEnumerable<T>)
  nameWithType: CollectionOps.AtLeastOne<T>(IEnumerable<T>)
  fullName: SuperOffice.Util.CollectionOps.AtLeastOne<T>(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: CollectionOps.AtLeastOne(Of T)(IEnumerable(Of T))
  fullName.vb: SuperOffice.Util.CollectionOps.AtLeastOne(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: AtLeastOne(Of T)(IEnumerable(Of T))
  spec.csharp:
  - uid: SuperOffice.Util.CollectionOps.AtLeastOne``1(System.Collections.Generic.IEnumerable{``0})
    name: AtLeastOne<T>
    nameWithType: CollectionOps.AtLeastOne<T>
    fullName: SuperOffice.Util.CollectionOps.AtLeastOne<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.CollectionOps.AtLeastOne``1(System.Collections.Generic.IEnumerable{``0})
    name: AtLeastOne(Of T)
    nameWithType: CollectionOps.AtLeastOne(Of T)
    fullName: SuperOffice.Util.CollectionOps.AtLeastOne(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.CollectionOps
  commentId: T:SuperOffice.Util.CollectionOps
  parent: SuperOffice.Util
  isExternal: true
  name: CollectionOps
  nameWithType: CollectionOps
  fullName: SuperOffice.Util.CollectionOps
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.ArchiveLists.ParseErrors.#ctor*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ParseErrors.#ctor
  isExternal: true
  name: ParseErrors
  nameWithType: ParseErrors.ParseErrors
  fullName: SuperOffice.CRM.ArchiveLists.ParseErrors.ParseErrors
