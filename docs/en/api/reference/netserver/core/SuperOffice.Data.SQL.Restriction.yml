### YamlMime:ManagedReference
items:
- uid: SuperOffice.Data.SQL.Restriction
  commentId: T:SuperOffice.Data.SQL.Restriction
  id: Restriction
  parent: SuperOffice.Data.SQL
  children:
  - SuperOffice.Data.SQL.Restriction.#ctor
  - SuperOffice.Data.SQL.Restriction.And(SuperOffice.Data.SQL.Restriction)
  - SuperOffice.Data.SQL.Restriction.Or(SuperOffice.Data.SQL.Restriction)
  - SuperOffice.Data.SQL.Restriction.RestrictionAnd(SuperOffice.Data.SQL.Restriction,SuperOffice.Data.SQL.Restriction)
  - SuperOffice.Data.SQL.Restriction.RestrictionOr(SuperOffice.Data.SQL.Restriction,SuperOffice.Data.SQL.Restriction)
  langs:
  - csharp
  - vb
  name: Restriction
  nameWithType: Restriction
  fullName: SuperOffice.Data.SQL.Restriction
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nThis is the base Restriction class. \n"
  syntax:
    content: 'public abstract class Restriction : QueryElement, ICloneable'
    content.vb: >-
      Public MustInherit Class Restriction
          Inherits QueryElement
          Implements ICloneable
  inheritance:
  - System.Object
  - SuperOffice.Data.SQL.QueryElement
  derivedClasses:
  - SuperOffice.Data.SQL.Bool
  - SuperOffice.Data.SQL.Compare
  - SuperOffice.Data.SQL.NullOperators
  implements:
  - System.ICloneable
  inheritedMembers:
  - SuperOffice.Data.SQL.QueryElement.GetSubElements
  - SuperOffice.Data.SQL.QueryElement.Clone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.Data.SQL.Restriction.EnumUtil.MapEnums``2
  - SuperOffice.Data.SQL.Restriction.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: SuperOffice.Data.SQL.Restriction.#ctor
  commentId: M:SuperOffice.Data.SQL.Restriction.#ctor
  id: '#ctor'
  parent: SuperOffice.Data.SQL.Restriction
  langs:
  - csharp
  - vb
  name: Restriction()
  nameWithType: Restriction.Restriction()
  fullName: SuperOffice.Data.SQL.Restriction.Restriction()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nInitializes a new instance of the <xref href=\"SuperOffice.Data.SQL.Restriction\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  syntax:
    content: public Restriction()
    content.vb: Public Sub New
  overload: SuperOffice.Data.SQL.Restriction.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SQL.Restriction.And(SuperOffice.Data.SQL.Restriction)
  commentId: M:SuperOffice.Data.SQL.Restriction.And(SuperOffice.Data.SQL.Restriction)
  id: And(SuperOffice.Data.SQL.Restriction)
  parent: SuperOffice.Data.SQL.Restriction
  langs:
  - csharp
  - vb
  name: And(Restriction)
  nameWithType: Restriction.And(Restriction)
  fullName: SuperOffice.Data.SQL.Restriction.And(SuperOffice.Data.SQL.Restriction)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nInitializes and returns a new instance of the <xref href=\"SuperOffice.Data.SQL.Restriction.And(SuperOffice.Data.SQL.Restriction)\" data-throw-if-not-resolved=\"false\"></xref> class, and uses\nexpression argument as in parameter.\n"
  syntax:
    content: public virtual And And(Restriction expression)
    parameters:
    - id: expression
      type: SuperOffice.Data.SQL.Restriction
      description: Restriction to Add
    return:
      type: SuperOffice.Data.SQL.And
      description: Returns a new <xref href="SuperOffice.Data.SQL.Restriction.And(SuperOffice.Data.SQL.Restriction)" data-throw-if-not-resolved="false"></xref>
    content.vb: 'Public Overridable Function And(expression As Restriction) As '
  overload: SuperOffice.Data.SQL.Restriction.And*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.Data.SQL.Restriction.Or(SuperOffice.Data.SQL.Restriction)
  commentId: M:SuperOffice.Data.SQL.Restriction.Or(SuperOffice.Data.SQL.Restriction)
  id: Or(SuperOffice.Data.SQL.Restriction)
  parent: SuperOffice.Data.SQL.Restriction
  langs:
  - csharp
  - vb
  name: Or(Restriction)
  nameWithType: Restriction.Or(Restriction)
  fullName: SuperOffice.Data.SQL.Restriction.Or(SuperOffice.Data.SQL.Restriction)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nInitializes and returns a new instance of the <xref href=\"SuperOffice.Data.SQL.Restriction.Or(SuperOffice.Data.SQL.Restriction)\" data-throw-if-not-resolved=\"false\"></xref> class, and uses\nexpression argument as in parameter.\n"
  syntax:
    content: public virtual Or Or(Restriction expression)
    parameters:
    - id: expression
      type: SuperOffice.Data.SQL.Restriction
      description: Returns a new <xref href="SuperOffice.Data.SQL.Restriction.Or(SuperOffice.Data.SQL.Restriction)" data-throw-if-not-resolved="false"></xref>
    return:
      type: SuperOffice.Data.SQL.Or
      description: Returns a new Or class
    content.vb: 'Public Overridable Function Or(expression As Restriction) As '
  overload: SuperOffice.Data.SQL.Restriction.Or*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.Data.SQL.Restriction.RestrictionAnd(SuperOffice.Data.SQL.Restriction,SuperOffice.Data.SQL.Restriction)
  commentId: M:SuperOffice.Data.SQL.Restriction.RestrictionAnd(SuperOffice.Data.SQL.Restriction,SuperOffice.Data.SQL.Restriction)
  id: RestrictionAnd(SuperOffice.Data.SQL.Restriction,SuperOffice.Data.SQL.Restriction)
  parent: SuperOffice.Data.SQL.Restriction
  langs:
  - csharp
  - vb
  name: RestrictionAnd(Restriction, Restriction)
  nameWithType: Restriction.RestrictionAnd(Restriction, Restriction)
  fullName: SuperOffice.Data.SQL.Restriction.RestrictionAnd(SuperOffice.Data.SQL.Restriction, SuperOffice.Data.SQL.Restriction)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  syntax:
    content: public static Restriction RestrictionAnd(Restriction left, Restriction right)
    parameters:
    - id: left
      type: SuperOffice.Data.SQL.Restriction
    - id: right
      type: SuperOffice.Data.SQL.Restriction
    return:
      type: SuperOffice.Data.SQL.Restriction
    content.vb: Public Shared Function RestrictionAnd(left As Restriction, right As Restriction) As Restriction
  overload: SuperOffice.Data.SQL.Restriction.RestrictionAnd*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Data.SQL.Restriction.RestrictionOr(SuperOffice.Data.SQL.Restriction,SuperOffice.Data.SQL.Restriction)
  commentId: M:SuperOffice.Data.SQL.Restriction.RestrictionOr(SuperOffice.Data.SQL.Restriction,SuperOffice.Data.SQL.Restriction)
  id: RestrictionOr(SuperOffice.Data.SQL.Restriction,SuperOffice.Data.SQL.Restriction)
  parent: SuperOffice.Data.SQL.Restriction
  langs:
  - csharp
  - vb
  name: RestrictionOr(Restriction, Restriction)
  nameWithType: Restriction.RestrictionOr(Restriction, Restriction)
  fullName: SuperOffice.Data.SQL.Restriction.RestrictionOr(SuperOffice.Data.SQL.Restriction, SuperOffice.Data.SQL.Restriction)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  syntax:
    content: public static Restriction RestrictionOr(Restriction left, Restriction right)
    parameters:
    - id: left
      type: SuperOffice.Data.SQL.Restriction
    - id: right
      type: SuperOffice.Data.SQL.Restriction
    return:
      type: SuperOffice.Data.SQL.Restriction
    content.vb: Public Shared Function RestrictionOr(left As Restriction, right As Restriction) As Restriction
  overload: SuperOffice.Data.SQL.Restriction.RestrictionOr*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: SuperOffice.Data.SQL
  commentId: N:SuperOffice.Data.SQL
  isExternal: true
  name: SuperOffice.Data.SQL
  nameWithType: SuperOffice.Data.SQL
  fullName: SuperOffice.Data.SQL
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Data.SQL.QueryElement
  commentId: T:SuperOffice.Data.SQL.QueryElement
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: QueryElement
  nameWithType: QueryElement
  fullName: SuperOffice.Data.SQL.QueryElement
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: SuperOffice.Data.SQL.QueryElement.GetSubElements
  commentId: M:SuperOffice.Data.SQL.QueryElement.GetSubElements
  parent: SuperOffice.Data.SQL.QueryElement
  isExternal: true
  name: GetSubElements()
  nameWithType: QueryElement.GetSubElements()
  fullName: SuperOffice.Data.SQL.QueryElement.GetSubElements()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.QueryElement.GetSubElements
    name: GetSubElements
    nameWithType: QueryElement.GetSubElements
    fullName: SuperOffice.Data.SQL.QueryElement.GetSubElements
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.QueryElement.GetSubElements
    name: GetSubElements
    nameWithType: QueryElement.GetSubElements
    fullName: SuperOffice.Data.SQL.QueryElement.GetSubElements
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.QueryElement.Clone
  commentId: M:SuperOffice.Data.SQL.QueryElement.Clone
  parent: SuperOffice.Data.SQL.QueryElement
  isExternal: true
  name: Clone()
  nameWithType: QueryElement.Clone()
  fullName: SuperOffice.Data.SQL.QueryElement.Clone()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.QueryElement.Clone
    name: Clone
    nameWithType: QueryElement.Clone
    fullName: SuperOffice.Data.SQL.QueryElement.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.QueryElement.Clone
    name: Clone
    nameWithType: QueryElement.Clone
    fullName: SuperOffice.Data.SQL.QueryElement.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Restriction.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<Restriction, To>()
  nameWithType: EnumUtil.MapEnums<Restriction, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Data.SQL.Restriction, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of Restriction, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Data.SQL.Restriction, To)()
  name.vb: MapEnums(Of Restriction, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<Restriction, To>
    nameWithType: EnumUtil.MapEnums<Restriction, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Data.SQL.Restriction, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of Restriction, To)
    nameWithType: EnumUtil.MapEnums(Of Restriction, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Data.SQL.Restriction, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Restriction.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<Restriction, To>()
  nameWithType: Converters.MapEnums<Restriction, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.SQL.Restriction, To>()
  nameWithType.vb: Converters.MapEnums(Of Restriction, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.SQL.Restriction, To)()
  name.vb: MapEnums(Of Restriction, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<Restriction, To>
    nameWithType: Converters.MapEnums<Restriction, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.SQL.Restriction, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of Restriction, To)
    nameWithType: Converters.MapEnums(Of Restriction, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.SQL.Restriction, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Data.SQL.Restriction.#ctor*
  commentId: Overload:SuperOffice.Data.SQL.Restriction.#ctor
  isExternal: true
  name: Restriction
  nameWithType: Restriction.Restriction
  fullName: SuperOffice.Data.SQL.Restriction.Restriction
- uid: SuperOffice.Data.SQL.Restriction.And*
  commentId: Overload:SuperOffice.Data.SQL.Restriction.And
  isExternal: true
  name: And
  nameWithType: Restriction.And
  fullName: SuperOffice.Data.SQL.Restriction.And
- uid: SuperOffice.Data.SQL.Restriction
  commentId: T:SuperOffice.Data.SQL.Restriction
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: Restriction
  nameWithType: Restriction
  fullName: SuperOffice.Data.SQL.Restriction
- uid: SuperOffice.Data.SQL.And
  commentId: T:SuperOffice.Data.SQL.And
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: And
  nameWithType: And
  fullName: SuperOffice.Data.SQL.And
- uid: SuperOffice.Data.SQL.Restriction.Or*
  commentId: Overload:SuperOffice.Data.SQL.Restriction.Or
  isExternal: true
  name: Or
  nameWithType: Restriction.Or
  fullName: SuperOffice.Data.SQL.Restriction.Or
- uid: SuperOffice.Data.SQL.Or
  commentId: T:SuperOffice.Data.SQL.Or
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: Or
  nameWithType: Or
  fullName: SuperOffice.Data.SQL.Or
- uid: SuperOffice.Data.SQL.Restriction.RestrictionAnd*
  commentId: Overload:SuperOffice.Data.SQL.Restriction.RestrictionAnd
  isExternal: true
  name: RestrictionAnd
  nameWithType: Restriction.RestrictionAnd
  fullName: SuperOffice.Data.SQL.Restriction.RestrictionAnd
- uid: SuperOffice.Data.SQL.Restriction.RestrictionOr*
  commentId: Overload:SuperOffice.Data.SQL.Restriction.RestrictionOr
  isExternal: true
  name: RestrictionOr
  nameWithType: Restriction.RestrictionOr
  fullName: SuperOffice.Data.SQL.Restriction.RestrictionOr
