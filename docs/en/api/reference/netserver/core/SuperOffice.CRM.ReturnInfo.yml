### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.ReturnInfo
  commentId: T:SuperOffice.CRM.ReturnInfo
  id: ReturnInfo
  parent: SuperOffice.CRM
  children:
  - SuperOffice.CRM.ReturnInfo.#ctor
  - SuperOffice.CRM.ReturnInfo.AdditionalInfo
  - SuperOffice.CRM.ReturnInfo.ExternalReference
  - SuperOffice.CRM.ReturnInfo.Success
  - SuperOffice.CRM.ReturnInfo.Type
  - SuperOffice.CRM.ReturnInfo.Value
  - SuperOffice.CRM.ReturnInfo.VersionId
  langs:
  - csharp
  - vb
  name: ReturnInfo
  nameWithType: ReturnInfo
  fullName: SuperOffice.CRM.ReturnInfo
  type: Class
  source:
    path: SuperOffice.Plugins
    isExternal: true
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: "\nReturn value object for Document Plugin API calls\n"
  remarks: "\nMany document API calls return this object, which contains both information about which\ndocument it relates to, a result string value, and a result type that defines how this result\nshould be parsed and processed by the caller.\n<p></p>\nSee the <xref href=\"SuperOffice.CRM.ReturnType\" data-throw-if-not-resolved=\"false\"></xref> enum for more details and some caveats.\n"
  syntax:
    content: public sealed class ReturnInfo
    content.vb: Public NotInheritable Class ReturnInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.ReturnInfo.EnumUtil.MapEnums``2
  - SuperOffice.CRM.ReturnInfo.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.ReturnInfo)
  - SuperOffice.CRM.ReturnInfo.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.CRM.ReturnInfo.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: SuperOffice.CRM.ReturnInfo.#ctor
  commentId: M:SuperOffice.CRM.ReturnInfo.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.ReturnInfo
  langs:
  - csharp
  - vb
  name: ReturnInfo()
  nameWithType: ReturnInfo.ReturnInfo()
  fullName: SuperOffice.CRM.ReturnInfo.ReturnInfo()
  type: Constructor
  source:
    path: SuperOffice.Plugins
    isExternal: true
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  syntax:
    content: public ReturnInfo()
    content.vb: Public Sub New
  overload: SuperOffice.CRM.ReturnInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ReturnInfo.ExternalReference
  commentId: P:SuperOffice.CRM.ReturnInfo.ExternalReference
  id: ExternalReference
  parent: SuperOffice.CRM.ReturnInfo
  langs:
  - csharp
  - vb
  name: ExternalReference
  nameWithType: ReturnInfo.ExternalReference
  fullName: SuperOffice.CRM.ReturnInfo.ExternalReference
  type: Property
  source:
    path: SuperOffice.Plugins
    isExternal: true
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: "\nThe document plugin&apos;s key that uniquely identifies a document; stored in the externalReference field of the document table\n"
  syntax:
    content: public string ExternalReference { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ExternalReference As String
  overload: SuperOffice.CRM.ReturnInfo.ExternalReference*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ReturnInfo.VersionId
  commentId: P:SuperOffice.CRM.ReturnInfo.VersionId
  id: VersionId
  parent: SuperOffice.CRM.ReturnInfo
  langs:
  - csharp
  - vb
  name: VersionId
  nameWithType: ReturnInfo.VersionId
  fullName: SuperOffice.CRM.ReturnInfo.VersionId
  type: Property
  source:
    path: SuperOffice.Plugins
    isExternal: true
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: "\nThe document plugin&apos;s version id that uniquely identifies one version of a document. If versioning is not\nsupported, this will be blank. When versioning is supported, blank values imply the <strong>latest checked-in</strong> version.\n"
  syntax:
    content: public string VersionId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property VersionId As String
  overload: SuperOffice.CRM.ReturnInfo.VersionId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ReturnInfo.Success
  commentId: P:SuperOffice.CRM.ReturnInfo.Success
  id: Success
  parent: SuperOffice.CRM.ReturnInfo
  langs:
  - csharp
  - vb
  name: Success
  nameWithType: ReturnInfo.Success
  fullName: SuperOffice.CRM.ReturnInfo.Success
  type: Property
  source:
    path: SuperOffice.Plugins
    isExternal: true
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: "\nDid the call succeed. A successful call may still return a message or other return value.\n"
  syntax:
    content: public bool Success { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Success As Boolean
  overload: SuperOffice.CRM.ReturnInfo.Success*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ReturnInfo.Type
  commentId: P:SuperOffice.CRM.ReturnInfo.Type
  id: Type
  parent: SuperOffice.CRM.ReturnInfo
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: ReturnInfo.Type
  fullName: SuperOffice.CRM.ReturnInfo.Type
  type: Property
  source:
    path: SuperOffice.Plugins
    isExternal: true
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: "\nHow is the return value <xref href=\"SuperOffice.CRM.ReturnInfo.Value\" data-throw-if-not-resolved=\"false\"></xref> should be understood by the caller.\n"
  syntax:
    content: public ReturnType Type { get; set; }
    parameters: []
    return:
      type: SuperOffice.CRM.ReturnType
    content.vb: Public Property Type As ReturnType
  overload: SuperOffice.CRM.ReturnInfo.Type*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ReturnInfo.Value
  commentId: P:SuperOffice.CRM.ReturnInfo.Value
  id: Value
  parent: SuperOffice.CRM.ReturnInfo
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: ReturnInfo.Value
  fullName: SuperOffice.CRM.ReturnInfo.Value
  type: Property
  source:
    path: SuperOffice.Plugins
    isExternal: true
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: "\nReturn value, may be blank. Interpretation depends on the <xref href=\"SuperOffice.CRM.ReturnInfo.Type\" data-throw-if-not-resolved=\"false\"></xref> property.\n"
  syntax:
    content: public string Value { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Value As String
  overload: SuperOffice.CRM.ReturnInfo.Value*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ReturnInfo.AdditionalInfo
  commentId: P:SuperOffice.CRM.ReturnInfo.AdditionalInfo
  id: AdditionalInfo
  parent: SuperOffice.CRM.ReturnInfo
  langs:
  - csharp
  - vb
  name: AdditionalInfo
  nameWithType: ReturnInfo.AdditionalInfo
  fullName: SuperOffice.CRM.ReturnInfo.AdditionalInfo
  type: Property
  source:
    path: SuperOffice.Plugins
    isExternal: true
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: "\nOptional, additional information meant for further processing. This member is ignored for\nreturn types None, Message and SoProtocol. It can be used to pass execution-dependent \ninformation to the code that handles CustomGui and Other.\n"
  syntax:
    content: public string AdditionalInfo { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AdditionalInfo As String
  overload: SuperOffice.CRM.ReturnInfo.AdditionalInfo*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.CRM
  commentId: N:SuperOffice.CRM
  isExternal: true
  name: SuperOffice.CRM
  nameWithType: SuperOffice.CRM
  fullName: SuperOffice.CRM
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ReturnInfo.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<ReturnInfo, To>()
  nameWithType: EnumUtil.MapEnums<ReturnInfo, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.ReturnInfo, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of ReturnInfo, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.ReturnInfo, To)()
  name.vb: MapEnums(Of ReturnInfo, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<ReturnInfo, To>
    nameWithType: EnumUtil.MapEnums<ReturnInfo, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.ReturnInfo, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of ReturnInfo, To)
    nameWithType: EnumUtil.MapEnums(Of ReturnInfo, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.ReturnInfo, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ReturnInfo.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.ReturnInfo)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<ReturnInfo>(ReturnInfo)
  nameWithType: ObjectExtensions.AssignByReflection<ReturnInfo>(ReturnInfo)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.ReturnInfo>(SuperOffice.CRM.ReturnInfo)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of ReturnInfo)(ReturnInfo)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.ReturnInfo)(SuperOffice.CRM.ReturnInfo)
  name.vb: AssignByReflection(Of ReturnInfo)(ReturnInfo)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<ReturnInfo>
    nameWithType: ObjectExtensions.AssignByReflection<ReturnInfo>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.ReturnInfo>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ReturnInfo
    name: ReturnInfo
    nameWithType: ReturnInfo
    fullName: SuperOffice.CRM.ReturnInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of ReturnInfo)
    nameWithType: ObjectExtensions.AssignByReflection(Of ReturnInfo)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.ReturnInfo)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ReturnInfo
    name: ReturnInfo
    nameWithType: ReturnInfo
    fullName: SuperOffice.CRM.ReturnInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ReturnInfo.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<ReturnInfo>()
  nameWithType: ObjectExtensions.GraphCopy<ReturnInfo>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.ReturnInfo>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of ReturnInfo)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.ReturnInfo)()
  name.vb: GraphCopy(Of ReturnInfo)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<ReturnInfo>
    nameWithType: ObjectExtensions.GraphCopy<ReturnInfo>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.ReturnInfo>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of ReturnInfo)
    nameWithType: ObjectExtensions.GraphCopy(Of ReturnInfo)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.ReturnInfo)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ReturnInfo.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<ReturnInfo, To>()
  nameWithType: Converters.MapEnums<ReturnInfo, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.ReturnInfo, To>()
  nameWithType.vb: Converters.MapEnums(Of ReturnInfo, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.ReturnInfo, To)()
  name.vb: MapEnums(Of ReturnInfo, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<ReturnInfo, To>
    nameWithType: Converters.MapEnums<ReturnInfo, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.ReturnInfo, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of ReturnInfo, To)
    nameWithType: Converters.MapEnums(Of ReturnInfo, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.ReturnInfo, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.ReturnInfo.#ctor*
  commentId: Overload:SuperOffice.CRM.ReturnInfo.#ctor
  isExternal: true
  name: ReturnInfo
  nameWithType: ReturnInfo.ReturnInfo
  fullName: SuperOffice.CRM.ReturnInfo.ReturnInfo
- uid: SuperOffice.CRM.ReturnInfo.ExternalReference*
  commentId: Overload:SuperOffice.CRM.ReturnInfo.ExternalReference
  isExternal: true
  name: ExternalReference
  nameWithType: ReturnInfo.ExternalReference
  fullName: SuperOffice.CRM.ReturnInfo.ExternalReference
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.ReturnInfo.VersionId*
  commentId: Overload:SuperOffice.CRM.ReturnInfo.VersionId
  isExternal: true
  name: VersionId
  nameWithType: ReturnInfo.VersionId
  fullName: SuperOffice.CRM.ReturnInfo.VersionId
- uid: SuperOffice.CRM.ReturnInfo.Success*
  commentId: Overload:SuperOffice.CRM.ReturnInfo.Success
  isExternal: true
  name: Success
  nameWithType: ReturnInfo.Success
  fullName: SuperOffice.CRM.ReturnInfo.Success
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.CRM.ReturnInfo.Type*
  commentId: Overload:SuperOffice.CRM.ReturnInfo.Type
  isExternal: true
  name: Type
  nameWithType: ReturnInfo.Type
  fullName: SuperOffice.CRM.ReturnInfo.Type
- uid: SuperOffice.CRM.ReturnType
  commentId: T:SuperOffice.CRM.ReturnType
  parent: SuperOffice.CRM
  isExternal: true
  name: ReturnType
  nameWithType: ReturnType
  fullName: SuperOffice.CRM.ReturnType
- uid: SuperOffice.CRM.ReturnInfo.Value*
  commentId: Overload:SuperOffice.CRM.ReturnInfo.Value
  isExternal: true
  name: Value
  nameWithType: ReturnInfo.Value
  fullName: SuperOffice.CRM.ReturnInfo.Value
- uid: SuperOffice.CRM.ReturnInfo.AdditionalInfo*
  commentId: Overload:SuperOffice.CRM.ReturnInfo.AdditionalInfo
  isExternal: true
  name: AdditionalInfo
  nameWithType: ReturnInfo.AdditionalInfo
  fullName: SuperOffice.CRM.ReturnInfo.AdditionalInfo
