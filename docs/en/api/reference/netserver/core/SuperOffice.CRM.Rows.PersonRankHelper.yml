### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Rows.PersonRankHelper
  commentId: T:SuperOffice.CRM.Rows.PersonRankHelper
  id: PersonRankHelper
  parent: SuperOffice.CRM.Rows
  children:
  - SuperOffice.CRM.Rows.PersonRankHelper.#ctor
  - SuperOffice.CRM.Rows.PersonRankHelper.ChangePersonRankAsync(System.Int32,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Rows.PersonRankHelper.NormalizeRanksAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Rows.PersonRankHelper.SetPersonRankAsync(System.Int32,System.Int16,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: PersonRankHelper
  nameWithType: PersonRankHelper
  fullName: SuperOffice.CRM.Rows.PersonRankHelper
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nHelper class to handle issues around the Rank field of the Person row\n"
  remarks: "\nPersons that belong to one contact should have a monotonically increasing set of rank values, starting with 1.\nIn order to move a person to a lower (earlier) rank, it is swapped with its neighbour; or if the move takes it\nfurther, all intervening persons also get their ranks changed.\n<p></p>\nThis class contains methods to shift a person one step up or down; set a given rank value;\nand normalize (clean up) the ranks for a given contact, in case they have become inconsistent.\n<p></p>\nThe person with rank 1 (and there should only be one!) has a special function and is used in many cases,\nsuch as when &apos;add first person&apos; in selection is used.\n"
  syntax:
    content: 'public sealed class PersonRankHelper : Object'
    content.vb: >-
      Public NotInheritable Class PersonRankHelper
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - SuperOffice.CRM.Rows.PersonRankHelper.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Rows.PersonRankHelper.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Rows.PersonRankHelper)
  - SuperOffice.CRM.Rows.PersonRankHelper.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.CRM.Rows.PersonRankHelper.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: SuperOffice.CRM.Rows.PersonRankHelper.#ctor
  commentId: M:SuperOffice.CRM.Rows.PersonRankHelper.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.Rows.PersonRankHelper
  langs:
  - csharp
  - vb
  name: PersonRankHelper()
  nameWithType: PersonRankHelper.PersonRankHelper()
  fullName: SuperOffice.CRM.Rows.PersonRankHelper.PersonRankHelper()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  syntax:
    content: public PersonRankHelper()
    content.vb: Public Sub New
  overload: SuperOffice.CRM.Rows.PersonRankHelper.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.PersonRankHelper.ChangePersonRankAsync(System.Int32,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Rows.PersonRankHelper.ChangePersonRankAsync(System.Int32,System.Boolean,System.Threading.CancellationToken)
  id: ChangePersonRankAsync(System.Int32,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Rows.PersonRankHelper
  langs:
  - csharp
  - vb
  name: ChangePersonRankAsync(Int32, Boolean, CancellationToken)
  nameWithType: PersonRankHelper.ChangePersonRankAsync(Int32, Boolean, CancellationToken)
  fullName: SuperOffice.CRM.Rows.PersonRankHelper.ChangePersonRankAsync(System.Int32, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nMove one person up or down in the ranking in the Person Archive, if possible.<p></p>The person record that has rank = 1 is the primary contact for a company, and is the one used in situations where no person has been explicitly chosen (such as in selections).<p></p>This method corresponds to the move up/move down functions in the person archive in the contact panel.<p></p>This method always affects two records.\n"
  syntax:
    content: public Task<int> ChangePersonRankAsync(int personId, bool moveUp, CancellationToken cancellationToken)
    parameters:
    - id: personId
      type: System.Int32
      description: Primary key of person record to move up or down. You must have write access both to this record AND to whatever record is adjacent in the direction you want to move.
    - id: moveUp
      type: System.Boolean
      description: If true, the given person is moved to an earlier rank (lower numeric rank value, down to a limit of 1; up in the GUI if sorted by ascending rank). If false, movement is to later priority (higher numeric rank value).
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: If movement occurred, the return value will be the ID of the OTHER person that got moved. A GUI should switch the positions of the original person ID and this return value.<p></p>If no movement occurred, for any reason,  0 is returned.
    content.vb: Public Function ChangePersonRankAsync(personId As Integer, moveUp As Boolean, cancellationToken As CancellationToken) As Task(Of Integer)
  overload: SuperOffice.CRM.Rows.PersonRankHelper.ChangePersonRankAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.PersonRankHelper.SetPersonRankAsync(System.Int32,System.Int16,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Rows.PersonRankHelper.SetPersonRankAsync(System.Int32,System.Int16,System.Threading.CancellationToken)
  id: SetPersonRankAsync(System.Int32,System.Int16,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Rows.PersonRankHelper
  langs:
  - csharp
  - vb
  name: SetPersonRankAsync(Int32, Int16, CancellationToken)
  nameWithType: PersonRankHelper.SetPersonRankAsync(Int32, Int16, CancellationToken)
  fullName: SuperOffice.CRM.Rows.PersonRankHelper.SetPersonRankAsync(System.Int32, System.Int16, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nDirectly set the rank field of a person record, adjusting all other person records under the same contact as needed.<p></p>This call may affect multiple records, potentially all person records belonging to one contact.<p></p>You must have write access for to affected records for this method to succeed.\n"
  syntax:
    content: public Task<bool> SetPersonRankAsync(int personId, short desiredRank, CancellationToken cancellationToken)
    parameters:
    - id: personId
      type: System.Int32
      description: Id of person to change
    - id: desiredRank
      type: System.Int16
      description: Desired rank to set, legal values are from 1 to the number of person records on this contact. Out of range values will be moved to the closest valid value and processed.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: 'If movement occurred, or the person already had exactly the desired rank value, then the return value will be true. If movement did not occur, for any other reason, the return value is false. '
    content.vb: Public Function SetPersonRankAsync(personId As Integer, desiredRank As Short, cancellationToken As CancellationToken) As Task(Of Boolean)
  overload: SuperOffice.CRM.Rows.PersonRankHelper.SetPersonRankAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.PersonRankHelper.NormalizeRanksAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Rows.PersonRankHelper.NormalizeRanksAsync(System.Int32,System.Threading.CancellationToken)
  id: NormalizeRanksAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Rows.PersonRankHelper
  langs:
  - csharp
  - vb
  name: NormalizeRanksAsync(Int32, CancellationToken)
  nameWithType: PersonRankHelper.NormalizeRanksAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Rows.PersonRankHelper.NormalizeRanksAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nNomralize the ranks for all persons that belong to a contact. This means that the persons will be sorted according to their current rank values, and the ranks will be made monotonically increasing from 1.\n"
  syntax:
    content: public Task<bool> NormalizeRanksAsync(int contactId, CancellationToken cancellationToken)
    parameters:
    - id: contactId
      type: System.Int32
      description: Id of contact whose persons are to be rank normalized
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: The reutrn value is true if the operation suceeded, either because all persons were already normalized, or because normalization was done. It is false if Sentry blocks any required changes.
    content.vb: Public Function NormalizeRanksAsync(contactId As Integer, cancellationToken As CancellationToken) As Task(Of Boolean)
  overload: SuperOffice.CRM.Rows.PersonRankHelper.NormalizeRanksAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.CRM.Rows
  commentId: N:SuperOffice.CRM.Rows
  isExternal: true
  name: SuperOffice.CRM.Rows
  nameWithType: SuperOffice.CRM.Rows
  fullName: SuperOffice.CRM.Rows
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.CRM.Rows.PersonRankHelper.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<PersonRankHelper, To>()
  nameWithType: EnumUtil.MapEnums<PersonRankHelper, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Rows.PersonRankHelper, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of PersonRankHelper, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Rows.PersonRankHelper, To)()
  name.vb: MapEnums(Of PersonRankHelper, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<PersonRankHelper, To>
    nameWithType: EnumUtil.MapEnums<PersonRankHelper, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Rows.PersonRankHelper, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of PersonRankHelper, To)
    nameWithType: EnumUtil.MapEnums(Of PersonRankHelper, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Rows.PersonRankHelper, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.PersonRankHelper.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Rows.PersonRankHelper)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<PersonRankHelper>(PersonRankHelper)
  nameWithType: ObjectExtensions.AssignByReflection<PersonRankHelper>(PersonRankHelper)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Rows.PersonRankHelper>(SuperOffice.CRM.Rows.PersonRankHelper)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of PersonRankHelper)(PersonRankHelper)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Rows.PersonRankHelper)(SuperOffice.CRM.Rows.PersonRankHelper)
  name.vb: AssignByReflection(Of PersonRankHelper)(PersonRankHelper)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<PersonRankHelper>
    nameWithType: ObjectExtensions.AssignByReflection<PersonRankHelper>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Rows.PersonRankHelper>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.PersonRankHelper
    name: PersonRankHelper
    nameWithType: PersonRankHelper
    fullName: SuperOffice.CRM.Rows.PersonRankHelper
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of PersonRankHelper)
    nameWithType: ObjectExtensions.AssignByReflection(Of PersonRankHelper)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Rows.PersonRankHelper)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.PersonRankHelper
    name: PersonRankHelper
    nameWithType: PersonRankHelper
    fullName: SuperOffice.CRM.Rows.PersonRankHelper
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.PersonRankHelper.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<PersonRankHelper>()
  nameWithType: ObjectExtensions.GraphCopy<PersonRankHelper>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Rows.PersonRankHelper>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of PersonRankHelper)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Rows.PersonRankHelper)()
  name.vb: GraphCopy(Of PersonRankHelper)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<PersonRankHelper>
    nameWithType: ObjectExtensions.GraphCopy<PersonRankHelper>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Rows.PersonRankHelper>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of PersonRankHelper)
    nameWithType: ObjectExtensions.GraphCopy(Of PersonRankHelper)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Rows.PersonRankHelper)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.PersonRankHelper.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<PersonRankHelper, To>()
  nameWithType: Converters.MapEnums<PersonRankHelper, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Rows.PersonRankHelper, To>()
  nameWithType.vb: Converters.MapEnums(Of PersonRankHelper, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Rows.PersonRankHelper, To)()
  name.vb: MapEnums(Of PersonRankHelper, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<PersonRankHelper, To>
    nameWithType: Converters.MapEnums<PersonRankHelper, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Rows.PersonRankHelper, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of PersonRankHelper, To)
    nameWithType: Converters.MapEnums(Of PersonRankHelper, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Rows.PersonRankHelper, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Rows.PersonRankHelper.#ctor*
  commentId: Overload:SuperOffice.CRM.Rows.PersonRankHelper.#ctor
  isExternal: true
  name: PersonRankHelper
  nameWithType: PersonRankHelper.PersonRankHelper
  fullName: SuperOffice.CRM.Rows.PersonRankHelper.PersonRankHelper
- uid: SuperOffice.CRM.Rows.PersonRankHelper.ChangePersonRankAsync*
  commentId: Overload:SuperOffice.CRM.Rows.PersonRankHelper.ChangePersonRankAsync
  isExternal: true
  name: ChangePersonRankAsync
  nameWithType: PersonRankHelper.ChangePersonRankAsync
  fullName: SuperOffice.CRM.Rows.PersonRankHelper.ChangePersonRankAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: '!:System.Threading.Tasks.Task{System.Int32}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  nameWithType.vb: Task(Of Int32)
  fullName.vb: System.Threading.Tasks.Task(Of System.Int32)
  name.vb: Task(Of Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.PersonRankHelper.SetPersonRankAsync*
  commentId: Overload:SuperOffice.CRM.Rows.PersonRankHelper.SetPersonRankAsync
  isExternal: true
  name: SetPersonRankAsync
  nameWithType: PersonRankHelper.SetPersonRankAsync
  fullName: SuperOffice.CRM.Rows.PersonRankHelper.SetPersonRankAsync
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: '!:System.Threading.Tasks.Task{System.Boolean}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.PersonRankHelper.NormalizeRanksAsync*
  commentId: Overload:SuperOffice.CRM.Rows.PersonRankHelper.NormalizeRanksAsync
  isExternal: true
  name: NormalizeRanksAsync
  nameWithType: PersonRankHelper.NormalizeRanksAsync
  fullName: SuperOffice.CRM.Rows.PersonRankHelper.NormalizeRanksAsync
