### YamlMime:ManagedReference
items:
- uid: SuperOffice.Data.SQL.RelationType
  commentId: T:SuperOffice.Data.SQL.RelationType
  id: RelationType
  parent: SuperOffice.Data.SQL
  children:
  - SuperOffice.Data.SQL.RelationType.InnerJoin
  - SuperOffice.Data.SQL.RelationType.LeftOuterJoin
  - SuperOffice.Data.SQL.RelationType.Restriction
  - SuperOffice.Data.SQL.RelationType.RightOuterJoin
  langs:
  - csharp
  - vb
  name: RelationType
  nameWithType: RelationType
  fullName: SuperOffice.Data.SQL.RelationType
  type: Enum
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nDescription of how a relation is expressed in a query.\n"
  syntax:
    content: public enum RelationType
    content.vb: Public Enum RelationType
  extensionMethods:
  - SuperOffice.Data.SQL.RelationType.EnumUtil.MapEnums``2
  - SuperOffice.Data.SQL.RelationType.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Data.SQL.RelationType)
  - SuperOffice.Data.SQL.RelationType.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.Data.SQL.RelationType.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: SuperOffice.Data.SQL.RelationType.Restriction
  commentId: F:SuperOffice.Data.SQL.RelationType.Restriction
  id: Restriction
  parent: SuperOffice.Data.SQL.RelationType
  langs:
  - csharp
  - vb
  name: Restriction
  nameWithType: RelationType.Restriction
  fullName: SuperOffice.Data.SQL.RelationType.Restriction
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nSpecified in the restriction clause\n"
  syntax:
    content: Restriction = 0
    return:
      type: SuperOffice.Data.SQL.RelationType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.SQL.RelationType.InnerJoin
  commentId: F:SuperOffice.Data.SQL.RelationType.InnerJoin
  id: InnerJoin
  parent: SuperOffice.Data.SQL.RelationType
  langs:
  - csharp
  - vb
  name: InnerJoin
  nameWithType: RelationType.InnerJoin
  fullName: SuperOffice.Data.SQL.RelationType.InnerJoin
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nSpecified in an INNER JOIN clause\n"
  syntax:
    content: InnerJoin = 1
    return:
      type: SuperOffice.Data.SQL.RelationType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.SQL.RelationType.LeftOuterJoin
  commentId: F:SuperOffice.Data.SQL.RelationType.LeftOuterJoin
  id: LeftOuterJoin
  parent: SuperOffice.Data.SQL.RelationType
  langs:
  - csharp
  - vb
  name: LeftOuterJoin
  nameWithType: RelationType.LeftOuterJoin
  fullName: SuperOffice.Data.SQL.RelationType.LeftOuterJoin
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nSpecified in a LEFT OUTER JOIN clause\n"
  syntax:
    content: LeftOuterJoin = 2
    return:
      type: SuperOffice.Data.SQL.RelationType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.SQL.RelationType.RightOuterJoin
  commentId: F:SuperOffice.Data.SQL.RelationType.RightOuterJoin
  id: RightOuterJoin
  parent: SuperOffice.Data.SQL.RelationType
  langs:
  - csharp
  - vb
  name: RightOuterJoin
  nameWithType: RelationType.RightOuterJoin
  fullName: SuperOffice.Data.SQL.RelationType.RightOuterJoin
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nSpecified in a RIGHT OUTER JOIN clause.\n"
  syntax:
    content: RightOuterJoin = 3
    return:
      type: SuperOffice.Data.SQL.RelationType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: SuperOffice.Data.SQL
  commentId: N:SuperOffice.Data.SQL
  isExternal: true
  name: SuperOffice.Data.SQL
  nameWithType: SuperOffice.Data.SQL
  fullName: SuperOffice.Data.SQL
- uid: SuperOffice.Data.SQL.RelationType.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<RelationType, To>()
  nameWithType: EnumUtil.MapEnums<RelationType, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Data.SQL.RelationType, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of RelationType, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Data.SQL.RelationType, To)()
  name.vb: MapEnums(Of RelationType, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<RelationType, To>
    nameWithType: EnumUtil.MapEnums<RelationType, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Data.SQL.RelationType, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of RelationType, To)
    nameWithType: EnumUtil.MapEnums(Of RelationType, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Data.SQL.RelationType, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.RelationType.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Data.SQL.RelationType)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<RelationType>(RelationType)
  nameWithType: ObjectExtensions.AssignByReflection<RelationType>(RelationType)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Data.SQL.RelationType>(SuperOffice.Data.SQL.RelationType)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of RelationType)(RelationType)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Data.SQL.RelationType)(SuperOffice.Data.SQL.RelationType)
  name.vb: AssignByReflection(Of RelationType)(RelationType)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<RelationType>
    nameWithType: ObjectExtensions.AssignByReflection<RelationType>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Data.SQL.RelationType>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.RelationType
    name: RelationType
    nameWithType: RelationType
    fullName: SuperOffice.Data.SQL.RelationType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of RelationType)
    nameWithType: ObjectExtensions.AssignByReflection(Of RelationType)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Data.SQL.RelationType)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.RelationType
    name: RelationType
    nameWithType: RelationType
    fullName: SuperOffice.Data.SQL.RelationType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.RelationType.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<RelationType>()
  nameWithType: ObjectExtensions.GraphCopy<RelationType>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Data.SQL.RelationType>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of RelationType)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Data.SQL.RelationType)()
  name.vb: GraphCopy(Of RelationType)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<RelationType>
    nameWithType: ObjectExtensions.GraphCopy<RelationType>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Data.SQL.RelationType>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of RelationType)
    nameWithType: ObjectExtensions.GraphCopy(Of RelationType)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Data.SQL.RelationType)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.RelationType.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<RelationType, To>()
  nameWithType: Converters.MapEnums<RelationType, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.SQL.RelationType, To>()
  nameWithType.vb: Converters.MapEnums(Of RelationType, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.SQL.RelationType, To)()
  name.vb: MapEnums(Of RelationType, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<RelationType, To>
    nameWithType: Converters.MapEnums<RelationType, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.SQL.RelationType, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of RelationType, To)
    nameWithType: Converters.MapEnums(Of RelationType, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.SQL.RelationType, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Data.SQL.RelationType
  commentId: T:SuperOffice.Data.SQL.RelationType
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: RelationType
  nameWithType: RelationType
  fullName: SuperOffice.Data.SQL.RelationType
