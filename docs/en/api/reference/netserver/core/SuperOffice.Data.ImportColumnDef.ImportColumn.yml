### YamlMime:ManagedReference
items:
- uid: SuperOffice.Data.ImportColumnDef.ImportColumn
  commentId: T:SuperOffice.Data.ImportColumnDef.ImportColumn
  id: ImportColumnDef.ImportColumn
  parent: SuperOffice.Data
  children:
  - SuperOffice.Data.ImportColumnDef.ImportColumn.#ctor
  - SuperOffice.Data.ImportColumnDef.ImportColumn.EisFieldName
  - SuperOffice.Data.ImportColumnDef.ImportColumn.FieldName
  - SuperOffice.Data.ImportColumnDef.ImportColumn.IsMultiple
  - SuperOffice.Data.ImportColumnDef.ImportColumn.Name
  - SuperOffice.Data.ImportColumnDef.ImportColumn.Tooltip
  langs:
  - csharp
  - vb
  name: ImportColumnDef.ImportColumn
  nameWithType: ImportColumnDef.ImportColumn
  fullName: SuperOffice.Data.ImportColumnDef.ImportColumn
  type: Class
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  syntax:
    content: public class ImportColumn
    content.vb: Public Class ImportColumn
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.Data.ImportColumnDef.ImportColumn.EnumUtil.MapEnums``2
  - SuperOffice.Data.ImportColumnDef.ImportColumn.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Data.ImportColumnDef.ImportColumn)
  - SuperOffice.Data.ImportColumnDef.ImportColumn.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.Data.ImportColumnDef.ImportColumn.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.Data.ImportColumnDef.ImportColumn.FieldName
  commentId: F:SuperOffice.Data.ImportColumnDef.ImportColumn.FieldName
  id: FieldName
  parent: SuperOffice.Data.ImportColumnDef.ImportColumn
  langs:
  - csharp
  - vb
  name: FieldName
  nameWithType: ImportColumnDef.ImportColumn.FieldName
  fullName: SuperOffice.Data.ImportColumnDef.ImportColumn.FieldName
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  syntax:
    content: public string FieldName
    return:
      type: System.String
    content.vb: Public FieldName As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.ImportColumnDef.ImportColumn.Name
  commentId: F:SuperOffice.Data.ImportColumnDef.ImportColumn.Name
  id: Name
  parent: SuperOffice.Data.ImportColumnDef.ImportColumn
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ImportColumnDef.ImportColumn.Name
  fullName: SuperOffice.Data.ImportColumnDef.ImportColumn.Name
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  syntax:
    content: public string Name
    return:
      type: System.String
    content.vb: Public Name As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.ImportColumnDef.ImportColumn.Tooltip
  commentId: F:SuperOffice.Data.ImportColumnDef.ImportColumn.Tooltip
  id: Tooltip
  parent: SuperOffice.Data.ImportColumnDef.ImportColumn
  langs:
  - csharp
  - vb
  name: Tooltip
  nameWithType: ImportColumnDef.ImportColumn.Tooltip
  fullName: SuperOffice.Data.ImportColumnDef.ImportColumn.Tooltip
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  syntax:
    content: public string Tooltip
    return:
      type: System.String
    content.vb: Public Tooltip As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.ImportColumnDef.ImportColumn.IsMultiple
  commentId: F:SuperOffice.Data.ImportColumnDef.ImportColumn.IsMultiple
  id: IsMultiple
  parent: SuperOffice.Data.ImportColumnDef.ImportColumn
  langs:
  - csharp
  - vb
  name: IsMultiple
  nameWithType: ImportColumnDef.ImportColumn.IsMultiple
  fullName: SuperOffice.Data.ImportColumnDef.ImportColumn.IsMultiple
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  syntax:
    content: public bool IsMultiple
    return:
      type: System.Boolean
    content.vb: Public IsMultiple As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.ImportColumnDef.ImportColumn.EisFieldName
  commentId: F:SuperOffice.Data.ImportColumnDef.ImportColumn.EisFieldName
  id: EisFieldName
  parent: SuperOffice.Data.ImportColumnDef.ImportColumn
  langs:
  - csharp
  - vb
  name: EisFieldName
  nameWithType: ImportColumnDef.ImportColumn.EisFieldName
  fullName: SuperOffice.Data.ImportColumnDef.ImportColumn.EisFieldName
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  syntax:
    content: public string EisFieldName
    return:
      type: System.String
    content.vb: Public EisFieldName As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.ImportColumnDef.ImportColumn.#ctor
  commentId: M:SuperOffice.Data.ImportColumnDef.ImportColumn.#ctor
  id: '#ctor'
  parent: SuperOffice.Data.ImportColumnDef.ImportColumn
  langs:
  - csharp
  - vb
  name: ImportColumn()
  nameWithType: ImportColumnDef.ImportColumn.ImportColumn()
  fullName: SuperOffice.Data.ImportColumnDef.ImportColumn.ImportColumn()
  type: Constructor
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  syntax:
    content: public ImportColumn()
    content.vb: Public Sub New
  overload: SuperOffice.Data.ImportColumnDef.ImportColumn.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.ImportColumnDef.ImportColumn.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<ImportColumnDef.ImportColumn, To>()
  nameWithType: EnumUtil.MapEnums<ImportColumnDef.ImportColumn, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Data.ImportColumnDef.ImportColumn, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of ImportColumnDef.ImportColumn, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Data.ImportColumnDef.ImportColumn, To)()
  name.vb: MapEnums(Of ImportColumnDef.ImportColumn, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<ImportColumnDef.ImportColumn, To>
    nameWithType: EnumUtil.MapEnums<ImportColumnDef.ImportColumn, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Data.ImportColumnDef.ImportColumn, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of ImportColumnDef.ImportColumn, To)
    nameWithType: EnumUtil.MapEnums(Of ImportColumnDef.ImportColumn, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Data.ImportColumnDef.ImportColumn, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.ImportColumnDef.ImportColumn.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Data.ImportColumnDef.ImportColumn)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<ImportColumnDef.ImportColumn>(ImportColumnDef.ImportColumn)
  nameWithType: ObjectExtensions.AssignByReflection<ImportColumnDef.ImportColumn>(ImportColumnDef.ImportColumn)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Data.ImportColumnDef.ImportColumn>(SuperOffice.Data.ImportColumnDef.ImportColumn)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of ImportColumnDef.ImportColumn)(ImportColumnDef.ImportColumn)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Data.ImportColumnDef.ImportColumn)(SuperOffice.Data.ImportColumnDef.ImportColumn)
  name.vb: AssignByReflection(Of ImportColumnDef.ImportColumn)(ImportColumnDef.ImportColumn)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<ImportColumnDef.ImportColumn>
    nameWithType: ObjectExtensions.AssignByReflection<ImportColumnDef.ImportColumn>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Data.ImportColumnDef.ImportColumn>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.ImportColumnDef.ImportColumn
    name: ImportColumnDef.ImportColumn
    nameWithType: ImportColumnDef.ImportColumn
    fullName: SuperOffice.Data.ImportColumnDef.ImportColumn
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of ImportColumnDef.ImportColumn)
    nameWithType: ObjectExtensions.AssignByReflection(Of ImportColumnDef.ImportColumn)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Data.ImportColumnDef.ImportColumn)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.ImportColumnDef.ImportColumn
    name: ImportColumnDef.ImportColumn
    nameWithType: ImportColumnDef.ImportColumn
    fullName: SuperOffice.Data.ImportColumnDef.ImportColumn
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.ImportColumnDef.ImportColumn.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<ImportColumnDef.ImportColumn>()
  nameWithType: ObjectExtensions.GraphCopy<ImportColumnDef.ImportColumn>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Data.ImportColumnDef.ImportColumn>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of ImportColumnDef.ImportColumn)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Data.ImportColumnDef.ImportColumn)()
  name.vb: GraphCopy(Of ImportColumnDef.ImportColumn)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<ImportColumnDef.ImportColumn>
    nameWithType: ObjectExtensions.GraphCopy<ImportColumnDef.ImportColumn>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Data.ImportColumnDef.ImportColumn>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of ImportColumnDef.ImportColumn)
    nameWithType: ObjectExtensions.GraphCopy(Of ImportColumnDef.ImportColumn)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Data.ImportColumnDef.ImportColumn)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.ImportColumnDef.ImportColumn.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<ImportColumnDef.ImportColumn, To>()
  nameWithType: Converters.MapEnums<ImportColumnDef.ImportColumn, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.ImportColumnDef.ImportColumn, To>()
  nameWithType.vb: Converters.MapEnums(Of ImportColumnDef.ImportColumn, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.ImportColumnDef.ImportColumn, To)()
  name.vb: MapEnums(Of ImportColumnDef.ImportColumn, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<ImportColumnDef.ImportColumn, To>
    nameWithType: Converters.MapEnums<ImportColumnDef.ImportColumn, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.ImportColumnDef.ImportColumn, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of ImportColumnDef.ImportColumn, To)
    nameWithType: Converters.MapEnums(Of ImportColumnDef.ImportColumn, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.ImportColumnDef.ImportColumn, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.Data.ImportColumnDef.ImportColumn.#ctor*
  commentId: Overload:SuperOffice.Data.ImportColumnDef.ImportColumn.#ctor
  isExternal: true
  name: ImportColumn
  nameWithType: ImportColumnDef.ImportColumn.ImportColumn
  fullName: SuperOffice.Data.ImportColumnDef.ImportColumn.ImportColumn
