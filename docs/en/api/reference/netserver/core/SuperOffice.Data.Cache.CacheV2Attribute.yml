### YamlMime:ManagedReference
items:
- uid: SuperOffice.Data.Cache.CacheV2Attribute
  commentId: T:SuperOffice.Data.Cache.CacheV2Attribute
  id: CacheV2Attribute
  parent: SuperOffice.Data.Cache
  children:
  - SuperOffice.Data.Cache.CacheV2Attribute.#ctor(System.Int32)
  - SuperOffice.Data.Cache.CacheV2Attribute.AbsoluteExpirationInSeconds
  langs:
  - csharp
  - vb
  name: CacheV2Attribute
  nameWithType: CacheV2Attribute
  fullName: SuperOffice.Data.Cache.CacheV2Attribute
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Cache
  syntax:
    content: 'public class CacheV2Attribute : Attribute'
    content.vb: >-
      Public Class CacheV2Attribute
          Inherits Attribute
  inheritance:
  - System.Object
  extensionMethods:
  - SuperOffice.Data.Cache.CacheV2Attribute.EnumUtil.MapEnums``2
  - SuperOffice.Data.Cache.CacheV2Attribute.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.Data.Cache.CacheV2Attribute.#ctor(System.Int32)
  commentId: M:SuperOffice.Data.Cache.CacheV2Attribute.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: SuperOffice.Data.Cache.CacheV2Attribute
  langs:
  - csharp
  - vb
  name: CacheV2Attribute(Int32)
  nameWithType: CacheV2Attribute.CacheV2Attribute(Int32)
  fullName: SuperOffice.Data.Cache.CacheV2Attribute.CacheV2Attribute(System.Int32)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Cache
  syntax:
    content: public CacheV2Attribute(int absoluteExpirationInSeconds = 0)
    parameters:
    - id: absoluteExpirationInSeconds
      type: System.Int32
      description: "\nNumber of seconds before the local cache expires and triggers a flush.\nBy default a cache will not have an absolute expiration.\nThis expiration feature is based on timeout and is not distributed.\nThe purpose is to have read-through caches free up memory by cleaning up local (some of them potentially stale) cache items.\n"
    content.vb: Public Sub New(absoluteExpirationInSeconds As Integer = 0)
  overload: SuperOffice.Data.Cache.CacheV2Attribute.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.Cache.CacheV2Attribute.AbsoluteExpirationInSeconds
  commentId: P:SuperOffice.Data.Cache.CacheV2Attribute.AbsoluteExpirationInSeconds
  id: AbsoluteExpirationInSeconds
  parent: SuperOffice.Data.Cache.CacheV2Attribute
  langs:
  - csharp
  - vb
  name: AbsoluteExpirationInSeconds
  nameWithType: CacheV2Attribute.AbsoluteExpirationInSeconds
  fullName: SuperOffice.Data.Cache.CacheV2Attribute.AbsoluteExpirationInSeconds
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Cache
  summary: "\nNumber of seconds before the local cache expires and triggers a flush.\nBy default a cache will not have an absolute expiration.\nThis expiration feature is based on timeout and is not distributed.\nThe purpose is to have read-through caches free up memory by cleaning up local (some of them potentially stale) cache items.\n"
  syntax:
    content: public int AbsoluteExpirationInSeconds { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property AbsoluteExpirationInSeconds As Integer
  overload: SuperOffice.Data.Cache.CacheV2Attribute.AbsoluteExpirationInSeconds*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: SuperOffice.Data.Cache
  commentId: N:SuperOffice.Data.Cache
  isExternal: true
  name: SuperOffice.Data.Cache
  nameWithType: SuperOffice.Data.Cache
  fullName: SuperOffice.Data.Cache
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Data.Cache.CacheV2Attribute.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<CacheV2Attribute, To>()
  nameWithType: EnumUtil.MapEnums<CacheV2Attribute, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Data.Cache.CacheV2Attribute, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of CacheV2Attribute, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Data.Cache.CacheV2Attribute, To)()
  name.vb: MapEnums(Of CacheV2Attribute, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<CacheV2Attribute, To>
    nameWithType: EnumUtil.MapEnums<CacheV2Attribute, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Data.Cache.CacheV2Attribute, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of CacheV2Attribute, To)
    nameWithType: EnumUtil.MapEnums(Of CacheV2Attribute, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Data.Cache.CacheV2Attribute, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Cache.CacheV2Attribute.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<CacheV2Attribute, To>()
  nameWithType: Converters.MapEnums<CacheV2Attribute, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.Cache.CacheV2Attribute, To>()
  nameWithType.vb: Converters.MapEnums(Of CacheV2Attribute, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.Cache.CacheV2Attribute, To)()
  name.vb: MapEnums(Of CacheV2Attribute, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<CacheV2Attribute, To>
    nameWithType: Converters.MapEnums<CacheV2Attribute, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.Cache.CacheV2Attribute, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of CacheV2Attribute, To)
    nameWithType: Converters.MapEnums(Of CacheV2Attribute, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.Cache.CacheV2Attribute, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Data.Cache.CacheV2Attribute.#ctor*
  commentId: Overload:SuperOffice.Data.Cache.CacheV2Attribute.#ctor
  isExternal: true
  name: CacheV2Attribute
  nameWithType: CacheV2Attribute.CacheV2Attribute
  fullName: SuperOffice.Data.Cache.CacheV2Attribute.CacheV2Attribute
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.Data.Cache.CacheV2Attribute.AbsoluteExpirationInSeconds*
  commentId: Overload:SuperOffice.Data.Cache.CacheV2Attribute.AbsoluteExpirationInSeconds
  isExternal: true
  name: AbsoluteExpirationInSeconds
  nameWithType: CacheV2Attribute.AbsoluteExpirationInSeconds
  fullName: SuperOffice.Data.Cache.CacheV2Attribute.AbsoluteExpirationInSeconds
