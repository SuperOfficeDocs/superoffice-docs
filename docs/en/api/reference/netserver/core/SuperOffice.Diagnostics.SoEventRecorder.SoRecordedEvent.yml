### YamlMime:ManagedReference
items:
- uid: SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent
  commentId: T:SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent
  id: SoEventRecorder.SoRecordedEvent
  parent: SuperOffice.Diagnostics
  children:
  - SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent.#ctor(System.String,System.String)
  - SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent.Category
  - SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent.Message
  - SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent.Timestamp
  - SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent.ToString
  langs:
  - csharp
  - vb
  name: SoEventRecorder.SoRecordedEvent
  nameWithType: SoEventRecorder.SoRecordedEvent
  fullName: SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent
  type: Class
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Diagnostics
  syntax:
    content: 'public class SoRecordedEvent : Object'
    content.vb: >-
      Public Class SoRecordedEvent
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent.EnumUtil.MapEnums``2
  - SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent.#ctor(System.String,System.String)
  commentId: M:SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent
  langs:
  - csharp
  - vb
  name: SoRecordedEvent(String, String)
  nameWithType: SoEventRecorder.SoRecordedEvent.SoRecordedEvent(String, String)
  fullName: SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent.SoRecordedEvent(System.String, System.String)
  type: Constructor
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Diagnostics
  syntax:
    content: public SoRecordedEvent(string category, string message)
    parameters:
    - id: category
      type: System.String
    - id: message
      type: System.String
    content.vb: Public Sub New(category As String, message As String)
  overload: SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent.ToString
  commentId: M:SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent.ToString
  id: ToString
  parent: SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SoEventRecorder.SoRecordedEvent.ToString()
  fullName: SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent.ToString()
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Diagnostics
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent.Timestamp
  commentId: P:SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent.Timestamp
  id: Timestamp
  parent: SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent
  langs:
  - csharp
  - vb
  name: Timestamp
  nameWithType: SoEventRecorder.SoRecordedEvent.Timestamp
  fullName: SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent.Timestamp
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Diagnostics
  syntax:
    content: public DateTime Timestamp { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public ReadOnly Property Timestamp As DateTime
  overload: SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent.Timestamp*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent.Category
  commentId: P:SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent.Category
  id: Category
  parent: SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent
  langs:
  - csharp
  - vb
  name: Category
  nameWithType: SoEventRecorder.SoRecordedEvent.Category
  fullName: SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent.Category
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Diagnostics
  syntax:
    content: public string Category { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Category As String
  overload: SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent.Category*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent.Message
  commentId: P:SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent.Message
  id: Message
  parent: SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: SoEventRecorder.SoRecordedEvent.Message
  fullName: SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent.Message
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Diagnostics
  syntax:
    content: public string Message { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Message As String
  overload: SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent.Message*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: SuperOffice.Diagnostics
  commentId: N:SuperOffice.Diagnostics
  isExternal: true
  name: SuperOffice.Diagnostics
  nameWithType: SuperOffice.Diagnostics
  fullName: SuperOffice.Diagnostics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<SoEventRecorder.SoRecordedEvent, To>()
  nameWithType: EnumUtil.MapEnums<SoEventRecorder.SoRecordedEvent, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of SoEventRecorder.SoRecordedEvent, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent, To)()
  name.vb: MapEnums(Of SoEventRecorder.SoRecordedEvent, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<SoEventRecorder.SoRecordedEvent, To>
    nameWithType: EnumUtil.MapEnums<SoEventRecorder.SoRecordedEvent, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of SoEventRecorder.SoRecordedEvent, To)
    nameWithType: EnumUtil.MapEnums(Of SoEventRecorder.SoRecordedEvent, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<SoEventRecorder.SoRecordedEvent, To>()
  nameWithType: Converters.MapEnums<SoEventRecorder.SoRecordedEvent, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent, To>()
  nameWithType.vb: Converters.MapEnums(Of SoEventRecorder.SoRecordedEvent, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent, To)()
  name.vb: MapEnums(Of SoEventRecorder.SoRecordedEvent, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<SoEventRecorder.SoRecordedEvent, To>
    nameWithType: Converters.MapEnums<SoEventRecorder.SoRecordedEvent, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of SoEventRecorder.SoRecordedEvent, To)
    nameWithType: Converters.MapEnums(Of SoEventRecorder.SoRecordedEvent, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent.#ctor*
  commentId: Overload:SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent.#ctor
  isExternal: true
  name: SoRecordedEvent
  nameWithType: SoEventRecorder.SoRecordedEvent.SoRecordedEvent
  fullName: SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent.SoRecordedEvent
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent.ToString*
  commentId: Overload:SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent.ToString
  isExternal: true
  name: ToString
  nameWithType: SoEventRecorder.SoRecordedEvent.ToString
  fullName: SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent.ToString
- uid: SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent.Timestamp*
  commentId: Overload:SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent.Timestamp
  isExternal: true
  name: Timestamp
  nameWithType: SoEventRecorder.SoRecordedEvent.Timestamp
  fullName: SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent.Timestamp
- uid: System.DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent.Category*
  commentId: Overload:SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent.Category
  isExternal: true
  name: Category
  nameWithType: SoEventRecorder.SoRecordedEvent.Category
  fullName: SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent.Category
- uid: SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent.Message*
  commentId: Overload:SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent.Message
  isExternal: true
  name: Message
  nameWithType: SoEventRecorder.SoRecordedEvent.Message
  fullName: SuperOffice.Diagnostics.SoEventRecorder.SoRecordedEvent.Message
