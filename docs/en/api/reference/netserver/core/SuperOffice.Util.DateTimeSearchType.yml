### YamlMime:ManagedReference
items:
- uid: SuperOffice.Util.DateTimeSearchType
  commentId: T:SuperOffice.Util.DateTimeSearchType
  id: DateTimeSearchType
  parent: SuperOffice.Util
  children:
  - SuperOffice.Util.DateTimeSearchType.Day
  - SuperOffice.Util.DateTimeSearchType.Exact
  - SuperOffice.Util.DateTimeSearchType.HalfYear
  - SuperOffice.Util.DateTimeSearchType.Month
  - SuperOffice.Util.DateTimeSearchType.None
  - SuperOffice.Util.DateTimeSearchType.Quarter
  - SuperOffice.Util.DateTimeSearchType.value__
  - SuperOffice.Util.DateTimeSearchType.Week
  - SuperOffice.Util.DateTimeSearchType.Year
  langs:
  - csharp
  - vb
  name: DateTimeSearchType
  nameWithType: DateTimeSearchType
  fullName: SuperOffice.Util.DateTimeSearchType
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  syntax:
    content: 'public sealed class DateTimeSearchType : Enum'
    content.vb: >-
      Public NotInheritable Class DateTimeSearchType
          Inherits

           Enum
  inheritance:
  - System.Object
  extensionMethods:
  - SuperOffice.Util.DateTimeSearchType.EnumUtil.MapEnums``2
  - SuperOffice.Util.DateTimeSearchType.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: SuperOffice.Util.DateTimeSearchType.value__
  commentId: F:SuperOffice.Util.DateTimeSearchType.value__
  id: value__
  parent: SuperOffice.Util.DateTimeSearchType
  langs:
  - csharp
  - vb
  name: value__
  nameWithType: DateTimeSearchType.value__
  fullName: SuperOffice.Util.DateTimeSearchType.value__
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  syntax:
    content: public int value__
    return:
      type: System.Int32
    content.vb: Public value__ As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Util.DateTimeSearchType.None
  commentId: F:SuperOffice.Util.DateTimeSearchType.None
  id: None
  parent: SuperOffice.Util.DateTimeSearchType
  langs:
  - csharp
  - vb
  name: None
  nameWithType: DateTimeSearchType.None
  fullName: SuperOffice.Util.DateTimeSearchType.None
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  summary: "\nNone will give the parameter between minimum and max.\n"
  syntax:
    content: public const DateTimeSearchType None
    return:
      type: SuperOffice.Util.DateTimeSearchType
    content.vb: Public Const None As DateTimeSearchType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Util.DateTimeSearchType.Exact
  commentId: F:SuperOffice.Util.DateTimeSearchType.Exact
  id: Exact
  parent: SuperOffice.Util.DateTimeSearchType
  langs:
  - csharp
  - vb
  name: Exact
  nameWithType: DateTimeSearchType.Exact
  fullName: SuperOffice.Util.DateTimeSearchType.Exact
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  summary: "\nExact will give you a parameter that matches System.DateTime.Now.\n"
  syntax:
    content: public const DateTimeSearchType Exact
    return:
      type: SuperOffice.Util.DateTimeSearchType
    content.vb: Public Const Exact As DateTimeSearchType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Util.DateTimeSearchType.Day
  commentId: F:SuperOffice.Util.DateTimeSearchType.Day
  id: Day
  parent: SuperOffice.Util.DateTimeSearchType
  langs:
  - csharp
  - vb
  name: Day
  nameWithType: DateTimeSearchType.Day
  fullName: SuperOffice.Util.DateTimeSearchType.Day
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  summary: "\nDay will give you parameters between start of the current day to end of the current day.\n"
  syntax:
    content: public const DateTimeSearchType Day
    return:
      type: SuperOffice.Util.DateTimeSearchType
    content.vb: Public Const Day As DateTimeSearchType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Util.DateTimeSearchType.Week
  commentId: F:SuperOffice.Util.DateTimeSearchType.Week
  id: Week
  parent: SuperOffice.Util.DateTimeSearchType
  langs:
  - csharp
  - vb
  name: Week
  nameWithType: DateTimeSearchType.Week
  fullName: SuperOffice.Util.DateTimeSearchType.Week
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  summary: "\nWeek will give you parameters between start of the current week (Monday) to end of the current week (Sunday).\n"
  syntax:
    content: public const DateTimeSearchType Week
    return:
      type: SuperOffice.Util.DateTimeSearchType
    content.vb: Public Const Week As DateTimeSearchType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Util.DateTimeSearchType.Month
  commentId: F:SuperOffice.Util.DateTimeSearchType.Month
  id: Month
  parent: SuperOffice.Util.DateTimeSearchType
  langs:
  - csharp
  - vb
  name: Month
  nameWithType: DateTimeSearchType.Month
  fullName: SuperOffice.Util.DateTimeSearchType.Month
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  summary: "\nMonth will give you parameters between start of the current month to the end of the current month.\n"
  syntax:
    content: public const DateTimeSearchType Month
    return:
      type: SuperOffice.Util.DateTimeSearchType
    content.vb: Public Const Month As DateTimeSearchType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Util.DateTimeSearchType.Quarter
  commentId: F:SuperOffice.Util.DateTimeSearchType.Quarter
  id: Quarter
  parent: SuperOffice.Util.DateTimeSearchType
  langs:
  - csharp
  - vb
  name: Quarter
  nameWithType: DateTimeSearchType.Quarter
  fullName: SuperOffice.Util.DateTimeSearchType.Quarter
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  summary: "\nQuarter will give you parameters between start of the current quarter to the end of the current quarter.\n"
  syntax:
    content: public const DateTimeSearchType Quarter
    return:
      type: SuperOffice.Util.DateTimeSearchType
    content.vb: Public Const Quarter As DateTimeSearchType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Util.DateTimeSearchType.HalfYear
  commentId: F:SuperOffice.Util.DateTimeSearchType.HalfYear
  id: HalfYear
  parent: SuperOffice.Util.DateTimeSearchType
  langs:
  - csharp
  - vb
  name: HalfYear
  nameWithType: DateTimeSearchType.HalfYear
  fullName: SuperOffice.Util.DateTimeSearchType.HalfYear
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  summary: "\nHalfYear will give you parameters between start of the current half year to the end of the current half year.\n"
  syntax:
    content: public const DateTimeSearchType HalfYear
    return:
      type: SuperOffice.Util.DateTimeSearchType
    content.vb: Public Const HalfYear As DateTimeSearchType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Util.DateTimeSearchType.Year
  commentId: F:SuperOffice.Util.DateTimeSearchType.Year
  id: Year
  parent: SuperOffice.Util.DateTimeSearchType
  langs:
  - csharp
  - vb
  name: Year
  nameWithType: DateTimeSearchType.Year
  fullName: SuperOffice.Util.DateTimeSearchType.Year
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  summary: "\nYear will give you parameters between start of the current Year to the end of the current Year.\n"
  syntax:
    content: public const DateTimeSearchType Year
    return:
      type: SuperOffice.Util.DateTimeSearchType
    content.vb: Public Const Year As DateTimeSearchType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Util.DateTimeSearchType.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<DateTimeSearchType, To>()
  nameWithType: EnumUtil.MapEnums<DateTimeSearchType, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Util.DateTimeSearchType, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of DateTimeSearchType, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Util.DateTimeSearchType, To)()
  name.vb: MapEnums(Of DateTimeSearchType, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<DateTimeSearchType, To>
    nameWithType: EnumUtil.MapEnums<DateTimeSearchType, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Util.DateTimeSearchType, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of DateTimeSearchType, To)
    nameWithType: EnumUtil.MapEnums(Of DateTimeSearchType, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Util.DateTimeSearchType, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.DateTimeSearchType.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<DateTimeSearchType, To>()
  nameWithType: Converters.MapEnums<DateTimeSearchType, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Util.DateTimeSearchType, To>()
  nameWithType.vb: Converters.MapEnums(Of DateTimeSearchType, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Util.DateTimeSearchType, To)()
  name.vb: MapEnums(Of DateTimeSearchType, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<DateTimeSearchType, To>
    nameWithType: Converters.MapEnums<DateTimeSearchType, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Util.DateTimeSearchType, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of DateTimeSearchType, To)
    nameWithType: Converters.MapEnums(Of DateTimeSearchType, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Util.DateTimeSearchType, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.Util.DateTimeSearchType
  commentId: T:SuperOffice.Util.DateTimeSearchType
  parent: SuperOffice.Util
  isExternal: true
  name: DateTimeSearchType
  nameWithType: DateTimeSearchType
  fullName: SuperOffice.Util.DateTimeSearchType
