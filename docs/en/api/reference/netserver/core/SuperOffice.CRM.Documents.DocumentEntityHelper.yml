### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Documents.DocumentEntityHelper
  commentId: T:SuperOffice.CRM.Documents.DocumentEntityHelper
  id: DocumentEntityHelper
  parent: SuperOffice.CRM.Documents
  children:
  - SuperOffice.CRM.Documents.DocumentEntityHelper.GetSanitizedTemplateStreamAsync(System.String,System.Boolean,System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: DocumentEntityHelper
  nameWithType: DocumentEntityHelper
  fullName: SuperOffice.CRM.Documents.DocumentEntityHelper
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  syntax:
    content: 'public static class DocumentEntityHelper : Object'
    content.vb: >-
      Public Module DocumentEntityHelper
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: SuperOffice.CRM.Documents.DocumentEntityHelper.GetSanitizedTemplateStreamAsync(System.String,System.Boolean,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Documents.DocumentEntityHelper.GetSanitizedTemplateStreamAsync(System.String,System.Boolean,System.String,System.Threading.CancellationToken)
  id: GetSanitizedTemplateStreamAsync(System.String,System.Boolean,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Documents.DocumentEntityHelper
  langs:
  - csharp
  - vb
  name: GetSanitizedTemplateStreamAsync(String, Boolean, String, CancellationToken)
  nameWithType: DocumentEntityHelper.GetSanitizedTemplateStreamAsync(String, Boolean, String, CancellationToken)
  fullName: SuperOffice.CRM.Documents.DocumentEntityHelper.GetSanitizedTemplateStreamAsync(System.String, System.Boolean, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  summary: "\nRetrieve a stream to a document template based on its name, and optionally its path.\n"
  syntax:
    content: public static Task<Stream> GetSanitizedTemplateStreamAsync(string templateName, bool allowPerson, string uiCulture, CancellationToken cancellationToken = null)
    parameters:
    - id: templateName
      type: System.String
      description: Filename of template to retrieve
    - id: allowPerson
      type: System.Boolean
      description: If true, look for template in user area before default template area
    - id: uiCulture
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
      description: Open stream to the template
    content.vb: Public Shared Function GetSanitizedTemplateStreamAsync(templateName As String, allowPerson As Boolean, uiCulture As String, cancellationToken As CancellationToken = Nothing) As Task(Of Stream)
  overload: SuperOffice.CRM.Documents.DocumentEntityHelper.GetSanitizedTemplateStreamAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: SuperOffice.CRM.Documents
  commentId: N:SuperOffice.CRM.Documents
  isExternal: true
  name: SuperOffice.CRM.Documents
  nameWithType: SuperOffice.CRM.Documents
  fullName: SuperOffice.CRM.Documents
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Documents.DocumentEntityHelper.GetSanitizedTemplateStreamAsync*
  commentId: Overload:SuperOffice.CRM.Documents.DocumentEntityHelper.GetSanitizedTemplateStreamAsync
  isExternal: true
  name: GetSanitizedTemplateStreamAsync
  nameWithType: DocumentEntityHelper.GetSanitizedTemplateStreamAsync
  fullName: SuperOffice.CRM.Documents.DocumentEntityHelper.GetSanitizedTemplateStreamAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.IO.Stream}
  commentId: '!:System.Threading.Tasks.Task{System.IO.Stream}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Stream>
  nameWithType: Task<Stream>
  fullName: System.Threading.Tasks.Task<System.IO.Stream>
  nameWithType.vb: Task(Of Stream)
  fullName.vb: System.Threading.Tasks.Task(Of System.IO.Stream)
  name.vb: Task(Of Stream)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
