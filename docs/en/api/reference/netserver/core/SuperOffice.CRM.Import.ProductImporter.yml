### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Import.ProductImporter
  commentId: T:SuperOffice.CRM.Import.ProductImporter
  id: ProductImporter
  parent: SuperOffice.CRM.Import
  children:
  - SuperOffice.CRM.Import.ProductImporter.#ctor
  - SuperOffice.CRM.Import.ProductImporter.DoImport(SuperOffice.CRM.Import.ImportItem[],System.String[],System.Boolean,System.String,System.Int32,SuperOffice.CRM.Services.StringDictionary,System.Int32@,System.Int32@,System.Int32@)
  - SuperOffice.CRM.Import.ProductImporter.ImportProductImages(SuperOffice.CRM.Services.StringDictionary,SuperOffice.CRM.Entities.ProgressCallback)
  - SuperOffice.CRM.Import.ProductImporter.WriteStats(System.String)
  langs:
  - csharp
  - vb
  name: ProductImporter
  nameWithType: ProductImporter
  fullName: SuperOffice.CRM.Import.ProductImporter
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Import
  summary: "\nImplements the import functionality in NetServer\n"
  syntax:
    content: public class ProductImporter
    content.vb: Public Class ProductImporter
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.Import.ProductImporter.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Import.ProductImporter.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Import.ProductImporter)
  - SuperOffice.CRM.Import.ProductImporter.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.CRM.Import.ProductImporter.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Import.ProductImporter.#ctor
  commentId: M:SuperOffice.CRM.Import.ProductImporter.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.Import.ProductImporter
  langs:
  - csharp
  - vb
  name: ProductImporter()
  nameWithType: ProductImporter.ProductImporter()
  fullName: SuperOffice.CRM.Import.ProductImporter.ProductImporter()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Import
  summary: "\nDefault constructor\n"
  syntax:
    content: public ProductImporter()
    content.vb: Public Sub New
  overload: SuperOffice.CRM.Import.ProductImporter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Import.ProductImporter.DoImport(SuperOffice.CRM.Import.ImportItem[],System.String[],System.Boolean,System.String,System.Int32,SuperOffice.CRM.Services.StringDictionary,System.Int32@,System.Int32@,System.Int32@)
  commentId: M:SuperOffice.CRM.Import.ProductImporter.DoImport(SuperOffice.CRM.Import.ImportItem[],System.String[],System.Boolean,System.String,System.Int32,SuperOffice.CRM.Services.StringDictionary,System.Int32@,System.Int32@,System.Int32@)
  id: DoImport(SuperOffice.CRM.Import.ImportItem[],System.String[],System.Boolean,System.String,System.Int32,SuperOffice.CRM.Services.StringDictionary,System.Int32@,System.Int32@,System.Int32@)
  parent: SuperOffice.CRM.Import.ProductImporter
  langs:
  - csharp
  - vb
  name: DoImport(ImportItem[], String[], Boolean, String, Int32, StringDictionary, out Int32, out Int32, out Int32)
  nameWithType: ProductImporter.DoImport(ImportItem[], String[], Boolean, String, Int32, StringDictionary, out Int32, out Int32, out Int32)
  fullName: SuperOffice.CRM.Import.ProductImporter.DoImport(SuperOffice.CRM.Import.ImportItem[], System.String[], System.Boolean, System.String, System.Int32, SuperOffice.CRM.Services.StringDictionary, out System.Int32, out System.Int32, out System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Import
  summary: "\nImport function\n"
  syntax:
    content: public ImportItem[] DoImport(ImportItem[] rows, string[] columnDefs, bool saveForReal, string culture, int pricelistId, StringDictionary productImages, out int countInserted, out int countUpdated, out int firstInsertedProductId)
    parameters:
    - id: rows
      type: SuperOffice.CRM.Import.ImportItem[]
    - id: columnDefs
      type: System.String[]
    - id: saveForReal
      type: System.Boolean
    - id: culture
      type: System.String
    - id: pricelistId
      type: System.Int32
    - id: productImages
      type: SuperOffice.CRM.Services.StringDictionary
    - id: countInserted
      type: System.Int32
    - id: countUpdated
      type: System.Int32
    - id: firstInsertedProductId
      type: System.Int32
    return:
      type: SuperOffice.CRM.Import.ImportItem[]
    content.vb: Public Function DoImport(rows As ImportItem(), columnDefs As String(), saveForReal As Boolean, culture As String, pricelistId As Integer, productImages As StringDictionary, ByRef countInserted As Integer, ByRef countUpdated As Integer, ByRef firstInsertedProductId As Integer) As ImportItem()
  overload: SuperOffice.CRM.Import.ProductImporter.DoImport*
  nameWithType.vb: ProductImporter.DoImport(ImportItem(), String(), Boolean, String, Int32, StringDictionary, ByRef Int32, ByRef Int32, ByRef Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.Import.ProductImporter.DoImport(SuperOffice.CRM.Import.ImportItem(), System.String(), System.Boolean, System.String, System.Int32, SuperOffice.CRM.Services.StringDictionary, ByRef System.Int32, ByRef System.Int32, ByRef System.Int32)
  name.vb: DoImport(ImportItem(), String(), Boolean, String, Int32, StringDictionary, ByRef Int32, ByRef Int32, ByRef Int32)
- uid: SuperOffice.CRM.Import.ProductImporter.ImportProductImages(SuperOffice.CRM.Services.StringDictionary,SuperOffice.CRM.Entities.ProgressCallback)
  commentId: M:SuperOffice.CRM.Import.ProductImporter.ImportProductImages(SuperOffice.CRM.Services.StringDictionary,SuperOffice.CRM.Entities.ProgressCallback)
  id: ImportProductImages(SuperOffice.CRM.Services.StringDictionary,SuperOffice.CRM.Entities.ProgressCallback)
  parent: SuperOffice.CRM.Import.ProductImporter
  langs:
  - csharp
  - vb
  name: ImportProductImages(StringDictionary, ProgressCallback)
  nameWithType: ProductImporter.ImportProductImages(StringDictionary, ProgressCallback)
  fullName: SuperOffice.CRM.Import.ProductImporter.ImportProductImages(SuperOffice.CRM.Services.StringDictionary, SuperOffice.CRM.Entities.ProgressCallback)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Import
  syntax:
    content: public void ImportProductImages(StringDictionary productImages, ProgressCallback progressCallback)
    parameters:
    - id: productImages
      type: SuperOffice.CRM.Services.StringDictionary
    - id: progressCallback
      type: SuperOffice.CRM.Entities.ProgressCallback
    content.vb: Public Sub ImportProductImages(productImages As StringDictionary, progressCallback As ProgressCallback)
  overload: SuperOffice.CRM.Import.ProductImporter.ImportProductImages*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Import.ProductImporter.WriteStats(System.String)
  commentId: M:SuperOffice.CRM.Import.ProductImporter.WriteStats(System.String)
  id: WriteStats(System.String)
  parent: SuperOffice.CRM.Import.ProductImporter
  langs:
  - csharp
  - vb
  name: WriteStats(String)
  nameWithType: ProductImporter.WriteStats(String)
  fullName: SuperOffice.CRM.Import.ProductImporter.WriteStats(System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Import
  summary: "\nWrites out statistics - time and memory\n"
  syntax:
    content: public void WriteStats(string message)
    parameters:
    - id: message
      type: System.String
    content.vb: Public Sub WriteStats(message As String)
  overload: SuperOffice.CRM.Import.ProductImporter.WriteStats*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.CRM.Import
  commentId: N:SuperOffice.CRM.Import
  isExternal: true
  name: SuperOffice.CRM.Import
  nameWithType: SuperOffice.CRM.Import
  fullName: SuperOffice.CRM.Import
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Import.ProductImporter.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<ProductImporter, To>()
  nameWithType: EnumUtil.MapEnums<ProductImporter, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Import.ProductImporter, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of ProductImporter, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Import.ProductImporter, To)()
  name.vb: MapEnums(Of ProductImporter, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<ProductImporter, To>
    nameWithType: EnumUtil.MapEnums<ProductImporter, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Import.ProductImporter, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of ProductImporter, To)
    nameWithType: EnumUtil.MapEnums(Of ProductImporter, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Import.ProductImporter, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Import.ProductImporter.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Import.ProductImporter)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<ProductImporter>(ProductImporter)
  nameWithType: ObjectExtensions.AssignByReflection<ProductImporter>(ProductImporter)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Import.ProductImporter>(SuperOffice.CRM.Import.ProductImporter)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of ProductImporter)(ProductImporter)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Import.ProductImporter)(SuperOffice.CRM.Import.ProductImporter)
  name.vb: AssignByReflection(Of ProductImporter)(ProductImporter)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<ProductImporter>
    nameWithType: ObjectExtensions.AssignByReflection<ProductImporter>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Import.ProductImporter>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Import.ProductImporter
    name: ProductImporter
    nameWithType: ProductImporter
    fullName: SuperOffice.CRM.Import.ProductImporter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of ProductImporter)
    nameWithType: ObjectExtensions.AssignByReflection(Of ProductImporter)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Import.ProductImporter)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Import.ProductImporter
    name: ProductImporter
    nameWithType: ProductImporter
    fullName: SuperOffice.CRM.Import.ProductImporter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Import.ProductImporter.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<ProductImporter>()
  nameWithType: ObjectExtensions.GraphCopy<ProductImporter>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Import.ProductImporter>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of ProductImporter)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Import.ProductImporter)()
  name.vb: GraphCopy(Of ProductImporter)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<ProductImporter>
    nameWithType: ObjectExtensions.GraphCopy<ProductImporter>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Import.ProductImporter>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of ProductImporter)
    nameWithType: ObjectExtensions.GraphCopy(Of ProductImporter)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Import.ProductImporter)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Import.ProductImporter.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<ProductImporter, To>()
  nameWithType: Converters.MapEnums<ProductImporter, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Import.ProductImporter, To>()
  nameWithType.vb: Converters.MapEnums(Of ProductImporter, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Import.ProductImporter, To)()
  name.vb: MapEnums(Of ProductImporter, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<ProductImporter, To>
    nameWithType: Converters.MapEnums<ProductImporter, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Import.ProductImporter, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of ProductImporter, To)
    nameWithType: Converters.MapEnums(Of ProductImporter, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Import.ProductImporter, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Import.ProductImporter.#ctor*
  commentId: Overload:SuperOffice.CRM.Import.ProductImporter.#ctor
  isExternal: true
  name: ProductImporter
  nameWithType: ProductImporter.ProductImporter
  fullName: SuperOffice.CRM.Import.ProductImporter.ProductImporter
- uid: SuperOffice.CRM.Import.ProductImporter.DoImport*
  commentId: Overload:SuperOffice.CRM.Import.ProductImporter.DoImport
  isExternal: true
  name: DoImport
  nameWithType: ProductImporter.DoImport
  fullName: SuperOffice.CRM.Import.ProductImporter.DoImport
- uid: SuperOffice.CRM.Import.ImportItem[]
  isExternal: true
  name: ImportItem[]
  nameWithType: ImportItem[]
  fullName: SuperOffice.CRM.Import.ImportItem[]
  nameWithType.vb: ImportItem()
  fullName.vb: SuperOffice.CRM.Import.ImportItem()
  name.vb: ImportItem()
  spec.csharp:
  - uid: SuperOffice.CRM.Import.ImportItem
    name: ImportItem
    nameWithType: ImportItem
    fullName: SuperOffice.CRM.Import.ImportItem
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.Import.ImportItem
    name: ImportItem
    nameWithType: ImportItem
    fullName: SuperOffice.CRM.Import.ImportItem
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.CRM.Services.StringDictionary
  commentId: T:SuperOffice.CRM.Services.StringDictionary
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: StringDictionary
  nameWithType: StringDictionary
  fullName: SuperOffice.CRM.Services.StringDictionary
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
- uid: SuperOffice.CRM.Import.ProductImporter.ImportProductImages*
  commentId: Overload:SuperOffice.CRM.Import.ProductImporter.ImportProductImages
  isExternal: true
  name: ImportProductImages
  nameWithType: ProductImporter.ImportProductImages
  fullName: SuperOffice.CRM.Import.ProductImporter.ImportProductImages
- uid: SuperOffice.CRM.Entities.ProgressCallback
  commentId: T:SuperOffice.CRM.Entities.ProgressCallback
  parent: SuperOffice.CRM.Entities
  isExternal: true
  name: ProgressCallback
  nameWithType: ProgressCallback
  fullName: SuperOffice.CRM.Entities.ProgressCallback
- uid: SuperOffice.CRM.Entities
  commentId: N:SuperOffice.CRM.Entities
  isExternal: true
  name: SuperOffice.CRM.Entities
  nameWithType: SuperOffice.CRM.Entities
  fullName: SuperOffice.CRM.Entities
- uid: SuperOffice.CRM.Import.ProductImporter.WriteStats*
  commentId: Overload:SuperOffice.CRM.Import.ProductImporter.WriteStats
  isExternal: true
  name: WriteStats
  nameWithType: ProductImporter.WriteStats
  fullName: SuperOffice.CRM.Import.ProductImporter.WriteStats
