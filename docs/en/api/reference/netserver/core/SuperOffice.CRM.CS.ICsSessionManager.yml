### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.CS.ICsSessionManager
  commentId: T:SuperOffice.CRM.CS.ICsSessionManager
  id: ICsSessionManager
  parent: SuperOffice.CRM.CS
  children:
  - SuperOffice.CRM.CS.ICsSessionManager.CreateCsSessionAsync(System.String,SuperOffice.Data.CsLoginOrigin,System.Threading.CancellationToken)
  - SuperOffice.CRM.CS.ICsSessionManager.RemoveSessionAsync(System.Int32,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: ICsSessionManager
  nameWithType: ICsSessionManager
  fullName: SuperOffice.CRM.CS.ICsSessionManager
  type: Interface
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.CS
  syntax:
    content: public interface ICsSessionManager
    content.vb: Public Interface ICsSessionManager
  extensionMethods:
  - SuperOffice.CRM.CS.ICsSessionManager.EnumUtil.MapEnums``2
  - SuperOffice.CRM.CS.ICsSessionManager.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.CRM.CS.ICsSessionManager.CreateCsSessionAsync(System.String,SuperOffice.Data.CsLoginOrigin,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.CS.ICsSessionManager.CreateCsSessionAsync(System.String,SuperOffice.Data.CsLoginOrigin,System.Threading.CancellationToken)
  id: CreateCsSessionAsync(System.String,SuperOffice.Data.CsLoginOrigin,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.CS.ICsSessionManager
  langs:
  - csharp
  - vb
  name: CreateCsSessionAsync(String, CsLoginOrigin, CancellationToken)
  nameWithType: ICsSessionManager.CreateCsSessionAsync(String, CsLoginOrigin, CancellationToken)
  fullName: SuperOffice.CRM.CS.ICsSessionManager.CreateCsSessionAsync(System.String, SuperOffice.Data.CsLoginOrigin, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.CS
  summary: "\nCreates a new CS session.\n"
  syntax:
    content: Task<CSSessionInfo> CreateCsSessionAsync(string remoteIp, CsLoginOrigin loginOrigin, CancellationToken cancellationToken = null)
    parameters:
    - id: remoteIp
      type: System.String
      description: Remote IP address.
    - id: loginOrigin
      type: SuperOffice.Data.CsLoginOrigin
      description: Origin of a logged in user in the login table.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.CS.CSSessionInfo}
      description: CS session information
    content.vb: Function CreateCsSessionAsync(remoteIp As String, loginOrigin As CsLoginOrigin, cancellationToken As CancellationToken = Nothing) As Task(Of CSSessionInfo)
  overload: SuperOffice.CRM.CS.ICsSessionManager.CreateCsSessionAsync*
- uid: SuperOffice.CRM.CS.ICsSessionManager.RemoveSessionAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.CS.ICsSessionManager.RemoveSessionAsync(System.Int32,System.Threading.CancellationToken)
  id: RemoveSessionAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.CS.ICsSessionManager
  langs:
  - csharp
  - vb
  name: RemoveSessionAsync(Int32, CancellationToken)
  nameWithType: ICsSessionManager.RemoveSessionAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.CS.ICsSessionManager.RemoveSessionAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.CS
  summary: "\nRemoves an existing CS session based on the login id.\n"
  syntax:
    content: Task RemoveSessionAsync(int loginId, CancellationToken cancellationToken = null)
    parameters:
    - id: loginId
      type: System.Int32
      description: Session login id.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function RemoveSessionAsync(loginId As Integer, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.CS.ICsSessionManager.RemoveSessionAsync*
references:
- uid: SuperOffice.CRM.CS
  commentId: N:SuperOffice.CRM.CS
  isExternal: true
  name: SuperOffice.CRM.CS
  nameWithType: SuperOffice.CRM.CS
  fullName: SuperOffice.CRM.CS
- uid: SuperOffice.CRM.CS.ICsSessionManager.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<ICsSessionManager, To>()
  nameWithType: EnumUtil.MapEnums<ICsSessionManager, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.CS.ICsSessionManager, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of ICsSessionManager, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.CS.ICsSessionManager, To)()
  name.vb: MapEnums(Of ICsSessionManager, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<ICsSessionManager, To>
    nameWithType: EnumUtil.MapEnums<ICsSessionManager, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.CS.ICsSessionManager, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of ICsSessionManager, To)
    nameWithType: EnumUtil.MapEnums(Of ICsSessionManager, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.CS.ICsSessionManager, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.CS.ICsSessionManager.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<ICsSessionManager, To>()
  nameWithType: Converters.MapEnums<ICsSessionManager, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.CS.ICsSessionManager, To>()
  nameWithType.vb: Converters.MapEnums(Of ICsSessionManager, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.CS.ICsSessionManager, To)()
  name.vb: MapEnums(Of ICsSessionManager, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<ICsSessionManager, To>
    nameWithType: Converters.MapEnums<ICsSessionManager, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.CS.ICsSessionManager, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of ICsSessionManager, To)
    nameWithType: Converters.MapEnums(Of ICsSessionManager, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.CS.ICsSessionManager, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.CS.ICsSessionManager.CreateCsSessionAsync*
  commentId: Overload:SuperOffice.CRM.CS.ICsSessionManager.CreateCsSessionAsync
  isExternal: true
  name: CreateCsSessionAsync
  nameWithType: ICsSessionManager.CreateCsSessionAsync
  fullName: SuperOffice.CRM.CS.ICsSessionManager.CreateCsSessionAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.Data.CsLoginOrigin
  commentId: T:SuperOffice.Data.CsLoginOrigin
  parent: SuperOffice.Data
  isExternal: true
  name: CsLoginOrigin
  nameWithType: CsLoginOrigin
  fullName: SuperOffice.Data.CsLoginOrigin
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.CS.CSSessionInfo}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.CS.CSSessionInfo}'
  definition: System.Threading.Tasks.Task`1
  name: Task<CSSessionInfo>
  nameWithType: Task<CSSessionInfo>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.CS.CSSessionInfo>
  nameWithType.vb: Task(Of CSSessionInfo)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.CS.CSSessionInfo)
  name.vb: Task(Of CSSessionInfo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.CS.CSSessionInfo
    name: CSSessionInfo
    nameWithType: CSSessionInfo
    fullName: SuperOffice.CRM.CS.CSSessionInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.CS.CSSessionInfo
    name: CSSessionInfo
    nameWithType: CSSessionInfo
    fullName: SuperOffice.CRM.CS.CSSessionInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.CS.ICsSessionManager.RemoveSessionAsync*
  commentId: Overload:SuperOffice.CRM.CS.ICsSessionManager.RemoveSessionAsync
  isExternal: true
  name: RemoveSessionAsync
  nameWithType: ICsSessionManager.RemoveSessionAsync
  fullName: SuperOffice.CRM.CS.ICsSessionManager.RemoveSessionAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
