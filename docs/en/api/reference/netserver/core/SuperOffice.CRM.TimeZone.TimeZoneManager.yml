### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.TimeZone.TimeZoneManager
  commentId: T:SuperOffice.CRM.TimeZone.TimeZoneManager
  id: TimeZoneManager
  parent: SuperOffice.CRM.TimeZone
  children:
  - SuperOffice.CRM.TimeZone.TimeZoneManager.#ctor
  - SuperOffice.CRM.TimeZone.TimeZoneManager.CheckNewTimeZoneDataAvailableAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.TimeZone.TimeZoneManager.DeleteTimeZonesAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.TimeZone.TimeZoneManager.GetBaseTimeZoneId
  - SuperOffice.CRM.TimeZone.TimeZoneManager.GetDefaultTimeZonePreferenceAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.TimeZone.TimeZoneManager.InitializeTimeZoneData
  - SuperOffice.CRM.TimeZone.TimeZoneManager.SetActiveTimeZoneRowAsync(System.Int32,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.TimeZone.TimeZoneManager.SetActiveTimeZonesByFilterAsync(System.String,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.TimeZone.TimeZoneManager.SetBaseTimeZoneIdAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.TimeZone.TimeZoneManager.TimeOfLastTimeZoneUpdateAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.TimeZone.TimeZoneManager.ToggleActiveTimeZoneRowAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.TimeZone.TimeZoneManager.UpdateTimeZoneDataAsync(System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: TimeZoneManager
  nameWithType: TimeZoneManager
  fullName: SuperOffice.CRM.TimeZone.TimeZoneManager
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.TimeZone
  syntax:
    content: 'public class TimeZoneManager : Object'
    content.vb: >-
      Public Class TimeZoneManager
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - SuperOffice.CRM.TimeZone.TimeZoneManager.EnumUtil.MapEnums``2
  - SuperOffice.CRM.TimeZone.TimeZoneManager.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.TimeZone.TimeZoneManager)
  - SuperOffice.CRM.TimeZone.TimeZoneManager.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.CRM.TimeZone.TimeZoneManager.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.TimeZone.TimeZoneManager.CheckNewTimeZoneDataAvailableAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.TimeZone.TimeZoneManager.CheckNewTimeZoneDataAvailableAsync(System.Threading.CancellationToken)
  id: CheckNewTimeZoneDataAvailableAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.TimeZone.TimeZoneManager
  langs:
  - csharp
  - vb
  name: CheckNewTimeZoneDataAvailableAsync(CancellationToken)
  nameWithType: TimeZoneManager.CheckNewTimeZoneDataAvailableAsync(CancellationToken)
  fullName: SuperOffice.CRM.TimeZone.TimeZoneManager.CheckNewTimeZoneDataAvailableAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.TimeZone
  syntax:
    content: public static Task<bool> CheckNewTimeZoneDataAvailableAsync(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Shared Function CheckNewTimeZoneDataAvailableAsync(cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.TimeZone.TimeZoneManager.CheckNewTimeZoneDataAvailableAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.TimeZone.TimeZoneManager.UpdateTimeZoneDataAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.TimeZone.TimeZoneManager.UpdateTimeZoneDataAsync(System.Threading.CancellationToken)
  id: UpdateTimeZoneDataAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.TimeZone.TimeZoneManager
  langs:
  - csharp
  - vb
  name: UpdateTimeZoneDataAsync(CancellationToken)
  nameWithType: TimeZoneManager.UpdateTimeZoneDataAsync(CancellationToken)
  fullName: SuperOffice.CRM.TimeZone.TimeZoneManager.UpdateTimeZoneDataAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.TimeZone
  syntax:
    content: public static Task<bool> UpdateTimeZoneDataAsync(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Shared Function UpdateTimeZoneDataAsync(cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.TimeZone.TimeZoneManager.UpdateTimeZoneDataAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.TimeZone.TimeZoneManager.TimeOfLastTimeZoneUpdateAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.TimeZone.TimeZoneManager.TimeOfLastTimeZoneUpdateAsync(System.Threading.CancellationToken)
  id: TimeOfLastTimeZoneUpdateAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.TimeZone.TimeZoneManager
  langs:
  - csharp
  - vb
  name: TimeOfLastTimeZoneUpdateAsync(CancellationToken)
  nameWithType: TimeZoneManager.TimeOfLastTimeZoneUpdateAsync(CancellationToken)
  fullName: SuperOffice.CRM.TimeZone.TimeZoneManager.TimeOfLastTimeZoneUpdateAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.TimeZone
  syntax:
    content: public static Task<DateTime> TimeOfLastTimeZoneUpdateAsync(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.DateTime}
    content.vb: Public Shared Function TimeOfLastTimeZoneUpdateAsync(cancellationToken As CancellationToken = Nothing) As Task(Of DateTime)
  overload: SuperOffice.CRM.TimeZone.TimeZoneManager.TimeOfLastTimeZoneUpdateAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.TimeZone.TimeZoneManager.ToggleActiveTimeZoneRowAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.TimeZone.TimeZoneManager.ToggleActiveTimeZoneRowAsync(System.Int32,System.Threading.CancellationToken)
  id: ToggleActiveTimeZoneRowAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.TimeZone.TimeZoneManager
  langs:
  - csharp
  - vb
  name: ToggleActiveTimeZoneRowAsync(Int32, CancellationToken)
  nameWithType: TimeZoneManager.ToggleActiveTimeZoneRowAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.TimeZone.TimeZoneManager.ToggleActiveTimeZoneRowAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.TimeZone
  syntax:
    content: public static Task ToggleActiveTimeZoneRowAsync(int id, CancellationToken cancellationToken)
    parameters:
    - id: id
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function ToggleActiveTimeZoneRowAsync(id As Integer, cancellationToken As CancellationToken) As Task
  overload: SuperOffice.CRM.TimeZone.TimeZoneManager.ToggleActiveTimeZoneRowAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.TimeZone.TimeZoneManager.SetActiveTimeZoneRowAsync(System.Int32,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.TimeZone.TimeZoneManager.SetActiveTimeZoneRowAsync(System.Int32,System.Boolean,System.Threading.CancellationToken)
  id: SetActiveTimeZoneRowAsync(System.Int32,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.TimeZone.TimeZoneManager
  langs:
  - csharp
  - vb
  name: SetActiveTimeZoneRowAsync(Int32, Boolean, CancellationToken)
  nameWithType: TimeZoneManager.SetActiveTimeZoneRowAsync(Int32, Boolean, CancellationToken)
  fullName: SuperOffice.CRM.TimeZone.TimeZoneManager.SetActiveTimeZoneRowAsync(System.Int32, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.TimeZone
  syntax:
    content: public static Task SetActiveTimeZoneRowAsync(int id, bool active, CancellationToken cancellationToken)
    parameters:
    - id: id
      type: System.Int32
    - id: active
      type: System.Boolean
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function SetActiveTimeZoneRowAsync(id As Integer, active As Boolean, cancellationToken As CancellationToken) As Task
  overload: SuperOffice.CRM.TimeZone.TimeZoneManager.SetActiveTimeZoneRowAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.TimeZone.TimeZoneManager.SetActiveTimeZonesByFilterAsync(System.String,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.TimeZone.TimeZoneManager.SetActiveTimeZonesByFilterAsync(System.String,System.Boolean,System.Threading.CancellationToken)
  id: SetActiveTimeZonesByFilterAsync(System.String,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.TimeZone.TimeZoneManager
  langs:
  - csharp
  - vb
  name: SetActiveTimeZonesByFilterAsync(String, Boolean, CancellationToken)
  nameWithType: TimeZoneManager.SetActiveTimeZonesByFilterAsync(String, Boolean, CancellationToken)
  fullName: SuperOffice.CRM.TimeZone.TimeZoneManager.SetActiveTimeZonesByFilterAsync(System.String, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.TimeZone
  syntax:
    content: public static Task SetActiveTimeZonesByFilterAsync(string filter, bool active, CancellationToken cancellationToken)
    parameters:
    - id: filter
      type: System.String
    - id: active
      type: System.Boolean
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function SetActiveTimeZonesByFilterAsync(filter As String, active As Boolean, cancellationToken As CancellationToken) As Task
  overload: SuperOffice.CRM.TimeZone.TimeZoneManager.SetActiveTimeZonesByFilterAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.TimeZone.TimeZoneManager.GetDefaultTimeZonePreferenceAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.TimeZone.TimeZoneManager.GetDefaultTimeZonePreferenceAsync(System.Threading.CancellationToken)
  id: GetDefaultTimeZonePreferenceAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.TimeZone.TimeZoneManager
  langs:
  - csharp
  - vb
  name: GetDefaultTimeZonePreferenceAsync(CancellationToken)
  nameWithType: TimeZoneManager.GetDefaultTimeZonePreferenceAsync(CancellationToken)
  fullName: SuperOffice.CRM.TimeZone.TimeZoneManager.GetDefaultTimeZonePreferenceAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.TimeZone
  syntax:
    content: public static Task<int> GetDefaultTimeZonePreferenceAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32}
    content.vb: Public Shared Function GetDefaultTimeZonePreferenceAsync(cancellationToken As CancellationToken) As Task(Of Integer)
  overload: SuperOffice.CRM.TimeZone.TimeZoneManager.GetDefaultTimeZonePreferenceAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.TimeZone.TimeZoneManager.DeleteTimeZonesAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.TimeZone.TimeZoneManager.DeleteTimeZonesAsync(System.Threading.CancellationToken)
  id: DeleteTimeZonesAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.TimeZone.TimeZoneManager
  langs:
  - csharp
  - vb
  name: DeleteTimeZonesAsync(CancellationToken)
  nameWithType: TimeZoneManager.DeleteTimeZonesAsync(CancellationToken)
  fullName: SuperOffice.CRM.TimeZone.TimeZoneManager.DeleteTimeZonesAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.TimeZone
  syntax:
    content: public static Task DeleteTimeZonesAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function DeleteTimeZonesAsync(cancellationToken As CancellationToken) As Task
  overload: SuperOffice.CRM.TimeZone.TimeZoneManager.DeleteTimeZonesAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.TimeZone.TimeZoneManager.InitializeTimeZoneData
  commentId: M:SuperOffice.CRM.TimeZone.TimeZoneManager.InitializeTimeZoneData
  id: InitializeTimeZoneData
  parent: SuperOffice.CRM.TimeZone.TimeZoneManager
  langs:
  - csharp
  - vb
  name: InitializeTimeZoneData()
  nameWithType: TimeZoneManager.InitializeTimeZoneData()
  fullName: SuperOffice.CRM.TimeZone.TimeZoneManager.InitializeTimeZoneData()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.TimeZone
  summary: "\nInitalizes the TimeZoneData\n"
  syntax:
    content: public static TimeZoneData[] InitializeTimeZoneData()
    return:
      type: SuperOffice.CRM.TimeZoneData[]
    content.vb: Public Shared Function InitializeTimeZoneData As TimeZoneData()
  overload: SuperOffice.CRM.TimeZone.TimeZoneManager.InitializeTimeZoneData*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.TimeZone.TimeZoneManager.GetBaseTimeZoneId
  commentId: M:SuperOffice.CRM.TimeZone.TimeZoneManager.GetBaseTimeZoneId
  id: GetBaseTimeZoneId
  parent: SuperOffice.CRM.TimeZone.TimeZoneManager
  langs:
  - csharp
  - vb
  name: GetBaseTimeZoneId()
  nameWithType: TimeZoneManager.GetBaseTimeZoneId()
  fullName: SuperOffice.CRM.TimeZone.TimeZoneManager.GetBaseTimeZoneId()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.TimeZone
  summary: "\nGet the base timezone id.\n"
  syntax:
    content: public static int GetBaseTimeZoneId()
    return:
      type: System.Int32
      description: Returns the base timezone id. Returns 0 if not set.
    content.vb: Public Shared Function GetBaseTimeZoneId As Integer
  overload: SuperOffice.CRM.TimeZone.TimeZoneManager.GetBaseTimeZoneId*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.TimeZone.TimeZoneManager.SetBaseTimeZoneIdAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.TimeZone.TimeZoneManager.SetBaseTimeZoneIdAsync(System.Int32,System.Threading.CancellationToken)
  id: SetBaseTimeZoneIdAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.TimeZone.TimeZoneManager
  langs:
  - csharp
  - vb
  name: SetBaseTimeZoneIdAsync(Int32, CancellationToken)
  nameWithType: TimeZoneManager.SetBaseTimeZoneIdAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.TimeZone.TimeZoneManager.SetBaseTimeZoneIdAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.TimeZone
  syntax:
    content: public static Task<bool> SetBaseTimeZoneIdAsync(int timeZoneId, CancellationToken cancellationToken)
    parameters:
    - id: timeZoneId
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Shared Function SetBaseTimeZoneIdAsync(timeZoneId As Integer, cancellationToken As CancellationToken) As Task(Of Boolean)
  overload: SuperOffice.CRM.TimeZone.TimeZoneManager.SetBaseTimeZoneIdAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.TimeZone.TimeZoneManager.#ctor
  commentId: M:SuperOffice.CRM.TimeZone.TimeZoneManager.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.TimeZone.TimeZoneManager
  langs:
  - csharp
  - vb
  name: TimeZoneManager()
  nameWithType: TimeZoneManager.TimeZoneManager()
  fullName: SuperOffice.CRM.TimeZone.TimeZoneManager.TimeZoneManager()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.TimeZone
  syntax:
    content: public TimeZoneManager()
    content.vb: Public Sub New
  overload: SuperOffice.CRM.TimeZone.TimeZoneManager.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.CRM.TimeZone
  commentId: N:SuperOffice.CRM.TimeZone
  isExternal: true
  name: SuperOffice.CRM.TimeZone
  nameWithType: SuperOffice.CRM.TimeZone
  fullName: SuperOffice.CRM.TimeZone
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.CRM.TimeZone.TimeZoneManager.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<TimeZoneManager, To>()
  nameWithType: EnumUtil.MapEnums<TimeZoneManager, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.TimeZone.TimeZoneManager, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of TimeZoneManager, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.TimeZone.TimeZoneManager, To)()
  name.vb: MapEnums(Of TimeZoneManager, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<TimeZoneManager, To>
    nameWithType: EnumUtil.MapEnums<TimeZoneManager, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.TimeZone.TimeZoneManager, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of TimeZoneManager, To)
    nameWithType: EnumUtil.MapEnums(Of TimeZoneManager, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.TimeZone.TimeZoneManager, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.TimeZone.TimeZoneManager.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.TimeZone.TimeZoneManager)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<TimeZoneManager>(TimeZoneManager)
  nameWithType: ObjectExtensions.AssignByReflection<TimeZoneManager>(TimeZoneManager)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.TimeZone.TimeZoneManager>(SuperOffice.CRM.TimeZone.TimeZoneManager)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of TimeZoneManager)(TimeZoneManager)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.TimeZone.TimeZoneManager)(SuperOffice.CRM.TimeZone.TimeZoneManager)
  name.vb: AssignByReflection(Of TimeZoneManager)(TimeZoneManager)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<TimeZoneManager>
    nameWithType: ObjectExtensions.AssignByReflection<TimeZoneManager>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.TimeZone.TimeZoneManager>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.TimeZone.TimeZoneManager
    name: TimeZoneManager
    nameWithType: TimeZoneManager
    fullName: SuperOffice.CRM.TimeZone.TimeZoneManager
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of TimeZoneManager)
    nameWithType: ObjectExtensions.AssignByReflection(Of TimeZoneManager)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.TimeZone.TimeZoneManager)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.TimeZone.TimeZoneManager
    name: TimeZoneManager
    nameWithType: TimeZoneManager
    fullName: SuperOffice.CRM.TimeZone.TimeZoneManager
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.TimeZone.TimeZoneManager.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<TimeZoneManager>()
  nameWithType: ObjectExtensions.GraphCopy<TimeZoneManager>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.TimeZone.TimeZoneManager>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of TimeZoneManager)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.TimeZone.TimeZoneManager)()
  name.vb: GraphCopy(Of TimeZoneManager)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<TimeZoneManager>
    nameWithType: ObjectExtensions.GraphCopy<TimeZoneManager>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.TimeZone.TimeZoneManager>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of TimeZoneManager)
    nameWithType: ObjectExtensions.GraphCopy(Of TimeZoneManager)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.TimeZone.TimeZoneManager)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.TimeZone.TimeZoneManager.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<TimeZoneManager, To>()
  nameWithType: Converters.MapEnums<TimeZoneManager, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.TimeZone.TimeZoneManager, To>()
  nameWithType.vb: Converters.MapEnums(Of TimeZoneManager, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.TimeZone.TimeZoneManager, To)()
  name.vb: MapEnums(Of TimeZoneManager, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<TimeZoneManager, To>
    nameWithType: Converters.MapEnums<TimeZoneManager, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.TimeZone.TimeZoneManager, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of TimeZoneManager, To)
    nameWithType: Converters.MapEnums(Of TimeZoneManager, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.TimeZone.TimeZoneManager, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.TimeZone.TimeZoneManager.CheckNewTimeZoneDataAvailableAsync*
  commentId: Overload:SuperOffice.CRM.TimeZone.TimeZoneManager.CheckNewTimeZoneDataAvailableAsync
  isExternal: true
  name: CheckNewTimeZoneDataAvailableAsync
  nameWithType: TimeZoneManager.CheckNewTimeZoneDataAvailableAsync
  fullName: SuperOffice.CRM.TimeZone.TimeZoneManager.CheckNewTimeZoneDataAvailableAsync
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: '!:System.Threading.Tasks.Task{System.Boolean}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.TimeZone.TimeZoneManager.UpdateTimeZoneDataAsync*
  commentId: Overload:SuperOffice.CRM.TimeZone.TimeZoneManager.UpdateTimeZoneDataAsync
  isExternal: true
  name: UpdateTimeZoneDataAsync
  nameWithType: TimeZoneManager.UpdateTimeZoneDataAsync
  fullName: SuperOffice.CRM.TimeZone.TimeZoneManager.UpdateTimeZoneDataAsync
- uid: SuperOffice.CRM.TimeZone.TimeZoneManager.TimeOfLastTimeZoneUpdateAsync*
  commentId: Overload:SuperOffice.CRM.TimeZone.TimeZoneManager.TimeOfLastTimeZoneUpdateAsync
  isExternal: true
  name: TimeOfLastTimeZoneUpdateAsync
  nameWithType: TimeZoneManager.TimeOfLastTimeZoneUpdateAsync
  fullName: SuperOffice.CRM.TimeZone.TimeZoneManager.TimeOfLastTimeZoneUpdateAsync
- uid: System.Threading.Tasks.Task{System.DateTime}
  commentId: '!:System.Threading.Tasks.Task{System.DateTime}'
  definition: System.Threading.Tasks.Task`1
  name: Task<DateTime>
  nameWithType: Task<DateTime>
  fullName: System.Threading.Tasks.Task<System.DateTime>
  nameWithType.vb: Task(Of DateTime)
  fullName.vb: System.Threading.Tasks.Task(Of System.DateTime)
  name.vb: Task(Of DateTime)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.TimeZone.TimeZoneManager.ToggleActiveTimeZoneRowAsync*
  commentId: Overload:SuperOffice.CRM.TimeZone.TimeZoneManager.ToggleActiveTimeZoneRowAsync
  isExternal: true
  name: ToggleActiveTimeZoneRowAsync
  nameWithType: TimeZoneManager.ToggleActiveTimeZoneRowAsync
  fullName: SuperOffice.CRM.TimeZone.TimeZoneManager.ToggleActiveTimeZoneRowAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: SuperOffice.CRM.TimeZone.TimeZoneManager.SetActiveTimeZoneRowAsync*
  commentId: Overload:SuperOffice.CRM.TimeZone.TimeZoneManager.SetActiveTimeZoneRowAsync
  isExternal: true
  name: SetActiveTimeZoneRowAsync
  nameWithType: TimeZoneManager.SetActiveTimeZoneRowAsync
  fullName: SuperOffice.CRM.TimeZone.TimeZoneManager.SetActiveTimeZoneRowAsync
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.CRM.TimeZone.TimeZoneManager.SetActiveTimeZonesByFilterAsync*
  commentId: Overload:SuperOffice.CRM.TimeZone.TimeZoneManager.SetActiveTimeZonesByFilterAsync
  isExternal: true
  name: SetActiveTimeZonesByFilterAsync
  nameWithType: TimeZoneManager.SetActiveTimeZonesByFilterAsync
  fullName: SuperOffice.CRM.TimeZone.TimeZoneManager.SetActiveTimeZonesByFilterAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.TimeZone.TimeZoneManager.GetDefaultTimeZonePreferenceAsync*
  commentId: Overload:SuperOffice.CRM.TimeZone.TimeZoneManager.GetDefaultTimeZonePreferenceAsync
  isExternal: true
  name: GetDefaultTimeZonePreferenceAsync
  nameWithType: TimeZoneManager.GetDefaultTimeZonePreferenceAsync
  fullName: SuperOffice.CRM.TimeZone.TimeZoneManager.GetDefaultTimeZonePreferenceAsync
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: '!:System.Threading.Tasks.Task{System.Int32}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  nameWithType.vb: Task(Of Int32)
  fullName.vb: System.Threading.Tasks.Task(Of System.Int32)
  name.vb: Task(Of Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.TimeZone.TimeZoneManager.DeleteTimeZonesAsync*
  commentId: Overload:SuperOffice.CRM.TimeZone.TimeZoneManager.DeleteTimeZonesAsync
  isExternal: true
  name: DeleteTimeZonesAsync
  nameWithType: TimeZoneManager.DeleteTimeZonesAsync
  fullName: SuperOffice.CRM.TimeZone.TimeZoneManager.DeleteTimeZonesAsync
- uid: SuperOffice.CRM.TimeZone.TimeZoneManager.InitializeTimeZoneData*
  commentId: Overload:SuperOffice.CRM.TimeZone.TimeZoneManager.InitializeTimeZoneData
  isExternal: true
  name: InitializeTimeZoneData
  nameWithType: TimeZoneManager.InitializeTimeZoneData
  fullName: SuperOffice.CRM.TimeZone.TimeZoneManager.InitializeTimeZoneData
- uid: SuperOffice.CRM.TimeZoneData[]
  isExternal: true
  name: TimeZoneData[]
  nameWithType: TimeZoneData[]
  fullName: SuperOffice.CRM.TimeZoneData[]
  nameWithType.vb: TimeZoneData()
  fullName.vb: SuperOffice.CRM.TimeZoneData()
  name.vb: TimeZoneData()
  spec.csharp:
  - uid: SuperOffice.CRM.TimeZoneData
    name: TimeZoneData
    nameWithType: TimeZoneData
    fullName: SuperOffice.CRM.TimeZoneData
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.TimeZoneData
    name: TimeZoneData
    nameWithType: TimeZoneData
    fullName: SuperOffice.CRM.TimeZoneData
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.TimeZone.TimeZoneManager.GetBaseTimeZoneId*
  commentId: Overload:SuperOffice.CRM.TimeZone.TimeZoneManager.GetBaseTimeZoneId
  isExternal: true
  name: GetBaseTimeZoneId
  nameWithType: TimeZoneManager.GetBaseTimeZoneId
  fullName: SuperOffice.CRM.TimeZone.TimeZoneManager.GetBaseTimeZoneId
- uid: SuperOffice.CRM.TimeZone.TimeZoneManager.SetBaseTimeZoneIdAsync*
  commentId: Overload:SuperOffice.CRM.TimeZone.TimeZoneManager.SetBaseTimeZoneIdAsync
  isExternal: true
  name: SetBaseTimeZoneIdAsync
  nameWithType: TimeZoneManager.SetBaseTimeZoneIdAsync
  fullName: SuperOffice.CRM.TimeZone.TimeZoneManager.SetBaseTimeZoneIdAsync
- uid: SuperOffice.CRM.TimeZone.TimeZoneManager.#ctor*
  commentId: Overload:SuperOffice.CRM.TimeZone.TimeZoneManager.#ctor
  isExternal: true
  name: TimeZoneManager
  nameWithType: TimeZoneManager.TimeZoneManager
  fullName: SuperOffice.CRM.TimeZone.TimeZoneManager.TimeZoneManager
