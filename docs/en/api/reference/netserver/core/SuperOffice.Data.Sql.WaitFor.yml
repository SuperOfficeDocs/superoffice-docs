### YamlMime:ManagedReference
items:
- uid: SuperOffice.Data.Sql.WaitFor
  commentId: T:SuperOffice.Data.Sql.WaitFor
  id: WaitFor
  parent: SuperOffice.Data.Sql
  children:
  - SuperOffice.Data.Sql.WaitFor.#ctor(SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.Sql.WaitFor.Clone
  langs:
  - csharp
  - vb
  name: WaitFor
  nameWithType: WaitFor
  fullName: SuperOffice.Data.Sql.WaitFor
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Sql
  summary: "\nWhen used in a Select, this will cause a WAITFOR DELAY &lt;argument> to be executed in the database.\n<br />This is only intended for experimentation with statement cancellation etc., NOT for production code.\n<br />Support for Oracle may be sketchy. \n"
  remarks: "\n<pre><code>var ws = S.NewSelect();                                 // no tableinfo\nws.ReturnFields.Add(new WaitFor(S.Parameter(delay)));   // explicit creation of WaitFor element, add as returnfield\nvar result = ws.ExecuteReader().ToList();               // returns 0 rows, after the specified delay</code></pre>\n"
  syntax:
    content: 'public class WaitFor : Aggregation, ICloneable'
    content.vb: >-
      Public Class WaitFor
          Inherits Aggregation
          Implements ICloneable
  inheritance:
  - System.Object
  - SuperOffice.Data.SQL.QueryElement
  - SuperOffice.Data.SQL.Argument
  - SuperOffice.Data.SQL.Aggregation
  implements:
  - System.ICloneable
  inheritedMembers:
  - SuperOffice.Data.SQL.Aggregation._arg
  - SuperOffice.Data.SQL.Aggregation.GetMainField
  - SuperOffice.Data.SQL.Aggregation.ArgumentObject
  - SuperOffice.Data.SQL.Argument.Equal(SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.SQL.Argument.UnEqual(SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.SQL.Argument.LessThan(SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.SQL.Argument.LessThanOrEqual(SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.SQL.Argument.GreaterThan(SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.SQL.Argument.GreaterThanOrEqual(SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.SQL.Argument.Like(SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.SQL.Argument.Like(System.String)
  - SuperOffice.Data.SQL.Argument.NotLike(SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.SQL.Argument.NotBetween(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.SQL.Argument.Between(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.SQL.Argument.In(SuperOffice.Data.SQL.Argument[])
  - SuperOffice.Data.SQL.Argument.HasAny(SuperOffice.Data.SQL.Argument[])
  - SuperOffice.Data.SQL.Argument.HasAll(SuperOffice.Data.SQL.Argument[])
  - SuperOffice.Data.SQL.Argument.MissingAny(SuperOffice.Data.SQL.Argument[])
  - SuperOffice.Data.SQL.Argument.MissingAll(SuperOffice.Data.SQL.Argument[])
  - SuperOffice.Data.SQL.Argument.IsNull
  - SuperOffice.Data.SQL.Argument.IsNotNull
  - SuperOffice.Data.SQL.Argument.NotIn(SuperOffice.Data.SQL.Argument[])
  - SuperOffice.Data.SQL.Argument.HasFlag(SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.SQL.Argument.HasNoFlag(SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.SQL.Argument.ToArgumentArray``1({T}[])
  - SuperOffice.Data.SQL.Argument.ToArgumentArray``1({T}[],System.Boolean)
  - SuperOffice.Data.SQL.Argument.GetSubElements
  - SuperOffice.Data.SQL.Argument.Alias
  - SuperOffice.Data.SQL.Argument.DataType
  - SuperOffice.Data.SQL.Argument.Size
  extensionMethods:
  - SuperOffice.Data.Sql.WaitFor.EnumUtil.MapEnums``2
  - SuperOffice.Data.Sql.WaitFor.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.Data.Sql.WaitFor.#ctor(SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.Sql.WaitFor.#ctor(SuperOffice.Data.SQL.Argument)
  id: '#ctor(SuperOffice.Data.SQL.Argument)'
  parent: SuperOffice.Data.Sql.WaitFor
  langs:
  - csharp
  - vb
  name: WaitFor(Argument)
  nameWithType: WaitFor.WaitFor(Argument)
  fullName: SuperOffice.Data.Sql.WaitFor.WaitFor(SuperOffice.Data.SQL.Argument)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Sql
  summary: "\nCreate a WAITFOR statement (by using this method in a select)\n"
  syntax:
    content: public WaitFor(Argument arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.Argument
      description: How long to wait; mandatory
    content.vb: Public Sub New(arg As Argument)
  overload: SuperOffice.Data.Sql.WaitFor.#ctor*
  exceptions:
  - type: SuperOffice.Exceptions.SoIllegalOperationException
    commentId: T:SuperOffice.Exceptions.SoIllegalOperationException
    description: NULL or not TimeSpacen argument
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.Sql.WaitFor.Clone
  commentId: M:SuperOffice.Data.Sql.WaitFor.Clone
  id: Clone
  parent: SuperOffice.Data.Sql.WaitFor
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: WaitFor.Clone()
  fullName: SuperOffice.Data.Sql.WaitFor.Clone()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Sql
  syntax:
    content: public override object Clone()
    return:
      type: System.Object
    content.vb: Public Overrides Function Clone As Object
  overridden: SuperOffice.Data.SQL.QueryElement.Clone
  overload: SuperOffice.Data.Sql.WaitFor.Clone*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: SuperOffice.Data.Sql
  commentId: N:SuperOffice.Data.Sql
  isExternal: true
  name: SuperOffice.Data.Sql
  nameWithType: SuperOffice.Data.Sql
  fullName: SuperOffice.Data.Sql
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Data.SQL.QueryElement
  commentId: T:SuperOffice.Data.SQL.QueryElement
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: QueryElement
  nameWithType: QueryElement
  fullName: SuperOffice.Data.SQL.QueryElement
- uid: SuperOffice.Data.SQL.Argument
  commentId: T:SuperOffice.Data.SQL.Argument
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: Argument
  nameWithType: Argument
  fullName: SuperOffice.Data.SQL.Argument
- uid: SuperOffice.Data.SQL.Aggregation
  commentId: T:SuperOffice.Data.SQL.Aggregation
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: Aggregation
  nameWithType: Aggregation
  fullName: SuperOffice.Data.SQL.Aggregation
- uid: System.ICloneable
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: SuperOffice.Data.SQL.Aggregation._arg
  commentId: F:SuperOffice.Data.SQL.Aggregation._arg
  parent: SuperOffice.Data.SQL.Aggregation
  isExternal: true
  name: _arg
  nameWithType: Aggregation._arg
  fullName: SuperOffice.Data.SQL.Aggregation._arg
- uid: SuperOffice.Data.SQL.Aggregation.GetMainField
  commentId: M:SuperOffice.Data.SQL.Aggregation.GetMainField
  parent: SuperOffice.Data.SQL.Aggregation
  isExternal: true
  name: GetMainField()
  nameWithType: Aggregation.GetMainField()
  fullName: SuperOffice.Data.SQL.Aggregation.GetMainField()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Aggregation.GetMainField
    name: GetMainField
    nameWithType: Aggregation.GetMainField
    fullName: SuperOffice.Data.SQL.Aggregation.GetMainField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Aggregation.GetMainField
    name: GetMainField
    nameWithType: Aggregation.GetMainField
    fullName: SuperOffice.Data.SQL.Aggregation.GetMainField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Aggregation.ArgumentObject
  commentId: P:SuperOffice.Data.SQL.Aggregation.ArgumentObject
  parent: SuperOffice.Data.SQL.Aggregation
  isExternal: true
  name: ArgumentObject
  nameWithType: Aggregation.ArgumentObject
  fullName: SuperOffice.Data.SQL.Aggregation.ArgumentObject
- uid: SuperOffice.Data.SQL.Argument.Equal(SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.SQL.Argument.Equal(SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  name: Equal(Argument)
  nameWithType: Argument.Equal(Argument)
  fullName: SuperOffice.Data.SQL.Argument.Equal(SuperOffice.Data.SQL.Argument)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.Equal(SuperOffice.Data.SQL.Argument)
    name: Equal
    nameWithType: Argument.Equal
    fullName: SuperOffice.Data.SQL.Argument.Equal
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.Equal(SuperOffice.Data.SQL.Argument)
    name: Equal
    nameWithType: Argument.Equal
    fullName: SuperOffice.Data.SQL.Argument.Equal
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Argument.UnEqual(SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.SQL.Argument.UnEqual(SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  name: UnEqual(Argument)
  nameWithType: Argument.UnEqual(Argument)
  fullName: SuperOffice.Data.SQL.Argument.UnEqual(SuperOffice.Data.SQL.Argument)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.UnEqual(SuperOffice.Data.SQL.Argument)
    name: UnEqual
    nameWithType: Argument.UnEqual
    fullName: SuperOffice.Data.SQL.Argument.UnEqual
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.UnEqual(SuperOffice.Data.SQL.Argument)
    name: UnEqual
    nameWithType: Argument.UnEqual
    fullName: SuperOffice.Data.SQL.Argument.UnEqual
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Argument.LessThan(SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.SQL.Argument.LessThan(SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  name: LessThan(Argument)
  nameWithType: Argument.LessThan(Argument)
  fullName: SuperOffice.Data.SQL.Argument.LessThan(SuperOffice.Data.SQL.Argument)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.LessThan(SuperOffice.Data.SQL.Argument)
    name: LessThan
    nameWithType: Argument.LessThan
    fullName: SuperOffice.Data.SQL.Argument.LessThan
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.LessThan(SuperOffice.Data.SQL.Argument)
    name: LessThan
    nameWithType: Argument.LessThan
    fullName: SuperOffice.Data.SQL.Argument.LessThan
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Argument.LessThanOrEqual(SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.SQL.Argument.LessThanOrEqual(SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  name: LessThanOrEqual(Argument)
  nameWithType: Argument.LessThanOrEqual(Argument)
  fullName: SuperOffice.Data.SQL.Argument.LessThanOrEqual(SuperOffice.Data.SQL.Argument)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.LessThanOrEqual(SuperOffice.Data.SQL.Argument)
    name: LessThanOrEqual
    nameWithType: Argument.LessThanOrEqual
    fullName: SuperOffice.Data.SQL.Argument.LessThanOrEqual
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.LessThanOrEqual(SuperOffice.Data.SQL.Argument)
    name: LessThanOrEqual
    nameWithType: Argument.LessThanOrEqual
    fullName: SuperOffice.Data.SQL.Argument.LessThanOrEqual
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Argument.GreaterThan(SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.SQL.Argument.GreaterThan(SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  name: GreaterThan(Argument)
  nameWithType: Argument.GreaterThan(Argument)
  fullName: SuperOffice.Data.SQL.Argument.GreaterThan(SuperOffice.Data.SQL.Argument)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.GreaterThan(SuperOffice.Data.SQL.Argument)
    name: GreaterThan
    nameWithType: Argument.GreaterThan
    fullName: SuperOffice.Data.SQL.Argument.GreaterThan
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.GreaterThan(SuperOffice.Data.SQL.Argument)
    name: GreaterThan
    nameWithType: Argument.GreaterThan
    fullName: SuperOffice.Data.SQL.Argument.GreaterThan
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Argument.GreaterThanOrEqual(SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.SQL.Argument.GreaterThanOrEqual(SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  name: GreaterThanOrEqual(Argument)
  nameWithType: Argument.GreaterThanOrEqual(Argument)
  fullName: SuperOffice.Data.SQL.Argument.GreaterThanOrEqual(SuperOffice.Data.SQL.Argument)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.GreaterThanOrEqual(SuperOffice.Data.SQL.Argument)
    name: GreaterThanOrEqual
    nameWithType: Argument.GreaterThanOrEqual
    fullName: SuperOffice.Data.SQL.Argument.GreaterThanOrEqual
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.GreaterThanOrEqual(SuperOffice.Data.SQL.Argument)
    name: GreaterThanOrEqual
    nameWithType: Argument.GreaterThanOrEqual
    fullName: SuperOffice.Data.SQL.Argument.GreaterThanOrEqual
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Argument.Like(SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.SQL.Argument.Like(SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  name: Like(Argument)
  nameWithType: Argument.Like(Argument)
  fullName: SuperOffice.Data.SQL.Argument.Like(SuperOffice.Data.SQL.Argument)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.Like(SuperOffice.Data.SQL.Argument)
    name: Like
    nameWithType: Argument.Like
    fullName: SuperOffice.Data.SQL.Argument.Like
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.Like(SuperOffice.Data.SQL.Argument)
    name: Like
    nameWithType: Argument.Like
    fullName: SuperOffice.Data.SQL.Argument.Like
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Argument.Like(System.String)
  commentId: M:SuperOffice.Data.SQL.Argument.Like(System.String)
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  name: Like(String)
  nameWithType: Argument.Like(String)
  fullName: SuperOffice.Data.SQL.Argument.Like(System.String)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.Like(System.String)
    name: Like
    nameWithType: Argument.Like
    fullName: SuperOffice.Data.SQL.Argument.Like
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.Like(System.String)
    name: Like
    nameWithType: Argument.Like
    fullName: SuperOffice.Data.SQL.Argument.Like
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Argument.NotLike(SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.SQL.Argument.NotLike(SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  name: NotLike(Argument)
  nameWithType: Argument.NotLike(Argument)
  fullName: SuperOffice.Data.SQL.Argument.NotLike(SuperOffice.Data.SQL.Argument)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.NotLike(SuperOffice.Data.SQL.Argument)
    name: NotLike
    nameWithType: Argument.NotLike
    fullName: SuperOffice.Data.SQL.Argument.NotLike
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.NotLike(SuperOffice.Data.SQL.Argument)
    name: NotLike
    nameWithType: Argument.NotLike
    fullName: SuperOffice.Data.SQL.Argument.NotLike
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Argument.NotBetween(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.SQL.Argument.NotBetween(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  name: NotBetween(Argument, Argument)
  nameWithType: Argument.NotBetween(Argument, Argument)
  fullName: SuperOffice.Data.SQL.Argument.NotBetween(SuperOffice.Data.SQL.Argument, SuperOffice.Data.SQL.Argument)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.NotBetween(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
    name: NotBetween
    nameWithType: Argument.NotBetween
    fullName: SuperOffice.Data.SQL.Argument.NotBetween
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.NotBetween(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
    name: NotBetween
    nameWithType: Argument.NotBetween
    fullName: SuperOffice.Data.SQL.Argument.NotBetween
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Argument.Between(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.SQL.Argument.Between(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  name: Between(Argument, Argument)
  nameWithType: Argument.Between(Argument, Argument)
  fullName: SuperOffice.Data.SQL.Argument.Between(SuperOffice.Data.SQL.Argument, SuperOffice.Data.SQL.Argument)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.Between(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
    name: Between
    nameWithType: Argument.Between
    fullName: SuperOffice.Data.SQL.Argument.Between
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.Between(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
    name: Between
    nameWithType: Argument.Between
    fullName: SuperOffice.Data.SQL.Argument.Between
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Argument.In(SuperOffice.Data.SQL.Argument[])
  commentId: M:SuperOffice.Data.SQL.Argument.In(SuperOffice.Data.SQL.Argument[])
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  name: In(Argument[])
  nameWithType: Argument.In(Argument[])
  fullName: SuperOffice.Data.SQL.Argument.In(SuperOffice.Data.SQL.Argument[])
  nameWithType.vb: Argument.In(Argument())
  fullName.vb: SuperOffice.Data.SQL.Argument.In(SuperOffice.Data.SQL.Argument())
  name.vb: In(Argument())
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.In(SuperOffice.Data.SQL.Argument[])
    name: In
    nameWithType: Argument.In
    fullName: SuperOffice.Data.SQL.Argument.In
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.In(SuperOffice.Data.SQL.Argument[])
    name: In
    nameWithType: Argument.In
    fullName: SuperOffice.Data.SQL.Argument.In
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Argument.HasAny(SuperOffice.Data.SQL.Argument[])
  commentId: M:SuperOffice.Data.SQL.Argument.HasAny(SuperOffice.Data.SQL.Argument[])
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  name: HasAny(Argument[])
  nameWithType: Argument.HasAny(Argument[])
  fullName: SuperOffice.Data.SQL.Argument.HasAny(SuperOffice.Data.SQL.Argument[])
  nameWithType.vb: Argument.HasAny(Argument())
  fullName.vb: SuperOffice.Data.SQL.Argument.HasAny(SuperOffice.Data.SQL.Argument())
  name.vb: HasAny(Argument())
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.HasAny(SuperOffice.Data.SQL.Argument[])
    name: HasAny
    nameWithType: Argument.HasAny
    fullName: SuperOffice.Data.SQL.Argument.HasAny
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.HasAny(SuperOffice.Data.SQL.Argument[])
    name: HasAny
    nameWithType: Argument.HasAny
    fullName: SuperOffice.Data.SQL.Argument.HasAny
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Argument.HasAll(SuperOffice.Data.SQL.Argument[])
  commentId: M:SuperOffice.Data.SQL.Argument.HasAll(SuperOffice.Data.SQL.Argument[])
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  name: HasAll(Argument[])
  nameWithType: Argument.HasAll(Argument[])
  fullName: SuperOffice.Data.SQL.Argument.HasAll(SuperOffice.Data.SQL.Argument[])
  nameWithType.vb: Argument.HasAll(Argument())
  fullName.vb: SuperOffice.Data.SQL.Argument.HasAll(SuperOffice.Data.SQL.Argument())
  name.vb: HasAll(Argument())
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.HasAll(SuperOffice.Data.SQL.Argument[])
    name: HasAll
    nameWithType: Argument.HasAll
    fullName: SuperOffice.Data.SQL.Argument.HasAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.HasAll(SuperOffice.Data.SQL.Argument[])
    name: HasAll
    nameWithType: Argument.HasAll
    fullName: SuperOffice.Data.SQL.Argument.HasAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Argument.MissingAny(SuperOffice.Data.SQL.Argument[])
  commentId: M:SuperOffice.Data.SQL.Argument.MissingAny(SuperOffice.Data.SQL.Argument[])
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  name: MissingAny(Argument[])
  nameWithType: Argument.MissingAny(Argument[])
  fullName: SuperOffice.Data.SQL.Argument.MissingAny(SuperOffice.Data.SQL.Argument[])
  nameWithType.vb: Argument.MissingAny(Argument())
  fullName.vb: SuperOffice.Data.SQL.Argument.MissingAny(SuperOffice.Data.SQL.Argument())
  name.vb: MissingAny(Argument())
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.MissingAny(SuperOffice.Data.SQL.Argument[])
    name: MissingAny
    nameWithType: Argument.MissingAny
    fullName: SuperOffice.Data.SQL.Argument.MissingAny
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.MissingAny(SuperOffice.Data.SQL.Argument[])
    name: MissingAny
    nameWithType: Argument.MissingAny
    fullName: SuperOffice.Data.SQL.Argument.MissingAny
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Argument.MissingAll(SuperOffice.Data.SQL.Argument[])
  commentId: M:SuperOffice.Data.SQL.Argument.MissingAll(SuperOffice.Data.SQL.Argument[])
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  name: MissingAll(Argument[])
  nameWithType: Argument.MissingAll(Argument[])
  fullName: SuperOffice.Data.SQL.Argument.MissingAll(SuperOffice.Data.SQL.Argument[])
  nameWithType.vb: Argument.MissingAll(Argument())
  fullName.vb: SuperOffice.Data.SQL.Argument.MissingAll(SuperOffice.Data.SQL.Argument())
  name.vb: MissingAll(Argument())
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.MissingAll(SuperOffice.Data.SQL.Argument[])
    name: MissingAll
    nameWithType: Argument.MissingAll
    fullName: SuperOffice.Data.SQL.Argument.MissingAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.MissingAll(SuperOffice.Data.SQL.Argument[])
    name: MissingAll
    nameWithType: Argument.MissingAll
    fullName: SuperOffice.Data.SQL.Argument.MissingAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Argument.IsNull
  commentId: M:SuperOffice.Data.SQL.Argument.IsNull
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  name: IsNull()
  nameWithType: Argument.IsNull()
  fullName: SuperOffice.Data.SQL.Argument.IsNull()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.IsNull
    name: IsNull
    nameWithType: Argument.IsNull
    fullName: SuperOffice.Data.SQL.Argument.IsNull
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.IsNull
    name: IsNull
    nameWithType: Argument.IsNull
    fullName: SuperOffice.Data.SQL.Argument.IsNull
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Argument.IsNotNull
  commentId: M:SuperOffice.Data.SQL.Argument.IsNotNull
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  name: IsNotNull()
  nameWithType: Argument.IsNotNull()
  fullName: SuperOffice.Data.SQL.Argument.IsNotNull()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.IsNotNull
    name: IsNotNull
    nameWithType: Argument.IsNotNull
    fullName: SuperOffice.Data.SQL.Argument.IsNotNull
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.IsNotNull
    name: IsNotNull
    nameWithType: Argument.IsNotNull
    fullName: SuperOffice.Data.SQL.Argument.IsNotNull
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Argument.NotIn(SuperOffice.Data.SQL.Argument[])
  commentId: M:SuperOffice.Data.SQL.Argument.NotIn(SuperOffice.Data.SQL.Argument[])
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  name: NotIn(Argument[])
  nameWithType: Argument.NotIn(Argument[])
  fullName: SuperOffice.Data.SQL.Argument.NotIn(SuperOffice.Data.SQL.Argument[])
  nameWithType.vb: Argument.NotIn(Argument())
  fullName.vb: SuperOffice.Data.SQL.Argument.NotIn(SuperOffice.Data.SQL.Argument())
  name.vb: NotIn(Argument())
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.NotIn(SuperOffice.Data.SQL.Argument[])
    name: NotIn
    nameWithType: Argument.NotIn
    fullName: SuperOffice.Data.SQL.Argument.NotIn
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.NotIn(SuperOffice.Data.SQL.Argument[])
    name: NotIn
    nameWithType: Argument.NotIn
    fullName: SuperOffice.Data.SQL.Argument.NotIn
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Argument.HasFlag(SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.SQL.Argument.HasFlag(SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  name: HasFlag(Argument)
  nameWithType: Argument.HasFlag(Argument)
  fullName: SuperOffice.Data.SQL.Argument.HasFlag(SuperOffice.Data.SQL.Argument)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.HasFlag(SuperOffice.Data.SQL.Argument)
    name: HasFlag
    nameWithType: Argument.HasFlag
    fullName: SuperOffice.Data.SQL.Argument.HasFlag
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.HasFlag(SuperOffice.Data.SQL.Argument)
    name: HasFlag
    nameWithType: Argument.HasFlag
    fullName: SuperOffice.Data.SQL.Argument.HasFlag
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Argument.HasNoFlag(SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.SQL.Argument.HasNoFlag(SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  name: HasNoFlag(Argument)
  nameWithType: Argument.HasNoFlag(Argument)
  fullName: SuperOffice.Data.SQL.Argument.HasNoFlag(SuperOffice.Data.SQL.Argument)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.HasNoFlag(SuperOffice.Data.SQL.Argument)
    name: HasNoFlag
    nameWithType: Argument.HasNoFlag
    fullName: SuperOffice.Data.SQL.Argument.HasNoFlag
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.HasNoFlag(SuperOffice.Data.SQL.Argument)
    name: HasNoFlag
    nameWithType: Argument.HasNoFlag
    fullName: SuperOffice.Data.SQL.Argument.HasNoFlag
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Argument.ToArgumentArray``1({T}[])
  commentId: M:SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[])
  parent: SuperOffice.Data.SQL.Argument
  definition: SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[])
  name: ToArgumentArray<T>(T[])
  nameWithType: Argument.ToArgumentArray<T>(T[])
  fullName: SuperOffice.Data.SQL.Argument.ToArgumentArray<T>(T[])
  nameWithType.vb: Argument.ToArgumentArray(Of T)(T())
  fullName.vb: SuperOffice.Data.SQL.Argument.ToArgumentArray(Of T)(T())
  name.vb: ToArgumentArray(Of T)(T())
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[])
    name: ToArgumentArray<T>
    nameWithType: Argument.ToArgumentArray<T>
    fullName: SuperOffice.Data.SQL.Argument.ToArgumentArray<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[])
    name: ToArgumentArray(Of T)
    nameWithType: Argument.ToArgumentArray(Of T)
    fullName: SuperOffice.Data.SQL.Argument.ToArgumentArray(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Argument.ToArgumentArray``1({T}[],System.Boolean)
  commentId: M:SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[],System.Boolean)
  parent: SuperOffice.Data.SQL.Argument
  definition: SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[],System.Boolean)
  name: ToArgumentArray<T>(T[], Boolean)
  nameWithType: Argument.ToArgumentArray<T>(T[], Boolean)
  fullName: SuperOffice.Data.SQL.Argument.ToArgumentArray<T>(T[], System.Boolean)
  nameWithType.vb: Argument.ToArgumentArray(Of T)(T(), Boolean)
  fullName.vb: SuperOffice.Data.SQL.Argument.ToArgumentArray(Of T)(T(), System.Boolean)
  name.vb: ToArgumentArray(Of T)(T(), Boolean)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[],System.Boolean)
    name: ToArgumentArray<T>
    nameWithType: Argument.ToArgumentArray<T>
    fullName: SuperOffice.Data.SQL.Argument.ToArgumentArray<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[],System.Boolean)
    name: ToArgumentArray(Of T)
    nameWithType: Argument.ToArgumentArray(Of T)
    fullName: SuperOffice.Data.SQL.Argument.ToArgumentArray(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Argument.GetSubElements
  commentId: M:SuperOffice.Data.SQL.Argument.GetSubElements
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  name: GetSubElements()
  nameWithType: Argument.GetSubElements()
  fullName: SuperOffice.Data.SQL.Argument.GetSubElements()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.GetSubElements
    name: GetSubElements
    nameWithType: Argument.GetSubElements
    fullName: SuperOffice.Data.SQL.Argument.GetSubElements
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.GetSubElements
    name: GetSubElements
    nameWithType: Argument.GetSubElements
    fullName: SuperOffice.Data.SQL.Argument.GetSubElements
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Argument.Alias
  commentId: P:SuperOffice.Data.SQL.Argument.Alias
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  name: Alias
  nameWithType: Argument.Alias
  fullName: SuperOffice.Data.SQL.Argument.Alias
- uid: SuperOffice.Data.SQL.Argument.DataType
  commentId: P:SuperOffice.Data.SQL.Argument.DataType
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  name: DataType
  nameWithType: Argument.DataType
  fullName: SuperOffice.Data.SQL.Argument.DataType
- uid: SuperOffice.Data.SQL.Argument.Size
  commentId: P:SuperOffice.Data.SQL.Argument.Size
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  name: Size
  nameWithType: Argument.Size
  fullName: SuperOffice.Data.SQL.Argument.Size
- uid: SuperOffice.Data.Sql.WaitFor.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<WaitFor, To>()
  nameWithType: EnumUtil.MapEnums<WaitFor, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Data.Sql.WaitFor, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of WaitFor, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Data.Sql.WaitFor, To)()
  name.vb: MapEnums(Of WaitFor, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<WaitFor, To>
    nameWithType: EnumUtil.MapEnums<WaitFor, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Data.Sql.WaitFor, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of WaitFor, To)
    nameWithType: EnumUtil.MapEnums(Of WaitFor, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Data.Sql.WaitFor, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Sql.WaitFor.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<WaitFor, To>()
  nameWithType: Converters.MapEnums<WaitFor, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.Sql.WaitFor, To>()
  nameWithType.vb: Converters.MapEnums(Of WaitFor, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.Sql.WaitFor, To)()
  name.vb: MapEnums(Of WaitFor, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<WaitFor, To>
    nameWithType: Converters.MapEnums<WaitFor, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.Sql.WaitFor, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of WaitFor, To)
    nameWithType: Converters.MapEnums(Of WaitFor, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.Sql.WaitFor, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Data.SQL
  commentId: N:SuperOffice.Data.SQL
  isExternal: true
  name: SuperOffice.Data.SQL
  nameWithType: SuperOffice.Data.SQL
  fullName: SuperOffice.Data.SQL
- uid: SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[])
  commentId: M:SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[])
  isExternal: true
  name: ToArgumentArray<T>(T[])
  nameWithType: Argument.ToArgumentArray<T>(T[])
  fullName: SuperOffice.Data.SQL.Argument.ToArgumentArray<T>(T[])
  nameWithType.vb: Argument.ToArgumentArray(Of T)(T())
  fullName.vb: SuperOffice.Data.SQL.Argument.ToArgumentArray(Of T)(T())
  name.vb: ToArgumentArray(Of T)(T())
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[])
    name: ToArgumentArray<T>
    nameWithType: Argument.ToArgumentArray<T>
    fullName: SuperOffice.Data.SQL.Argument.ToArgumentArray<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[])
    name: ToArgumentArray(Of T)
    nameWithType: Argument.ToArgumentArray(Of T)
    fullName: SuperOffice.Data.SQL.Argument.ToArgumentArray(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[],System.Boolean)
  commentId: M:SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[],System.Boolean)
  isExternal: true
  name: ToArgumentArray<T>(T[], Boolean)
  nameWithType: Argument.ToArgumentArray<T>(T[], Boolean)
  fullName: SuperOffice.Data.SQL.Argument.ToArgumentArray<T>(T[], System.Boolean)
  nameWithType.vb: Argument.ToArgumentArray(Of T)(T(), Boolean)
  fullName.vb: SuperOffice.Data.SQL.Argument.ToArgumentArray(Of T)(T(), System.Boolean)
  name.vb: ToArgumentArray(Of T)(T(), Boolean)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[],System.Boolean)
    name: ToArgumentArray<T>
    nameWithType: Argument.ToArgumentArray<T>
    fullName: SuperOffice.Data.SQL.Argument.ToArgumentArray<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[],System.Boolean)
    name: ToArgumentArray(Of T)
    nameWithType: Argument.ToArgumentArray(Of T)
    fullName: SuperOffice.Data.SQL.Argument.ToArgumentArray(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Data.Sql.WaitFor.#ctor*
  commentId: Overload:SuperOffice.Data.Sql.WaitFor.#ctor
  isExternal: true
  name: WaitFor
  nameWithType: WaitFor.WaitFor
  fullName: SuperOffice.Data.Sql.WaitFor.WaitFor
- uid: SuperOffice.Exceptions.SoIllegalOperationException
  commentId: T:SuperOffice.Exceptions.SoIllegalOperationException
  isExternal: true
  name: SoIllegalOperationException
  nameWithType: SoIllegalOperationException
  fullName: SuperOffice.Exceptions.SoIllegalOperationException
- uid: SuperOffice.Data.SQL.QueryElement.Clone
  commentId: M:SuperOffice.Data.SQL.QueryElement.Clone
  parent: SuperOffice.Data.SQL.QueryElement
  isExternal: true
  name: Clone()
  nameWithType: QueryElement.Clone()
  fullName: SuperOffice.Data.SQL.QueryElement.Clone()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.QueryElement.Clone
    name: Clone
    nameWithType: QueryElement.Clone
    fullName: SuperOffice.Data.SQL.QueryElement.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.QueryElement.Clone
    name: Clone
    nameWithType: QueryElement.Clone
    fullName: SuperOffice.Data.SQL.QueryElement.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Sql.WaitFor.Clone*
  commentId: Overload:SuperOffice.Data.Sql.WaitFor.Clone
  isExternal: true
  name: Clone
  nameWithType: WaitFor.Clone
  fullName: SuperOffice.Data.Sql.WaitFor.Clone
