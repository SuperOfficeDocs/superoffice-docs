### YamlMime:ManagedReference
items:
- uid: SuperOffice.Diagnostics.ISoTimeRecorderPlugin
  commentId: T:SuperOffice.Diagnostics.ISoTimeRecorderPlugin
  id: ISoTimeRecorderPlugin
  parent: SuperOffice.Diagnostics
  children:
  - SuperOffice.Diagnostics.ISoTimeRecorderPlugin.Enabled
  - SuperOffice.Diagnostics.ISoTimeRecorderPlugin.Start(SuperOffice.Diagnostics.SoTimerType,System.String,System.Func{System.String})
  langs:
  - csharp
  - vb
  name: ISoTimeRecorderPlugin
  nameWithType: ISoTimeRecorderPlugin
  fullName: SuperOffice.Diagnostics.ISoTimeRecorderPlugin
  type: Interface
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Diagnostics
  summary: "\nPlugin implemented by time recorders.  Start will be called when timing starts\n"
  syntax:
    content: 'public interface ISoTimeRecorderPlugin : IPlugin'
    content.vb: >-
      Public Interface ISoTimeRecorderPlugin
          Inherits IPlugin
  extensionMethods:
  - SuperOffice.Diagnostics.ISoTimeRecorderPlugin.EnumUtil.MapEnums``2
  - SuperOffice.Diagnostics.ISoTimeRecorderPlugin.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.Diagnostics.ISoTimeRecorderPlugin.Start(SuperOffice.Diagnostics.SoTimerType,System.String,System.Func{System.String})
  commentId: M:SuperOffice.Diagnostics.ISoTimeRecorderPlugin.Start(SuperOffice.Diagnostics.SoTimerType,System.String,System.Func{System.String})
  id: Start(SuperOffice.Diagnostics.SoTimerType,System.String,System.Func{System.String})
  parent: SuperOffice.Diagnostics.ISoTimeRecorderPlugin
  langs:
  - csharp
  - vb
  name: Start(SoTimerType, String, Func<String>)
  nameWithType: ISoTimeRecorderPlugin.Start(SoTimerType, String, Func<String>)
  fullName: SuperOffice.Diagnostics.ISoTimeRecorderPlugin.Start(SuperOffice.Diagnostics.SoTimerType, System.String, System.Func<System.String>)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Diagnostics
  summary: "\nCalled to start time logging.\n"
  syntax:
    content: ISoTimeRecorderContext Start(SoTimerType type, string category, Func<string> getDescription)
    parameters:
    - id: type
      type: SuperOffice.Diagnostics.SoTimerType
      description: What is being logged
    - id: category
      type: System.String
      description: Chosen category
    - id: getDescription
      type: System.Func{System.String}
      description: Choosen description.  Description can be costly to generate.
    return:
      type: SuperOffice.Diagnostics.ISoTimeRecorderContext
      description: Context used for timing operations.
    content.vb: Function Start(type As SoTimerType, category As String, getDescription As Func(Of String)) As ISoTimeRecorderContext
  overload: SuperOffice.Diagnostics.ISoTimeRecorderPlugin.Start*
  nameWithType.vb: ISoTimeRecorderPlugin.Start(SoTimerType, String, Func(Of String))
  fullName.vb: SuperOffice.Diagnostics.ISoTimeRecorderPlugin.Start(SuperOffice.Diagnostics.SoTimerType, System.String, System.Func(Of System.String))
  name.vb: Start(SoTimerType, String, Func(Of String))
- uid: SuperOffice.Diagnostics.ISoTimeRecorderPlugin.Enabled
  commentId: P:SuperOffice.Diagnostics.ISoTimeRecorderPlugin.Enabled
  id: Enabled
  parent: SuperOffice.Diagnostics.ISoTimeRecorderPlugin
  langs:
  - csharp
  - vb
  name: Enabled
  nameWithType: ISoTimeRecorderPlugin.Enabled
  fullName: SuperOffice.Diagnostics.ISoTimeRecorderPlugin.Enabled
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Diagnostics
  summary: "\nIs the time recorder currently enabled - like SoLogger and LogTimes in the diagnostics configuration section.\n"
  syntax:
    content: bool Enabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property Enabled As Boolean
  overload: SuperOffice.Diagnostics.ISoTimeRecorderPlugin.Enabled*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: SuperOffice.Diagnostics
  commentId: N:SuperOffice.Diagnostics
  isExternal: true
  name: SuperOffice.Diagnostics
  nameWithType: SuperOffice.Diagnostics
  fullName: SuperOffice.Diagnostics
- uid: SuperOffice.Diagnostics.ISoTimeRecorderPlugin.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<ISoTimeRecorderPlugin, To>()
  nameWithType: EnumUtil.MapEnums<ISoTimeRecorderPlugin, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Diagnostics.ISoTimeRecorderPlugin, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of ISoTimeRecorderPlugin, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Diagnostics.ISoTimeRecorderPlugin, To)()
  name.vb: MapEnums(Of ISoTimeRecorderPlugin, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<ISoTimeRecorderPlugin, To>
    nameWithType: EnumUtil.MapEnums<ISoTimeRecorderPlugin, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Diagnostics.ISoTimeRecorderPlugin, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of ISoTimeRecorderPlugin, To)
    nameWithType: EnumUtil.MapEnums(Of ISoTimeRecorderPlugin, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Diagnostics.ISoTimeRecorderPlugin, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Diagnostics.ISoTimeRecorderPlugin.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<ISoTimeRecorderPlugin, To>()
  nameWithType: Converters.MapEnums<ISoTimeRecorderPlugin, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Diagnostics.ISoTimeRecorderPlugin, To>()
  nameWithType.vb: Converters.MapEnums(Of ISoTimeRecorderPlugin, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Diagnostics.ISoTimeRecorderPlugin, To)()
  name.vb: MapEnums(Of ISoTimeRecorderPlugin, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<ISoTimeRecorderPlugin, To>
    nameWithType: Converters.MapEnums<ISoTimeRecorderPlugin, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Diagnostics.ISoTimeRecorderPlugin, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of ISoTimeRecorderPlugin, To)
    nameWithType: Converters.MapEnums(Of ISoTimeRecorderPlugin, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Diagnostics.ISoTimeRecorderPlugin, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Diagnostics.ISoTimeRecorderPlugin.Start*
  commentId: Overload:SuperOffice.Diagnostics.ISoTimeRecorderPlugin.Start
  isExternal: true
  name: Start
  nameWithType: ISoTimeRecorderPlugin.Start
  fullName: SuperOffice.Diagnostics.ISoTimeRecorderPlugin.Start
- uid: SuperOffice.Diagnostics.SoTimerType
  commentId: T:SuperOffice.Diagnostics.SoTimerType
  parent: SuperOffice.Diagnostics
  isExternal: true
  name: SoTimerType
  nameWithType: SoTimerType
  fullName: SuperOffice.Diagnostics.SoTimerType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Func{System.String}
  commentId: T:System.Func{System.String}
  parent: System
  definition: System.Func`1
  name: Func<String>
  nameWithType: Func<String>
  fullName: System.Func<System.String>
  nameWithType.vb: Func(Of String)
  fullName.vb: System.Func(Of System.String)
  name.vb: Func(Of String)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Diagnostics.ISoTimeRecorderContext
  commentId: T:SuperOffice.Diagnostics.ISoTimeRecorderContext
  parent: SuperOffice.Diagnostics
  isExternal: true
  name: ISoTimeRecorderContext
  nameWithType: ISoTimeRecorderContext
  fullName: SuperOffice.Diagnostics.ISoTimeRecorderContext
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Diagnostics.ISoTimeRecorderPlugin.Enabled*
  commentId: Overload:SuperOffice.Diagnostics.ISoTimeRecorderPlugin.Enabled
  isExternal: true
  name: Enabled
  nameWithType: ISoTimeRecorderPlugin.Enabled
  fullName: SuperOffice.Diagnostics.ISoTimeRecorderPlugin.Enabled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
