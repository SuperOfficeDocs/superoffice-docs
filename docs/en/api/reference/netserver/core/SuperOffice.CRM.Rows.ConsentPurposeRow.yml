### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow
  commentId: T:SuperOffice.CRM.Rows.ConsentPurposeRow
  id: ConsentPurposeRow
  parent: SuperOffice.CRM.Rows
  children:
  - SuperOffice.CRM.Rows.ConsentPurposeRow.#ctor(SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase)
  - SuperOffice.CRM.Rows.ConsentPurposeRow._currentActive
  - SuperOffice.CRM.Rows.ConsentPurposeRow._currentConsentPurposeId
  - SuperOffice.CRM.Rows.ConsentPurposeRow._currentConsentText
  - SuperOffice.CRM.Rows.ConsentPurposeRow._currentDeleted
  - SuperOffice.CRM.Rows.ConsentPurposeRow._currentFormText
  - SuperOffice.CRM.Rows.ConsentPurposeRow._currentKey
  - SuperOffice.CRM.Rows.ConsentPurposeRow._currentName
  - SuperOffice.CRM.Rows.ConsentPurposeRow._currentPrivacyStatementDesc
  - SuperOffice.CRM.Rows.ConsentPurposeRow._currentPrivacyStatementUrl
  - SuperOffice.CRM.Rows.ConsentPurposeRow._currentRank
  - SuperOffice.CRM.Rows.ConsentPurposeRow._currentRegistered
  - SuperOffice.CRM.Rows.ConsentPurposeRow._currentRegisteredAssociateId
  - SuperOffice.CRM.Rows.ConsentPurposeRow._currentTooltip
  - SuperOffice.CRM.Rows.ConsentPurposeRow._currentUpdated
  - SuperOffice.CRM.Rows.ConsentPurposeRow._currentUpdatedAssociateId
  - SuperOffice.CRM.Rows.ConsentPurposeRow._currentUpdatedCount
  - SuperOffice.CRM.Rows.ConsentPurposeRow._onActiveChange
  - SuperOffice.CRM.Rows.ConsentPurposeRow._onConsentTextChange
  - SuperOffice.CRM.Rows.ConsentPurposeRow._onDeletedChange
  - SuperOffice.CRM.Rows.ConsentPurposeRow._onFormTextChange
  - SuperOffice.CRM.Rows.ConsentPurposeRow._onKeyChange
  - SuperOffice.CRM.Rows.ConsentPurposeRow._onNameChange
  - SuperOffice.CRM.Rows.ConsentPurposeRow._onPrivacyStatementDescChange
  - SuperOffice.CRM.Rows.ConsentPurposeRow._onPrivacyStatementUrlChange
  - SuperOffice.CRM.Rows.ConsentPurposeRow._onRankChange
  - SuperOffice.CRM.Rows.ConsentPurposeRow._onRegisteredAssociateIdChange
  - SuperOffice.CRM.Rows.ConsentPurposeRow._onRegisteredChange
  - SuperOffice.CRM.Rows.ConsentPurposeRow._onTooltipChange
  - SuperOffice.CRM.Rows.ConsentPurposeRow._onUpdatedAssociateIdChange
  - SuperOffice.CRM.Rows.ConsentPurposeRow._onUpdatedChange
  - SuperOffice.CRM.Rows.ConsentPurposeRow._onUpdatedCountChange
  - SuperOffice.CRM.Rows.ConsentPurposeRow._persistedActive
  - SuperOffice.CRM.Rows.ConsentPurposeRow._persistedConsentPurposeId
  - SuperOffice.CRM.Rows.ConsentPurposeRow._persistedConsentText
  - SuperOffice.CRM.Rows.ConsentPurposeRow._persistedDeleted
  - SuperOffice.CRM.Rows.ConsentPurposeRow._persistedFormText
  - SuperOffice.CRM.Rows.ConsentPurposeRow._persistedKey
  - SuperOffice.CRM.Rows.ConsentPurposeRow._persistedName
  - SuperOffice.CRM.Rows.ConsentPurposeRow._persistedPrivacyStatementDesc
  - SuperOffice.CRM.Rows.ConsentPurposeRow._persistedPrivacyStatementUrl
  - SuperOffice.CRM.Rows.ConsentPurposeRow._persistedRank
  - SuperOffice.CRM.Rows.ConsentPurposeRow._persistedRegistered
  - SuperOffice.CRM.Rows.ConsentPurposeRow._persistedRegisteredAssociateId
  - SuperOffice.CRM.Rows.ConsentPurposeRow._persistedTooltip
  - SuperOffice.CRM.Rows.ConsentPurposeRow._persistedUpdated
  - SuperOffice.CRM.Rows.ConsentPurposeRow._persistedUpdatedAssociateId
  - SuperOffice.CRM.Rows.ConsentPurposeRow._persistedUpdatedCount
  - SuperOffice.CRM.Rows.ConsentPurposeRow.Active
  - SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeId
  - SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeTableInfo
  - SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentText
  - SuperOffice.CRM.Rows.ConsentPurposeRow.CreateNew
  - SuperOffice.CRM.Rows.ConsentPurposeRow.Deleted
  - SuperOffice.CRM.Rows.ConsentPurposeRow.FormText
  - SuperOffice.CRM.Rows.ConsentPurposeRow.GetFromCustomSearch(SuperOffice.CRM.Rows.ConsentPurposeRow.CustomSearch)
  - SuperOffice.CRM.Rows.ConsentPurposeRow.GetFromIdxConsentPurposeId(System.Int32)
  - SuperOffice.CRM.Rows.ConsentPurposeRow.GetFromIdxKey(System.String)
  - SuperOffice.CRM.Rows.ConsentPurposeRow.GetFromIdxName(System.String)
  - SuperOffice.CRM.Rows.ConsentPurposeRow.GetFromReader(SuperOffice.Data.SoDataReader,SuperOffice.CRM.Data.ConsentPurposeTableInfo)
  - SuperOffice.CRM.Rows.ConsentPurposeRow.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Rows.ConsentPurposeRow.InnerFieldValuePairs
  - SuperOffice.CRM.Rows.ConsentPurposeRow.InnerPrimaryKey
  - SuperOffice.CRM.Rows.ConsentPurposeRow.InnerPrimaryKeyValue
  - SuperOffice.CRM.Rows.ConsentPurposeRow.InternalSetValue(System.String,System.Object)
  - SuperOffice.CRM.Rows.ConsentPurposeRow.IsDirty
  - SuperOffice.CRM.Rows.ConsentPurposeRow.IsNew
  - SuperOffice.CRM.Rows.ConsentPurposeRow.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Rows.ConsentPurposeRow.Item(System.String)
  - SuperOffice.CRM.Rows.ConsentPurposeRow.Key
  - SuperOffice.CRM.Rows.ConsentPurposeRow.Name
  - SuperOffice.CRM.Rows.ConsentPurposeRow.OnActiveChange
  - SuperOffice.CRM.Rows.ConsentPurposeRow.OnConsentTextChange
  - SuperOffice.CRM.Rows.ConsentPurposeRow.OnDeletedChange
  - SuperOffice.CRM.Rows.ConsentPurposeRow.OnFormTextChange
  - SuperOffice.CRM.Rows.ConsentPurposeRow.OnKeyChange
  - SuperOffice.CRM.Rows.ConsentPurposeRow.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.CRM.Rows.ConsentPurposeRow.OnNameChange
  - SuperOffice.CRM.Rows.ConsentPurposeRow.OnPrivacyStatementDescChange
  - SuperOffice.CRM.Rows.ConsentPurposeRow.OnPrivacyStatementUrlChange
  - SuperOffice.CRM.Rows.ConsentPurposeRow.OnRankChange
  - SuperOffice.CRM.Rows.ConsentPurposeRow.OnRegisteredAssociateIdChange
  - SuperOffice.CRM.Rows.ConsentPurposeRow.OnRegisteredChange
  - SuperOffice.CRM.Rows.ConsentPurposeRow.OnSave(SuperOffice.Data.SQL.BatchSave)
  - SuperOffice.CRM.Rows.ConsentPurposeRow.OnSaved(System.Boolean)
  - SuperOffice.CRM.Rows.ConsentPurposeRow.OnTooltipChange
  - SuperOffice.CRM.Rows.ConsentPurposeRow.OnUpdatedAssociateIdChange
  - SuperOffice.CRM.Rows.ConsentPurposeRow.OnUpdatedChange
  - SuperOffice.CRM.Rows.ConsentPurposeRow.OnUpdatedCountChange
  - SuperOffice.CRM.Rows.ConsentPurposeRow.PrivacyStatementDesc
  - SuperOffice.CRM.Rows.ConsentPurposeRow.PrivacyStatementUrl
  - SuperOffice.CRM.Rows.ConsentPurposeRow.Rank
  - SuperOffice.CRM.Rows.ConsentPurposeRow.Registered
  - SuperOffice.CRM.Rows.ConsentPurposeRow.RegisteredAssociateId
  - SuperOffice.CRM.Rows.ConsentPurposeRow.Reset
  - SuperOffice.CRM.Rows.ConsentPurposeRow.SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
  - SuperOffice.CRM.Rows.ConsentPurposeRow.SetPrimaryKey(System.Int32)
  - SuperOffice.CRM.Rows.ConsentPurposeRow.SetRowAsNew
  - SuperOffice.CRM.Rows.ConsentPurposeRow.TableInfo
  - SuperOffice.CRM.Rows.ConsentPurposeRow.Tooltip
  - SuperOffice.CRM.Rows.ConsentPurposeRow.ToString
  - SuperOffice.CRM.Rows.ConsentPurposeRow.Updated
  - SuperOffice.CRM.Rows.ConsentPurposeRow.UpdatedAssociateId
  - SuperOffice.CRM.Rows.ConsentPurposeRow.UpdatedCount
  - SuperOffice.CRM.Rows.ConsentPurposeRow.Validate(SuperOffice.CRM.Rows.RowValidator)
  langs:
  - csharp
  - vb
  name: ConsentPurposeRow
  nameWithType: ConsentPurposeRow
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nGDPR purpose alternatives\n<br />Row Object for table &apos;ConsentPurpose&apos;. Row objects correspond directly to database tables, and one\ninstance of a row object represents one row in the corresponding table in the database.\n"
  remarks: "\nRow objects can be created in several ways. \n<ul><li>Use the static <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.CreateNew\" data-throw-if-not-resolved=\"false\"></xref> method to create a new, empty object. After populating it with values,\nyou call the <see cref=\"!:SuperOffice.CRM.Data.TableRowBase.Save\"></see> method and a corresponding row in the database is created, and the objects&apos; primary key field updated.\nThis is the preferred way to <strong>insert new rows</strong> into the database.</li><li>You can create a (nested) ConsentPurposeRow <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.CustomSearch\" data-throw-if-not-resolved=\"false\"></xref> object to obtain a query pre-populated with\nthe correct tableinfo and return fields. This query can be modified with restrictions, etc. Then, use the static <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.GetFromCustomSearch(SuperOffice.CRM.Rows.ConsentPurposeRow.CustomSearch)\" data-throw-if-not-resolved=\"false\"></xref> method\nto apply the query to the database and obtain the result as a Row object. This is how you <strong>select existing rows</strong> from the database when\nyou have a query that does not correspond to any of the existing database indexes.</li><li>For each unique index defined for the table, there is a corresponding GetFromIdx method to make retrieving data via the indexes easy. \nNote that if you try to fetch a row that does not exist (for instance, by using the primary key index and specifying a primary key that does\nnot exist in the database), you will get a Row object with the <see cref=\"!:SuperOffice.CRM.Data.ConsentPurposeRow.IsNew\"></see> and \n<see cref=\"!:SuperOffice.CRM.Data.ConsentPurposeRow.IsDirty\"></see> properties set to true. Such a Row object is called a &apos;ghost&apos; and\ncannot be updated, saved or deleted. You can also get a ghost if the row does exist in the database, but the Sentry system denies Select\nrights to the row.</li><li>Finally, if you have an <xref href=\"SuperOffice.Data.SoDataReader\" data-throw-if-not-resolved=\"false\"></xref> that contains ALL the fields of the table, and you\nhave the <xref href=\"SuperOffice.CRM.Data.ConsentPurposeTableInfo\" data-throw-if-not-resolved=\"false\"></xref> instance used in the query behind the reader, you can use the\nstatic <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.GetFromReader(SuperOffice.Data.SoDataReader%2cSuperOffice.CRM.Data.ConsentPurposeTableInfo)\" data-throw-if-not-resolved=\"false\"></xref> method to create a new row object from the reader and the table info.\nThis is useful when you have a <strong>larger, more complex query</strong>, for instance one that joins a number of tables, and you wish to use\nRow objects to process the result set. If your result set corresponds to an entity, consider using the corresponding Entity layer object\ninstead, since entities automatically handle ID allocation and mapping, rights, and other higher-level aspects.</li></ul>\nNon-unique indexes are handled through the <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRows\" data-throw-if-not-resolved=\"false\"></xref> collection,\nwhich has nested classes and GetFromIdx methods for each non-unique index. Similarly, there is a <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRows.GetFromReader(SuperOffice.Data.SoDataReader%2cSuperOffice.CRM.Data.ConsentPurposeTableInfo)\" data-throw-if-not-resolved=\"false\"></xref>\nmethod to retrieve the results of queries that return more than one row.\n<p></p>Unique indexes on table ConsentPurpose are: <table><thead><tr><th>Index fields</th><th>Nested index class name</th></tr></thead><tbody></tbody></table>\n<p></p>\n"
  syntax:
    content: 'public class ConsentPurposeRow : TableRowBase, INestedPersist, ISoDataLookup, ISentryIgnorable, ISoItem'
    content.vb: >-
      Public Class ConsentPurposeRow
          Inherits TableRowBase
          Implements INestedPersist, ISoDataLookup, ISentryIgnorable, ISoItem
  inheritance:
  - System.Object
  - SuperOffice.Data.SQL.SqlCommand
  - SuperOffice.Data.SQL.PrivateSave
  - SuperOffice.CRM.Rows.TableRowBase
  implements:
  - SuperOffice.Data.INestedPersist
  - SuperOffice.CRM.Security.ISoDataLookup
  - SuperOffice.CRM.Security.ISentryIgnorable
  - SuperOffice.Data.ISoItem
  inheritedMembers:
  - SuperOffice.CRM.Rows.TableRowBase._saveOwner
  - SuperOffice.CRM.Rows.TableRowBase._sentries
  - SuperOffice.CRM.Rows.TableRowBase._onValueChange
  - SuperOffice.CRM.Rows.TableRowBase._relatedNestedPersistMembers
  - SuperOffice.CRM.Rows.TableRowBase._sqlType
  - SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.Int32,System.Object)
  - SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(SuperOffice.Data.Dictionary.SoField,System.Object)
  - SuperOffice.CRM.Rows.TableRowBase.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Rows.TableRowBase.GetKnownFields
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Rows.TableRowBase.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Rows.TableRowBase.RowLoad
  - SuperOffice.CRM.Rows.TableRowBase.RowLoad(SuperOffice.CRM.Rows.ITableRowLoadHandler)
  - SuperOffice.CRM.Rows.TableRowBase.OnLoaded(SuperOffice.CRM.Rows.IdxBase)
  - SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.CRM.Rows.IdxBase,SuperOffice.Data.SoDataReader)
  - SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.CRM.Rows.TableRowBase.SetDefaults
  - SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DashboardTileDefinitionRow,System.String)
  - SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner(SuperOffice.Data.INestedPersist)
  - SuperOffice.CRM.Rows.TableRowBase.Save
  - SuperOffice.CRM.Rows.TableRowBase.Delete
  - SuperOffice.CRM.Rows.TableRowBase.Validate
  - SuperOffice.CRM.Rows.TableRowBase.SetDirty(System.Int32,System.Object,System.Object)
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPreIdUpdate
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnIdUpdate
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSave(SuperOffice.Data.SQL.BatchSave)
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSaved(System.Boolean)
  - SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdate
  - SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
  - SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
  - SuperOffice.CRM.Rows.TableRowBase.OnIdUpdate
  - SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck
  - SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck
  - SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist
  - SuperOffice.CRM.Rows.TableRowBase.Item(System.Int32)
  - SuperOffice.CRM.Rows.TableRowBase.Item(SuperOffice.Data.Dictionary.SoField)
  - SuperOffice.CRM.Rows.TableRowBase.Sentries
  - SuperOffice.CRM.Rows.TableRowBase.ForeignKeyHelper
  - SuperOffice.CRM.Rows.TableRowBase.IsDeleted
  - SuperOffice.CRM.Rows.TableRowBase.IsSaving
  - SuperOffice.CRM.Rows.TableRowBase.SqlType
  - SuperOffice.CRM.Rows.TableRowBase.IsSentryIgnored
  - SuperOffice.CRM.Rows.TableRowBase.IsMarkedForDelete
  - SuperOffice.CRM.Rows.TableRowBase.OnValueChanged
  - SuperOffice.CRM.Rows.TableRowBase.OnElementSaved
  - SuperOffice.CRM.Rows.TableRowBase.OnElementIdUpdate
  - SuperOffice.Data.SQL.PrivateSave.GetTableInfos
  - SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery
  - SuperOffice.Data.SQL.PrivateSave.OnUpdateField
  - SuperOffice.Data.SQL.SqlCommand.Origin
  - SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo})
  - SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
  - SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo(SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
  - SuperOffice.Data.SQL.SqlCommand.GetInserts
  - SuperOffice.Data.SQL.SqlCommand.GetUpdates
  - SuperOffice.Data.SQL.SqlCommand.GetDeletes
  - SuperOffice.Data.SQL.SqlCommand.GetSelect
  - SuperOffice.Data.SQL.SqlCommand.AutoSentryIgnoredTables
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.Rows.ConsentPurposeRow.EnumUtil.MapEnums``2
  - SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteReader(System.Boolean)
  - SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1
  - SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
  - SuperOffice.CRM.Rows.ConsentPurposeRow.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow._persistedConsentPurposeId
  commentId: F:SuperOffice.CRM.Rows.ConsentPurposeRow._persistedConsentPurposeId
  id: _persistedConsentPurposeId
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: _persistedConsentPurposeId
  nameWithType: ConsentPurposeRow._persistedConsentPurposeId
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow._persistedConsentPurposeId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedConsentPurposeId
    return:
      type: System.Int32
    content.vb: Protected _persistedConsentPurposeId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow._persistedName
  commentId: F:SuperOffice.CRM.Rows.ConsentPurposeRow._persistedName
  id: _persistedName
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: _persistedName
  nameWithType: ConsentPurposeRow._persistedName
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow._persistedName
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.Name\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _persistedName
    return:
      type: System.String
    content.vb: Protected _persistedName As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow._persistedRank
  commentId: F:SuperOffice.CRM.Rows.ConsentPurposeRow._persistedRank
  id: _persistedRank
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: _persistedRank
  nameWithType: ConsentPurposeRow._persistedRank
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow._persistedRank
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.Rank\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _persistedRank
    return:
      type: System.Int16
    content.vb: Protected _persistedRank As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow._persistedTooltip
  commentId: F:SuperOffice.CRM.Rows.ConsentPurposeRow._persistedTooltip
  id: _persistedTooltip
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: _persistedTooltip
  nameWithType: ConsentPurposeRow._persistedTooltip
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow._persistedTooltip
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.Tooltip\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _persistedTooltip
    return:
      type: System.String
    content.vb: Protected _persistedTooltip As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow._persistedDeleted
  commentId: F:SuperOffice.CRM.Rows.ConsentPurposeRow._persistedDeleted
  id: _persistedDeleted
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: _persistedDeleted
  nameWithType: ConsentPurposeRow._persistedDeleted
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow._persistedDeleted
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.Deleted\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _persistedDeleted
    return:
      type: System.Int16
    content.vb: Protected _persistedDeleted As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow._persistedKey
  commentId: F:SuperOffice.CRM.Rows.ConsentPurposeRow._persistedKey
  id: _persistedKey
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: _persistedKey
  nameWithType: ConsentPurposeRow._persistedKey
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow._persistedKey
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.Key\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _persistedKey
    return:
      type: System.String
    content.vb: Protected _persistedKey As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow._persistedConsentText
  commentId: F:SuperOffice.CRM.Rows.ConsentPurposeRow._persistedConsentText
  id: _persistedConsentText
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: _persistedConsentText
  nameWithType: ConsentPurposeRow._persistedConsentText
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow._persistedConsentText
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentText\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _persistedConsentText
    return:
      type: System.String
    content.vb: Protected _persistedConsentText As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow._persistedFormText
  commentId: F:SuperOffice.CRM.Rows.ConsentPurposeRow._persistedFormText
  id: _persistedFormText
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: _persistedFormText
  nameWithType: ConsentPurposeRow._persistedFormText
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow._persistedFormText
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.FormText\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _persistedFormText
    return:
      type: System.String
    content.vb: Protected _persistedFormText As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow._persistedPrivacyStatementDesc
  commentId: F:SuperOffice.CRM.Rows.ConsentPurposeRow._persistedPrivacyStatementDesc
  id: _persistedPrivacyStatementDesc
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: _persistedPrivacyStatementDesc
  nameWithType: ConsentPurposeRow._persistedPrivacyStatementDesc
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow._persistedPrivacyStatementDesc
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.PrivacyStatementDesc\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _persistedPrivacyStatementDesc
    return:
      type: System.String
    content.vb: Protected _persistedPrivacyStatementDesc As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow._persistedPrivacyStatementUrl
  commentId: F:SuperOffice.CRM.Rows.ConsentPurposeRow._persistedPrivacyStatementUrl
  id: _persistedPrivacyStatementUrl
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: _persistedPrivacyStatementUrl
  nameWithType: ConsentPurposeRow._persistedPrivacyStatementUrl
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow._persistedPrivacyStatementUrl
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.PrivacyStatementUrl\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _persistedPrivacyStatementUrl
    return:
      type: System.String
    content.vb: Protected _persistedPrivacyStatementUrl As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow._persistedActive
  commentId: F:SuperOffice.CRM.Rows.ConsentPurposeRow._persistedActive
  id: _persistedActive
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: _persistedActive
  nameWithType: ConsentPurposeRow._persistedActive
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow._persistedActive
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.Active\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _persistedActive
    return:
      type: System.Int16
    content.vb: Protected _persistedActive As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow._persistedRegistered
  commentId: F:SuperOffice.CRM.Rows.ConsentPurposeRow._persistedRegistered
  id: _persistedRegistered
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: _persistedRegistered
  nameWithType: ConsentPurposeRow._persistedRegistered
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow._persistedRegistered
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.Registered\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _persistedRegistered
    return:
      type: System.DateTime
    content.vb: Protected _persistedRegistered As Date
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow._persistedRegisteredAssociateId
  commentId: F:SuperOffice.CRM.Rows.ConsentPurposeRow._persistedRegisteredAssociateId
  id: _persistedRegisteredAssociateId
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: _persistedRegisteredAssociateId
  nameWithType: ConsentPurposeRow._persistedRegisteredAssociateId
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow._persistedRegisteredAssociateId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.RegisteredAssociateId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedRegisteredAssociateId
    return:
      type: System.Int32
    content.vb: Protected _persistedRegisteredAssociateId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow._persistedUpdated
  commentId: F:SuperOffice.CRM.Rows.ConsentPurposeRow._persistedUpdated
  id: _persistedUpdated
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: _persistedUpdated
  nameWithType: ConsentPurposeRow._persistedUpdated
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow._persistedUpdated
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.Updated\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _persistedUpdated
    return:
      type: System.DateTime
    content.vb: Protected _persistedUpdated As Date
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow._persistedUpdatedAssociateId
  commentId: F:SuperOffice.CRM.Rows.ConsentPurposeRow._persistedUpdatedAssociateId
  id: _persistedUpdatedAssociateId
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: _persistedUpdatedAssociateId
  nameWithType: ConsentPurposeRow._persistedUpdatedAssociateId
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow._persistedUpdatedAssociateId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.UpdatedAssociateId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedUpdatedAssociateId
    return:
      type: System.Int32
    content.vb: Protected _persistedUpdatedAssociateId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow._persistedUpdatedCount
  commentId: F:SuperOffice.CRM.Rows.ConsentPurposeRow._persistedUpdatedCount
  id: _persistedUpdatedCount
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: _persistedUpdatedCount
  nameWithType: ConsentPurposeRow._persistedUpdatedCount
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow._persistedUpdatedCount
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.UpdatedCount\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _persistedUpdatedCount
    return:
      type: System.Int16
    content.vb: Protected _persistedUpdatedCount As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow._currentConsentPurposeId
  commentId: F:SuperOffice.CRM.Rows.ConsentPurposeRow._currentConsentPurposeId
  id: _currentConsentPurposeId
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: _currentConsentPurposeId
  nameWithType: ConsentPurposeRow._currentConsentPurposeId
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow._currentConsentPurposeId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentConsentPurposeId
    return:
      type: System.Int32
    content.vb: Protected _currentConsentPurposeId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow._currentName
  commentId: F:SuperOffice.CRM.Rows.ConsentPurposeRow._currentName
  id: _currentName
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: _currentName
  nameWithType: ConsentPurposeRow._currentName
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow._currentName
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.Name\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _currentName
    return:
      type: System.String
    content.vb: Protected _currentName As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow._currentRank
  commentId: F:SuperOffice.CRM.Rows.ConsentPurposeRow._currentRank
  id: _currentRank
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: _currentRank
  nameWithType: ConsentPurposeRow._currentRank
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow._currentRank
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.Rank\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _currentRank
    return:
      type: System.Int16
    content.vb: Protected _currentRank As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow._currentTooltip
  commentId: F:SuperOffice.CRM.Rows.ConsentPurposeRow._currentTooltip
  id: _currentTooltip
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: _currentTooltip
  nameWithType: ConsentPurposeRow._currentTooltip
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow._currentTooltip
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.Tooltip\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _currentTooltip
    return:
      type: System.String
    content.vb: Protected _currentTooltip As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow._currentDeleted
  commentId: F:SuperOffice.CRM.Rows.ConsentPurposeRow._currentDeleted
  id: _currentDeleted
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: _currentDeleted
  nameWithType: ConsentPurposeRow._currentDeleted
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow._currentDeleted
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.Deleted\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _currentDeleted
    return:
      type: System.Int16
    content.vb: Protected _currentDeleted As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow._currentKey
  commentId: F:SuperOffice.CRM.Rows.ConsentPurposeRow._currentKey
  id: _currentKey
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: _currentKey
  nameWithType: ConsentPurposeRow._currentKey
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow._currentKey
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.Key\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _currentKey
    return:
      type: System.String
    content.vb: Protected _currentKey As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow._currentConsentText
  commentId: F:SuperOffice.CRM.Rows.ConsentPurposeRow._currentConsentText
  id: _currentConsentText
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: _currentConsentText
  nameWithType: ConsentPurposeRow._currentConsentText
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow._currentConsentText
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentText\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _currentConsentText
    return:
      type: System.String
    content.vb: Protected _currentConsentText As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow._currentFormText
  commentId: F:SuperOffice.CRM.Rows.ConsentPurposeRow._currentFormText
  id: _currentFormText
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: _currentFormText
  nameWithType: ConsentPurposeRow._currentFormText
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow._currentFormText
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.FormText\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _currentFormText
    return:
      type: System.String
    content.vb: Protected _currentFormText As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow._currentPrivacyStatementDesc
  commentId: F:SuperOffice.CRM.Rows.ConsentPurposeRow._currentPrivacyStatementDesc
  id: _currentPrivacyStatementDesc
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: _currentPrivacyStatementDesc
  nameWithType: ConsentPurposeRow._currentPrivacyStatementDesc
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow._currentPrivacyStatementDesc
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.PrivacyStatementDesc\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _currentPrivacyStatementDesc
    return:
      type: System.String
    content.vb: Protected _currentPrivacyStatementDesc As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow._currentPrivacyStatementUrl
  commentId: F:SuperOffice.CRM.Rows.ConsentPurposeRow._currentPrivacyStatementUrl
  id: _currentPrivacyStatementUrl
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: _currentPrivacyStatementUrl
  nameWithType: ConsentPurposeRow._currentPrivacyStatementUrl
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow._currentPrivacyStatementUrl
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.PrivacyStatementUrl\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _currentPrivacyStatementUrl
    return:
      type: System.String
    content.vb: Protected _currentPrivacyStatementUrl As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow._currentActive
  commentId: F:SuperOffice.CRM.Rows.ConsentPurposeRow._currentActive
  id: _currentActive
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: _currentActive
  nameWithType: ConsentPurposeRow._currentActive
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow._currentActive
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.Active\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _currentActive
    return:
      type: System.Int16
    content.vb: Protected _currentActive As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow._currentRegistered
  commentId: F:SuperOffice.CRM.Rows.ConsentPurposeRow._currentRegistered
  id: _currentRegistered
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: _currentRegistered
  nameWithType: ConsentPurposeRow._currentRegistered
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow._currentRegistered
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.Registered\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _currentRegistered
    return:
      type: System.DateTime
    content.vb: Protected _currentRegistered As Date
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow._currentRegisteredAssociateId
  commentId: F:SuperOffice.CRM.Rows.ConsentPurposeRow._currentRegisteredAssociateId
  id: _currentRegisteredAssociateId
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: _currentRegisteredAssociateId
  nameWithType: ConsentPurposeRow._currentRegisteredAssociateId
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow._currentRegisteredAssociateId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.RegisteredAssociateId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentRegisteredAssociateId
    return:
      type: System.Int32
    content.vb: Protected _currentRegisteredAssociateId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow._currentUpdated
  commentId: F:SuperOffice.CRM.Rows.ConsentPurposeRow._currentUpdated
  id: _currentUpdated
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: _currentUpdated
  nameWithType: ConsentPurposeRow._currentUpdated
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow._currentUpdated
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.Updated\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _currentUpdated
    return:
      type: System.DateTime
    content.vb: Protected _currentUpdated As Date
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow._currentUpdatedAssociateId
  commentId: F:SuperOffice.CRM.Rows.ConsentPurposeRow._currentUpdatedAssociateId
  id: _currentUpdatedAssociateId
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: _currentUpdatedAssociateId
  nameWithType: ConsentPurposeRow._currentUpdatedAssociateId
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow._currentUpdatedAssociateId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.UpdatedAssociateId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentUpdatedAssociateId
    return:
      type: System.Int32
    content.vb: Protected _currentUpdatedAssociateId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow._currentUpdatedCount
  commentId: F:SuperOffice.CRM.Rows.ConsentPurposeRow._currentUpdatedCount
  id: _currentUpdatedCount
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: _currentUpdatedCount
  nameWithType: ConsentPurposeRow._currentUpdatedCount
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow._currentUpdatedCount
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.UpdatedCount\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _currentUpdatedCount
    return:
      type: System.Int16
    content.vb: Protected _currentUpdatedCount As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.InternalSetValue(System.String,System.Object)
  commentId: M:SuperOffice.CRM.Rows.ConsentPurposeRow.InternalSetValue(System.String,System.Object)
  id: InternalSetValue(System.String,System.Object)
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: InternalSetValue(String, Object)
  nameWithType: ConsentPurposeRow.InternalSetValue(String, Object)
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.InternalSetValue(System.String, System.Object)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  syntax:
    content: protected override void InternalSetValue(string fieldName, object value)
    parameters:
    - id: fieldName
      type: System.String
    - id: value
      type: System.Object
    content.vb: Protected Overrides Sub InternalSetValue(fieldName As String, value As Object)
  overridden: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.String,System.Object)
  overload: SuperOffice.CRM.Rows.ConsentPurposeRow.InternalSetValue*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Rows.ConsentPurposeRow.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  id: GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: GetPersistedFieldValue(FieldInfo)
  nameWithType: ConsentPurposeRow.GetPersistedFieldValue(FieldInfo)
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nGet the persisted value of a field.  \n"
  syntax:
    content: public override object GetPersistedFieldValue(FieldInfo field)
    parameters:
    - id: field
      type: SuperOffice.Data.SQL.FieldInfo
      description: Specification of a field
    return:
      type: System.Object
      description: Field value, such as an int, DateTime, string ...  Null can be returned if the value is not known.
    content.vb: Public Overrides Function GetPersistedFieldValue(field As FieldInfo) As Object
  overridden: SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  overload: SuperOffice.CRM.Rows.ConsentPurposeRow.GetPersistedFieldValue*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThrown if the field is not known.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Rows.ConsentPurposeRow.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  id: IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: IsPersistedFieldValueKnown(FieldInfo)
  nameWithType: ConsentPurposeRow.IsPersistedFieldValueKnown(FieldInfo)
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCheck if the persisted value for a field is known.\n"
  syntax:
    content: public override bool IsPersistedFieldValueKnown(FieldInfo field)
    parameters:
    - id: field
      type: SuperOffice.Data.SQL.FieldInfo
      description: Specification of a field
    return:
      type: System.Boolean
      description: True if the value is known and sentry permits read.
    content.vb: Public Overrides Function IsPersistedFieldValueKnown(field As FieldInfo) As Boolean
  overridden: SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  overload: SuperOffice.CRM.Rows.ConsentPurposeRow.IsPersistedFieldValueKnown*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.#ctor(SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase)
  commentId: M:SuperOffice.CRM.Rows.ConsentPurposeRow.#ctor(SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase)
  id: '#ctor(SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase)'
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: ConsentPurposeRow(ConsentPurposeRow.ConsentPurposeRowIdxBase)
  nameWithType: ConsentPurposeRow.ConsentPurposeRow(ConsentPurposeRow.ConsentPurposeRowIdxBase)
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRow(SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nConstructor for the class taking an index as argument.\nGDPR purpose alternatives\n"
  syntax:
    content: protected ConsentPurposeRow(ConsentPurposeRow.ConsentPurposeRowIdxBase idx)
    parameters:
    - id: idx
      type: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase
      description: The index representing a SELECT command to the database.
    content.vb: Protected Sub New(idx As ConsentPurposeRow.ConsentPurposeRowIdxBase)
  overload: SuperOffice.CRM.Rows.ConsentPurposeRow.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.CreateNew
  commentId: M:SuperOffice.CRM.Rows.ConsentPurposeRow.CreateNew
  id: CreateNew
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: CreateNew()
  nameWithType: ConsentPurposeRow.CreateNew()
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.CreateNew()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCreate a new instance of the ConsentPurposeRow object.\nGDPR purpose alternatives\n"
  syntax:
    content: public static ConsentPurposeRow CreateNew()
    return:
      type: SuperOffice.CRM.Rows.ConsentPurposeRow
      description: A new instance of the ConsentPurposeRow object.
    content.vb: Public Shared Function CreateNew As ConsentPurposeRow
  overload: SuperOffice.CRM.Rows.ConsentPurposeRow.CreateNew*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.GetFromReader(SuperOffice.Data.SoDataReader,SuperOffice.CRM.Data.ConsentPurposeTableInfo)
  commentId: M:SuperOffice.CRM.Rows.ConsentPurposeRow.GetFromReader(SuperOffice.Data.SoDataReader,SuperOffice.CRM.Data.ConsentPurposeTableInfo)
  id: GetFromReader(SuperOffice.Data.SoDataReader,SuperOffice.CRM.Data.ConsentPurposeTableInfo)
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: GetFromReader(SoDataReader, ConsentPurposeTableInfo)
  nameWithType: ConsentPurposeRow.GetFromReader(SoDataReader, ConsentPurposeTableInfo)
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.GetFromReader(SuperOffice.Data.SoDataReader, SuperOffice.CRM.Data.ConsentPurposeTableInfo)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCreate a new instance of the ConsentPurposeRow object, and populate it with data from a reader/tableinfo. \nIf the reader has DBNull as the current value of the primary key field, an unpopulated object with <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.IsNew\" data-throw-if-not-resolved=\"false\"></xref> == true\nwill be returned. If any fields are missing or one of the non-primary key fields is DBNull, an exception will be thrown.\nGDPR purpose alternatives\n"
  syntax:
    content: public static ConsentPurposeRow GetFromReader(SoDataReader reader, ConsentPurposeTableInfo tableInfo)
    parameters:
    - id: reader
      type: SuperOffice.Data.SoDataReader
      description: <xref href="SuperOffice.Data.SoDataReader" data-throw-if-not-resolved="false"></xref> positioned to a valid database row.
    - id: tableInfo
      type: SuperOffice.CRM.Data.ConsentPurposeTableInfo
      description: >-
        <xref href="SuperOffice.CRM.Data.ConsentPurposeTableInfo" data-throw-if-not-resolved="false"></xref> instance used in the query that is the source of the reader.
                    The fields used from the reader will be those owned by this tableinfo object.
    return:
      type: SuperOffice.CRM.Rows.ConsentPurposeRow
      description: A new instance of the ConsentPurposeRow object.
    content.vb: Public Shared Function GetFromReader(reader As SoDataReader, tableInfo As ConsentPurposeTableInfo) As ConsentPurposeRow
  overload: SuperOffice.CRM.Rows.ConsentPurposeRow.GetFromReader*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.GetFromCustomSearch(SuperOffice.CRM.Rows.ConsentPurposeRow.CustomSearch)
  commentId: M:SuperOffice.CRM.Rows.ConsentPurposeRow.GetFromCustomSearch(SuperOffice.CRM.Rows.ConsentPurposeRow.CustomSearch)
  id: GetFromCustomSearch(SuperOffice.CRM.Rows.ConsentPurposeRow.CustomSearch)
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: GetFromCustomSearch(ConsentPurposeRow.CustomSearch)
  nameWithType: ConsentPurposeRow.GetFromCustomSearch(ConsentPurposeRow.CustomSearch)
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.GetFromCustomSearch(SuperOffice.CRM.Rows.ConsentPurposeRow.CustomSearch)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCreate a new instance of the ConsentPurposeRow object, and populate it with data from a custom search.\nIf the search returns no results, an object with <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.IsNew\" data-throw-if-not-resolved=\"false\"></xref> will be returned; if the result contains\none row, an object representing that row will be returned. If the result contains more than one row, the first\nrow will be used and the rest discarded (there is no way of detecting this situation).\n"
  syntax:
    content: public static ConsentPurposeRow GetFromCustomSearch(ConsentPurposeRow.CustomSearch query)
    parameters:
    - id: query
      type: SuperOffice.CRM.Rows.ConsentPurposeRow.CustomSearch
      description: The custom search to execute against the database
    return:
      type: SuperOffice.CRM.Rows.ConsentPurposeRow
      description: A new instance of the ConsentPurposeRow object, reflecting the result of the query.
    content.vb: Public Shared Function GetFromCustomSearch(query As ConsentPurposeRow.CustomSearch) As ConsentPurposeRow
  overload: SuperOffice.CRM.Rows.ConsentPurposeRow.GetFromCustomSearch*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.GetFromIdxConsentPurposeId(System.Int32)
  commentId: M:SuperOffice.CRM.Rows.ConsentPurposeRow.GetFromIdxConsentPurposeId(System.Int32)
  id: GetFromIdxConsentPurposeId(System.Int32)
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: GetFromIdxConsentPurposeId(Int32)
  nameWithType: ConsentPurposeRow.GetFromIdxConsentPurposeId(Int32)
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.GetFromIdxConsentPurposeId(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCreate a new instance of the ConsentPurposeRow object, by querying the database table via the index &apos;IDXConsentPurposeId&apos;.\nThis method is intended to make it easy to use efficient queries that match a database index.\n"
  remarks: "\nThis method represents one of the unique indexes on the ConsentPurpose table. Non-unique indexes have corresponding inner classes\nand methods in the <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRows\" data-throw-if-not-resolved=\"false\"></xref> collection, since they may return more than one row.\n"
  syntax:
    content: public static ConsentPurposeRow GetFromIdxConsentPurposeId(int consentPurposeId)
    parameters:
    - id: consentPurposeId
      type: System.Int32
    return:
      type: SuperOffice.CRM.Rows.ConsentPurposeRow
      description: "Row object that represents the result of the search. <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.IsNew\" data-throw-if-not-resolved=\"false\"></xref> will be true if \nthe query did not match any row in the table"
    content.vb: Public Shared Function GetFromIdxConsentPurposeId(consentPurposeId As Integer) As ConsentPurposeRow
  overload: SuperOffice.CRM.Rows.ConsentPurposeRow.GetFromIdxConsentPurposeId*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.GetFromIdxName(System.String)
  commentId: M:SuperOffice.CRM.Rows.ConsentPurposeRow.GetFromIdxName(System.String)
  id: GetFromIdxName(System.String)
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: GetFromIdxName(String)
  nameWithType: ConsentPurposeRow.GetFromIdxName(String)
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.GetFromIdxName(System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCreate a new instance of the ConsentPurposeRow object, by querying the database table via the index &apos;IDXConsentPurposeName&apos;.\nThis method is intended to make it easy to use efficient queries that match a database index.\n"
  remarks: "\nThis method represents one of the unique indexes on the ConsentPurpose table. Non-unique indexes have corresponding inner classes\nand methods in the <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRows\" data-throw-if-not-resolved=\"false\"></xref> collection, since they may return more than one row.\n"
  syntax:
    content: public static ConsentPurposeRow GetFromIdxName(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: SuperOffice.CRM.Rows.ConsentPurposeRow
      description: "Row object that represents the result of the search. <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.IsNew\" data-throw-if-not-resolved=\"false\"></xref> will be true if \nthe query did not match any row in the table"
    content.vb: Public Shared Function GetFromIdxName(name As String) As ConsentPurposeRow
  overload: SuperOffice.CRM.Rows.ConsentPurposeRow.GetFromIdxName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.GetFromIdxKey(System.String)
  commentId: M:SuperOffice.CRM.Rows.ConsentPurposeRow.GetFromIdxKey(System.String)
  id: GetFromIdxKey(System.String)
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: GetFromIdxKey(String)
  nameWithType: ConsentPurposeRow.GetFromIdxKey(String)
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.GetFromIdxKey(System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCreate a new instance of the ConsentPurposeRow object, by querying the database table via the index &apos;IDXConsentPurposeKey&apos;.\nThis method is intended to make it easy to use efficient queries that match a database index.\n"
  remarks: "\nThis method represents one of the unique indexes on the ConsentPurpose table. Non-unique indexes have corresponding inner classes\nand methods in the <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRows\" data-throw-if-not-resolved=\"false\"></xref> collection, since they may return more than one row.\n"
  syntax:
    content: public static ConsentPurposeRow GetFromIdxKey(string key)
    parameters:
    - id: key
      type: System.String
    return:
      type: SuperOffice.CRM.Rows.ConsentPurposeRow
      description: "Row object that represents the result of the search. <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.IsNew\" data-throw-if-not-resolved=\"false\"></xref> will be true if \nthe query did not match any row in the table"
    content.vb: Public Shared Function GetFromIdxKey(key As String) As ConsentPurposeRow
  overload: SuperOffice.CRM.Rows.ConsentPurposeRow.GetFromIdxKey*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
  commentId: M:SuperOffice.CRM.Rows.ConsentPurposeRow.SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
  id: SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: SetDefaults(DefaulterStrategy)
  nameWithType: ConsentPurposeRow.SetDefaults(DefaulterStrategy)
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nSet default values for the row.\n"
  syntax:
    content: public override void SetDefaults(DefaulterStrategy strategy)
    parameters:
    - id: strategy
      type: SuperOffice.CRM.Rows.DefaulterStrategy
      description: Strategy used when applying default values; values depend on where we are in the Create/Fetch/Populate/Save cycle
    content.vb: Public Overrides Sub SetDefaults(strategy As DefaulterStrategy)
  overridden: SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
  overload: SuperOffice.CRM.Rows.ConsentPurposeRow.SetDefaults*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.ToString
  commentId: M:SuperOffice.CRM.Rows.ConsentPurposeRow.ToString
  id: ToString
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ConsentPurposeRow.ToString()
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.ToString()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nToString method intended for debugging, returns a string\nthat displays the object type, new/dirty status, primary key\nand the string fields\n"
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: SuperOffice.CRM.Rows.ConsentPurposeRow.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.SetRowAsNew
  commentId: M:SuperOffice.CRM.Rows.ConsentPurposeRow.SetRowAsNew
  id: SetRowAsNew
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: SetRowAsNew()
  nameWithType: ConsentPurposeRow.SetRowAsNew()
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.SetRowAsNew()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  syntax:
    content: public override void SetRowAsNew()
    content.vb: Public Overrides Sub SetRowAsNew
  overridden: SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew
  overload: SuperOffice.CRM.Rows.ConsentPurposeRow.SetRowAsNew*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.Reset
  commentId: M:SuperOffice.CRM.Rows.ConsentPurposeRow.Reset
  id: Reset
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: ConsentPurposeRow.Reset()
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.Reset()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nReset the changes made on the object.\n"
  remarks: "\nIf the row is not persisted to the database (e.g. <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.IsNew\" data-throw-if-not-resolved=\"false\"></xref> is true),\nall the values will be reset.  If the row has been persisted to or loaded from the database,\nthe properties will be set to those of the last persisted or loaded values.\n"
  syntax:
    content: protected override void Reset()
    content.vb: Protected Overrides Sub Reset
  overridden: SuperOffice.CRM.Rows.TableRowBase.Reset
  overload: SuperOffice.CRM.Rows.ConsentPurposeRow.Reset*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.CRM.Rows.ConsentPurposeRow.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  id: OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: OnLoad(SoDataReader, TableInfo)
  nameWithType: ConsentPurposeRow.OnLoad(SoDataReader, TableInfo)
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.OnLoad(SuperOffice.Data.SoDataReader, SuperOffice.Data.SQL.TableInfo)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nFill the object with data returned from the database.\n"
  syntax:
    content: protected override void OnLoad(SoDataReader reader, TableInfo tableInfo)
    parameters:
    - id: reader
      type: SuperOffice.Data.SoDataReader
      description: Object holding the data returned from the database.
    - id: tableInfo
      type: SuperOffice.Data.SQL.TableInfo
      description: The TableInfo used for the SELECT statement.
    content.vb: Protected Overrides Sub OnLoad(reader As SoDataReader, tableInfo As TableInfo)
  overridden: SuperOffice.CRM.Rows.TableRowBase.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  overload: SuperOffice.CRM.Rows.ConsentPurposeRow.OnLoad*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.SetPrimaryKey(System.Int32)
  commentId: M:SuperOffice.CRM.Rows.ConsentPurposeRow.SetPrimaryKey(System.Int32)
  id: SetPrimaryKey(System.Int32)
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: SetPrimaryKey(Int32)
  nameWithType: ConsentPurposeRow.SetPrimaryKey(Int32)
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.SetPrimaryKey(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nSet the primary key for the row.\n"
  syntax:
    content: protected override void SetPrimaryKey(int primaryKey)
    parameters:
    - id: primaryKey
      type: System.Int32
      description: The new primary key for the row.
    content.vb: Protected Overrides Sub SetPrimaryKey(primaryKey As Integer)
  overridden: SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey(System.Int32)
  overload: SuperOffice.CRM.Rows.ConsentPurposeRow.SetPrimaryKey*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.OnSave(SuperOffice.Data.SQL.BatchSave)
  commentId: M:SuperOffice.CRM.Rows.ConsentPurposeRow.OnSave(SuperOffice.Data.SQL.BatchSave)
  id: OnSave(SuperOffice.Data.SQL.BatchSave)
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: OnSave(BatchSave)
  nameWithType: ConsentPurposeRow.OnSave(BatchSave)
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.OnSave(SuperOffice.Data.SQL.BatchSave)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nAdd the object to the BatchSave list if it needs saving.\n"
  remarks: Classes overriding this method should call it.
  syntax:
    content: protected override void OnSave(BatchSave batchSave)
    parameters:
    - id: batchSave
      type: SuperOffice.Data.SQL.BatchSave
      description: Collection of objects to be saved within the transaction.
    content.vb: Protected Overrides Sub OnSave(batchSave As BatchSave)
  overridden: SuperOffice.CRM.Rows.TableRowBase.OnSave(SuperOffice.Data.SQL.BatchSave)
  overload: SuperOffice.CRM.Rows.ConsentPurposeRow.OnSave*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.OnSaved(System.Boolean)
  commentId: M:SuperOffice.CRM.Rows.ConsentPurposeRow.OnSaved(System.Boolean)
  id: OnSaved(System.Boolean)
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: OnSaved(Boolean)
  nameWithType: ConsentPurposeRow.OnSaved(Boolean)
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.OnSaved(System.Boolean)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nMethod called after the save operation has been performed.\n"
  syntax:
    content: protected override void OnSaved(bool bSucceeded)
    parameters:
    - id: bSucceeded
      type: System.Boolean
      description: "\nTrue if the save operation succeeded (e.g. transaction committed), \nor false if the save operation failed (e.g. transaction rolled back)\n"
    content.vb: Protected Overrides Sub OnSaved(bSucceeded As Boolean)
  overridden: SuperOffice.CRM.Rows.TableRowBase.OnSaved(System.Boolean)
  overload: SuperOffice.CRM.Rows.ConsentPurposeRow.OnSaved*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.Validate(SuperOffice.CRM.Rows.RowValidator)
  commentId: M:SuperOffice.CRM.Rows.ConsentPurposeRow.Validate(SuperOffice.CRM.Rows.RowValidator)
  id: Validate(SuperOffice.CRM.Rows.RowValidator)
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: Validate(RowValidator)
  nameWithType: ConsentPurposeRow.Validate(RowValidator)
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.Validate(SuperOffice.CRM.Rows.RowValidator)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nValidate this row.\n"
  syntax:
    content: public override void Validate(RowValidator rowValidator)
    parameters:
    - id: rowValidator
      type: SuperOffice.CRM.Rows.RowValidator
      description: RowValidator for inserting the result of the validation
    content.vb: Public Overrides Sub Validate(rowValidator As RowValidator)
  overridden: SuperOffice.CRM.Rows.TableRowBase.Validate(SuperOffice.CRM.Rows.RowValidator)
  overload: SuperOffice.CRM.Rows.ConsentPurposeRow.Validate*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.Item(System.String)
  commentId: P:SuperOffice.CRM.Rows.ConsentPurposeRow.Item(System.String)
  id: Item(System.String)
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: ConsentPurposeRow.Item[String]
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.Item[System.String]
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nGet or set a value based on the name of the field.\n"
  syntax:
    content: public override object this[string fieldName] { get; set; }
    parameters:
    - id: fieldName
      type: System.String
      description: Name of the field in the database
    return:
      type: System.Object
      description: Value of the field.
    content.vb: Public Overrides Property Item(fieldName As String) As Object
  overridden: SuperOffice.CRM.Rows.TableRowBase.Item(System.String)
  overload: SuperOffice.CRM.Rows.ConsentPurposeRow.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThrown if the field is not known.\n"
  nameWithType.vb: ConsentPurposeRow.Item(String)
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: SuperOffice.CRM.Rows.ConsentPurposeRow.Item(System.String)
  name.vb: Item(String)
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.TableInfo
  commentId: P:SuperOffice.CRM.Rows.ConsentPurposeRow.TableInfo
  id: TableInfo
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: TableInfo
  nameWithType: ConsentPurposeRow.TableInfo
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.TableInfo
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nGet the TableInfo for the table.\n"
  syntax:
    content: public override TableInfo TableInfo { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TableInfo
      description: The TableInfo for the table.
    content.vb: Public Overrides ReadOnly Property TableInfo As TableInfo
  overridden: SuperOffice.CRM.Rows.TableRowBase.TableInfo
  overload: SuperOffice.CRM.Rows.ConsentPurposeRow.TableInfo*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeTableInfo
  commentId: P:SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeTableInfo
  id: ConsentPurposeTableInfo
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: ConsentPurposeTableInfo
  nameWithType: ConsentPurposeRow.ConsentPurposeTableInfo
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeTableInfo
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nGet the <xref href=\"SuperOffice.CRM.Data.ConsentPurposeTableInfo\" data-throw-if-not-resolved=\"false\"></xref> object associated with the row.\n"
  syntax:
    content: public ConsentPurposeTableInfo ConsentPurposeTableInfo { get; }
    parameters: []
    return:
      type: SuperOffice.CRM.Data.ConsentPurposeTableInfo
    content.vb: Public ReadOnly Property ConsentPurposeTableInfo As ConsentPurposeTableInfo
  overload: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeTableInfo*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.InnerPrimaryKeyValue
  commentId: P:SuperOffice.CRM.Rows.ConsentPurposeRow.InnerPrimaryKeyValue
  id: InnerPrimaryKeyValue
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: InnerPrimaryKeyValue
  nameWithType: ConsentPurposeRow.InnerPrimaryKeyValue
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.InnerPrimaryKeyValue
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nThe actual value the primary key must have.\n"
  syntax:
    content: protected override Parameter InnerPrimaryKeyValue { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Parameter
    content.vb: Protected Overrides ReadOnly Property InnerPrimaryKeyValue As Parameter
  overridden: SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKeyValue
  overload: SuperOffice.CRM.Rows.ConsentPurposeRow.InnerPrimaryKeyValue*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.InnerPrimaryKey
  commentId: P:SuperOffice.CRM.Rows.ConsentPurposeRow.InnerPrimaryKey
  id: InnerPrimaryKey
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: InnerPrimaryKey
  nameWithType: ConsentPurposeRow.InnerPrimaryKey
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.InnerPrimaryKey
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nThe primary key needed to decide which specific row to alter with the current sql-command. \n"
  syntax:
    content: protected override FieldInfo InnerPrimaryKey { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.FieldInfo
    content.vb: Protected Overrides ReadOnly Property InnerPrimaryKey As FieldInfo
  overridden: SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKey
  overload: SuperOffice.CRM.Rows.ConsentPurposeRow.InnerPrimaryKey*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.IsNew
  commentId: P:SuperOffice.CRM.Rows.ConsentPurposeRow.IsNew
  id: IsNew
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: IsNew
  nameWithType: ConsentPurposeRow.IsNew
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.IsNew
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nIs this object new, meaning that it does not exist in the database.\n"
  syntax:
    content: public override bool IsNew { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property IsNew As Boolean
  overridden: SuperOffice.CRM.Rows.TableRowBase.IsNew
  overload: SuperOffice.CRM.Rows.ConsentPurposeRow.IsNew*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.IsDirty
  commentId: P:SuperOffice.CRM.Rows.ConsentPurposeRow.IsDirty
  id: IsDirty
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: IsDirty
  nameWithType: ConsentPurposeRow.IsDirty
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.IsDirty
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nIs the row dirty, e.g. been modified since the last time it was saved to the database.\n"
  syntax:
    content: public override bool IsDirty { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property IsDirty As Boolean
  overridden: SuperOffice.CRM.Rows.TableRowBase.IsDirty
  overload: SuperOffice.CRM.Rows.ConsentPurposeRow.IsDirty*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.InnerFieldValuePairs
  commentId: P:SuperOffice.CRM.Rows.ConsentPurposeRow.InnerFieldValuePairs
  id: InnerFieldValuePairs
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: InnerFieldValuePairs
  nameWithType: ConsentPurposeRow.InnerFieldValuePairs
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.InnerFieldValuePairs
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nThe values of all the fields in the row.  \nThe first field is the primary key.  \nThe index of the value corresponds to the name \nof the field returned from the Fields property.\n"
  syntax:
    content: protected override ArgumentParameterCollection InnerFieldValuePairs { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.ArgumentParameterCollection
    content.vb: Protected Overrides ReadOnly Property InnerFieldValuePairs As ArgumentParameterCollection
  overridden: SuperOffice.Data.SQL.PrivateSave.InnerFieldValuePairs
  overload: SuperOffice.CRM.Rows.ConsentPurposeRow.InnerFieldValuePairs*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeId
  commentId: P:SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeId
  id: ConsentPurposeId
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: ConsentPurposeId
  nameWithType: ConsentPurposeRow.ConsentPurposeId
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. Primary key \n"
  remarks: "\nOriginal type in dictionary:  PK.\n<p>This field is the primary key and can only be read, never written.</p>		\n<p>This field is not protected by the Sentry system, and can always be read</p>\n"
  syntax:
    content: public virtual int ConsentPurposeId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable ReadOnly Property ConsentPurposeId As Integer
  overload: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeId*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.Name
  commentId: P:SuperOffice.CRM.Rows.ConsentPurposeRow.Name
  id: Name
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ConsentPurposeRow.Name
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.Name
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: string. The name of this purpose \n"
  remarks: "\nOriginal type in dictionary:  String[4001].\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property Name As String
  overload: SuperOffice.CRM.Rows.ConsentPurposeRow.Name*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.Rank
  commentId: P:SuperOffice.CRM.Rows.ConsentPurposeRow.Rank
  id: Rank
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: Rank
  nameWithType: ConsentPurposeRow.Rank
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.Rank
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: short. Rank order \n"
  remarks: "\nOriginal type in dictionary:  UShort.\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual short Rank { get; set; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Public Overridable Property Rank As Short
  overload: SuperOffice.CRM.Rows.ConsentPurposeRow.Rank*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.Tooltip
  commentId: P:SuperOffice.CRM.Rows.ConsentPurposeRow.Tooltip
  id: Tooltip
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: Tooltip
  nameWithType: ConsentPurposeRow.Tooltip
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.Tooltip
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: string. List item tooltip \n"
  remarks: "\nOriginal type in dictionary:  String[4001].\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual string Tooltip { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property Tooltip As String
  overload: SuperOffice.CRM.Rows.ConsentPurposeRow.Tooltip*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.Deleted
  commentId: P:SuperOffice.CRM.Rows.ConsentPurposeRow.Deleted
  id: Deleted
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: Deleted
  nameWithType: ConsentPurposeRow.Deleted
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.Deleted
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: short. 0 -> record is active 1 -> record is &apos;deleted&apos; and should not be shown in lists \n"
  remarks: "\nOriginal type in dictionary:  UShort.\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual short Deleted { get; set; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Public Overridable Property Deleted As Short
  overload: SuperOffice.CRM.Rows.ConsentPurposeRow.Deleted*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.Key
  commentId: P:SuperOffice.CRM.Rows.ConsentPurposeRow.Key
  id: Key
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: Key
  nameWithType: ConsentPurposeRow.Key
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.Key
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: string. The key used to refer to this purpose, like #Process, #Emarketing etc. \n"
  remarks: "\nOriginal type in dictionary:  String[256].\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual string Key { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property Key As String
  overload: SuperOffice.CRM.Rows.ConsentPurposeRow.Key*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentText
  commentId: P:SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentText
  id: ConsentText
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: ConsentText
  nameWithType: ConsentPurposeRow.ConsentText
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentText
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: string. Form text used for the actual checkbox \n"
  remarks: "\nOriginal type in dictionary:  String[4001].\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual string ConsentText { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property ConsentText As String
  overload: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentText*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.FormText
  commentId: P:SuperOffice.CRM.Rows.ConsentPurposeRow.FormText
  id: FormText
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: FormText
  nameWithType: ConsentPurposeRow.FormText
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.FormText
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: string. Text for the consent form, the long text to be shown when asking the end-user for this kind of consent \n"
  remarks: "\nOriginal type in dictionary:  Clob.\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual string FormText { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property FormText As String
  overload: SuperOffice.CRM.Rows.ConsentPurposeRow.FormText*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.PrivacyStatementDesc
  commentId: P:SuperOffice.CRM.Rows.ConsentPurposeRow.PrivacyStatementDesc
  id: PrivacyStatementDesc
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: PrivacyStatementDesc
  nameWithType: ConsentPurposeRow.PrivacyStatementDesc
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.PrivacyStatementDesc
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: string. A heading or description of the privacy text \n"
  remarks: "\nOriginal type in dictionary:  String[4001].\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual string PrivacyStatementDesc { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property PrivacyStatementDesc As String
  overload: SuperOffice.CRM.Rows.ConsentPurposeRow.PrivacyStatementDesc*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.PrivacyStatementUrl
  commentId: P:SuperOffice.CRM.Rows.ConsentPurposeRow.PrivacyStatementUrl
  id: PrivacyStatementUrl
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: PrivacyStatementUrl
  nameWithType: ConsentPurposeRow.PrivacyStatementUrl
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.PrivacyStatementUrl
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: string. Url referencing the actual privacy statement text; may have different urls for different languages \n"
  remarks: "\nOriginal type in dictionary:  String[4001].\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual string PrivacyStatementUrl { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property PrivacyStatementUrl As String
  overload: SuperOffice.CRM.Rows.ConsentPurposeRow.PrivacyStatementUrl*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.Active
  commentId: P:SuperOffice.CRM.Rows.ConsentPurposeRow.Active
  id: Active
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: Active
  nameWithType: ConsentPurposeRow.Active
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.Active
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: short. True if this consent purpose is active \n"
  remarks: "\nOriginal type in dictionary:  Bool.\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual short Active { get; set; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Public Overridable Property Active As Short
  overload: SuperOffice.CRM.Rows.ConsentPurposeRow.Active*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.Registered
  commentId: P:SuperOffice.CRM.Rows.ConsentPurposeRow.Registered
  id: Registered
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: Registered
  nameWithType: ConsentPurposeRow.Registered
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.Registered
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: DateTime. Registered when in UTC  \n"
  remarks: "\nOriginal type in dictionary:  UtcDateTime.\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual DateTime Registered { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Overridable Property Registered As Date
  overload: SuperOffice.CRM.Rows.ConsentPurposeRow.Registered*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.RegisteredAssociateId
  commentId: P:SuperOffice.CRM.Rows.ConsentPurposeRow.RegisteredAssociateId
  id: RegisteredAssociateId
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: RegisteredAssociateId
  nameWithType: ConsentPurposeRow.RegisteredAssociateId
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.RegisteredAssociateId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. Registered by whom \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual int RegisteredAssociateId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property RegisteredAssociateId As Integer
  overload: SuperOffice.CRM.Rows.ConsentPurposeRow.RegisteredAssociateId*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.Updated
  commentId: P:SuperOffice.CRM.Rows.ConsentPurposeRow.Updated
  id: Updated
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: Updated
  nameWithType: ConsentPurposeRow.Updated
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.Updated
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: DateTime. Last updated when in UTC  \n"
  remarks: "\nOriginal type in dictionary:  UtcDateTime.\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual DateTime Updated { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Overridable Property Updated As Date
  overload: SuperOffice.CRM.Rows.ConsentPurposeRow.Updated*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.UpdatedAssociateId
  commentId: P:SuperOffice.CRM.Rows.ConsentPurposeRow.UpdatedAssociateId
  id: UpdatedAssociateId
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: UpdatedAssociateId
  nameWithType: ConsentPurposeRow.UpdatedAssociateId
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.UpdatedAssociateId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. Last updated by whom \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual int UpdatedAssociateId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property UpdatedAssociateId As Integer
  overload: SuperOffice.CRM.Rows.ConsentPurposeRow.UpdatedAssociateId*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.UpdatedCount
  commentId: P:SuperOffice.CRM.Rows.ConsentPurposeRow.UpdatedCount
  id: UpdatedCount
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: UpdatedCount
  nameWithType: ConsentPurposeRow.UpdatedCount
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.UpdatedCount
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: short. Number of updates made to this record \n"
  remarks: "\nOriginal type in dictionary:  UShort.\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual short UpdatedCount { get; set; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Public Overridable Property UpdatedCount As Short
  overload: SuperOffice.CRM.Rows.ConsentPurposeRow.UpdatedCount*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow._onNameChange
  commentId: E:SuperOffice.CRM.Rows.ConsentPurposeRow._onNameChange
  id: _onNameChange
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: _onNameChange
  nameWithType: ConsentPurposeRow._onNameChange
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow._onNameChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.Name\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type string.\n"
  syntax:
    content: protected event OnFieldChange<string> _onNameChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Protected Event _onNameChange As OnFieldChange(Of String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow._onRankChange
  commentId: E:SuperOffice.CRM.Rows.ConsentPurposeRow._onRankChange
  id: _onRankChange
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: _onRankChange
  nameWithType: ConsentPurposeRow._onRankChange
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow._onRankChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.Rank\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type short.\n"
  syntax:
    content: protected event OnFieldChange<short> _onRankChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int16}
    content.vb: Protected Event _onRankChange As OnFieldChange(Of Short)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow._onTooltipChange
  commentId: E:SuperOffice.CRM.Rows.ConsentPurposeRow._onTooltipChange
  id: _onTooltipChange
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: _onTooltipChange
  nameWithType: ConsentPurposeRow._onTooltipChange
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow._onTooltipChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.Tooltip\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type string.\n"
  syntax:
    content: protected event OnFieldChange<string> _onTooltipChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Protected Event _onTooltipChange As OnFieldChange(Of String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow._onDeletedChange
  commentId: E:SuperOffice.CRM.Rows.ConsentPurposeRow._onDeletedChange
  id: _onDeletedChange
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: _onDeletedChange
  nameWithType: ConsentPurposeRow._onDeletedChange
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow._onDeletedChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.Deleted\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type short.\n"
  syntax:
    content: protected event OnFieldChange<short> _onDeletedChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int16}
    content.vb: Protected Event _onDeletedChange As OnFieldChange(Of Short)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow._onKeyChange
  commentId: E:SuperOffice.CRM.Rows.ConsentPurposeRow._onKeyChange
  id: _onKeyChange
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: _onKeyChange
  nameWithType: ConsentPurposeRow._onKeyChange
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow._onKeyChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.Key\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type string.\n"
  syntax:
    content: protected event OnFieldChange<string> _onKeyChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Protected Event _onKeyChange As OnFieldChange(Of String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow._onConsentTextChange
  commentId: E:SuperOffice.CRM.Rows.ConsentPurposeRow._onConsentTextChange
  id: _onConsentTextChange
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: _onConsentTextChange
  nameWithType: ConsentPurposeRow._onConsentTextChange
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow._onConsentTextChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentText\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type string.\n"
  syntax:
    content: protected event OnFieldChange<string> _onConsentTextChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Protected Event _onConsentTextChange As OnFieldChange(Of String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow._onFormTextChange
  commentId: E:SuperOffice.CRM.Rows.ConsentPurposeRow._onFormTextChange
  id: _onFormTextChange
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: _onFormTextChange
  nameWithType: ConsentPurposeRow._onFormTextChange
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow._onFormTextChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.FormText\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type string.\n"
  syntax:
    content: protected event OnFieldChange<string> _onFormTextChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Protected Event _onFormTextChange As OnFieldChange(Of String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow._onPrivacyStatementDescChange
  commentId: E:SuperOffice.CRM.Rows.ConsentPurposeRow._onPrivacyStatementDescChange
  id: _onPrivacyStatementDescChange
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: _onPrivacyStatementDescChange
  nameWithType: ConsentPurposeRow._onPrivacyStatementDescChange
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow._onPrivacyStatementDescChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.PrivacyStatementDesc\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type string.\n"
  syntax:
    content: protected event OnFieldChange<string> _onPrivacyStatementDescChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Protected Event _onPrivacyStatementDescChange As OnFieldChange(Of String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow._onPrivacyStatementUrlChange
  commentId: E:SuperOffice.CRM.Rows.ConsentPurposeRow._onPrivacyStatementUrlChange
  id: _onPrivacyStatementUrlChange
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: _onPrivacyStatementUrlChange
  nameWithType: ConsentPurposeRow._onPrivacyStatementUrlChange
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow._onPrivacyStatementUrlChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.PrivacyStatementUrl\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type string.\n"
  syntax:
    content: protected event OnFieldChange<string> _onPrivacyStatementUrlChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Protected Event _onPrivacyStatementUrlChange As OnFieldChange(Of String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow._onActiveChange
  commentId: E:SuperOffice.CRM.Rows.ConsentPurposeRow._onActiveChange
  id: _onActiveChange
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: _onActiveChange
  nameWithType: ConsentPurposeRow._onActiveChange
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow._onActiveChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.Active\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type short.\n"
  syntax:
    content: protected event OnFieldChange<short> _onActiveChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int16}
    content.vb: Protected Event _onActiveChange As OnFieldChange(Of Short)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow._onRegisteredChange
  commentId: E:SuperOffice.CRM.Rows.ConsentPurposeRow._onRegisteredChange
  id: _onRegisteredChange
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: _onRegisteredChange
  nameWithType: ConsentPurposeRow._onRegisteredChange
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow._onRegisteredChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.Registered\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type DateTime.\n"
  syntax:
    content: protected event OnFieldChange<DateTime> _onRegisteredChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
    content.vb: Protected Event _onRegisteredChange As OnFieldChange(Of Date)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow._onRegisteredAssociateIdChange
  commentId: E:SuperOffice.CRM.Rows.ConsentPurposeRow._onRegisteredAssociateIdChange
  id: _onRegisteredAssociateIdChange
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: _onRegisteredAssociateIdChange
  nameWithType: ConsentPurposeRow._onRegisteredAssociateIdChange
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow._onRegisteredAssociateIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.RegisteredAssociateId\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onRegisteredAssociateIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onRegisteredAssociateIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow._onUpdatedChange
  commentId: E:SuperOffice.CRM.Rows.ConsentPurposeRow._onUpdatedChange
  id: _onUpdatedChange
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: _onUpdatedChange
  nameWithType: ConsentPurposeRow._onUpdatedChange
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow._onUpdatedChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.Updated\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type DateTime.\n"
  syntax:
    content: protected event OnFieldChange<DateTime> _onUpdatedChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
    content.vb: Protected Event _onUpdatedChange As OnFieldChange(Of Date)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow._onUpdatedAssociateIdChange
  commentId: E:SuperOffice.CRM.Rows.ConsentPurposeRow._onUpdatedAssociateIdChange
  id: _onUpdatedAssociateIdChange
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: _onUpdatedAssociateIdChange
  nameWithType: ConsentPurposeRow._onUpdatedAssociateIdChange
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow._onUpdatedAssociateIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.UpdatedAssociateId\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onUpdatedAssociateIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onUpdatedAssociateIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow._onUpdatedCountChange
  commentId: E:SuperOffice.CRM.Rows.ConsentPurposeRow._onUpdatedCountChange
  id: _onUpdatedCountChange
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: _onUpdatedCountChange
  nameWithType: ConsentPurposeRow._onUpdatedCountChange
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow._onUpdatedCountChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.UpdatedCount\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type short.\n"
  syntax:
    content: protected event OnFieldChange<short> _onUpdatedCountChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int16}
    content.vb: Protected Event _onUpdatedCountChange As OnFieldChange(Of Short)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.OnNameChange
  commentId: E:SuperOffice.CRM.Rows.ConsentPurposeRow.OnNameChange
  id: OnNameChange
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: OnNameChange
  nameWithType: ConsentPurposeRow.OnNameChange
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.OnNameChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when Name is changing.\n"
  syntax:
    content: public event OnFieldChange<string> OnNameChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Public Event OnNameChange As OnFieldChange(Of String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.OnRankChange
  commentId: E:SuperOffice.CRM.Rows.ConsentPurposeRow.OnRankChange
  id: OnRankChange
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: OnRankChange
  nameWithType: ConsentPurposeRow.OnRankChange
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.OnRankChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when Rank is changing.\n"
  syntax:
    content: public event OnFieldChange<short> OnRankChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int16}
    content.vb: Public Event OnRankChange As OnFieldChange(Of Short)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.OnTooltipChange
  commentId: E:SuperOffice.CRM.Rows.ConsentPurposeRow.OnTooltipChange
  id: OnTooltipChange
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: OnTooltipChange
  nameWithType: ConsentPurposeRow.OnTooltipChange
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.OnTooltipChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when Tooltip is changing.\n"
  syntax:
    content: public event OnFieldChange<string> OnTooltipChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Public Event OnTooltipChange As OnFieldChange(Of String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.OnDeletedChange
  commentId: E:SuperOffice.CRM.Rows.ConsentPurposeRow.OnDeletedChange
  id: OnDeletedChange
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: OnDeletedChange
  nameWithType: ConsentPurposeRow.OnDeletedChange
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.OnDeletedChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when Deleted is changing.\n"
  syntax:
    content: public event OnFieldChange<short> OnDeletedChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int16}
    content.vb: Public Event OnDeletedChange As OnFieldChange(Of Short)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.OnKeyChange
  commentId: E:SuperOffice.CRM.Rows.ConsentPurposeRow.OnKeyChange
  id: OnKeyChange
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: OnKeyChange
  nameWithType: ConsentPurposeRow.OnKeyChange
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.OnKeyChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when Key is changing.\n"
  syntax:
    content: public event OnFieldChange<string> OnKeyChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Public Event OnKeyChange As OnFieldChange(Of String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.OnConsentTextChange
  commentId: E:SuperOffice.CRM.Rows.ConsentPurposeRow.OnConsentTextChange
  id: OnConsentTextChange
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: OnConsentTextChange
  nameWithType: ConsentPurposeRow.OnConsentTextChange
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.OnConsentTextChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when ConsentText is changing.\n"
  syntax:
    content: public event OnFieldChange<string> OnConsentTextChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Public Event OnConsentTextChange As OnFieldChange(Of String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.OnFormTextChange
  commentId: E:SuperOffice.CRM.Rows.ConsentPurposeRow.OnFormTextChange
  id: OnFormTextChange
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: OnFormTextChange
  nameWithType: ConsentPurposeRow.OnFormTextChange
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.OnFormTextChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when FormText is changing.\n"
  syntax:
    content: public event OnFieldChange<string> OnFormTextChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Public Event OnFormTextChange As OnFieldChange(Of String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.OnPrivacyStatementDescChange
  commentId: E:SuperOffice.CRM.Rows.ConsentPurposeRow.OnPrivacyStatementDescChange
  id: OnPrivacyStatementDescChange
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: OnPrivacyStatementDescChange
  nameWithType: ConsentPurposeRow.OnPrivacyStatementDescChange
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.OnPrivacyStatementDescChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when PrivacyStatementDesc is changing.\n"
  syntax:
    content: public event OnFieldChange<string> OnPrivacyStatementDescChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Public Event OnPrivacyStatementDescChange As OnFieldChange(Of String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.OnPrivacyStatementUrlChange
  commentId: E:SuperOffice.CRM.Rows.ConsentPurposeRow.OnPrivacyStatementUrlChange
  id: OnPrivacyStatementUrlChange
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: OnPrivacyStatementUrlChange
  nameWithType: ConsentPurposeRow.OnPrivacyStatementUrlChange
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.OnPrivacyStatementUrlChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when PrivacyStatementUrl is changing.\n"
  syntax:
    content: public event OnFieldChange<string> OnPrivacyStatementUrlChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Public Event OnPrivacyStatementUrlChange As OnFieldChange(Of String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.OnActiveChange
  commentId: E:SuperOffice.CRM.Rows.ConsentPurposeRow.OnActiveChange
  id: OnActiveChange
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: OnActiveChange
  nameWithType: ConsentPurposeRow.OnActiveChange
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.OnActiveChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when Active is changing.\n"
  syntax:
    content: public event OnFieldChange<short> OnActiveChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int16}
    content.vb: Public Event OnActiveChange As OnFieldChange(Of Short)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.OnRegisteredChange
  commentId: E:SuperOffice.CRM.Rows.ConsentPurposeRow.OnRegisteredChange
  id: OnRegisteredChange
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: OnRegisteredChange
  nameWithType: ConsentPurposeRow.OnRegisteredChange
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.OnRegisteredChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when Registered is changing.\n"
  syntax:
    content: public event OnFieldChange<DateTime> OnRegisteredChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
    content.vb: Public Event OnRegisteredChange As OnFieldChange(Of Date)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.OnRegisteredAssociateIdChange
  commentId: E:SuperOffice.CRM.Rows.ConsentPurposeRow.OnRegisteredAssociateIdChange
  id: OnRegisteredAssociateIdChange
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: OnRegisteredAssociateIdChange
  nameWithType: ConsentPurposeRow.OnRegisteredAssociateIdChange
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.OnRegisteredAssociateIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when RegisteredAssociateId is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnRegisteredAssociateIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnRegisteredAssociateIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.OnUpdatedChange
  commentId: E:SuperOffice.CRM.Rows.ConsentPurposeRow.OnUpdatedChange
  id: OnUpdatedChange
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: OnUpdatedChange
  nameWithType: ConsentPurposeRow.OnUpdatedChange
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.OnUpdatedChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when Updated is changing.\n"
  syntax:
    content: public event OnFieldChange<DateTime> OnUpdatedChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
    content.vb: Public Event OnUpdatedChange As OnFieldChange(Of Date)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.OnUpdatedAssociateIdChange
  commentId: E:SuperOffice.CRM.Rows.ConsentPurposeRow.OnUpdatedAssociateIdChange
  id: OnUpdatedAssociateIdChange
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: OnUpdatedAssociateIdChange
  nameWithType: ConsentPurposeRow.OnUpdatedAssociateIdChange
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.OnUpdatedAssociateIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when UpdatedAssociateId is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnUpdatedAssociateIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnUpdatedAssociateIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.OnUpdatedCountChange
  commentId: E:SuperOffice.CRM.Rows.ConsentPurposeRow.OnUpdatedCountChange
  id: OnUpdatedCountChange
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow
  langs:
  - csharp
  - vb
  name: OnUpdatedCountChange
  nameWithType: ConsentPurposeRow.OnUpdatedCountChange
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.OnUpdatedCountChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when UpdatedCount is changing.\n"
  syntax:
    content: public event OnFieldChange<short> OnUpdatedCountChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int16}
    content.vb: Public Event OnUpdatedCountChange As OnFieldChange(Of Short)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.CRM.Rows
  commentId: N:SuperOffice.CRM.Rows
  isExternal: true
  name: SuperOffice.CRM.Rows
  nameWithType: SuperOffice.CRM.Rows
  fullName: SuperOffice.CRM.Rows
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Data.SQL.SqlCommand
  commentId: T:SuperOffice.Data.SQL.SqlCommand
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: SqlCommand
  nameWithType: SqlCommand
  fullName: SuperOffice.Data.SQL.SqlCommand
- uid: SuperOffice.Data.SQL.PrivateSave
  commentId: T:SuperOffice.Data.SQL.PrivateSave
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: PrivateSave
  nameWithType: PrivateSave
  fullName: SuperOffice.Data.SQL.PrivateSave
- uid: SuperOffice.CRM.Rows.TableRowBase
  commentId: T:SuperOffice.CRM.Rows.TableRowBase
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: TableRowBase
  nameWithType: TableRowBase
  fullName: SuperOffice.CRM.Rows.TableRowBase
- uid: SuperOffice.Data.INestedPersist
  commentId: T:SuperOffice.Data.INestedPersist
  parent: SuperOffice.Data
  isExternal: true
  name: INestedPersist
  nameWithType: INestedPersist
  fullName: SuperOffice.Data.INestedPersist
- uid: SuperOffice.CRM.Security.ISoDataLookup
  commentId: T:SuperOffice.CRM.Security.ISoDataLookup
  parent: SuperOffice.CRM.Security
  isExternal: true
  name: ISoDataLookup
  nameWithType: ISoDataLookup
  fullName: SuperOffice.CRM.Security.ISoDataLookup
- uid: SuperOffice.CRM.Security.ISentryIgnorable
  commentId: T:SuperOffice.CRM.Security.ISentryIgnorable
  parent: SuperOffice.CRM.Security
  isExternal: true
  name: ISentryIgnorable
  nameWithType: ISentryIgnorable
  fullName: SuperOffice.CRM.Security.ISentryIgnorable
- uid: SuperOffice.Data.ISoItem
  commentId: T:SuperOffice.Data.ISoItem
  parent: SuperOffice.Data
  isExternal: true
  name: ISoItem
  nameWithType: ISoItem
  fullName: SuperOffice.Data.ISoItem
- uid: SuperOffice.CRM.Rows.TableRowBase._saveOwner
  commentId: F:SuperOffice.CRM.Rows.TableRowBase._saveOwner
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: _saveOwner
  nameWithType: TableRowBase._saveOwner
  fullName: SuperOffice.CRM.Rows.TableRowBase._saveOwner
- uid: SuperOffice.CRM.Rows.TableRowBase._sentries
  commentId: F:SuperOffice.CRM.Rows.TableRowBase._sentries
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: _sentries
  nameWithType: TableRowBase._sentries
  fullName: SuperOffice.CRM.Rows.TableRowBase._sentries
- uid: SuperOffice.CRM.Rows.TableRowBase._onValueChange
  commentId: F:SuperOffice.CRM.Rows.TableRowBase._onValueChange
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: _onValueChange
  nameWithType: TableRowBase._onValueChange
  fullName: SuperOffice.CRM.Rows.TableRowBase._onValueChange
- uid: SuperOffice.CRM.Rows.TableRowBase._relatedNestedPersistMembers
  commentId: F:SuperOffice.CRM.Rows.TableRowBase._relatedNestedPersistMembers
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: _relatedNestedPersistMembers
  nameWithType: TableRowBase._relatedNestedPersistMembers
  fullName: SuperOffice.CRM.Rows.TableRowBase._relatedNestedPersistMembers
- uid: SuperOffice.CRM.Rows.TableRowBase._sqlType
  commentId: F:SuperOffice.CRM.Rows.TableRowBase._sqlType
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: _sqlType
  nameWithType: TableRowBase._sqlType
  fullName: SuperOffice.CRM.Rows.TableRowBase._sqlType
- uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.Int32,System.Object)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.Int32,System.Object)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: InternalSetValue(Int32, Object)
  nameWithType: TableRowBase.InternalSetValue(Int32, Object)
  fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.Int32, System.Object)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.Int32,System.Object)
    name: InternalSetValue
    nameWithType: TableRowBase.InternalSetValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.Int32,System.Object)
    name: InternalSetValue
    nameWithType: TableRowBase.InternalSetValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(SuperOffice.Data.Dictionary.SoField,System.Object)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(SuperOffice.Data.Dictionary.SoField,System.Object)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: InternalSetValue(SoField, Object)
  nameWithType: TableRowBase.InternalSetValue(SoField, Object)
  fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(SuperOffice.Data.Dictionary.SoField, System.Object)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(SuperOffice.Data.Dictionary.SoField,System.Object)
    name: InternalSetValue
    nameWithType: TableRowBase.InternalSetValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.Dictionary.SoField
    name: SoField
    nameWithType: SoField
    fullName: SuperOffice.Data.Dictionary.SoField
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(SuperOffice.Data.Dictionary.SoField,System.Object)
    name: InternalSetValue
    nameWithType: TableRowBase.InternalSetValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.Dictionary.SoField
    name: SoField
    nameWithType: SoField
    fullName: SuperOffice.Data.Dictionary.SoField
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: GetFieldValue(FieldInfo)
  nameWithType: TableRowBase.GetFieldValue(FieldInfo)
  fullName: SuperOffice.CRM.Rows.TableRowBase.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
    name: GetFieldValue
    nameWithType: TableRowBase.GetFieldValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.GetFieldValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
    name: GetFieldValue
    nameWithType: TableRowBase.GetFieldValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.GetFieldValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.GetKnownFields
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.GetKnownFields
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: GetKnownFields()
  nameWithType: TableRowBase.GetKnownFields()
  fullName: SuperOffice.CRM.Rows.TableRowBase.GetKnownFields()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.GetKnownFields
    name: GetKnownFields
    nameWithType: TableRowBase.GetKnownFields
    fullName: SuperOffice.CRM.Rows.TableRowBase.GetKnownFields
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.GetKnownFields
    name: GetKnownFields
    nameWithType: TableRowBase.GetKnownFields
    fullName: SuperOffice.CRM.Rows.TableRowBase.GetKnownFields
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: ISoDataLookup.GetPersistedFieldValue(FieldInfo)
  nameWithType: TableRowBase.ISoDataLookup.GetPersistedFieldValue(FieldInfo)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  nameWithType.vb: TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue(FieldInfo)
  name.vb: SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue(FieldInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
    name: ISoDataLookup.GetPersistedFieldValue
    nameWithType: TableRowBase.ISoDataLookup.GetPersistedFieldValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
    name: SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue
    nameWithType: TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: ISoDataLookup.IsPersistedFieldValueKnown(FieldInfo)
  nameWithType: TableRowBase.ISoDataLookup.IsPersistedFieldValueKnown(FieldInfo)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  nameWithType.vb: TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown(FieldInfo)
  name.vb: SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown(FieldInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
    name: ISoDataLookup.IsPersistedFieldValueKnown
    nameWithType: TableRowBase.ISoDataLookup.IsPersistedFieldValueKnown
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
    name: SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown
    nameWithType: TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: IsGhostField(FieldInfo)
  nameWithType: TableRowBase.IsGhostField(FieldInfo)
  fullName: SuperOffice.CRM.Rows.TableRowBase.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
    name: IsGhostField
    nameWithType: TableRowBase.IsGhostField
    fullName: SuperOffice.CRM.Rows.TableRowBase.IsGhostField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
    name: IsGhostField
    nameWithType: TableRowBase.IsGhostField
    fullName: SuperOffice.CRM.Rows.TableRowBase.IsGhostField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.RowLoad
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.RowLoad
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: RowLoad()
  nameWithType: TableRowBase.RowLoad()
  fullName: SuperOffice.CRM.Rows.TableRowBase.RowLoad()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.RowLoad
    name: RowLoad
    nameWithType: TableRowBase.RowLoad
    fullName: SuperOffice.CRM.Rows.TableRowBase.RowLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.RowLoad
    name: RowLoad
    nameWithType: TableRowBase.RowLoad
    fullName: SuperOffice.CRM.Rows.TableRowBase.RowLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.RowLoad(SuperOffice.CRM.Rows.ITableRowLoadHandler)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.RowLoad(SuperOffice.CRM.Rows.ITableRowLoadHandler)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: RowLoad(ITableRowLoadHandler)
  nameWithType: TableRowBase.RowLoad(ITableRowLoadHandler)
  fullName: SuperOffice.CRM.Rows.TableRowBase.RowLoad(SuperOffice.CRM.Rows.ITableRowLoadHandler)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.RowLoad(SuperOffice.CRM.Rows.ITableRowLoadHandler)
    name: RowLoad
    nameWithType: TableRowBase.RowLoad
    fullName: SuperOffice.CRM.Rows.TableRowBase.RowLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.ITableRowLoadHandler
    name: ITableRowLoadHandler
    nameWithType: ITableRowLoadHandler
    fullName: SuperOffice.CRM.Rows.ITableRowLoadHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.RowLoad(SuperOffice.CRM.Rows.ITableRowLoadHandler)
    name: RowLoad
    nameWithType: TableRowBase.RowLoad
    fullName: SuperOffice.CRM.Rows.TableRowBase.RowLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.ITableRowLoadHandler
    name: ITableRowLoadHandler
    nameWithType: ITableRowLoadHandler
    fullName: SuperOffice.CRM.Rows.ITableRowLoadHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.OnLoaded(SuperOffice.CRM.Rows.IdxBase)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnLoaded(SuperOffice.CRM.Rows.IdxBase)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnLoaded(IdxBase)
  nameWithType: TableRowBase.OnLoaded(IdxBase)
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnLoaded(SuperOffice.CRM.Rows.IdxBase)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnLoaded(SuperOffice.CRM.Rows.IdxBase)
    name: OnLoaded
    nameWithType: TableRowBase.OnLoaded
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnLoaded
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.IdxBase
    name: IdxBase
    nameWithType: IdxBase
    fullName: SuperOffice.CRM.Rows.IdxBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnLoaded(SuperOffice.CRM.Rows.IdxBase)
    name: OnLoaded
    nameWithType: TableRowBase.OnLoaded
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnLoaded
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.IdxBase
    name: IdxBase
    nameWithType: IdxBase
    fullName: SuperOffice.CRM.Rows.IdxBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.CRM.Rows.IdxBase,SuperOffice.Data.SoDataReader)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.CRM.Rows.IdxBase,SuperOffice.Data.SoDataReader)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Load(IdxBase, SoDataReader)
  nameWithType: TableRowBase.Load(IdxBase, SoDataReader)
  fullName: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.CRM.Rows.IdxBase, SuperOffice.Data.SoDataReader)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.CRM.Rows.IdxBase,SuperOffice.Data.SoDataReader)
    name: Load
    nameWithType: TableRowBase.Load
    fullName: SuperOffice.CRM.Rows.TableRowBase.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.IdxBase
    name: IdxBase
    nameWithType: IdxBase
    fullName: SuperOffice.CRM.Rows.IdxBase
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.CRM.Rows.IdxBase,SuperOffice.Data.SoDataReader)
    name: Load
    nameWithType: TableRowBase.Load
    fullName: SuperOffice.CRM.Rows.TableRowBase.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.IdxBase
    name: IdxBase
    nameWithType: IdxBase
    fullName: SuperOffice.CRM.Rows.IdxBase
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Load(SoDataReader, TableInfo)
  nameWithType: TableRowBase.Load(SoDataReader, TableInfo)
  fullName: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.Data.SoDataReader, SuperOffice.Data.SQL.TableInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
    name: Load
    nameWithType: TableRowBase.Load
    fullName: SuperOffice.CRM.Rows.TableRowBase.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
    name: Load
    nameWithType: TableRowBase.Load
    fullName: SuperOffice.CRM.Rows.TableRowBase.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaults
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SetDefaults
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SetDefaults()
  nameWithType: TableRowBase.SetDefaults()
  fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaults()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaults
    name: SetDefaults
    nameWithType: TableRowBase.SetDefaults
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaults
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaults
    name: SetDefaults
    nameWithType: TableRowBase.SetDefaults
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaults
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DashboardTileDefinitionRow,System.String)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DashboardTileDefinitionRow,System.String)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SetDefaults(DashboardTileDefinitionRow, String)
  nameWithType: TableRowBase.SetDefaults(DashboardTileDefinitionRow, String)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DashboardTileDefinitionRow, System.String)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DashboardTileDefinitionRow,System.String)
    name: SetDefaults
    nameWithType: TableRowBase.SetDefaults
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaults
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.DashboardTileDefinitionRow
    name: DashboardTileDefinitionRow
    nameWithType: DashboardTileDefinitionRow
    fullName: SuperOffice.CRM.Rows.DashboardTileDefinitionRow
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DashboardTileDefinitionRow,System.String)
    name: SetDefaults
    nameWithType: TableRowBase.SetDefaults
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaults
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.DashboardTileDefinitionRow
    name: DashboardTileDefinitionRow
    nameWithType: DashboardTileDefinitionRow
    fullName: SuperOffice.CRM.Rows.DashboardTileDefinitionRow
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner(SuperOffice.Data.INestedPersist)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner(SuperOffice.Data.INestedPersist)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SetSaveOwner(INestedPersist)
  nameWithType: TableRowBase.SetSaveOwner(INestedPersist)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner(SuperOffice.Data.INestedPersist)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner(SuperOffice.Data.INestedPersist)
    name: SetSaveOwner
    nameWithType: TableRowBase.SetSaveOwner
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.INestedPersist
    name: INestedPersist
    nameWithType: INestedPersist
    fullName: SuperOffice.Data.INestedPersist
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner(SuperOffice.Data.INestedPersist)
    name: SetSaveOwner
    nameWithType: TableRowBase.SetSaveOwner
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.INestedPersist
    name: INestedPersist
    nameWithType: INestedPersist
    fullName: SuperOffice.Data.INestedPersist
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Save
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.Save
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Save()
  nameWithType: TableRowBase.Save()
  fullName: SuperOffice.CRM.Rows.TableRowBase.Save()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Save
    name: Save
    nameWithType: TableRowBase.Save
    fullName: SuperOffice.CRM.Rows.TableRowBase.Save
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Save
    name: Save
    nameWithType: TableRowBase.Save
    fullName: SuperOffice.CRM.Rows.TableRowBase.Save
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Delete
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.Delete
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Delete()
  nameWithType: TableRowBase.Delete()
  fullName: SuperOffice.CRM.Rows.TableRowBase.Delete()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Delete
    name: Delete
    nameWithType: TableRowBase.Delete
    fullName: SuperOffice.CRM.Rows.TableRowBase.Delete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Delete
    name: Delete
    nameWithType: TableRowBase.Delete
    fullName: SuperOffice.CRM.Rows.TableRowBase.Delete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Validate
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.Validate
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Validate()
  nameWithType: TableRowBase.Validate()
  fullName: SuperOffice.CRM.Rows.TableRowBase.Validate()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Validate
    name: Validate
    nameWithType: TableRowBase.Validate
    fullName: SuperOffice.CRM.Rows.TableRowBase.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Validate
    name: Validate
    nameWithType: TableRowBase.Validate
    fullName: SuperOffice.CRM.Rows.TableRowBase.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SetDirty(System.Int32,System.Object,System.Object)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SetDirty(System.Int32,System.Object,System.Object)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SetDirty(Int32, Object, Object)
  nameWithType: TableRowBase.SetDirty(Int32, Object, Object)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SetDirty(System.Int32, System.Object, System.Object)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDirty(System.Int32,System.Object,System.Object)
    name: SetDirty
    nameWithType: TableRowBase.SetDirty
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDirty
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDirty(System.Int32,System.Object,System.Object)
    name: SetDirty
    nameWithType: TableRowBase.SetDirty
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDirty
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPreIdUpdate
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPreIdUpdate
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: INestedPersist.OnPreIdUpdate()
  nameWithType: TableRowBase.INestedPersist.OnPreIdUpdate()
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPreIdUpdate()
  nameWithType.vb: TableRowBase.SuperOffice.Data.INestedPersist.OnPreIdUpdate()
  name.vb: SuperOffice.Data.INestedPersist.OnPreIdUpdate()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPreIdUpdate
    name: INestedPersist.OnPreIdUpdate
    nameWithType: TableRowBase.INestedPersist.OnPreIdUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPreIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPreIdUpdate
    name: SuperOffice.Data.INestedPersist.OnPreIdUpdate
    nameWithType: TableRowBase.SuperOffice.Data.INestedPersist.OnPreIdUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPreIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: INestedPersist.OnPrimaryKeyRequest(PKContainer)
  nameWithType: TableRowBase.INestedPersist.OnPrimaryKeyRequest(PKContainer)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
  nameWithType.vb: TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyRequest(PKContainer)
  name.vb: SuperOffice.Data.INestedPersist.OnPrimaryKeyRequest(PKContainer)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
    name: INestedPersist.OnPrimaryKeyRequest
    nameWithType: TableRowBase.INestedPersist.OnPrimaryKeyRequest
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
    name: SuperOffice.Data.INestedPersist.OnPrimaryKeyRequest
    nameWithType: TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyRequest
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: INestedPersist.OnPrimaryKeyUpdate(PKContainer)
  nameWithType: TableRowBase.INestedPersist.OnPrimaryKeyUpdate(PKContainer)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
  nameWithType.vb: TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdate(PKContainer)
  name.vb: SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdate(PKContainer)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
    name: INestedPersist.OnPrimaryKeyUpdate
    nameWithType: TableRowBase.INestedPersist.OnPrimaryKeyUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
    name: SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdate
    nameWithType: TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnIdUpdate
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnIdUpdate
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: INestedPersist.OnIdUpdate()
  nameWithType: TableRowBase.INestedPersist.OnIdUpdate()
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnIdUpdate()
  nameWithType.vb: TableRowBase.SuperOffice.Data.INestedPersist.OnIdUpdate()
  name.vb: SuperOffice.Data.INestedPersist.OnIdUpdate()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnIdUpdate
    name: INestedPersist.OnIdUpdate
    nameWithType: TableRowBase.INestedPersist.OnIdUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnIdUpdate
    name: SuperOffice.Data.INestedPersist.OnIdUpdate
    nameWithType: TableRowBase.SuperOffice.Data.INestedPersist.OnIdUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSave(SuperOffice.Data.SQL.BatchSave)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSave(SuperOffice.Data.SQL.BatchSave)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: INestedPersist.OnSave(BatchSave)
  nameWithType: TableRowBase.INestedPersist.OnSave(BatchSave)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnSave(SuperOffice.Data.SQL.BatchSave)
  nameWithType.vb: TableRowBase.SuperOffice.Data.INestedPersist.OnSave(BatchSave)
  name.vb: SuperOffice.Data.INestedPersist.OnSave(BatchSave)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSave(SuperOffice.Data.SQL.BatchSave)
    name: INestedPersist.OnSave
    nameWithType: TableRowBase.INestedPersist.OnSave
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnSave
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.BatchSave
    name: BatchSave
    nameWithType: BatchSave
    fullName: SuperOffice.Data.SQL.BatchSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSave(SuperOffice.Data.SQL.BatchSave)
    name: SuperOffice.Data.INestedPersist.OnSave
    nameWithType: TableRowBase.SuperOffice.Data.INestedPersist.OnSave
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnSave
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.BatchSave
    name: BatchSave
    nameWithType: BatchSave
    fullName: SuperOffice.Data.SQL.BatchSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSaved(System.Boolean)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSaved(System.Boolean)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: INestedPersist.OnSaved(Boolean)
  nameWithType: TableRowBase.INestedPersist.OnSaved(Boolean)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnSaved(System.Boolean)
  nameWithType.vb: TableRowBase.SuperOffice.Data.INestedPersist.OnSaved(Boolean)
  name.vb: SuperOffice.Data.INestedPersist.OnSaved(Boolean)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSaved(System.Boolean)
    name: INestedPersist.OnSaved
    nameWithType: TableRowBase.INestedPersist.OnSaved
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnSaved
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSaved(System.Boolean)
    name: SuperOffice.Data.INestedPersist.OnSaved
    nameWithType: TableRowBase.SuperOffice.Data.INestedPersist.OnSaved
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnSaved
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdate
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdate
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnPreIdUpdate()
  nameWithType: TableRowBase.OnPreIdUpdate()
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdate()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdate
    name: OnPreIdUpdate
    nameWithType: TableRowBase.OnPreIdUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdate
    name: OnPreIdUpdate
    nameWithType: TableRowBase.OnPreIdUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnPrimaryKeyRequest(PKContainer)
  nameWithType: TableRowBase.OnPrimaryKeyRequest(PKContainer)
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
    name: OnPrimaryKeyRequest
    nameWithType: TableRowBase.OnPrimaryKeyRequest
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
    name: OnPrimaryKeyRequest
    nameWithType: TableRowBase.OnPrimaryKeyRequest
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnPrimaryKeyUpdate(PKContainer)
  nameWithType: TableRowBase.OnPrimaryKeyUpdate(PKContainer)
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
    name: OnPrimaryKeyUpdate
    nameWithType: TableRowBase.OnPrimaryKeyUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
    name: OnPrimaryKeyUpdate
    nameWithType: TableRowBase.OnPrimaryKeyUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.OnIdUpdate
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnIdUpdate
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnIdUpdate()
  nameWithType: TableRowBase.OnIdUpdate()
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnIdUpdate()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnIdUpdate
    name: OnIdUpdate
    nameWithType: TableRowBase.OnIdUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnIdUpdate
    name: OnIdUpdate
    nameWithType: TableRowBase.OnIdUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: BeginIgnoreSentryCheck()
  nameWithType: TableRowBase.BeginIgnoreSentryCheck()
  fullName: SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck
    name: BeginIgnoreSentryCheck
    nameWithType: TableRowBase.BeginIgnoreSentryCheck
    fullName: SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck
    name: BeginIgnoreSentryCheck
    nameWithType: TableRowBase.BeginIgnoreSentryCheck
    fullName: SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: EndIgnoreSentryCheck()
  nameWithType: TableRowBase.EndIgnoreSentryCheck()
  fullName: SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck
    name: EndIgnoreSentryCheck
    nameWithType: TableRowBase.EndIgnoreSentryCheck
    fullName: SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck
    name: EndIgnoreSentryCheck
    nameWithType: TableRowBase.EndIgnoreSentryCheck
    fullName: SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: GetRelatedNestedPersist()
  nameWithType: TableRowBase.GetRelatedNestedPersist()
  fullName: SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist
    name: GetRelatedNestedPersist
    nameWithType: TableRowBase.GetRelatedNestedPersist
    fullName: SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist
    name: GetRelatedNestedPersist
    nameWithType: TableRowBase.GetRelatedNestedPersist
    fullName: SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Item(System.Int32)
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.Item(System.Int32)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Item[Int32]
  nameWithType: TableRowBase.Item[Int32]
  fullName: SuperOffice.CRM.Rows.TableRowBase.Item[System.Int32]
  nameWithType.vb: TableRowBase.Item(Int32)
  fullName.vb: SuperOffice.CRM.Rows.TableRowBase.Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Item(System.Int32)
    name: Item
    nameWithType: TableRowBase.Item
    fullName: SuperOffice.CRM.Rows.TableRowBase.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Item(System.Int32)
    name: Item
    nameWithType: TableRowBase.Item
    fullName: SuperOffice.CRM.Rows.TableRowBase.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Item(SuperOffice.Data.Dictionary.SoField)
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.Item(SuperOffice.Data.Dictionary.SoField)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Item[SoField]
  nameWithType: TableRowBase.Item[SoField]
  fullName: SuperOffice.CRM.Rows.TableRowBase.Item[SuperOffice.Data.Dictionary.SoField]
  nameWithType.vb: TableRowBase.Item(SoField)
  fullName.vb: SuperOffice.CRM.Rows.TableRowBase.Item(SuperOffice.Data.Dictionary.SoField)
  name.vb: Item(SoField)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Item(SuperOffice.Data.Dictionary.SoField)
    name: Item
    nameWithType: TableRowBase.Item
    fullName: SuperOffice.CRM.Rows.TableRowBase.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: SuperOffice.Data.Dictionary.SoField
    name: SoField
    nameWithType: SoField
    fullName: SuperOffice.Data.Dictionary.SoField
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Item(SuperOffice.Data.Dictionary.SoField)
    name: Item
    nameWithType: TableRowBase.Item
    fullName: SuperOffice.CRM.Rows.TableRowBase.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.Dictionary.SoField
    name: SoField
    nameWithType: SoField
    fullName: SuperOffice.Data.Dictionary.SoField
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Sentries
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.Sentries
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Sentries
  nameWithType: TableRowBase.Sentries
  fullName: SuperOffice.CRM.Rows.TableRowBase.Sentries
- uid: SuperOffice.CRM.Rows.TableRowBase.ForeignKeyHelper
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.ForeignKeyHelper
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: ForeignKeyHelper
  nameWithType: TableRowBase.ForeignKeyHelper
  fullName: SuperOffice.CRM.Rows.TableRowBase.ForeignKeyHelper
- uid: SuperOffice.CRM.Rows.TableRowBase.IsDeleted
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.IsDeleted
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: IsDeleted
  nameWithType: TableRowBase.IsDeleted
  fullName: SuperOffice.CRM.Rows.TableRowBase.IsDeleted
- uid: SuperOffice.CRM.Rows.TableRowBase.IsSaving
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.IsSaving
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: IsSaving
  nameWithType: TableRowBase.IsSaving
  fullName: SuperOffice.CRM.Rows.TableRowBase.IsSaving
- uid: SuperOffice.CRM.Rows.TableRowBase.SqlType
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.SqlType
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SqlType
  nameWithType: TableRowBase.SqlType
  fullName: SuperOffice.CRM.Rows.TableRowBase.SqlType
- uid: SuperOffice.CRM.Rows.TableRowBase.IsSentryIgnored
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.IsSentryIgnored
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: IsSentryIgnored
  nameWithType: TableRowBase.IsSentryIgnored
  fullName: SuperOffice.CRM.Rows.TableRowBase.IsSentryIgnored
- uid: SuperOffice.CRM.Rows.TableRowBase.IsMarkedForDelete
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.IsMarkedForDelete
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: IsMarkedForDelete
  nameWithType: TableRowBase.IsMarkedForDelete
  fullName: SuperOffice.CRM.Rows.TableRowBase.IsMarkedForDelete
- uid: SuperOffice.CRM.Rows.TableRowBase.OnValueChanged
  commentId: E:SuperOffice.CRM.Rows.TableRowBase.OnValueChanged
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnValueChanged
  nameWithType: TableRowBase.OnValueChanged
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnValueChanged
- uid: SuperOffice.CRM.Rows.TableRowBase.OnElementSaved
  commentId: E:SuperOffice.CRM.Rows.TableRowBase.OnElementSaved
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnElementSaved
  nameWithType: TableRowBase.OnElementSaved
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnElementSaved
- uid: SuperOffice.CRM.Rows.TableRowBase.OnElementIdUpdate
  commentId: E:SuperOffice.CRM.Rows.TableRowBase.OnElementIdUpdate
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnElementIdUpdate
  nameWithType: TableRowBase.OnElementIdUpdate
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnElementIdUpdate
- uid: SuperOffice.Data.SQL.PrivateSave.GetTableInfos
  commentId: M:SuperOffice.Data.SQL.PrivateSave.GetTableInfos
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: GetTableInfos()
  nameWithType: PrivateSave.GetTableInfos()
  fullName: SuperOffice.Data.SQL.PrivateSave.GetTableInfos()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.PrivateSave.GetTableInfos
    name: GetTableInfos
    nameWithType: PrivateSave.GetTableInfos
    fullName: SuperOffice.Data.SQL.PrivateSave.GetTableInfos
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.PrivateSave.GetTableInfos
    name: GetTableInfos
    nameWithType: PrivateSave.GetTableInfos
    fullName: SuperOffice.Data.SQL.PrivateSave.GetTableInfos
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery
  commentId: M:SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: CloneToBasicUpdatingQuery()
  nameWithType: PrivateSave.CloneToBasicUpdatingQuery()
  fullName: SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery
    name: CloneToBasicUpdatingQuery
    nameWithType: PrivateSave.CloneToBasicUpdatingQuery
    fullName: SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery
    name: CloneToBasicUpdatingQuery
    nameWithType: PrivateSave.CloneToBasicUpdatingQuery
    fullName: SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.PrivateSave.OnUpdateField
  commentId: E:SuperOffice.Data.SQL.PrivateSave.OnUpdateField
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: OnUpdateField
  nameWithType: PrivateSave.OnUpdateField
  fullName: SuperOffice.Data.SQL.PrivateSave.OnUpdateField
- uid: SuperOffice.Data.SQL.SqlCommand.Origin
  commentId: F:SuperOffice.Data.SQL.SqlCommand.Origin
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: Origin
  nameWithType: SqlCommand.Origin
  fullName: SuperOffice.Data.SQL.SqlCommand.Origin
- uid: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: AddIgnoreAutoSentryTableInfo(TableInfo)
  nameWithType: SqlCommand.AddIgnoreAutoSentryTableInfo(TableInfo)
  fullName: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
    name: AddIgnoreAutoSentryTableInfo
    nameWithType: SqlCommand.AddIgnoreAutoSentryTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
    name: AddIgnoreAutoSentryTableInfo
    nameWithType: SqlCommand.AddIgnoreAutoSentryTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo})
  commentId: M:SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo})
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: AddIgnoreAutoSentryTableInfo(IEnumerable<TableInfo>)
  nameWithType: SqlCommand.AddIgnoreAutoSentryTableInfo(IEnumerable<TableInfo>)
  fullName: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable<SuperOffice.Data.SQL.TableInfo>)
  nameWithType.vb: SqlCommand.AddIgnoreAutoSentryTableInfo(IEnumerable(Of TableInfo))
  fullName.vb: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable(Of SuperOffice.Data.SQL.TableInfo))
  name.vb: AddIgnoreAutoSentryTableInfo(IEnumerable(Of TableInfo))
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo})
    name: AddIgnoreAutoSentryTableInfo
    nameWithType: SqlCommand.AddIgnoreAutoSentryTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo})
    name: AddIgnoreAutoSentryTableInfo
    nameWithType: SqlCommand.AddIgnoreAutoSentryTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: RemoveIgnoreAutoSentryTableInfo(TableInfo)
  nameWithType: SqlCommand.RemoveIgnoreAutoSentryTableInfo(TableInfo)
  fullName: SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
    name: RemoveIgnoreAutoSentryTableInfo
    nameWithType: SqlCommand.RemoveIgnoreAutoSentryTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
    name: RemoveIgnoreAutoSentryTableInfo
    nameWithType: SqlCommand.RemoveIgnoreAutoSentryTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
  commentId: M:SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: ClearIgnoreAutoSentryTableInfos()
  nameWithType: SqlCommand.ClearIgnoreAutoSentryTableInfos()
  fullName: SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
    name: ClearIgnoreAutoSentryTableInfos
    nameWithType: SqlCommand.ClearIgnoreAutoSentryTableInfos
    fullName: SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
    name: ClearIgnoreAutoSentryTableInfos
    nameWithType: SqlCommand.ClearIgnoreAutoSentryTableInfos
    fullName: SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo(SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo(SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: IsAutoSentryIgnoredOnTableInfo(TableInfo)
  nameWithType: SqlCommand.IsAutoSentryIgnoredOnTableInfo(TableInfo)
  fullName: SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo(SuperOffice.Data.SQL.TableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo(SuperOffice.Data.SQL.TableInfo)
    name: IsAutoSentryIgnoredOnTableInfo
    nameWithType: SqlCommand.IsAutoSentryIgnoredOnTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo(SuperOffice.Data.SQL.TableInfo)
    name: IsAutoSentryIgnoredOnTableInfo
    nameWithType: SqlCommand.IsAutoSentryIgnoredOnTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
  commentId: M:SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: GetPrivateSaves()
  nameWithType: SqlCommand.GetPrivateSaves()
  fullName: SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
    name: GetPrivateSaves
    nameWithType: SqlCommand.GetPrivateSaves
    fullName: SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
    name: GetPrivateSaves
    nameWithType: SqlCommand.GetPrivateSaves
    fullName: SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.GetInserts
  commentId: M:SuperOffice.Data.SQL.SqlCommand.GetInserts
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: GetInserts()
  nameWithType: SqlCommand.GetInserts()
  fullName: SuperOffice.Data.SQL.SqlCommand.GetInserts()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetInserts
    name: GetInserts
    nameWithType: SqlCommand.GetInserts
    fullName: SuperOffice.Data.SQL.SqlCommand.GetInserts
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetInserts
    name: GetInserts
    nameWithType: SqlCommand.GetInserts
    fullName: SuperOffice.Data.SQL.SqlCommand.GetInserts
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.GetUpdates
  commentId: M:SuperOffice.Data.SQL.SqlCommand.GetUpdates
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: GetUpdates()
  nameWithType: SqlCommand.GetUpdates()
  fullName: SuperOffice.Data.SQL.SqlCommand.GetUpdates()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetUpdates
    name: GetUpdates
    nameWithType: SqlCommand.GetUpdates
    fullName: SuperOffice.Data.SQL.SqlCommand.GetUpdates
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetUpdates
    name: GetUpdates
    nameWithType: SqlCommand.GetUpdates
    fullName: SuperOffice.Data.SQL.SqlCommand.GetUpdates
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.GetDeletes
  commentId: M:SuperOffice.Data.SQL.SqlCommand.GetDeletes
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: GetDeletes()
  nameWithType: SqlCommand.GetDeletes()
  fullName: SuperOffice.Data.SQL.SqlCommand.GetDeletes()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetDeletes
    name: GetDeletes
    nameWithType: SqlCommand.GetDeletes
    fullName: SuperOffice.Data.SQL.SqlCommand.GetDeletes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetDeletes
    name: GetDeletes
    nameWithType: SqlCommand.GetDeletes
    fullName: SuperOffice.Data.SQL.SqlCommand.GetDeletes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.GetSelect
  commentId: M:SuperOffice.Data.SQL.SqlCommand.GetSelect
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: GetSelect()
  nameWithType: SqlCommand.GetSelect()
  fullName: SuperOffice.Data.SQL.SqlCommand.GetSelect()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetSelect
    name: GetSelect
    nameWithType: SqlCommand.GetSelect
    fullName: SuperOffice.Data.SQL.SqlCommand.GetSelect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetSelect
    name: GetSelect
    nameWithType: SqlCommand.GetSelect
    fullName: SuperOffice.Data.SQL.SqlCommand.GetSelect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.AutoSentryIgnoredTables
  commentId: P:SuperOffice.Data.SQL.SqlCommand.AutoSentryIgnoredTables
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: AutoSentryIgnoredTables
  nameWithType: SqlCommand.AutoSentryIgnoredTables
  fullName: SuperOffice.Data.SQL.SqlCommand.AutoSentryIgnoredTables
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<ConsentPurposeRow, To>()
  nameWithType: EnumUtil.MapEnums<ConsentPurposeRow, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Rows.ConsentPurposeRow, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of ConsentPurposeRow, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Rows.ConsentPurposeRow, To)()
  name.vb: MapEnums(Of ConsentPurposeRow, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<ConsentPurposeRow, To>
    nameWithType: EnumUtil.MapEnums<ConsentPurposeRow, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Rows.ConsentPurposeRow, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of ConsentPurposeRow, To)
    nameWithType: EnumUtil.MapEnums(Of ConsentPurposeRow, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Rows.ConsentPurposeRow, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteReader(System.Boolean)
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand,System.Boolean)
  parent: SuperOffice.Data.QueryExectionExtensions
  definition: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand,System.Boolean)
  name: ExecuteReader(Boolean)
  nameWithType: QueryExectionExtensions.ExecuteReader(Boolean)
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(System.Boolean)
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(System.Boolean)
    name: ExecuteReader
    nameWithType: QueryExectionExtensions.ExecuteReader
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(System.Boolean)
    name: ExecuteReader
    nameWithType: QueryExectionExtensions.ExecuteReader
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1(SuperOffice.Data.SQL.SqlCommand)
  parent: SuperOffice.Data.QueryExectionExtensions
  definition: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1(SuperOffice.Data.SQL.SqlCommand)
  name: ExecuteScalar<T>()
  nameWithType: QueryExectionExtensions.ExecuteScalar<T>()
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar<T>()
  nameWithType.vb: QueryExectionExtensions.ExecuteScalar(Of T)()
  fullName.vb: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar(Of T)()
  name.vb: ExecuteScalar(Of T)()
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1
    name: ExecuteScalar<T>
    nameWithType: QueryExectionExtensions.ExecuteScalar<T>
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1
    name: ExecuteScalar(Of T)
    nameWithType: QueryExectionExtensions.ExecuteScalar(Of T)
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
  parent: SuperOffice.Data.QueryExectionExtensions
  definition: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
  name: ExecuteNonQuery()
  nameWithType: QueryExectionExtensions.ExecuteNonQuery()
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery()
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
    name: ExecuteNonQuery
    nameWithType: QueryExectionExtensions.ExecuteNonQuery
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
    name: ExecuteNonQuery
    nameWithType: QueryExectionExtensions.ExecuteNonQuery
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<ConsentPurposeRow, To>()
  nameWithType: Converters.MapEnums<ConsentPurposeRow, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Rows.ConsentPurposeRow, To>()
  nameWithType.vb: Converters.MapEnums(Of ConsentPurposeRow, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Rows.ConsentPurposeRow, To)()
  name.vb: MapEnums(Of ConsentPurposeRow, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<ConsentPurposeRow, To>
    nameWithType: Converters.MapEnums<ConsentPurposeRow, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Rows.ConsentPurposeRow, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of ConsentPurposeRow, To)
    nameWithType: Converters.MapEnums(Of ConsentPurposeRow, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Rows.ConsentPurposeRow, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Data.SQL
  commentId: N:SuperOffice.Data.SQL
  isExternal: true
  name: SuperOffice.Data.SQL
  nameWithType: SuperOffice.Data.SQL
  fullName: SuperOffice.Data.SQL
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.CRM.Security
  commentId: N:SuperOffice.CRM.Security
  isExternal: true
  name: SuperOffice.CRM.Security
  nameWithType: SuperOffice.CRM.Security
  fullName: SuperOffice.CRM.Security
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand,System.Boolean)
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand,System.Boolean)
  isExternal: true
  name: ExecuteReader(SqlCommand, Boolean)
  nameWithType: QueryExectionExtensions.ExecuteReader(SqlCommand, Boolean)
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand, System.Boolean)
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand,System.Boolean)
    name: ExecuteReader
    nameWithType: QueryExectionExtensions.ExecuteReader
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand,System.Boolean)
    name: ExecuteReader
    nameWithType: QueryExectionExtensions.ExecuteReader
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.QueryExectionExtensions
  commentId: T:SuperOffice.Data.QueryExectionExtensions
  parent: SuperOffice.Data
  isExternal: true
  name: QueryExectionExtensions
  nameWithType: QueryExectionExtensions
  fullName: SuperOffice.Data.QueryExectionExtensions
- uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1(SuperOffice.Data.SQL.SqlCommand)
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1(SuperOffice.Data.SQL.SqlCommand)
  isExternal: true
  name: ExecuteScalar<T>(SqlCommand)
  nameWithType: QueryExectionExtensions.ExecuteScalar<T>(SqlCommand)
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar<T>(SuperOffice.Data.SQL.SqlCommand)
  nameWithType.vb: QueryExectionExtensions.ExecuteScalar(Of T)(SqlCommand)
  fullName.vb: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar(Of T)(SuperOffice.Data.SQL.SqlCommand)
  name.vb: ExecuteScalar(Of T)(SqlCommand)
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1(SuperOffice.Data.SQL.SqlCommand)
    name: ExecuteScalar<T>
    nameWithType: QueryExectionExtensions.ExecuteScalar<T>
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1(SuperOffice.Data.SQL.SqlCommand)
    name: ExecuteScalar(Of T)
    nameWithType: QueryExectionExtensions.ExecuteScalar(Of T)
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
  isExternal: true
  name: ExecuteNonQuery(SqlCommand)
  nameWithType: QueryExectionExtensions.ExecuteNonQuery(SqlCommand)
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
    name: ExecuteNonQuery
    nameWithType: QueryExectionExtensions.ExecuteNonQuery
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
    name: ExecuteNonQuery
    nameWithType: QueryExectionExtensions.ExecuteNonQuery
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.String,System.Object)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.String,System.Object)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: InternalSetValue(String, Object)
  nameWithType: TableRowBase.InternalSetValue(String, Object)
  fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.String, System.Object)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.String,System.Object)
    name: InternalSetValue
    nameWithType: TableRowBase.InternalSetValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.String,System.Object)
    name: InternalSetValue
    nameWithType: TableRowBase.InternalSetValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.InternalSetValue*
  commentId: Overload:SuperOffice.CRM.Rows.ConsentPurposeRow.InternalSetValue
  isExternal: true
  name: InternalSetValue
  nameWithType: ConsentPurposeRow.InternalSetValue
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.InternalSetValue
- uid: SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: GetPersistedFieldValue(FieldInfo)
  nameWithType: PrivateSave.GetPersistedFieldValue(FieldInfo)
  fullName: SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
    name: GetPersistedFieldValue
    nameWithType: PrivateSave.GetPersistedFieldValue
    fullName: SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
    name: GetPersistedFieldValue
    nameWithType: PrivateSave.GetPersistedFieldValue
    fullName: SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.GetPersistedFieldValue*
  commentId: Overload:SuperOffice.CRM.Rows.ConsentPurposeRow.GetPersistedFieldValue
  isExternal: true
  name: GetPersistedFieldValue
  nameWithType: ConsentPurposeRow.GetPersistedFieldValue
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.GetPersistedFieldValue
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: SuperOffice.Data.SQL.FieldInfo
  commentId: T:SuperOffice.Data.SQL.FieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: SuperOffice.Data.SQL.FieldInfo
- uid: SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: IsPersistedFieldValueKnown(FieldInfo)
  nameWithType: PrivateSave.IsPersistedFieldValueKnown(FieldInfo)
  fullName: SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
    name: IsPersistedFieldValueKnown
    nameWithType: PrivateSave.IsPersistedFieldValueKnown
    fullName: SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
    name: IsPersistedFieldValueKnown
    nameWithType: PrivateSave.IsPersistedFieldValueKnown
    fullName: SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.IsPersistedFieldValueKnown*
  commentId: Overload:SuperOffice.CRM.Rows.ConsentPurposeRow.IsPersistedFieldValueKnown
  isExternal: true
  name: IsPersistedFieldValueKnown
  nameWithType: ConsentPurposeRow.IsPersistedFieldValueKnown
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.IsPersistedFieldValueKnown
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.#ctor*
  commentId: Overload:SuperOffice.CRM.Rows.ConsentPurposeRow.#ctor
  isExternal: true
  name: ConsentPurposeRow
  nameWithType: ConsentPurposeRow.ConsentPurposeRow
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRow
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase
  commentId: T:SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: ConsentPurposeRow.ConsentPurposeRowIdxBase
  nameWithType: ConsentPurposeRow.ConsentPurposeRowIdxBase
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.CreateNew*
  commentId: Overload:SuperOffice.CRM.Rows.ConsentPurposeRow.CreateNew
  isExternal: true
  name: CreateNew
  nameWithType: ConsentPurposeRow.CreateNew
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.CreateNew
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow
  commentId: T:SuperOffice.CRM.Rows.ConsentPurposeRow
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: ConsentPurposeRow
  nameWithType: ConsentPurposeRow
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.GetFromReader*
  commentId: Overload:SuperOffice.CRM.Rows.ConsentPurposeRow.GetFromReader
  isExternal: true
  name: GetFromReader
  nameWithType: ConsentPurposeRow.GetFromReader
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.GetFromReader
- uid: SuperOffice.Data.SoDataReader
  commentId: T:SuperOffice.Data.SoDataReader
  parent: SuperOffice.Data
  isExternal: true
  name: SoDataReader
  nameWithType: SoDataReader
  fullName: SuperOffice.Data.SoDataReader
- uid: SuperOffice.CRM.Data.ConsentPurposeTableInfo
  commentId: T:SuperOffice.CRM.Data.ConsentPurposeTableInfo
  parent: SuperOffice.CRM.Data
  isExternal: true
  name: ConsentPurposeTableInfo
  nameWithType: ConsentPurposeTableInfo
  fullName: SuperOffice.CRM.Data.ConsentPurposeTableInfo
- uid: SuperOffice.CRM.Data
  commentId: N:SuperOffice.CRM.Data
  isExternal: true
  name: SuperOffice.CRM.Data
  nameWithType: SuperOffice.CRM.Data
  fullName: SuperOffice.CRM.Data
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.GetFromCustomSearch*
  commentId: Overload:SuperOffice.CRM.Rows.ConsentPurposeRow.GetFromCustomSearch
  isExternal: true
  name: GetFromCustomSearch
  nameWithType: ConsentPurposeRow.GetFromCustomSearch
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.GetFromCustomSearch
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.CustomSearch
  commentId: T:SuperOffice.CRM.Rows.ConsentPurposeRow.CustomSearch
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: ConsentPurposeRow.CustomSearch
  nameWithType: ConsentPurposeRow.CustomSearch
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.CustomSearch
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.GetFromIdxConsentPurposeId*
  commentId: Overload:SuperOffice.CRM.Rows.ConsentPurposeRow.GetFromIdxConsentPurposeId
  isExternal: true
  name: GetFromIdxConsentPurposeId
  nameWithType: ConsentPurposeRow.GetFromIdxConsentPurposeId
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.GetFromIdxConsentPurposeId
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.GetFromIdxName*
  commentId: Overload:SuperOffice.CRM.Rows.ConsentPurposeRow.GetFromIdxName
  isExternal: true
  name: GetFromIdxName
  nameWithType: ConsentPurposeRow.GetFromIdxName
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.GetFromIdxName
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.GetFromIdxKey*
  commentId: Overload:SuperOffice.CRM.Rows.ConsentPurposeRow.GetFromIdxKey
  isExternal: true
  name: GetFromIdxKey
  nameWithType: ConsentPurposeRow.GetFromIdxKey
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.GetFromIdxKey
- uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SetDefaults(DefaulterStrategy)
  nameWithType: TableRowBase.SetDefaults(DefaulterStrategy)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
    name: SetDefaults
    nameWithType: TableRowBase.SetDefaults
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaults
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.DefaulterStrategy
    name: DefaulterStrategy
    nameWithType: DefaulterStrategy
    fullName: SuperOffice.CRM.Rows.DefaulterStrategy
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
    name: SetDefaults
    nameWithType: TableRowBase.SetDefaults
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaults
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.DefaulterStrategy
    name: DefaulterStrategy
    nameWithType: DefaulterStrategy
    fullName: SuperOffice.CRM.Rows.DefaulterStrategy
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.SetDefaults*
  commentId: Overload:SuperOffice.CRM.Rows.ConsentPurposeRow.SetDefaults
  isExternal: true
  name: SetDefaults
  nameWithType: ConsentPurposeRow.SetDefaults
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.SetDefaults
- uid: SuperOffice.CRM.Rows.DefaulterStrategy
  commentId: T:SuperOffice.CRM.Rows.DefaulterStrategy
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: DefaulterStrategy
  nameWithType: DefaulterStrategy
  fullName: SuperOffice.CRM.Rows.DefaulterStrategy
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.ToString*
  commentId: Overload:SuperOffice.CRM.Rows.ConsentPurposeRow.ToString
  isExternal: true
  name: ToString
  nameWithType: ConsentPurposeRow.ToString
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.ToString
- uid: SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SetRowAsNew()
  nameWithType: TableRowBase.SetRowAsNew()
  fullName: SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew
    name: SetRowAsNew
    nameWithType: TableRowBase.SetRowAsNew
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew
    name: SetRowAsNew
    nameWithType: TableRowBase.SetRowAsNew
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.SetRowAsNew*
  commentId: Overload:SuperOffice.CRM.Rows.ConsentPurposeRow.SetRowAsNew
  isExternal: true
  name: SetRowAsNew
  nameWithType: ConsentPurposeRow.SetRowAsNew
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.SetRowAsNew
- uid: SuperOffice.CRM.Rows.TableRowBase.Reset
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.Reset
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Reset()
  nameWithType: TableRowBase.Reset()
  fullName: SuperOffice.CRM.Rows.TableRowBase.Reset()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Reset
    name: Reset
    nameWithType: TableRowBase.Reset
    fullName: SuperOffice.CRM.Rows.TableRowBase.Reset
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Reset
    name: Reset
    nameWithType: TableRowBase.Reset
    fullName: SuperOffice.CRM.Rows.TableRowBase.Reset
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.Reset*
  commentId: Overload:SuperOffice.CRM.Rows.ConsentPurposeRow.Reset
  isExternal: true
  name: Reset
  nameWithType: ConsentPurposeRow.Reset
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.Reset
- uid: SuperOffice.CRM.Rows.TableRowBase.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnLoad(SoDataReader, TableInfo)
  nameWithType: TableRowBase.OnLoad(SoDataReader, TableInfo)
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnLoad(SuperOffice.Data.SoDataReader, SuperOffice.Data.SQL.TableInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
    name: OnLoad
    nameWithType: TableRowBase.OnLoad
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
    name: OnLoad
    nameWithType: TableRowBase.OnLoad
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.OnLoad*
  commentId: Overload:SuperOffice.CRM.Rows.ConsentPurposeRow.OnLoad
  isExternal: true
  name: OnLoad
  nameWithType: ConsentPurposeRow.OnLoad
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.OnLoad
- uid: SuperOffice.Data.SQL.TableInfo
  commentId: T:SuperOffice.Data.SQL.TableInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: TableInfo
  nameWithType: TableInfo
  fullName: SuperOffice.Data.SQL.TableInfo
- uid: SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey(System.Int32)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey(System.Int32)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SetPrimaryKey(Int32)
  nameWithType: TableRowBase.SetPrimaryKey(Int32)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey(System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey(System.Int32)
    name: SetPrimaryKey
    nameWithType: TableRowBase.SetPrimaryKey
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey(System.Int32)
    name: SetPrimaryKey
    nameWithType: TableRowBase.SetPrimaryKey
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.SetPrimaryKey*
  commentId: Overload:SuperOffice.CRM.Rows.ConsentPurposeRow.SetPrimaryKey
  isExternal: true
  name: SetPrimaryKey
  nameWithType: ConsentPurposeRow.SetPrimaryKey
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.SetPrimaryKey
- uid: SuperOffice.CRM.Rows.TableRowBase.OnSave(SuperOffice.Data.SQL.BatchSave)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnSave(SuperOffice.Data.SQL.BatchSave)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnSave(BatchSave)
  nameWithType: TableRowBase.OnSave(BatchSave)
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnSave(SuperOffice.Data.SQL.BatchSave)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnSave(SuperOffice.Data.SQL.BatchSave)
    name: OnSave
    nameWithType: TableRowBase.OnSave
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnSave
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.BatchSave
    name: BatchSave
    nameWithType: BatchSave
    fullName: SuperOffice.Data.SQL.BatchSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnSave(SuperOffice.Data.SQL.BatchSave)
    name: OnSave
    nameWithType: TableRowBase.OnSave
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnSave
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.BatchSave
    name: BatchSave
    nameWithType: BatchSave
    fullName: SuperOffice.Data.SQL.BatchSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.OnSave*
  commentId: Overload:SuperOffice.CRM.Rows.ConsentPurposeRow.OnSave
  isExternal: true
  name: OnSave
  nameWithType: ConsentPurposeRow.OnSave
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.OnSave
- uid: SuperOffice.Data.SQL.BatchSave
  commentId: T:SuperOffice.Data.SQL.BatchSave
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: BatchSave
  nameWithType: BatchSave
  fullName: SuperOffice.Data.SQL.BatchSave
- uid: SuperOffice.CRM.Rows.TableRowBase.OnSaved(System.Boolean)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnSaved(System.Boolean)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnSaved(Boolean)
  nameWithType: TableRowBase.OnSaved(Boolean)
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnSaved(System.Boolean)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnSaved(System.Boolean)
    name: OnSaved
    nameWithType: TableRowBase.OnSaved
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnSaved
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnSaved(System.Boolean)
    name: OnSaved
    nameWithType: TableRowBase.OnSaved
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnSaved
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.OnSaved*
  commentId: Overload:SuperOffice.CRM.Rows.ConsentPurposeRow.OnSaved
  isExternal: true
  name: OnSaved
  nameWithType: ConsentPurposeRow.OnSaved
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.OnSaved
- uid: SuperOffice.CRM.Rows.TableRowBase.Validate(SuperOffice.CRM.Rows.RowValidator)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.Validate(SuperOffice.CRM.Rows.RowValidator)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Validate(RowValidator)
  nameWithType: TableRowBase.Validate(RowValidator)
  fullName: SuperOffice.CRM.Rows.TableRowBase.Validate(SuperOffice.CRM.Rows.RowValidator)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Validate(SuperOffice.CRM.Rows.RowValidator)
    name: Validate
    nameWithType: TableRowBase.Validate
    fullName: SuperOffice.CRM.Rows.TableRowBase.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.RowValidator
    name: RowValidator
    nameWithType: RowValidator
    fullName: SuperOffice.CRM.Rows.RowValidator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Validate(SuperOffice.CRM.Rows.RowValidator)
    name: Validate
    nameWithType: TableRowBase.Validate
    fullName: SuperOffice.CRM.Rows.TableRowBase.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.RowValidator
    name: RowValidator
    nameWithType: RowValidator
    fullName: SuperOffice.CRM.Rows.RowValidator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.Validate*
  commentId: Overload:SuperOffice.CRM.Rows.ConsentPurposeRow.Validate
  isExternal: true
  name: Validate
  nameWithType: ConsentPurposeRow.Validate
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.Validate
- uid: SuperOffice.CRM.Rows.RowValidator
  commentId: T:SuperOffice.CRM.Rows.RowValidator
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: RowValidator
  nameWithType: RowValidator
  fullName: SuperOffice.CRM.Rows.RowValidator
- uid: SuperOffice.CRM.Rows.TableRowBase.Item(System.String)
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.Item(System.String)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Item[String]
  nameWithType: TableRowBase.Item[String]
  fullName: SuperOffice.CRM.Rows.TableRowBase.Item[System.String]
  nameWithType.vb: TableRowBase.Item(String)
  fullName.vb: SuperOffice.CRM.Rows.TableRowBase.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Item(System.String)
    name: Item
    nameWithType: TableRowBase.Item
    fullName: SuperOffice.CRM.Rows.TableRowBase.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Item(System.String)
    name: Item
    nameWithType: TableRowBase.Item
    fullName: SuperOffice.CRM.Rows.TableRowBase.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.Item*
  commentId: Overload:SuperOffice.CRM.Rows.ConsentPurposeRow.Item
  isExternal: true
  name: Item
  nameWithType: ConsentPurposeRow.Item
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.Item
- uid: SuperOffice.CRM.Rows.TableRowBase.TableInfo
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.TableInfo
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: TableInfo
  nameWithType: TableRowBase.TableInfo
  fullName: SuperOffice.CRM.Rows.TableRowBase.TableInfo
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.TableInfo*
  commentId: Overload:SuperOffice.CRM.Rows.ConsentPurposeRow.TableInfo
  isExternal: true
  name: TableInfo
  nameWithType: ConsentPurposeRow.TableInfo
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.TableInfo
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeTableInfo*
  commentId: Overload:SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeTableInfo
  isExternal: true
  name: ConsentPurposeTableInfo
  nameWithType: ConsentPurposeRow.ConsentPurposeTableInfo
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeTableInfo
- uid: SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKeyValue
  commentId: P:SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKeyValue
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: InnerPrimaryKeyValue
  nameWithType: PrivateSave.InnerPrimaryKeyValue
  fullName: SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKeyValue
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.InnerPrimaryKeyValue*
  commentId: Overload:SuperOffice.CRM.Rows.ConsentPurposeRow.InnerPrimaryKeyValue
  isExternal: true
  name: InnerPrimaryKeyValue
  nameWithType: ConsentPurposeRow.InnerPrimaryKeyValue
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.InnerPrimaryKeyValue
- uid: SuperOffice.Data.SQL.Parameter
  commentId: T:SuperOffice.Data.SQL.Parameter
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: Parameter
  nameWithType: Parameter
  fullName: SuperOffice.Data.SQL.Parameter
- uid: SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKey
  commentId: P:SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKey
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: InnerPrimaryKey
  nameWithType: PrivateSave.InnerPrimaryKey
  fullName: SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKey
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.InnerPrimaryKey*
  commentId: Overload:SuperOffice.CRM.Rows.ConsentPurposeRow.InnerPrimaryKey
  isExternal: true
  name: InnerPrimaryKey
  nameWithType: ConsentPurposeRow.InnerPrimaryKey
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.InnerPrimaryKey
- uid: SuperOffice.CRM.Rows.TableRowBase.IsNew
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.IsNew
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: IsNew
  nameWithType: TableRowBase.IsNew
  fullName: SuperOffice.CRM.Rows.TableRowBase.IsNew
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.IsNew*
  commentId: Overload:SuperOffice.CRM.Rows.ConsentPurposeRow.IsNew
  isExternal: true
  name: IsNew
  nameWithType: ConsentPurposeRow.IsNew
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.IsNew
- uid: SuperOffice.CRM.Rows.TableRowBase.IsDirty
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.IsDirty
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: IsDirty
  nameWithType: TableRowBase.IsDirty
  fullName: SuperOffice.CRM.Rows.TableRowBase.IsDirty
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.IsDirty*
  commentId: Overload:SuperOffice.CRM.Rows.ConsentPurposeRow.IsDirty
  isExternal: true
  name: IsDirty
  nameWithType: ConsentPurposeRow.IsDirty
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.IsDirty
- uid: SuperOffice.Data.SQL.PrivateSave.InnerFieldValuePairs
  commentId: P:SuperOffice.Data.SQL.PrivateSave.InnerFieldValuePairs
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: InnerFieldValuePairs
  nameWithType: PrivateSave.InnerFieldValuePairs
  fullName: SuperOffice.Data.SQL.PrivateSave.InnerFieldValuePairs
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.InnerFieldValuePairs*
  commentId: Overload:SuperOffice.CRM.Rows.ConsentPurposeRow.InnerFieldValuePairs
  isExternal: true
  name: InnerFieldValuePairs
  nameWithType: ConsentPurposeRow.InnerFieldValuePairs
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.InnerFieldValuePairs
- uid: SuperOffice.Data.SQL.ArgumentParameterCollection
  commentId: T:SuperOffice.Data.SQL.ArgumentParameterCollection
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: ArgumentParameterCollection
  nameWithType: ArgumentParameterCollection
  fullName: SuperOffice.Data.SQL.ArgumentParameterCollection
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeId*
  commentId: Overload:SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeId
  isExternal: true
  name: ConsentPurposeId
  nameWithType: ConsentPurposeRow.ConsentPurposeId
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeId
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.Name*
  commentId: Overload:SuperOffice.CRM.Rows.ConsentPurposeRow.Name
  isExternal: true
  name: Name
  nameWithType: ConsentPurposeRow.Name
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.Name
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.Rank*
  commentId: Overload:SuperOffice.CRM.Rows.ConsentPurposeRow.Rank
  isExternal: true
  name: Rank
  nameWithType: ConsentPurposeRow.Rank
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.Rank
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.Tooltip*
  commentId: Overload:SuperOffice.CRM.Rows.ConsentPurposeRow.Tooltip
  isExternal: true
  name: Tooltip
  nameWithType: ConsentPurposeRow.Tooltip
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.Tooltip
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.Deleted*
  commentId: Overload:SuperOffice.CRM.Rows.ConsentPurposeRow.Deleted
  isExternal: true
  name: Deleted
  nameWithType: ConsentPurposeRow.Deleted
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.Deleted
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.Key*
  commentId: Overload:SuperOffice.CRM.Rows.ConsentPurposeRow.Key
  isExternal: true
  name: Key
  nameWithType: ConsentPurposeRow.Key
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.Key
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentText*
  commentId: Overload:SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentText
  isExternal: true
  name: ConsentText
  nameWithType: ConsentPurposeRow.ConsentText
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentText
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.FormText*
  commentId: Overload:SuperOffice.CRM.Rows.ConsentPurposeRow.FormText
  isExternal: true
  name: FormText
  nameWithType: ConsentPurposeRow.FormText
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.FormText
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.PrivacyStatementDesc*
  commentId: Overload:SuperOffice.CRM.Rows.ConsentPurposeRow.PrivacyStatementDesc
  isExternal: true
  name: PrivacyStatementDesc
  nameWithType: ConsentPurposeRow.PrivacyStatementDesc
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.PrivacyStatementDesc
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.PrivacyStatementUrl*
  commentId: Overload:SuperOffice.CRM.Rows.ConsentPurposeRow.PrivacyStatementUrl
  isExternal: true
  name: PrivacyStatementUrl
  nameWithType: ConsentPurposeRow.PrivacyStatementUrl
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.PrivacyStatementUrl
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.Active*
  commentId: Overload:SuperOffice.CRM.Rows.ConsentPurposeRow.Active
  isExternal: true
  name: Active
  nameWithType: ConsentPurposeRow.Active
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.Active
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.Registered*
  commentId: Overload:SuperOffice.CRM.Rows.ConsentPurposeRow.Registered
  isExternal: true
  name: Registered
  nameWithType: ConsentPurposeRow.Registered
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.Registered
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.RegisteredAssociateId*
  commentId: Overload:SuperOffice.CRM.Rows.ConsentPurposeRow.RegisteredAssociateId
  isExternal: true
  name: RegisteredAssociateId
  nameWithType: ConsentPurposeRow.RegisteredAssociateId
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.RegisteredAssociateId
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.Updated*
  commentId: Overload:SuperOffice.CRM.Rows.ConsentPurposeRow.Updated
  isExternal: true
  name: Updated
  nameWithType: ConsentPurposeRow.Updated
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.Updated
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.UpdatedAssociateId*
  commentId: Overload:SuperOffice.CRM.Rows.ConsentPurposeRow.UpdatedAssociateId
  isExternal: true
  name: UpdatedAssociateId
  nameWithType: ConsentPurposeRow.UpdatedAssociateId
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.UpdatedAssociateId
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.UpdatedCount*
  commentId: Overload:SuperOffice.CRM.Rows.ConsentPurposeRow.UpdatedCount
  isExternal: true
  name: UpdatedCount
  nameWithType: ConsentPurposeRow.UpdatedCount
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.UpdatedCount
- uid: SuperOffice.CRM.Rows.OnFieldChange{System.String}
  commentId: T:SuperOffice.CRM.Rows.OnFieldChange{System.String}
  parent: SuperOffice.CRM.Rows
  definition: SuperOffice.CRM.Rows.OnFieldChange`1
  name: OnFieldChange<String>
  nameWithType: OnFieldChange<String>
  fullName: SuperOffice.CRM.Rows.OnFieldChange<System.String>
  nameWithType.vb: OnFieldChange(Of String)
  fullName.vb: SuperOffice.CRM.Rows.OnFieldChange(Of System.String)
  name.vb: OnFieldChange(Of String)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.OnFieldChange`1
  commentId: T:SuperOffice.CRM.Rows.OnFieldChange`1
  isExternal: true
  name: OnFieldChange<TValue>
  nameWithType: OnFieldChange<TValue>
  fullName: SuperOffice.CRM.Rows.OnFieldChange<TValue>
  nameWithType.vb: OnFieldChange(Of TValue)
  fullName.vb: SuperOffice.CRM.Rows.OnFieldChange(Of TValue)
  name.vb: OnFieldChange(Of TValue)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.OnFieldChange{System.Int16}
  commentId: T:SuperOffice.CRM.Rows.OnFieldChange{System.Int16}
  parent: SuperOffice.CRM.Rows
  definition: SuperOffice.CRM.Rows.OnFieldChange`1
  name: OnFieldChange<Int16>
  nameWithType: OnFieldChange<Int16>
  fullName: SuperOffice.CRM.Rows.OnFieldChange<System.Int16>
  nameWithType.vb: OnFieldChange(Of Int16)
  fullName.vb: SuperOffice.CRM.Rows.OnFieldChange(Of System.Int16)
  name.vb: OnFieldChange(Of Int16)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int16
    name: Int16
    nameWithType: Int16
    fullName: System.Int16
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int16
    name: Int16
    nameWithType: Int16
    fullName: System.Int16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
  commentId: T:SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
  parent: SuperOffice.CRM.Rows
  definition: SuperOffice.CRM.Rows.OnFieldChange`1
  name: OnFieldChange<DateTime>
  nameWithType: OnFieldChange<DateTime>
  fullName: SuperOffice.CRM.Rows.OnFieldChange<System.DateTime>
  nameWithType.vb: OnFieldChange(Of DateTime)
  fullName.vb: SuperOffice.CRM.Rows.OnFieldChange(Of System.DateTime)
  name.vb: OnFieldChange(Of DateTime)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
  commentId: T:SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
  parent: SuperOffice.CRM.Rows
  definition: SuperOffice.CRM.Rows.OnFieldChange`1
  name: OnFieldChange<Int32>
  nameWithType: OnFieldChange<Int32>
  fullName: SuperOffice.CRM.Rows.OnFieldChange<System.Int32>
  nameWithType.vb: OnFieldChange(Of Int32)
  fullName.vb: SuperOffice.CRM.Rows.OnFieldChange(Of System.Int32)
  name.vb: OnFieldChange(Of Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
