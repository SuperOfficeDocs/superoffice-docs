### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Archives.PersonList
  commentId: T:SuperOffice.CRM.Archives.PersonList
  id: PersonList
  parent: SuperOffice.CRM.Archives
  children:
  - SuperOffice.CRM.Archives.PersonList.GetPerson(System.Int32)
  - SuperOffice.CRM.Archives.PersonList.GetPersonContact(System.Int32)
  - SuperOffice.CRM.Archives.PersonList.GetPersonListItem(System.Int32)
  - SuperOffice.CRM.Archives.PersonList.OnLoadAsync(SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.Data.SoDataReader,System.Threading.CancellationToken)
  - SuperOffice.CRM.Archives.PersonList.PersonExist(System.Int32)
  langs:
  - csharp
  - vb
  name: PersonList
  nameWithType: PersonList
  fullName: SuperOffice.CRM.Archives.PersonList
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nPersonList implements the person list in SuperOffice. \n"
  syntax:
    content: 'public sealed class PersonList : ListBase<PersonList.PersonListQuery, PersonListItem>, IEnumerable, IEnumerable<PersonListItem>, IList, ICollection, IList<PersonListItem>, ICollection<PersonListItem>'
    content.vb: >-
      Public NotInheritable Class PersonList
          Inherits ListBase(Of PersonList.PersonListQuery, PersonListItem)
          Implements IEnumerable, IEnumerable(Of PersonListItem), IList, ICollection, IList(Of PersonListItem), ICollection(Of PersonListItem)
  inheritance:
  - System.Object
  - SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.CRM.Archives.PersonListItem}
  implements:
  - System.Collections.IEnumerable
  - System.Collections.Generic.IEnumerable{SuperOffice.CRM.Archives.PersonListItem}
  - System.Collections.IList
  - System.Collections.ICollection
  - System.Collections.Generic.IList{SuperOffice.CRM.Archives.PersonListItem}
  - System.Collections.Generic.ICollection{SuperOffice.CRM.Archives.PersonListItem}
  inheritedMembers:
  - SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.CRM.Archives.PersonListItem}.CopyTo(System.Array,System.Int32)
  - SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.CRM.Archives.PersonListItem}.CopyTo(SuperOffice.CRM.Archives.PersonListItem[],System.Int32)
  - SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.CRM.Archives.PersonListItem}.IndexOf(SuperOffice.CRM.Archives.PersonListItem)
  - SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.CRM.Archives.PersonListItem}.Contains(SuperOffice.CRM.Archives.PersonListItem)
  - SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.CRM.Archives.PersonListItem}.OnLoadAsync(SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.Data.SoDataReader,System.Threading.CancellationToken)
  - SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.CRM.Archives.PersonListItem}.GetEnumerator
  - SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.CRM.Archives.PersonListItem}.Item(System.Int32)
  - SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.CRM.Archives.PersonListItem}.ListCollection
  - SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.CRM.Archives.PersonListItem}.Count
  - SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.CRM.Archives.PersonListItem}.IsFixedSize
  - SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.CRM.Archives.PersonListItem}.IsReadOnly
  extensionMethods:
  - SuperOffice.CRM.Archives.PersonList.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Archives.PersonList.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: SuperOffice.CRM.Archives.PersonList.OnLoadAsync(SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.Data.SoDataReader,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Archives.PersonList.OnLoadAsync(SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.Data.SoDataReader,System.Threading.CancellationToken)
  id: OnLoadAsync(SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.Data.SoDataReader,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Archives.PersonList
  langs:
  - csharp
  - vb
  name: OnLoadAsync(PersonList.PersonListQuery, SoDataReader, CancellationToken)
  nameWithType: PersonList.OnLoadAsync(PersonList.PersonListQuery, SoDataReader, CancellationToken)
  fullName: SuperOffice.CRM.Archives.PersonList.OnLoadAsync(SuperOffice.CRM.Archives.PersonList.PersonListQuery, SuperOffice.Data.SoDataReader, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nResponsible for reading each row with data from the SoDataReader and insert the object each row represents\ninto the class&apos; collection. \n"
  syntax:
    content: protected override Task OnLoadAsync(PersonList.PersonListQuery query, SoDataReader reader, CancellationToken cancellationToken)
    parameters:
    - id: query
      type: SuperOffice.CRM.Archives.PersonList.PersonListQuery
    - id: reader
      type: SuperOffice.Data.SoDataReader
      description: The reader which contains all data in the list.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Overrides Function OnLoadAsync(query As PersonList.PersonListQuery, reader As SoDataReader, cancellationToken As CancellationToken) As Task
  overridden: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.CRM.Archives.PersonListItem}.OnLoadAsync(SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.Data.SoDataReader,System.Threading.CancellationToken)
  overload: SuperOffice.CRM.Archives.PersonList.OnLoadAsync*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Archives.PersonList.GetPerson(System.Int32)
  commentId: M:SuperOffice.CRM.Archives.PersonList.GetPerson(System.Int32)
  id: GetPerson(System.Int32)
  parent: SuperOffice.CRM.Archives.PersonList
  langs:
  - csharp
  - vb
  name: GetPerson(Int32)
  nameWithType: PersonList.GetPerson(Int32)
  fullName: SuperOffice.CRM.Archives.PersonList.GetPerson(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nReturns the person described by the person_id.\n"
  syntax:
    content: public Person GetPerson(int personId)
    parameters:
    - id: personId
      type: System.Int32
      description: The person in question
    return:
      type: SuperOffice.CRM.Entities.Person
      description: The person
    content.vb: Public Function GetPerson(personId As Integer) As Person
  overload: SuperOffice.CRM.Archives.PersonList.GetPerson*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Archives.PersonList.GetPersonContact(System.Int32)
  commentId: M:SuperOffice.CRM.Archives.PersonList.GetPersonContact(System.Int32)
  id: GetPersonContact(System.Int32)
  parent: SuperOffice.CRM.Archives.PersonList
  langs:
  - csharp
  - vb
  name: GetPersonContact(Int32)
  nameWithType: PersonList.GetPersonContact(Int32)
  fullName: SuperOffice.CRM.Archives.PersonList.GetPersonContact(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nReturns the contact on the person described by the person_id.\nIf the person does not exist in the list, we still return the \ncorrect contact.\n"
  syntax:
    content: public Contact GetPersonContact(int personId)
    parameters:
    - id: personId
      type: System.Int32
      description: The person in question
    return:
      type: SuperOffice.CRM.Entities.Contact
      description: The person&apos;s contact.
    content.vb: Public Function GetPersonContact(personId As Integer) As Contact
  overload: SuperOffice.CRM.Archives.PersonList.GetPersonContact*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Archives.PersonList.PersonExist(System.Int32)
  commentId: M:SuperOffice.CRM.Archives.PersonList.PersonExist(System.Int32)
  id: PersonExist(System.Int32)
  parent: SuperOffice.CRM.Archives.PersonList
  langs:
  - csharp
  - vb
  name: PersonExist(Int32)
  nameWithType: PersonList.PersonExist(Int32)
  fullName: SuperOffice.CRM.Archives.PersonList.PersonExist(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nChecks if the person described by the person_id exist in the list.\n"
  syntax:
    content: public bool PersonExist(int personId)
    parameters:
    - id: personId
      type: System.Int32
      description: The person
    return:
      type: System.Boolean
      description: True/false
    content.vb: Public Function PersonExist(personId As Integer) As Boolean
  overload: SuperOffice.CRM.Archives.PersonList.PersonExist*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Archives.PersonList.GetPersonListItem(System.Int32)
  commentId: M:SuperOffice.CRM.Archives.PersonList.GetPersonListItem(System.Int32)
  id: GetPersonListItem(System.Int32)
  parent: SuperOffice.CRM.Archives.PersonList
  langs:
  - csharp
  - vb
  name: GetPersonListItem(Int32)
  nameWithType: PersonList.GetPersonListItem(Int32)
  fullName: SuperOffice.CRM.Archives.PersonList.GetPersonListItem(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nWill return the PersonListItem described by the personId.\n"
  syntax:
    content: public PersonListItem GetPersonListItem(int personId)
    parameters:
    - id: personId
      type: System.Int32
      description: The person
    return:
      type: SuperOffice.CRM.Archives.PersonListItem
      description: The person.
    content.vb: Public Function GetPersonListItem(personId As Integer) As PersonListItem
  overload: SuperOffice.CRM.Archives.PersonList.GetPersonListItem*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.CRM.Archives
  commentId: N:SuperOffice.CRM.Archives
  isExternal: true
  name: SuperOffice.CRM.Archives
  nameWithType: SuperOffice.CRM.Archives
  fullName: SuperOffice.CRM.Archives
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.CRM.Archives.PersonListItem}
  commentId: T:SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.CRM.Archives.PersonListItem}
  parent: SuperOffice.CRM.Lists
  definition: SuperOffice.CRM.Lists.ListBase`2
  name: ListBase<PersonList.PersonListQuery, PersonListItem>
  nameWithType: ListBase<PersonList.PersonListQuery, PersonListItem>
  fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.PersonList.PersonListQuery, SuperOffice.CRM.Archives.PersonListItem>
  nameWithType.vb: ListBase(Of PersonList.PersonListQuery, PersonListItem)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.PersonList.PersonListQuery, SuperOffice.CRM.Archives.PersonListItem)
  name.vb: ListBase(Of PersonList.PersonListQuery, PersonListItem)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2
    name: ListBase
    nameWithType: ListBase
    fullName: SuperOffice.CRM.Lists.ListBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Archives.PersonList.PersonListQuery
    name: PersonList.PersonListQuery
    nameWithType: PersonList.PersonListQuery
    fullName: SuperOffice.CRM.Archives.PersonList.PersonListQuery
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.Archives.PersonListItem
    name: PersonListItem
    nameWithType: PersonListItem
    fullName: SuperOffice.CRM.Archives.PersonListItem
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2
    name: ListBase
    nameWithType: ListBase
    fullName: SuperOffice.CRM.Lists.ListBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Archives.PersonList.PersonListQuery
    name: PersonList.PersonListQuery
    nameWithType: PersonList.PersonListQuery
    fullName: SuperOffice.CRM.Archives.PersonList.PersonListQuery
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.Archives.PersonListItem
    name: PersonListItem
    nameWithType: PersonListItem
    fullName: SuperOffice.CRM.Archives.PersonListItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Collections.Generic.IEnumerable{SuperOffice.CRM.Archives.PersonListItem}
  commentId: '!:System.Collections.Generic.IEnumerable{SuperOffice.CRM.Archives.PersonListItem}'
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<PersonListItem>
  nameWithType: IEnumerable<PersonListItem>
  fullName: System.Collections.Generic.IEnumerable<SuperOffice.CRM.Archives.PersonListItem>
  nameWithType.vb: IEnumerable(Of PersonListItem)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SuperOffice.CRM.Archives.PersonListItem)
  name.vb: IEnumerable(Of PersonListItem)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Archives.PersonListItem
    name: PersonListItem
    nameWithType: PersonListItem
    fullName: SuperOffice.CRM.Archives.PersonListItem
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Archives.PersonListItem
    name: PersonListItem
    nameWithType: PersonListItem
    fullName: SuperOffice.CRM.Archives.PersonListItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IList
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections.ICollection
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.Generic.IList{SuperOffice.CRM.Archives.PersonListItem}
  commentId: '!:System.Collections.Generic.IList{SuperOffice.CRM.Archives.PersonListItem}'
  definition: System.Collections.Generic.IList`1
  name: IList<PersonListItem>
  nameWithType: IList<PersonListItem>
  fullName: System.Collections.Generic.IList<SuperOffice.CRM.Archives.PersonListItem>
  nameWithType.vb: IList(Of PersonListItem)
  fullName.vb: System.Collections.Generic.IList(Of SuperOffice.CRM.Archives.PersonListItem)
  name.vb: IList(Of PersonListItem)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Archives.PersonListItem
    name: PersonListItem
    nameWithType: PersonListItem
    fullName: SuperOffice.CRM.Archives.PersonListItem
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Archives.PersonListItem
    name: PersonListItem
    nameWithType: PersonListItem
    fullName: SuperOffice.CRM.Archives.PersonListItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{SuperOffice.CRM.Archives.PersonListItem}
  commentId: '!:System.Collections.Generic.ICollection{SuperOffice.CRM.Archives.PersonListItem}'
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<PersonListItem>
  nameWithType: ICollection<PersonListItem>
  fullName: System.Collections.Generic.ICollection<SuperOffice.CRM.Archives.PersonListItem>
  nameWithType.vb: ICollection(Of PersonListItem)
  fullName.vb: System.Collections.Generic.ICollection(Of SuperOffice.CRM.Archives.PersonListItem)
  name.vb: ICollection(Of PersonListItem)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Archives.PersonListItem
    name: PersonListItem
    nameWithType: PersonListItem
    fullName: SuperOffice.CRM.Archives.PersonListItem
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Archives.PersonListItem
    name: PersonListItem
    nameWithType: PersonListItem
    fullName: SuperOffice.CRM.Archives.PersonListItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.CRM.Archives.PersonListItem}.CopyTo(System.Array,System.Int32)
  commentId: M:SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.CRM.Archives.PersonListItem}.CopyTo(System.Array,System.Int32)
  parent: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.CRM.Archives.PersonListItem}
  definition: SuperOffice.CRM.Lists.ListBase`2.CopyTo(System.Array,System.Int32)
  name: CopyTo(Array, Int32)
  nameWithType: ListBase<PersonList.PersonListQuery, PersonListItem>.CopyTo(Array, Int32)
  fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.PersonList.PersonListQuery, SuperOffice.CRM.Archives.PersonListItem>.CopyTo(System.Array, System.Int32)
  nameWithType.vb: ListBase(Of PersonList.PersonListQuery, PersonListItem).CopyTo(Array, Int32)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.PersonList.PersonListQuery, SuperOffice.CRM.Archives.PersonListItem).CopyTo(System.Array, System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.CopyTo(System.Array,System.Int32)
    name: CopyTo
    nameWithType: ListBase<PersonList.PersonListQuery, PersonListItem>.CopyTo
    fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.PersonList.PersonListQuery, SuperOffice.CRM.Archives.PersonListItem>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.CopyTo(System.Array,System.Int32)
    name: CopyTo
    nameWithType: ListBase(Of PersonList.PersonListQuery, PersonListItem).CopyTo
    fullName: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.PersonList.PersonListQuery, SuperOffice.CRM.Archives.PersonListItem).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.CRM.Archives.PersonListItem}.CopyTo(SuperOffice.CRM.Archives.PersonListItem[],System.Int32)
  commentId: M:SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.CRM.Archives.PersonListItem}.CopyTo(SuperOffice.CRM.Archives.PersonListItem[],System.Int32)
  parent: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.CRM.Archives.PersonListItem}
  definition: SuperOffice.CRM.Lists.ListBase`2.CopyTo(`1[],System.Int32)
  name: CopyTo(PersonListItem[], Int32)
  nameWithType: ListBase<PersonList.PersonListQuery, PersonListItem>.CopyTo(PersonListItem[], Int32)
  fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.PersonList.PersonListQuery, SuperOffice.CRM.Archives.PersonListItem>.CopyTo(SuperOffice.CRM.Archives.PersonListItem[], System.Int32)
  nameWithType.vb: ListBase(Of PersonList.PersonListQuery, PersonListItem).CopyTo(PersonListItem(), Int32)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.PersonList.PersonListQuery, SuperOffice.CRM.Archives.PersonListItem).CopyTo(SuperOffice.CRM.Archives.PersonListItem(), System.Int32)
  name.vb: CopyTo(PersonListItem(), Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.CopyTo(`1[],System.Int32)
    name: CopyTo
    nameWithType: ListBase<PersonList.PersonListQuery, PersonListItem>.CopyTo
    fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.PersonList.PersonListQuery, SuperOffice.CRM.Archives.PersonListItem>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Archives.PersonListItem
    name: PersonListItem
    nameWithType: PersonListItem
    fullName: SuperOffice.CRM.Archives.PersonListItem
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.CopyTo(`1[],System.Int32)
    name: CopyTo
    nameWithType: ListBase(Of PersonList.PersonListQuery, PersonListItem).CopyTo
    fullName: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.PersonList.PersonListQuery, SuperOffice.CRM.Archives.PersonListItem).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Archives.PersonListItem
    name: PersonListItem
    nameWithType: PersonListItem
    fullName: SuperOffice.CRM.Archives.PersonListItem
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.CRM.Archives.PersonListItem}.IndexOf(SuperOffice.CRM.Archives.PersonListItem)
  commentId: M:SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.CRM.Archives.PersonListItem}.IndexOf(SuperOffice.CRM.Archives.PersonListItem)
  parent: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.CRM.Archives.PersonListItem}
  definition: SuperOffice.CRM.Lists.ListBase`2.IndexOf(`1)
  name: IndexOf(PersonListItem)
  nameWithType: ListBase<PersonList.PersonListQuery, PersonListItem>.IndexOf(PersonListItem)
  fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.PersonList.PersonListQuery, SuperOffice.CRM.Archives.PersonListItem>.IndexOf(SuperOffice.CRM.Archives.PersonListItem)
  nameWithType.vb: ListBase(Of PersonList.PersonListQuery, PersonListItem).IndexOf(PersonListItem)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.PersonList.PersonListQuery, SuperOffice.CRM.Archives.PersonListItem).IndexOf(SuperOffice.CRM.Archives.PersonListItem)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.IndexOf(`1)
    name: IndexOf
    nameWithType: ListBase<PersonList.PersonListQuery, PersonListItem>.IndexOf
    fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.PersonList.PersonListQuery, SuperOffice.CRM.Archives.PersonListItem>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Archives.PersonListItem
    name: PersonListItem
    nameWithType: PersonListItem
    fullName: SuperOffice.CRM.Archives.PersonListItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.IndexOf(`1)
    name: IndexOf
    nameWithType: ListBase(Of PersonList.PersonListQuery, PersonListItem).IndexOf
    fullName: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.PersonList.PersonListQuery, SuperOffice.CRM.Archives.PersonListItem).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Archives.PersonListItem
    name: PersonListItem
    nameWithType: PersonListItem
    fullName: SuperOffice.CRM.Archives.PersonListItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.CRM.Archives.PersonListItem}.Contains(SuperOffice.CRM.Archives.PersonListItem)
  commentId: M:SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.CRM.Archives.PersonListItem}.Contains(SuperOffice.CRM.Archives.PersonListItem)
  parent: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.CRM.Archives.PersonListItem}
  definition: SuperOffice.CRM.Lists.ListBase`2.Contains(`1)
  name: Contains(PersonListItem)
  nameWithType: ListBase<PersonList.PersonListQuery, PersonListItem>.Contains(PersonListItem)
  fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.PersonList.PersonListQuery, SuperOffice.CRM.Archives.PersonListItem>.Contains(SuperOffice.CRM.Archives.PersonListItem)
  nameWithType.vb: ListBase(Of PersonList.PersonListQuery, PersonListItem).Contains(PersonListItem)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.PersonList.PersonListQuery, SuperOffice.CRM.Archives.PersonListItem).Contains(SuperOffice.CRM.Archives.PersonListItem)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.Contains(`1)
    name: Contains
    nameWithType: ListBase<PersonList.PersonListQuery, PersonListItem>.Contains
    fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.PersonList.PersonListQuery, SuperOffice.CRM.Archives.PersonListItem>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Archives.PersonListItem
    name: PersonListItem
    nameWithType: PersonListItem
    fullName: SuperOffice.CRM.Archives.PersonListItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.Contains(`1)
    name: Contains
    nameWithType: ListBase(Of PersonList.PersonListQuery, PersonListItem).Contains
    fullName: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.PersonList.PersonListQuery, SuperOffice.CRM.Archives.PersonListItem).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Archives.PersonListItem
    name: PersonListItem
    nameWithType: PersonListItem
    fullName: SuperOffice.CRM.Archives.PersonListItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.CRM.Archives.PersonListItem}.OnLoadAsync(SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.Data.SoDataReader,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.CRM.Archives.PersonListItem}.OnLoadAsync(SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.Data.SoDataReader,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.CRM.Archives.PersonListItem}
  definition: SuperOffice.CRM.Lists.ListBase`2.OnLoadAsync(`0,SuperOffice.Data.SoDataReader,System.Threading.CancellationToken)
  name: OnLoadAsync(PersonList.PersonListQuery, SoDataReader, CancellationToken)
  nameWithType: ListBase<PersonList.PersonListQuery, PersonListItem>.OnLoadAsync(PersonList.PersonListQuery, SoDataReader, CancellationToken)
  fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.PersonList.PersonListQuery, SuperOffice.CRM.Archives.PersonListItem>.OnLoadAsync(SuperOffice.CRM.Archives.PersonList.PersonListQuery, SuperOffice.Data.SoDataReader, System.Threading.CancellationToken)
  nameWithType.vb: ListBase(Of PersonList.PersonListQuery, PersonListItem).OnLoadAsync(PersonList.PersonListQuery, SoDataReader, CancellationToken)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.PersonList.PersonListQuery, SuperOffice.CRM.Archives.PersonListItem).OnLoadAsync(SuperOffice.CRM.Archives.PersonList.PersonListQuery, SuperOffice.Data.SoDataReader, System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.OnLoadAsync(`0,SuperOffice.Data.SoDataReader,System.Threading.CancellationToken)
    name: OnLoadAsync
    nameWithType: ListBase<PersonList.PersonListQuery, PersonListItem>.OnLoadAsync
    fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.PersonList.PersonListQuery, SuperOffice.CRM.Archives.PersonListItem>.OnLoadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Archives.PersonList.PersonListQuery
    name: PersonList.PersonListQuery
    nameWithType: PersonList.PersonListQuery
    fullName: SuperOffice.CRM.Archives.PersonList.PersonListQuery
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.OnLoadAsync(`0,SuperOffice.Data.SoDataReader,System.Threading.CancellationToken)
    name: OnLoadAsync
    nameWithType: ListBase(Of PersonList.PersonListQuery, PersonListItem).OnLoadAsync
    fullName: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.PersonList.PersonListQuery, SuperOffice.CRM.Archives.PersonListItem).OnLoadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Archives.PersonList.PersonListQuery
    name: PersonList.PersonListQuery
    nameWithType: PersonList.PersonListQuery
    fullName: SuperOffice.CRM.Archives.PersonList.PersonListQuery
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.CRM.Archives.PersonListItem}.GetEnumerator
  commentId: M:SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.CRM.Archives.PersonListItem}.GetEnumerator
  parent: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.CRM.Archives.PersonListItem}
  definition: SuperOffice.CRM.Lists.ListBase`2.GetEnumerator
  name: GetEnumerator()
  nameWithType: ListBase<PersonList.PersonListQuery, PersonListItem>.GetEnumerator()
  fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.PersonList.PersonListQuery, SuperOffice.CRM.Archives.PersonListItem>.GetEnumerator()
  nameWithType.vb: ListBase(Of PersonList.PersonListQuery, PersonListItem).GetEnumerator()
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.PersonList.PersonListQuery, SuperOffice.CRM.Archives.PersonListItem).GetEnumerator()
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.GetEnumerator
    name: GetEnumerator
    nameWithType: ListBase<PersonList.PersonListQuery, PersonListItem>.GetEnumerator
    fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.PersonList.PersonListQuery, SuperOffice.CRM.Archives.PersonListItem>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.GetEnumerator
    name: GetEnumerator
    nameWithType: ListBase(Of PersonList.PersonListQuery, PersonListItem).GetEnumerator
    fullName: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.PersonList.PersonListQuery, SuperOffice.CRM.Archives.PersonListItem).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.CRM.Archives.PersonListItem}.Item(System.Int32)
  commentId: P:SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.CRM.Archives.PersonListItem}.Item(System.Int32)
  parent: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.CRM.Archives.PersonListItem}
  definition: SuperOffice.CRM.Lists.ListBase`2.Item(System.Int32)
  name: Item[Int32]
  nameWithType: ListBase<PersonList.PersonListQuery, PersonListItem>.Item[Int32]
  fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.PersonList.PersonListQuery, SuperOffice.CRM.Archives.PersonListItem>.Item[System.Int32]
  nameWithType.vb: ListBase(Of PersonList.PersonListQuery, PersonListItem).Item(Int32)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.PersonList.PersonListQuery, SuperOffice.CRM.Archives.PersonListItem).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.Item(System.Int32)
    name: Item
    nameWithType: ListBase<PersonList.PersonListQuery, PersonListItem>.Item
    fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.PersonList.PersonListQuery, SuperOffice.CRM.Archives.PersonListItem>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.Item(System.Int32)
    name: Item
    nameWithType: ListBase(Of PersonList.PersonListQuery, PersonListItem).Item
    fullName: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.PersonList.PersonListQuery, SuperOffice.CRM.Archives.PersonListItem).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.CRM.Archives.PersonListItem}.ListCollection
  commentId: P:SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.CRM.Archives.PersonListItem}.ListCollection
  parent: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.CRM.Archives.PersonListItem}
  definition: SuperOffice.CRM.Lists.ListBase`2.ListCollection
  name: ListCollection
  nameWithType: ListBase<PersonList.PersonListQuery, PersonListItem>.ListCollection
  fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.PersonList.PersonListQuery, SuperOffice.CRM.Archives.PersonListItem>.ListCollection
  nameWithType.vb: ListBase(Of PersonList.PersonListQuery, PersonListItem).ListCollection
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.PersonList.PersonListQuery, SuperOffice.CRM.Archives.PersonListItem).ListCollection
- uid: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.CRM.Archives.PersonListItem}.Count
  commentId: P:SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.CRM.Archives.PersonListItem}.Count
  parent: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.CRM.Archives.PersonListItem}
  definition: SuperOffice.CRM.Lists.ListBase`2.Count
  name: Count
  nameWithType: ListBase<PersonList.PersonListQuery, PersonListItem>.Count
  fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.PersonList.PersonListQuery, SuperOffice.CRM.Archives.PersonListItem>.Count
  nameWithType.vb: ListBase(Of PersonList.PersonListQuery, PersonListItem).Count
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.PersonList.PersonListQuery, SuperOffice.CRM.Archives.PersonListItem).Count
- uid: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.CRM.Archives.PersonListItem}.IsFixedSize
  commentId: P:SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.CRM.Archives.PersonListItem}.IsFixedSize
  parent: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.CRM.Archives.PersonListItem}
  definition: SuperOffice.CRM.Lists.ListBase`2.IsFixedSize
  name: IsFixedSize
  nameWithType: ListBase<PersonList.PersonListQuery, PersonListItem>.IsFixedSize
  fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.PersonList.PersonListQuery, SuperOffice.CRM.Archives.PersonListItem>.IsFixedSize
  nameWithType.vb: ListBase(Of PersonList.PersonListQuery, PersonListItem).IsFixedSize
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.PersonList.PersonListQuery, SuperOffice.CRM.Archives.PersonListItem).IsFixedSize
- uid: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.CRM.Archives.PersonListItem}.IsReadOnly
  commentId: P:SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.CRM.Archives.PersonListItem}.IsReadOnly
  parent: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.PersonList.PersonListQuery,SuperOffice.CRM.Archives.PersonListItem}
  definition: SuperOffice.CRM.Lists.ListBase`2.IsReadOnly
  name: IsReadOnly
  nameWithType: ListBase<PersonList.PersonListQuery, PersonListItem>.IsReadOnly
  fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.PersonList.PersonListQuery, SuperOffice.CRM.Archives.PersonListItem>.IsReadOnly
  nameWithType.vb: ListBase(Of PersonList.PersonListQuery, PersonListItem).IsReadOnly
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.PersonList.PersonListQuery, SuperOffice.CRM.Archives.PersonListItem).IsReadOnly
- uid: SuperOffice.CRM.Archives.PersonList.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<PersonList, To>()
  nameWithType: EnumUtil.MapEnums<PersonList, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Archives.PersonList, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of PersonList, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Archives.PersonList, To)()
  name.vb: MapEnums(Of PersonList, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<PersonList, To>
    nameWithType: EnumUtil.MapEnums<PersonList, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Archives.PersonList, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of PersonList, To)
    nameWithType: EnumUtil.MapEnums(Of PersonList, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Archives.PersonList, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Archives.PersonList.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<PersonList, To>()
  nameWithType: Converters.MapEnums<PersonList, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Archives.PersonList, To>()
  nameWithType.vb: Converters.MapEnums(Of PersonList, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Archives.PersonList, To)()
  name.vb: MapEnums(Of PersonList, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<PersonList, To>
    nameWithType: Converters.MapEnums<PersonList, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Archives.PersonList, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of PersonList, To)
    nameWithType: Converters.MapEnums(Of PersonList, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Archives.PersonList, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Lists.ListBase`2
  commentId: T:SuperOffice.CRM.Lists.ListBase`2
  isExternal: true
  name: ListBase<TListSelect, TListItem>
  nameWithType: ListBase<TListSelect, TListItem>
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>
  nameWithType.vb: ListBase(Of TListSelect, TListItem)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem)
  name.vb: ListBase(Of TListSelect, TListItem)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2
    name: ListBase
    nameWithType: ListBase
    fullName: SuperOffice.CRM.Lists.ListBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TListSelect
    nameWithType: TListSelect
    fullName: TListSelect
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2
    name: ListBase
    nameWithType: ListBase
    fullName: SuperOffice.CRM.Lists.ListBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TListSelect
    nameWithType: TListSelect
    fullName: TListSelect
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists
  commentId: N:SuperOffice.CRM.Lists
  isExternal: true
  name: SuperOffice.CRM.Lists
  nameWithType: SuperOffice.CRM.Lists
  fullName: SuperOffice.CRM.Lists
- uid: System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  isExternal: true
  name: IList<>
  nameWithType: IList<>
  fullName: System.Collections.Generic.IList<>
  nameWithType.vb: IList(Of )
  fullName.vb: System.Collections.Generic.IList(Of )
  name.vb: IList(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<>
  nameWithType: ICollection<>
  fullName: System.Collections.Generic.ICollection<>
  nameWithType.vb: ICollection(Of )
  fullName.vb: System.Collections.Generic.ICollection(Of )
  name.vb: ICollection(Of )
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.CopyTo(System.Array,System.Int32)
  commentId: M:SuperOffice.CRM.Lists.ListBase`2.CopyTo(System.Array,System.Int32)
  isExternal: true
  name: CopyTo(Array, Int32)
  nameWithType: ListBase<TListSelect, TListItem>.CopyTo(Array, Int32)
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.CopyTo(System.Array, System.Int32)
  nameWithType.vb: ListBase(Of TListSelect, TListItem).CopyTo(Array, Int32)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).CopyTo(System.Array, System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.CopyTo(System.Array,System.Int32)
    name: CopyTo
    nameWithType: ListBase<TListSelect, TListItem>.CopyTo
    fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.CopyTo(System.Array,System.Int32)
    name: CopyTo
    nameWithType: ListBase(Of TListSelect, TListItem).CopyTo
    fullName: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.CopyTo(`1[],System.Int32)
  commentId: M:SuperOffice.CRM.Lists.ListBase`2.CopyTo(`1[],System.Int32)
  isExternal: true
  name: CopyTo(TListItem[], Int32)
  nameWithType: ListBase<TListSelect, TListItem>.CopyTo(TListItem[], Int32)
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.CopyTo(TListItem[], System.Int32)
  nameWithType.vb: ListBase(Of TListSelect, TListItem).CopyTo(TListItem(), Int32)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).CopyTo(TListItem(), System.Int32)
  name.vb: CopyTo(TListItem(), Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.CopyTo(`1[],System.Int32)
    name: CopyTo
    nameWithType: ListBase<TListSelect, TListItem>.CopyTo
    fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.CopyTo(`1[],System.Int32)
    name: CopyTo
    nameWithType: ListBase(Of TListSelect, TListItem).CopyTo
    fullName: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.IndexOf(`1)
  commentId: M:SuperOffice.CRM.Lists.ListBase`2.IndexOf(`1)
  isExternal: true
  name: IndexOf(TListItem)
  nameWithType: ListBase<TListSelect, TListItem>.IndexOf(TListItem)
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.IndexOf(TListItem)
  nameWithType.vb: ListBase(Of TListSelect, TListItem).IndexOf(TListItem)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).IndexOf(TListItem)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.IndexOf(`1)
    name: IndexOf
    nameWithType: ListBase<TListSelect, TListItem>.IndexOf
    fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.IndexOf(`1)
    name: IndexOf
    nameWithType: ListBase(Of TListSelect, TListItem).IndexOf
    fullName: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.Contains(`1)
  commentId: M:SuperOffice.CRM.Lists.ListBase`2.Contains(`1)
  isExternal: true
  name: Contains(TListItem)
  nameWithType: ListBase<TListSelect, TListItem>.Contains(TListItem)
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.Contains(TListItem)
  nameWithType.vb: ListBase(Of TListSelect, TListItem).Contains(TListItem)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).Contains(TListItem)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.Contains(`1)
    name: Contains
    nameWithType: ListBase<TListSelect, TListItem>.Contains
    fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.Contains(`1)
    name: Contains
    nameWithType: ListBase(Of TListSelect, TListItem).Contains
    fullName: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.OnLoadAsync(`0,SuperOffice.Data.SoDataReader,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Lists.ListBase`2.OnLoadAsync(`0,SuperOffice.Data.SoDataReader,System.Threading.CancellationToken)
  isExternal: true
  name: OnLoadAsync(TListSelect, SoDataReader, CancellationToken)
  nameWithType: ListBase<TListSelect, TListItem>.OnLoadAsync(TListSelect, SoDataReader, CancellationToken)
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.OnLoadAsync(TListSelect, SuperOffice.Data.SoDataReader, System.Threading.CancellationToken)
  nameWithType.vb: ListBase(Of TListSelect, TListItem).OnLoadAsync(TListSelect, SoDataReader, CancellationToken)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).OnLoadAsync(TListSelect, SuperOffice.Data.SoDataReader, System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.OnLoadAsync(`0,SuperOffice.Data.SoDataReader,System.Threading.CancellationToken)
    name: OnLoadAsync
    nameWithType: ListBase<TListSelect, TListItem>.OnLoadAsync
    fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.OnLoadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TListSelect
    nameWithType: TListSelect
    fullName: TListSelect
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.OnLoadAsync(`0,SuperOffice.Data.SoDataReader,System.Threading.CancellationToken)
    name: OnLoadAsync
    nameWithType: ListBase(Of TListSelect, TListItem).OnLoadAsync
    fullName: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).OnLoadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TListSelect
    nameWithType: TListSelect
    fullName: TListSelect
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.GetEnumerator
  commentId: M:SuperOffice.CRM.Lists.ListBase`2.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: ListBase<TListSelect, TListItem>.GetEnumerator()
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.GetEnumerator()
  nameWithType.vb: ListBase(Of TListSelect, TListItem).GetEnumerator()
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).GetEnumerator()
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.GetEnumerator
    name: GetEnumerator
    nameWithType: ListBase<TListSelect, TListItem>.GetEnumerator
    fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.GetEnumerator
    name: GetEnumerator
    nameWithType: ListBase(Of TListSelect, TListItem).GetEnumerator
    fullName: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.Item(System.Int32)
  commentId: P:SuperOffice.CRM.Lists.ListBase`2.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: ListBase<TListSelect, TListItem>.Item[Int32]
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.Item[System.Int32]
  nameWithType.vb: ListBase(Of TListSelect, TListItem).Item(Int32)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.Item(System.Int32)
    name: Item
    nameWithType: ListBase<TListSelect, TListItem>.Item
    fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.Item(System.Int32)
    name: Item
    nameWithType: ListBase(Of TListSelect, TListItem).Item
    fullName: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.ListCollection
  commentId: P:SuperOffice.CRM.Lists.ListBase`2.ListCollection
  isExternal: true
  name: ListCollection
  nameWithType: ListBase<TListSelect, TListItem>.ListCollection
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.ListCollection
  nameWithType.vb: ListBase(Of TListSelect, TListItem).ListCollection
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).ListCollection
- uid: SuperOffice.CRM.Lists.ListBase`2.Count
  commentId: P:SuperOffice.CRM.Lists.ListBase`2.Count
  isExternal: true
  name: Count
  nameWithType: ListBase<TListSelect, TListItem>.Count
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.Count
  nameWithType.vb: ListBase(Of TListSelect, TListItem).Count
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).Count
- uid: SuperOffice.CRM.Lists.ListBase`2.IsFixedSize
  commentId: P:SuperOffice.CRM.Lists.ListBase`2.IsFixedSize
  isExternal: true
  name: IsFixedSize
  nameWithType: ListBase<TListSelect, TListItem>.IsFixedSize
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.IsFixedSize
  nameWithType.vb: ListBase(Of TListSelect, TListItem).IsFixedSize
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).IsFixedSize
- uid: SuperOffice.CRM.Lists.ListBase`2.IsReadOnly
  commentId: P:SuperOffice.CRM.Lists.ListBase`2.IsReadOnly
  isExternal: true
  name: IsReadOnly
  nameWithType: ListBase<TListSelect, TListItem>.IsReadOnly
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.IsReadOnly
  nameWithType.vb: ListBase(Of TListSelect, TListItem).IsReadOnly
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).IsReadOnly
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Archives.PersonList.OnLoadAsync*
  commentId: Overload:SuperOffice.CRM.Archives.PersonList.OnLoadAsync
  isExternal: true
  name: OnLoadAsync
  nameWithType: PersonList.OnLoadAsync
  fullName: SuperOffice.CRM.Archives.PersonList.OnLoadAsync
- uid: SuperOffice.CRM.Archives.PersonList.PersonListQuery
  commentId: T:SuperOffice.CRM.Archives.PersonList.PersonListQuery
  parent: SuperOffice.CRM.Archives
  isExternal: true
  name: PersonList.PersonListQuery
  nameWithType: PersonList.PersonListQuery
  fullName: SuperOffice.CRM.Archives.PersonList.PersonListQuery
- uid: SuperOffice.Data.SoDataReader
  commentId: T:SuperOffice.Data.SoDataReader
  parent: SuperOffice.Data
  isExternal: true
  name: SoDataReader
  nameWithType: SoDataReader
  fullName: SuperOffice.Data.SoDataReader
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.CRM.Archives.PersonList.GetPerson*
  commentId: Overload:SuperOffice.CRM.Archives.PersonList.GetPerson
  isExternal: true
  name: GetPerson
  nameWithType: PersonList.GetPerson
  fullName: SuperOffice.CRM.Archives.PersonList.GetPerson
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.CRM.Entities.Person
  commentId: T:SuperOffice.CRM.Entities.Person
  parent: SuperOffice.CRM.Entities
  isExternal: true
  name: Person
  nameWithType: Person
  fullName: SuperOffice.CRM.Entities.Person
- uid: SuperOffice.CRM.Entities
  commentId: N:SuperOffice.CRM.Entities
  isExternal: true
  name: SuperOffice.CRM.Entities
  nameWithType: SuperOffice.CRM.Entities
  fullName: SuperOffice.CRM.Entities
- uid: SuperOffice.CRM.Archives.PersonList.GetPersonContact*
  commentId: Overload:SuperOffice.CRM.Archives.PersonList.GetPersonContact
  isExternal: true
  name: GetPersonContact
  nameWithType: PersonList.GetPersonContact
  fullName: SuperOffice.CRM.Archives.PersonList.GetPersonContact
- uid: SuperOffice.CRM.Entities.Contact
  commentId: T:SuperOffice.CRM.Entities.Contact
  parent: SuperOffice.CRM.Entities
  isExternal: true
  name: Contact
  nameWithType: Contact
  fullName: SuperOffice.CRM.Entities.Contact
- uid: SuperOffice.CRM.Archives.PersonList.PersonExist*
  commentId: Overload:SuperOffice.CRM.Archives.PersonList.PersonExist
  isExternal: true
  name: PersonExist
  nameWithType: PersonList.PersonExist
  fullName: SuperOffice.CRM.Archives.PersonList.PersonExist
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.CRM.Archives.PersonList.GetPersonListItem*
  commentId: Overload:SuperOffice.CRM.Archives.PersonList.GetPersonListItem
  isExternal: true
  name: GetPersonListItem
  nameWithType: PersonList.GetPersonListItem
  fullName: SuperOffice.CRM.Archives.PersonList.GetPersonListItem
- uid: SuperOffice.CRM.Archives.PersonListItem
  commentId: T:SuperOffice.CRM.Archives.PersonListItem
  parent: SuperOffice.CRM.Archives
  isExternal: true
  name: PersonListItem
  nameWithType: PersonListItem
  fullName: SuperOffice.CRM.Archives.PersonListItem
