### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Services.Implementation.ServiceFacades.ServiceFacade
  commentId: T:SuperOffice.CRM.Services.Implementation.ServiceFacades.ServiceFacade
  id: ServiceFacade
  parent: SuperOffice.CRM.Services.Implementation.ServiceFacades
  children:
  - SuperOffice.CRM.Services.Implementation.ServiceFacades.ServiceFacade.CallServiceAsync(System.String,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Services.Implementation.ServiceFacades.ServiceFacade.FireServiceCall(System.String,System.Object)
  langs:
  - csharp
  - vb
  name: ServiceFacade
  nameWithType: ServiceFacade
  fullName: SuperOffice.CRM.Services.Implementation.ServiceFacades.ServiceFacade
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Services.Implementation.ServiceFacades
  syntax:
    content: 'public static class ServiceFacade : Object'
    content.vb: >-
      Public Module ServiceFacade
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: SuperOffice.CRM.Services.Implementation.ServiceFacades.ServiceFacade.CallServiceAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Services.Implementation.ServiceFacades.ServiceFacade.CallServiceAsync(System.String,System.String,System.Threading.CancellationToken)
  id: CallServiceAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Services.Implementation.ServiceFacades.ServiceFacade
  langs:
  - csharp
  - vb
  name: CallServiceAsync(String, String, CancellationToken)
  nameWithType: ServiceFacade.CallServiceAsync(String, String, CancellationToken)
  fullName: SuperOffice.CRM.Services.Implementation.ServiceFacades.ServiceFacade.CallServiceAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Services.Implementation.ServiceFacades
  syntax:
    content: public static Task<string> CallServiceAsync(string methodName, string arguments, CancellationToken cancellationToken = null)
    parameters:
    - id: methodName
      type: System.String
    - id: arguments
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
    content.vb: Public Shared Function CallServiceAsync(methodName As String, arguments As String, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Services.Implementation.ServiceFacades.ServiceFacade.CallServiceAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Services.Implementation.ServiceFacades.ServiceFacade.FireServiceCall(System.String,System.Object)
  commentId: M:SuperOffice.CRM.Services.Implementation.ServiceFacades.ServiceFacade.FireServiceCall(System.String,System.Object)
  id: FireServiceCall(System.String,System.Object)
  parent: SuperOffice.CRM.Services.Implementation.ServiceFacades.ServiceFacade
  langs:
  - csharp
  - vb
  name: FireServiceCall(String, Object)
  nameWithType: ServiceFacade.FireServiceCall(String, Object)
  fullName: SuperOffice.CRM.Services.Implementation.ServiceFacades.ServiceFacade.FireServiceCall(System.String, System.Object)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Services.Implementation.ServiceFacades
  summary: "\nFire and forget version for <xref href=\"SuperOffice.CRM.Services.Implementation.ServiceFacades.ServiceFacade.CallServiceAsync(System.String%2cSystem.String%2cSystem.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: public static void FireServiceCall(string methodName, object argument)
    parameters:
    - id: methodName
      type: System.String
    - id: argument
      type: System.Object
      description: Argument object (ready for serialization)
    content.vb: Public Shared Sub FireServiceCall(methodName As String, argument As Object)
  overload: SuperOffice.CRM.Services.Implementation.ServiceFacades.ServiceFacade.FireServiceCall*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: SuperOffice.CRM.Services.Implementation.ServiceFacades
  commentId: N:SuperOffice.CRM.Services.Implementation.ServiceFacades
  isExternal: true
  name: SuperOffice.CRM.Services.Implementation.ServiceFacades
  nameWithType: SuperOffice.CRM.Services.Implementation.ServiceFacades
  fullName: SuperOffice.CRM.Services.Implementation.ServiceFacades
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Services.Implementation.ServiceFacades.ServiceFacade.CallServiceAsync*
  commentId: Overload:SuperOffice.CRM.Services.Implementation.ServiceFacades.ServiceFacade.CallServiceAsync
  isExternal: true
  name: CallServiceAsync
  nameWithType: ServiceFacade.CallServiceAsync
  fullName: SuperOffice.CRM.Services.Implementation.ServiceFacades.ServiceFacade.CallServiceAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.String}
  commentId: '!:System.Threading.Tasks.Task{System.String}'
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.Implementation.ServiceFacades.ServiceFacade.FireServiceCall*
  commentId: Overload:SuperOffice.CRM.Services.Implementation.ServiceFacades.ServiceFacade.FireServiceCall
  isExternal: true
  name: FireServiceCall
  nameWithType: ServiceFacade.FireServiceCall
  fullName: SuperOffice.CRM.Services.Implementation.ServiceFacades.ServiceFacade.FireServiceCall
