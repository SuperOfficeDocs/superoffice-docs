### YamlMime:ManagedReference
items:
- uid: SuperOffice.Util.AccessGateway
  commentId: T:SuperOffice.Util.AccessGateway
  id: AccessGateway
  parent: SuperOffice.Util
  children:
  - SuperOffice.Util.AccessGateway.DecryptTokensAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  - SuperOffice.Util.AccessGateway.EncryptAndSaveServiceAuthRowAsync(SuperOffice.CRM.Rows.ServiceAuthRow,System.Threading.CancellationToken)
  - SuperOffice.Util.AccessGateway.GenerateKey(System.Int32)
  - SuperOffice.Util.AccessGateway.GetAccessGatewayAccessTokenAsync(System.Threading.CancellationToken)
  - SuperOffice.Util.AccessGateway.GetAndDecryptServiceAuthRowFromIdAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.Util.AccessGateway.GetTokensFromDbAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.Util.AccessGateway.IsUriRegisteredAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.Util.AccessGateway.RefreshTokensAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  - SuperOffice.Util.AccessGateway.RegisterNewUriAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.Util.AccessGateway.ResolvePasswordAsync(System.String,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.Util.AccessGateway.SaveRegisteredRedirectUriAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.Util.AccessGateway.SaveTokensToDbAsync(SuperOffice.Util.AccessGateway.TokenManagementInfo,System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: AccessGateway
  nameWithType: AccessGateway
  fullName: SuperOffice.Util.AccessGateway
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  syntax:
    content: 'public static class AccessGateway : Object'
    content.vb: >-
      Public Module AccessGateway
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: SuperOffice.Util.AccessGateway.SaveRegisteredRedirectUriAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Util.AccessGateway.SaveRegisteredRedirectUriAsync(System.String,System.Threading.CancellationToken)
  id: SaveRegisteredRedirectUriAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.Util.AccessGateway
  langs:
  - csharp
  - vb
  name: SaveRegisteredRedirectUriAsync(String, CancellationToken)
  nameWithType: AccessGateway.SaveRegisteredRedirectUriAsync(String, CancellationToken)
  fullName: SuperOffice.Util.AccessGateway.SaveRegisteredRedirectUriAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  syntax:
    content: public static Task SaveRegisteredRedirectUriAsync(string uri, CancellationToken cancellationToken = null)
    parameters:
    - id: uri
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function SaveRegisteredRedirectUriAsync(uri As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.Util.AccessGateway.SaveRegisteredRedirectUriAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.AccessGateway.IsUriRegisteredAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Util.AccessGateway.IsUriRegisteredAsync(System.String,System.Threading.CancellationToken)
  id: IsUriRegisteredAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.Util.AccessGateway
  langs:
  - csharp
  - vb
  name: IsUriRegisteredAsync(String, CancellationToken)
  nameWithType: AccessGateway.IsUriRegisteredAsync(String, CancellationToken)
  fullName: SuperOffice.Util.AccessGateway.IsUriRegisteredAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  syntax:
    content: public static Task<bool> IsUriRegisteredAsync(string uri, CancellationToken cancellationToken = null)
    parameters:
    - id: uri
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Shared Function IsUriRegisteredAsync(uri As String, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.Util.AccessGateway.IsUriRegisteredAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.AccessGateway.RegisterNewUriAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Util.AccessGateway.RegisterNewUriAsync(System.String,System.Threading.CancellationToken)
  id: RegisterNewUriAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.Util.AccessGateway
  langs:
  - csharp
  - vb
  name: RegisterNewUriAsync(String, CancellationToken)
  nameWithType: AccessGateway.RegisterNewUriAsync(String, CancellationToken)
  fullName: SuperOffice.Util.AccessGateway.RegisterNewUriAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  syntax:
    content: public static Task RegisterNewUriAsync(string uri, CancellationToken cancellationToken = null)
    parameters:
    - id: uri
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function RegisterNewUriAsync(uri As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.Util.AccessGateway.RegisterNewUriAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.AccessGateway.ResolvePasswordAsync(System.String,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Util.AccessGateway.ResolvePasswordAsync(System.String,System.Boolean,System.Threading.CancellationToken)
  id: ResolvePasswordAsync(System.String,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.Util.AccessGateway
  langs:
  - csharp
  - vb
  name: ResolvePasswordAsync(String, Boolean, CancellationToken)
  nameWithType: AccessGateway.ResolvePasswordAsync(String, Boolean, CancellationToken)
  fullName: SuperOffice.Util.AccessGateway.ResolvePasswordAsync(System.String, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  syntax:
    content: public static Task<string> ResolvePasswordAsync(string password, bool forceRenew = false, CancellationToken cancellationToken = null)
    parameters:
    - id: password
      type: System.String
    - id: forceRenew
      type: System.Boolean
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
    content.vb: Public Shared Function ResolvePasswordAsync(password As String, forceRenew As Boolean = False, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.Util.AccessGateway.ResolvePasswordAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.AccessGateway.RefreshTokensAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Util.AccessGateway.RefreshTokensAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  id: RefreshTokensAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.Util.AccessGateway
  langs:
  - csharp
  - vb
  name: RefreshTokensAsync(String, String, String, CancellationToken)
  nameWithType: AccessGateway.RefreshTokensAsync(String, String, String, CancellationToken)
  fullName: SuperOffice.Util.AccessGateway.RefreshTokensAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  syntax:
    content: public static Task<AccessGateway.RetrieveTokensResult> RefreshTokensAsync(string accessToken, string refreshToken, string provider, CancellationToken cancellationToken = null)
    parameters:
    - id: accessToken
      type: System.String
    - id: refreshToken
      type: System.String
    - id: provider
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.Util.AccessGateway.RetrieveTokensResult}
    content.vb: Public Shared Function RefreshTokensAsync(accessToken As String, refreshToken As String, provider As String, cancellationToken As CancellationToken = Nothing) As Task(Of AccessGateway.RetrieveTokensResult)
  overload: SuperOffice.Util.AccessGateway.RefreshTokensAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.AccessGateway.DecryptTokensAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Util.AccessGateway.DecryptTokensAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  id: DecryptTokensAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.Util.AccessGateway
  langs:
  - csharp
  - vb
  name: DecryptTokensAsync(String, String, String, CancellationToken)
  nameWithType: AccessGateway.DecryptTokensAsync(String, String, String, CancellationToken)
  fullName: SuperOffice.Util.AccessGateway.DecryptTokensAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  syntax:
    content: public static Task<AccessGateway.RetrieveTokensResult> DecryptTokensAsync(string accessToken, string refreshToken, string provider, CancellationToken cancellationToken = null)
    parameters:
    - id: accessToken
      type: System.String
    - id: refreshToken
      type: System.String
    - id: provider
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.Util.AccessGateway.RetrieveTokensResult}
    content.vb: Public Shared Function DecryptTokensAsync(accessToken As String, refreshToken As String, provider As String, cancellationToken As CancellationToken = Nothing) As Task(Of AccessGateway.RetrieveTokensResult)
  overload: SuperOffice.Util.AccessGateway.DecryptTokensAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.AccessGateway.GetAccessGatewayAccessTokenAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.Util.AccessGateway.GetAccessGatewayAccessTokenAsync(System.Threading.CancellationToken)
  id: GetAccessGatewayAccessTokenAsync(System.Threading.CancellationToken)
  parent: SuperOffice.Util.AccessGateway
  langs:
  - csharp
  - vb
  name: GetAccessGatewayAccessTokenAsync(CancellationToken)
  nameWithType: AccessGateway.GetAccessGatewayAccessTokenAsync(CancellationToken)
  fullName: SuperOffice.Util.AccessGateway.GetAccessGatewayAccessTokenAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  syntax:
    content: public static Task<string> GetAccessGatewayAccessTokenAsync(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
    content.vb: Public Shared Function GetAccessGatewayAccessTokenAsync(cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.Util.AccessGateway.GetAccessGatewayAccessTokenAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.AccessGateway.GetTokensFromDbAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Util.AccessGateway.GetTokensFromDbAsync(System.String,System.Threading.CancellationToken)
  id: GetTokensFromDbAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.Util.AccessGateway
  langs:
  - csharp
  - vb
  name: GetTokensFromDbAsync(String, CancellationToken)
  nameWithType: AccessGateway.GetTokensFromDbAsync(String, CancellationToken)
  fullName: SuperOffice.Util.AccessGateway.GetTokensFromDbAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  syntax:
    content: public static Task<AccessGateway.TokenManagementInfo> GetTokensFromDbAsync(string key, CancellationToken cancellationToken = null)
    parameters:
    - id: key
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.Util.AccessGateway.TokenManagementInfo}
    content.vb: Public Shared Function GetTokensFromDbAsync(key As String, cancellationToken As CancellationToken = Nothing) As Task(Of AccessGateway.TokenManagementInfo)
  overload: SuperOffice.Util.AccessGateway.GetTokensFromDbAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.AccessGateway.SaveTokensToDbAsync(SuperOffice.Util.AccessGateway.TokenManagementInfo,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Util.AccessGateway.SaveTokensToDbAsync(SuperOffice.Util.AccessGateway.TokenManagementInfo,System.String,System.Threading.CancellationToken)
  id: SaveTokensToDbAsync(SuperOffice.Util.AccessGateway.TokenManagementInfo,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.Util.AccessGateway
  langs:
  - csharp
  - vb
  name: SaveTokensToDbAsync(AccessGateway.TokenManagementInfo, String, CancellationToken)
  nameWithType: AccessGateway.SaveTokensToDbAsync(AccessGateway.TokenManagementInfo, String, CancellationToken)
  fullName: SuperOffice.Util.AccessGateway.SaveTokensToDbAsync(SuperOffice.Util.AccessGateway.TokenManagementInfo, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  syntax:
    content: public static Task<string> SaveTokensToDbAsync(AccessGateway.TokenManagementInfo tokenInfo, string key = "", CancellationToken cancellationToken = null)
    parameters:
    - id: tokenInfo
      type: SuperOffice.Util.AccessGateway.TokenManagementInfo
    - id: key
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
    content.vb: Public Shared Function SaveTokensToDbAsync(tokenInfo As AccessGateway.TokenManagementInfo, key As String = "", cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.Util.AccessGateway.SaveTokensToDbAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.AccessGateway.GenerateKey(System.Int32)
  commentId: M:SuperOffice.Util.AccessGateway.GenerateKey(System.Int32)
  id: GenerateKey(System.Int32)
  parent: SuperOffice.Util.AccessGateway
  langs:
  - csharp
  - vb
  name: GenerateKey(Int32)
  nameWithType: AccessGateway.GenerateKey(Int32)
  fullName: SuperOffice.Util.AccessGateway.GenerateKey(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  syntax:
    content: public static string GenerateKey(int length = 64)
    parameters:
    - id: length
      type: System.Int32
    return:
      type: System.String
    content.vb: Public Shared Function GenerateKey(length As Integer = 64) As String
  overload: SuperOffice.Util.AccessGateway.GenerateKey*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.AccessGateway.GetAndDecryptServiceAuthRowFromIdAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Util.AccessGateway.GetAndDecryptServiceAuthRowFromIdAsync(System.Int32,System.Threading.CancellationToken)
  id: GetAndDecryptServiceAuthRowFromIdAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.Util.AccessGateway
  langs:
  - csharp
  - vb
  name: GetAndDecryptServiceAuthRowFromIdAsync(Int32, CancellationToken)
  nameWithType: AccessGateway.GetAndDecryptServiceAuthRowFromIdAsync(Int32, CancellationToken)
  fullName: SuperOffice.Util.AccessGateway.GetAndDecryptServiceAuthRowFromIdAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  syntax:
    content: public static Task<ServiceAuthRow> GetAndDecryptServiceAuthRowFromIdAsync(int serviceAuthId, CancellationToken cancellationToken = null)
    parameters:
    - id: serviceAuthId
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.ServiceAuthRow}
    content.vb: Public Shared Function GetAndDecryptServiceAuthRowFromIdAsync(serviceAuthId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of ServiceAuthRow)
  overload: SuperOffice.Util.AccessGateway.GetAndDecryptServiceAuthRowFromIdAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.AccessGateway.EncryptAndSaveServiceAuthRowAsync(SuperOffice.CRM.Rows.ServiceAuthRow,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Util.AccessGateway.EncryptAndSaveServiceAuthRowAsync(SuperOffice.CRM.Rows.ServiceAuthRow,System.Threading.CancellationToken)
  id: EncryptAndSaveServiceAuthRowAsync(SuperOffice.CRM.Rows.ServiceAuthRow,System.Threading.CancellationToken)
  parent: SuperOffice.Util.AccessGateway
  langs:
  - csharp
  - vb
  name: EncryptAndSaveServiceAuthRowAsync(ServiceAuthRow, CancellationToken)
  nameWithType: AccessGateway.EncryptAndSaveServiceAuthRowAsync(ServiceAuthRow, CancellationToken)
  fullName: SuperOffice.Util.AccessGateway.EncryptAndSaveServiceAuthRowAsync(SuperOffice.CRM.Rows.ServiceAuthRow, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  syntax:
    content: public static Task<ServiceAuthRow> EncryptAndSaveServiceAuthRowAsync(ServiceAuthRow row, CancellationToken cancellationToken = null)
    parameters:
    - id: row
      type: SuperOffice.CRM.Rows.ServiceAuthRow
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.ServiceAuthRow}
    content.vb: Public Shared Function EncryptAndSaveServiceAuthRowAsync(row As ServiceAuthRow, cancellationToken As CancellationToken = Nothing) As Task(Of ServiceAuthRow)
  overload: SuperOffice.Util.AccessGateway.EncryptAndSaveServiceAuthRowAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Util.AccessGateway.SaveRegisteredRedirectUriAsync*
  commentId: Overload:SuperOffice.Util.AccessGateway.SaveRegisteredRedirectUriAsync
  isExternal: true
  name: SaveRegisteredRedirectUriAsync
  nameWithType: AccessGateway.SaveRegisteredRedirectUriAsync
  fullName: SuperOffice.Util.AccessGateway.SaveRegisteredRedirectUriAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: SuperOffice.Util.AccessGateway.IsUriRegisteredAsync*
  commentId: Overload:SuperOffice.Util.AccessGateway.IsUriRegisteredAsync
  isExternal: true
  name: IsUriRegisteredAsync
  nameWithType: AccessGateway.IsUriRegisteredAsync
  fullName: SuperOffice.Util.AccessGateway.IsUriRegisteredAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: '!:System.Threading.Tasks.Task{System.Boolean}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.AccessGateway.RegisterNewUriAsync*
  commentId: Overload:SuperOffice.Util.AccessGateway.RegisterNewUriAsync
  isExternal: true
  name: RegisterNewUriAsync
  nameWithType: AccessGateway.RegisterNewUriAsync
  fullName: SuperOffice.Util.AccessGateway.RegisterNewUriAsync
- uid: SuperOffice.Util.AccessGateway.ResolvePasswordAsync*
  commentId: Overload:SuperOffice.Util.AccessGateway.ResolvePasswordAsync
  isExternal: true
  name: ResolvePasswordAsync
  nameWithType: AccessGateway.ResolvePasswordAsync
  fullName: SuperOffice.Util.AccessGateway.ResolvePasswordAsync
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.Tasks.Task{System.String}
  commentId: '!:System.Threading.Tasks.Task{System.String}'
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.AccessGateway.RefreshTokensAsync*
  commentId: Overload:SuperOffice.Util.AccessGateway.RefreshTokensAsync
  isExternal: true
  name: RefreshTokensAsync
  nameWithType: AccessGateway.RefreshTokensAsync
  fullName: SuperOffice.Util.AccessGateway.RefreshTokensAsync
- uid: System.Threading.Tasks.Task{SuperOffice.Util.AccessGateway.RetrieveTokensResult}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.Util.AccessGateway.RetrieveTokensResult}'
  definition: System.Threading.Tasks.Task`1
  name: Task<AccessGateway.RetrieveTokensResult>
  nameWithType: Task<AccessGateway.RetrieveTokensResult>
  fullName: System.Threading.Tasks.Task<SuperOffice.Util.AccessGateway.RetrieveTokensResult>
  nameWithType.vb: Task(Of AccessGateway.RetrieveTokensResult)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.Util.AccessGateway.RetrieveTokensResult)
  name.vb: Task(Of AccessGateway.RetrieveTokensResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Util.AccessGateway.RetrieveTokensResult
    name: AccessGateway.RetrieveTokensResult
    nameWithType: AccessGateway.RetrieveTokensResult
    fullName: SuperOffice.Util.AccessGateway.RetrieveTokensResult
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Util.AccessGateway.RetrieveTokensResult
    name: AccessGateway.RetrieveTokensResult
    nameWithType: AccessGateway.RetrieveTokensResult
    fullName: SuperOffice.Util.AccessGateway.RetrieveTokensResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.AccessGateway.DecryptTokensAsync*
  commentId: Overload:SuperOffice.Util.AccessGateway.DecryptTokensAsync
  isExternal: true
  name: DecryptTokensAsync
  nameWithType: AccessGateway.DecryptTokensAsync
  fullName: SuperOffice.Util.AccessGateway.DecryptTokensAsync
- uid: SuperOffice.Util.AccessGateway.GetAccessGatewayAccessTokenAsync*
  commentId: Overload:SuperOffice.Util.AccessGateway.GetAccessGatewayAccessTokenAsync
  isExternal: true
  name: GetAccessGatewayAccessTokenAsync
  nameWithType: AccessGateway.GetAccessGatewayAccessTokenAsync
  fullName: SuperOffice.Util.AccessGateway.GetAccessGatewayAccessTokenAsync
- uid: SuperOffice.Util.AccessGateway.GetTokensFromDbAsync*
  commentId: Overload:SuperOffice.Util.AccessGateway.GetTokensFromDbAsync
  isExternal: true
  name: GetTokensFromDbAsync
  nameWithType: AccessGateway.GetTokensFromDbAsync
  fullName: SuperOffice.Util.AccessGateway.GetTokensFromDbAsync
- uid: System.Threading.Tasks.Task{SuperOffice.Util.AccessGateway.TokenManagementInfo}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.Util.AccessGateway.TokenManagementInfo}'
  definition: System.Threading.Tasks.Task`1
  name: Task<AccessGateway.TokenManagementInfo>
  nameWithType: Task<AccessGateway.TokenManagementInfo>
  fullName: System.Threading.Tasks.Task<SuperOffice.Util.AccessGateway.TokenManagementInfo>
  nameWithType.vb: Task(Of AccessGateway.TokenManagementInfo)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.Util.AccessGateway.TokenManagementInfo)
  name.vb: Task(Of AccessGateway.TokenManagementInfo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Util.AccessGateway.TokenManagementInfo
    name: AccessGateway.TokenManagementInfo
    nameWithType: AccessGateway.TokenManagementInfo
    fullName: SuperOffice.Util.AccessGateway.TokenManagementInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Util.AccessGateway.TokenManagementInfo
    name: AccessGateway.TokenManagementInfo
    nameWithType: AccessGateway.TokenManagementInfo
    fullName: SuperOffice.Util.AccessGateway.TokenManagementInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.AccessGateway.SaveTokensToDbAsync*
  commentId: Overload:SuperOffice.Util.AccessGateway.SaveTokensToDbAsync
  isExternal: true
  name: SaveTokensToDbAsync
  nameWithType: AccessGateway.SaveTokensToDbAsync
  fullName: SuperOffice.Util.AccessGateway.SaveTokensToDbAsync
- uid: SuperOffice.Util.AccessGateway.TokenManagementInfo
  commentId: T:SuperOffice.Util.AccessGateway.TokenManagementInfo
  parent: SuperOffice.Util
  isExternal: true
  name: AccessGateway.TokenManagementInfo
  nameWithType: AccessGateway.TokenManagementInfo
  fullName: SuperOffice.Util.AccessGateway.TokenManagementInfo
- uid: SuperOffice.Util.AccessGateway.GenerateKey*
  commentId: Overload:SuperOffice.Util.AccessGateway.GenerateKey
  isExternal: true
  name: GenerateKey
  nameWithType: AccessGateway.GenerateKey
  fullName: SuperOffice.Util.AccessGateway.GenerateKey
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.Util.AccessGateway.GetAndDecryptServiceAuthRowFromIdAsync*
  commentId: Overload:SuperOffice.Util.AccessGateway.GetAndDecryptServiceAuthRowFromIdAsync
  isExternal: true
  name: GetAndDecryptServiceAuthRowFromIdAsync
  nameWithType: AccessGateway.GetAndDecryptServiceAuthRowFromIdAsync
  fullName: SuperOffice.Util.AccessGateway.GetAndDecryptServiceAuthRowFromIdAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.ServiceAuthRow}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Rows.ServiceAuthRow}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ServiceAuthRow>
  nameWithType: Task<ServiceAuthRow>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Rows.ServiceAuthRow>
  nameWithType.vb: Task(Of ServiceAuthRow)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Rows.ServiceAuthRow)
  name.vb: Task(Of ServiceAuthRow)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Rows.ServiceAuthRow
    name: ServiceAuthRow
    nameWithType: ServiceAuthRow
    fullName: SuperOffice.CRM.Rows.ServiceAuthRow
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Rows.ServiceAuthRow
    name: ServiceAuthRow
    nameWithType: ServiceAuthRow
    fullName: SuperOffice.CRM.Rows.ServiceAuthRow
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.AccessGateway.EncryptAndSaveServiceAuthRowAsync*
  commentId: Overload:SuperOffice.Util.AccessGateway.EncryptAndSaveServiceAuthRowAsync
  isExternal: true
  name: EncryptAndSaveServiceAuthRowAsync
  nameWithType: AccessGateway.EncryptAndSaveServiceAuthRowAsync
  fullName: SuperOffice.Util.AccessGateway.EncryptAndSaveServiceAuthRowAsync
- uid: SuperOffice.CRM.Rows.ServiceAuthRow
  commentId: T:SuperOffice.CRM.Rows.ServiceAuthRow
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: ServiceAuthRow
  nameWithType: ServiceAuthRow
  fullName: SuperOffice.CRM.Rows.ServiceAuthRow
- uid: SuperOffice.CRM.Rows
  commentId: N:SuperOffice.CRM.Rows
  isExternal: true
  name: SuperOffice.CRM.Rows
  nameWithType: SuperOffice.CRM.Rows
  fullName: SuperOffice.CRM.Rows
