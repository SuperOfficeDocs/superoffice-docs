### YamlMime:ManagedReference
items:
- uid: SuperOffice.Util.SoMapper
  commentId: T:SuperOffice.Util.SoMapper
  id: SoMapper
  parent: SuperOffice.Util
  children:
  - SuperOffice.Util.SoMapper.#ctor
  - SuperOffice.Util.SoMapper.Clone``1(``0)
  - SuperOffice.Util.SoMapper.CopyProperties(System.Type,System.Type,System.Object,System.Object,System.Boolean,System.Boolean,System.Boolean)
  - SuperOffice.Util.SoMapper.CopyProperties``2(``0,``1,System.Boolean,System.Boolean,System.Boolean)
  - SuperOffice.Util.SoMapper.CopyProperties``2(``0[],``1[],System.Boolean,System.Boolean,System.Boolean)
  - SuperOffice.Util.SoMapper.GetDictionaryKey(System.Object)
  - SuperOffice.Util.SoMapper.GetDictionaryValue(System.Object)
  - SuperOffice.Util.SoMapper.Instance
  - SuperOffice.Util.SoMapper.MapValue(System.Type,System.Type,System.Object,System.Boolean)
  - SuperOffice.Util.SoMapper.Map``2(``0,System.Boolean)
  langs:
  - csharp
  - vb
  name: SoMapper
  nameWithType: SoMapper
  fullName: SuperOffice.Util.SoMapper
  type: Class
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: >-
    Class for mapping values between class-instances and types based on similarly named properties with

    fundamentally compatible types.


    basic principle of operation is adhering to the "Duck test":

    "When I see a bird that walks like a duck and swims like a duck and quacks like a duck,
     I call that bird a duck."

    <seealso ref="https://en.wikipedia.org/wiki/Duck_typing"></seealso>
  example: []
  syntax:
    content: public class SoMapper
    content.vb: Public Class SoMapper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.Util.SoMapper.EnumUtil.MapEnums``2
  - SuperOffice.Util.SoMapper.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  - SuperOffice.Util.SoMapper.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Util.SoMapper)
  - SuperOffice.Util.SoMapper.SuperOffice.Util.ObjectExtensions.GraphCopy``1
- uid: SuperOffice.Util.SoMapper.#ctor
  commentId: M:SuperOffice.Util.SoMapper.#ctor
  id: '#ctor'
  parent: SuperOffice.Util.SoMapper
  langs:
  - csharp
  - vb
  name: SoMapper()
  nameWithType: SoMapper.SoMapper()
  fullName: SuperOffice.Util.SoMapper.SoMapper()
  type: Constructor
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: Default constructor
  example: []
  syntax:
    content: public SoMapper()
    content.vb: Public Sub New()
  overload: SuperOffice.Util.SoMapper.#ctor*
  nameWithType.vb: SoMapper.New()
  fullName.vb: SuperOffice.Util.SoMapper.New()
  name.vb: New()
- uid: SuperOffice.Util.SoMapper.Map``2(``0,System.Boolean)
  commentId: M:SuperOffice.Util.SoMapper.Map``2(``0,System.Boolean)
  id: Map``2(``0,System.Boolean)
  parent: SuperOffice.Util.SoMapper
  langs:
  - csharp
  - vb
  name: Map<TInput, TResult>(TInput, bool)
  nameWithType: SoMapper.Map<TInput, TResult>(TInput, bool)
  fullName: SuperOffice.Util.SoMapper.Map<TInput, TResult>(TInput, bool)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: >-
    Convert the given input instance and return a instance of the specified output type

    using fuzzy Duck-typing and logic.

    <remarks>

    Will return same instance if the provided types are the same.

    </remarks>
  example: []
  syntax:
    content: 'public TResult Map<TInput, TResult>(TInput source, bool throwOnMismatch = true) where TResult : new()'
    parameters:
    - id: source
      type: '{TInput}'
      description: Value to convert.
    - id: throwOnMismatch
      type: System.Boolean
      description: >-
        If true, throws when there is a mismatch between the types being converted.

        If false, silently ignores property with mismatch and moves along to the next one.
    typeParameters:
    - id: TInput
      description: Type of input-value.
    - id: TResult
      description: Type of desired return-value.
    return:
      type: '{TResult}'
      description: The converted value.
    content.vb: Public Function Map(Of TInput, TResult As New)(source As TInput, throwOnMismatch As Boolean = True) As TResult
  overload: SuperOffice.Util.SoMapper.Map*
  nameWithType.vb: SoMapper.Map(Of TInput, TResult)(TInput, Boolean)
  fullName.vb: SuperOffice.Util.SoMapper.Map(Of TInput, TResult)(TInput, Boolean)
  name.vb: Map(Of TInput, TResult)(TInput, Boolean)
- uid: SuperOffice.Util.SoMapper.Clone``1(``0)
  commentId: M:SuperOffice.Util.SoMapper.Clone``1(``0)
  id: Clone``1(``0)
  parent: SuperOffice.Util.SoMapper
  langs:
  - csharp
  - vb
  name: Clone<TInput>(TInput)
  nameWithType: SoMapper.Clone<TInput>(TInput)
  fullName: SuperOffice.Util.SoMapper.Clone<TInput>(TInput)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: >-
    Clones the given object-graph using a recursive copy of public properties.

    <remarks>

    If class being copied depends on private fields, the copy may not function as expected.

    </remarks>
  example: []
  syntax:
    content: 'public TInput Clone<TInput>(TInput source) where TInput : new()'
    parameters:
    - id: source
      type: '{TInput}'
      description: Instance to clone.
    typeParameters:
    - id: TInput
      description: Type of input-value.
    return:
      type: '{TInput}'
      description: The converted value.
    content.vb: Public Function Clone(Of TInput As New)(source As TInput) As TInput
  overload: SuperOffice.Util.SoMapper.Clone*
  nameWithType.vb: SoMapper.Clone(Of TInput)(TInput)
  fullName.vb: SuperOffice.Util.SoMapper.Clone(Of TInput)(TInput)
  name.vb: Clone(Of TInput)(TInput)
- uid: SuperOffice.Util.SoMapper.CopyProperties``2(``0,``1,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:SuperOffice.Util.SoMapper.CopyProperties``2(``0,``1,System.Boolean,System.Boolean,System.Boolean)
  id: CopyProperties``2(``0,``1,System.Boolean,System.Boolean,System.Boolean)
  parent: SuperOffice.Util.SoMapper
  langs:
  - csharp
  - vb
  name: CopyProperties<TSource, TDestination>(TSource, TDestination, bool, bool, bool)
  nameWithType: SoMapper.CopyProperties<TSource, TDestination>(TSource, TDestination, bool, bool, bool)
  fullName: SuperOffice.Util.SoMapper.CopyProperties<TSource, TDestination>(TSource, TDestination, bool, bool, bool)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: Copies all properties of the provided source-instance onto the provided destination-instance.
  example: []
  syntax:
    content: public void CopyProperties<TSource, TDestination>(TSource source, TDestination destination, bool throwOnMismatch, bool copyNulls = false, bool caseInsensitive = false)
    parameters:
    - id: source
      type: '{TSource}'
      description: Source-value to copy.
    - id: destination
      type: '{TDestination}'
      description: Target-value which properties will be copied onto.
    - id: throwOnMismatch
      type: System.Boolean
      description: >-
        If true, throws when there is a mismatch between the types being converted.

        If false, silently ignores property with mismatch and moves along to the next one.
    - id: copyNulls
      type: System.Boolean
      description: Should null values on source be skipped and left unchanged on dest, or copied to destionation?
    - id: caseInsensitive
      type: System.Boolean
      description: Exact match of parameter names or case insensitivity?
    typeParameters:
    - id: TSource
      description: Type of the source value.
    - id: TDestination
      description: Type of the destination value.
    content.vb: Public Sub CopyProperties(Of TSource, TDestination)(source As TSource, destination As TDestination, throwOnMismatch As Boolean, copyNulls As Boolean = False, caseInsensitive As Boolean = False)
  overload: SuperOffice.Util.SoMapper.CopyProperties*
  nameWithType.vb: SoMapper.CopyProperties(Of TSource, TDestination)(TSource, TDestination, Boolean, Boolean, Boolean)
  fullName.vb: SuperOffice.Util.SoMapper.CopyProperties(Of TSource, TDestination)(TSource, TDestination, Boolean, Boolean, Boolean)
  name.vb: CopyProperties(Of TSource, TDestination)(TSource, TDestination, Boolean, Boolean, Boolean)
- uid: SuperOffice.Util.SoMapper.CopyProperties``2(``0[],``1[],System.Boolean,System.Boolean,System.Boolean)
  commentId: M:SuperOffice.Util.SoMapper.CopyProperties``2(``0[],``1[],System.Boolean,System.Boolean,System.Boolean)
  id: CopyProperties``2(``0[],``1[],System.Boolean,System.Boolean,System.Boolean)
  parent: SuperOffice.Util.SoMapper
  langs:
  - csharp
  - vb
  name: CopyProperties<TSource, TDestination>(TSource[], TDestination[], bool, bool, bool)
  nameWithType: SoMapper.CopyProperties<TSource, TDestination>(TSource[], TDestination[], bool, bool, bool)
  fullName: SuperOffice.Util.SoMapper.CopyProperties<TSource, TDestination>(TSource[], TDestination[], bool, bool, bool)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  syntax:
    content: 'public void CopyProperties<TSource, TDestination>(TSource[] source, TDestination[] destination, bool throwOnMismatch, bool copyNulls = false, bool caseInsensitive = false) where TDestination : new()'
    parameters:
    - id: source
      type: '{TSource}[]'
    - id: destination
      type: '{TDestination}[]'
    - id: throwOnMismatch
      type: System.Boolean
    - id: copyNulls
      type: System.Boolean
    - id: caseInsensitive
      type: System.Boolean
    typeParameters:
    - id: TSource
    - id: TDestination
    content.vb: Public Sub CopyProperties(Of TSource, TDestination As New)(source As TSource(), destination As TDestination(), throwOnMismatch As Boolean, copyNulls As Boolean = False, caseInsensitive As Boolean = False)
  overload: SuperOffice.Util.SoMapper.CopyProperties*
  nameWithType.vb: SoMapper.CopyProperties(Of TSource, TDestination)(TSource(), TDestination(), Boolean, Boolean, Boolean)
  fullName.vb: SuperOffice.Util.SoMapper.CopyProperties(Of TSource, TDestination)(TSource(), TDestination(), Boolean, Boolean, Boolean)
  name.vb: CopyProperties(Of TSource, TDestination)(TSource(), TDestination(), Boolean, Boolean, Boolean)
- uid: SuperOffice.Util.SoMapper.CopyProperties(System.Type,System.Type,System.Object,System.Object,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:SuperOffice.Util.SoMapper.CopyProperties(System.Type,System.Type,System.Object,System.Object,System.Boolean,System.Boolean,System.Boolean)
  id: CopyProperties(System.Type,System.Type,System.Object,System.Object,System.Boolean,System.Boolean,System.Boolean)
  parent: SuperOffice.Util.SoMapper
  langs:
  - csharp
  - vb
  name: CopyProperties(Type, Type, object, object, bool, bool, bool)
  nameWithType: SoMapper.CopyProperties(Type, Type, object, object, bool, bool, bool)
  fullName: SuperOffice.Util.SoMapper.CopyProperties(System.Type, System.Type, object, object, bool, bool, bool)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: Copies all properties of the provided source-instance onto the provided destination-instance.
  example: []
  syntax:
    content: public void CopyProperties(Type sourceType, Type destinationType, object source, object destination, bool throwOnMismatch, bool copyNulls = false, bool caseInsensitive = false)
    parameters:
    - id: sourceType
      type: System.Type
      description: Type of the source value.
    - id: destinationType
      type: System.Type
      description: Type of the destination value.
    - id: source
      type: System.Object
      description: Source-value to copy.
    - id: destination
      type: System.Object
      description: Target-value which properties will be copied onto.
    - id: throwOnMismatch
      type: System.Boolean
      description: >-
        If true, throws when there is a mismatch between the types being converted.

        If false, silently ignores property with mismatch and moves along to the next one.
    - id: copyNulls
      type: System.Boolean
      description: Should null values on source be skipped and left unchanged on dest, or copied to destionation?
    - id: caseInsensitive
      type: System.Boolean
      description: Exact match of parameter names or case insensitivity?
    content.vb: Public Sub CopyProperties(sourceType As Type, destinationType As Type, source As Object, destination As Object, throwOnMismatch As Boolean, copyNulls As Boolean = False, caseInsensitive As Boolean = False)
  overload: SuperOffice.Util.SoMapper.CopyProperties*
  nameWithType.vb: SoMapper.CopyProperties(Type, Type, Object, Object, Boolean, Boolean, Boolean)
  fullName.vb: SuperOffice.Util.SoMapper.CopyProperties(System.Type, System.Type, Object, Object, Boolean, Boolean, Boolean)
  name.vb: CopyProperties(Type, Type, Object, Object, Boolean, Boolean, Boolean)
- uid: SuperOffice.Util.SoMapper.GetDictionaryKey(System.Object)
  commentId: M:SuperOffice.Util.SoMapper.GetDictionaryKey(System.Object)
  id: GetDictionaryKey(System.Object)
  parent: SuperOffice.Util.SoMapper
  langs:
  - csharp
  - vb
  name: GetDictionaryKey(object)
  nameWithType: SoMapper.GetDictionaryKey(object)
  fullName: SuperOffice.Util.SoMapper.GetDictionaryKey(object)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  syntax:
    content: protected object GetDictionaryKey(object dictionaryEnumerationItem)
    parameters:
    - id: dictionaryEnumerationItem
      type: System.Object
    return:
      type: System.Object
    content.vb: Protected Function GetDictionaryKey(dictionaryEnumerationItem As Object) As Object
  overload: SuperOffice.Util.SoMapper.GetDictionaryKey*
  nameWithType.vb: SoMapper.GetDictionaryKey(Object)
  fullName.vb: SuperOffice.Util.SoMapper.GetDictionaryKey(Object)
  name.vb: GetDictionaryKey(Object)
- uid: SuperOffice.Util.SoMapper.GetDictionaryValue(System.Object)
  commentId: M:SuperOffice.Util.SoMapper.GetDictionaryValue(System.Object)
  id: GetDictionaryValue(System.Object)
  parent: SuperOffice.Util.SoMapper
  langs:
  - csharp
  - vb
  name: GetDictionaryValue(object)
  nameWithType: SoMapper.GetDictionaryValue(object)
  fullName: SuperOffice.Util.SoMapper.GetDictionaryValue(object)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  syntax:
    content: protected object GetDictionaryValue(object dictionaryEnumerationItem)
    parameters:
    - id: dictionaryEnumerationItem
      type: System.Object
    return:
      type: System.Object
    content.vb: Protected Function GetDictionaryValue(dictionaryEnumerationItem As Object) As Object
  overload: SuperOffice.Util.SoMapper.GetDictionaryValue*
  nameWithType.vb: SoMapper.GetDictionaryValue(Object)
  fullName.vb: SuperOffice.Util.SoMapper.GetDictionaryValue(Object)
  name.vb: GetDictionaryValue(Object)
- uid: SuperOffice.Util.SoMapper.MapValue(System.Type,System.Type,System.Object,System.Boolean)
  commentId: M:SuperOffice.Util.SoMapper.MapValue(System.Type,System.Type,System.Object,System.Boolean)
  id: MapValue(System.Type,System.Type,System.Object,System.Boolean)
  parent: SuperOffice.Util.SoMapper
  langs:
  - csharp
  - vb
  name: MapValue(Type, Type, object, bool)
  nameWithType: SoMapper.MapValue(Type, Type, object, bool)
  fullName: SuperOffice.Util.SoMapper.MapValue(System.Type, System.Type, object, bool)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  syntax:
    content: public object MapValue(Type type1, Type type2, object sourceValue, bool throwOnMismatch = true)
    parameters:
    - id: type1
      type: System.Type
    - id: type2
      type: System.Type
    - id: sourceValue
      type: System.Object
    - id: throwOnMismatch
      type: System.Boolean
    return:
      type: System.Object
    content.vb: Public Function MapValue(type1 As Type, type2 As Type, sourceValue As Object, throwOnMismatch As Boolean = True) As Object
  overload: SuperOffice.Util.SoMapper.MapValue*
  nameWithType.vb: SoMapper.MapValue(Type, Type, Object, Boolean)
  fullName.vb: SuperOffice.Util.SoMapper.MapValue(System.Type, System.Type, Object, Boolean)
  name.vb: MapValue(Type, Type, Object, Boolean)
- uid: SuperOffice.Util.SoMapper.Instance
  commentId: P:SuperOffice.Util.SoMapper.Instance
  id: Instance
  parent: SuperOffice.Util.SoMapper
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: SoMapper.Instance
  fullName: SuperOffice.Util.SoMapper.Instance
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: The default-instance of SoMapper for usage in cases where customization is not needed.
  example: []
  syntax:
    content: public static SoMapper Instance { get; }
    parameters: []
    return:
      type: SuperOffice.Util.SoMapper
    content.vb: Public Shared ReadOnly Property Instance As SoMapper
  overload: SuperOffice.Util.SoMapper.Instance*
references:
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Util
    name: Util
    isExternal: true
    href: SuperOffice.Util.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Util
    name: Util
    isExternal: true
    href: SuperOffice.Util.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: SuperOffice.Util.SoMapper.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<SoMapper, To>(SoMapper)
  nameWithType: EnumUtil.MapEnums<SoMapper, To>(SoMapper)
  fullName: EnumUtil.MapEnums<SuperOffice.Util.SoMapper, To>(SuperOffice.Util.SoMapper)
  nameWithType.vb: EnumUtil.MapEnums(Of SoMapper, To)(SoMapper)
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Util.SoMapper, To)(SuperOffice.Util.SoMapper)
  name.vb: MapEnums(Of SoMapper, To)(SoMapper)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(SuperOffice.Util.SoMapper)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.Util.SoMapper
    name: SoMapper
    isExternal: true
    href: SuperOffice.Util.SoMapper.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.Util.SoMapper
    name: SoMapper
    isExternal: true
    href: SuperOffice.Util.SoMapper.html
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(SuperOffice.Util.SoMapper)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Util.SoMapper
    name: SoMapper
    isExternal: true
    href: SuperOffice.Util.SoMapper.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.Util.SoMapper
    name: SoMapper
    isExternal: true
    href: SuperOffice.Util.SoMapper.html
  - name: )
- uid: SuperOffice.Util.SoMapper.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<SoMapper, To>(SoMapper)
  nameWithType: Converters.MapEnums<SoMapper, To>(SoMapper)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Util.SoMapper, To>(SuperOffice.Util.SoMapper)
  nameWithType.vb: Converters.MapEnums(Of SoMapper, To)(SoMapper)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Util.SoMapper, To)(SuperOffice.Util.SoMapper)
  name.vb: MapEnums(Of SoMapper, To)(SoMapper)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.Util.SoMapper)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.Util.SoMapper
    name: SoMapper
    isExternal: true
    href: SuperOffice.Util.SoMapper.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.Util.SoMapper
    name: SoMapper
    isExternal: true
    href: SuperOffice.Util.SoMapper.html
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.Util.SoMapper)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Util.SoMapper
    name: SoMapper
    isExternal: true
    href: SuperOffice.Util.SoMapper.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.Util.SoMapper
    name: SoMapper
    isExternal: true
    href: SuperOffice.Util.SoMapper.html
  - name: )
- uid: SuperOffice.Util.SoMapper.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Util.SoMapper)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  name: AssignByReflection<SoMapper>(SoMapper, SoMapper)
  nameWithType: ObjectExtensions.AssignByReflection<SoMapper>(SoMapper, SoMapper)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Util.SoMapper>(SuperOffice.Util.SoMapper, SuperOffice.Util.SoMapper)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of SoMapper)(SoMapper, SoMapper)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Util.SoMapper)(SuperOffice.Util.SoMapper, SuperOffice.Util.SoMapper)
  name.vb: AssignByReflection(Of SoMapper)(SoMapper, SoMapper)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Util.SoMapper,SuperOffice.Util.SoMapper)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: <
  - uid: SuperOffice.Util.SoMapper
    name: SoMapper
    isExternal: true
    href: SuperOffice.Util.SoMapper.html
  - name: '>'
  - name: (
  - uid: SuperOffice.Util.SoMapper
    name: SoMapper
    isExternal: true
    href: SuperOffice.Util.SoMapper.html
  - name: ','
  - name: " "
  - uid: SuperOffice.Util.SoMapper
    name: SoMapper
    isExternal: true
    href: SuperOffice.Util.SoMapper.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Util.SoMapper,SuperOffice.Util.SoMapper)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Util.SoMapper
    name: SoMapper
    isExternal: true
    href: SuperOffice.Util.SoMapper.html
  - name: )
  - name: (
  - uid: SuperOffice.Util.SoMapper
    name: SoMapper
    isExternal: true
    href: SuperOffice.Util.SoMapper.html
  - name: ','
  - name: " "
  - uid: SuperOffice.Util.SoMapper
    name: SoMapper
    isExternal: true
    href: SuperOffice.Util.SoMapper.html
  - name: )
- uid: SuperOffice.Util.SoMapper.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  name: GraphCopy<SoMapper>(SoMapper)
  nameWithType: ObjectExtensions.GraphCopy<SoMapper>(SoMapper)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Util.SoMapper>(SuperOffice.Util.SoMapper)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of SoMapper)(SoMapper)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Util.SoMapper)(SuperOffice.Util.SoMapper)
  name.vb: GraphCopy(Of SoMapper)(SoMapper)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(SuperOffice.Util.SoMapper)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: <
  - uid: SuperOffice.Util.SoMapper
    name: SoMapper
    isExternal: true
    href: SuperOffice.Util.SoMapper.html
  - name: '>'
  - name: (
  - uid: SuperOffice.Util.SoMapper
    name: SoMapper
    isExternal: true
    href: SuperOffice.Util.SoMapper.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(SuperOffice.Util.SoMapper)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Util.SoMapper
    name: SoMapper
    isExternal: true
    href: SuperOffice.Util.SoMapper.html
  - name: )
  - name: (
  - uid: SuperOffice.Util.SoMapper
    name: SoMapper
    isExternal: true
    href: SuperOffice.Util.SoMapper.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  href: EnumUtil.html
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  href: SuperOffice.Util.ObjectExtensions.html
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
- uid: SuperOffice.Util.SoMapper.#ctor*
  commentId: Overload:SuperOffice.Util.SoMapper.#ctor
  isExternal: true
  href: SuperOffice.Util.SoMapper.html#SuperOffice_Util_SoMapper__ctor
  name: SoMapper
  nameWithType: SoMapper.SoMapper
  fullName: SuperOffice.Util.SoMapper.SoMapper
  nameWithType.vb: SoMapper.New
  fullName.vb: SuperOffice.Util.SoMapper.New
  name.vb: New
- uid: SuperOffice.Util.SoMapper.Map*
  commentId: Overload:SuperOffice.Util.SoMapper.Map
  isExternal: true
  href: SuperOffice.Util.SoMapper.html#SuperOffice_Util_SoMapper_Map__2___0_System_Boolean_
  name: Map
  nameWithType: SoMapper.Map
  fullName: SuperOffice.Util.SoMapper.Map
- uid: '{TInput}'
  commentId: '!:TInput'
  definition: TInput
  name: TInput
  nameWithType: TInput
  fullName: TInput
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: '{TResult}'
  commentId: '!:TResult'
  definition: TResult
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: TInput
  name: TInput
  nameWithType: TInput
  fullName: TInput
- uid: TResult
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: SuperOffice.Util.SoMapper.Clone*
  commentId: Overload:SuperOffice.Util.SoMapper.Clone
  isExternal: true
  href: SuperOffice.Util.SoMapper.html#SuperOffice_Util_SoMapper_Clone__1___0_
  name: Clone
  nameWithType: SoMapper.Clone
  fullName: SuperOffice.Util.SoMapper.Clone
- uid: SuperOffice.Util.SoMapper.CopyProperties*
  commentId: Overload:SuperOffice.Util.SoMapper.CopyProperties
  isExternal: true
  href: SuperOffice.Util.SoMapper.html#SuperOffice_Util_SoMapper_CopyProperties__2___0___1_System_Boolean_System_Boolean_System_Boolean_
  name: CopyProperties
  nameWithType: SoMapper.CopyProperties
  fullName: SuperOffice.Util.SoMapper.CopyProperties
- uid: '{TSource}'
  commentId: '!:TSource'
  definition: TSource
  name: TSource
  nameWithType: TSource
  fullName: TSource
- uid: '{TDestination}'
  commentId: '!:TDestination'
  definition: TDestination
  name: TDestination
  nameWithType: TDestination
  fullName: TDestination
- uid: TSource
  commentId: '!:TSource'
  name: TSource
  nameWithType: TSource
  fullName: TSource
- uid: TDestination
  commentId: '!:TDestination'
  name: TDestination
  nameWithType: TDestination
  fullName: TDestination
- uid: '{TSource}[]'
  isExternal: true
  name: TSource[]
  nameWithType: TSource[]
  fullName: TSource[]
  nameWithType.vb: TSource()
  fullName.vb: TSource()
  name.vb: TSource()
  spec.csharp:
  - name: TSource
  - name: '['
  - name: ']'
  spec.vb:
  - name: TSource
  - name: (
  - name: )
- uid: '{TDestination}[]'
  isExternal: true
  name: TDestination[]
  nameWithType: TDestination[]
  fullName: TDestination[]
  nameWithType.vb: TDestination()
  fullName.vb: TDestination()
  name.vb: TDestination()
  spec.csharp:
  - name: TDestination
  - name: '['
  - name: ']'
  spec.vb:
  - name: TDestination
  - name: (
  - name: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: SuperOffice.Util.SoMapper.GetDictionaryKey*
  commentId: Overload:SuperOffice.Util.SoMapper.GetDictionaryKey
  isExternal: true
  href: SuperOffice.Util.SoMapper.html#SuperOffice_Util_SoMapper_GetDictionaryKey_System_Object_
  name: GetDictionaryKey
  nameWithType: SoMapper.GetDictionaryKey
  fullName: SuperOffice.Util.SoMapper.GetDictionaryKey
- uid: SuperOffice.Util.SoMapper.GetDictionaryValue*
  commentId: Overload:SuperOffice.Util.SoMapper.GetDictionaryValue
  isExternal: true
  href: SuperOffice.Util.SoMapper.html#SuperOffice_Util_SoMapper_GetDictionaryValue_System_Object_
  name: GetDictionaryValue
  nameWithType: SoMapper.GetDictionaryValue
  fullName: SuperOffice.Util.SoMapper.GetDictionaryValue
- uid: SuperOffice.Util.SoMapper.MapValue*
  commentId: Overload:SuperOffice.Util.SoMapper.MapValue
  isExternal: true
  href: SuperOffice.Util.SoMapper.html#SuperOffice_Util_SoMapper_MapValue_System_Type_System_Type_System_Object_System_Boolean_
  name: MapValue
  nameWithType: SoMapper.MapValue
  fullName: SuperOffice.Util.SoMapper.MapValue
- uid: SuperOffice.Util.SoMapper.Instance*
  commentId: Overload:SuperOffice.Util.SoMapper.Instance
  isExternal: true
  href: SuperOffice.Util.SoMapper.html#SuperOffice_Util_SoMapper_Instance
  name: Instance
  nameWithType: SoMapper.Instance
  fullName: SuperOffice.Util.SoMapper.Instance
- uid: SuperOffice.Util.SoMapper
  commentId: T:SuperOffice.Util.SoMapper
  parent: SuperOffice.Util
  isExternal: true
  href: SuperOffice.Util.SoMapper.html
  name: SoMapper
  nameWithType: SoMapper
  fullName: SuperOffice.Util.SoMapper
