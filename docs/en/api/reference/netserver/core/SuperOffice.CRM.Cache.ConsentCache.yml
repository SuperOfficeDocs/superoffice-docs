### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Cache.ConsentCache
  commentId: T:SuperOffice.CRM.Cache.ConsentCache
  id: ConsentCache
  parent: SuperOffice.CRM.Cache
  children:
  - SuperOffice.CRM.Cache.ConsentCache.EmarketingId
  - SuperOffice.CRM.Cache.ConsentCache.GetConsentPurposeInfos
  - SuperOffice.CRM.Cache.ConsentCache.GetConsentSourceIdFromKey(System.String)
  - SuperOffice.CRM.Cache.ConsentCache.GetConsentSourceNameFromId(System.Int32)
  - SuperOffice.CRM.Cache.ConsentCache.GetCurrent
  - SuperOffice.CRM.Cache.ConsentCache.GetLegalBaseIdFromKey(System.String)
  - SuperOffice.CRM.Cache.ConsentCache.GetLegalBaseNameFromId(System.Int32)
  - SuperOffice.CRM.Cache.ConsentCache.GetPurposeIdFromKey(System.String)
  - SuperOffice.CRM.Cache.ConsentCache.GetPurposeNameFromId(System.Int32)
  - SuperOffice.CRM.Cache.ConsentCache.OnLoad
  - SuperOffice.CRM.Cache.ConsentCache.StoreId
  - SuperOffice.CRM.Cache.ConsentCache.WithdrawnBase
  langs:
  - csharp
  - vb
  name: ConsentCache
  nameWithType: ConsentCache
  fullName: SuperOffice.CRM.Cache.ConsentCache
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  syntax:
    content: >-
      [CacheV2("Database")]

      public class ConsentCache : CacheBaseV2, IFlushableV2, IDisposable
    content.vb: >-
      <CacheV2("Database")>

      Public Class ConsentCache
          Inherits CacheBaseV2
          Implements IFlushableV2, IDisposable
  inheritance:
  - System.Object
  - SuperOffice.Data.Cache.CacheBaseV2
  implements:
  - SuperOffice.Data.Cache.IFlushableV2
  - System.IDisposable
  inheritedMembers:
  - SuperOffice.Data.Cache.CacheBaseV2.Dispose
  - SuperOffice.Data.Cache.CacheBaseV2.Flush
  - SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
  - SuperOffice.Data.Cache.CacheBaseV2.Load
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.Cache.ConsentCache.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Cache.ConsentCache.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  attributes:
  - type: SuperOffice.Data.Cache.CacheV2Attribute
    ctor: SuperOffice.Data.Cache.CacheV2Attribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Database
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Cache.ConsentCache.GetConsentPurposeInfos
  commentId: M:SuperOffice.CRM.Cache.ConsentCache.GetConsentPurposeInfos
  id: GetConsentPurposeInfos
  parent: SuperOffice.CRM.Cache.ConsentCache
  langs:
  - csharp
  - vb
  name: GetConsentPurposeInfos()
  nameWithType: ConsentCache.GetConsentPurposeInfos()
  fullName: SuperOffice.CRM.Cache.ConsentCache.GetConsentPurposeInfos()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  syntax:
    content: public IEnumerable<ConsentPurposeRecordData> GetConsentPurposeInfos()
    return:
      type: System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.ConsentPurposeRecordData}
    content.vb: Public Function GetConsentPurposeInfos As IEnumerable(Of ConsentPurposeRecordData)
  overload: SuperOffice.CRM.Cache.ConsentCache.GetConsentPurposeInfos*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.ConsentCache.GetPurposeNameFromId(System.Int32)
  commentId: M:SuperOffice.CRM.Cache.ConsentCache.GetPurposeNameFromId(System.Int32)
  id: GetPurposeNameFromId(System.Int32)
  parent: SuperOffice.CRM.Cache.ConsentCache
  langs:
  - csharp
  - vb
  name: GetPurposeNameFromId(Int32)
  nameWithType: ConsentCache.GetPurposeNameFromId(Int32)
  fullName: SuperOffice.CRM.Cache.ConsentCache.GetPurposeNameFromId(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  syntax:
    content: public string GetPurposeNameFromId(int id)
    parameters:
    - id: id
      type: System.Int32
    return:
      type: System.String
    content.vb: Public Function GetPurposeNameFromId(id As Integer) As String
  overload: SuperOffice.CRM.Cache.ConsentCache.GetPurposeNameFromId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.ConsentCache.GetLegalBaseNameFromId(System.Int32)
  commentId: M:SuperOffice.CRM.Cache.ConsentCache.GetLegalBaseNameFromId(System.Int32)
  id: GetLegalBaseNameFromId(System.Int32)
  parent: SuperOffice.CRM.Cache.ConsentCache
  langs:
  - csharp
  - vb
  name: GetLegalBaseNameFromId(Int32)
  nameWithType: ConsentCache.GetLegalBaseNameFromId(Int32)
  fullName: SuperOffice.CRM.Cache.ConsentCache.GetLegalBaseNameFromId(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  syntax:
    content: public string GetLegalBaseNameFromId(int id)
    parameters:
    - id: id
      type: System.Int32
    return:
      type: System.String
    content.vb: Public Function GetLegalBaseNameFromId(id As Integer) As String
  overload: SuperOffice.CRM.Cache.ConsentCache.GetLegalBaseNameFromId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.ConsentCache.GetConsentSourceNameFromId(System.Int32)
  commentId: M:SuperOffice.CRM.Cache.ConsentCache.GetConsentSourceNameFromId(System.Int32)
  id: GetConsentSourceNameFromId(System.Int32)
  parent: SuperOffice.CRM.Cache.ConsentCache
  langs:
  - csharp
  - vb
  name: GetConsentSourceNameFromId(Int32)
  nameWithType: ConsentCache.GetConsentSourceNameFromId(Int32)
  fullName: SuperOffice.CRM.Cache.ConsentCache.GetConsentSourceNameFromId(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  syntax:
    content: public string GetConsentSourceNameFromId(int id)
    parameters:
    - id: id
      type: System.Int32
    return:
      type: System.String
    content.vb: Public Function GetConsentSourceNameFromId(id As Integer) As String
  overload: SuperOffice.CRM.Cache.ConsentCache.GetConsentSourceNameFromId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.ConsentCache.GetPurposeIdFromKey(System.String)
  commentId: M:SuperOffice.CRM.Cache.ConsentCache.GetPurposeIdFromKey(System.String)
  id: GetPurposeIdFromKey(System.String)
  parent: SuperOffice.CRM.Cache.ConsentCache
  langs:
  - csharp
  - vb
  name: GetPurposeIdFromKey(String)
  nameWithType: ConsentCache.GetPurposeIdFromKey(String)
  fullName: SuperOffice.CRM.Cache.ConsentCache.GetPurposeIdFromKey(System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  syntax:
    content: public int GetPurposeIdFromKey(string key)
    parameters:
    - id: key
      type: System.String
    return:
      type: System.Int32
    content.vb: Public Function GetPurposeIdFromKey(key As String) As Integer
  overload: SuperOffice.CRM.Cache.ConsentCache.GetPurposeIdFromKey*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.ConsentCache.GetLegalBaseIdFromKey(System.String)
  commentId: M:SuperOffice.CRM.Cache.ConsentCache.GetLegalBaseIdFromKey(System.String)
  id: GetLegalBaseIdFromKey(System.String)
  parent: SuperOffice.CRM.Cache.ConsentCache
  langs:
  - csharp
  - vb
  name: GetLegalBaseIdFromKey(String)
  nameWithType: ConsentCache.GetLegalBaseIdFromKey(String)
  fullName: SuperOffice.CRM.Cache.ConsentCache.GetLegalBaseIdFromKey(System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  syntax:
    content: public int GetLegalBaseIdFromKey(string key)
    parameters:
    - id: key
      type: System.String
    return:
      type: System.Int32
    content.vb: Public Function GetLegalBaseIdFromKey(key As String) As Integer
  overload: SuperOffice.CRM.Cache.ConsentCache.GetLegalBaseIdFromKey*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.ConsentCache.GetConsentSourceIdFromKey(System.String)
  commentId: M:SuperOffice.CRM.Cache.ConsentCache.GetConsentSourceIdFromKey(System.String)
  id: GetConsentSourceIdFromKey(System.String)
  parent: SuperOffice.CRM.Cache.ConsentCache
  langs:
  - csharp
  - vb
  name: GetConsentSourceIdFromKey(String)
  nameWithType: ConsentCache.GetConsentSourceIdFromKey(String)
  fullName: SuperOffice.CRM.Cache.ConsentCache.GetConsentSourceIdFromKey(System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  syntax:
    content: public int GetConsentSourceIdFromKey(string key)
    parameters:
    - id: key
      type: System.String
    return:
      type: System.Int32
    content.vb: Public Function GetConsentSourceIdFromKey(key As String) As Integer
  overload: SuperOffice.CRM.Cache.ConsentCache.GetConsentSourceIdFromKey*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.ConsentCache.GetCurrent
  commentId: M:SuperOffice.CRM.Cache.ConsentCache.GetCurrent
  id: GetCurrent
  parent: SuperOffice.CRM.Cache.ConsentCache
  langs:
  - csharp
  - vb
  name: GetCurrent()
  nameWithType: ConsentCache.GetCurrent()
  fullName: SuperOffice.CRM.Cache.ConsentCache.GetCurrent()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  syntax:
    content: public static ConsentCache GetCurrent()
    return:
      type: SuperOffice.CRM.Cache.ConsentCache
    content.vb: Public Shared Function GetCurrent As ConsentCache
  overload: SuperOffice.CRM.Cache.ConsentCache.GetCurrent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Cache.ConsentCache.OnLoad
  commentId: M:SuperOffice.CRM.Cache.ConsentCache.OnLoad
  id: OnLoad
  parent: SuperOffice.CRM.Cache.ConsentCache
  langs:
  - csharp
  - vb
  name: OnLoad()
  nameWithType: ConsentCache.OnLoad()
  fullName: SuperOffice.CRM.Cache.ConsentCache.OnLoad()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  syntax:
    content: protected override void OnLoad()
    content.vb: Protected Overrides Sub OnLoad
  overridden: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
  overload: SuperOffice.CRM.Cache.ConsentCache.OnLoad*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Cache.ConsentCache.WithdrawnBase
  commentId: P:SuperOffice.CRM.Cache.ConsentCache.WithdrawnBase
  id: WithdrawnBase
  parent: SuperOffice.CRM.Cache.ConsentCache
  langs:
  - csharp
  - vb
  name: WithdrawnBase
  nameWithType: ConsentCache.WithdrawnBase
  fullName: SuperOffice.CRM.Cache.ConsentCache.WithdrawnBase
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  syntax:
    content: public int WithdrawnBase { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property WithdrawnBase As Integer
  overload: SuperOffice.CRM.Cache.ConsentCache.WithdrawnBase*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Cache.ConsentCache.EmarketingId
  commentId: P:SuperOffice.CRM.Cache.ConsentCache.EmarketingId
  id: EmarketingId
  parent: SuperOffice.CRM.Cache.ConsentCache
  langs:
  - csharp
  - vb
  name: EmarketingId
  nameWithType: ConsentCache.EmarketingId
  fullName: SuperOffice.CRM.Cache.ConsentCache.EmarketingId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  syntax:
    content: public int EmarketingId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property EmarketingId As Integer
  overload: SuperOffice.CRM.Cache.ConsentCache.EmarketingId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Cache.ConsentCache.StoreId
  commentId: P:SuperOffice.CRM.Cache.ConsentCache.StoreId
  id: StoreId
  parent: SuperOffice.CRM.Cache.ConsentCache
  langs:
  - csharp
  - vb
  name: StoreId
  nameWithType: ConsentCache.StoreId
  fullName: SuperOffice.CRM.Cache.ConsentCache.StoreId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  syntax:
    content: public int StoreId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property StoreId As Integer
  overload: SuperOffice.CRM.Cache.ConsentCache.StoreId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: SuperOffice.CRM.Cache
  commentId: N:SuperOffice.CRM.Cache
  isExternal: true
  name: SuperOffice.CRM.Cache
  nameWithType: SuperOffice.CRM.Cache
  fullName: SuperOffice.CRM.Cache
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Data.Cache.CacheBaseV2
  commentId: T:SuperOffice.Data.Cache.CacheBaseV2
  parent: SuperOffice.Data.Cache
  isExternal: true
  name: CacheBaseV2
  nameWithType: CacheBaseV2
  fullName: SuperOffice.Data.Cache.CacheBaseV2
- uid: SuperOffice.Data.Cache.IFlushableV2
  commentId: T:SuperOffice.Data.Cache.IFlushableV2
  parent: SuperOffice.Data.Cache
  isExternal: true
  name: IFlushableV2
  nameWithType: IFlushableV2
  fullName: SuperOffice.Data.Cache.IFlushableV2
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: SuperOffice.Data.Cache.CacheBaseV2.Dispose
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.Dispose
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: Dispose()
  nameWithType: CacheBaseV2.Dispose()
  fullName: SuperOffice.Data.Cache.CacheBaseV2.Dispose()
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.Dispose
    name: Dispose
    nameWithType: CacheBaseV2.Dispose
    fullName: SuperOffice.Data.Cache.CacheBaseV2.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.Dispose
    name: Dispose
    nameWithType: CacheBaseV2.Dispose
    fullName: SuperOffice.Data.Cache.CacheBaseV2.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Cache.CacheBaseV2.Flush
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.Flush
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: Flush()
  nameWithType: CacheBaseV2.Flush()
  fullName: SuperOffice.Data.Cache.CacheBaseV2.Flush()
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.Flush
    name: Flush
    nameWithType: CacheBaseV2.Flush
    fullName: SuperOffice.Data.Cache.CacheBaseV2.Flush
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.Flush
    name: Flush
    nameWithType: CacheBaseV2.Flush
    fullName: SuperOffice.Data.Cache.CacheBaseV2.Flush
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: BeginDisableAutoUpdate()
  nameWithType: CacheBaseV2.BeginDisableAutoUpdate()
  fullName: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate()
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
    name: BeginDisableAutoUpdate
    nameWithType: CacheBaseV2.BeginDisableAutoUpdate
    fullName: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
    name: BeginDisableAutoUpdate
    nameWithType: CacheBaseV2.BeginDisableAutoUpdate
    fullName: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Cache.CacheBaseV2.Load
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.Load
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: Load()
  nameWithType: CacheBaseV2.Load()
  fullName: SuperOffice.Data.Cache.CacheBaseV2.Load()
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.Load
    name: Load
    nameWithType: CacheBaseV2.Load
    fullName: SuperOffice.Data.Cache.CacheBaseV2.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.Load
    name: Load
    nameWithType: CacheBaseV2.Load
    fullName: SuperOffice.Data.Cache.CacheBaseV2.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Cache.ConsentCache.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<ConsentCache, To>()
  nameWithType: EnumUtil.MapEnums<ConsentCache, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Cache.ConsentCache, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of ConsentCache, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Cache.ConsentCache, To)()
  name.vb: MapEnums(Of ConsentCache, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<ConsentCache, To>
    nameWithType: EnumUtil.MapEnums<ConsentCache, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Cache.ConsentCache, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of ConsentCache, To)
    nameWithType: EnumUtil.MapEnums(Of ConsentCache, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Cache.ConsentCache, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Cache.ConsentCache.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<ConsentCache, To>()
  nameWithType: Converters.MapEnums<ConsentCache, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Cache.ConsentCache, To>()
  nameWithType.vb: Converters.MapEnums(Of ConsentCache, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Cache.ConsentCache, To)()
  name.vb: MapEnums(Of ConsentCache, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<ConsentCache, To>
    nameWithType: Converters.MapEnums<ConsentCache, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Cache.ConsentCache, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of ConsentCache, To)
    nameWithType: Converters.MapEnums(Of ConsentCache, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Cache.ConsentCache, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Data.Cache
  commentId: N:SuperOffice.Data.Cache
  isExternal: true
  name: SuperOffice.Data.Cache
  nameWithType: SuperOffice.Data.Cache
  fullName: SuperOffice.Data.Cache
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Cache.ConsentCache.GetConsentPurposeInfos*
  commentId: Overload:SuperOffice.CRM.Cache.ConsentCache.GetConsentPurposeInfos
  isExternal: true
  name: GetConsentPurposeInfos
  nameWithType: ConsentCache.GetConsentPurposeInfos
  fullName: SuperOffice.CRM.Cache.ConsentCache.GetConsentPurposeInfos
- uid: System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.ConsentPurposeRecordData}
  commentId: T:System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.ConsentPurposeRecordData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ConsentPurposeRecordData>
  nameWithType: IEnumerable<ConsentPurposeRecordData>
  fullName: System.Collections.Generic.IEnumerable<SuperOffice.CRM.Rows.ConsentPurposeRecordData>
  nameWithType.vb: IEnumerable(Of ConsentPurposeRecordData)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SuperOffice.CRM.Rows.ConsentPurposeRecordData)
  name.vb: IEnumerable(Of ConsentPurposeRecordData)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Rows.ConsentPurposeRecordData
    name: ConsentPurposeRecordData
    nameWithType: ConsentPurposeRecordData
    fullName: SuperOffice.CRM.Rows.ConsentPurposeRecordData
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Rows.ConsentPurposeRecordData
    name: ConsentPurposeRecordData
    nameWithType: ConsentPurposeRecordData
    fullName: SuperOffice.CRM.Rows.ConsentPurposeRecordData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: SuperOffice.CRM.Cache.ConsentCache.GetPurposeNameFromId*
  commentId: Overload:SuperOffice.CRM.Cache.ConsentCache.GetPurposeNameFromId
  isExternal: true
  name: GetPurposeNameFromId
  nameWithType: ConsentCache.GetPurposeNameFromId
  fullName: SuperOffice.CRM.Cache.ConsentCache.GetPurposeNameFromId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.Cache.ConsentCache.GetLegalBaseNameFromId*
  commentId: Overload:SuperOffice.CRM.Cache.ConsentCache.GetLegalBaseNameFromId
  isExternal: true
  name: GetLegalBaseNameFromId
  nameWithType: ConsentCache.GetLegalBaseNameFromId
  fullName: SuperOffice.CRM.Cache.ConsentCache.GetLegalBaseNameFromId
- uid: SuperOffice.CRM.Cache.ConsentCache.GetConsentSourceNameFromId*
  commentId: Overload:SuperOffice.CRM.Cache.ConsentCache.GetConsentSourceNameFromId
  isExternal: true
  name: GetConsentSourceNameFromId
  nameWithType: ConsentCache.GetConsentSourceNameFromId
  fullName: SuperOffice.CRM.Cache.ConsentCache.GetConsentSourceNameFromId
- uid: SuperOffice.CRM.Cache.ConsentCache.GetPurposeIdFromKey*
  commentId: Overload:SuperOffice.CRM.Cache.ConsentCache.GetPurposeIdFromKey
  isExternal: true
  name: GetPurposeIdFromKey
  nameWithType: ConsentCache.GetPurposeIdFromKey
  fullName: SuperOffice.CRM.Cache.ConsentCache.GetPurposeIdFromKey
- uid: SuperOffice.CRM.Cache.ConsentCache.GetLegalBaseIdFromKey*
  commentId: Overload:SuperOffice.CRM.Cache.ConsentCache.GetLegalBaseIdFromKey
  isExternal: true
  name: GetLegalBaseIdFromKey
  nameWithType: ConsentCache.GetLegalBaseIdFromKey
  fullName: SuperOffice.CRM.Cache.ConsentCache.GetLegalBaseIdFromKey
- uid: SuperOffice.CRM.Cache.ConsentCache.GetConsentSourceIdFromKey*
  commentId: Overload:SuperOffice.CRM.Cache.ConsentCache.GetConsentSourceIdFromKey
  isExternal: true
  name: GetConsentSourceIdFromKey
  nameWithType: ConsentCache.GetConsentSourceIdFromKey
  fullName: SuperOffice.CRM.Cache.ConsentCache.GetConsentSourceIdFromKey
- uid: SuperOffice.CRM.Cache.ConsentCache.GetCurrent*
  commentId: Overload:SuperOffice.CRM.Cache.ConsentCache.GetCurrent
  isExternal: true
  name: GetCurrent
  nameWithType: ConsentCache.GetCurrent
  fullName: SuperOffice.CRM.Cache.ConsentCache.GetCurrent
- uid: SuperOffice.CRM.Cache.ConsentCache
  commentId: T:SuperOffice.CRM.Cache.ConsentCache
  parent: SuperOffice.CRM.Cache
  isExternal: true
  name: ConsentCache
  nameWithType: ConsentCache
  fullName: SuperOffice.CRM.Cache.ConsentCache
- uid: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.OnLoad
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: OnLoad()
  nameWithType: CacheBaseV2.OnLoad()
  fullName: SuperOffice.Data.Cache.CacheBaseV2.OnLoad()
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
    name: OnLoad
    nameWithType: CacheBaseV2.OnLoad
    fullName: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
    name: OnLoad
    nameWithType: CacheBaseV2.OnLoad
    fullName: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Cache.ConsentCache.OnLoad*
  commentId: Overload:SuperOffice.CRM.Cache.ConsentCache.OnLoad
  isExternal: true
  name: OnLoad
  nameWithType: ConsentCache.OnLoad
  fullName: SuperOffice.CRM.Cache.ConsentCache.OnLoad
- uid: SuperOffice.CRM.Cache.ConsentCache.WithdrawnBase*
  commentId: Overload:SuperOffice.CRM.Cache.ConsentCache.WithdrawnBase
  isExternal: true
  name: WithdrawnBase
  nameWithType: ConsentCache.WithdrawnBase
  fullName: SuperOffice.CRM.Cache.ConsentCache.WithdrawnBase
- uid: SuperOffice.CRM.Cache.ConsentCache.EmarketingId*
  commentId: Overload:SuperOffice.CRM.Cache.ConsentCache.EmarketingId
  isExternal: true
  name: EmarketingId
  nameWithType: ConsentCache.EmarketingId
  fullName: SuperOffice.CRM.Cache.ConsentCache.EmarketingId
- uid: SuperOffice.CRM.Cache.ConsentCache.StoreId*
  commentId: Overload:SuperOffice.CRM.Cache.ConsentCache.StoreId
  isExternal: true
  name: StoreId
  nameWithType: ConsentCache.StoreId
  fullName: SuperOffice.CRM.Cache.ConsentCache.StoreId
