### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Cache.ConsentCache
  commentId: T:SuperOffice.CRM.Cache.ConsentCache
  id: ConsentCache
  parent: SuperOffice.CRM.Cache
  children:
  - SuperOffice.CRM.Cache.ConsentCache.#ctor
  - SuperOffice.CRM.Cache.ConsentCache.EmarketingId
  - SuperOffice.CRM.Cache.ConsentCache.GetConsentPurposeInfos
  - SuperOffice.CRM.Cache.ConsentCache.GetConsentSourceIdFromKey(System.String)
  - SuperOffice.CRM.Cache.ConsentCache.GetConsentSourceNameFromId(System.Int32)
  - SuperOffice.CRM.Cache.ConsentCache.GetLegalBaseIdFromKey(System.String)
  - SuperOffice.CRM.Cache.ConsentCache.GetLegalBaseNameFromId(System.Int32)
  - SuperOffice.CRM.Cache.ConsentCache.GetPurposeIdFromKey(System.String)
  - SuperOffice.CRM.Cache.ConsentCache.GetPurposeNameFromId(System.Int32)
  - SuperOffice.CRM.Cache.ConsentCache.OnLoad
  - SuperOffice.CRM.Cache.ConsentCache.OnLoadAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Cache.ConsentCache.StoreId
  - SuperOffice.CRM.Cache.ConsentCache.TableNames
  - SuperOffice.CRM.Cache.ConsentCache.WithdrawnBase
  langs:
  - csharp
  - vb
  name: ConsentCache
  nameWithType: ConsentCache
  fullName: SuperOffice.CRM.Cache.ConsentCache
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  syntax:
    content: >-
      [CacheV2(0)]

      public class ConsentCache : CacheBaseV2, IInstanceContainerDisposable
    content.vb: >-
      <CacheV2(0)>

      Public Class ConsentCache
          Inherits CacheBaseV2
          Implements IInstanceContainerDisposable
  inheritance:
  - System.Object
  - SuperOffice.Data.Cache.CacheBaseV2
  inheritedMembers:
  - SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidatedAsync(System.String,System.Int32,SuperOffice.Data.SQL.PrivateSave,System.Threading.CancellationToken)
  - SuperOffice.Data.Cache.CacheBaseV2.InstanceDispose
  - SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
  - SuperOffice.Data.Cache.CacheBaseV2.LoadAsync(System.Threading.CancellationToken)
  - SuperOffice.Data.Cache.CacheBaseV2.Load
  - SuperOffice.Data.Cache.CacheBaseV2.Disposed
  extensionMethods:
  - SuperOffice.CRM.Cache.ConsentCache.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Cache.ConsentCache.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Cache.ConsentCache)
  - SuperOffice.CRM.Cache.ConsentCache.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.CRM.Cache.ConsentCache.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  attributes:
  - type: SuperOffice.Data.Cache.CacheV2Attribute
    ctor: SuperOffice.Data.Cache.CacheV2Attribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 0
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Cache.ConsentCache.GetConsentPurposeInfos
  commentId: M:SuperOffice.CRM.Cache.ConsentCache.GetConsentPurposeInfos
  id: GetConsentPurposeInfos
  parent: SuperOffice.CRM.Cache.ConsentCache
  langs:
  - csharp
  - vb
  name: GetConsentPurposeInfos()
  nameWithType: ConsentCache.GetConsentPurposeInfos()
  fullName: SuperOffice.CRM.Cache.ConsentCache.GetConsentPurposeInfos()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  syntax:
    content: public IEnumerable<ConsentPurposeRecordData> GetConsentPurposeInfos()
    return:
      type: System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.ConsentPurposeRecordData}
    content.vb: Public Function GetConsentPurposeInfos As IEnumerable(Of ConsentPurposeRecordData)
  overload: SuperOffice.CRM.Cache.ConsentCache.GetConsentPurposeInfos*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.ConsentCache.GetPurposeNameFromId(System.Int32)
  commentId: M:SuperOffice.CRM.Cache.ConsentCache.GetPurposeNameFromId(System.Int32)
  id: GetPurposeNameFromId(System.Int32)
  parent: SuperOffice.CRM.Cache.ConsentCache
  langs:
  - csharp
  - vb
  name: GetPurposeNameFromId(Int32)
  nameWithType: ConsentCache.GetPurposeNameFromId(Int32)
  fullName: SuperOffice.CRM.Cache.ConsentCache.GetPurposeNameFromId(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  syntax:
    content: public string GetPurposeNameFromId(int id)
    parameters:
    - id: id
      type: System.Int32
    return:
      type: System.String
    content.vb: Public Function GetPurposeNameFromId(id As Integer) As String
  overload: SuperOffice.CRM.Cache.ConsentCache.GetPurposeNameFromId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.ConsentCache.GetLegalBaseNameFromId(System.Int32)
  commentId: M:SuperOffice.CRM.Cache.ConsentCache.GetLegalBaseNameFromId(System.Int32)
  id: GetLegalBaseNameFromId(System.Int32)
  parent: SuperOffice.CRM.Cache.ConsentCache
  langs:
  - csharp
  - vb
  name: GetLegalBaseNameFromId(Int32)
  nameWithType: ConsentCache.GetLegalBaseNameFromId(Int32)
  fullName: SuperOffice.CRM.Cache.ConsentCache.GetLegalBaseNameFromId(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  syntax:
    content: public string GetLegalBaseNameFromId(int id)
    parameters:
    - id: id
      type: System.Int32
    return:
      type: System.String
    content.vb: Public Function GetLegalBaseNameFromId(id As Integer) As String
  overload: SuperOffice.CRM.Cache.ConsentCache.GetLegalBaseNameFromId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.ConsentCache.GetConsentSourceNameFromId(System.Int32)
  commentId: M:SuperOffice.CRM.Cache.ConsentCache.GetConsentSourceNameFromId(System.Int32)
  id: GetConsentSourceNameFromId(System.Int32)
  parent: SuperOffice.CRM.Cache.ConsentCache
  langs:
  - csharp
  - vb
  name: GetConsentSourceNameFromId(Int32)
  nameWithType: ConsentCache.GetConsentSourceNameFromId(Int32)
  fullName: SuperOffice.CRM.Cache.ConsentCache.GetConsentSourceNameFromId(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  syntax:
    content: public string GetConsentSourceNameFromId(int id)
    parameters:
    - id: id
      type: System.Int32
    return:
      type: System.String
    content.vb: Public Function GetConsentSourceNameFromId(id As Integer) As String
  overload: SuperOffice.CRM.Cache.ConsentCache.GetConsentSourceNameFromId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.ConsentCache.GetPurposeIdFromKey(System.String)
  commentId: M:SuperOffice.CRM.Cache.ConsentCache.GetPurposeIdFromKey(System.String)
  id: GetPurposeIdFromKey(System.String)
  parent: SuperOffice.CRM.Cache.ConsentCache
  langs:
  - csharp
  - vb
  name: GetPurposeIdFromKey(String)
  nameWithType: ConsentCache.GetPurposeIdFromKey(String)
  fullName: SuperOffice.CRM.Cache.ConsentCache.GetPurposeIdFromKey(System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  syntax:
    content: public int GetPurposeIdFromKey(string key)
    parameters:
    - id: key
      type: System.String
    return:
      type: System.Int32
    content.vb: Public Function GetPurposeIdFromKey(key As String) As Integer
  overload: SuperOffice.CRM.Cache.ConsentCache.GetPurposeIdFromKey*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.ConsentCache.GetLegalBaseIdFromKey(System.String)
  commentId: M:SuperOffice.CRM.Cache.ConsentCache.GetLegalBaseIdFromKey(System.String)
  id: GetLegalBaseIdFromKey(System.String)
  parent: SuperOffice.CRM.Cache.ConsentCache
  langs:
  - csharp
  - vb
  name: GetLegalBaseIdFromKey(String)
  nameWithType: ConsentCache.GetLegalBaseIdFromKey(String)
  fullName: SuperOffice.CRM.Cache.ConsentCache.GetLegalBaseIdFromKey(System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  syntax:
    content: public int GetLegalBaseIdFromKey(string key)
    parameters:
    - id: key
      type: System.String
    return:
      type: System.Int32
    content.vb: Public Function GetLegalBaseIdFromKey(key As String) As Integer
  overload: SuperOffice.CRM.Cache.ConsentCache.GetLegalBaseIdFromKey*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.ConsentCache.GetConsentSourceIdFromKey(System.String)
  commentId: M:SuperOffice.CRM.Cache.ConsentCache.GetConsentSourceIdFromKey(System.String)
  id: GetConsentSourceIdFromKey(System.String)
  parent: SuperOffice.CRM.Cache.ConsentCache
  langs:
  - csharp
  - vb
  name: GetConsentSourceIdFromKey(String)
  nameWithType: ConsentCache.GetConsentSourceIdFromKey(String)
  fullName: SuperOffice.CRM.Cache.ConsentCache.GetConsentSourceIdFromKey(System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  syntax:
    content: public int GetConsentSourceIdFromKey(string key)
    parameters:
    - id: key
      type: System.String
    return:
      type: System.Int32
    content.vb: Public Function GetConsentSourceIdFromKey(key As String) As Integer
  overload: SuperOffice.CRM.Cache.ConsentCache.GetConsentSourceIdFromKey*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.ConsentCache.OnLoadAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Cache.ConsentCache.OnLoadAsync(System.Threading.CancellationToken)
  id: OnLoadAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Cache.ConsentCache
  langs:
  - csharp
  - vb
  name: OnLoadAsync(CancellationToken)
  nameWithType: ConsentCache.OnLoadAsync(CancellationToken)
  fullName: SuperOffice.CRM.Cache.ConsentCache.OnLoadAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  syntax:
    content: >-
      [CreateSyncVersion(OmitNullableDirective = true)]

      protected override Task OnLoadAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <CreateSyncVersion(OmitNullableDirective:=True)>

      Protected Overrides Function OnLoadAsync(cancellationToken As CancellationToken) As Task
  overridden: SuperOffice.Data.Cache.CacheBaseV2.OnLoadAsync(System.Threading.CancellationToken)
  overload: SuperOffice.CRM.Cache.ConsentCache.OnLoadAsync*
  attributes:
  - type: Zomp.SyncMethodGenerator.CreateSyncVersionAttribute
    ctor: Zomp.SyncMethodGenerator.CreateSyncVersionAttribute.#ctor
    arguments: []
    namedArguments:
    - name: OmitNullableDirective
      type: System.Boolean
      value: true
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Cache.ConsentCache.OnLoad
  commentId: M:SuperOffice.CRM.Cache.ConsentCache.OnLoad
  id: OnLoad
  parent: SuperOffice.CRM.Cache.ConsentCache
  langs:
  - csharp
  - vb
  name: OnLoad()
  nameWithType: ConsentCache.OnLoad()
  fullName: SuperOffice.CRM.Cache.ConsentCache.OnLoad()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  syntax:
    content: protected override void OnLoad()
    content.vb: Protected Overrides Sub OnLoad
  overridden: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
  overload: SuperOffice.CRM.Cache.ConsentCache.OnLoad*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Cache.ConsentCache.#ctor
  commentId: M:SuperOffice.CRM.Cache.ConsentCache.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.Cache.ConsentCache
  langs:
  - csharp
  - vb
  name: ConsentCache()
  nameWithType: ConsentCache.ConsentCache()
  fullName: SuperOffice.CRM.Cache.ConsentCache.ConsentCache()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  syntax:
    content: public ConsentCache()
    content.vb: Public Sub New
  overload: SuperOffice.CRM.Cache.ConsentCache.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.ConsentCache.WithdrawnBase
  commentId: P:SuperOffice.CRM.Cache.ConsentCache.WithdrawnBase
  id: WithdrawnBase
  parent: SuperOffice.CRM.Cache.ConsentCache
  langs:
  - csharp
  - vb
  name: WithdrawnBase
  nameWithType: ConsentCache.WithdrawnBase
  fullName: SuperOffice.CRM.Cache.ConsentCache.WithdrawnBase
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  syntax:
    content: public int WithdrawnBase { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property WithdrawnBase As Integer
  overload: SuperOffice.CRM.Cache.ConsentCache.WithdrawnBase*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Cache.ConsentCache.EmarketingId
  commentId: P:SuperOffice.CRM.Cache.ConsentCache.EmarketingId
  id: EmarketingId
  parent: SuperOffice.CRM.Cache.ConsentCache
  langs:
  - csharp
  - vb
  name: EmarketingId
  nameWithType: ConsentCache.EmarketingId
  fullName: SuperOffice.CRM.Cache.ConsentCache.EmarketingId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  syntax:
    content: public int EmarketingId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property EmarketingId As Integer
  overload: SuperOffice.CRM.Cache.ConsentCache.EmarketingId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Cache.ConsentCache.StoreId
  commentId: P:SuperOffice.CRM.Cache.ConsentCache.StoreId
  id: StoreId
  parent: SuperOffice.CRM.Cache.ConsentCache
  langs:
  - csharp
  - vb
  name: StoreId
  nameWithType: ConsentCache.StoreId
  fullName: SuperOffice.CRM.Cache.ConsentCache.StoreId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  syntax:
    content: public int StoreId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property StoreId As Integer
  overload: SuperOffice.CRM.Cache.ConsentCache.StoreId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Cache.ConsentCache.TableNames
  commentId: P:SuperOffice.CRM.Cache.ConsentCache.TableNames
  id: TableNames
  parent: SuperOffice.CRM.Cache.ConsentCache
  langs:
  - csharp
  - vb
  name: TableNames
  nameWithType: ConsentCache.TableNames
  fullName: SuperOffice.CRM.Cache.ConsentCache.TableNames
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  syntax:
    content: protected override IEnumerable<string> TableNames { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Protected Overrides ReadOnly Property TableNames As IEnumerable(Of String)
  overridden: SuperOffice.Data.Cache.CacheBaseV2.TableNames
  overload: SuperOffice.CRM.Cache.ConsentCache.TableNames*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
references:
- uid: SuperOffice.CRM.Cache
  commentId: N:SuperOffice.CRM.Cache
  isExternal: true
  name: SuperOffice.CRM.Cache
  nameWithType: SuperOffice.CRM.Cache
  fullName: SuperOffice.CRM.Cache
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Data.Cache.CacheBaseV2
  commentId: T:SuperOffice.Data.Cache.CacheBaseV2
  parent: SuperOffice.Data.Cache
  isExternal: true
  name: CacheBaseV2
  nameWithType: CacheBaseV2
  fullName: SuperOffice.Data.Cache.CacheBaseV2
- uid: SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidatedAsync(System.String,System.Int32,SuperOffice.Data.SQL.PrivateSave,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidatedAsync(System.String,System.Int32,SuperOffice.Data.SQL.PrivateSave,System.Threading.CancellationToken)
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: IsCacheInvalidatedAsync(String, Int32, PrivateSave, CancellationToken)
  nameWithType: CacheBaseV2.IsCacheInvalidatedAsync(String, Int32, PrivateSave, CancellationToken)
  fullName: SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidatedAsync(System.String, System.Int32, SuperOffice.Data.SQL.PrivateSave, System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidatedAsync(System.String,System.Int32,SuperOffice.Data.SQL.PrivateSave,System.Threading.CancellationToken)
    name: IsCacheInvalidatedAsync
    nameWithType: CacheBaseV2.IsCacheInvalidatedAsync
    fullName: SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidatedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.PrivateSave
    name: PrivateSave
    nameWithType: PrivateSave
    fullName: SuperOffice.Data.SQL.PrivateSave
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidatedAsync(System.String,System.Int32,SuperOffice.Data.SQL.PrivateSave,System.Threading.CancellationToken)
    name: IsCacheInvalidatedAsync
    nameWithType: CacheBaseV2.IsCacheInvalidatedAsync
    fullName: SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidatedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.PrivateSave
    name: PrivateSave
    nameWithType: PrivateSave
    fullName: SuperOffice.Data.SQL.PrivateSave
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Cache.CacheBaseV2.InstanceDispose
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.InstanceDispose
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: InstanceDispose()
  nameWithType: CacheBaseV2.InstanceDispose()
  fullName: SuperOffice.Data.Cache.CacheBaseV2.InstanceDispose()
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.InstanceDispose
    name: InstanceDispose
    nameWithType: CacheBaseV2.InstanceDispose
    fullName: SuperOffice.Data.Cache.CacheBaseV2.InstanceDispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.InstanceDispose
    name: InstanceDispose
    nameWithType: CacheBaseV2.InstanceDispose
    fullName: SuperOffice.Data.Cache.CacheBaseV2.InstanceDispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: BeginDisableAutoUpdate()
  nameWithType: CacheBaseV2.BeginDisableAutoUpdate()
  fullName: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate()
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
    name: BeginDisableAutoUpdate
    nameWithType: CacheBaseV2.BeginDisableAutoUpdate
    fullName: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
    name: BeginDisableAutoUpdate
    nameWithType: CacheBaseV2.BeginDisableAutoUpdate
    fullName: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Cache.CacheBaseV2.LoadAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.LoadAsync(System.Threading.CancellationToken)
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: LoadAsync(CancellationToken)
  nameWithType: CacheBaseV2.LoadAsync(CancellationToken)
  fullName: SuperOffice.Data.Cache.CacheBaseV2.LoadAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.LoadAsync(System.Threading.CancellationToken)
    name: LoadAsync
    nameWithType: CacheBaseV2.LoadAsync
    fullName: SuperOffice.Data.Cache.CacheBaseV2.LoadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.LoadAsync(System.Threading.CancellationToken)
    name: LoadAsync
    nameWithType: CacheBaseV2.LoadAsync
    fullName: SuperOffice.Data.Cache.CacheBaseV2.LoadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Cache.CacheBaseV2.Load
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.Load
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: Load()
  nameWithType: CacheBaseV2.Load()
  fullName: SuperOffice.Data.Cache.CacheBaseV2.Load()
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.Load
    name: Load
    nameWithType: CacheBaseV2.Load
    fullName: SuperOffice.Data.Cache.CacheBaseV2.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.Load
    name: Load
    nameWithType: CacheBaseV2.Load
    fullName: SuperOffice.Data.Cache.CacheBaseV2.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Cache.CacheBaseV2.Disposed
  commentId: P:SuperOffice.Data.Cache.CacheBaseV2.Disposed
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: Disposed
  nameWithType: CacheBaseV2.Disposed
  fullName: SuperOffice.Data.Cache.CacheBaseV2.Disposed
- uid: SuperOffice.CRM.Cache.ConsentCache.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<ConsentCache, To>()
  nameWithType: EnumUtil.MapEnums<ConsentCache, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Cache.ConsentCache, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of ConsentCache, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Cache.ConsentCache, To)()
  name.vb: MapEnums(Of ConsentCache, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<ConsentCache, To>
    nameWithType: EnumUtil.MapEnums<ConsentCache, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Cache.ConsentCache, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of ConsentCache, To)
    nameWithType: EnumUtil.MapEnums(Of ConsentCache, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Cache.ConsentCache, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Cache.ConsentCache.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Cache.ConsentCache)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<ConsentCache>(ConsentCache)
  nameWithType: ObjectExtensions.AssignByReflection<ConsentCache>(ConsentCache)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Cache.ConsentCache>(SuperOffice.CRM.Cache.ConsentCache)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of ConsentCache)(ConsentCache)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Cache.ConsentCache)(SuperOffice.CRM.Cache.ConsentCache)
  name.vb: AssignByReflection(Of ConsentCache)(ConsentCache)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<ConsentCache>
    nameWithType: ObjectExtensions.AssignByReflection<ConsentCache>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Cache.ConsentCache>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Cache.ConsentCache
    name: ConsentCache
    nameWithType: ConsentCache
    fullName: SuperOffice.CRM.Cache.ConsentCache
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of ConsentCache)
    nameWithType: ObjectExtensions.AssignByReflection(Of ConsentCache)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Cache.ConsentCache)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Cache.ConsentCache
    name: ConsentCache
    nameWithType: ConsentCache
    fullName: SuperOffice.CRM.Cache.ConsentCache
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Cache.ConsentCache.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<ConsentCache>()
  nameWithType: ObjectExtensions.GraphCopy<ConsentCache>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Cache.ConsentCache>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of ConsentCache)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Cache.ConsentCache)()
  name.vb: GraphCopy(Of ConsentCache)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<ConsentCache>
    nameWithType: ObjectExtensions.GraphCopy<ConsentCache>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Cache.ConsentCache>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of ConsentCache)
    nameWithType: ObjectExtensions.GraphCopy(Of ConsentCache)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Cache.ConsentCache)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Cache.ConsentCache.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<ConsentCache, To>()
  nameWithType: Converters.MapEnums<ConsentCache, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Cache.ConsentCache, To>()
  nameWithType.vb: Converters.MapEnums(Of ConsentCache, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Cache.ConsentCache, To)()
  name.vb: MapEnums(Of ConsentCache, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<ConsentCache, To>
    nameWithType: Converters.MapEnums<ConsentCache, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Cache.ConsentCache, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of ConsentCache, To)
    nameWithType: Converters.MapEnums(Of ConsentCache, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Cache.ConsentCache, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Data.Cache
  commentId: N:SuperOffice.Data.Cache
  isExternal: true
  name: SuperOffice.Data.Cache
  nameWithType: SuperOffice.Data.Cache
  fullName: SuperOffice.Data.Cache
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Cache.ConsentCache.GetConsentPurposeInfos*
  commentId: Overload:SuperOffice.CRM.Cache.ConsentCache.GetConsentPurposeInfos
  isExternal: true
  name: GetConsentPurposeInfos
  nameWithType: ConsentCache.GetConsentPurposeInfos
  fullName: SuperOffice.CRM.Cache.ConsentCache.GetConsentPurposeInfos
- uid: System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.ConsentPurposeRecordData}
  commentId: '!:System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.ConsentPurposeRecordData}'
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ConsentPurposeRecordData>
  nameWithType: IEnumerable<ConsentPurposeRecordData>
  fullName: System.Collections.Generic.IEnumerable<SuperOffice.CRM.Rows.ConsentPurposeRecordData>
  nameWithType.vb: IEnumerable(Of ConsentPurposeRecordData)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SuperOffice.CRM.Rows.ConsentPurposeRecordData)
  name.vb: IEnumerable(Of ConsentPurposeRecordData)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Rows.ConsentPurposeRecordData
    name: ConsentPurposeRecordData
    nameWithType: ConsentPurposeRecordData
    fullName: SuperOffice.CRM.Rows.ConsentPurposeRecordData
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Rows.ConsentPurposeRecordData
    name: ConsentPurposeRecordData
    nameWithType: ConsentPurposeRecordData
    fullName: SuperOffice.CRM.Rows.ConsentPurposeRecordData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Cache.ConsentCache.GetPurposeNameFromId*
  commentId: Overload:SuperOffice.CRM.Cache.ConsentCache.GetPurposeNameFromId
  isExternal: true
  name: GetPurposeNameFromId
  nameWithType: ConsentCache.GetPurposeNameFromId
  fullName: SuperOffice.CRM.Cache.ConsentCache.GetPurposeNameFromId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.Cache.ConsentCache.GetLegalBaseNameFromId*
  commentId: Overload:SuperOffice.CRM.Cache.ConsentCache.GetLegalBaseNameFromId
  isExternal: true
  name: GetLegalBaseNameFromId
  nameWithType: ConsentCache.GetLegalBaseNameFromId
  fullName: SuperOffice.CRM.Cache.ConsentCache.GetLegalBaseNameFromId
- uid: SuperOffice.CRM.Cache.ConsentCache.GetConsentSourceNameFromId*
  commentId: Overload:SuperOffice.CRM.Cache.ConsentCache.GetConsentSourceNameFromId
  isExternal: true
  name: GetConsentSourceNameFromId
  nameWithType: ConsentCache.GetConsentSourceNameFromId
  fullName: SuperOffice.CRM.Cache.ConsentCache.GetConsentSourceNameFromId
- uid: SuperOffice.CRM.Cache.ConsentCache.GetPurposeIdFromKey*
  commentId: Overload:SuperOffice.CRM.Cache.ConsentCache.GetPurposeIdFromKey
  isExternal: true
  name: GetPurposeIdFromKey
  nameWithType: ConsentCache.GetPurposeIdFromKey
  fullName: SuperOffice.CRM.Cache.ConsentCache.GetPurposeIdFromKey
- uid: SuperOffice.CRM.Cache.ConsentCache.GetLegalBaseIdFromKey*
  commentId: Overload:SuperOffice.CRM.Cache.ConsentCache.GetLegalBaseIdFromKey
  isExternal: true
  name: GetLegalBaseIdFromKey
  nameWithType: ConsentCache.GetLegalBaseIdFromKey
  fullName: SuperOffice.CRM.Cache.ConsentCache.GetLegalBaseIdFromKey
- uid: SuperOffice.CRM.Cache.ConsentCache.GetConsentSourceIdFromKey*
  commentId: Overload:SuperOffice.CRM.Cache.ConsentCache.GetConsentSourceIdFromKey
  isExternal: true
  name: GetConsentSourceIdFromKey
  nameWithType: ConsentCache.GetConsentSourceIdFromKey
  fullName: SuperOffice.CRM.Cache.ConsentCache.GetConsentSourceIdFromKey
- uid: SuperOffice.Data.Cache.CacheBaseV2.OnLoadAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.OnLoadAsync(System.Threading.CancellationToken)
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: OnLoadAsync(CancellationToken)
  nameWithType: CacheBaseV2.OnLoadAsync(CancellationToken)
  fullName: SuperOffice.Data.Cache.CacheBaseV2.OnLoadAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.OnLoadAsync(System.Threading.CancellationToken)
    name: OnLoadAsync
    nameWithType: CacheBaseV2.OnLoadAsync
    fullName: SuperOffice.Data.Cache.CacheBaseV2.OnLoadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.OnLoadAsync(System.Threading.CancellationToken)
    name: OnLoadAsync
    nameWithType: CacheBaseV2.OnLoadAsync
    fullName: SuperOffice.Data.Cache.CacheBaseV2.OnLoadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Cache.ConsentCache.OnLoadAsync*
  commentId: Overload:SuperOffice.CRM.Cache.ConsentCache.OnLoadAsync
  isExternal: true
  name: OnLoadAsync
  nameWithType: ConsentCache.OnLoadAsync
  fullName: SuperOffice.CRM.Cache.ConsentCache.OnLoadAsync
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.OnLoad
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: OnLoad()
  nameWithType: CacheBaseV2.OnLoad()
  fullName: SuperOffice.Data.Cache.CacheBaseV2.OnLoad()
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
    name: OnLoad
    nameWithType: CacheBaseV2.OnLoad
    fullName: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
    name: OnLoad
    nameWithType: CacheBaseV2.OnLoad
    fullName: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Cache.ConsentCache.OnLoad*
  commentId: Overload:SuperOffice.CRM.Cache.ConsentCache.OnLoad
  isExternal: true
  name: OnLoad
  nameWithType: ConsentCache.OnLoad
  fullName: SuperOffice.CRM.Cache.ConsentCache.OnLoad
- uid: SuperOffice.CRM.Cache.ConsentCache.#ctor*
  commentId: Overload:SuperOffice.CRM.Cache.ConsentCache.#ctor
  isExternal: true
  name: ConsentCache
  nameWithType: ConsentCache.ConsentCache
  fullName: SuperOffice.CRM.Cache.ConsentCache.ConsentCache
- uid: SuperOffice.CRM.Cache.ConsentCache.WithdrawnBase*
  commentId: Overload:SuperOffice.CRM.Cache.ConsentCache.WithdrawnBase
  isExternal: true
  name: WithdrawnBase
  nameWithType: ConsentCache.WithdrawnBase
  fullName: SuperOffice.CRM.Cache.ConsentCache.WithdrawnBase
- uid: SuperOffice.CRM.Cache.ConsentCache.EmarketingId*
  commentId: Overload:SuperOffice.CRM.Cache.ConsentCache.EmarketingId
  isExternal: true
  name: EmarketingId
  nameWithType: ConsentCache.EmarketingId
  fullName: SuperOffice.CRM.Cache.ConsentCache.EmarketingId
- uid: SuperOffice.CRM.Cache.ConsentCache.StoreId*
  commentId: Overload:SuperOffice.CRM.Cache.ConsentCache.StoreId
  isExternal: true
  name: StoreId
  nameWithType: ConsentCache.StoreId
  fullName: SuperOffice.CRM.Cache.ConsentCache.StoreId
- uid: SuperOffice.Data.Cache.CacheBaseV2.TableNames
  commentId: P:SuperOffice.Data.Cache.CacheBaseV2.TableNames
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: TableNames
  nameWithType: CacheBaseV2.TableNames
  fullName: SuperOffice.Data.Cache.CacheBaseV2.TableNames
- uid: SuperOffice.CRM.Cache.ConsentCache.TableNames*
  commentId: Overload:SuperOffice.CRM.Cache.ConsentCache.TableNames
  isExternal: true
  name: TableNames
  nameWithType: ConsentCache.TableNames
  fullName: SuperOffice.CRM.Cache.ConsentCache.TableNames
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: '!:System.Collections.Generic.IEnumerable{System.String}'
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
