### YamlMime:ManagedReference
items:
- uid: SuperOffice.Security.Principal.INSPrincipalAccessor
  commentId: T:SuperOffice.Security.Principal.INSPrincipalAccessor
  id: INSPrincipalAccessor
  parent: SuperOffice.Security.Principal
  children:
  - SuperOffice.Security.Principal.INSPrincipalAccessor.SignIn(System.Security.Claims.ClaimsPrincipal)
  - SuperOffice.Security.Principal.INSPrincipalAccessor.SignInWithTemporaryUser(System.Security.Claims.ClaimsPrincipal,System.Boolean)
  - SuperOffice.Security.Principal.INSPrincipalAccessor.SignOut
  - SuperOffice.Security.Principal.INSPrincipalAccessor.User
  langs:
  - csharp
  - vb
  name: INSPrincipalAccessor
  nameWithType: INSPrincipalAccessor
  fullName: SuperOffice.Security.Principal.INSPrincipalAccessor
  type: Interface
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: "\nAccessor for NetServer&apos;s current user.\n"
  syntax:
    content: public interface INSPrincipalAccessor
    content.vb: Public Interface INSPrincipalAccessor
  extensionMethods:
  - SuperOffice.Security.Principal.INSPrincipalAccessor.EnumUtil.MapEnums``2
  - SuperOffice.Security.Principal.INSPrincipalAccessor.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.Security.Principal.INSPrincipalAccessor.SignIn(System.Security.Claims.ClaimsPrincipal)
  commentId: M:SuperOffice.Security.Principal.INSPrincipalAccessor.SignIn(System.Security.Claims.ClaimsPrincipal)
  id: SignIn(System.Security.Claims.ClaimsPrincipal)
  parent: SuperOffice.Security.Principal.INSPrincipalAccessor
  langs:
  - csharp
  - vb
  name: SignIn(ClaimsPrincipal)
  nameWithType: INSPrincipalAccessor.SignIn(ClaimsPrincipal)
  fullName: SuperOffice.Security.Principal.INSPrincipalAccessor.SignIn(System.Security.Claims.ClaimsPrincipal)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: "\nSign in with the current user.\n"
  syntax:
    content: void SignIn(ClaimsPrincipal user)
    parameters:
    - id: user
      type: System.Security.Claims.ClaimsPrincipal
    content.vb: Sub SignIn(user As ClaimsPrincipal)
  overload: SuperOffice.Security.Principal.INSPrincipalAccessor.SignIn*
- uid: SuperOffice.Security.Principal.INSPrincipalAccessor.SignOut
  commentId: M:SuperOffice.Security.Principal.INSPrincipalAccessor.SignOut
  id: SignOut
  parent: SuperOffice.Security.Principal.INSPrincipalAccessor
  langs:
  - csharp
  - vb
  name: SignOut()
  nameWithType: INSPrincipalAccessor.SignOut()
  fullName: SuperOffice.Security.Principal.INSPrincipalAccessor.SignOut()
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: "\nSign out the current user.\n"
  syntax:
    content: void SignOut()
    content.vb: Sub SignOut
  overload: SuperOffice.Security.Principal.INSPrincipalAccessor.SignOut*
- uid: SuperOffice.Security.Principal.INSPrincipalAccessor.SignInWithTemporaryUser(System.Security.Claims.ClaimsPrincipal,System.Boolean)
  commentId: M:SuperOffice.Security.Principal.INSPrincipalAccessor.SignInWithTemporaryUser(System.Security.Claims.ClaimsPrincipal,System.Boolean)
  id: SignInWithTemporaryUser(System.Security.Claims.ClaimsPrincipal,System.Boolean)
  parent: SuperOffice.Security.Principal.INSPrincipalAccessor
  langs:
  - csharp
  - vb
  name: SignInWithTemporaryUser(ClaimsPrincipal, Boolean)
  nameWithType: INSPrincipalAccessor.SignInWithTemporaryUser(ClaimsPrincipal, Boolean)
  fullName: SuperOffice.Security.Principal.INSPrincipalAccessor.SignInWithTemporaryUser(System.Security.Claims.ClaimsPrincipal, System.Boolean)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: "\nSign in with a temporary user\n"
  syntax:
    content: IDisposable SignInWithTemporaryUser(ClaimsPrincipal user, bool forceCleanStack = false)
    parameters:
    - id: user
      type: System.Security.Claims.ClaimsPrincipal
      description: User to set as temporary user
    - id: forceCleanStack
      type: System.Boolean
      description: "\nIf true, the current user stack will be cleared for the corrent\nasync local context, before setting the current user.\n"
    return:
      type: System.IDisposable
      description: Disposing the result dispoes of the current user and popps the stack
    content.vb: Function SignInWithTemporaryUser(user As ClaimsPrincipal, forceCleanStack As Boolean = False) As IDisposable
  overload: SuperOffice.Security.Principal.INSPrincipalAccessor.SignInWithTemporaryUser*
- uid: SuperOffice.Security.Principal.INSPrincipalAccessor.User
  commentId: P:SuperOffice.Security.Principal.INSPrincipalAccessor.User
  id: User
  parent: SuperOffice.Security.Principal.INSPrincipalAccessor
  langs:
  - csharp
  - vb
  name: User
  nameWithType: INSPrincipalAccessor.User
  fullName: SuperOffice.Security.Principal.INSPrincipalAccessor.User
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: "\nGet the current user-\n"
  syntax:
    content: ClaimsPrincipal User { get; }
    parameters: []
    return:
      type: System.Security.Claims.ClaimsPrincipal
    content.vb: ReadOnly Property User As ClaimsPrincipal
  overload: SuperOffice.Security.Principal.INSPrincipalAccessor.User*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: SuperOffice.Security.Principal
  commentId: N:SuperOffice.Security.Principal
  isExternal: true
  name: SuperOffice.Security.Principal
  nameWithType: SuperOffice.Security.Principal
  fullName: SuperOffice.Security.Principal
- uid: SuperOffice.Security.Principal.INSPrincipalAccessor.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<INSPrincipalAccessor, To>()
  nameWithType: EnumUtil.MapEnums<INSPrincipalAccessor, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Security.Principal.INSPrincipalAccessor, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of INSPrincipalAccessor, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Security.Principal.INSPrincipalAccessor, To)()
  name.vb: MapEnums(Of INSPrincipalAccessor, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<INSPrincipalAccessor, To>
    nameWithType: EnumUtil.MapEnums<INSPrincipalAccessor, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Security.Principal.INSPrincipalAccessor, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of INSPrincipalAccessor, To)
    nameWithType: EnumUtil.MapEnums(Of INSPrincipalAccessor, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Security.Principal.INSPrincipalAccessor, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Security.Principal.INSPrincipalAccessor.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<INSPrincipalAccessor, To>()
  nameWithType: Converters.MapEnums<INSPrincipalAccessor, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Security.Principal.INSPrincipalAccessor, To>()
  nameWithType.vb: Converters.MapEnums(Of INSPrincipalAccessor, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Security.Principal.INSPrincipalAccessor, To)()
  name.vb: MapEnums(Of INSPrincipalAccessor, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<INSPrincipalAccessor, To>
    nameWithType: Converters.MapEnums<INSPrincipalAccessor, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Security.Principal.INSPrincipalAccessor, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of INSPrincipalAccessor, To)
    nameWithType: Converters.MapEnums(Of INSPrincipalAccessor, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Security.Principal.INSPrincipalAccessor, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Security.Principal.INSPrincipalAccessor.SignIn*
  commentId: Overload:SuperOffice.Security.Principal.INSPrincipalAccessor.SignIn
  isExternal: true
  name: SignIn
  nameWithType: INSPrincipalAccessor.SignIn
  fullName: SuperOffice.Security.Principal.INSPrincipalAccessor.SignIn
- uid: System.Security.Claims.ClaimsPrincipal
  isExternal: true
  name: ClaimsPrincipal
  nameWithType: ClaimsPrincipal
  fullName: System.Security.Claims.ClaimsPrincipal
- uid: SuperOffice.Security.Principal.INSPrincipalAccessor.SignOut*
  commentId: Overload:SuperOffice.Security.Principal.INSPrincipalAccessor.SignOut
  isExternal: true
  name: SignOut
  nameWithType: INSPrincipalAccessor.SignOut
  fullName: SuperOffice.Security.Principal.INSPrincipalAccessor.SignOut
- uid: SuperOffice.Security.Principal.INSPrincipalAccessor.SignInWithTemporaryUser*
  commentId: Overload:SuperOffice.Security.Principal.INSPrincipalAccessor.SignInWithTemporaryUser
  isExternal: true
  name: SignInWithTemporaryUser
  nameWithType: INSPrincipalAccessor.SignInWithTemporaryUser
  fullName: SuperOffice.Security.Principal.INSPrincipalAccessor.SignInWithTemporaryUser
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IDisposable
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Security.Principal.INSPrincipalAccessor.User*
  commentId: Overload:SuperOffice.Security.Principal.INSPrincipalAccessor.User
  isExternal: true
  name: User
  nameWithType: INSPrincipalAccessor.User
  fullName: SuperOffice.Security.Principal.INSPrincipalAccessor.User
