### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.ArchiveLists.ArchiveSelect
  commentId: T:SuperOffice.CRM.ArchiveLists.ArchiveSelect
  id: ArchiveSelect
  parent: SuperOffice.CRM.ArchiveLists
  children:
  - SuperOffice.CRM.ArchiveLists.ArchiveSelect.#ctor
  - SuperOffice.CRM.ArchiveLists.ArchiveSelect.#ctor(System.String)
  - SuperOffice.CRM.ArchiveLists.ArchiveSelect.AddExpansion(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo,SuperOffice.Data.SQL.Restriction)
  - SuperOffice.CRM.ArchiveLists.ArchiveSelect.DoNotConvertOuterJoinsToInnerJoins
  - SuperOffice.CRM.ArchiveLists.ArchiveSelect.ExpansionHolder
  - SuperOffice.CRM.ArchiveLists.ArchiveSelect.Options
  - SuperOffice.CRM.ArchiveLists.ArchiveSelect.Query
  langs:
  - csharp
  - vb
  name: ArchiveSelect
  nameWithType: ArchiveSelect
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveSelect
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nTo implement parsing of more complex queries, the Archive Providers need to handle a combination of a &quot;real&quot; query\nand a place to hold expansions of individual restrictions until they can be put together properly. This class is\nthe vehicle for that. See <xref href=\"SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper\" data-throw-if-not-resolved=\"false\"></xref> for details.\n"
  syntax:
    content: public class ArchiveSelect
    content.vb: Public Class ArchiveSelect
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.ArchiveLists.ArchiveSelect.EnumUtil.MapEnums``2
  - SuperOffice.CRM.ArchiveLists.ArchiveSelect.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.ArchiveLists.ArchiveSelect)
  - SuperOffice.CRM.ArchiveLists.ArchiveSelect.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.CRM.ArchiveLists.ArchiveSelect.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.ArchiveLists.ArchiveSelect.Query
  commentId: F:SuperOffice.CRM.ArchiveLists.ArchiveSelect.Query
  id: Query
  parent: SuperOffice.CRM.ArchiveLists.ArchiveSelect
  langs:
  - csharp
  - vb
  name: Query
  nameWithType: ArchiveSelect.Query
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveSelect.Query
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nThe SQL query being built\n"
  syntax:
    content: public Select Query
    return:
      type: SuperOffice.Data.SQL.Select
    content.vb: 'Public Query As '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.ArchiveSelect.ExpansionHolder
  commentId: F:SuperOffice.CRM.ArchiveLists.ArchiveSelect.ExpansionHolder
  id: ExpansionHolder
  parent: SuperOffice.CRM.ArchiveLists.ArchiveSelect
  langs:
  - csharp
  - vb
  name: ExpansionHolder
  nameWithType: ArchiveSelect.ExpansionHolder
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveSelect.ExpansionHolder
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nHolding data structure for restriction expansions that are NOT directly appended\nto the <xref href=\"SuperOffice.CRM.ArchiveLists.ArchiveSelect.Query\" data-throw-if-not-resolved=\"false\"></xref>; putting restrictions on hold here is the NORMAL CASE.\n"
  syntax:
    content: public RestrictionExpansionHolder ExpansionHolder
    return:
      type: SuperOffice.CRM.ArchiveLists.RestrictionExpansionHolder
    content.vb: Public ExpansionHolder As RestrictionExpansionHolder
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.ArchiveSelect.Options
  commentId: F:SuperOffice.CRM.ArchiveLists.ArchiveSelect.Options
  id: Options
  parent: SuperOffice.CRM.ArchiveLists.ArchiveSelect
  langs:
  - csharp
  - vb
  name: Options
  nameWithType: ArchiveSelect.Options
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveSelect.Options
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nOptions, passed in through GetRows() and available to anyone\n"
  syntax:
    content: public string Options
    return:
      type: System.String
    content.vb: Public Options As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.ArchiveSelect.DoNotConvertOuterJoinsToInnerJoins
  commentId: F:SuperOffice.CRM.ArchiveLists.ArchiveSelect.DoNotConvertOuterJoinsToInnerJoins
  id: DoNotConvertOuterJoinsToInnerJoins
  parent: SuperOffice.CRM.ArchiveLists.ArchiveSelect
  langs:
  - csharp
  - vb
  name: DoNotConvertOuterJoinsToInnerJoins
  nameWithType: ArchiveSelect.DoNotConvertOuterJoinsToInnerJoins
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveSelect.DoNotConvertOuterJoinsToInnerJoins
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nBy default we convert left outer joins to inner joins when there are restrictions on them; CS uses\nmultiple joins with OR between adjacent-table restrictions and then we need to turn this behaviour OFF.\nQuite possibly the whole left outer to inner conversion was a bad idea in the first case, caused by\ninsufficient understanding of the finer points of SQL :-(. We live &amp; learn.\n"
  syntax:
    content: public bool DoNotConvertOuterJoinsToInnerJoins
    return:
      type: System.Boolean
    content.vb: Public DoNotConvertOuterJoinsToInnerJoins As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.ArchiveSelect.AddExpansion(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo,SuperOffice.Data.SQL.Restriction)
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveSelect.AddExpansion(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo,SuperOffice.Data.SQL.Restriction)
  id: AddExpansion(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo,SuperOffice.Data.SQL.Restriction)
  parent: SuperOffice.CRM.ArchiveLists.ArchiveSelect
  langs:
  - csharp
  - vb
  name: AddExpansion(ArchiveRestrictionInfo, Restriction)
  nameWithType: ArchiveSelect.AddExpansion(ArchiveRestrictionInfo, Restriction)
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveSelect.AddExpansion(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo, SuperOffice.Data.SQL.Restriction)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nAdd an expansion of an ArchiveRestrictionInfo to the holding structure\n"
  syntax:
    content: public void AddExpansion(ArchiveRestrictionInfo restriction, Restriction expansion)
    parameters:
    - id: restriction
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
      description: Restriction definition we are expanding
    - id: expansion
      type: SuperOffice.Data.SQL.Restriction
      description: The SQL Restriction that this definition has been expanded to
    content.vb: Public Sub AddExpansion(restriction As ArchiveRestrictionInfo, expansion As Restriction)
  overload: SuperOffice.CRM.ArchiveLists.ArchiveSelect.AddExpansion*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.ArchiveSelect.#ctor(System.String)
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveSelect.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: SuperOffice.CRM.ArchiveLists.ArchiveSelect
  langs:
  - csharp
  - vb
  name: ArchiveSelect(String)
  nameWithType: ArchiveSelect.ArchiveSelect(String)
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveSelect.ArchiveSelect(System.String)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nSimple constructor\n"
  syntax:
    content: public ArchiveSelect(string origin)
    parameters:
    - id: origin
      type: System.String
    content.vb: Public Sub New(origin As String)
  overload: SuperOffice.CRM.ArchiveLists.ArchiveSelect.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.ArchiveSelect.#ctor
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveSelect.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.ArchiveLists.ArchiveSelect
  langs:
  - csharp
  - vb
  name: ArchiveSelect()
  nameWithType: ArchiveSelect.ArchiveSelect()
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveSelect.ArchiveSelect()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nEven simple constructor (no origin name)\n"
  syntax:
    content: public ArchiveSelect()
    content.vb: Public Sub New
  overload: SuperOffice.CRM.ArchiveLists.ArchiveSelect.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.CRM.ArchiveLists
  commentId: N:SuperOffice.CRM.ArchiveLists
  isExternal: true
  name: SuperOffice.CRM.ArchiveLists
  nameWithType: SuperOffice.CRM.ArchiveLists
  fullName: SuperOffice.CRM.ArchiveLists
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.ArchiveSelect.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<ArchiveSelect, To>()
  nameWithType: EnumUtil.MapEnums<ArchiveSelect, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.ArchiveLists.ArchiveSelect, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of ArchiveSelect, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.ArchiveLists.ArchiveSelect, To)()
  name.vb: MapEnums(Of ArchiveSelect, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<ArchiveSelect, To>
    nameWithType: EnumUtil.MapEnums<ArchiveSelect, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.ArchiveLists.ArchiveSelect, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of ArchiveSelect, To)
    nameWithType: EnumUtil.MapEnums(Of ArchiveSelect, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.ArchiveLists.ArchiveSelect, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.ArchiveSelect.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.ArchiveLists.ArchiveSelect)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<ArchiveSelect>(ArchiveSelect)
  nameWithType: ObjectExtensions.AssignByReflection<ArchiveSelect>(ArchiveSelect)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.ArchiveLists.ArchiveSelect>(SuperOffice.CRM.ArchiveLists.ArchiveSelect)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of ArchiveSelect)(ArchiveSelect)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.ArchiveLists.ArchiveSelect)(SuperOffice.CRM.ArchiveLists.ArchiveSelect)
  name.vb: AssignByReflection(Of ArchiveSelect)(ArchiveSelect)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<ArchiveSelect>
    nameWithType: ObjectExtensions.AssignByReflection<ArchiveSelect>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.ArchiveLists.ArchiveSelect>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveSelect
    name: ArchiveSelect
    nameWithType: ArchiveSelect
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveSelect
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of ArchiveSelect)
    nameWithType: ObjectExtensions.AssignByReflection(Of ArchiveSelect)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.ArchiveLists.ArchiveSelect)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveSelect
    name: ArchiveSelect
    nameWithType: ArchiveSelect
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveSelect
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.ArchiveSelect.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<ArchiveSelect>()
  nameWithType: ObjectExtensions.GraphCopy<ArchiveSelect>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.ArchiveLists.ArchiveSelect>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of ArchiveSelect)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.ArchiveLists.ArchiveSelect)()
  name.vb: GraphCopy(Of ArchiveSelect)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<ArchiveSelect>
    nameWithType: ObjectExtensions.GraphCopy<ArchiveSelect>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.ArchiveLists.ArchiveSelect>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of ArchiveSelect)
    nameWithType: ObjectExtensions.GraphCopy(Of ArchiveSelect)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.ArchiveLists.ArchiveSelect)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.ArchiveSelect.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<ArchiveSelect, To>()
  nameWithType: Converters.MapEnums<ArchiveSelect, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.ArchiveLists.ArchiveSelect, To>()
  nameWithType.vb: Converters.MapEnums(Of ArchiveSelect, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.ArchiveLists.ArchiveSelect, To)()
  name.vb: MapEnums(Of ArchiveSelect, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<ArchiveSelect, To>
    nameWithType: Converters.MapEnums<ArchiveSelect, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.ArchiveLists.ArchiveSelect, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of ArchiveSelect, To)
    nameWithType: Converters.MapEnums(Of ArchiveSelect, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.ArchiveLists.ArchiveSelect, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Data.SQL.Select
  commentId: T:SuperOffice.Data.SQL.Select
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: Select
  nameWithType: Select
  fullName: SuperOffice.Data.SQL.Select
- uid: SuperOffice.Data.SQL
  commentId: N:SuperOffice.Data.SQL
  isExternal: true
  name: SuperOffice.Data.SQL
  nameWithType: SuperOffice.Data.SQL
  fullName: SuperOffice.Data.SQL
- uid: SuperOffice.CRM.ArchiveLists.RestrictionExpansionHolder
  commentId: T:SuperOffice.CRM.ArchiveLists.RestrictionExpansionHolder
  parent: SuperOffice.CRM.ArchiveLists
  isExternal: true
  name: RestrictionExpansionHolder
  nameWithType: RestrictionExpansionHolder
  fullName: SuperOffice.CRM.ArchiveLists.RestrictionExpansionHolder
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.CRM.ArchiveLists.ArchiveSelect.AddExpansion*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveSelect.AddExpansion
  isExternal: true
  name: AddExpansion
  nameWithType: ArchiveSelect.AddExpansion
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveSelect.AddExpansion
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  commentId: T:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  parent: SuperOffice.CRM.ArchiveLists
  isExternal: true
  name: ArchiveRestrictionInfo
  nameWithType: ArchiveRestrictionInfo
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
- uid: SuperOffice.Data.SQL.Restriction
  commentId: T:SuperOffice.Data.SQL.Restriction
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: Restriction
  nameWithType: Restriction
  fullName: SuperOffice.Data.SQL.Restriction
- uid: SuperOffice.CRM.ArchiveLists.ArchiveSelect.#ctor*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveSelect.#ctor
  isExternal: true
  name: ArchiveSelect
  nameWithType: ArchiveSelect.ArchiveSelect
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveSelect.ArchiveSelect
