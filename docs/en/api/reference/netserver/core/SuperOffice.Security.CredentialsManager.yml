### YamlMime:ManagedReference
items:
- uid: SuperOffice.Security.CredentialsManager
  commentId: T:SuperOffice.Security.CredentialsManager
  id: CredentialsManager
  parent: SuperOffice.Security
  children:
  - SuperOffice.Security.CredentialsManager.#ctor
  - SuperOffice.Security.CredentialsManager.GetAllInstalledPluginNames
  - SuperOffice.Security.CredentialsManager.GetAllPlugins
  - SuperOffice.Security.CredentialsManager.GetDefaultCredentialPlugin(SuperOffice.License.UserType,System.Int32)
  - SuperOffice.Security.CredentialsManager.GetPlugin(System.String)
  - SuperOffice.Security.CredentialsManager.GetUntrustedCredentialsAsync(System.String,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.Security.CredentialsManager.GetUntrustedCredentialsAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.Security.CredentialsManager.Refresh
  - SuperOffice.Security.CredentialsManager.RemoveUntrustedCredentialsAsync(System.String,System.Int32,System.String,System.Threading.CancellationToken)
  - SuperOffice.Security.CredentialsManager.RemoveUntrustedCredentialsAsync(System.String,System.String,System.Threading.CancellationToken)
  - SuperOffice.Security.CredentialsManager.SaveUntrustedCredentialsAsync(System.String,SuperOffice.Security.UntrustedCredentials,System.Threading.CancellationToken)
  - SuperOffice.Security.CredentialsManager.SaveUntrustedCredentialsAsync(System.String,System.Int32,SuperOffice.Security.UntrustedCredentials,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: CredentialsManager
  nameWithType: CredentialsManager
  fullName: SuperOffice.Security.CredentialsManager
  type: Class
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Security
  summary: Manages <xref href="SuperOffice.CRM.Administration.IUserCredentialPlugin" data-throw-if-not-resolved="false"></xref> instances.
  example: []
  syntax:
    content: 'public class CredentialsManager : ICredentialsManager'
    content.vb: Public Class CredentialsManager Implements ICredentialsManager
  inheritance:
  - System.Object
  implements:
  - SuperOffice.Security.ICredentialsManager
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.Security.CredentialsManager.EnumUtil.MapEnums``2
  - SuperOffice.Security.CredentialsManager.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  - SuperOffice.Security.CredentialsManager.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Security.CredentialsManager)
  - SuperOffice.Security.CredentialsManager.SuperOffice.Util.ObjectExtensions.GraphCopy``1
- uid: SuperOffice.Security.CredentialsManager.#ctor
  commentId: M:SuperOffice.Security.CredentialsManager.#ctor
  id: '#ctor'
  parent: SuperOffice.Security.CredentialsManager
  langs:
  - csharp
  - vb
  name: CredentialsManager()
  nameWithType: CredentialsManager.CredentialsManager()
  fullName: SuperOffice.Security.CredentialsManager.CredentialsManager()
  type: Constructor
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Security
  syntax:
    content: public CredentialsManager()
    content.vb: Public Sub New()
  overload: SuperOffice.Security.CredentialsManager.#ctor*
  nameWithType.vb: CredentialsManager.New()
  fullName.vb: SuperOffice.Security.CredentialsManager.New()
  name.vb: New()
- uid: SuperOffice.Security.CredentialsManager.Refresh
  commentId: M:SuperOffice.Security.CredentialsManager.Refresh
  id: Refresh
  parent: SuperOffice.Security.CredentialsManager
  langs:
  - csharp
  - vb
  name: Refresh()
  nameWithType: CredentialsManager.Refresh()
  fullName: SuperOffice.Security.CredentialsManager.Refresh()
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Security
  summary: Refresh the list of credential plugins. Useful if you have just loaded some new licenses.
  example: []
  syntax:
    content: public void Refresh()
    content.vb: Public Sub Refresh()
  overload: SuperOffice.Security.CredentialsManager.Refresh*
  implements:
  - SuperOffice.Security.ICredentialsManager.Refresh
- uid: SuperOffice.Security.CredentialsManager.GetPlugin(System.String)
  commentId: M:SuperOffice.Security.CredentialsManager.GetPlugin(System.String)
  id: GetPlugin(System.String)
  parent: SuperOffice.Security.CredentialsManager
  langs:
  - csharp
  - vb
  name: GetPlugin(string)
  nameWithType: CredentialsManager.GetPlugin(string)
  fullName: SuperOffice.Security.CredentialsManager.GetPlugin(string)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Security
  summary: Get the plugin associated with a given credential type.
  example: []
  syntax:
    content: public IUserCredentialPlugin GetPlugin(string credentialType)
    parameters:
    - id: credentialType
      type: System.String
      description: 'Name of credential plugin: "CRM5/PASSWORD" or "ActiveDirectory".'
    return:
      type: SuperOffice.CRM.Administration.IUserCredentialPlugin
      description: Plugin interface, or null if plugin is not available/licensed.
    content.vb: Public Function GetPlugin(credentialType As String) As IUserCredentialPlugin
  overload: SuperOffice.Security.CredentialsManager.GetPlugin*
  implements:
  - SuperOffice.Security.ICredentialsManager.GetPlugin(System.String)
  nameWithType.vb: CredentialsManager.GetPlugin(String)
  fullName.vb: SuperOffice.Security.CredentialsManager.GetPlugin(String)
  name.vb: GetPlugin(String)
- uid: SuperOffice.Security.CredentialsManager.GetAllPlugins
  commentId: M:SuperOffice.Security.CredentialsManager.GetAllPlugins
  id: GetAllPlugins
  parent: SuperOffice.Security.CredentialsManager
  langs:
  - csharp
  - vb
  name: GetAllPlugins()
  nameWithType: CredentialsManager.GetAllPlugins()
  fullName: SuperOffice.Security.CredentialsManager.GetAllPlugins()
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Security
  summary: >-
    Return a list of all credential plugins that are licensed and available.

    i.e. some plugins that are installed may not be present, because the corresponding license is not present.
  example: []
  syntax:
    content: public Dictionary<string, IUserCredentialPlugin> GetAllPlugins()
    return:
      type: System.Collections.Generic.Dictionary{System.String,SuperOffice.CRM.Administration.IUserCredentialPlugin}
      description: 'Dictionary of plugin name to plugin instance.  e.g: "ActiveDirectory"=ActiveDirectoryCredentialPlugin'
    content.vb: Public Function GetAllPlugins() As Dictionary(Of String, IUserCredentialPlugin)
  overload: SuperOffice.Security.CredentialsManager.GetAllPlugins*
  implements:
  - SuperOffice.Security.ICredentialsManager.GetAllPlugins
- uid: SuperOffice.Security.CredentialsManager.GetDefaultCredentialPlugin(SuperOffice.License.UserType,System.Int32)
  commentId: M:SuperOffice.Security.CredentialsManager.GetDefaultCredentialPlugin(SuperOffice.License.UserType,System.Int32)
  id: GetDefaultCredentialPlugin(SuperOffice.License.UserType,System.Int32)
  parent: SuperOffice.Security.CredentialsManager
  langs:
  - csharp
  - vb
  name: GetDefaultCredentialPlugin(UserType, int)
  nameWithType: CredentialsManager.GetDefaultCredentialPlugin(UserType, int)
  fullName: SuperOffice.Security.CredentialsManager.GetDefaultCredentialPlugin(SuperOffice.License.UserType, int)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Security
  example: []
  syntax:
    content: public IUserCredentialPlugin GetDefaultCredentialPlugin(UserType userType, int personId)
    parameters:
    - id: userType
      type: SuperOffice.License.UserType
    - id: personId
      type: System.Int32
    return:
      type: SuperOffice.CRM.Administration.IUserCredentialPlugin
    content.vb: Public Function GetDefaultCredentialPlugin(userType As UserType, personId As Integer) As IUserCredentialPlugin
  overload: SuperOffice.Security.CredentialsManager.GetDefaultCredentialPlugin*
  implements:
  - SuperOffice.Security.ICredentialsManager.GetDefaultCredentialPlugin(SuperOffice.License.UserType,System.Int32)
  nameWithType.vb: CredentialsManager.GetDefaultCredentialPlugin(UserType, Integer)
  fullName.vb: SuperOffice.Security.CredentialsManager.GetDefaultCredentialPlugin(SuperOffice.License.UserType, Integer)
  name.vb: GetDefaultCredentialPlugin(UserType, Integer)
- uid: SuperOffice.Security.CredentialsManager.GetAllInstalledPluginNames
  commentId: M:SuperOffice.Security.CredentialsManager.GetAllInstalledPluginNames
  id: GetAllInstalledPluginNames
  parent: SuperOffice.Security.CredentialsManager
  langs:
  - csharp
  - vb
  name: GetAllInstalledPluginNames()
  nameWithType: CredentialsManager.GetAllInstalledPluginNames()
  fullName: SuperOffice.Security.CredentialsManager.GetAllInstalledPluginNames()
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Security
  summary: >-
    Return a list of all credential plugins that are available (including those that .

    i.e. all plugins that are installed are returned, including those without a corresponding license.
  example: []
  syntax:
    content: public string[] GetAllInstalledPluginNames()
    return:
      type: System.String[]
      description: 'List of all ICredntialPlugin names e.g: "ActiveDirectory", "CRM5/PASSWORD"'
    content.vb: Public Function GetAllInstalledPluginNames() As String()
  overload: SuperOffice.Security.CredentialsManager.GetAllInstalledPluginNames*
  implements:
  - SuperOffice.Security.ICredentialsManager.GetAllInstalledPluginNames
- uid: SuperOffice.Security.CredentialsManager.RemoveUntrustedCredentialsAsync(System.String,System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Security.CredentialsManager.RemoveUntrustedCredentialsAsync(System.String,System.Int32,System.String,System.Threading.CancellationToken)
  id: RemoveUntrustedCredentialsAsync(System.String,System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.Security.CredentialsManager
  langs:
  - csharp
  - vb
  name: RemoveUntrustedCredentialsAsync(string, int, string, CancellationToken)
  nameWithType: CredentialsManager.RemoveUntrustedCredentialsAsync(string, int, string, CancellationToken)
  fullName: SuperOffice.Security.CredentialsManager.RemoveUntrustedCredentialsAsync(string, int, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Security
  summary: Remove a credentials entry for an associate
  example: []
  syntax:
    content: public Task RemoveUntrustedCredentialsAsync(string type, int associateId, string publicValue, CancellationToken cancellationToken = default)
    parameters:
    - id: type
      type: System.String
      description: 'Type of credential(Ex: "imap", "smtp")'
    - id: associateId
      type: System.Int32
      description: Id of associate to remove for
    - id: publicValue
      type: System.String
      description: PublicValue of credential to remove
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function RemoveUntrustedCredentialsAsync(type As String, associateId As Integer, publicValue As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.Security.CredentialsManager.RemoveUntrustedCredentialsAsync*
  implements:
  - SuperOffice.Security.ICredentialsManager.RemoveUntrustedCredentialsAsync(System.String,System.Int32,System.String,System.Threading.CancellationToken)
  nameWithType.vb: CredentialsManager.RemoveUntrustedCredentialsAsync(String, Integer, String, CancellationToken)
  fullName.vb: SuperOffice.Security.CredentialsManager.RemoveUntrustedCredentialsAsync(String, Integer, String, System.Threading.CancellationToken)
  name.vb: RemoveUntrustedCredentialsAsync(String, Integer, String, CancellationToken)
- uid: SuperOffice.Security.CredentialsManager.RemoveUntrustedCredentialsAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Security.CredentialsManager.RemoveUntrustedCredentialsAsync(System.String,System.String,System.Threading.CancellationToken)
  id: RemoveUntrustedCredentialsAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.Security.CredentialsManager
  langs:
  - csharp
  - vb
  name: RemoveUntrustedCredentialsAsync(string, string, CancellationToken)
  nameWithType: CredentialsManager.RemoveUntrustedCredentialsAsync(string, string, CancellationToken)
  fullName: SuperOffice.Security.CredentialsManager.RemoveUntrustedCredentialsAsync(string, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Security
  summary: Remove a credentials entry for authenticated user
  example: []
  syntax:
    content: public Task RemoveUntrustedCredentialsAsync(string type, string publicValue, CancellationToken cancellationToken = default)
    parameters:
    - id: type
      type: System.String
      description: 'Type of credential(Ex: "imap", "smtp")'
    - id: publicValue
      type: System.String
      description: PublicValue of credential to remove
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function RemoveUntrustedCredentialsAsync(type As String, publicValue As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.Security.CredentialsManager.RemoveUntrustedCredentialsAsync*
  implements:
  - SuperOffice.Security.ICredentialsManager.RemoveUntrustedCredentialsAsync(System.String,System.String,System.Threading.CancellationToken)
  nameWithType.vb: CredentialsManager.RemoveUntrustedCredentialsAsync(String, String, CancellationToken)
  fullName.vb: SuperOffice.Security.CredentialsManager.RemoveUntrustedCredentialsAsync(String, String, System.Threading.CancellationToken)
  name.vb: RemoveUntrustedCredentialsAsync(String, String, CancellationToken)
- uid: SuperOffice.Security.CredentialsManager.SaveUntrustedCredentialsAsync(System.String,System.Int32,SuperOffice.Security.UntrustedCredentials,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Security.CredentialsManager.SaveUntrustedCredentialsAsync(System.String,System.Int32,SuperOffice.Security.UntrustedCredentials,System.Threading.CancellationToken)
  id: SaveUntrustedCredentialsAsync(System.String,System.Int32,SuperOffice.Security.UntrustedCredentials,System.Threading.CancellationToken)
  parent: SuperOffice.Security.CredentialsManager
  langs:
  - csharp
  - vb
  name: SaveUntrustedCredentialsAsync(string, int, UntrustedCredentials, CancellationToken)
  nameWithType: CredentialsManager.SaveUntrustedCredentialsAsync(string, int, UntrustedCredentials, CancellationToken)
  fullName: SuperOffice.Security.CredentialsManager.SaveUntrustedCredentialsAsync(string, int, SuperOffice.Security.UntrustedCredentials, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Security
  summary: Save credentials for a specified associate
  example: []
  syntax:
    content: public Task SaveUntrustedCredentialsAsync(string type, int associateId, UntrustedCredentials credentials, CancellationToken cancellationToken = default)
    parameters:
    - id: type
      type: System.String
      description: 'Type of credential(Ex: "imap", "smtp")'
    - id: associateId
      type: System.Int32
      description: Id of associate to save for
    - id: credentials
      type: SuperOffice.Security.UntrustedCredentials
      description: Credentials to save
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SaveUntrustedCredentialsAsync(type As String, associateId As Integer, credentials As UntrustedCredentials, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.Security.CredentialsManager.SaveUntrustedCredentialsAsync*
  implements:
  - SuperOffice.Security.ICredentialsManager.SaveUntrustedCredentialsAsync(System.String,System.Int32,SuperOffice.Security.UntrustedCredentials,System.Threading.CancellationToken)
  nameWithType.vb: CredentialsManager.SaveUntrustedCredentialsAsync(String, Integer, UntrustedCredentials, CancellationToken)
  fullName.vb: SuperOffice.Security.CredentialsManager.SaveUntrustedCredentialsAsync(String, Integer, SuperOffice.Security.UntrustedCredentials, System.Threading.CancellationToken)
  name.vb: SaveUntrustedCredentialsAsync(String, Integer, UntrustedCredentials, CancellationToken)
- uid: SuperOffice.Security.CredentialsManager.SaveUntrustedCredentialsAsync(System.String,SuperOffice.Security.UntrustedCredentials,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Security.CredentialsManager.SaveUntrustedCredentialsAsync(System.String,SuperOffice.Security.UntrustedCredentials,System.Threading.CancellationToken)
  id: SaveUntrustedCredentialsAsync(System.String,SuperOffice.Security.UntrustedCredentials,System.Threading.CancellationToken)
  parent: SuperOffice.Security.CredentialsManager
  langs:
  - csharp
  - vb
  name: SaveUntrustedCredentialsAsync(string, UntrustedCredentials, CancellationToken)
  nameWithType: CredentialsManager.SaveUntrustedCredentialsAsync(string, UntrustedCredentials, CancellationToken)
  fullName: SuperOffice.Security.CredentialsManager.SaveUntrustedCredentialsAsync(string, SuperOffice.Security.UntrustedCredentials, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Security
  summary: Save credentials for authenticated associate
  example: []
  syntax:
    content: public Task SaveUntrustedCredentialsAsync(string type, UntrustedCredentials credentials, CancellationToken cancellationToken = default)
    parameters:
    - id: type
      type: System.String
      description: 'Type of credential(Ex: "imap", "smtp")'
    - id: credentials
      type: SuperOffice.Security.UntrustedCredentials
      description: Credentials to save
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SaveUntrustedCredentialsAsync(type As String, credentials As UntrustedCredentials, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.Security.CredentialsManager.SaveUntrustedCredentialsAsync*
  implements:
  - SuperOffice.Security.ICredentialsManager.SaveUntrustedCredentialsAsync(System.String,SuperOffice.Security.UntrustedCredentials,System.Threading.CancellationToken)
  nameWithType.vb: CredentialsManager.SaveUntrustedCredentialsAsync(String, UntrustedCredentials, CancellationToken)
  fullName.vb: SuperOffice.Security.CredentialsManager.SaveUntrustedCredentialsAsync(String, SuperOffice.Security.UntrustedCredentials, System.Threading.CancellationToken)
  name.vb: SaveUntrustedCredentialsAsync(String, UntrustedCredentials, CancellationToken)
- uid: SuperOffice.Security.CredentialsManager.GetUntrustedCredentialsAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Security.CredentialsManager.GetUntrustedCredentialsAsync(System.String,System.Threading.CancellationToken)
  id: GetUntrustedCredentialsAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.Security.CredentialsManager
  langs:
  - csharp
  - vb
  name: GetUntrustedCredentialsAsync(string, CancellationToken)
  nameWithType: CredentialsManager.GetUntrustedCredentialsAsync(string, CancellationToken)
  fullName: SuperOffice.Security.CredentialsManager.GetUntrustedCredentialsAsync(string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Security
  summary: Get a set of credentials for authenticated associate
  example: []
  syntax:
    content: public Task<UntrustedCredentials[]> GetUntrustedCredentialsAsync(string type, CancellationToken cancellationToken = default)
    parameters:
    - id: type
      type: System.String
      description: Type of credentials to retrieve
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.Security.UntrustedCredentials[]}
      description: Arrow of populated credential objects.
    content.vb: Public Function GetUntrustedCredentialsAsync(type As String, cancellationToken As CancellationToken = Nothing) As Task(Of UntrustedCredentials())
  overload: SuperOffice.Security.CredentialsManager.GetUntrustedCredentialsAsync*
  implements:
  - SuperOffice.Security.ICredentialsManager.GetUntrustedCredentialsAsync(System.String,System.Threading.CancellationToken)
  nameWithType.vb: CredentialsManager.GetUntrustedCredentialsAsync(String, CancellationToken)
  fullName.vb: SuperOffice.Security.CredentialsManager.GetUntrustedCredentialsAsync(String, System.Threading.CancellationToken)
  name.vb: GetUntrustedCredentialsAsync(String, CancellationToken)
- uid: SuperOffice.Security.CredentialsManager.GetUntrustedCredentialsAsync(System.String,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Security.CredentialsManager.GetUntrustedCredentialsAsync(System.String,System.Int32,System.Threading.CancellationToken)
  id: GetUntrustedCredentialsAsync(System.String,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.Security.CredentialsManager
  langs:
  - csharp
  - vb
  name: GetUntrustedCredentialsAsync(string, int, CancellationToken)
  nameWithType: CredentialsManager.GetUntrustedCredentialsAsync(string, int, CancellationToken)
  fullName: SuperOffice.Security.CredentialsManager.GetUntrustedCredentialsAsync(string, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Security
  summary: Get a set of credentials for a specified associate
  example: []
  syntax:
    content: public Task<UntrustedCredentials[]> GetUntrustedCredentialsAsync(string type, int associateId, CancellationToken cancellationToken = default)
    parameters:
    - id: type
      type: System.String
      description: Type of credentials to retrieve
    - id: associateId
      type: System.Int32
      description: Id of associate to retrieve credentials for
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.Security.UntrustedCredentials[]}
      description: Arrow of populated credential objects. SecretValue is left blank for security purposes if associate is not authenticated user or a system user.
    content.vb: Public Function GetUntrustedCredentialsAsync(type As String, associateId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of UntrustedCredentials())
  overload: SuperOffice.Security.CredentialsManager.GetUntrustedCredentialsAsync*
  implements:
  - SuperOffice.Security.ICredentialsManager.GetUntrustedCredentialsAsync(System.String,System.Int32,System.Threading.CancellationToken)
  nameWithType.vb: CredentialsManager.GetUntrustedCredentialsAsync(String, Integer, CancellationToken)
  fullName.vb: SuperOffice.Security.CredentialsManager.GetUntrustedCredentialsAsync(String, Integer, System.Threading.CancellationToken)
  name.vb: GetUntrustedCredentialsAsync(String, Integer, CancellationToken)
references:
- uid: SuperOffice.CRM.Administration.IUserCredentialPlugin
  commentId: T:SuperOffice.CRM.Administration.IUserCredentialPlugin
  parent: SuperOffice.CRM.Administration
  isExternal: true
  href: SuperOffice.CRM.Administration.IUserCredentialPlugin.html
  name: IUserCredentialPlugin
  nameWithType: IUserCredentialPlugin
  fullName: SuperOffice.CRM.Administration.IUserCredentialPlugin
- uid: SuperOffice.Security
  commentId: N:SuperOffice.Security
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Security
  nameWithType: SuperOffice.Security
  fullName: SuperOffice.Security
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Security
    name: Security
    isExternal: true
    href: SuperOffice.Security.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Security
    name: Security
    isExternal: true
    href: SuperOffice.Security.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: SuperOffice.Security.ICredentialsManager
  commentId: T:SuperOffice.Security.ICredentialsManager
  parent: SuperOffice.Security
  isExternal: true
  href: SuperOffice.Security.ICredentialsManager.html
  name: ICredentialsManager
  nameWithType: ICredentialsManager
  fullName: SuperOffice.Security.ICredentialsManager
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: SuperOffice.Security.CredentialsManager.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<CredentialsManager, To>(CredentialsManager)
  nameWithType: EnumUtil.MapEnums<CredentialsManager, To>(CredentialsManager)
  fullName: EnumUtil.MapEnums<SuperOffice.Security.CredentialsManager, To>(SuperOffice.Security.CredentialsManager)
  nameWithType.vb: EnumUtil.MapEnums(Of CredentialsManager, To)(CredentialsManager)
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Security.CredentialsManager, To)(SuperOffice.Security.CredentialsManager)
  name.vb: MapEnums(Of CredentialsManager, To)(CredentialsManager)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(SuperOffice.Security.CredentialsManager)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.Security.CredentialsManager
    name: CredentialsManager
    isExternal: true
    href: SuperOffice.Security.CredentialsManager.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.Security.CredentialsManager
    name: CredentialsManager
    isExternal: true
    href: SuperOffice.Security.CredentialsManager.html
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(SuperOffice.Security.CredentialsManager)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Security.CredentialsManager
    name: CredentialsManager
    isExternal: true
    href: SuperOffice.Security.CredentialsManager.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.Security.CredentialsManager
    name: CredentialsManager
    isExternal: true
    href: SuperOffice.Security.CredentialsManager.html
  - name: )
- uid: SuperOffice.Security.CredentialsManager.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<CredentialsManager, To>(CredentialsManager)
  nameWithType: Converters.MapEnums<CredentialsManager, To>(CredentialsManager)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Security.CredentialsManager, To>(SuperOffice.Security.CredentialsManager)
  nameWithType.vb: Converters.MapEnums(Of CredentialsManager, To)(CredentialsManager)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Security.CredentialsManager, To)(SuperOffice.Security.CredentialsManager)
  name.vb: MapEnums(Of CredentialsManager, To)(CredentialsManager)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.Security.CredentialsManager)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.Security.CredentialsManager
    name: CredentialsManager
    isExternal: true
    href: SuperOffice.Security.CredentialsManager.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.Security.CredentialsManager
    name: CredentialsManager
    isExternal: true
    href: SuperOffice.Security.CredentialsManager.html
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.Security.CredentialsManager)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Security.CredentialsManager
    name: CredentialsManager
    isExternal: true
    href: SuperOffice.Security.CredentialsManager.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.Security.CredentialsManager
    name: CredentialsManager
    isExternal: true
    href: SuperOffice.Security.CredentialsManager.html
  - name: )
- uid: SuperOffice.Security.CredentialsManager.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Security.CredentialsManager)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  name: AssignByReflection<CredentialsManager>(CredentialsManager, CredentialsManager)
  nameWithType: ObjectExtensions.AssignByReflection<CredentialsManager>(CredentialsManager, CredentialsManager)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Security.CredentialsManager>(SuperOffice.Security.CredentialsManager, SuperOffice.Security.CredentialsManager)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of CredentialsManager)(CredentialsManager, CredentialsManager)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Security.CredentialsManager)(SuperOffice.Security.CredentialsManager, SuperOffice.Security.CredentialsManager)
  name.vb: AssignByReflection(Of CredentialsManager)(CredentialsManager, CredentialsManager)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Security.CredentialsManager,SuperOffice.Security.CredentialsManager)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: <
  - uid: SuperOffice.Security.CredentialsManager
    name: CredentialsManager
    isExternal: true
    href: SuperOffice.Security.CredentialsManager.html
  - name: '>'
  - name: (
  - uid: SuperOffice.Security.CredentialsManager
    name: CredentialsManager
    isExternal: true
    href: SuperOffice.Security.CredentialsManager.html
  - name: ','
  - name: " "
  - uid: SuperOffice.Security.CredentialsManager
    name: CredentialsManager
    isExternal: true
    href: SuperOffice.Security.CredentialsManager.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Security.CredentialsManager,SuperOffice.Security.CredentialsManager)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Security.CredentialsManager
    name: CredentialsManager
    isExternal: true
    href: SuperOffice.Security.CredentialsManager.html
  - name: )
  - name: (
  - uid: SuperOffice.Security.CredentialsManager
    name: CredentialsManager
    isExternal: true
    href: SuperOffice.Security.CredentialsManager.html
  - name: ','
  - name: " "
  - uid: SuperOffice.Security.CredentialsManager
    name: CredentialsManager
    isExternal: true
    href: SuperOffice.Security.CredentialsManager.html
  - name: )
- uid: SuperOffice.Security.CredentialsManager.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  name: GraphCopy<CredentialsManager>(CredentialsManager)
  nameWithType: ObjectExtensions.GraphCopy<CredentialsManager>(CredentialsManager)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Security.CredentialsManager>(SuperOffice.Security.CredentialsManager)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of CredentialsManager)(CredentialsManager)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Security.CredentialsManager)(SuperOffice.Security.CredentialsManager)
  name.vb: GraphCopy(Of CredentialsManager)(CredentialsManager)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(SuperOffice.Security.CredentialsManager)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: <
  - uid: SuperOffice.Security.CredentialsManager
    name: CredentialsManager
    isExternal: true
    href: SuperOffice.Security.CredentialsManager.html
  - name: '>'
  - name: (
  - uid: SuperOffice.Security.CredentialsManager
    name: CredentialsManager
    isExternal: true
    href: SuperOffice.Security.CredentialsManager.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(SuperOffice.Security.CredentialsManager)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Security.CredentialsManager
    name: CredentialsManager
    isExternal: true
    href: SuperOffice.Security.CredentialsManager.html
  - name: )
  - name: (
  - uid: SuperOffice.Security.CredentialsManager
    name: CredentialsManager
    isExternal: true
    href: SuperOffice.Security.CredentialsManager.html
  - name: )
- uid: SuperOffice.CRM.Administration
  commentId: N:SuperOffice.CRM.Administration
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Administration
  nameWithType: SuperOffice.CRM.Administration
  fullName: SuperOffice.CRM.Administration
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Administration
    name: Administration
    isExternal: true
    href: SuperOffice.CRM.Administration.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Administration
    name: Administration
    isExternal: true
    href: SuperOffice.CRM.Administration.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  href: EnumUtil.html
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  href: SuperOffice.Util.ObjectExtensions.html
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Util
    name: Util
    isExternal: true
    href: SuperOffice.Util.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Util
    name: Util
    isExternal: true
    href: SuperOffice.Util.html
- uid: SuperOffice.Security.CredentialsManager.#ctor*
  commentId: Overload:SuperOffice.Security.CredentialsManager.#ctor
  isExternal: true
  href: SuperOffice.Security.CredentialsManager.html#SuperOffice_Security_CredentialsManager__ctor
  name: CredentialsManager
  nameWithType: CredentialsManager.CredentialsManager
  fullName: SuperOffice.Security.CredentialsManager.CredentialsManager
  nameWithType.vb: CredentialsManager.New
  fullName.vb: SuperOffice.Security.CredentialsManager.New
  name.vb: New
- uid: SuperOffice.Security.CredentialsManager.Refresh*
  commentId: Overload:SuperOffice.Security.CredentialsManager.Refresh
  isExternal: true
  href: SuperOffice.Security.CredentialsManager.html#SuperOffice_Security_CredentialsManager_Refresh
  name: Refresh
  nameWithType: CredentialsManager.Refresh
  fullName: SuperOffice.Security.CredentialsManager.Refresh
- uid: SuperOffice.Security.ICredentialsManager.Refresh
  commentId: M:SuperOffice.Security.ICredentialsManager.Refresh
  parent: SuperOffice.Security.ICredentialsManager
  isExternal: true
  name: Refresh()
  nameWithType: ICredentialsManager.Refresh()
  fullName: SuperOffice.Security.ICredentialsManager.Refresh()
  spec.csharp:
  - uid: SuperOffice.Security.ICredentialsManager.Refresh
    name: Refresh
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: SuperOffice.Security.ICredentialsManager.Refresh
    name: Refresh
    isExternal: true
  - name: (
  - name: )
- uid: SuperOffice.Security.CredentialsManager.GetPlugin*
  commentId: Overload:SuperOffice.Security.CredentialsManager.GetPlugin
  isExternal: true
  href: SuperOffice.Security.CredentialsManager.html#SuperOffice_Security_CredentialsManager_GetPlugin_System_String_
  name: GetPlugin
  nameWithType: CredentialsManager.GetPlugin
  fullName: SuperOffice.Security.CredentialsManager.GetPlugin
- uid: SuperOffice.Security.ICredentialsManager.GetPlugin(System.String)
  commentId: M:SuperOffice.Security.ICredentialsManager.GetPlugin(System.String)
  parent: SuperOffice.Security.ICredentialsManager
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: GetPlugin(string)
  nameWithType: ICredentialsManager.GetPlugin(string)
  fullName: SuperOffice.Security.ICredentialsManager.GetPlugin(string)
  nameWithType.vb: ICredentialsManager.GetPlugin(String)
  fullName.vb: SuperOffice.Security.ICredentialsManager.GetPlugin(String)
  name.vb: GetPlugin(String)
  spec.csharp:
  - uid: SuperOffice.Security.ICredentialsManager.GetPlugin(System.String)
    name: GetPlugin
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SuperOffice.Security.ICredentialsManager.GetPlugin(System.String)
    name: GetPlugin
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SuperOffice.Security.CredentialsManager.GetAllPlugins*
  commentId: Overload:SuperOffice.Security.CredentialsManager.GetAllPlugins
  isExternal: true
  href: SuperOffice.Security.CredentialsManager.html#SuperOffice_Security_CredentialsManager_GetAllPlugins
  name: GetAllPlugins
  nameWithType: CredentialsManager.GetAllPlugins
  fullName: SuperOffice.Security.CredentialsManager.GetAllPlugins
- uid: SuperOffice.Security.ICredentialsManager.GetAllPlugins
  commentId: M:SuperOffice.Security.ICredentialsManager.GetAllPlugins
  parent: SuperOffice.Security.ICredentialsManager
  isExternal: true
  name: GetAllPlugins()
  nameWithType: ICredentialsManager.GetAllPlugins()
  fullName: SuperOffice.Security.ICredentialsManager.GetAllPlugins()
  spec.csharp:
  - uid: SuperOffice.Security.ICredentialsManager.GetAllPlugins
    name: GetAllPlugins
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: SuperOffice.Security.ICredentialsManager.GetAllPlugins
    name: GetAllPlugins
    isExternal: true
  - name: (
  - name: )
- uid: System.Collections.Generic.Dictionary{System.String,SuperOffice.CRM.Administration.IUserCredentialPlugin}
  commentId: T:System.Collections.Generic.Dictionary{System.String,SuperOffice.CRM.Administration.IUserCredentialPlugin}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, IUserCredentialPlugin>
  nameWithType: Dictionary<string, IUserCredentialPlugin>
  fullName: System.Collections.Generic.Dictionary<string, SuperOffice.CRM.Administration.IUserCredentialPlugin>
  nameWithType.vb: Dictionary(Of String, IUserCredentialPlugin)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, SuperOffice.CRM.Administration.IUserCredentialPlugin)
  name.vb: Dictionary(Of String, IUserCredentialPlugin)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: SuperOffice.CRM.Administration.IUserCredentialPlugin
    name: IUserCredentialPlugin
    isExternal: true
    href: SuperOffice.CRM.Administration.IUserCredentialPlugin.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: SuperOffice.CRM.Administration.IUserCredentialPlugin
    name: IUserCredentialPlugin
    isExternal: true
    href: SuperOffice.CRM.Administration.IUserCredentialPlugin.html
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: SuperOffice.Security.CredentialsManager.GetDefaultCredentialPlugin*
  commentId: Overload:SuperOffice.Security.CredentialsManager.GetDefaultCredentialPlugin
  isExternal: true
  href: SuperOffice.Security.CredentialsManager.html#SuperOffice_Security_CredentialsManager_GetDefaultCredentialPlugin_SuperOffice_License_UserType_System_Int32_
  name: GetDefaultCredentialPlugin
  nameWithType: CredentialsManager.GetDefaultCredentialPlugin
  fullName: SuperOffice.Security.CredentialsManager.GetDefaultCredentialPlugin
- uid: SuperOffice.Security.ICredentialsManager.GetDefaultCredentialPlugin(SuperOffice.License.UserType,System.Int32)
  commentId: M:SuperOffice.Security.ICredentialsManager.GetDefaultCredentialPlugin(SuperOffice.License.UserType,System.Int32)
  parent: SuperOffice.Security.ICredentialsManager
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: GetDefaultCredentialPlugin(UserType, int)
  nameWithType: ICredentialsManager.GetDefaultCredentialPlugin(UserType, int)
  fullName: SuperOffice.Security.ICredentialsManager.GetDefaultCredentialPlugin(SuperOffice.License.UserType, int)
  nameWithType.vb: ICredentialsManager.GetDefaultCredentialPlugin(UserType, Integer)
  fullName.vb: SuperOffice.Security.ICredentialsManager.GetDefaultCredentialPlugin(SuperOffice.License.UserType, Integer)
  name.vb: GetDefaultCredentialPlugin(UserType, Integer)
  spec.csharp:
  - uid: SuperOffice.Security.ICredentialsManager.GetDefaultCredentialPlugin(SuperOffice.License.UserType,System.Int32)
    name: GetDefaultCredentialPlugin
    isExternal: true
  - name: (
  - uid: SuperOffice.License.UserType
    name: UserType
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SuperOffice.Security.ICredentialsManager.GetDefaultCredentialPlugin(SuperOffice.License.UserType,System.Int32)
    name: GetDefaultCredentialPlugin
    isExternal: true
  - name: (
  - uid: SuperOffice.License.UserType
    name: UserType
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SuperOffice.License.UserType
  commentId: T:SuperOffice.License.UserType
  parent: SuperOffice.License
  isExternal: true
  name: UserType
  nameWithType: UserType
  fullName: SuperOffice.License.UserType
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: SuperOffice.License
  commentId: N:SuperOffice.License
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.License
  nameWithType: SuperOffice.License
  fullName: SuperOffice.License
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.License
    name: License
    isExternal: true
    href: SuperOffice.License.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.License
    name: License
    isExternal: true
    href: SuperOffice.License.html
- uid: SuperOffice.Security.CredentialsManager.GetAllInstalledPluginNames*
  commentId: Overload:SuperOffice.Security.CredentialsManager.GetAllInstalledPluginNames
  isExternal: true
  href: SuperOffice.Security.CredentialsManager.html#SuperOffice_Security_CredentialsManager_GetAllInstalledPluginNames
  name: GetAllInstalledPluginNames
  nameWithType: CredentialsManager.GetAllInstalledPluginNames
  fullName: SuperOffice.Security.CredentialsManager.GetAllInstalledPluginNames
- uid: SuperOffice.Security.ICredentialsManager.GetAllInstalledPluginNames
  commentId: M:SuperOffice.Security.ICredentialsManager.GetAllInstalledPluginNames
  parent: SuperOffice.Security.ICredentialsManager
  isExternal: true
  name: GetAllInstalledPluginNames()
  nameWithType: ICredentialsManager.GetAllInstalledPluginNames()
  fullName: SuperOffice.Security.ICredentialsManager.GetAllInstalledPluginNames()
  spec.csharp:
  - uid: SuperOffice.Security.ICredentialsManager.GetAllInstalledPluginNames
    name: GetAllInstalledPluginNames
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: SuperOffice.Security.ICredentialsManager.GetAllInstalledPluginNames
    name: GetAllInstalledPluginNames
    isExternal: true
  - name: (
  - name: )
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: SuperOffice.Security.CredentialsManager.RemoveUntrustedCredentialsAsync*
  commentId: Overload:SuperOffice.Security.CredentialsManager.RemoveUntrustedCredentialsAsync
  isExternal: true
  href: SuperOffice.Security.CredentialsManager.html#SuperOffice_Security_CredentialsManager_RemoveUntrustedCredentialsAsync_System_String_System_Int32_System_String_System_Threading_CancellationToken_
  name: RemoveUntrustedCredentialsAsync
  nameWithType: CredentialsManager.RemoveUntrustedCredentialsAsync
  fullName: SuperOffice.Security.CredentialsManager.RemoveUntrustedCredentialsAsync
- uid: SuperOffice.Security.ICredentialsManager.RemoveUntrustedCredentialsAsync(System.String,System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Security.ICredentialsManager.RemoveUntrustedCredentialsAsync(System.String,System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.Security.ICredentialsManager
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: RemoveUntrustedCredentialsAsync(string, int, string, CancellationToken)
  nameWithType: ICredentialsManager.RemoveUntrustedCredentialsAsync(string, int, string, CancellationToken)
  fullName: SuperOffice.Security.ICredentialsManager.RemoveUntrustedCredentialsAsync(string, int, string, System.Threading.CancellationToken)
  nameWithType.vb: ICredentialsManager.RemoveUntrustedCredentialsAsync(String, Integer, String, CancellationToken)
  fullName.vb: SuperOffice.Security.ICredentialsManager.RemoveUntrustedCredentialsAsync(String, Integer, String, System.Threading.CancellationToken)
  name.vb: RemoveUntrustedCredentialsAsync(String, Integer, String, CancellationToken)
  spec.csharp:
  - uid: SuperOffice.Security.ICredentialsManager.RemoveUntrustedCredentialsAsync(System.String,System.Int32,System.String,System.Threading.CancellationToken)
    name: RemoveUntrustedCredentialsAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: SuperOffice.Security.ICredentialsManager.RemoveUntrustedCredentialsAsync(System.String,System.Int32,System.String,System.Threading.CancellationToken)
    name: RemoveUntrustedCredentialsAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: SuperOffice.Security.ICredentialsManager.RemoveUntrustedCredentialsAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Security.ICredentialsManager.RemoveUntrustedCredentialsAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.Security.ICredentialsManager
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: RemoveUntrustedCredentialsAsync(string, string, CancellationToken)
  nameWithType: ICredentialsManager.RemoveUntrustedCredentialsAsync(string, string, CancellationToken)
  fullName: SuperOffice.Security.ICredentialsManager.RemoveUntrustedCredentialsAsync(string, string, System.Threading.CancellationToken)
  nameWithType.vb: ICredentialsManager.RemoveUntrustedCredentialsAsync(String, String, CancellationToken)
  fullName.vb: SuperOffice.Security.ICredentialsManager.RemoveUntrustedCredentialsAsync(String, String, System.Threading.CancellationToken)
  name.vb: RemoveUntrustedCredentialsAsync(String, String, CancellationToken)
  spec.csharp:
  - uid: SuperOffice.Security.ICredentialsManager.RemoveUntrustedCredentialsAsync(System.String,System.String,System.Threading.CancellationToken)
    name: RemoveUntrustedCredentialsAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: SuperOffice.Security.ICredentialsManager.RemoveUntrustedCredentialsAsync(System.String,System.String,System.Threading.CancellationToken)
    name: RemoveUntrustedCredentialsAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: SuperOffice.Security.CredentialsManager.SaveUntrustedCredentialsAsync*
  commentId: Overload:SuperOffice.Security.CredentialsManager.SaveUntrustedCredentialsAsync
  isExternal: true
  href: SuperOffice.Security.CredentialsManager.html#SuperOffice_Security_CredentialsManager_SaveUntrustedCredentialsAsync_System_String_System_Int32_SuperOffice_Security_UntrustedCredentials_System_Threading_CancellationToken_
  name: SaveUntrustedCredentialsAsync
  nameWithType: CredentialsManager.SaveUntrustedCredentialsAsync
  fullName: SuperOffice.Security.CredentialsManager.SaveUntrustedCredentialsAsync
- uid: SuperOffice.Security.ICredentialsManager.SaveUntrustedCredentialsAsync(System.String,System.Int32,SuperOffice.Security.UntrustedCredentials,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Security.ICredentialsManager.SaveUntrustedCredentialsAsync(System.String,System.Int32,SuperOffice.Security.UntrustedCredentials,System.Threading.CancellationToken)
  parent: SuperOffice.Security.ICredentialsManager
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SaveUntrustedCredentialsAsync(string, int, UntrustedCredentials, CancellationToken)
  nameWithType: ICredentialsManager.SaveUntrustedCredentialsAsync(string, int, UntrustedCredentials, CancellationToken)
  fullName: SuperOffice.Security.ICredentialsManager.SaveUntrustedCredentialsAsync(string, int, SuperOffice.Security.UntrustedCredentials, System.Threading.CancellationToken)
  nameWithType.vb: ICredentialsManager.SaveUntrustedCredentialsAsync(String, Integer, UntrustedCredentials, CancellationToken)
  fullName.vb: SuperOffice.Security.ICredentialsManager.SaveUntrustedCredentialsAsync(String, Integer, SuperOffice.Security.UntrustedCredentials, System.Threading.CancellationToken)
  name.vb: SaveUntrustedCredentialsAsync(String, Integer, UntrustedCredentials, CancellationToken)
  spec.csharp:
  - uid: SuperOffice.Security.ICredentialsManager.SaveUntrustedCredentialsAsync(System.String,System.Int32,SuperOffice.Security.UntrustedCredentials,System.Threading.CancellationToken)
    name: SaveUntrustedCredentialsAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: SuperOffice.Security.UntrustedCredentials
    name: UntrustedCredentials
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: SuperOffice.Security.ICredentialsManager.SaveUntrustedCredentialsAsync(System.String,System.Int32,SuperOffice.Security.UntrustedCredentials,System.Threading.CancellationToken)
    name: SaveUntrustedCredentialsAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: SuperOffice.Security.UntrustedCredentials
    name: UntrustedCredentials
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: SuperOffice.Security.UntrustedCredentials
  commentId: T:SuperOffice.Security.UntrustedCredentials
  parent: SuperOffice.Security
  isExternal: true
  href: SuperOffice.Security.UntrustedCredentials.html
  name: UntrustedCredentials
  nameWithType: UntrustedCredentials
  fullName: SuperOffice.Security.UntrustedCredentials
- uid: SuperOffice.Security.ICredentialsManager.SaveUntrustedCredentialsAsync(System.String,SuperOffice.Security.UntrustedCredentials,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Security.ICredentialsManager.SaveUntrustedCredentialsAsync(System.String,SuperOffice.Security.UntrustedCredentials,System.Threading.CancellationToken)
  parent: SuperOffice.Security.ICredentialsManager
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SaveUntrustedCredentialsAsync(string, UntrustedCredentials, CancellationToken)
  nameWithType: ICredentialsManager.SaveUntrustedCredentialsAsync(string, UntrustedCredentials, CancellationToken)
  fullName: SuperOffice.Security.ICredentialsManager.SaveUntrustedCredentialsAsync(string, SuperOffice.Security.UntrustedCredentials, System.Threading.CancellationToken)
  nameWithType.vb: ICredentialsManager.SaveUntrustedCredentialsAsync(String, UntrustedCredentials, CancellationToken)
  fullName.vb: SuperOffice.Security.ICredentialsManager.SaveUntrustedCredentialsAsync(String, SuperOffice.Security.UntrustedCredentials, System.Threading.CancellationToken)
  name.vb: SaveUntrustedCredentialsAsync(String, UntrustedCredentials, CancellationToken)
  spec.csharp:
  - uid: SuperOffice.Security.ICredentialsManager.SaveUntrustedCredentialsAsync(System.String,SuperOffice.Security.UntrustedCredentials,System.Threading.CancellationToken)
    name: SaveUntrustedCredentialsAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: SuperOffice.Security.UntrustedCredentials
    name: UntrustedCredentials
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: SuperOffice.Security.ICredentialsManager.SaveUntrustedCredentialsAsync(System.String,SuperOffice.Security.UntrustedCredentials,System.Threading.CancellationToken)
    name: SaveUntrustedCredentialsAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: SuperOffice.Security.UntrustedCredentials
    name: UntrustedCredentials
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: SuperOffice.Security.CredentialsManager.GetUntrustedCredentialsAsync*
  commentId: Overload:SuperOffice.Security.CredentialsManager.GetUntrustedCredentialsAsync
  isExternal: true
  href: SuperOffice.Security.CredentialsManager.html#SuperOffice_Security_CredentialsManager_GetUntrustedCredentialsAsync_System_String_System_Threading_CancellationToken_
  name: GetUntrustedCredentialsAsync
  nameWithType: CredentialsManager.GetUntrustedCredentialsAsync
  fullName: SuperOffice.Security.CredentialsManager.GetUntrustedCredentialsAsync
- uid: SuperOffice.Security.ICredentialsManager.GetUntrustedCredentialsAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Security.ICredentialsManager.GetUntrustedCredentialsAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.Security.ICredentialsManager
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: GetUntrustedCredentialsAsync(string, CancellationToken)
  nameWithType: ICredentialsManager.GetUntrustedCredentialsAsync(string, CancellationToken)
  fullName: SuperOffice.Security.ICredentialsManager.GetUntrustedCredentialsAsync(string, System.Threading.CancellationToken)
  nameWithType.vb: ICredentialsManager.GetUntrustedCredentialsAsync(String, CancellationToken)
  fullName.vb: SuperOffice.Security.ICredentialsManager.GetUntrustedCredentialsAsync(String, System.Threading.CancellationToken)
  name.vb: GetUntrustedCredentialsAsync(String, CancellationToken)
  spec.csharp:
  - uid: SuperOffice.Security.ICredentialsManager.GetUntrustedCredentialsAsync(System.String,System.Threading.CancellationToken)
    name: GetUntrustedCredentialsAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: SuperOffice.Security.ICredentialsManager.GetUntrustedCredentialsAsync(System.String,System.Threading.CancellationToken)
    name: GetUntrustedCredentialsAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.Tasks.Task{SuperOffice.Security.UntrustedCredentials[]}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.Security.UntrustedCredentials[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<UntrustedCredentials[]>
  nameWithType: Task<UntrustedCredentials[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.Security.UntrustedCredentials[]>
  nameWithType.vb: Task(Of UntrustedCredentials())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.Security.UntrustedCredentials())
  name.vb: Task(Of UntrustedCredentials())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.Security.UntrustedCredentials
    name: UntrustedCredentials
    isExternal: true
    href: SuperOffice.Security.UntrustedCredentials.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Security.UntrustedCredentials
    name: UntrustedCredentials
    isExternal: true
    href: SuperOffice.Security.UntrustedCredentials.html
  - name: (
  - name: )
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: SuperOffice.Security.ICredentialsManager.GetUntrustedCredentialsAsync(System.String,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Security.ICredentialsManager.GetUntrustedCredentialsAsync(System.String,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.Security.ICredentialsManager
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: GetUntrustedCredentialsAsync(string, int, CancellationToken)
  nameWithType: ICredentialsManager.GetUntrustedCredentialsAsync(string, int, CancellationToken)
  fullName: SuperOffice.Security.ICredentialsManager.GetUntrustedCredentialsAsync(string, int, System.Threading.CancellationToken)
  nameWithType.vb: ICredentialsManager.GetUntrustedCredentialsAsync(String, Integer, CancellationToken)
  fullName.vb: SuperOffice.Security.ICredentialsManager.GetUntrustedCredentialsAsync(String, Integer, System.Threading.CancellationToken)
  name.vb: GetUntrustedCredentialsAsync(String, Integer, CancellationToken)
  spec.csharp:
  - uid: SuperOffice.Security.ICredentialsManager.GetUntrustedCredentialsAsync(System.String,System.Int32,System.Threading.CancellationToken)
    name: GetUntrustedCredentialsAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: SuperOffice.Security.ICredentialsManager.GetUntrustedCredentialsAsync(System.String,System.Int32,System.Threading.CancellationToken)
    name: GetUntrustedCredentialsAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
