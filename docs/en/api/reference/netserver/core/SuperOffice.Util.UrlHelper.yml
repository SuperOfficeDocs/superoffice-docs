### YamlMime:ManagedReference
items:
- uid: SuperOffice.Util.UrlHelper
  commentId: T:SuperOffice.Util.UrlHelper
  id: UrlHelper
  parent: SuperOffice.Util
  children:
  - SuperOffice.Util.UrlHelper.Combine(System.String,System.String,System.Boolean)
  - SuperOffice.Util.UrlHelper.ResolveApplicationRoot(System.String)
  - SuperOffice.Util.UrlHelper.ResolveServiceUrl(System.String,System.String)
  langs:
  - csharp
  - vb
  name: UrlHelper
  nameWithType: UrlHelper
  fullName: SuperOffice.Util.UrlHelper
  type: Class
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: Class to assist working with URLs.
  example: []
  syntax:
    content: public static class UrlHelper
    content.vb: Public Module UrlHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: SuperOffice.Util.UrlHelper.ResolveApplicationRoot(System.String)
  commentId: M:SuperOffice.Util.UrlHelper.ResolveApplicationRoot(System.String)
  id: ResolveApplicationRoot(System.String)
  parent: SuperOffice.Util.UrlHelper
  langs:
  - csharp
  - vb
  name: ResolveApplicationRoot(string)
  nameWithType: UrlHelper.ResolveApplicationRoot(string)
  fullName: SuperOffice.Util.UrlHelper.ResolveApplicationRoot(string)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: >-
    Try to resolve a the application-root url based on a pre-provided URL stem which may or may not 

    contain noise.


    Example of usage is asking user for URL to the CRM website.

    The user will typically copy paste from the browser:

    http://server.com/virtualdir/default.aspx?lotsOfParameters


    They may copy things from config-files

    http://server.com/virtualdir/remote/Services75


    Or the link may actually be correctly formatted:

    http://server.com/virtualdir/


    From any of these inputs we want to be able find the appliaction root.
  example: []
  syntax:
    content: public static string ResolveApplicationRoot(string providedUrl)
    parameters:
    - id: providedUrl
      type: System.String
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function ResolveApplicationRoot(providedUrl As String) As String
  overload: SuperOffice.Util.UrlHelper.ResolveApplicationRoot*
  nameWithType.vb: UrlHelper.ResolveApplicationRoot(String)
  fullName.vb: SuperOffice.Util.UrlHelper.ResolveApplicationRoot(String)
  name.vb: ResolveApplicationRoot(String)
- uid: SuperOffice.Util.UrlHelper.Combine(System.String,System.String,System.Boolean)
  commentId: M:SuperOffice.Util.UrlHelper.Combine(System.String,System.String,System.Boolean)
  id: Combine(System.String,System.String,System.Boolean)
  parent: SuperOffice.Util.UrlHelper
  langs:
  - csharp
  - vb
  name: Combine(string, string, bool)
  nameWithType: UrlHelper.Combine(string, string, bool)
  fullName: SuperOffice.Util.UrlHelper.Combine(string, string, bool)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: >-
    Safely appends one URL-segment on to another.

    This involves validating the individual URL parts and possibly throwing on invalid data or combinations of parts.
  example: []
  syntax:
    content: public static string Combine(string baseUrl, string suffix, bool allowUnrooted = false)
    parameters:
    - id: baseUrl
      type: System.String
      description: Must be an absolute path, unless allowUnrooted is set true.
    - id: suffix
      type: System.String
      description: Cannot be an absolute path.
    - id: allowUnrooted
      type: System.Boolean
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function Combine(baseUrl As String, suffix As String, allowUnrooted As Boolean = False) As String
  overload: SuperOffice.Util.UrlHelper.Combine*
  nameWithType.vb: UrlHelper.Combine(String, String, Boolean)
  fullName.vb: SuperOffice.Util.UrlHelper.Combine(String, String, Boolean)
  name.vb: Combine(String, String, Boolean)
- uid: SuperOffice.Util.UrlHelper.ResolveServiceUrl(System.String,System.String)
  commentId: M:SuperOffice.Util.UrlHelper.ResolveServiceUrl(System.String,System.String)
  id: ResolveServiceUrl(System.String,System.String)
  parent: SuperOffice.Util.UrlHelper
  langs:
  - csharp
  - vb
  name: ResolveServiceUrl(string, string)
  nameWithType: UrlHelper.ResolveServiceUrl(string, string)
  fullName: SuperOffice.Util.UrlHelper.ResolveServiceUrl(string, string)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: >-
    Resolve the location of a service based on a URL which represents a part of the current

    application, and which may contains "noise".
  example: []
  syntax:
    content: public static string ResolveServiceUrl(string providedUrl, string serviceSuffix)
    parameters:
    - id: providedUrl
      type: System.String
      description: URL which may or may not contain noise.
    - id: serviceSuffix
      type: System.String
      description: Service-suffix from application-root.
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function ResolveServiceUrl(providedUrl As String, serviceSuffix As String) As String
  overload: SuperOffice.Util.UrlHelper.ResolveServiceUrl*
  nameWithType.vb: UrlHelper.ResolveServiceUrl(String, String)
  fullName.vb: SuperOffice.Util.UrlHelper.ResolveServiceUrl(String, String)
  name.vb: ResolveServiceUrl(String, String)
references:
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Util
    name: Util
    isExternal: true
    href: SuperOffice.Util.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Util
    name: Util
    isExternal: true
    href: SuperOffice.Util.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Util.UrlHelper.ResolveApplicationRoot*
  commentId: Overload:SuperOffice.Util.UrlHelper.ResolveApplicationRoot
  isExternal: true
  href: SuperOffice.Util.UrlHelper.html#SuperOffice_Util_UrlHelper_ResolveApplicationRoot_System_String_
  name: ResolveApplicationRoot
  nameWithType: UrlHelper.ResolveApplicationRoot
  fullName: SuperOffice.Util.UrlHelper.ResolveApplicationRoot
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SuperOffice.Util.UrlHelper.Combine*
  commentId: Overload:SuperOffice.Util.UrlHelper.Combine
  isExternal: true
  href: SuperOffice.Util.UrlHelper.html#SuperOffice_Util_UrlHelper_Combine_System_String_System_String_System_Boolean_
  name: Combine
  nameWithType: UrlHelper.Combine
  fullName: SuperOffice.Util.UrlHelper.Combine
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SuperOffice.Util.UrlHelper.ResolveServiceUrl*
  commentId: Overload:SuperOffice.Util.UrlHelper.ResolveServiceUrl
  isExternal: true
  href: SuperOffice.Util.UrlHelper.html#SuperOffice_Util_UrlHelper_ResolveServiceUrl_System_String_System_String_
  name: ResolveServiceUrl
  nameWithType: UrlHelper.ResolveServiceUrl
  fullName: SuperOffice.Util.UrlHelper.ResolveServiceUrl
