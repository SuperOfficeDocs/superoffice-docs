### YamlMime:ManagedReference
items:
- uid: SuperOffice.Data.UdefHelper
  commentId: T:SuperOffice.Data.UdefHelper
  id: UdefHelper
  parent: SuperOffice.Data
  children:
  - SuperOffice.Data.UdefHelper.#ctor
  - SuperOffice.Data.UdefHelper.AdminPage1LineNo
  - SuperOffice.Data.UdefHelper.CheckRevisionAsync
  - SuperOffice.Data.UdefHelper.CheckRevisionAsync(SuperOffice.Data.UDefType)
  - SuperOffice.Data.UdefHelper.CompareUdefRows(SuperOffice.CRM.Rows.UDefFieldRow,SuperOffice.CRM.Rows.UDefFieldRow)
  - SuperOffice.Data.UdefHelper.ConvertFromAdminLineNo(System.Int32)
  - SuperOffice.Data.UdefHelper.ConvertToAdminLineNo(System.Int32)
  - SuperOffice.Data.UdefHelper.FindAvailableFieldAsync(SuperOffice.Data.UDefType,SuperOffice.Data.UDefFieldType)
  - SuperOffice.Data.UdefHelper.FindAvailableFieldAsync(SuperOffice.Data.UDefType,SuperOffice.Data.UDefFieldType,System.Boolean)
  - SuperOffice.Data.UdefHelper.GetAdminVersionAsync(SuperOffice.Data.UDefType)
  - SuperOffice.Data.UdefHelper.GetAdminVersionsAsync
  - SuperOffice.Data.UdefHelper.GetAdminVersionsAsync(SuperOffice.Data.UDefType[])
  - SuperOffice.Data.UdefHelper.GetAllFields(SuperOffice.Data.UDefType,SuperOffice.Data.UDefFieldType)
  - SuperOffice.Data.UdefHelper.GetCurrentVersionAsync(SuperOffice.Data.UDefType)
  - SuperOffice.Data.UdefHelper.GetCurrentVersionsAsync
  - SuperOffice.Data.UdefHelper.GetCurrentVersionsAsync(SuperOffice.Data.UDefType[])
  - SuperOffice.Data.UdefHelper.GetDefaultValue(SuperOffice.CRM.Rows.UDefFieldRow)
  - SuperOffice.Data.UdefHelper.GetListName(SuperOffice.CRM.Rows.UDefFieldRow)
  - SuperOffice.Data.UdefHelper.GetTableInfo(SuperOffice.Data.UDefType)
  - SuperOffice.Data.UdefHelper.GetTableInfoLarge(SuperOffice.Data.UDefType)
  - SuperOffice.Data.UdefHelper.GetTableInfoLargeOrSmall(SuperOffice.Data.UDefType,SuperOffice.Data.UDefFieldType)
  - SuperOffice.Data.UdefHelper.GetTableInfoSmall(SuperOffice.Data.UDefType)
  - SuperOffice.Data.UdefHelper.GetTemplateVariableName(SuperOffice.Data.UDefType,SuperOffice.Data.UDefFieldType,System.Int32)
  - SuperOffice.Data.UdefHelper.GetUdefType(SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.Data.UdefHelper.GetUdefType(System.Int32)
  - SuperOffice.Data.UdefHelper.GetUserPreferenceMDOListString(SuperOffice.Data.UDefType)
  - SuperOffice.Data.UdefHelper.GetUserPreferenceMDOListStringAdmin(SuperOffice.Data.UDefType)
  - SuperOffice.Data.UdefHelper.GetVersionPreferenceAdmin(SuperOffice.Data.UDefType)
  - SuperOffice.Data.UdefHelper.GetVersionPreferenceCurrent(SuperOffice.Data.UDefType)
  - SuperOffice.Data.UdefHelper.IncrementAdminVersionAsync(SuperOffice.Data.UDefType)
  - SuperOffice.Data.UdefHelper.IncrementCurrentVersionAsync(SuperOffice.Data.UDefType)
  - SuperOffice.Data.UdefHelper.IsLargeTableColumn(System.Int32)
  - SuperOffice.Data.UdefHelper.IsPageOneMDOAsync(SuperOffice.Data.UDefType,System.Threading.CancellationToken)
  - SuperOffice.Data.UdefHelper.IsSmallTableColumn(System.Int32)
  - SuperOffice.Data.UdefHelper.IsUnpublishedPageOneMDOAsync(SuperOffice.Data.UDefType,System.Threading.CancellationToken)
  - SuperOffice.Data.UdefHelper.SetAdminVersionAsync(SuperOffice.Data.UDefType,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.Data.UdefHelper.SetCurrentVersionAsync(SuperOffice.Data.UDefType,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.Data.UdefHelper.SetRankOnFieldsAsync(SuperOffice.Data.UDefType,System.Int32[])
  - SuperOffice.Data.UdefHelper.SuggestLocation(SuperOffice.Data.UDefType,System.Int32@,System.Int32@,System.Int32,System.Int32,System.Int32@,System.Int32@)
  - SuperOffice.Data.UdefHelper.TranslateFieldTypeToDatabaseType(SuperOffice.Data.UDefFieldType)
  langs:
  - csharp
  - vb
  name: UdefHelper
  nameWithType: UdefHelper
  fullName: SuperOffice.Data.UdefHelper
  type: Class
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Data
  summary: This class contains helper functions for handling user-defined fields.
  example: []
  syntax:
    content: 'public class UdefHelper : IUdefHelper'
    content.vb: Public Class UdefHelper Implements IUdefHelper
  inheritance:
  - System.Object
  implements:
  - SuperOffice.Data.IUdefHelper
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.Data.UdefHelper.EnumUtil.MapEnums``2
  - SuperOffice.Data.UdefHelper.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  - SuperOffice.Data.UdefHelper.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Data.UdefHelper)
  - SuperOffice.Data.UdefHelper.SuperOffice.Util.ObjectExtensions.GraphCopy``1
- uid: SuperOffice.Data.UdefHelper.AdminPage1LineNo
  commentId: F:SuperOffice.Data.UdefHelper.AdminPage1LineNo
  id: AdminPage1LineNo
  parent: SuperOffice.Data.UdefHelper
  langs:
  - csharp
  - vb
  name: AdminPage1LineNo
  nameWithType: UdefHelper.AdminPage1LineNo
  fullName: SuperOffice.Data.UdefHelper.AdminPage1LineNo
  type: Field
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Data
  syntax:
    content: public const int AdminPage1LineNo = 10000
    return:
      type: System.Int32
    content.vb: Public Const AdminPage1LineNo As Integer = 10000
- uid: SuperOffice.Data.UdefHelper.TranslateFieldTypeToDatabaseType(SuperOffice.Data.UDefFieldType)
  commentId: M:SuperOffice.Data.UdefHelper.TranslateFieldTypeToDatabaseType(SuperOffice.Data.UDefFieldType)
  id: TranslateFieldTypeToDatabaseType(SuperOffice.Data.UDefFieldType)
  parent: SuperOffice.Data.UdefHelper
  langs:
  - csharp
  - vb
  name: TranslateFieldTypeToDatabaseType(UDefFieldType)
  nameWithType: UdefHelper.TranslateFieldTypeToDatabaseType(UDefFieldType)
  fullName: SuperOffice.Data.UdefHelper.TranslateFieldTypeToDatabaseType(SuperOffice.Data.UDefFieldType)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Data
  example: []
  syntax:
    content: public UDefFieldDatabaseType TranslateFieldTypeToDatabaseType(UDefFieldType fieldType)
    parameters:
    - id: fieldType
      type: SuperOffice.Data.UDefFieldType
    return:
      type: SuperOffice.Data.UDefFieldDatabaseType
    content.vb: Public Function TranslateFieldTypeToDatabaseType(fieldType As UDefFieldType) As UDefFieldDatabaseType
  overload: SuperOffice.Data.UdefHelper.TranslateFieldTypeToDatabaseType*
  implements:
  - SuperOffice.Data.IUdefHelper.TranslateFieldTypeToDatabaseType(SuperOffice.Data.UDefFieldType)
- uid: SuperOffice.Data.UdefHelper.GetListName(SuperOffice.CRM.Rows.UDefFieldRow)
  commentId: M:SuperOffice.Data.UdefHelper.GetListName(SuperOffice.CRM.Rows.UDefFieldRow)
  id: GetListName(SuperOffice.CRM.Rows.UDefFieldRow)
  parent: SuperOffice.Data.UdefHelper
  langs:
  - csharp
  - vb
  name: GetListName(UDefFieldRow)
  nameWithType: UdefHelper.GetListName(UDefFieldRow)
  fullName: SuperOffice.Data.UdefHelper.GetListName(SuperOffice.CRM.Rows.UDefFieldRow)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Data
  summary: >-
    Get the name of the MDO list associate with the given udef field. An empty string is returned

    if the field is not a list field.
  remarks: >-
    The list associated with a udef field is generally given by the <xref href="SuperOffice.CRM.Rows.UDefFieldRow.ListTableId" data-throw-if-not-resolved="false"></xref> property

    of the definition. However, there is some special treatment:
  example: []
  syntax:
    content: public string GetListName(UDefFieldRow definition)
    parameters:
    - id: definition
      type: SuperOffice.CRM.Rows.UDefFieldRow
      description: User-defined field to get list name for
    return:
      type: System.String
      description: ''
    content.vb: Public Function GetListName(definition As UDefFieldRow) As String
  overload: SuperOffice.Data.UdefHelper.GetListName*
  implements:
  - SuperOffice.Data.IUdefHelper.GetListName(SuperOffice.CRM.Rows.UDefFieldRow)
- uid: SuperOffice.Data.UdefHelper.GetDefaultValue(SuperOffice.CRM.Rows.UDefFieldRow)
  commentId: M:SuperOffice.Data.UdefHelper.GetDefaultValue(SuperOffice.CRM.Rows.UDefFieldRow)
  id: GetDefaultValue(SuperOffice.CRM.Rows.UDefFieldRow)
  parent: SuperOffice.Data.UdefHelper
  langs:
  - csharp
  - vb
  name: GetDefaultValue(UDefFieldRow)
  nameWithType: UdefHelper.GetDefaultValue(UDefFieldRow)
  fullName: SuperOffice.Data.UdefHelper.GetDefaultValue(SuperOffice.CRM.Rows.UDefFieldRow)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Data
  summary: >-
    Get a field's default value as a typed (parsed) object: an int, a date, or whatever. There are

    no parsing exceptions thrown by this method. Multi-language parsing is performed for all

    kinds of values prior to other parsing, as in the windows client.
  example: []
  syntax:
    content: public object GetDefaultValue(UDefFieldRow definition)
    parameters:
    - id: definition
      type: SuperOffice.CRM.Rows.UDefFieldRow
      description: Udef field definition
    return:
      type: System.Object
      description: >-
        An object of the correct type for the database type of the udef field (so a 
                    dropdown list field will get an int, which is the list item id). If the stored default is
                    not parseable as the target type, an 'empty' object of the correct type is returned
                    (0 for ints, etc.)
    content.vb: Public Function GetDefaultValue(definition As UDefFieldRow) As Object
  overload: SuperOffice.Data.UdefHelper.GetDefaultValue*
  implements:
  - SuperOffice.Data.IUdefHelper.GetDefaultValue(SuperOffice.CRM.Rows.UDefFieldRow)
- uid: SuperOffice.Data.UdefHelper.GetVersionPreferenceCurrent(SuperOffice.Data.UDefType)
  commentId: M:SuperOffice.Data.UdefHelper.GetVersionPreferenceCurrent(SuperOffice.Data.UDefType)
  id: GetVersionPreferenceCurrent(SuperOffice.Data.UDefType)
  parent: SuperOffice.Data.UdefHelper
  langs:
  - csharp
  - vb
  name: GetVersionPreferenceCurrent(UDefType)
  nameWithType: UdefHelper.GetVersionPreferenceCurrent(UDefType)
  fullName: SuperOffice.Data.UdefHelper.GetVersionPreferenceCurrent(SuperOffice.Data.UDefType)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Data
  summary: Get the version preference string for the given udef type
  example: []
  syntax:
    content: public string GetVersionPreferenceCurrent(UDefType type)
    parameters:
    - id: type
      type: SuperOffice.Data.UDefType
      description: Udef type, should be one of the "valid" ones
    return:
      type: System.String
      description: Preference key for the current version
    content.vb: Public Function GetVersionPreferenceCurrent(type As UDefType) As String
  overload: SuperOffice.Data.UdefHelper.GetVersionPreferenceCurrent*
  implements:
  - SuperOffice.Data.IUdefHelper.GetVersionPreferenceCurrent(SuperOffice.Data.UDefType)
- uid: SuperOffice.Data.UdefHelper.GetVersionPreferenceAdmin(SuperOffice.Data.UDefType)
  commentId: M:SuperOffice.Data.UdefHelper.GetVersionPreferenceAdmin(SuperOffice.Data.UDefType)
  id: GetVersionPreferenceAdmin(SuperOffice.Data.UDefType)
  parent: SuperOffice.Data.UdefHelper
  langs:
  - csharp
  - vb
  name: GetVersionPreferenceAdmin(UDefType)
  nameWithType: UdefHelper.GetVersionPreferenceAdmin(UDefType)
  fullName: SuperOffice.Data.UdefHelper.GetVersionPreferenceAdmin(SuperOffice.Data.UDefType)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Data
  summary: Get the version preference string for the given udef type
  example: []
  syntax:
    content: public string GetVersionPreferenceAdmin(UDefType type)
    parameters:
    - id: type
      type: SuperOffice.Data.UDefType
      description: Udef type, should be one of the "valid" ones
    return:
      type: System.String
      description: Preference key for the current version
    content.vb: Public Function GetVersionPreferenceAdmin(type As UDefType) As String
  overload: SuperOffice.Data.UdefHelper.GetVersionPreferenceAdmin*
  implements:
  - SuperOffice.Data.IUdefHelper.GetVersionPreferenceAdmin(SuperOffice.Data.UDefType)
- uid: SuperOffice.Data.UdefHelper.GetUserPreferenceMDOListStringAdmin(SuperOffice.Data.UDefType)
  commentId: M:SuperOffice.Data.UdefHelper.GetUserPreferenceMDOListStringAdmin(SuperOffice.Data.UDefType)
  id: GetUserPreferenceMDOListStringAdmin(SuperOffice.Data.UDefType)
  parent: SuperOffice.Data.UdefHelper
  langs:
  - csharp
  - vb
  name: GetUserPreferenceMDOListStringAdmin(UDefType)
  nameWithType: UdefHelper.GetUserPreferenceMDOListStringAdmin(UDefType)
  fullName: SuperOffice.Data.UdefHelper.GetUserPreferenceMDOListStringAdmin(SuperOffice.Data.UDefType)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Data
  example: []
  syntax:
    content: public string GetUserPreferenceMDOListStringAdmin(UDefType type)
    parameters:
    - id: type
      type: SuperOffice.Data.UDefType
    return:
      type: System.String
    content.vb: Public Function GetUserPreferenceMDOListStringAdmin(type As UDefType) As String
  overload: SuperOffice.Data.UdefHelper.GetUserPreferenceMDOListStringAdmin*
  implements:
  - SuperOffice.Data.IUdefHelper.GetUserPreferenceMDOListStringAdmin(SuperOffice.Data.UDefType)
- uid: SuperOffice.Data.UdefHelper.GetUserPreferenceMDOListString(SuperOffice.Data.UDefType)
  commentId: M:SuperOffice.Data.UdefHelper.GetUserPreferenceMDOListString(SuperOffice.Data.UDefType)
  id: GetUserPreferenceMDOListString(SuperOffice.Data.UDefType)
  parent: SuperOffice.Data.UdefHelper
  langs:
  - csharp
  - vb
  name: GetUserPreferenceMDOListString(UDefType)
  nameWithType: UdefHelper.GetUserPreferenceMDOListString(UDefType)
  fullName: SuperOffice.Data.UdefHelper.GetUserPreferenceMDOListString(SuperOffice.Data.UDefType)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Data
  example: []
  syntax:
    content: public string GetUserPreferenceMDOListString(UDefType type)
    parameters:
    - id: type
      type: SuperOffice.Data.UDefType
    return:
      type: System.String
    content.vb: Public Function GetUserPreferenceMDOListString(type As UDefType) As String
  overload: SuperOffice.Data.UdefHelper.GetUserPreferenceMDOListString*
  implements:
  - SuperOffice.Data.IUdefHelper.GetUserPreferenceMDOListString(SuperOffice.Data.UDefType)
- uid: SuperOffice.Data.UdefHelper.IsUnpublishedPageOneMDOAsync(SuperOffice.Data.UDefType,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Data.UdefHelper.IsUnpublishedPageOneMDOAsync(SuperOffice.Data.UDefType,System.Threading.CancellationToken)
  id: IsUnpublishedPageOneMDOAsync(SuperOffice.Data.UDefType,System.Threading.CancellationToken)
  parent: SuperOffice.Data.UdefHelper
  langs:
  - csharp
  - vb
  name: IsUnpublishedPageOneMDOAsync(UDefType, CancellationToken)
  nameWithType: UdefHelper.IsUnpublishedPageOneMDOAsync(UDefType, CancellationToken)
  fullName: SuperOffice.Data.UdefHelper.IsUnpublishedPageOneMDOAsync(SuperOffice.Data.UDefType, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Data
  example: []
  syntax:
    content: public Task<bool> IsUnpublishedPageOneMDOAsync(UDefType type, CancellationToken cancellationToken = default)
    parameters:
    - id: type
      type: SuperOffice.Data.UDefType
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function IsUnpublishedPageOneMDOAsync(type As UDefType, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.Data.UdefHelper.IsUnpublishedPageOneMDOAsync*
  implements:
  - SuperOffice.Data.IUdefHelper.IsUnpublishedPageOneMDOAsync(SuperOffice.Data.UDefType,System.Threading.CancellationToken)
- uid: SuperOffice.Data.UdefHelper.IsPageOneMDOAsync(SuperOffice.Data.UDefType,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Data.UdefHelper.IsPageOneMDOAsync(SuperOffice.Data.UDefType,System.Threading.CancellationToken)
  id: IsPageOneMDOAsync(SuperOffice.Data.UDefType,System.Threading.CancellationToken)
  parent: SuperOffice.Data.UdefHelper
  langs:
  - csharp
  - vb
  name: IsPageOneMDOAsync(UDefType, CancellationToken)
  nameWithType: UdefHelper.IsPageOneMDOAsync(UDefType, CancellationToken)
  fullName: SuperOffice.Data.UdefHelper.IsPageOneMDOAsync(SuperOffice.Data.UDefType, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Data
  example: []
  syntax:
    content: public Task<bool> IsPageOneMDOAsync(UDefType type, CancellationToken cancellationToken = default)
    parameters:
    - id: type
      type: SuperOffice.Data.UDefType
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function IsPageOneMDOAsync(type As UDefType, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.Data.UdefHelper.IsPageOneMDOAsync*
  implements:
  - SuperOffice.Data.IUdefHelper.IsPageOneMDOAsync(SuperOffice.Data.UDefType,System.Threading.CancellationToken)
- uid: SuperOffice.Data.UdefHelper.GetCurrentVersionAsync(SuperOffice.Data.UDefType)
  commentId: M:SuperOffice.Data.UdefHelper.GetCurrentVersionAsync(SuperOffice.Data.UDefType)
  id: GetCurrentVersionAsync(SuperOffice.Data.UDefType)
  parent: SuperOffice.Data.UdefHelper
  langs:
  - csharp
  - vb
  name: GetCurrentVersionAsync(UDefType)
  nameWithType: UdefHelper.GetCurrentVersionAsync(UDefType)
  fullName: SuperOffice.Data.UdefHelper.GetCurrentVersionAsync(SuperOffice.Data.UDefType)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Data
  summary: Get the current version number for the given udef type
  example: []
  syntax:
    content: public Task<int> GetCurrentVersionAsync(UDefType type)
    parameters:
    - id: type
      type: SuperOffice.Data.UDefType
      description: Udef type, should be one of the "valid" ones
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: Current version number for the given udef type
    content.vb: Public Function GetCurrentVersionAsync(type As UDefType) As Task(Of Integer)
  overload: SuperOffice.Data.UdefHelper.GetCurrentVersionAsync*
  implements:
  - SuperOffice.Data.IUdefHelper.GetCurrentVersionAsync(SuperOffice.Data.UDefType)
- uid: SuperOffice.Data.UdefHelper.GetAdminVersionAsync(SuperOffice.Data.UDefType)
  commentId: M:SuperOffice.Data.UdefHelper.GetAdminVersionAsync(SuperOffice.Data.UDefType)
  id: GetAdminVersionAsync(SuperOffice.Data.UDefType)
  parent: SuperOffice.Data.UdefHelper
  langs:
  - csharp
  - vb
  name: GetAdminVersionAsync(UDefType)
  nameWithType: UdefHelper.GetAdminVersionAsync(UDefType)
  fullName: SuperOffice.Data.UdefHelper.GetAdminVersionAsync(SuperOffice.Data.UDefType)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Data
  summary: Get the current version number for the given udef type
  example: []
  syntax:
    content: public Task<int> GetAdminVersionAsync(UDefType type)
    parameters:
    - id: type
      type: SuperOffice.Data.UDefType
      description: Udef type, should be one of the "valid" ones
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: Current version number for the given udef type
    content.vb: Public Function GetAdminVersionAsync(type As UDefType) As Task(Of Integer)
  overload: SuperOffice.Data.UdefHelper.GetAdminVersionAsync*
  implements:
  - SuperOffice.Data.IUdefHelper.GetAdminVersionAsync(SuperOffice.Data.UDefType)
- uid: SuperOffice.Data.UdefHelper.GetCurrentVersionsAsync
  commentId: M:SuperOffice.Data.UdefHelper.GetCurrentVersionsAsync
  id: GetCurrentVersionsAsync
  parent: SuperOffice.Data.UdefHelper
  langs:
  - csharp
  - vb
  name: GetCurrentVersionsAsync()
  nameWithType: UdefHelper.GetCurrentVersionsAsync()
  fullName: SuperOffice.Data.UdefHelper.GetCurrentVersionsAsync()
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Data
  summary: Return an array of pairs indicating the UDefTypes present in the system, and the current version for each of them
  example: []
  syntax:
    content: public Task<Dictionary<UDefType, int>> GetCurrentVersionsAsync()
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.Dictionary{SuperOffice.Data.UDefType,System.Int32}}
      description: ''
    content.vb: Public Function GetCurrentVersionsAsync() As Task(Of Dictionary(Of UDefType, Integer))
  overload: SuperOffice.Data.UdefHelper.GetCurrentVersionsAsync*
  implements:
  - SuperOffice.Data.IUdefHelper.GetCurrentVersionsAsync
- uid: SuperOffice.Data.UdefHelper.GetCurrentVersionsAsync(SuperOffice.Data.UDefType[])
  commentId: M:SuperOffice.Data.UdefHelper.GetCurrentVersionsAsync(SuperOffice.Data.UDefType[])
  id: GetCurrentVersionsAsync(SuperOffice.Data.UDefType[])
  parent: SuperOffice.Data.UdefHelper
  langs:
  - csharp
  - vb
  name: GetCurrentVersionsAsync(params UDefType[])
  nameWithType: UdefHelper.GetCurrentVersionsAsync(params UDefType[])
  fullName: SuperOffice.Data.UdefHelper.GetCurrentVersionsAsync(params SuperOffice.Data.UDefType[])
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Data
  example: []
  syntax:
    content: public Task<Dictionary<UDefType, int>> GetCurrentVersionsAsync(params UDefType[] types)
    parameters:
    - id: types
      type: SuperOffice.Data.UDefType[]
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.Dictionary{SuperOffice.Data.UDefType,System.Int32}}
    content.vb: Public Function GetCurrentVersionsAsync(ParamArray types As UDefType()) As Task(Of Dictionary(Of UDefType, Integer))
  overload: SuperOffice.Data.UdefHelper.GetCurrentVersionsAsync*
  implements:
  - SuperOffice.Data.IUdefHelper.GetCurrentVersionsAsync(SuperOffice.Data.UDefType[])
  nameWithType.vb: UdefHelper.GetCurrentVersionsAsync(ParamArray UDefType())
  fullName.vb: SuperOffice.Data.UdefHelper.GetCurrentVersionsAsync(ParamArray SuperOffice.Data.UDefType())
  name.vb: GetCurrentVersionsAsync(ParamArray UDefType())
- uid: SuperOffice.Data.UdefHelper.GetAdminVersionsAsync
  commentId: M:SuperOffice.Data.UdefHelper.GetAdminVersionsAsync
  id: GetAdminVersionsAsync
  parent: SuperOffice.Data.UdefHelper
  langs:
  - csharp
  - vb
  name: GetAdminVersionsAsync()
  nameWithType: UdefHelper.GetAdminVersionsAsync()
  fullName: SuperOffice.Data.UdefHelper.GetAdminVersionsAsync()
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Data
  summary: Return an array of pairs indicating the UDefTypes present in the system, and the current version for each of them
  example: []
  syntax:
    content: public Task<Dictionary<UDefType, int>> GetAdminVersionsAsync()
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.Dictionary{SuperOffice.Data.UDefType,System.Int32}}
      description: ''
    content.vb: Public Function GetAdminVersionsAsync() As Task(Of Dictionary(Of UDefType, Integer))
  overload: SuperOffice.Data.UdefHelper.GetAdminVersionsAsync*
  implements:
  - SuperOffice.Data.IUdefHelper.GetAdminVersionsAsync
- uid: SuperOffice.Data.UdefHelper.GetAdminVersionsAsync(SuperOffice.Data.UDefType[])
  commentId: M:SuperOffice.Data.UdefHelper.GetAdminVersionsAsync(SuperOffice.Data.UDefType[])
  id: GetAdminVersionsAsync(SuperOffice.Data.UDefType[])
  parent: SuperOffice.Data.UdefHelper
  langs:
  - csharp
  - vb
  name: GetAdminVersionsAsync(params UDefType[])
  nameWithType: UdefHelper.GetAdminVersionsAsync(params UDefType[])
  fullName: SuperOffice.Data.UdefHelper.GetAdminVersionsAsync(params SuperOffice.Data.UDefType[])
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Data
  example: []
  syntax:
    content: public Task<Dictionary<UDefType, int>> GetAdminVersionsAsync(params UDefType[] types)
    parameters:
    - id: types
      type: SuperOffice.Data.UDefType[]
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.Dictionary{SuperOffice.Data.UDefType,System.Int32}}
    content.vb: Public Function GetAdminVersionsAsync(ParamArray types As UDefType()) As Task(Of Dictionary(Of UDefType, Integer))
  overload: SuperOffice.Data.UdefHelper.GetAdminVersionsAsync*
  implements:
  - SuperOffice.Data.IUdefHelper.GetAdminVersionsAsync(SuperOffice.Data.UDefType[])
  nameWithType.vb: UdefHelper.GetAdminVersionsAsync(ParamArray UDefType())
  fullName.vb: SuperOffice.Data.UdefHelper.GetAdminVersionsAsync(ParamArray SuperOffice.Data.UDefType())
  name.vb: GetAdminVersionsAsync(ParamArray UDefType())
- uid: SuperOffice.Data.UdefHelper.SetAdminVersionAsync(SuperOffice.Data.UDefType,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Data.UdefHelper.SetAdminVersionAsync(SuperOffice.Data.UDefType,System.Int32,System.Threading.CancellationToken)
  id: SetAdminVersionAsync(SuperOffice.Data.UDefType,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.Data.UdefHelper
  langs:
  - csharp
  - vb
  name: SetAdminVersionAsync(UDefType, int, CancellationToken)
  nameWithType: UdefHelper.SetAdminVersionAsync(UDefType, int, CancellationToken)
  fullName: SuperOffice.Data.UdefHelper.SetAdminVersionAsync(SuperOffice.Data.UDefType, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Data
  summary: Set the admin version number for the given udef type
  example: []
  syntax:
    content: public Task SetAdminVersionAsync(UDefType type, int version, CancellationToken cancellationToken = default)
    parameters:
    - id: type
      type: SuperOffice.Data.UDefType
      description: Udef type, should be one of the "valid" ones
    - id: version
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: Current version number for the given udef type
    content.vb: Public Function SetAdminVersionAsync(type As UDefType, version As Integer, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.Data.UdefHelper.SetAdminVersionAsync*
  implements:
  - SuperOffice.Data.IUdefHelper.SetAdminVersionAsync(SuperOffice.Data.UDefType,System.Int32,System.Threading.CancellationToken)
  nameWithType.vb: UdefHelper.SetAdminVersionAsync(UDefType, Integer, CancellationToken)
  fullName.vb: SuperOffice.Data.UdefHelper.SetAdminVersionAsync(SuperOffice.Data.UDefType, Integer, System.Threading.CancellationToken)
  name.vb: SetAdminVersionAsync(UDefType, Integer, CancellationToken)
- uid: SuperOffice.Data.UdefHelper.SetCurrentVersionAsync(SuperOffice.Data.UDefType,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Data.UdefHelper.SetCurrentVersionAsync(SuperOffice.Data.UDefType,System.Int32,System.Threading.CancellationToken)
  id: SetCurrentVersionAsync(SuperOffice.Data.UDefType,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.Data.UdefHelper
  langs:
  - csharp
  - vb
  name: SetCurrentVersionAsync(UDefType, int, CancellationToken)
  nameWithType: UdefHelper.SetCurrentVersionAsync(UDefType, int, CancellationToken)
  fullName: SuperOffice.Data.UdefHelper.SetCurrentVersionAsync(SuperOffice.Data.UDefType, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Data
  summary: Set the current version number for the given udef type
  example: []
  syntax:
    content: public Task SetCurrentVersionAsync(UDefType type, int version, CancellationToken cancellationToken = default)
    parameters:
    - id: type
      type: SuperOffice.Data.UDefType
      description: Udef type, should be one of the "valid" ones
    - id: version
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: Current version number for the given udef type
    content.vb: Public Function SetCurrentVersionAsync(type As UDefType, version As Integer, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.Data.UdefHelper.SetCurrentVersionAsync*
  implements:
  - SuperOffice.Data.IUdefHelper.SetCurrentVersionAsync(SuperOffice.Data.UDefType,System.Int32,System.Threading.CancellationToken)
  nameWithType.vb: UdefHelper.SetCurrentVersionAsync(UDefType, Integer, CancellationToken)
  fullName.vb: SuperOffice.Data.UdefHelper.SetCurrentVersionAsync(SuperOffice.Data.UDefType, Integer, System.Threading.CancellationToken)
  name.vb: SetCurrentVersionAsync(UDefType, Integer, CancellationToken)
- uid: SuperOffice.Data.UdefHelper.IncrementAdminVersionAsync(SuperOffice.Data.UDefType)
  commentId: M:SuperOffice.Data.UdefHelper.IncrementAdminVersionAsync(SuperOffice.Data.UDefType)
  id: IncrementAdminVersionAsync(SuperOffice.Data.UDefType)
  parent: SuperOffice.Data.UdefHelper
  langs:
  - csharp
  - vb
  name: IncrementAdminVersionAsync(UDefType)
  nameWithType: UdefHelper.IncrementAdminVersionAsync(UDefType)
  fullName: SuperOffice.Data.UdefHelper.IncrementAdminVersionAsync(SuperOffice.Data.UDefType)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Data
  summary: Set the admin version number for the given udef type
  example: []
  syntax:
    content: public Task<int> IncrementAdminVersionAsync(UDefType type)
    parameters:
    - id: type
      type: SuperOffice.Data.UDefType
      description: Udef type, should be one of the "valid" ones
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: Current version number for the given udef type
    content.vb: Public Function IncrementAdminVersionAsync(type As UDefType) As Task(Of Integer)
  overload: SuperOffice.Data.UdefHelper.IncrementAdminVersionAsync*
  implements:
  - SuperOffice.Data.IUdefHelper.IncrementAdminVersionAsync(SuperOffice.Data.UDefType)
- uid: SuperOffice.Data.UdefHelper.IncrementCurrentVersionAsync(SuperOffice.Data.UDefType)
  commentId: M:SuperOffice.Data.UdefHelper.IncrementCurrentVersionAsync(SuperOffice.Data.UDefType)
  id: IncrementCurrentVersionAsync(SuperOffice.Data.UDefType)
  parent: SuperOffice.Data.UdefHelper
  langs:
  - csharp
  - vb
  name: IncrementCurrentVersionAsync(UDefType)
  nameWithType: UdefHelper.IncrementCurrentVersionAsync(UDefType)
  fullName: SuperOffice.Data.UdefHelper.IncrementCurrentVersionAsync(SuperOffice.Data.UDefType)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Data
  summary: Set the current version number for the given udef type to the adminversion.
  example: []
  syntax:
    content: public Task<int> IncrementCurrentVersionAsync(UDefType type)
    parameters:
    - id: type
      type: SuperOffice.Data.UDefType
      description: Udef type, should be one of the "valid" ones
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: Current version number for the given udef type
    content.vb: Public Function IncrementCurrentVersionAsync(type As UDefType) As Task(Of Integer)
  overload: SuperOffice.Data.UdefHelper.IncrementCurrentVersionAsync*
  implements:
  - SuperOffice.Data.IUdefHelper.IncrementCurrentVersionAsync(SuperOffice.Data.UDefType)
- uid: SuperOffice.Data.UdefHelper.GetUdefType(SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.Data.UdefHelper.GetUdefType(SuperOffice.Data.SQL.TableInfo)
  id: GetUdefType(SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.Data.UdefHelper
  langs:
  - csharp
  - vb
  name: GetUdefType(TableInfo)
  nameWithType: UdefHelper.GetUdefType(TableInfo)
  fullName: SuperOffice.Data.UdefHelper.GetUdefType(SuperOffice.Data.SQL.TableInfo)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Data
  summary: Get the udef type of the given table
  example: []
  syntax:
    content: public UDefType GetUdefType(TableInfo tableInfo)
    parameters:
    - id: tableInfo
      type: SuperOffice.Data.SQL.TableInfo
      description: Table info object
    return:
      type: SuperOffice.Data.UDefType
      description: udef type of table
    content.vb: Public Function GetUdefType(tableInfo As TableInfo) As UDefType
  overload: SuperOffice.Data.UdefHelper.GetUdefType*
  implements:
  - SuperOffice.Data.IUdefHelper.GetUdefType(SuperOffice.Data.SQL.TableInfo)
- uid: SuperOffice.Data.UdefHelper.GetTableInfoSmall(SuperOffice.Data.UDefType)
  commentId: M:SuperOffice.Data.UdefHelper.GetTableInfoSmall(SuperOffice.Data.UDefType)
  id: GetTableInfoSmall(SuperOffice.Data.UDefType)
  parent: SuperOffice.Data.UdefHelper
  langs:
  - csharp
  - vb
  name: GetTableInfoSmall(UDefType)
  nameWithType: UdefHelper.GetTableInfoSmall(UDefType)
  fullName: SuperOffice.Data.UdefHelper.GetTableInfoSmall(SuperOffice.Data.UDefType)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Data
  example: []
  syntax:
    content: public TableInfo GetTableInfoSmall(UDefType type)
    parameters:
    - id: type
      type: SuperOffice.Data.UDefType
    return:
      type: SuperOffice.Data.SQL.TableInfo
    content.vb: Public Function GetTableInfoSmall(type As UDefType) As TableInfo
  overload: SuperOffice.Data.UdefHelper.GetTableInfoSmall*
  implements:
  - SuperOffice.Data.IUdefHelper.GetTableInfoSmall(SuperOffice.Data.UDefType)
- uid: SuperOffice.Data.UdefHelper.GetTableInfoLarge(SuperOffice.Data.UDefType)
  commentId: M:SuperOffice.Data.UdefHelper.GetTableInfoLarge(SuperOffice.Data.UDefType)
  id: GetTableInfoLarge(SuperOffice.Data.UDefType)
  parent: SuperOffice.Data.UdefHelper
  langs:
  - csharp
  - vb
  name: GetTableInfoLarge(UDefType)
  nameWithType: UdefHelper.GetTableInfoLarge(UDefType)
  fullName: SuperOffice.Data.UdefHelper.GetTableInfoLarge(SuperOffice.Data.UDefType)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Data
  example: []
  syntax:
    content: public TableInfo GetTableInfoLarge(UDefType type)
    parameters:
    - id: type
      type: SuperOffice.Data.UDefType
    return:
      type: SuperOffice.Data.SQL.TableInfo
    content.vb: Public Function GetTableInfoLarge(type As UDefType) As TableInfo
  overload: SuperOffice.Data.UdefHelper.GetTableInfoLarge*
  implements:
  - SuperOffice.Data.IUdefHelper.GetTableInfoLarge(SuperOffice.Data.UDefType)
- uid: SuperOffice.Data.UdefHelper.GetTableInfo(SuperOffice.Data.UDefType)
  commentId: M:SuperOffice.Data.UdefHelper.GetTableInfo(SuperOffice.Data.UDefType)
  id: GetTableInfo(SuperOffice.Data.UDefType)
  parent: SuperOffice.Data.UdefHelper
  langs:
  - csharp
  - vb
  name: GetTableInfo(UDefType)
  nameWithType: UdefHelper.GetTableInfo(UDefType)
  fullName: SuperOffice.Data.UdefHelper.GetTableInfo(SuperOffice.Data.UDefType)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Data
  example: []
  syntax:
    content: public TableInfo GetTableInfo(UDefType type)
    parameters:
    - id: type
      type: SuperOffice.Data.UDefType
    return:
      type: SuperOffice.Data.SQL.TableInfo
    content.vb: Public Function GetTableInfo(type As UDefType) As TableInfo
  overload: SuperOffice.Data.UdefHelper.GetTableInfo*
  implements:
  - SuperOffice.Data.IUdefHelper.GetTableInfo(SuperOffice.Data.UDefType)
- uid: SuperOffice.Data.UdefHelper.GetTableInfoLargeOrSmall(SuperOffice.Data.UDefType,SuperOffice.Data.UDefFieldType)
  commentId: M:SuperOffice.Data.UdefHelper.GetTableInfoLargeOrSmall(SuperOffice.Data.UDefType,SuperOffice.Data.UDefFieldType)
  id: GetTableInfoLargeOrSmall(SuperOffice.Data.UDefType,SuperOffice.Data.UDefFieldType)
  parent: SuperOffice.Data.UdefHelper
  langs:
  - csharp
  - vb
  name: GetTableInfoLargeOrSmall(UDefType, UDefFieldType)
  nameWithType: UdefHelper.GetTableInfoLargeOrSmall(UDefType, UDefFieldType)
  fullName: SuperOffice.Data.UdefHelper.GetTableInfoLargeOrSmall(SuperOffice.Data.UDefType, SuperOffice.Data.UDefFieldType)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Data
  example: []
  syntax:
    content: public TableInfo GetTableInfoLargeOrSmall(UDefType type, UDefFieldType fieldType)
    parameters:
    - id: type
      type: SuperOffice.Data.UDefType
    - id: fieldType
      type: SuperOffice.Data.UDefFieldType
    return:
      type: SuperOffice.Data.SQL.TableInfo
    content.vb: Public Function GetTableInfoLargeOrSmall(type As UDefType, fieldType As UDefFieldType) As TableInfo
  overload: SuperOffice.Data.UdefHelper.GetTableInfoLargeOrSmall*
  implements:
  - SuperOffice.Data.IUdefHelper.GetTableInfoLargeOrSmall(SuperOffice.Data.UDefType,SuperOffice.Data.UDefFieldType)
- uid: SuperOffice.Data.UdefHelper.GetUdefType(System.Int32)
  commentId: M:SuperOffice.Data.UdefHelper.GetUdefType(System.Int32)
  id: GetUdefType(System.Int32)
  parent: SuperOffice.Data.UdefHelper
  langs:
  - csharp
  - vb
  name: GetUdefType(int)
  nameWithType: UdefHelper.GetUdefType(int)
  fullName: SuperOffice.Data.UdefHelper.GetUdefType(int)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Data
  summary: Get the udef type of the given table
  example: []
  syntax:
    content: public UDefType GetUdefType(int tableNumber)
    parameters:
    - id: tableNumber
      type: System.Int32
      description: 0-based table index
    return:
      type: SuperOffice.Data.UDefType
      description: udef type of table
    content.vb: Public Function GetUdefType(tableNumber As Integer) As UDefType
  overload: SuperOffice.Data.UdefHelper.GetUdefType*
  implements:
  - SuperOffice.Data.IUdefHelper.GetUdefType(System.Int32)
  nameWithType.vb: UdefHelper.GetUdefType(Integer)
  fullName.vb: SuperOffice.Data.UdefHelper.GetUdefType(Integer)
  name.vb: GetUdefType(Integer)
- uid: SuperOffice.Data.UdefHelper.IsSmallTableColumn(System.Int32)
  commentId: M:SuperOffice.Data.UdefHelper.IsSmallTableColumn(System.Int32)
  id: IsSmallTableColumn(System.Int32)
  parent: SuperOffice.Data.UdefHelper
  langs:
  - csharp
  - vb
  name: IsSmallTableColumn(int)
  nameWithType: UdefHelper.IsSmallTableColumn(int)
  fullName: SuperOffice.Data.UdefHelper.IsSmallTableColumn(int)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Data
  example: []
  syntax:
    content: public bool IsSmallTableColumn(int columnId)
    parameters:
    - id: columnId
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Function IsSmallTableColumn(columnId As Integer) As Boolean
  overload: SuperOffice.Data.UdefHelper.IsSmallTableColumn*
  implements:
  - SuperOffice.Data.IUdefHelper.IsSmallTableColumn(System.Int32)
  nameWithType.vb: UdefHelper.IsSmallTableColumn(Integer)
  fullName.vb: SuperOffice.Data.UdefHelper.IsSmallTableColumn(Integer)
  name.vb: IsSmallTableColumn(Integer)
- uid: SuperOffice.Data.UdefHelper.IsLargeTableColumn(System.Int32)
  commentId: M:SuperOffice.Data.UdefHelper.IsLargeTableColumn(System.Int32)
  id: IsLargeTableColumn(System.Int32)
  parent: SuperOffice.Data.UdefHelper
  langs:
  - csharp
  - vb
  name: IsLargeTableColumn(int)
  nameWithType: UdefHelper.IsLargeTableColumn(int)
  fullName: SuperOffice.Data.UdefHelper.IsLargeTableColumn(int)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Data
  example: []
  syntax:
    content: public bool IsLargeTableColumn(int columnId)
    parameters:
    - id: columnId
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Function IsLargeTableColumn(columnId As Integer) As Boolean
  overload: SuperOffice.Data.UdefHelper.IsLargeTableColumn*
  implements:
  - SuperOffice.Data.IUdefHelper.IsLargeTableColumn(System.Int32)
  nameWithType.vb: UdefHelper.IsLargeTableColumn(Integer)
  fullName.vb: SuperOffice.Data.UdefHelper.IsLargeTableColumn(Integer)
  name.vb: IsLargeTableColumn(Integer)
- uid: SuperOffice.Data.UdefHelper.GetAllFields(SuperOffice.Data.UDefType,SuperOffice.Data.UDefFieldType)
  commentId: M:SuperOffice.Data.UdefHelper.GetAllFields(SuperOffice.Data.UDefType,SuperOffice.Data.UDefFieldType)
  id: GetAllFields(SuperOffice.Data.UDefType,SuperOffice.Data.UDefFieldType)
  parent: SuperOffice.Data.UdefHelper
  langs:
  - csharp
  - vb
  name: GetAllFields(UDefType, UDefFieldType)
  nameWithType: UdefHelper.GetAllFields(UDefType, UDefFieldType)
  fullName: SuperOffice.Data.UdefHelper.GetAllFields(SuperOffice.Data.UDefType, SuperOffice.Data.UDefFieldType)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Data
  example: []
  syntax:
    content: public IEnumerable<FieldInfo> GetAllFields(UDefType type, UDefFieldType fieldType)
    parameters:
    - id: type
      type: SuperOffice.Data.UDefType
    - id: fieldType
      type: SuperOffice.Data.UDefFieldType
    return:
      type: System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.FieldInfo}
    content.vb: Public Function GetAllFields(type As UDefType, fieldType As UDefFieldType) As IEnumerable(Of FieldInfo)
  overload: SuperOffice.Data.UdefHelper.GetAllFields*
  implements:
  - SuperOffice.Data.IUdefHelper.GetAllFields(SuperOffice.Data.UDefType,SuperOffice.Data.UDefFieldType)
- uid: SuperOffice.Data.UdefHelper.FindAvailableFieldAsync(SuperOffice.Data.UDefType,SuperOffice.Data.UDefFieldType)
  commentId: M:SuperOffice.Data.UdefHelper.FindAvailableFieldAsync(SuperOffice.Data.UDefType,SuperOffice.Data.UDefFieldType)
  id: FindAvailableFieldAsync(SuperOffice.Data.UDefType,SuperOffice.Data.UDefFieldType)
  parent: SuperOffice.Data.UdefHelper
  langs:
  - csharp
  - vb
  name: FindAvailableFieldAsync(UDefType, UDefFieldType)
  nameWithType: UdefHelper.FindAvailableFieldAsync(UDefType, UDefFieldType)
  fullName: SuperOffice.Data.UdefHelper.FindAvailableFieldAsync(SuperOffice.Data.UDefType, SuperOffice.Data.UDefFieldType)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Data
  example: []
  syntax:
    content: public Task<FieldInfo> FindAvailableFieldAsync(UDefType type, UDefFieldType fieldType)
    parameters:
    - id: type
      type: SuperOffice.Data.UDefType
    - id: fieldType
      type: SuperOffice.Data.UDefFieldType
    return:
      type: System.Threading.Tasks.Task{SuperOffice.Data.SQL.FieldInfo}
    content.vb: Public Function FindAvailableFieldAsync(type As UDefType, fieldType As UDefFieldType) As Task(Of FieldInfo)
  overload: SuperOffice.Data.UdefHelper.FindAvailableFieldAsync*
  implements:
  - SuperOffice.Data.IUdefHelper.FindAvailableFieldAsync(SuperOffice.Data.UDefType,SuperOffice.Data.UDefFieldType)
- uid: SuperOffice.Data.UdefHelper.FindAvailableFieldAsync(SuperOffice.Data.UDefType,SuperOffice.Data.UDefFieldType,System.Boolean)
  commentId: M:SuperOffice.Data.UdefHelper.FindAvailableFieldAsync(SuperOffice.Data.UDefType,SuperOffice.Data.UDefFieldType,System.Boolean)
  id: FindAvailableFieldAsync(SuperOffice.Data.UDefType,SuperOffice.Data.UDefFieldType,System.Boolean)
  parent: SuperOffice.Data.UdefHelper
  langs:
  - csharp
  - vb
  name: FindAvailableFieldAsync(UDefType, UDefFieldType, bool)
  nameWithType: UdefHelper.FindAvailableFieldAsync(UDefType, UDefFieldType, bool)
  fullName: SuperOffice.Data.UdefHelper.FindAvailableFieldAsync(SuperOffice.Data.UDefType, SuperOffice.Data.UDefFieldType, bool)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Data
  summary: Find available field of given type
  example: []
  syntax:
    content: public Task<FieldInfo> FindAvailableFieldAsync(UDefType type, UDefFieldType fieldType, bool isIndexed)
    parameters:
    - id: type
      type: SuperOffice.Data.UDefType
      description: ''
    - id: fieldType
      type: SuperOffice.Data.UDefFieldType
      description: ''
    - id: isIndexed
      type: System.Boolean
      description: Dummy parameter for backwards compatibility. Indexin no longer influences field allocation
    return:
      type: System.Threading.Tasks.Task{SuperOffice.Data.SQL.FieldInfo}
      description: ''
    content.vb: Public Function FindAvailableFieldAsync(type As UDefType, fieldType As UDefFieldType, isIndexed As Boolean) As Task(Of FieldInfo)
  overload: SuperOffice.Data.UdefHelper.FindAvailableFieldAsync*
  implements:
  - SuperOffice.Data.IUdefHelper.FindAvailableFieldAsync(SuperOffice.Data.UDefType,SuperOffice.Data.UDefFieldType,System.Boolean)
  nameWithType.vb: UdefHelper.FindAvailableFieldAsync(UDefType, UDefFieldType, Boolean)
  fullName.vb: SuperOffice.Data.UdefHelper.FindAvailableFieldAsync(SuperOffice.Data.UDefType, SuperOffice.Data.UDefFieldType, Boolean)
  name.vb: FindAvailableFieldAsync(UDefType, UDefFieldType, Boolean)
- uid: SuperOffice.Data.UdefHelper.CheckRevisionAsync
  commentId: M:SuperOffice.Data.UdefHelper.CheckRevisionAsync
  id: CheckRevisionAsync
  parent: SuperOffice.Data.UdefHelper
  langs:
  - csharp
  - vb
  name: CheckRevisionAsync()
  nameWithType: UdefHelper.CheckRevisionAsync()
  fullName: SuperOffice.Data.UdefHelper.CheckRevisionAsync()
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Data
  example: []
  syntax:
    content: public Task CheckRevisionAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function CheckRevisionAsync() As Task
  overload: SuperOffice.Data.UdefHelper.CheckRevisionAsync*
  implements:
  - SuperOffice.Data.IUdefHelper.CheckRevisionAsync
- uid: SuperOffice.Data.UdefHelper.CheckRevisionAsync(SuperOffice.Data.UDefType)
  commentId: M:SuperOffice.Data.UdefHelper.CheckRevisionAsync(SuperOffice.Data.UDefType)
  id: CheckRevisionAsync(SuperOffice.Data.UDefType)
  parent: SuperOffice.Data.UdefHelper
  langs:
  - csharp
  - vb
  name: CheckRevisionAsync(UDefType)
  nameWithType: UdefHelper.CheckRevisionAsync(UDefType)
  fullName: SuperOffice.Data.UdefHelper.CheckRevisionAsync(SuperOffice.Data.UDefType)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Data
  example: []
  syntax:
    content: public Task CheckRevisionAsync(UDefType type)
    parameters:
    - id: type
      type: SuperOffice.Data.UDefType
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function CheckRevisionAsync(type As UDefType) As Task
  overload: SuperOffice.Data.UdefHelper.CheckRevisionAsync*
  implements:
  - SuperOffice.Data.IUdefHelper.CheckRevisionAsync(SuperOffice.Data.UDefType)
- uid: SuperOffice.Data.UdefHelper.ConvertToAdminLineNo(System.Int32)
  commentId: M:SuperOffice.Data.UdefHelper.ConvertToAdminLineNo(System.Int32)
  id: ConvertToAdminLineNo(System.Int32)
  parent: SuperOffice.Data.UdefHelper
  langs:
  - csharp
  - vb
  name: ConvertToAdminLineNo(int)
  nameWithType: UdefHelper.ConvertToAdminLineNo(int)
  fullName: SuperOffice.Data.UdefHelper.ConvertToAdminLineNo(int)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Data
  example: []
  syntax:
    content: public short ConvertToAdminLineNo(int lineNo)
    parameters:
    - id: lineNo
      type: System.Int32
    return:
      type: System.Int16
    content.vb: Public Function ConvertToAdminLineNo(lineNo As Integer) As Short
  overload: SuperOffice.Data.UdefHelper.ConvertToAdminLineNo*
  implements:
  - SuperOffice.Data.IUdefHelper.ConvertToAdminLineNo(System.Int32)
  nameWithType.vb: UdefHelper.ConvertToAdminLineNo(Integer)
  fullName.vb: SuperOffice.Data.UdefHelper.ConvertToAdminLineNo(Integer)
  name.vb: ConvertToAdminLineNo(Integer)
- uid: SuperOffice.Data.UdefHelper.ConvertFromAdminLineNo(System.Int32)
  commentId: M:SuperOffice.Data.UdefHelper.ConvertFromAdminLineNo(System.Int32)
  id: ConvertFromAdminLineNo(System.Int32)
  parent: SuperOffice.Data.UdefHelper
  langs:
  - csharp
  - vb
  name: ConvertFromAdminLineNo(int)
  nameWithType: UdefHelper.ConvertFromAdminLineNo(int)
  fullName: SuperOffice.Data.UdefHelper.ConvertFromAdminLineNo(int)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Data
  example: []
  syntax:
    content: public short ConvertFromAdminLineNo(int lineNo)
    parameters:
    - id: lineNo
      type: System.Int32
    return:
      type: System.Int16
    content.vb: Public Function ConvertFromAdminLineNo(lineNo As Integer) As Short
  overload: SuperOffice.Data.UdefHelper.ConvertFromAdminLineNo*
  implements:
  - SuperOffice.Data.IUdefHelper.ConvertFromAdminLineNo(System.Int32)
  nameWithType.vb: UdefHelper.ConvertFromAdminLineNo(Integer)
  fullName.vb: SuperOffice.Data.UdefHelper.ConvertFromAdminLineNo(Integer)
  name.vb: ConvertFromAdminLineNo(Integer)
- uid: SuperOffice.Data.UdefHelper.SuggestLocation(SuperOffice.Data.UDefType,System.Int32@,System.Int32@,System.Int32,System.Int32,System.Int32@,System.Int32@)
  commentId: M:SuperOffice.Data.UdefHelper.SuggestLocation(SuperOffice.Data.UDefType,System.Int32@,System.Int32@,System.Int32,System.Int32,System.Int32@,System.Int32@)
  id: SuggestLocation(SuperOffice.Data.UDefType,System.Int32@,System.Int32@,System.Int32,System.Int32,System.Int32@,System.Int32@)
  parent: SuperOffice.Data.UdefHelper
  langs:
  - csharp
  - vb
  name: SuggestLocation(UDefType, out int, out int, int, int, out int, out int)
  nameWithType: UdefHelper.SuggestLocation(UDefType, out int, out int, int, int, out int, out int)
  fullName: SuperOffice.Data.UdefHelper.SuggestLocation(SuperOffice.Data.UDefType, out int, out int, int, int, out int, out int)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Data
  example: []
  syntax:
    content: public void SuggestLocation(UDefType type, out int labelLeft, out int labelTop, int labelWidth, int labelHeight, out int fieldLeft, out int fieldTop)
    parameters:
    - id: type
      type: SuperOffice.Data.UDefType
    - id: labelLeft
      type: System.Int32
    - id: labelTop
      type: System.Int32
    - id: labelWidth
      type: System.Int32
    - id: labelHeight
      type: System.Int32
    - id: fieldLeft
      type: System.Int32
    - id: fieldTop
      type: System.Int32
    content.vb: Public Sub SuggestLocation(type As UDefType, labelLeft As Integer, labelTop As Integer, labelWidth As Integer, labelHeight As Integer, fieldLeft As Integer, fieldTop As Integer)
  overload: SuperOffice.Data.UdefHelper.SuggestLocation*
  implements:
  - SuperOffice.Data.IUdefHelper.SuggestLocation(SuperOffice.Data.UDefType,System.Int32@,System.Int32@,System.Int32,System.Int32,System.Int32@,System.Int32@)
  nameWithType.vb: UdefHelper.SuggestLocation(UDefType, Integer, Integer, Integer, Integer, Integer, Integer)
  fullName.vb: SuperOffice.Data.UdefHelper.SuggestLocation(SuperOffice.Data.UDefType, Integer, Integer, Integer, Integer, Integer, Integer)
  name.vb: SuggestLocation(UDefType, Integer, Integer, Integer, Integer, Integer, Integer)
- uid: SuperOffice.Data.UdefHelper.GetTemplateVariableName(SuperOffice.Data.UDefType,SuperOffice.Data.UDefFieldType,System.Int32)
  commentId: M:SuperOffice.Data.UdefHelper.GetTemplateVariableName(SuperOffice.Data.UDefType,SuperOffice.Data.UDefFieldType,System.Int32)
  id: GetTemplateVariableName(SuperOffice.Data.UDefType,SuperOffice.Data.UDefFieldType,System.Int32)
  parent: SuperOffice.Data.UdefHelper
  langs:
  - csharp
  - vb
  name: GetTemplateVariableName(UDefType, UDefFieldType, int)
  nameWithType: UdefHelper.GetTemplateVariableName(UDefType, UDefFieldType, int)
  fullName: SuperOffice.Data.UdefHelper.GetTemplateVariableName(SuperOffice.Data.UDefType, SuperOffice.Data.UDefFieldType, int)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Data
  example: []
  syntax:
    content: public string GetTemplateVariableName(UDefType udefType, UDefFieldType udefFieldType, int columnId)
    parameters:
    - id: udefType
      type: SuperOffice.Data.UDefType
    - id: udefFieldType
      type: SuperOffice.Data.UDefFieldType
    - id: columnId
      type: System.Int32
    return:
      type: System.String
    content.vb: Public Function GetTemplateVariableName(udefType As UDefType, udefFieldType As UDefFieldType, columnId As Integer) As String
  overload: SuperOffice.Data.UdefHelper.GetTemplateVariableName*
  implements:
  - SuperOffice.Data.IUdefHelper.GetTemplateVariableName(SuperOffice.Data.UDefType,SuperOffice.Data.UDefFieldType,System.Int32)
  nameWithType.vb: UdefHelper.GetTemplateVariableName(UDefType, UDefFieldType, Integer)
  fullName.vb: SuperOffice.Data.UdefHelper.GetTemplateVariableName(SuperOffice.Data.UDefType, SuperOffice.Data.UDefFieldType, Integer)
  name.vb: GetTemplateVariableName(UDefType, UDefFieldType, Integer)
- uid: SuperOffice.Data.UdefHelper.CompareUdefRows(SuperOffice.CRM.Rows.UDefFieldRow,SuperOffice.CRM.Rows.UDefFieldRow)
  commentId: M:SuperOffice.Data.UdefHelper.CompareUdefRows(SuperOffice.CRM.Rows.UDefFieldRow,SuperOffice.CRM.Rows.UDefFieldRow)
  id: CompareUdefRows(SuperOffice.CRM.Rows.UDefFieldRow,SuperOffice.CRM.Rows.UDefFieldRow)
  parent: SuperOffice.Data.UdefHelper
  langs:
  - csharp
  - vb
  name: CompareUdefRows(UDefFieldRow, UDefFieldRow)
  nameWithType: UdefHelper.CompareUdefRows(UDefFieldRow, UDefFieldRow)
  fullName: SuperOffice.Data.UdefHelper.CompareUdefRows(SuperOffice.CRM.Rows.UDefFieldRow, SuperOffice.CRM.Rows.UDefFieldRow)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Data
  example: []
  syntax:
    content: public bool CompareUdefRows(UDefFieldRow leftRow, UDefFieldRow rightRow)
    parameters:
    - id: leftRow
      type: SuperOffice.CRM.Rows.UDefFieldRow
    - id: rightRow
      type: SuperOffice.CRM.Rows.UDefFieldRow
    return:
      type: System.Boolean
    content.vb: Public Function CompareUdefRows(leftRow As UDefFieldRow, rightRow As UDefFieldRow) As Boolean
  overload: SuperOffice.Data.UdefHelper.CompareUdefRows*
  implements:
  - SuperOffice.Data.IUdefHelper.CompareUdefRows(SuperOffice.CRM.Rows.UDefFieldRow,SuperOffice.CRM.Rows.UDefFieldRow)
- uid: SuperOffice.Data.UdefHelper.SetRankOnFieldsAsync(SuperOffice.Data.UDefType,System.Int32[])
  commentId: M:SuperOffice.Data.UdefHelper.SetRankOnFieldsAsync(SuperOffice.Data.UDefType,System.Int32[])
  id: SetRankOnFieldsAsync(SuperOffice.Data.UDefType,System.Int32[])
  parent: SuperOffice.Data.UdefHelper
  langs:
  - csharp
  - vb
  name: SetRankOnFieldsAsync(UDefType, int[])
  nameWithType: UdefHelper.SetRankOnFieldsAsync(UDefType, int[])
  fullName: SuperOffice.Data.UdefHelper.SetRankOnFieldsAsync(SuperOffice.Data.UDefType, int[])
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Data
  example: []
  syntax:
    content: public Task SetRankOnFieldsAsync(UDefType ownerType, int[] rankedFieldsIds)
    parameters:
    - id: ownerType
      type: SuperOffice.Data.UDefType
    - id: rankedFieldsIds
      type: System.Int32[]
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SetRankOnFieldsAsync(ownerType As UDefType, rankedFieldsIds As Integer()) As Task
  overload: SuperOffice.Data.UdefHelper.SetRankOnFieldsAsync*
  implements:
  - SuperOffice.Data.IUdefHelper.SetRankOnFieldsAsync(SuperOffice.Data.UDefType,System.Int32[])
  nameWithType.vb: UdefHelper.SetRankOnFieldsAsync(UDefType, Integer())
  fullName.vb: SuperOffice.Data.UdefHelper.SetRankOnFieldsAsync(SuperOffice.Data.UDefType, Integer())
  name.vb: SetRankOnFieldsAsync(UDefType, Integer())
- uid: SuperOffice.Data.UdefHelper.#ctor
  commentId: M:SuperOffice.Data.UdefHelper.#ctor
  id: '#ctor'
  parent: SuperOffice.Data.UdefHelper
  langs:
  - csharp
  - vb
  name: UdefHelper()
  nameWithType: UdefHelper.UdefHelper()
  fullName: SuperOffice.Data.UdefHelper.UdefHelper()
  type: Constructor
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.Data
  syntax:
    content: public UdefHelper()
    content.vb: Public Sub New()
  overload: SuperOffice.Data.UdefHelper.#ctor*
  nameWithType.vb: UdefHelper.New()
  fullName.vb: SuperOffice.Data.UdefHelper.New()
  name.vb: New()
references:
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: SuperOffice.Data.IUdefHelper
  commentId: T:SuperOffice.Data.IUdefHelper
  parent: SuperOffice.Data
  isExternal: true
  href: SuperOffice.Data.IUdefHelper.html
  name: IUdefHelper
  nameWithType: IUdefHelper
  fullName: SuperOffice.Data.IUdefHelper
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: SuperOffice.Data.UdefHelper.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<UdefHelper, To>(UdefHelper)
  nameWithType: EnumUtil.MapEnums<UdefHelper, To>(UdefHelper)
  fullName: EnumUtil.MapEnums<SuperOffice.Data.UdefHelper, To>(SuperOffice.Data.UdefHelper)
  nameWithType.vb: EnumUtil.MapEnums(Of UdefHelper, To)(UdefHelper)
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Data.UdefHelper, To)(SuperOffice.Data.UdefHelper)
  name.vb: MapEnums(Of UdefHelper, To)(UdefHelper)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(SuperOffice.Data.UdefHelper)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.Data.UdefHelper
    name: UdefHelper
    isExternal: true
    href: SuperOffice.Data.UdefHelper.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.Data.UdefHelper
    name: UdefHelper
    isExternal: true
    href: SuperOffice.Data.UdefHelper.html
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(SuperOffice.Data.UdefHelper)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Data.UdefHelper
    name: UdefHelper
    isExternal: true
    href: SuperOffice.Data.UdefHelper.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.Data.UdefHelper
    name: UdefHelper
    isExternal: true
    href: SuperOffice.Data.UdefHelper.html
  - name: )
- uid: SuperOffice.Data.UdefHelper.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<UdefHelper, To>(UdefHelper)
  nameWithType: Converters.MapEnums<UdefHelper, To>(UdefHelper)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.UdefHelper, To>(SuperOffice.Data.UdefHelper)
  nameWithType.vb: Converters.MapEnums(Of UdefHelper, To)(UdefHelper)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.UdefHelper, To)(SuperOffice.Data.UdefHelper)
  name.vb: MapEnums(Of UdefHelper, To)(UdefHelper)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.Data.UdefHelper)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.Data.UdefHelper
    name: UdefHelper
    isExternal: true
    href: SuperOffice.Data.UdefHelper.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.Data.UdefHelper
    name: UdefHelper
    isExternal: true
    href: SuperOffice.Data.UdefHelper.html
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.Data.UdefHelper)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Data.UdefHelper
    name: UdefHelper
    isExternal: true
    href: SuperOffice.Data.UdefHelper.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.Data.UdefHelper
    name: UdefHelper
    isExternal: true
    href: SuperOffice.Data.UdefHelper.html
  - name: )
- uid: SuperOffice.Data.UdefHelper.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Data.UdefHelper)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  name: AssignByReflection<UdefHelper>(UdefHelper, UdefHelper)
  nameWithType: ObjectExtensions.AssignByReflection<UdefHelper>(UdefHelper, UdefHelper)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Data.UdefHelper>(SuperOffice.Data.UdefHelper, SuperOffice.Data.UdefHelper)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of UdefHelper)(UdefHelper, UdefHelper)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Data.UdefHelper)(SuperOffice.Data.UdefHelper, SuperOffice.Data.UdefHelper)
  name.vb: AssignByReflection(Of UdefHelper)(UdefHelper, UdefHelper)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Data.UdefHelper,SuperOffice.Data.UdefHelper)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: <
  - uid: SuperOffice.Data.UdefHelper
    name: UdefHelper
    isExternal: true
    href: SuperOffice.Data.UdefHelper.html
  - name: '>'
  - name: (
  - uid: SuperOffice.Data.UdefHelper
    name: UdefHelper
    isExternal: true
    href: SuperOffice.Data.UdefHelper.html
  - name: ','
  - name: " "
  - uid: SuperOffice.Data.UdefHelper
    name: UdefHelper
    isExternal: true
    href: SuperOffice.Data.UdefHelper.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Data.UdefHelper,SuperOffice.Data.UdefHelper)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Data.UdefHelper
    name: UdefHelper
    isExternal: true
    href: SuperOffice.Data.UdefHelper.html
  - name: )
  - name: (
  - uid: SuperOffice.Data.UdefHelper
    name: UdefHelper
    isExternal: true
    href: SuperOffice.Data.UdefHelper.html
  - name: ','
  - name: " "
  - uid: SuperOffice.Data.UdefHelper
    name: UdefHelper
    isExternal: true
    href: SuperOffice.Data.UdefHelper.html
  - name: )
- uid: SuperOffice.Data.UdefHelper.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  name: GraphCopy<UdefHelper>(UdefHelper)
  nameWithType: ObjectExtensions.GraphCopy<UdefHelper>(UdefHelper)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Data.UdefHelper>(SuperOffice.Data.UdefHelper)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of UdefHelper)(UdefHelper)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Data.UdefHelper)(SuperOffice.Data.UdefHelper)
  name.vb: GraphCopy(Of UdefHelper)(UdefHelper)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(SuperOffice.Data.UdefHelper)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: <
  - uid: SuperOffice.Data.UdefHelper
    name: UdefHelper
    isExternal: true
    href: SuperOffice.Data.UdefHelper.html
  - name: '>'
  - name: (
  - uid: SuperOffice.Data.UdefHelper
    name: UdefHelper
    isExternal: true
    href: SuperOffice.Data.UdefHelper.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(SuperOffice.Data.UdefHelper)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Data.UdefHelper
    name: UdefHelper
    isExternal: true
    href: SuperOffice.Data.UdefHelper.html
  - name: )
  - name: (
  - uid: SuperOffice.Data.UdefHelper
    name: UdefHelper
    isExternal: true
    href: SuperOffice.Data.UdefHelper.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  href: EnumUtil.html
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  href: SuperOffice.Util.ObjectExtensions.html
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Util
    name: Util
    isExternal: true
    href: SuperOffice.Util.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Util
    name: Util
    isExternal: true
    href: SuperOffice.Util.html
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: SuperOffice.Data.UdefHelper.TranslateFieldTypeToDatabaseType*
  commentId: Overload:SuperOffice.Data.UdefHelper.TranslateFieldTypeToDatabaseType
  isExternal: true
  href: SuperOffice.Data.UdefHelper.html#SuperOffice_Data_UdefHelper_TranslateFieldTypeToDatabaseType_SuperOffice_Data_UDefFieldType_
  name: TranslateFieldTypeToDatabaseType
  nameWithType: UdefHelper.TranslateFieldTypeToDatabaseType
  fullName: SuperOffice.Data.UdefHelper.TranslateFieldTypeToDatabaseType
- uid: SuperOffice.Data.IUdefHelper.TranslateFieldTypeToDatabaseType(SuperOffice.Data.UDefFieldType)
  commentId: M:SuperOffice.Data.IUdefHelper.TranslateFieldTypeToDatabaseType(SuperOffice.Data.UDefFieldType)
  parent: SuperOffice.Data.IUdefHelper
  isExternal: true
  name: TranslateFieldTypeToDatabaseType(UDefFieldType)
  nameWithType: IUdefHelper.TranslateFieldTypeToDatabaseType(UDefFieldType)
  fullName: SuperOffice.Data.IUdefHelper.TranslateFieldTypeToDatabaseType(SuperOffice.Data.UDefFieldType)
  spec.csharp:
  - uid: SuperOffice.Data.IUdefHelper.TranslateFieldTypeToDatabaseType(SuperOffice.Data.UDefFieldType)
    name: TranslateFieldTypeToDatabaseType
    isExternal: true
  - name: (
  - uid: SuperOffice.Data.UDefFieldType
    name: UDefFieldType
    isExternal: true
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.IUdefHelper.TranslateFieldTypeToDatabaseType(SuperOffice.Data.UDefFieldType)
    name: TranslateFieldTypeToDatabaseType
    isExternal: true
  - name: (
  - uid: SuperOffice.Data.UDefFieldType
    name: UDefFieldType
    isExternal: true
  - name: )
- uid: SuperOffice.Data.UDefFieldType
  commentId: T:SuperOffice.Data.UDefFieldType
  parent: SuperOffice.Data
  isExternal: true
  href: SuperOffice.Data.UDefFieldType.html
  name: UDefFieldType
  nameWithType: UDefFieldType
  fullName: SuperOffice.Data.UDefFieldType
- uid: SuperOffice.Data.UDefFieldDatabaseType
  commentId: T:SuperOffice.Data.UDefFieldDatabaseType
  parent: SuperOffice.Data
  isExternal: true
  href: SuperOffice.Data.UDefFieldDatabaseType.html
  name: UDefFieldDatabaseType
  nameWithType: UDefFieldDatabaseType
  fullName: SuperOffice.Data.UDefFieldDatabaseType
- uid: SuperOffice.CRM.Rows.UDefFieldRow.ListTableId
  commentId: P:SuperOffice.CRM.Rows.UDefFieldRow.ListTableId
  isExternal: true
  href: SuperOffice.CRM.Rows.UDefFieldRow.html#SuperOffice_CRM_Rows_UDefFieldRow_ListTableId
  name: ListTableId
  nameWithType: UDefFieldRow.ListTableId
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.ListTableId
- uid: SuperOffice.Data.UdefHelper.GetListName*
  commentId: Overload:SuperOffice.Data.UdefHelper.GetListName
  isExternal: true
  href: SuperOffice.Data.UdefHelper.html#SuperOffice_Data_UdefHelper_GetListName_SuperOffice_CRM_Rows_UDefFieldRow_
  name: GetListName
  nameWithType: UdefHelper.GetListName
  fullName: SuperOffice.Data.UdefHelper.GetListName
- uid: SuperOffice.Data.IUdefHelper.GetListName(SuperOffice.CRM.Rows.UDefFieldRow)
  commentId: M:SuperOffice.Data.IUdefHelper.GetListName(SuperOffice.CRM.Rows.UDefFieldRow)
  parent: SuperOffice.Data.IUdefHelper
  isExternal: true
  name: GetListName(UDefFieldRow)
  nameWithType: IUdefHelper.GetListName(UDefFieldRow)
  fullName: SuperOffice.Data.IUdefHelper.GetListName(SuperOffice.CRM.Rows.UDefFieldRow)
  spec.csharp:
  - uid: SuperOffice.Data.IUdefHelper.GetListName(SuperOffice.CRM.Rows.UDefFieldRow)
    name: GetListName
    isExternal: true
  - name: (
  - uid: SuperOffice.CRM.Rows.UDefFieldRow
    name: UDefFieldRow
    isExternal: true
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.IUdefHelper.GetListName(SuperOffice.CRM.Rows.UDefFieldRow)
    name: GetListName
    isExternal: true
  - name: (
  - uid: SuperOffice.CRM.Rows.UDefFieldRow
    name: UDefFieldRow
    isExternal: true
  - name: )
- uid: SuperOffice.CRM.Rows.UDefFieldRow
  commentId: T:SuperOffice.CRM.Rows.UDefFieldRow
  parent: SuperOffice.CRM.Rows
  isExternal: true
  href: SuperOffice.CRM.Rows.UDefFieldRow.html
  name: UDefFieldRow
  nameWithType: UDefFieldRow
  fullName: SuperOffice.CRM.Rows.UDefFieldRow
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SuperOffice.CRM.Rows
  commentId: N:SuperOffice.CRM.Rows
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Rows
  nameWithType: SuperOffice.CRM.Rows
  fullName: SuperOffice.CRM.Rows
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Rows
    name: Rows
    isExternal: true
    href: SuperOffice.CRM.Rows.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Rows
    name: Rows
    isExternal: true
    href: SuperOffice.CRM.Rows.html
- uid: SuperOffice.Data.UdefHelper.GetDefaultValue*
  commentId: Overload:SuperOffice.Data.UdefHelper.GetDefaultValue
  isExternal: true
  href: SuperOffice.Data.UdefHelper.html#SuperOffice_Data_UdefHelper_GetDefaultValue_SuperOffice_CRM_Rows_UDefFieldRow_
  name: GetDefaultValue
  nameWithType: UdefHelper.GetDefaultValue
  fullName: SuperOffice.Data.UdefHelper.GetDefaultValue
- uid: SuperOffice.Data.IUdefHelper.GetDefaultValue(SuperOffice.CRM.Rows.UDefFieldRow)
  commentId: M:SuperOffice.Data.IUdefHelper.GetDefaultValue(SuperOffice.CRM.Rows.UDefFieldRow)
  parent: SuperOffice.Data.IUdefHelper
  isExternal: true
  name: GetDefaultValue(UDefFieldRow)
  nameWithType: IUdefHelper.GetDefaultValue(UDefFieldRow)
  fullName: SuperOffice.Data.IUdefHelper.GetDefaultValue(SuperOffice.CRM.Rows.UDefFieldRow)
  spec.csharp:
  - uid: SuperOffice.Data.IUdefHelper.GetDefaultValue(SuperOffice.CRM.Rows.UDefFieldRow)
    name: GetDefaultValue
    isExternal: true
  - name: (
  - uid: SuperOffice.CRM.Rows.UDefFieldRow
    name: UDefFieldRow
    isExternal: true
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.IUdefHelper.GetDefaultValue(SuperOffice.CRM.Rows.UDefFieldRow)
    name: GetDefaultValue
    isExternal: true
  - name: (
  - uid: SuperOffice.CRM.Rows.UDefFieldRow
    name: UDefFieldRow
    isExternal: true
  - name: )
- uid: SuperOffice.Data.UdefHelper.GetVersionPreferenceCurrent*
  commentId: Overload:SuperOffice.Data.UdefHelper.GetVersionPreferenceCurrent
  isExternal: true
  href: SuperOffice.Data.UdefHelper.html#SuperOffice_Data_UdefHelper_GetVersionPreferenceCurrent_SuperOffice_Data_UDefType_
  name: GetVersionPreferenceCurrent
  nameWithType: UdefHelper.GetVersionPreferenceCurrent
  fullName: SuperOffice.Data.UdefHelper.GetVersionPreferenceCurrent
- uid: SuperOffice.Data.IUdefHelper.GetVersionPreferenceCurrent(SuperOffice.Data.UDefType)
  commentId: M:SuperOffice.Data.IUdefHelper.GetVersionPreferenceCurrent(SuperOffice.Data.UDefType)
  parent: SuperOffice.Data.IUdefHelper
  isExternal: true
  name: GetVersionPreferenceCurrent(UDefType)
  nameWithType: IUdefHelper.GetVersionPreferenceCurrent(UDefType)
  fullName: SuperOffice.Data.IUdefHelper.GetVersionPreferenceCurrent(SuperOffice.Data.UDefType)
  spec.csharp:
  - uid: SuperOffice.Data.IUdefHelper.GetVersionPreferenceCurrent(SuperOffice.Data.UDefType)
    name: GetVersionPreferenceCurrent
    isExternal: true
  - name: (
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.IUdefHelper.GetVersionPreferenceCurrent(SuperOffice.Data.UDefType)
    name: GetVersionPreferenceCurrent
    isExternal: true
  - name: (
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: )
- uid: SuperOffice.Data.UDefType
  commentId: T:SuperOffice.Data.UDefType
  parent: SuperOffice.Data
  isExternal: true
  href: SuperOffice.Data.UDefType.html
  name: UDefType
  nameWithType: UDefType
  fullName: SuperOffice.Data.UDefType
- uid: SuperOffice.Data.UdefHelper.GetVersionPreferenceAdmin*
  commentId: Overload:SuperOffice.Data.UdefHelper.GetVersionPreferenceAdmin
  isExternal: true
  href: SuperOffice.Data.UdefHelper.html#SuperOffice_Data_UdefHelper_GetVersionPreferenceAdmin_SuperOffice_Data_UDefType_
  name: GetVersionPreferenceAdmin
  nameWithType: UdefHelper.GetVersionPreferenceAdmin
  fullName: SuperOffice.Data.UdefHelper.GetVersionPreferenceAdmin
- uid: SuperOffice.Data.IUdefHelper.GetVersionPreferenceAdmin(SuperOffice.Data.UDefType)
  commentId: M:SuperOffice.Data.IUdefHelper.GetVersionPreferenceAdmin(SuperOffice.Data.UDefType)
  parent: SuperOffice.Data.IUdefHelper
  isExternal: true
  name: GetVersionPreferenceAdmin(UDefType)
  nameWithType: IUdefHelper.GetVersionPreferenceAdmin(UDefType)
  fullName: SuperOffice.Data.IUdefHelper.GetVersionPreferenceAdmin(SuperOffice.Data.UDefType)
  spec.csharp:
  - uid: SuperOffice.Data.IUdefHelper.GetVersionPreferenceAdmin(SuperOffice.Data.UDefType)
    name: GetVersionPreferenceAdmin
    isExternal: true
  - name: (
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.IUdefHelper.GetVersionPreferenceAdmin(SuperOffice.Data.UDefType)
    name: GetVersionPreferenceAdmin
    isExternal: true
  - name: (
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: )
- uid: SuperOffice.Data.UdefHelper.GetUserPreferenceMDOListStringAdmin*
  commentId: Overload:SuperOffice.Data.UdefHelper.GetUserPreferenceMDOListStringAdmin
  isExternal: true
  href: SuperOffice.Data.UdefHelper.html#SuperOffice_Data_UdefHelper_GetUserPreferenceMDOListStringAdmin_SuperOffice_Data_UDefType_
  name: GetUserPreferenceMDOListStringAdmin
  nameWithType: UdefHelper.GetUserPreferenceMDOListStringAdmin
  fullName: SuperOffice.Data.UdefHelper.GetUserPreferenceMDOListStringAdmin
- uid: SuperOffice.Data.IUdefHelper.GetUserPreferenceMDOListStringAdmin(SuperOffice.Data.UDefType)
  commentId: M:SuperOffice.Data.IUdefHelper.GetUserPreferenceMDOListStringAdmin(SuperOffice.Data.UDefType)
  parent: SuperOffice.Data.IUdefHelper
  isExternal: true
  name: GetUserPreferenceMDOListStringAdmin(UDefType)
  nameWithType: IUdefHelper.GetUserPreferenceMDOListStringAdmin(UDefType)
  fullName: SuperOffice.Data.IUdefHelper.GetUserPreferenceMDOListStringAdmin(SuperOffice.Data.UDefType)
  spec.csharp:
  - uid: SuperOffice.Data.IUdefHelper.GetUserPreferenceMDOListStringAdmin(SuperOffice.Data.UDefType)
    name: GetUserPreferenceMDOListStringAdmin
    isExternal: true
  - name: (
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.IUdefHelper.GetUserPreferenceMDOListStringAdmin(SuperOffice.Data.UDefType)
    name: GetUserPreferenceMDOListStringAdmin
    isExternal: true
  - name: (
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: )
- uid: SuperOffice.Data.UdefHelper.GetUserPreferenceMDOListString*
  commentId: Overload:SuperOffice.Data.UdefHelper.GetUserPreferenceMDOListString
  isExternal: true
  href: SuperOffice.Data.UdefHelper.html#SuperOffice_Data_UdefHelper_GetUserPreferenceMDOListString_SuperOffice_Data_UDefType_
  name: GetUserPreferenceMDOListString
  nameWithType: UdefHelper.GetUserPreferenceMDOListString
  fullName: SuperOffice.Data.UdefHelper.GetUserPreferenceMDOListString
- uid: SuperOffice.Data.IUdefHelper.GetUserPreferenceMDOListString(SuperOffice.Data.UDefType)
  commentId: M:SuperOffice.Data.IUdefHelper.GetUserPreferenceMDOListString(SuperOffice.Data.UDefType)
  parent: SuperOffice.Data.IUdefHelper
  isExternal: true
  name: GetUserPreferenceMDOListString(UDefType)
  nameWithType: IUdefHelper.GetUserPreferenceMDOListString(UDefType)
  fullName: SuperOffice.Data.IUdefHelper.GetUserPreferenceMDOListString(SuperOffice.Data.UDefType)
  spec.csharp:
  - uid: SuperOffice.Data.IUdefHelper.GetUserPreferenceMDOListString(SuperOffice.Data.UDefType)
    name: GetUserPreferenceMDOListString
    isExternal: true
  - name: (
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.IUdefHelper.GetUserPreferenceMDOListString(SuperOffice.Data.UDefType)
    name: GetUserPreferenceMDOListString
    isExternal: true
  - name: (
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: )
- uid: SuperOffice.Data.UdefHelper.IsUnpublishedPageOneMDOAsync*
  commentId: Overload:SuperOffice.Data.UdefHelper.IsUnpublishedPageOneMDOAsync
  isExternal: true
  href: SuperOffice.Data.UdefHelper.html#SuperOffice_Data_UdefHelper_IsUnpublishedPageOneMDOAsync_SuperOffice_Data_UDefType_System_Threading_CancellationToken_
  name: IsUnpublishedPageOneMDOAsync
  nameWithType: UdefHelper.IsUnpublishedPageOneMDOAsync
  fullName: SuperOffice.Data.UdefHelper.IsUnpublishedPageOneMDOAsync
- uid: SuperOffice.Data.IUdefHelper.IsUnpublishedPageOneMDOAsync(SuperOffice.Data.UDefType,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Data.IUdefHelper.IsUnpublishedPageOneMDOAsync(SuperOffice.Data.UDefType,System.Threading.CancellationToken)
  parent: SuperOffice.Data.IUdefHelper
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: IsUnpublishedPageOneMDOAsync(UDefType, CancellationToken)
  nameWithType: IUdefHelper.IsUnpublishedPageOneMDOAsync(UDefType, CancellationToken)
  fullName: SuperOffice.Data.IUdefHelper.IsUnpublishedPageOneMDOAsync(SuperOffice.Data.UDefType, System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.Data.IUdefHelper.IsUnpublishedPageOneMDOAsync(SuperOffice.Data.UDefType,System.Threading.CancellationToken)
    name: IsUnpublishedPageOneMDOAsync
    isExternal: true
  - name: (
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.IUdefHelper.IsUnpublishedPageOneMDOAsync(SuperOffice.Data.UDefType,System.Threading.CancellationToken)
    name: IsUnpublishedPageOneMDOAsync
    isExternal: true
  - name: (
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: SuperOffice.Data.UdefHelper.IsPageOneMDOAsync*
  commentId: Overload:SuperOffice.Data.UdefHelper.IsPageOneMDOAsync
  isExternal: true
  href: SuperOffice.Data.UdefHelper.html#SuperOffice_Data_UdefHelper_IsPageOneMDOAsync_SuperOffice_Data_UDefType_System_Threading_CancellationToken_
  name: IsPageOneMDOAsync
  nameWithType: UdefHelper.IsPageOneMDOAsync
  fullName: SuperOffice.Data.UdefHelper.IsPageOneMDOAsync
- uid: SuperOffice.Data.IUdefHelper.IsPageOneMDOAsync(SuperOffice.Data.UDefType,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Data.IUdefHelper.IsPageOneMDOAsync(SuperOffice.Data.UDefType,System.Threading.CancellationToken)
  parent: SuperOffice.Data.IUdefHelper
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: IsPageOneMDOAsync(UDefType, CancellationToken)
  nameWithType: IUdefHelper.IsPageOneMDOAsync(UDefType, CancellationToken)
  fullName: SuperOffice.Data.IUdefHelper.IsPageOneMDOAsync(SuperOffice.Data.UDefType, System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.Data.IUdefHelper.IsPageOneMDOAsync(SuperOffice.Data.UDefType,System.Threading.CancellationToken)
    name: IsPageOneMDOAsync
    isExternal: true
  - name: (
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.IUdefHelper.IsPageOneMDOAsync(SuperOffice.Data.UDefType,System.Threading.CancellationToken)
    name: IsPageOneMDOAsync
    isExternal: true
  - name: (
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: SuperOffice.Data.UdefHelper.GetCurrentVersionAsync*
  commentId: Overload:SuperOffice.Data.UdefHelper.GetCurrentVersionAsync
  isExternal: true
  href: SuperOffice.Data.UdefHelper.html#SuperOffice_Data_UdefHelper_GetCurrentVersionAsync_SuperOffice_Data_UDefType_
  name: GetCurrentVersionAsync
  nameWithType: UdefHelper.GetCurrentVersionAsync
  fullName: SuperOffice.Data.UdefHelper.GetCurrentVersionAsync
- uid: SuperOffice.Data.IUdefHelper.GetCurrentVersionAsync(SuperOffice.Data.UDefType)
  commentId: M:SuperOffice.Data.IUdefHelper.GetCurrentVersionAsync(SuperOffice.Data.UDefType)
  parent: SuperOffice.Data.IUdefHelper
  isExternal: true
  name: GetCurrentVersionAsync(UDefType)
  nameWithType: IUdefHelper.GetCurrentVersionAsync(UDefType)
  fullName: SuperOffice.Data.IUdefHelper.GetCurrentVersionAsync(SuperOffice.Data.UDefType)
  spec.csharp:
  - uid: SuperOffice.Data.IUdefHelper.GetCurrentVersionAsync(SuperOffice.Data.UDefType)
    name: GetCurrentVersionAsync
    isExternal: true
  - name: (
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.IUdefHelper.GetCurrentVersionAsync(SuperOffice.Data.UDefType)
    name: GetCurrentVersionAsync
    isExternal: true
  - name: (
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: )
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: T:System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<int>
  nameWithType: Task<int>
  fullName: System.Threading.Tasks.Task<int>
  nameWithType.vb: Task(Of Integer)
  fullName.vb: System.Threading.Tasks.Task(Of Integer)
  name.vb: Task(Of Integer)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SuperOffice.Data.UdefHelper.GetAdminVersionAsync*
  commentId: Overload:SuperOffice.Data.UdefHelper.GetAdminVersionAsync
  isExternal: true
  href: SuperOffice.Data.UdefHelper.html#SuperOffice_Data_UdefHelper_GetAdminVersionAsync_SuperOffice_Data_UDefType_
  name: GetAdminVersionAsync
  nameWithType: UdefHelper.GetAdminVersionAsync
  fullName: SuperOffice.Data.UdefHelper.GetAdminVersionAsync
- uid: SuperOffice.Data.IUdefHelper.GetAdminVersionAsync(SuperOffice.Data.UDefType)
  commentId: M:SuperOffice.Data.IUdefHelper.GetAdminVersionAsync(SuperOffice.Data.UDefType)
  parent: SuperOffice.Data.IUdefHelper
  isExternal: true
  name: GetAdminVersionAsync(UDefType)
  nameWithType: IUdefHelper.GetAdminVersionAsync(UDefType)
  fullName: SuperOffice.Data.IUdefHelper.GetAdminVersionAsync(SuperOffice.Data.UDefType)
  spec.csharp:
  - uid: SuperOffice.Data.IUdefHelper.GetAdminVersionAsync(SuperOffice.Data.UDefType)
    name: GetAdminVersionAsync
    isExternal: true
  - name: (
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.IUdefHelper.GetAdminVersionAsync(SuperOffice.Data.UDefType)
    name: GetAdminVersionAsync
    isExternal: true
  - name: (
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: )
- uid: SuperOffice.Data.UdefHelper.GetCurrentVersionsAsync*
  commentId: Overload:SuperOffice.Data.UdefHelper.GetCurrentVersionsAsync
  isExternal: true
  href: SuperOffice.Data.UdefHelper.html#SuperOffice_Data_UdefHelper_GetCurrentVersionsAsync
  name: GetCurrentVersionsAsync
  nameWithType: UdefHelper.GetCurrentVersionsAsync
  fullName: SuperOffice.Data.UdefHelper.GetCurrentVersionsAsync
- uid: SuperOffice.Data.IUdefHelper.GetCurrentVersionsAsync
  commentId: M:SuperOffice.Data.IUdefHelper.GetCurrentVersionsAsync
  parent: SuperOffice.Data.IUdefHelper
  isExternal: true
  name: GetCurrentVersionsAsync()
  nameWithType: IUdefHelper.GetCurrentVersionsAsync()
  fullName: SuperOffice.Data.IUdefHelper.GetCurrentVersionsAsync()
  spec.csharp:
  - uid: SuperOffice.Data.IUdefHelper.GetCurrentVersionsAsync
    name: GetCurrentVersionsAsync
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.IUdefHelper.GetCurrentVersionsAsync
    name: GetCurrentVersionsAsync
    isExternal: true
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.Dictionary{SuperOffice.Data.UDefType,System.Int32}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.Dictionary{SuperOffice.Data.UDefType,System.Int32}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Dictionary<UDefType, int>>
  nameWithType: Task<Dictionary<UDefType, int>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<SuperOffice.Data.UDefType, int>>
  nameWithType.vb: Task(Of Dictionary(Of UDefType, Integer))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.Dictionary(Of SuperOffice.Data.UDefType, Integer))
  name.vb: Task(Of Dictionary(Of UDefType, Integer))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: )
- uid: SuperOffice.Data.IUdefHelper.GetCurrentVersionsAsync(SuperOffice.Data.UDefType[])
  commentId: M:SuperOffice.Data.IUdefHelper.GetCurrentVersionsAsync(SuperOffice.Data.UDefType[])
  parent: SuperOffice.Data.IUdefHelper
  isExternal: true
  name: GetCurrentVersionsAsync(params UDefType[])
  nameWithType: IUdefHelper.GetCurrentVersionsAsync(params UDefType[])
  fullName: SuperOffice.Data.IUdefHelper.GetCurrentVersionsAsync(params SuperOffice.Data.UDefType[])
  nameWithType.vb: IUdefHelper.GetCurrentVersionsAsync(ParamArray UDefType())
  fullName.vb: SuperOffice.Data.IUdefHelper.GetCurrentVersionsAsync(ParamArray SuperOffice.Data.UDefType())
  name.vb: GetCurrentVersionsAsync(ParamArray UDefType())
  spec.csharp:
  - uid: SuperOffice.Data.IUdefHelper.GetCurrentVersionsAsync(SuperOffice.Data.UDefType[])
    name: GetCurrentVersionsAsync
    isExternal: true
  - name: (
  - name: params
  - name: " "
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.IUdefHelper.GetCurrentVersionsAsync(SuperOffice.Data.UDefType[])
    name: GetCurrentVersionsAsync
    isExternal: true
  - name: (
  - name: ParamArray
  - name: " "
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.Data.UDefType[]
  isExternal: true
  name: UDefType[]
  nameWithType: UDefType[]
  fullName: SuperOffice.Data.UDefType[]
  nameWithType.vb: UDefType()
  fullName.vb: SuperOffice.Data.UDefType()
  name.vb: UDefType()
  spec.csharp:
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: (
  - name: )
- uid: SuperOffice.Data.UdefHelper.GetAdminVersionsAsync*
  commentId: Overload:SuperOffice.Data.UdefHelper.GetAdminVersionsAsync
  isExternal: true
  href: SuperOffice.Data.UdefHelper.html#SuperOffice_Data_UdefHelper_GetAdminVersionsAsync
  name: GetAdminVersionsAsync
  nameWithType: UdefHelper.GetAdminVersionsAsync
  fullName: SuperOffice.Data.UdefHelper.GetAdminVersionsAsync
- uid: SuperOffice.Data.IUdefHelper.GetAdminVersionsAsync
  commentId: M:SuperOffice.Data.IUdefHelper.GetAdminVersionsAsync
  parent: SuperOffice.Data.IUdefHelper
  isExternal: true
  name: GetAdminVersionsAsync()
  nameWithType: IUdefHelper.GetAdminVersionsAsync()
  fullName: SuperOffice.Data.IUdefHelper.GetAdminVersionsAsync()
  spec.csharp:
  - uid: SuperOffice.Data.IUdefHelper.GetAdminVersionsAsync
    name: GetAdminVersionsAsync
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.IUdefHelper.GetAdminVersionsAsync
    name: GetAdminVersionsAsync
    isExternal: true
  - name: (
  - name: )
- uid: SuperOffice.Data.IUdefHelper.GetAdminVersionsAsync(SuperOffice.Data.UDefType[])
  commentId: M:SuperOffice.Data.IUdefHelper.GetAdminVersionsAsync(SuperOffice.Data.UDefType[])
  parent: SuperOffice.Data.IUdefHelper
  isExternal: true
  name: GetAdminVersionsAsync(params UDefType[])
  nameWithType: IUdefHelper.GetAdminVersionsAsync(params UDefType[])
  fullName: SuperOffice.Data.IUdefHelper.GetAdminVersionsAsync(params SuperOffice.Data.UDefType[])
  nameWithType.vb: IUdefHelper.GetAdminVersionsAsync(ParamArray UDefType())
  fullName.vb: SuperOffice.Data.IUdefHelper.GetAdminVersionsAsync(ParamArray SuperOffice.Data.UDefType())
  name.vb: GetAdminVersionsAsync(ParamArray UDefType())
  spec.csharp:
  - uid: SuperOffice.Data.IUdefHelper.GetAdminVersionsAsync(SuperOffice.Data.UDefType[])
    name: GetAdminVersionsAsync
    isExternal: true
  - name: (
  - name: params
  - name: " "
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.IUdefHelper.GetAdminVersionsAsync(SuperOffice.Data.UDefType[])
    name: GetAdminVersionsAsync
    isExternal: true
  - name: (
  - name: ParamArray
  - name: " "
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.Data.UdefHelper.SetAdminVersionAsync*
  commentId: Overload:SuperOffice.Data.UdefHelper.SetAdminVersionAsync
  isExternal: true
  href: SuperOffice.Data.UdefHelper.html#SuperOffice_Data_UdefHelper_SetAdminVersionAsync_SuperOffice_Data_UDefType_System_Int32_System_Threading_CancellationToken_
  name: SetAdminVersionAsync
  nameWithType: UdefHelper.SetAdminVersionAsync
  fullName: SuperOffice.Data.UdefHelper.SetAdminVersionAsync
- uid: SuperOffice.Data.IUdefHelper.SetAdminVersionAsync(SuperOffice.Data.UDefType,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Data.IUdefHelper.SetAdminVersionAsync(SuperOffice.Data.UDefType,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.Data.IUdefHelper
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: SetAdminVersionAsync(UDefType, int, CancellationToken)
  nameWithType: IUdefHelper.SetAdminVersionAsync(UDefType, int, CancellationToken)
  fullName: SuperOffice.Data.IUdefHelper.SetAdminVersionAsync(SuperOffice.Data.UDefType, int, System.Threading.CancellationToken)
  nameWithType.vb: IUdefHelper.SetAdminVersionAsync(UDefType, Integer, CancellationToken)
  fullName.vb: SuperOffice.Data.IUdefHelper.SetAdminVersionAsync(SuperOffice.Data.UDefType, Integer, System.Threading.CancellationToken)
  name.vb: SetAdminVersionAsync(UDefType, Integer, CancellationToken)
  spec.csharp:
  - uid: SuperOffice.Data.IUdefHelper.SetAdminVersionAsync(SuperOffice.Data.UDefType,System.Int32,System.Threading.CancellationToken)
    name: SetAdminVersionAsync
    isExternal: true
  - name: (
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.IUdefHelper.SetAdminVersionAsync(SuperOffice.Data.UDefType,System.Int32,System.Threading.CancellationToken)
    name: SetAdminVersionAsync
    isExternal: true
  - name: (
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: SuperOffice.Data.UdefHelper.SetCurrentVersionAsync*
  commentId: Overload:SuperOffice.Data.UdefHelper.SetCurrentVersionAsync
  isExternal: true
  href: SuperOffice.Data.UdefHelper.html#SuperOffice_Data_UdefHelper_SetCurrentVersionAsync_SuperOffice_Data_UDefType_System_Int32_System_Threading_CancellationToken_
  name: SetCurrentVersionAsync
  nameWithType: UdefHelper.SetCurrentVersionAsync
  fullName: SuperOffice.Data.UdefHelper.SetCurrentVersionAsync
- uid: SuperOffice.Data.IUdefHelper.SetCurrentVersionAsync(SuperOffice.Data.UDefType,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Data.IUdefHelper.SetCurrentVersionAsync(SuperOffice.Data.UDefType,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.Data.IUdefHelper
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: SetCurrentVersionAsync(UDefType, int, CancellationToken)
  nameWithType: IUdefHelper.SetCurrentVersionAsync(UDefType, int, CancellationToken)
  fullName: SuperOffice.Data.IUdefHelper.SetCurrentVersionAsync(SuperOffice.Data.UDefType, int, System.Threading.CancellationToken)
  nameWithType.vb: IUdefHelper.SetCurrentVersionAsync(UDefType, Integer, CancellationToken)
  fullName.vb: SuperOffice.Data.IUdefHelper.SetCurrentVersionAsync(SuperOffice.Data.UDefType, Integer, System.Threading.CancellationToken)
  name.vb: SetCurrentVersionAsync(UDefType, Integer, CancellationToken)
  spec.csharp:
  - uid: SuperOffice.Data.IUdefHelper.SetCurrentVersionAsync(SuperOffice.Data.UDefType,System.Int32,System.Threading.CancellationToken)
    name: SetCurrentVersionAsync
    isExternal: true
  - name: (
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.IUdefHelper.SetCurrentVersionAsync(SuperOffice.Data.UDefType,System.Int32,System.Threading.CancellationToken)
    name: SetCurrentVersionAsync
    isExternal: true
  - name: (
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: SuperOffice.Data.UdefHelper.IncrementAdminVersionAsync*
  commentId: Overload:SuperOffice.Data.UdefHelper.IncrementAdminVersionAsync
  isExternal: true
  href: SuperOffice.Data.UdefHelper.html#SuperOffice_Data_UdefHelper_IncrementAdminVersionAsync_SuperOffice_Data_UDefType_
  name: IncrementAdminVersionAsync
  nameWithType: UdefHelper.IncrementAdminVersionAsync
  fullName: SuperOffice.Data.UdefHelper.IncrementAdminVersionAsync
- uid: SuperOffice.Data.IUdefHelper.IncrementAdminVersionAsync(SuperOffice.Data.UDefType)
  commentId: M:SuperOffice.Data.IUdefHelper.IncrementAdminVersionAsync(SuperOffice.Data.UDefType)
  parent: SuperOffice.Data.IUdefHelper
  isExternal: true
  name: IncrementAdminVersionAsync(UDefType)
  nameWithType: IUdefHelper.IncrementAdminVersionAsync(UDefType)
  fullName: SuperOffice.Data.IUdefHelper.IncrementAdminVersionAsync(SuperOffice.Data.UDefType)
  spec.csharp:
  - uid: SuperOffice.Data.IUdefHelper.IncrementAdminVersionAsync(SuperOffice.Data.UDefType)
    name: IncrementAdminVersionAsync
    isExternal: true
  - name: (
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.IUdefHelper.IncrementAdminVersionAsync(SuperOffice.Data.UDefType)
    name: IncrementAdminVersionAsync
    isExternal: true
  - name: (
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: )
- uid: SuperOffice.Data.UdefHelper.IncrementCurrentVersionAsync*
  commentId: Overload:SuperOffice.Data.UdefHelper.IncrementCurrentVersionAsync
  isExternal: true
  href: SuperOffice.Data.UdefHelper.html#SuperOffice_Data_UdefHelper_IncrementCurrentVersionAsync_SuperOffice_Data_UDefType_
  name: IncrementCurrentVersionAsync
  nameWithType: UdefHelper.IncrementCurrentVersionAsync
  fullName: SuperOffice.Data.UdefHelper.IncrementCurrentVersionAsync
- uid: SuperOffice.Data.IUdefHelper.IncrementCurrentVersionAsync(SuperOffice.Data.UDefType)
  commentId: M:SuperOffice.Data.IUdefHelper.IncrementCurrentVersionAsync(SuperOffice.Data.UDefType)
  parent: SuperOffice.Data.IUdefHelper
  isExternal: true
  name: IncrementCurrentVersionAsync(UDefType)
  nameWithType: IUdefHelper.IncrementCurrentVersionAsync(UDefType)
  fullName: SuperOffice.Data.IUdefHelper.IncrementCurrentVersionAsync(SuperOffice.Data.UDefType)
  spec.csharp:
  - uid: SuperOffice.Data.IUdefHelper.IncrementCurrentVersionAsync(SuperOffice.Data.UDefType)
    name: IncrementCurrentVersionAsync
    isExternal: true
  - name: (
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.IUdefHelper.IncrementCurrentVersionAsync(SuperOffice.Data.UDefType)
    name: IncrementCurrentVersionAsync
    isExternal: true
  - name: (
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: )
- uid: SuperOffice.Data.UdefHelper.GetUdefType*
  commentId: Overload:SuperOffice.Data.UdefHelper.GetUdefType
  isExternal: true
  href: SuperOffice.Data.UdefHelper.html#SuperOffice_Data_UdefHelper_GetUdefType_SuperOffice_Data_SQL_TableInfo_
  name: GetUdefType
  nameWithType: UdefHelper.GetUdefType
  fullName: SuperOffice.Data.UdefHelper.GetUdefType
- uid: SuperOffice.Data.IUdefHelper.GetUdefType(SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.Data.IUdefHelper.GetUdefType(SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.Data.IUdefHelper
  isExternal: true
  name: GetUdefType(TableInfo)
  nameWithType: IUdefHelper.GetUdefType(TableInfo)
  fullName: SuperOffice.Data.IUdefHelper.GetUdefType(SuperOffice.Data.SQL.TableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.IUdefHelper.GetUdefType(SuperOffice.Data.SQL.TableInfo)
    name: GetUdefType
    isExternal: true
  - name: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.IUdefHelper.GetUdefType(SuperOffice.Data.SQL.TableInfo)
    name: GetUdefType
    isExternal: true
  - name: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    isExternal: true
  - name: )
- uid: SuperOffice.Data.SQL.TableInfo
  commentId: T:SuperOffice.Data.SQL.TableInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.TableInfo.html
  name: TableInfo
  nameWithType: TableInfo
  fullName: SuperOffice.Data.SQL.TableInfo
- uid: SuperOffice.Data.SQL
  commentId: N:SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Data.SQL
  nameWithType: SuperOffice.Data.SQL
  fullName: SuperOffice.Data.SQL
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
  - name: .
  - uid: SuperOffice.Data.SQL
    name: SQL
    isExternal: true
    href: SuperOffice.Data.SQL.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
  - name: .
  - uid: SuperOffice.Data.SQL
    name: SQL
    isExternal: true
    href: SuperOffice.Data.SQL.html
- uid: SuperOffice.Data.UdefHelper.GetTableInfoSmall*
  commentId: Overload:SuperOffice.Data.UdefHelper.GetTableInfoSmall
  isExternal: true
  href: SuperOffice.Data.UdefHelper.html#SuperOffice_Data_UdefHelper_GetTableInfoSmall_SuperOffice_Data_UDefType_
  name: GetTableInfoSmall
  nameWithType: UdefHelper.GetTableInfoSmall
  fullName: SuperOffice.Data.UdefHelper.GetTableInfoSmall
- uid: SuperOffice.Data.IUdefHelper.GetTableInfoSmall(SuperOffice.Data.UDefType)
  commentId: M:SuperOffice.Data.IUdefHelper.GetTableInfoSmall(SuperOffice.Data.UDefType)
  parent: SuperOffice.Data.IUdefHelper
  isExternal: true
  name: GetTableInfoSmall(UDefType)
  nameWithType: IUdefHelper.GetTableInfoSmall(UDefType)
  fullName: SuperOffice.Data.IUdefHelper.GetTableInfoSmall(SuperOffice.Data.UDefType)
  spec.csharp:
  - uid: SuperOffice.Data.IUdefHelper.GetTableInfoSmall(SuperOffice.Data.UDefType)
    name: GetTableInfoSmall
    isExternal: true
  - name: (
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.IUdefHelper.GetTableInfoSmall(SuperOffice.Data.UDefType)
    name: GetTableInfoSmall
    isExternal: true
  - name: (
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: )
- uid: SuperOffice.Data.UdefHelper.GetTableInfoLarge*
  commentId: Overload:SuperOffice.Data.UdefHelper.GetTableInfoLarge
  isExternal: true
  href: SuperOffice.Data.UdefHelper.html#SuperOffice_Data_UdefHelper_GetTableInfoLarge_SuperOffice_Data_UDefType_
  name: GetTableInfoLarge
  nameWithType: UdefHelper.GetTableInfoLarge
  fullName: SuperOffice.Data.UdefHelper.GetTableInfoLarge
- uid: SuperOffice.Data.IUdefHelper.GetTableInfoLarge(SuperOffice.Data.UDefType)
  commentId: M:SuperOffice.Data.IUdefHelper.GetTableInfoLarge(SuperOffice.Data.UDefType)
  parent: SuperOffice.Data.IUdefHelper
  isExternal: true
  name: GetTableInfoLarge(UDefType)
  nameWithType: IUdefHelper.GetTableInfoLarge(UDefType)
  fullName: SuperOffice.Data.IUdefHelper.GetTableInfoLarge(SuperOffice.Data.UDefType)
  spec.csharp:
  - uid: SuperOffice.Data.IUdefHelper.GetTableInfoLarge(SuperOffice.Data.UDefType)
    name: GetTableInfoLarge
    isExternal: true
  - name: (
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.IUdefHelper.GetTableInfoLarge(SuperOffice.Data.UDefType)
    name: GetTableInfoLarge
    isExternal: true
  - name: (
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: )
- uid: SuperOffice.Data.UdefHelper.GetTableInfo*
  commentId: Overload:SuperOffice.Data.UdefHelper.GetTableInfo
  isExternal: true
  href: SuperOffice.Data.UdefHelper.html#SuperOffice_Data_UdefHelper_GetTableInfo_SuperOffice_Data_UDefType_
  name: GetTableInfo
  nameWithType: UdefHelper.GetTableInfo
  fullName: SuperOffice.Data.UdefHelper.GetTableInfo
- uid: SuperOffice.Data.IUdefHelper.GetTableInfo(SuperOffice.Data.UDefType)
  commentId: M:SuperOffice.Data.IUdefHelper.GetTableInfo(SuperOffice.Data.UDefType)
  parent: SuperOffice.Data.IUdefHelper
  isExternal: true
  name: GetTableInfo(UDefType)
  nameWithType: IUdefHelper.GetTableInfo(UDefType)
  fullName: SuperOffice.Data.IUdefHelper.GetTableInfo(SuperOffice.Data.UDefType)
  spec.csharp:
  - uid: SuperOffice.Data.IUdefHelper.GetTableInfo(SuperOffice.Data.UDefType)
    name: GetTableInfo
    isExternal: true
  - name: (
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.IUdefHelper.GetTableInfo(SuperOffice.Data.UDefType)
    name: GetTableInfo
    isExternal: true
  - name: (
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: )
- uid: SuperOffice.Data.UdefHelper.GetTableInfoLargeOrSmall*
  commentId: Overload:SuperOffice.Data.UdefHelper.GetTableInfoLargeOrSmall
  isExternal: true
  href: SuperOffice.Data.UdefHelper.html#SuperOffice_Data_UdefHelper_GetTableInfoLargeOrSmall_SuperOffice_Data_UDefType_SuperOffice_Data_UDefFieldType_
  name: GetTableInfoLargeOrSmall
  nameWithType: UdefHelper.GetTableInfoLargeOrSmall
  fullName: SuperOffice.Data.UdefHelper.GetTableInfoLargeOrSmall
- uid: SuperOffice.Data.IUdefHelper.GetTableInfoLargeOrSmall(SuperOffice.Data.UDefType,SuperOffice.Data.UDefFieldType)
  commentId: M:SuperOffice.Data.IUdefHelper.GetTableInfoLargeOrSmall(SuperOffice.Data.UDefType,SuperOffice.Data.UDefFieldType)
  parent: SuperOffice.Data.IUdefHelper
  isExternal: true
  name: GetTableInfoLargeOrSmall(UDefType, UDefFieldType)
  nameWithType: IUdefHelper.GetTableInfoLargeOrSmall(UDefType, UDefFieldType)
  fullName: SuperOffice.Data.IUdefHelper.GetTableInfoLargeOrSmall(SuperOffice.Data.UDefType, SuperOffice.Data.UDefFieldType)
  spec.csharp:
  - uid: SuperOffice.Data.IUdefHelper.GetTableInfoLargeOrSmall(SuperOffice.Data.UDefType,SuperOffice.Data.UDefFieldType)
    name: GetTableInfoLargeOrSmall
    isExternal: true
  - name: (
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: ','
  - name: " "
  - uid: SuperOffice.Data.UDefFieldType
    name: UDefFieldType
    isExternal: true
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.IUdefHelper.GetTableInfoLargeOrSmall(SuperOffice.Data.UDefType,SuperOffice.Data.UDefFieldType)
    name: GetTableInfoLargeOrSmall
    isExternal: true
  - name: (
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: ','
  - name: " "
  - uid: SuperOffice.Data.UDefFieldType
    name: UDefFieldType
    isExternal: true
  - name: )
- uid: SuperOffice.Data.IUdefHelper.GetUdefType(System.Int32)
  commentId: M:SuperOffice.Data.IUdefHelper.GetUdefType(System.Int32)
  parent: SuperOffice.Data.IUdefHelper
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: GetUdefType(int)
  nameWithType: IUdefHelper.GetUdefType(int)
  fullName: SuperOffice.Data.IUdefHelper.GetUdefType(int)
  nameWithType.vb: IUdefHelper.GetUdefType(Integer)
  fullName.vb: SuperOffice.Data.IUdefHelper.GetUdefType(Integer)
  name.vb: GetUdefType(Integer)
  spec.csharp:
  - uid: SuperOffice.Data.IUdefHelper.GetUdefType(System.Int32)
    name: GetUdefType
    isExternal: true
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.IUdefHelper.GetUdefType(System.Int32)
    name: GetUdefType
    isExternal: true
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SuperOffice.Data.UdefHelper.IsSmallTableColumn*
  commentId: Overload:SuperOffice.Data.UdefHelper.IsSmallTableColumn
  isExternal: true
  href: SuperOffice.Data.UdefHelper.html#SuperOffice_Data_UdefHelper_IsSmallTableColumn_System_Int32_
  name: IsSmallTableColumn
  nameWithType: UdefHelper.IsSmallTableColumn
  fullName: SuperOffice.Data.UdefHelper.IsSmallTableColumn
- uid: SuperOffice.Data.IUdefHelper.IsSmallTableColumn(System.Int32)
  commentId: M:SuperOffice.Data.IUdefHelper.IsSmallTableColumn(System.Int32)
  parent: SuperOffice.Data.IUdefHelper
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: IsSmallTableColumn(int)
  nameWithType: IUdefHelper.IsSmallTableColumn(int)
  fullName: SuperOffice.Data.IUdefHelper.IsSmallTableColumn(int)
  nameWithType.vb: IUdefHelper.IsSmallTableColumn(Integer)
  fullName.vb: SuperOffice.Data.IUdefHelper.IsSmallTableColumn(Integer)
  name.vb: IsSmallTableColumn(Integer)
  spec.csharp:
  - uid: SuperOffice.Data.IUdefHelper.IsSmallTableColumn(System.Int32)
    name: IsSmallTableColumn
    isExternal: true
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.IUdefHelper.IsSmallTableColumn(System.Int32)
    name: IsSmallTableColumn
    isExternal: true
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SuperOffice.Data.UdefHelper.IsLargeTableColumn*
  commentId: Overload:SuperOffice.Data.UdefHelper.IsLargeTableColumn
  isExternal: true
  href: SuperOffice.Data.UdefHelper.html#SuperOffice_Data_UdefHelper_IsLargeTableColumn_System_Int32_
  name: IsLargeTableColumn
  nameWithType: UdefHelper.IsLargeTableColumn
  fullName: SuperOffice.Data.UdefHelper.IsLargeTableColumn
- uid: SuperOffice.Data.IUdefHelper.IsLargeTableColumn(System.Int32)
  commentId: M:SuperOffice.Data.IUdefHelper.IsLargeTableColumn(System.Int32)
  parent: SuperOffice.Data.IUdefHelper
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: IsLargeTableColumn(int)
  nameWithType: IUdefHelper.IsLargeTableColumn(int)
  fullName: SuperOffice.Data.IUdefHelper.IsLargeTableColumn(int)
  nameWithType.vb: IUdefHelper.IsLargeTableColumn(Integer)
  fullName.vb: SuperOffice.Data.IUdefHelper.IsLargeTableColumn(Integer)
  name.vb: IsLargeTableColumn(Integer)
  spec.csharp:
  - uid: SuperOffice.Data.IUdefHelper.IsLargeTableColumn(System.Int32)
    name: IsLargeTableColumn
    isExternal: true
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.IUdefHelper.IsLargeTableColumn(System.Int32)
    name: IsLargeTableColumn
    isExternal: true
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SuperOffice.Data.UdefHelper.GetAllFields*
  commentId: Overload:SuperOffice.Data.UdefHelper.GetAllFields
  isExternal: true
  href: SuperOffice.Data.UdefHelper.html#SuperOffice_Data_UdefHelper_GetAllFields_SuperOffice_Data_UDefType_SuperOffice_Data_UDefFieldType_
  name: GetAllFields
  nameWithType: UdefHelper.GetAllFields
  fullName: SuperOffice.Data.UdefHelper.GetAllFields
- uid: SuperOffice.Data.IUdefHelper.GetAllFields(SuperOffice.Data.UDefType,SuperOffice.Data.UDefFieldType)
  commentId: M:SuperOffice.Data.IUdefHelper.GetAllFields(SuperOffice.Data.UDefType,SuperOffice.Data.UDefFieldType)
  parent: SuperOffice.Data.IUdefHelper
  isExternal: true
  name: GetAllFields(UDefType, UDefFieldType)
  nameWithType: IUdefHelper.GetAllFields(UDefType, UDefFieldType)
  fullName: SuperOffice.Data.IUdefHelper.GetAllFields(SuperOffice.Data.UDefType, SuperOffice.Data.UDefFieldType)
  spec.csharp:
  - uid: SuperOffice.Data.IUdefHelper.GetAllFields(SuperOffice.Data.UDefType,SuperOffice.Data.UDefFieldType)
    name: GetAllFields
    isExternal: true
  - name: (
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: ','
  - name: " "
  - uid: SuperOffice.Data.UDefFieldType
    name: UDefFieldType
    isExternal: true
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.IUdefHelper.GetAllFields(SuperOffice.Data.UDefType,SuperOffice.Data.UDefFieldType)
    name: GetAllFields
    isExternal: true
  - name: (
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: ','
  - name: " "
  - uid: SuperOffice.Data.UDefFieldType
    name: UDefFieldType
    isExternal: true
  - name: )
- uid: System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.FieldInfo}
  commentId: T:System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.FieldInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<FieldInfo>
  nameWithType: IEnumerable<FieldInfo>
  fullName: System.Collections.Generic.IEnumerable<SuperOffice.Data.SQL.FieldInfo>
  nameWithType.vb: IEnumerable(Of FieldInfo)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SuperOffice.Data.SQL.FieldInfo)
  name.vb: IEnumerable(Of FieldInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: SuperOffice.Data.UdefHelper.FindAvailableFieldAsync*
  commentId: Overload:SuperOffice.Data.UdefHelper.FindAvailableFieldAsync
  isExternal: true
  href: SuperOffice.Data.UdefHelper.html#SuperOffice_Data_UdefHelper_FindAvailableFieldAsync_SuperOffice_Data_UDefType_SuperOffice_Data_UDefFieldType_
  name: FindAvailableFieldAsync
  nameWithType: UdefHelper.FindAvailableFieldAsync
  fullName: SuperOffice.Data.UdefHelper.FindAvailableFieldAsync
- uid: SuperOffice.Data.IUdefHelper.FindAvailableFieldAsync(SuperOffice.Data.UDefType,SuperOffice.Data.UDefFieldType)
  commentId: M:SuperOffice.Data.IUdefHelper.FindAvailableFieldAsync(SuperOffice.Data.UDefType,SuperOffice.Data.UDefFieldType)
  parent: SuperOffice.Data.IUdefHelper
  isExternal: true
  name: FindAvailableFieldAsync(UDefType, UDefFieldType)
  nameWithType: IUdefHelper.FindAvailableFieldAsync(UDefType, UDefFieldType)
  fullName: SuperOffice.Data.IUdefHelper.FindAvailableFieldAsync(SuperOffice.Data.UDefType, SuperOffice.Data.UDefFieldType)
  spec.csharp:
  - uid: SuperOffice.Data.IUdefHelper.FindAvailableFieldAsync(SuperOffice.Data.UDefType,SuperOffice.Data.UDefFieldType)
    name: FindAvailableFieldAsync
    isExternal: true
  - name: (
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: ','
  - name: " "
  - uid: SuperOffice.Data.UDefFieldType
    name: UDefFieldType
    isExternal: true
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.IUdefHelper.FindAvailableFieldAsync(SuperOffice.Data.UDefType,SuperOffice.Data.UDefFieldType)
    name: FindAvailableFieldAsync
    isExternal: true
  - name: (
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: ','
  - name: " "
  - uid: SuperOffice.Data.UDefFieldType
    name: UDefFieldType
    isExternal: true
  - name: )
- uid: System.Threading.Tasks.Task{SuperOffice.Data.SQL.FieldInfo}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.Data.SQL.FieldInfo}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<FieldInfo>
  nameWithType: Task<FieldInfo>
  fullName: System.Threading.Tasks.Task<SuperOffice.Data.SQL.FieldInfo>
  nameWithType.vb: Task(Of FieldInfo)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.Data.SQL.FieldInfo)
  name.vb: Task(Of FieldInfo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: )
- uid: SuperOffice.Data.IUdefHelper.FindAvailableFieldAsync(SuperOffice.Data.UDefType,SuperOffice.Data.UDefFieldType,System.Boolean)
  commentId: M:SuperOffice.Data.IUdefHelper.FindAvailableFieldAsync(SuperOffice.Data.UDefType,SuperOffice.Data.UDefFieldType,System.Boolean)
  parent: SuperOffice.Data.IUdefHelper
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: FindAvailableFieldAsync(UDefType, UDefFieldType, bool)
  nameWithType: IUdefHelper.FindAvailableFieldAsync(UDefType, UDefFieldType, bool)
  fullName: SuperOffice.Data.IUdefHelper.FindAvailableFieldAsync(SuperOffice.Data.UDefType, SuperOffice.Data.UDefFieldType, bool)
  nameWithType.vb: IUdefHelper.FindAvailableFieldAsync(UDefType, UDefFieldType, Boolean)
  fullName.vb: SuperOffice.Data.IUdefHelper.FindAvailableFieldAsync(SuperOffice.Data.UDefType, SuperOffice.Data.UDefFieldType, Boolean)
  name.vb: FindAvailableFieldAsync(UDefType, UDefFieldType, Boolean)
  spec.csharp:
  - uid: SuperOffice.Data.IUdefHelper.FindAvailableFieldAsync(SuperOffice.Data.UDefType,SuperOffice.Data.UDefFieldType,System.Boolean)
    name: FindAvailableFieldAsync
    isExternal: true
  - name: (
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: ','
  - name: " "
  - uid: SuperOffice.Data.UDefFieldType
    name: UDefFieldType
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.IUdefHelper.FindAvailableFieldAsync(SuperOffice.Data.UDefType,SuperOffice.Data.UDefFieldType,System.Boolean)
    name: FindAvailableFieldAsync
    isExternal: true
  - name: (
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: ','
  - name: " "
  - uid: SuperOffice.Data.UDefFieldType
    name: UDefFieldType
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: SuperOffice.Data.UdefHelper.CheckRevisionAsync*
  commentId: Overload:SuperOffice.Data.UdefHelper.CheckRevisionAsync
  isExternal: true
  href: SuperOffice.Data.UdefHelper.html#SuperOffice_Data_UdefHelper_CheckRevisionAsync
  name: CheckRevisionAsync
  nameWithType: UdefHelper.CheckRevisionAsync
  fullName: SuperOffice.Data.UdefHelper.CheckRevisionAsync
- uid: SuperOffice.Data.IUdefHelper.CheckRevisionAsync
  commentId: M:SuperOffice.Data.IUdefHelper.CheckRevisionAsync
  parent: SuperOffice.Data.IUdefHelper
  isExternal: true
  name: CheckRevisionAsync()
  nameWithType: IUdefHelper.CheckRevisionAsync()
  fullName: SuperOffice.Data.IUdefHelper.CheckRevisionAsync()
  spec.csharp:
  - uid: SuperOffice.Data.IUdefHelper.CheckRevisionAsync
    name: CheckRevisionAsync
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.IUdefHelper.CheckRevisionAsync
    name: CheckRevisionAsync
    isExternal: true
  - name: (
  - name: )
- uid: SuperOffice.Data.IUdefHelper.CheckRevisionAsync(SuperOffice.Data.UDefType)
  commentId: M:SuperOffice.Data.IUdefHelper.CheckRevisionAsync(SuperOffice.Data.UDefType)
  parent: SuperOffice.Data.IUdefHelper
  isExternal: true
  name: CheckRevisionAsync(UDefType)
  nameWithType: IUdefHelper.CheckRevisionAsync(UDefType)
  fullName: SuperOffice.Data.IUdefHelper.CheckRevisionAsync(SuperOffice.Data.UDefType)
  spec.csharp:
  - uid: SuperOffice.Data.IUdefHelper.CheckRevisionAsync(SuperOffice.Data.UDefType)
    name: CheckRevisionAsync
    isExternal: true
  - name: (
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.IUdefHelper.CheckRevisionAsync(SuperOffice.Data.UDefType)
    name: CheckRevisionAsync
    isExternal: true
  - name: (
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: )
- uid: SuperOffice.Data.UdefHelper.ConvertToAdminLineNo*
  commentId: Overload:SuperOffice.Data.UdefHelper.ConvertToAdminLineNo
  isExternal: true
  href: SuperOffice.Data.UdefHelper.html#SuperOffice_Data_UdefHelper_ConvertToAdminLineNo_System_Int32_
  name: ConvertToAdminLineNo
  nameWithType: UdefHelper.ConvertToAdminLineNo
  fullName: SuperOffice.Data.UdefHelper.ConvertToAdminLineNo
- uid: SuperOffice.Data.IUdefHelper.ConvertToAdminLineNo(System.Int32)
  commentId: M:SuperOffice.Data.IUdefHelper.ConvertToAdminLineNo(System.Int32)
  parent: SuperOffice.Data.IUdefHelper
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: ConvertToAdminLineNo(int)
  nameWithType: IUdefHelper.ConvertToAdminLineNo(int)
  fullName: SuperOffice.Data.IUdefHelper.ConvertToAdminLineNo(int)
  nameWithType.vb: IUdefHelper.ConvertToAdminLineNo(Integer)
  fullName.vb: SuperOffice.Data.IUdefHelper.ConvertToAdminLineNo(Integer)
  name.vb: ConvertToAdminLineNo(Integer)
  spec.csharp:
  - uid: SuperOffice.Data.IUdefHelper.ConvertToAdminLineNo(System.Int32)
    name: ConvertToAdminLineNo
    isExternal: true
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.IUdefHelper.ConvertToAdminLineNo(System.Int32)
    name: ConvertToAdminLineNo
    isExternal: true
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int16
  name: short
  nameWithType: short
  fullName: short
  nameWithType.vb: Short
  fullName.vb: Short
  name.vb: Short
- uid: SuperOffice.Data.UdefHelper.ConvertFromAdminLineNo*
  commentId: Overload:SuperOffice.Data.UdefHelper.ConvertFromAdminLineNo
  isExternal: true
  href: SuperOffice.Data.UdefHelper.html#SuperOffice_Data_UdefHelper_ConvertFromAdminLineNo_System_Int32_
  name: ConvertFromAdminLineNo
  nameWithType: UdefHelper.ConvertFromAdminLineNo
  fullName: SuperOffice.Data.UdefHelper.ConvertFromAdminLineNo
- uid: SuperOffice.Data.IUdefHelper.ConvertFromAdminLineNo(System.Int32)
  commentId: M:SuperOffice.Data.IUdefHelper.ConvertFromAdminLineNo(System.Int32)
  parent: SuperOffice.Data.IUdefHelper
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: ConvertFromAdminLineNo(int)
  nameWithType: IUdefHelper.ConvertFromAdminLineNo(int)
  fullName: SuperOffice.Data.IUdefHelper.ConvertFromAdminLineNo(int)
  nameWithType.vb: IUdefHelper.ConvertFromAdminLineNo(Integer)
  fullName.vb: SuperOffice.Data.IUdefHelper.ConvertFromAdminLineNo(Integer)
  name.vb: ConvertFromAdminLineNo(Integer)
  spec.csharp:
  - uid: SuperOffice.Data.IUdefHelper.ConvertFromAdminLineNo(System.Int32)
    name: ConvertFromAdminLineNo
    isExternal: true
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.IUdefHelper.ConvertFromAdminLineNo(System.Int32)
    name: ConvertFromAdminLineNo
    isExternal: true
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SuperOffice.Data.UdefHelper.SuggestLocation*
  commentId: Overload:SuperOffice.Data.UdefHelper.SuggestLocation
  isExternal: true
  href: SuperOffice.Data.UdefHelper.html#SuperOffice_Data_UdefHelper_SuggestLocation_SuperOffice_Data_UDefType_System_Int32__System_Int32__System_Int32_System_Int32_System_Int32__System_Int32__
  name: SuggestLocation
  nameWithType: UdefHelper.SuggestLocation
  fullName: SuperOffice.Data.UdefHelper.SuggestLocation
- uid: SuperOffice.Data.IUdefHelper.SuggestLocation(SuperOffice.Data.UDefType,System.Int32@,System.Int32@,System.Int32,System.Int32,System.Int32@,System.Int32@)
  commentId: M:SuperOffice.Data.IUdefHelper.SuggestLocation(SuperOffice.Data.UDefType,System.Int32@,System.Int32@,System.Int32,System.Int32,System.Int32@,System.Int32@)
  parent: SuperOffice.Data.IUdefHelper
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: SuggestLocation(UDefType, out int, out int, int, int, out int, out int)
  nameWithType: IUdefHelper.SuggestLocation(UDefType, out int, out int, int, int, out int, out int)
  fullName: SuperOffice.Data.IUdefHelper.SuggestLocation(SuperOffice.Data.UDefType, out int, out int, int, int, out int, out int)
  nameWithType.vb: IUdefHelper.SuggestLocation(UDefType, Integer, Integer, Integer, Integer, Integer, Integer)
  fullName.vb: SuperOffice.Data.IUdefHelper.SuggestLocation(SuperOffice.Data.UDefType, Integer, Integer, Integer, Integer, Integer, Integer)
  name.vb: SuggestLocation(UDefType, Integer, Integer, Integer, Integer, Integer, Integer)
  spec.csharp:
  - uid: SuperOffice.Data.IUdefHelper.SuggestLocation(SuperOffice.Data.UDefType,System.Int32@,System.Int32@,System.Int32,System.Int32,System.Int32@,System.Int32@)
    name: SuggestLocation
    isExternal: true
  - name: (
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.IUdefHelper.SuggestLocation(SuperOffice.Data.UDefType,System.Int32@,System.Int32@,System.Int32,System.Int32,System.Int32@,System.Int32@)
    name: SuggestLocation
    isExternal: true
  - name: (
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SuperOffice.Data.UdefHelper.GetTemplateVariableName*
  commentId: Overload:SuperOffice.Data.UdefHelper.GetTemplateVariableName
  isExternal: true
  href: SuperOffice.Data.UdefHelper.html#SuperOffice_Data_UdefHelper_GetTemplateVariableName_SuperOffice_Data_UDefType_SuperOffice_Data_UDefFieldType_System_Int32_
  name: GetTemplateVariableName
  nameWithType: UdefHelper.GetTemplateVariableName
  fullName: SuperOffice.Data.UdefHelper.GetTemplateVariableName
- uid: SuperOffice.Data.IUdefHelper.GetTemplateVariableName(SuperOffice.Data.UDefType,SuperOffice.Data.UDefFieldType,System.Int32)
  commentId: M:SuperOffice.Data.IUdefHelper.GetTemplateVariableName(SuperOffice.Data.UDefType,SuperOffice.Data.UDefFieldType,System.Int32)
  parent: SuperOffice.Data.IUdefHelper
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: GetTemplateVariableName(UDefType, UDefFieldType, int)
  nameWithType: IUdefHelper.GetTemplateVariableName(UDefType, UDefFieldType, int)
  fullName: SuperOffice.Data.IUdefHelper.GetTemplateVariableName(SuperOffice.Data.UDefType, SuperOffice.Data.UDefFieldType, int)
  nameWithType.vb: IUdefHelper.GetTemplateVariableName(UDefType, UDefFieldType, Integer)
  fullName.vb: SuperOffice.Data.IUdefHelper.GetTemplateVariableName(SuperOffice.Data.UDefType, SuperOffice.Data.UDefFieldType, Integer)
  name.vb: GetTemplateVariableName(UDefType, UDefFieldType, Integer)
  spec.csharp:
  - uid: SuperOffice.Data.IUdefHelper.GetTemplateVariableName(SuperOffice.Data.UDefType,SuperOffice.Data.UDefFieldType,System.Int32)
    name: GetTemplateVariableName
    isExternal: true
  - name: (
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: ','
  - name: " "
  - uid: SuperOffice.Data.UDefFieldType
    name: UDefFieldType
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.IUdefHelper.GetTemplateVariableName(SuperOffice.Data.UDefType,SuperOffice.Data.UDefFieldType,System.Int32)
    name: GetTemplateVariableName
    isExternal: true
  - name: (
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: ','
  - name: " "
  - uid: SuperOffice.Data.UDefFieldType
    name: UDefFieldType
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SuperOffice.Data.UdefHelper.CompareUdefRows*
  commentId: Overload:SuperOffice.Data.UdefHelper.CompareUdefRows
  isExternal: true
  href: SuperOffice.Data.UdefHelper.html#SuperOffice_Data_UdefHelper_CompareUdefRows_SuperOffice_CRM_Rows_UDefFieldRow_SuperOffice_CRM_Rows_UDefFieldRow_
  name: CompareUdefRows
  nameWithType: UdefHelper.CompareUdefRows
  fullName: SuperOffice.Data.UdefHelper.CompareUdefRows
- uid: SuperOffice.Data.IUdefHelper.CompareUdefRows(SuperOffice.CRM.Rows.UDefFieldRow,SuperOffice.CRM.Rows.UDefFieldRow)
  commentId: M:SuperOffice.Data.IUdefHelper.CompareUdefRows(SuperOffice.CRM.Rows.UDefFieldRow,SuperOffice.CRM.Rows.UDefFieldRow)
  parent: SuperOffice.Data.IUdefHelper
  isExternal: true
  name: CompareUdefRows(UDefFieldRow, UDefFieldRow)
  nameWithType: IUdefHelper.CompareUdefRows(UDefFieldRow, UDefFieldRow)
  fullName: SuperOffice.Data.IUdefHelper.CompareUdefRows(SuperOffice.CRM.Rows.UDefFieldRow, SuperOffice.CRM.Rows.UDefFieldRow)
  spec.csharp:
  - uid: SuperOffice.Data.IUdefHelper.CompareUdefRows(SuperOffice.CRM.Rows.UDefFieldRow,SuperOffice.CRM.Rows.UDefFieldRow)
    name: CompareUdefRows
    isExternal: true
  - name: (
  - uid: SuperOffice.CRM.Rows.UDefFieldRow
    name: UDefFieldRow
    isExternal: true
  - name: ','
  - name: " "
  - uid: SuperOffice.CRM.Rows.UDefFieldRow
    name: UDefFieldRow
    isExternal: true
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.IUdefHelper.CompareUdefRows(SuperOffice.CRM.Rows.UDefFieldRow,SuperOffice.CRM.Rows.UDefFieldRow)
    name: CompareUdefRows
    isExternal: true
  - name: (
  - uid: SuperOffice.CRM.Rows.UDefFieldRow
    name: UDefFieldRow
    isExternal: true
  - name: ','
  - name: " "
  - uid: SuperOffice.CRM.Rows.UDefFieldRow
    name: UDefFieldRow
    isExternal: true
  - name: )
- uid: SuperOffice.Data.UdefHelper.SetRankOnFieldsAsync*
  commentId: Overload:SuperOffice.Data.UdefHelper.SetRankOnFieldsAsync
  isExternal: true
  href: SuperOffice.Data.UdefHelper.html#SuperOffice_Data_UdefHelper_SetRankOnFieldsAsync_SuperOffice_Data_UDefType_System_Int32___
  name: SetRankOnFieldsAsync
  nameWithType: UdefHelper.SetRankOnFieldsAsync
  fullName: SuperOffice.Data.UdefHelper.SetRankOnFieldsAsync
- uid: SuperOffice.Data.IUdefHelper.SetRankOnFieldsAsync(SuperOffice.Data.UDefType,System.Int32[])
  commentId: M:SuperOffice.Data.IUdefHelper.SetRankOnFieldsAsync(SuperOffice.Data.UDefType,System.Int32[])
  parent: SuperOffice.Data.IUdefHelper
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: SetRankOnFieldsAsync(UDefType, int[])
  nameWithType: IUdefHelper.SetRankOnFieldsAsync(UDefType, int[])
  fullName: SuperOffice.Data.IUdefHelper.SetRankOnFieldsAsync(SuperOffice.Data.UDefType, int[])
  nameWithType.vb: IUdefHelper.SetRankOnFieldsAsync(UDefType, Integer())
  fullName.vb: SuperOffice.Data.IUdefHelper.SetRankOnFieldsAsync(SuperOffice.Data.UDefType, Integer())
  name.vb: SetRankOnFieldsAsync(UDefType, Integer())
  spec.csharp:
  - uid: SuperOffice.Data.IUdefHelper.SetRankOnFieldsAsync(SuperOffice.Data.UDefType,System.Int32[])
    name: SetRankOnFieldsAsync
    isExternal: true
  - name: (
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.IUdefHelper.SetRankOnFieldsAsync(SuperOffice.Data.UDefType,System.Int32[])
    name: SetRankOnFieldsAsync
    isExternal: true
  - name: (
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
  - name: )
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: SuperOffice.Data.UdefHelper.#ctor*
  commentId: Overload:SuperOffice.Data.UdefHelper.#ctor
  isExternal: true
  href: SuperOffice.Data.UdefHelper.html#SuperOffice_Data_UdefHelper__ctor
  name: UdefHelper
  nameWithType: UdefHelper.UdefHelper
  fullName: SuperOffice.Data.UdefHelper.UdefHelper
  nameWithType.vb: UdefHelper.New
  fullName.vb: SuperOffice.Data.UdefHelper.New
  name.vb: New
