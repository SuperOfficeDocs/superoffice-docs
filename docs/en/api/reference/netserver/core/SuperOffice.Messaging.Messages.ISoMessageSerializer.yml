### YamlMime:ManagedReference
items:
- uid: SuperOffice.Messaging.Messages.ISoMessageSerializer
  commentId: T:SuperOffice.Messaging.Messages.ISoMessageSerializer
  id: ISoMessageSerializer
  parent: SuperOffice.Messaging.Messages
  children:
  - SuperOffice.Messaging.Messages.ISoMessageSerializer.Deserialize(System.Byte[])
  - SuperOffice.Messaging.Messages.ISoMessageSerializer.Serialize(SuperOffice.Messaging.Messages.SoMessageHeader)
  langs:
  - csharp
  - vb
  name: ISoMessageSerializer
  nameWithType: ISoMessageSerializer
  fullName: SuperOffice.Messaging.Messages.ISoMessageSerializer
  type: Interface
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Messaging.Messages
  summary: "\nPlug-in inmterface to be implemented by message serializers.  Standard \nserialization is implemented by the <xref href=\"SuperOffice.Messaging.Messages.SoMessageSerializer\" data-throw-if-not-resolved=\"false\"></xref> base class.\n"
  syntax:
    content: 'public interface ISoMessageSerializer : IPlugin'
    content.vb: >-
      Public Interface ISoMessageSerializer
          Inherits IPlugin
  extensionMethods:
  - SuperOffice.Messaging.Messages.ISoMessageSerializer.EnumUtil.MapEnums``2
  - SuperOffice.Messaging.Messages.ISoMessageSerializer.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.Messaging.Messages.ISoMessageSerializer.Deserialize(System.Byte[])
  commentId: M:SuperOffice.Messaging.Messages.ISoMessageSerializer.Deserialize(System.Byte[])
  id: Deserialize(System.Byte[])
  parent: SuperOffice.Messaging.Messages.ISoMessageSerializer
  langs:
  - csharp
  - vb
  name: Deserialize(Byte[])
  nameWithType: ISoMessageSerializer.Deserialize(Byte[])
  fullName: SuperOffice.Messaging.Messages.ISoMessageSerializer.Deserialize(System.Byte[])
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Messaging.Messages
  summary: "\nDe-serialize a raw message recieved over the network.\n"
  syntax:
    content: SoMessageHeader Deserialize(byte[] rawMessage)
    parameters:
    - id: rawMessage
      type: System.Byte[]
      description: Byte array forming message to de-serialize
    return:
      type: SuperOffice.Messaging.Messages.SoMessageHeader
      description: De-serialized message.
    content.vb: Function Deserialize(rawMessage As Byte()) As SoMessageHeader
  overload: SuperOffice.Messaging.Messages.ISoMessageSerializer.Deserialize*
  nameWithType.vb: ISoMessageSerializer.Deserialize(Byte())
  fullName.vb: SuperOffice.Messaging.Messages.ISoMessageSerializer.Deserialize(System.Byte())
  name.vb: Deserialize(Byte())
- uid: SuperOffice.Messaging.Messages.ISoMessageSerializer.Serialize(SuperOffice.Messaging.Messages.SoMessageHeader)
  commentId: M:SuperOffice.Messaging.Messages.ISoMessageSerializer.Serialize(SuperOffice.Messaging.Messages.SoMessageHeader)
  id: Serialize(SuperOffice.Messaging.Messages.SoMessageHeader)
  parent: SuperOffice.Messaging.Messages.ISoMessageSerializer
  langs:
  - csharp
  - vb
  name: Serialize(SoMessageHeader)
  nameWithType: ISoMessageSerializer.Serialize(SoMessageHeader)
  fullName: SuperOffice.Messaging.Messages.ISoMessageSerializer.Serialize(SuperOffice.Messaging.Messages.SoMessageHeader)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Messaging.Messages
  summary: "\nSerialize a message to a byte array so it can be sent over the network.\n"
  syntax:
    content: byte[] Serialize(SoMessageHeader message)
    parameters:
    - id: message
      type: SuperOffice.Messaging.Messages.SoMessageHeader
      description: Message to serialize.
    return:
      type: System.Byte[]
      description: Byte array forming the message to be sent over the network.
    content.vb: Function Serialize(message As SoMessageHeader) As Byte()
  overload: SuperOffice.Messaging.Messages.ISoMessageSerializer.Serialize*
references:
- uid: SuperOffice.Messaging.Messages
  commentId: N:SuperOffice.Messaging.Messages
  isExternal: true
  name: SuperOffice.Messaging.Messages
  nameWithType: SuperOffice.Messaging.Messages
  fullName: SuperOffice.Messaging.Messages
- uid: SuperOffice.Messaging.Messages.ISoMessageSerializer.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<ISoMessageSerializer, To>()
  nameWithType: EnumUtil.MapEnums<ISoMessageSerializer, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Messaging.Messages.ISoMessageSerializer, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of ISoMessageSerializer, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Messaging.Messages.ISoMessageSerializer, To)()
  name.vb: MapEnums(Of ISoMessageSerializer, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<ISoMessageSerializer, To>
    nameWithType: EnumUtil.MapEnums<ISoMessageSerializer, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Messaging.Messages.ISoMessageSerializer, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of ISoMessageSerializer, To)
    nameWithType: EnumUtil.MapEnums(Of ISoMessageSerializer, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Messaging.Messages.ISoMessageSerializer, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Messaging.Messages.ISoMessageSerializer.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<ISoMessageSerializer, To>()
  nameWithType: Converters.MapEnums<ISoMessageSerializer, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Messaging.Messages.ISoMessageSerializer, To>()
  nameWithType.vb: Converters.MapEnums(Of ISoMessageSerializer, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Messaging.Messages.ISoMessageSerializer, To)()
  name.vb: MapEnums(Of ISoMessageSerializer, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<ISoMessageSerializer, To>
    nameWithType: Converters.MapEnums<ISoMessageSerializer, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Messaging.Messages.ISoMessageSerializer, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of ISoMessageSerializer, To)
    nameWithType: Converters.MapEnums(Of ISoMessageSerializer, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Messaging.Messages.ISoMessageSerializer, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Messaging.Messages.ISoMessageSerializer.Deserialize*
  commentId: Overload:SuperOffice.Messaging.Messages.ISoMessageSerializer.Deserialize
  isExternal: true
  name: Deserialize
  nameWithType: ISoMessageSerializer.Deserialize
  fullName: SuperOffice.Messaging.Messages.ISoMessageSerializer.Deserialize
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.Messaging.Messages.SoMessageHeader
  commentId: T:SuperOffice.Messaging.Messages.SoMessageHeader
  parent: SuperOffice.Messaging.Messages
  isExternal: true
  name: SoMessageHeader
  nameWithType: SoMessageHeader
  fullName: SuperOffice.Messaging.Messages.SoMessageHeader
- uid: SuperOffice.Messaging.Messages.ISoMessageSerializer.Serialize*
  commentId: Overload:SuperOffice.Messaging.Messages.ISoMessageSerializer.Serialize
  isExternal: true
  name: Serialize
  nameWithType: ISoMessageSerializer.Serialize
  fullName: SuperOffice.Messaging.Messages.ISoMessageSerializer.Serialize
